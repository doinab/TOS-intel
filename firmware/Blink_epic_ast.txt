[Log] Preprocessed input file.
FileAST:  (at None)
  Typedef: name='ptrdiff_t', quals=[], storage=['typedef'] (at pp.c:7)
    TypeDecl: declname='ptrdiff_t', quals=[] (at pp.c:7)
      IdentifierType: names=['int'] (at None)
  Typedef: name='size_t', quals=[], storage=['typedef'] (at pp.c:9)
    TypeDecl: declname='size_t', quals=[] (at pp.c:9)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='wchar_t', quals=[], storage=['typedef'] (at pp.c:11)
    TypeDecl: declname='wchar_t', quals=[] (at pp.c:11)
      IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:13)
    Struct: name='__nesc_attr_nonnull', packed=False (at pp.c:13)
      Decl: name='dummy', quals=[], storage=[] (at 0)
        TypeDecl: declname='dummy', quals=[] (at pp.c:15)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:18)
    Struct: name='__nesc_attr_bnd', packed=False (at pp.c:18)
      Decl: name='lo', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:20)
          TypeDecl: declname='lo', quals=[] (at pp.c:20)
            IdentifierType: names=['void'] (at None)
      Decl: name='hi', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:20)
          TypeDecl: declname='hi', quals=[] (at pp.c:20)
            IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:23)
    Struct: name='__nesc_attr_bnd_nok', packed=False (at pp.c:23)
      Decl: name='lo', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:25)
          TypeDecl: declname='lo', quals=[] (at pp.c:25)
            IdentifierType: names=['void'] (at None)
      Decl: name='hi', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:25)
          TypeDecl: declname='hi', quals=[] (at pp.c:25)
            IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:28)
    Struct: name='__nesc_attr_count', packed=False (at pp.c:28)
      Decl: name='n', quals=[], storage=[] (at 0)
        TypeDecl: declname='n', quals=[] (at pp.c:30)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:33)
    Struct: name='__nesc_attr_count_nok', packed=False (at pp.c:33)
      Decl: name='n', quals=[], storage=[] (at 0)
        TypeDecl: declname='n', quals=[] (at pp.c:35)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:38)
    Struct: name='__nesc_attr_one', packed=False (at pp.c:38)
      Decl: name='dummy', quals=[], storage=[] (at 0)
        TypeDecl: declname='dummy', quals=[] (at pp.c:40)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:43)
    Struct: name='__nesc_attr_one_nok', packed=False (at pp.c:43)
      Decl: name='dummy', quals=[], storage=[] (at 0)
        TypeDecl: declname='dummy', quals=[] (at pp.c:45)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:48)
    Struct: name='__nesc_attr_dmemset', packed=False (at pp.c:48)
      Decl: name='a1', quals=[], storage=[] (at 0)
        TypeDecl: declname='a1', quals=[] (at pp.c:50)
          IdentifierType: names=['int'] (at None)
      Decl: name='a2', quals=[], storage=[] (at 0)
        TypeDecl: declname='a2', quals=[] (at pp.c:50)
          IdentifierType: names=['int'] (at None)
      Decl: name='a3', quals=[], storage=[] (at 0)
        TypeDecl: declname='a3', quals=[] (at pp.c:50)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:53)
    Struct: name='__nesc_attr_dmemcpy', packed=False (at pp.c:53)
      Decl: name='a1', quals=[], storage=[] (at 0)
        TypeDecl: declname='a1', quals=[] (at pp.c:55)
          IdentifierType: names=['int'] (at None)
      Decl: name='a2', quals=[], storage=[] (at 0)
        TypeDecl: declname='a2', quals=[] (at pp.c:55)
          IdentifierType: names=['int'] (at None)
      Decl: name='a3', quals=[], storage=[] (at 0)
        TypeDecl: declname='a3', quals=[] (at pp.c:55)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:58)
    Struct: name='__nesc_attr_nts', packed=False (at pp.c:58)
      Decl: name='dummy', quals=[], storage=[] (at 0)
        TypeDecl: declname='dummy', quals=[] (at pp.c:60)
          IdentifierType: names=['int'] (at None)
  Typedef: name='int8_t', quals=[], storage=['typedef'] (at pp.c:63)
    TypeDecl: declname='int8_t', quals=[] (at pp.c:63)
      IdentifierType: names=['char', 'signed'] (at None)
  Typedef: name='uint8_t', quals=[], storage=['typedef'] (at pp.c:64)
    TypeDecl: declname='uint8_t', quals=[] (at pp.c:64)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Typedef: name='int16_t', quals=[], storage=['typedef'] (at pp.c:66)
    TypeDecl: declname='int16_t', quals=[] (at pp.c:66)
      IdentifierType: names=['int'] (at None)
  Typedef: name='uint16_t', quals=[], storage=['typedef'] (at pp.c:67)
    TypeDecl: declname='uint16_t', quals=[] (at pp.c:67)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='int32_t', quals=[], storage=['typedef'] (at pp.c:69)
    TypeDecl: declname='int32_t', quals=[] (at pp.c:69)
      IdentifierType: names=['long'] (at None)
  Typedef: name='uint32_t', quals=[], storage=['typedef'] (at pp.c:70)
    TypeDecl: declname='uint32_t', quals=[] (at pp.c:70)
      IdentifierType: names=['long', 'unsigned'] (at None)
  Typedef: name='int64_t', quals=[], storage=['typedef'] (at pp.c:72)
    TypeDecl: declname='int64_t', quals=[] (at pp.c:72)
      IdentifierType: names=['long', 'long'] (at None)
  Typedef: name='uint64_t', quals=[], storage=['typedef'] (at pp.c:73)
    TypeDecl: declname='uint64_t', quals=[] (at pp.c:73)
      IdentifierType: names=['long', 'long', 'unsigned'] (at None)
  Typedef: name='intptr_t', quals=[], storage=['typedef'] (at pp.c:78)
    TypeDecl: declname='intptr_t', quals=[] (at pp.c:78)
      IdentifierType: names=['int16_t'] (at None)
  Typedef: name='uintptr_t', quals=[], storage=['typedef'] (at pp.c:79)
    TypeDecl: declname='uintptr_t', quals=[] (at pp.c:79)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='nx_int8_t', quals=[], storage=['typedef'] (at pp.c:81)
    TypeDecl: declname='nx_int8_t', quals=[] (at pp.c:81)
      Struct: name=None, packed=False (at pp.c:81)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:81)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:81)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='1' (at pp.c:81)
  Typedef: name='__nesc_nxbase_nx_int8_t', quals=[], storage=['typedef'] (at pp.c:81)
    TypeDecl: declname='__nesc_nxbase_nx_int8_t', quals=[] (at pp.c:81)
      IdentifierType: names=['int8_t'] (at None)
  Typedef: name='nx_int16_t', quals=[], storage=['typedef'] (at pp.c:82)
    TypeDecl: declname='nx_int16_t', quals=[] (at pp.c:82)
      Struct: name=None, packed=False (at pp.c:82)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:82)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:82)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='2' (at pp.c:82)
  Typedef: name='__nesc_nxbase_nx_int16_t', quals=[], storage=['typedef'] (at pp.c:82)
    TypeDecl: declname='__nesc_nxbase_nx_int16_t', quals=[] (at pp.c:82)
      IdentifierType: names=['int16_t'] (at None)
  Typedef: name='nx_int32_t', quals=[], storage=['typedef'] (at pp.c:83)
    TypeDecl: declname='nx_int32_t', quals=[] (at pp.c:83)
      Struct: name=None, packed=False (at pp.c:83)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:83)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:83)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='4' (at pp.c:83)
  Typedef: name='__nesc_nxbase_nx_int32_t', quals=[], storage=['typedef'] (at pp.c:83)
    TypeDecl: declname='__nesc_nxbase_nx_int32_t', quals=[] (at pp.c:83)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='nx_int64_t', quals=[], storage=['typedef'] (at pp.c:84)
    TypeDecl: declname='nx_int64_t', quals=[] (at pp.c:84)
      Struct: name=None, packed=False (at pp.c:84)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:84)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:84)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='8' (at pp.c:84)
  Typedef: name='__nesc_nxbase_nx_int64_t', quals=[], storage=['typedef'] (at pp.c:84)
    TypeDecl: declname='__nesc_nxbase_nx_int64_t', quals=[] (at pp.c:84)
      IdentifierType: names=['int64_t'] (at None)
  Typedef: name='nx_uint8_t', quals=[], storage=['typedef'] (at pp.c:85)
    TypeDecl: declname='nx_uint8_t', quals=[] (at pp.c:85)
      Struct: name=None, packed=False (at pp.c:85)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:85)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:85)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='1' (at pp.c:85)
  Typedef: name='__nesc_nxbase_nx_uint8_t', quals=[], storage=['typedef'] (at pp.c:85)
    TypeDecl: declname='__nesc_nxbase_nx_uint8_t', quals=[] (at pp.c:85)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='nx_uint16_t', quals=[], storage=['typedef'] (at pp.c:86)
    TypeDecl: declname='nx_uint16_t', quals=[] (at pp.c:86)
      Struct: name=None, packed=False (at pp.c:86)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:86)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:86)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='2' (at pp.c:86)
  Typedef: name='__nesc_nxbase_nx_uint16_t', quals=[], storage=['typedef'] (at pp.c:86)
    TypeDecl: declname='__nesc_nxbase_nx_uint16_t', quals=[] (at pp.c:86)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='nx_uint32_t', quals=[], storage=['typedef'] (at pp.c:87)
    TypeDecl: declname='nx_uint32_t', quals=[] (at pp.c:87)
      Struct: name=None, packed=False (at pp.c:87)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:87)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:87)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='4' (at pp.c:87)
  Typedef: name='__nesc_nxbase_nx_uint32_t', quals=[], storage=['typedef'] (at pp.c:87)
    TypeDecl: declname='__nesc_nxbase_nx_uint32_t', quals=[] (at pp.c:87)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='nx_uint64_t', quals=[], storage=['typedef'] (at pp.c:88)
    TypeDecl: declname='nx_uint64_t', quals=[] (at pp.c:88)
      Struct: name=None, packed=False (at pp.c:88)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:88)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:88)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='8' (at pp.c:88)
  Typedef: name='__nesc_nxbase_nx_uint64_t', quals=[], storage=['typedef'] (at pp.c:88)
    TypeDecl: declname='__nesc_nxbase_nx_uint64_t', quals=[] (at pp.c:88)
      IdentifierType: names=['uint64_t'] (at None)
  Typedef: name='nxle_int8_t', quals=[], storage=['typedef'] (at pp.c:91)
    TypeDecl: declname='nxle_int8_t', quals=[] (at pp.c:91)
      Struct: name=None, packed=False (at pp.c:91)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:91)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:91)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='1' (at pp.c:91)
  Typedef: name='__nesc_nxbase_nxle_int8_t', quals=[], storage=['typedef'] (at pp.c:91)
    TypeDecl: declname='__nesc_nxbase_nxle_int8_t', quals=[] (at pp.c:91)
      IdentifierType: names=['int8_t'] (at None)
  Typedef: name='nxle_int16_t', quals=[], storage=['typedef'] (at pp.c:92)
    TypeDecl: declname='nxle_int16_t', quals=[] (at pp.c:92)
      Struct: name=None, packed=False (at pp.c:92)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:92)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:92)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='2' (at pp.c:92)
  Typedef: name='__nesc_nxbase_nxle_int16_t', quals=[], storage=['typedef'] (at pp.c:92)
    TypeDecl: declname='__nesc_nxbase_nxle_int16_t', quals=[] (at pp.c:92)
      IdentifierType: names=['int16_t'] (at None)
  Typedef: name='nxle_int32_t', quals=[], storage=['typedef'] (at pp.c:93)
    TypeDecl: declname='nxle_int32_t', quals=[] (at pp.c:93)
      Struct: name=None, packed=False (at pp.c:93)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:93)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:93)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='4' (at pp.c:93)
  Typedef: name='__nesc_nxbase_nxle_int32_t', quals=[], storage=['typedef'] (at pp.c:93)
    TypeDecl: declname='__nesc_nxbase_nxle_int32_t', quals=[] (at pp.c:93)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='nxle_int64_t', quals=[], storage=['typedef'] (at pp.c:94)
    TypeDecl: declname='nxle_int64_t', quals=[] (at pp.c:94)
      Struct: name=None, packed=False (at pp.c:94)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:94)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:94)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='8' (at pp.c:94)
  Typedef: name='__nesc_nxbase_nxle_int64_t', quals=[], storage=['typedef'] (at pp.c:94)
    TypeDecl: declname='__nesc_nxbase_nxle_int64_t', quals=[] (at pp.c:94)
      IdentifierType: names=['int64_t'] (at None)
  Typedef: name='nxle_uint8_t', quals=[], storage=['typedef'] (at pp.c:95)
    TypeDecl: declname='nxle_uint8_t', quals=[] (at pp.c:95)
      Struct: name=None, packed=False (at pp.c:95)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:95)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:95)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='1' (at pp.c:95)
  Typedef: name='__nesc_nxbase_nxle_uint8_t', quals=[], storage=['typedef'] (at pp.c:95)
    TypeDecl: declname='__nesc_nxbase_nxle_uint8_t', quals=[] (at pp.c:95)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='nxle_uint16_t', quals=[], storage=['typedef'] (at pp.c:96)
    TypeDecl: declname='nxle_uint16_t', quals=[] (at pp.c:96)
      Struct: name=None, packed=False (at pp.c:96)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:96)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:96)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='2' (at pp.c:96)
  Typedef: name='__nesc_nxbase_nxle_uint16_t', quals=[], storage=['typedef'] (at pp.c:96)
    TypeDecl: declname='__nesc_nxbase_nxle_uint16_t', quals=[] (at pp.c:96)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='nxle_uint32_t', quals=[], storage=['typedef'] (at pp.c:97)
    TypeDecl: declname='nxle_uint32_t', quals=[] (at pp.c:97)
      Struct: name=None, packed=False (at pp.c:97)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:97)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:97)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='4' (at pp.c:97)
  Typedef: name='__nesc_nxbase_nxle_uint32_t', quals=[], storage=['typedef'] (at pp.c:97)
    TypeDecl: declname='__nesc_nxbase_nxle_uint32_t', quals=[] (at pp.c:97)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='nxle_uint64_t', quals=[], storage=['typedef'] (at pp.c:98)
    TypeDecl: declname='nxle_uint64_t', quals=[] (at pp.c:98)
      Struct: name=None, packed=False (at pp.c:98)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:98)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:98)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='8' (at pp.c:98)
  Typedef: name='__nesc_nxbase_nxle_uint64_t', quals=[], storage=['typedef'] (at pp.c:98)
    TypeDecl: declname='__nesc_nxbase_nxle_uint64_t', quals=[] (at pp.c:98)
      IdentifierType: names=['uint64_t'] (at None)
  Typedef: name='u_char', quals=[], storage=['typedef'] (at pp.c:100)
    TypeDecl: declname='u_char', quals=[] (at pp.c:100)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Typedef: name='u_short', quals=[], storage=['typedef'] (at pp.c:101)
    TypeDecl: declname='u_short', quals=[] (at pp.c:101)
      IdentifierType: names=['short', 'unsigned'] (at None)
  Typedef: name='u_int', quals=[], storage=['typedef'] (at pp.c:102)
    TypeDecl: declname='u_int', quals=[] (at pp.c:102)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='u_long', quals=[], storage=['typedef'] (at pp.c:103)
    TypeDecl: declname='u_long', quals=[] (at pp.c:103)
      IdentifierType: names=['long', 'unsigned'] (at None)
  Typedef: name='ushort', quals=[], storage=['typedef'] (at pp.c:104)
    TypeDecl: declname='ushort', quals=[] (at pp.c:104)
      IdentifierType: names=['short', 'unsigned'] (at None)
  Typedef: name='uint', quals=[], storage=['typedef'] (at pp.c:105)
    TypeDecl: declname='uint', quals=[] (at pp.c:105)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='u_int8_t', quals=[], storage=['typedef'] (at pp.c:107)
    TypeDecl: declname='u_int8_t', quals=[] (at pp.c:107)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='u_int16_t', quals=[], storage=['typedef'] (at pp.c:108)
    TypeDecl: declname='u_int16_t', quals=[] (at pp.c:108)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='u_int32_t', quals=[], storage=['typedef'] (at pp.c:109)
    TypeDecl: declname='u_int32_t', quals=[] (at pp.c:109)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='u_int64_t', quals=[], storage=['typedef'] (at pp.c:110)
    TypeDecl: declname='u_int64_t', quals=[] (at pp.c:110)
      IdentifierType: names=['uint64_t'] (at None)
  Typedef: name='u_quad_t', quals=[], storage=['typedef'] (at pp.c:112)
    TypeDecl: declname='u_quad_t', quals=[] (at pp.c:112)
      IdentifierType: names=['u_int64_t'] (at None)
  Typedef: name='quad_t', quals=[], storage=['typedef'] (at pp.c:113)
    TypeDecl: declname='quad_t', quals=[] (at pp.c:113)
      IdentifierType: names=['int64_t'] (at None)
  Typedef: name='qaddr_t', quals=[], storage=['typedef'] (at pp.c:114)
    PtrDecl: quals=[] (at pp.c:114)
      TypeDecl: declname='qaddr_t', quals=[] (at pp.c:114)
        IdentifierType: names=['quad_t'] (at None)
  Typedef: name='caddr_t', quals=[], storage=['typedef'] (at pp.c:116)
    PtrDecl: quals=[] (at pp.c:116)
      TypeDecl: declname='caddr_t', quals=[] (at pp.c:116)
        IdentifierType: names=['char'] (at None)
  Typedef: name='c_caddr_t', quals=['const'], storage=['typedef'] (at pp.c:117)
    PtrDecl: quals=[] (at pp.c:117)
      TypeDecl: declname='c_caddr_t', quals=['const'] (at pp.c:117)
        IdentifierType: names=['char'] (at None)
  Typedef: name='v_caddr_t', quals=['volatile'], storage=['typedef'] (at pp.c:118)
    PtrDecl: quals=[] (at pp.c:118)
      TypeDecl: declname='v_caddr_t', quals=['volatile'] (at pp.c:118)
        IdentifierType: names=['char'] (at None)
  Typedef: name='fixpt_t', quals=[], storage=['typedef'] (at pp.c:119)
    TypeDecl: declname='fixpt_t', quals=[] (at pp.c:119)
      IdentifierType: names=['u_int32_t'] (at None)
  Typedef: name='gid_t', quals=[], storage=['typedef'] (at pp.c:120)
    TypeDecl: declname='gid_t', quals=[] (at pp.c:120)
      IdentifierType: names=['u_int32_t'] (at None)
  Typedef: name='in_addr_t', quals=[], storage=['typedef'] (at pp.c:121)
    TypeDecl: declname='in_addr_t', quals=[] (at pp.c:121)
      IdentifierType: names=['u_int32_t'] (at None)
  Typedef: name='in_port_t', quals=[], storage=['typedef'] (at pp.c:122)
    TypeDecl: declname='in_port_t', quals=[] (at pp.c:122)
      IdentifierType: names=['u_int16_t'] (at None)
  Typedef: name='ino_t', quals=[], storage=['typedef'] (at pp.c:123)
    TypeDecl: declname='ino_t', quals=[] (at pp.c:123)
      IdentifierType: names=['u_int32_t'] (at None)
  Typedef: name='key_t', quals=[], storage=['typedef'] (at pp.c:124)
    TypeDecl: declname='key_t', quals=[] (at pp.c:124)
      IdentifierType: names=['long'] (at None)
  Typedef: name='mode_t', quals=[], storage=['typedef'] (at pp.c:125)
    TypeDecl: declname='mode_t', quals=[] (at pp.c:125)
      IdentifierType: names=['u_int16_t'] (at None)
  Typedef: name='nlink_t', quals=[], storage=['typedef'] (at pp.c:126)
    TypeDecl: declname='nlink_t', quals=[] (at pp.c:126)
      IdentifierType: names=['u_int16_t'] (at None)
  Typedef: name='rlim_t', quals=[], storage=['typedef'] (at pp.c:127)
    TypeDecl: declname='rlim_t', quals=[] (at pp.c:127)
      IdentifierType: names=['quad_t'] (at None)
  Typedef: name='segsz_t', quals=[], storage=['typedef'] (at pp.c:128)
    TypeDecl: declname='segsz_t', quals=[] (at pp.c:128)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='swblk_t', quals=[], storage=['typedef'] (at pp.c:129)
    TypeDecl: declname='swblk_t', quals=[] (at pp.c:129)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='ufs_daddr_t', quals=[], storage=['typedef'] (at pp.c:130)
    TypeDecl: declname='ufs_daddr_t', quals=[] (at pp.c:130)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='ufs_time_t', quals=[], storage=['typedef'] (at pp.c:131)
    TypeDecl: declname='ufs_time_t', quals=[] (at pp.c:131)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='uid_t', quals=[], storage=['typedef'] (at pp.c:132)
    TypeDecl: declname='uid_t', quals=[] (at pp.c:132)
      IdentifierType: names=['u_int32_t'] (at None)
  Decl: name='memset', quals=[], storage=['extern'] (at pp.c:134)
    FuncDecl: quals=None (at pp.c:134)
      ParamList:  (at pp.c:134)
        Decl: name='arg_0x100748980', quals=[], storage=[] (at pp.c:134)
          PtrDecl: quals=[] (at pp.c:134)
            TypeDecl: declname='arg_0x100748980', quals=[] (at pp.c:134)
              IdentifierType: names=['void'] (at None)
        Decl: name='arg_0x100748be8', quals=[], storage=[] (at pp.c:134)
          TypeDecl: declname='arg_0x100748be8', quals=[] (at pp.c:134)
            IdentifierType: names=['int'] (at None)
        Decl: name='arg_0x10074e020', quals=[], storage=[] (at pp.c:134)
          TypeDecl: declname='arg_0x10074e020', quals=[] (at pp.c:134)
            IdentifierType: names=['size_t'] (at None)
      PtrDecl: quals=[] (at pp.c:134)
        TypeDecl: declname='memset', quals=[] (at pp.c:134)
          IdentifierType: names=['void'] (at None)
  Decl: name='memset', quals=[], storage=['extern'] (at pp.c:136)
    FuncDecl: quals=None (at pp.c:136)
      ParamList:  (at pp.c:136)
        Decl: name='arg_0x100761b10', quals=[], storage=[] (at pp.c:136)
          PtrDecl: quals=[] (at pp.c:136)
            TypeDecl: declname='arg_0x100761b10', quals=[] (at pp.c:136)
              IdentifierType: names=['void'] (at None)
        Decl: name='arg_0x100761d78', quals=[], storage=[] (at pp.c:136)
          TypeDecl: declname='arg_0x100761d78', quals=[] (at pp.c:136)
            IdentifierType: names=['int'] (at None)
        Decl: name='arg_0x100767060', quals=[], storage=[] (at pp.c:136)
          TypeDecl: declname='arg_0x100767060', quals=[] (at pp.c:136)
            IdentifierType: names=['size_t'] (at None)
      PtrDecl: quals=[] (at pp.c:136)
        TypeDecl: declname='memset', quals=[] (at pp.c:136)
          IdentifierType: names=['void'] (at None)
  Typedef: name='div_t', quals=[], storage=['typedef'] (at pp.c:142)
    TypeDecl: declname='div_t', quals=[] (at pp.c:142)
      Struct: name='__nesc_unnamed4242', packed=False (at pp.c:139)
        Decl: name='quot', quals=[], storage=[] (at 0)
          TypeDecl: declname='quot', quals=[] (at pp.c:140)
            IdentifierType: names=['int'] (at None)
        Decl: name='rem', quals=[], storage=[] (at 0)
          TypeDecl: declname='rem', quals=[] (at pp.c:141)
            IdentifierType: names=['int'] (at None)
  Typedef: name='ldiv_t', quals=[], storage=['typedef'] (at pp.c:154)
    TypeDecl: declname='ldiv_t', quals=[] (at pp.c:154)
      Struct: name='__nesc_unnamed4243', packed=False (at pp.c:151)
        Decl: name='quot', quals=[], storage=[] (at 0)
          TypeDecl: declname='quot', quals=[] (at pp.c:152)
            IdentifierType: names=['long'] (at None)
        Decl: name='rem', quals=[], storage=[] (at 0)
          TypeDecl: declname='rem', quals=[] (at pp.c:153)
            IdentifierType: names=['long'] (at None)
  Typedef: name='__int32_t', quals=[], storage=['typedef'] (at pp.c:156)
    TypeDecl: declname='__int32_t', quals=[] (at pp.c:156)
      IdentifierType: names=['int', 'long'] (at None)
  Typedef: name='__uint32_t', quals=[], storage=['typedef'] (at pp.c:157)
    TypeDecl: declname='__uint32_t', quals=[] (at pp.c:157)
      IdentifierType: names=['int', 'long', 'unsigned'] (at None)
  Typedef: name='_off_t', quals=[], storage=['typedef'] (at pp.c:159)
    TypeDecl: declname='_off_t', quals=[] (at pp.c:159)
      IdentifierType: names=['long'] (at None)
  Typedef: name='_ssize_t', quals=[], storage=['typedef'] (at pp.c:160)
    TypeDecl: declname='_ssize_t', quals=[] (at pp.c:160)
      IdentifierType: names=['long'] (at None)
  Typedef: name='__ULong', quals=[], storage=['typedef'] (at pp.c:162)
    TypeDecl: declname='__ULong', quals=[] (at pp.c:162)
      IdentifierType: names=['__uint32_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:165)
    Struct: name='_glue', packed=False (at pp.c:165)
      Decl: name='_next', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:167)
          TypeDecl: declname='_next', quals=[] (at pp.c:167)
            Struct: name='_glue', packed=False (at pp.c:167)
      Decl: name='_niobs', quals=[], storage=[] (at 0)
        TypeDecl: declname='_niobs', quals=[] (at pp.c:168)
          IdentifierType: names=['int'] (at None)
      Decl: name='_iobs', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:169)
          TypeDecl: declname='_iobs', quals=[] (at pp.c:169)
            Struct: name='__sFILE', packed=False (at pp.c:169)
  Decl: name=None, quals=[], storage=[] (at pp.c:172)
    Struct: name='_Bigint', packed=False (at pp.c:172)
      Decl: name='_next', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:174)
          TypeDecl: declname='_next', quals=[] (at pp.c:174)
            Struct: name='_Bigint', packed=False (at pp.c:174)
      Decl: name='_k', quals=[], storage=[] (at 0)
        TypeDecl: declname='_k', quals=[] (at pp.c:175)
          IdentifierType: names=['int'] (at None)
      Decl: name='_maxwds', quals=[], storage=[] (at 0)
        TypeDecl: declname='_maxwds', quals=[] (at pp.c:175)
          IdentifierType: names=['int'] (at None)
      Decl: name='_sign', quals=[], storage=[] (at 0)
        TypeDecl: declname='_sign', quals=[] (at pp.c:175)
          IdentifierType: names=['int'] (at None)
      Decl: name='_wds', quals=[], storage=[] (at 0)
        TypeDecl: declname='_wds', quals=[] (at pp.c:175)
          IdentifierType: names=['int'] (at None)
      Decl: name='_x', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:176)
          TypeDecl: declname='_x', quals=[] (at pp.c:176)
            IdentifierType: names=['__ULong'] (at None)
          Constant: type='int', value='1' (at pp.c:176)
  Decl: name=None, quals=[], storage=[] (at pp.c:180)
    Struct: name='__tm', packed=False (at pp.c:180)
      Decl: name='__tm_sec', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_sec', quals=[] (at pp.c:182)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_min', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_min', quals=[] (at pp.c:183)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_hour', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_hour', quals=[] (at pp.c:184)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_mday', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_mday', quals=[] (at pp.c:185)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_mon', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_mon', quals=[] (at pp.c:186)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_year', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_year', quals=[] (at pp.c:187)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_wday', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_wday', quals=[] (at pp.c:188)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_yday', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_yday', quals=[] (at pp.c:189)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_isdst', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_isdst', quals=[] (at pp.c:190)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:199)
    Struct: name='_atexit', packed=False (at pp.c:199)
      Decl: name='_next', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:200)
          TypeDecl: declname='_next', quals=[] (at pp.c:200)
            Struct: name='_atexit', packed=False (at pp.c:200)
      Decl: name='_ind', quals=[], storage=[] (at 0)
        TypeDecl: declname='_ind', quals=[] (at pp.c:201)
          IdentifierType: names=['int'] (at None)
      Decl: name='_fns', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:202)
          PtrDecl: quals=[] (at pp.c:202)
            FuncDecl: quals=None (at pp.c:202)
              ParamList:  (at None)
                Typename: quals=[] (at None)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['void'] (at None)
              TypeDecl: declname='_fns', quals=[] (at pp.c:202)
                IdentifierType: names=['void'] (at None)
          Constant: type='int', value='32' (at pp.c:202)
  Decl: name=None, quals=[], storage=[] (at pp.c:212)
    Struct: name='__sbuf', packed=False (at pp.c:212)
      Decl: name='_base', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:213)
          TypeDecl: declname='_base', quals=[] (at pp.c:213)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='_size', quals=[], storage=[] (at 0)
        TypeDecl: declname='_size', quals=[] (at pp.c:214)
          IdentifierType: names=['int'] (at None)
  Typedef: name='_fpos_t', quals=[], storage=['typedef'] (at pp.c:222)
    TypeDecl: declname='_fpos_t', quals=[] (at pp.c:222)
      IdentifierType: names=['long'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:224)
    Struct: name='__sFILE', packed=False (at pp.c:224)
      Decl: name='_p', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:225)
          TypeDecl: declname='_p', quals=[] (at pp.c:225)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='_r', quals=[], storage=[] (at 0)
        TypeDecl: declname='_r', quals=[] (at pp.c:226)
          IdentifierType: names=['int'] (at None)
      Decl: name='_w', quals=[], storage=[] (at 0)
        TypeDecl: declname='_w', quals=[] (at pp.c:227)
          IdentifierType: names=['int'] (at None)
      Decl: name='_flags', quals=[], storage=[] (at 0)
        TypeDecl: declname='_flags', quals=[] (at pp.c:228)
          IdentifierType: names=['short'] (at None)
      Decl: name='_file', quals=[], storage=[] (at 0)
        TypeDecl: declname='_file', quals=[] (at pp.c:229)
          IdentifierType: names=['short'] (at None)
      Decl: name='_bf', quals=[], storage=[] (at 0)
        TypeDecl: declname='_bf', quals=[] (at pp.c:230)
          Struct: name='__sbuf', packed=False (at pp.c:230)
      Decl: name='_lbfsize', quals=[], storage=[] (at 0)
        TypeDecl: declname='_lbfsize', quals=[] (at pp.c:231)
          IdentifierType: names=['int'] (at None)
      Decl: name='_cookie', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:234)
          TypeDecl: declname='_cookie', quals=[] (at pp.c:234)
            IdentifierType: names=['void'] (at None)
      Decl: name='_read', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:236)
          FuncDecl: quals=None (at pp.c:236)
            ParamList:  (at pp.c:236)
              Decl: name='_cookie', quals=[], storage=[] (at pp.c:236)
                PtrDecl: quals=[] (at pp.c:236)
                  TypeDecl: declname='_cookie', quals=[] (at pp.c:236)
                    IdentifierType: names=['void'] (at None)
              Decl: name='_buf', quals=[], storage=[] (at pp.c:236)
                PtrDecl: quals=[] (at pp.c:236)
                  TypeDecl: declname='_buf', quals=[] (at pp.c:236)
                    IdentifierType: names=['char'] (at None)
              Decl: name='_n', quals=[], storage=[] (at pp.c:236)
                TypeDecl: declname='_n', quals=[] (at pp.c:236)
                  IdentifierType: names=['int'] (at None)
            TypeDecl: declname='_read', quals=[] (at pp.c:236)
              IdentifierType: names=['int'] (at None)
      Decl: name='_write', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:237)
          FuncDecl: quals=None (at pp.c:237)
            ParamList:  (at pp.c:237)
              Decl: name='_cookie', quals=[], storage=[] (at pp.c:237)
                PtrDecl: quals=[] (at pp.c:237)
                  TypeDecl: declname='_cookie', quals=[] (at pp.c:237)
                    IdentifierType: names=['void'] (at None)
              Decl: name='_buf', quals=['const'], storage=[] (at pp.c:237)
                PtrDecl: quals=[] (at pp.c:237)
                  TypeDecl: declname='_buf', quals=['const'] (at pp.c:237)
                    IdentifierType: names=['char'] (at None)
              Decl: name='_n', quals=[], storage=[] (at pp.c:237)
                TypeDecl: declname='_n', quals=[] (at pp.c:237)
                  IdentifierType: names=['int'] (at None)
            TypeDecl: declname='_write', quals=[] (at pp.c:237)
              IdentifierType: names=['int'] (at None)
      Decl: name='_seek', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:239)
          FuncDecl: quals=None (at pp.c:239)
            ParamList:  (at pp.c:239)
              Decl: name='_cookie', quals=[], storage=[] (at pp.c:239)
                PtrDecl: quals=[] (at pp.c:239)
                  TypeDecl: declname='_cookie', quals=[] (at pp.c:239)
                    IdentifierType: names=['void'] (at None)
              Decl: name='_offset', quals=[], storage=[] (at pp.c:239)
                TypeDecl: declname='_offset', quals=[] (at pp.c:239)
                  IdentifierType: names=['_fpos_t'] (at None)
              Decl: name='_whence', quals=[], storage=[] (at pp.c:239)
                TypeDecl: declname='_whence', quals=[] (at pp.c:239)
                  IdentifierType: names=['int'] (at None)
            TypeDecl: declname='_seek', quals=[] (at pp.c:239)
              IdentifierType: names=['_fpos_t'] (at None)
      Decl: name='_close', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:240)
          FuncDecl: quals=None (at pp.c:240)
            ParamList:  (at pp.c:240)
              Decl: name='_cookie', quals=[], storage=[] (at pp.c:240)
                PtrDecl: quals=[] (at pp.c:240)
                  TypeDecl: declname='_cookie', quals=[] (at pp.c:240)
                    IdentifierType: names=['void'] (at None)
            TypeDecl: declname='_close', quals=[] (at pp.c:240)
              IdentifierType: names=['int'] (at None)
      Decl: name='_ub', quals=[], storage=[] (at 0)
        TypeDecl: declname='_ub', quals=[] (at pp.c:243)
          Struct: name='__sbuf', packed=False (at pp.c:243)
      Decl: name='_up', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:244)
          TypeDecl: declname='_up', quals=[] (at pp.c:244)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='_ur', quals=[], storage=[] (at 0)
        TypeDecl: declname='_ur', quals=[] (at pp.c:245)
          IdentifierType: names=['int'] (at None)
      Decl: name='_ubuf', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:248)
          TypeDecl: declname='_ubuf', quals=[] (at pp.c:248)
            IdentifierType: names=['char', 'unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:248)
      Decl: name='_nbuf', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:249)
          TypeDecl: declname='_nbuf', quals=[] (at pp.c:249)
            IdentifierType: names=['char', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:249)
      Decl: name='_lb', quals=[], storage=[] (at 0)
        TypeDecl: declname='_lb', quals=[] (at pp.c:252)
          Struct: name='__sbuf', packed=False (at pp.c:252)
      Decl: name='_blksize', quals=[], storage=[] (at 0)
        TypeDecl: declname='_blksize', quals=[] (at pp.c:255)
          IdentifierType: names=['int'] (at None)
      Decl: name='_offset', quals=[], storage=[] (at 0)
        TypeDecl: declname='_offset', quals=[] (at pp.c:256)
          IdentifierType: names=['int'] (at None)
      Decl: name='_data', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:258)
          TypeDecl: declname='_data', quals=[] (at pp.c:258)
            Struct: name='_reent', packed=False (at pp.c:258)
  Decl: name=None, quals=[], storage=[] (at pp.c:261)
    Struct: name='_rand48', packed=False (at pp.c:261)
      Decl: name='_seed', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:262)
          TypeDecl: declname='_seed', quals=[] (at pp.c:262)
            IdentifierType: names=['short', 'unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:262)
      Decl: name='_mult', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:263)
          TypeDecl: declname='_mult', quals=[] (at pp.c:263)
            IdentifierType: names=['short', 'unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:263)
      Decl: name='_add', quals=[], storage=[] (at 0)
        TypeDecl: declname='_add', quals=[] (at pp.c:264)
          IdentifierType: names=['short', 'unsigned'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:275)
    Struct: name='_reent', packed=False (at pp.c:275)
      Decl: name='_errno', quals=[], storage=[] (at 0)
        TypeDecl: declname='_errno', quals=[] (at pp.c:278)
          IdentifierType: names=['int'] (at None)
      Decl: name='_stdin', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:283)
          TypeDecl: declname='_stdin', quals=[] (at pp.c:283)
            Struct: name='__sFILE', packed=False (at pp.c:283)
      Decl: name='_stdout', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:283)
          TypeDecl: declname='_stdout', quals=[] (at pp.c:283)
            Struct: name='__sFILE', packed=False (at pp.c:283)
      Decl: name='_stderr', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:283)
          TypeDecl: declname='_stderr', quals=[] (at pp.c:283)
            Struct: name='__sFILE', packed=False (at pp.c:283)
      Decl: name='_inc', quals=[], storage=[] (at 0)
        TypeDecl: declname='_inc', quals=[] (at pp.c:285)
          IdentifierType: names=['int'] (at None)
      Decl: name='_emergency', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:286)
          TypeDecl: declname='_emergency', quals=[] (at pp.c:286)
            IdentifierType: names=['char'] (at None)
          Constant: type='int', value='25' (at pp.c:286)
      Decl: name='_current_category', quals=[], storage=[] (at 0)
        TypeDecl: declname='_current_category', quals=[] (at pp.c:288)
          IdentifierType: names=['int'] (at None)
      Decl: name='_current_locale', quals=['const'], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:289)
          TypeDecl: declname='_current_locale', quals=['const'] (at pp.c:289)
            IdentifierType: names=['char'] (at None)
      Decl: name='__sdidinit', quals=[], storage=[] (at 0)
        TypeDecl: declname='__sdidinit', quals=[] (at pp.c:291)
          IdentifierType: names=['int'] (at None)
      Decl: name='__cleanup', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:293)
          FuncDecl: quals=None (at pp.c:293)
            ParamList:  (at pp.c:293)
              Decl: name='arg_0x10079c0c8', quals=[], storage=[] (at pp.c:293)
                PtrDecl: quals=[] (at pp.c:293)
                  TypeDecl: declname='arg_0x10079c0c8', quals=[] (at pp.c:293)
                    Struct: name='_reent', packed=False (at pp.c:293)
            TypeDecl: declname='__cleanup', quals=[] (at pp.c:293)
              IdentifierType: names=['void'] (at None)
      Decl: name='_result', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:296)
          TypeDecl: declname='_result', quals=[] (at pp.c:296)
            Struct: name='_Bigint', packed=False (at pp.c:296)
      Decl: name='_result_k', quals=[], storage=[] (at 0)
        TypeDecl: declname='_result_k', quals=[] (at pp.c:297)
          IdentifierType: names=['int'] (at None)
      Decl: name='_p5s', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:298)
          TypeDecl: declname='_p5s', quals=[] (at pp.c:298)
            Struct: name='_Bigint', packed=False (at pp.c:298)
      Decl: name='_freelist', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:299)
          PtrDecl: quals=[] (at pp.c:299)
            TypeDecl: declname='_freelist', quals=[] (at pp.c:299)
              Struct: name='_Bigint', packed=False (at pp.c:299)
      Decl: name='_cvtlen', quals=[], storage=[] (at 0)
        TypeDecl: declname='_cvtlen', quals=[] (at pp.c:302)
          IdentifierType: names=['int'] (at None)
      Decl: name='_cvtbuf', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:303)
          TypeDecl: declname='_cvtbuf', quals=[] (at pp.c:303)
            IdentifierType: names=['char'] (at None)
      Decl: name='_new', quals=[], storage=[] (at 0)
        TypeDecl: declname='_new', quals=[] (at pp.c:326)
          Union: name='__nesc_unnamed4244', packed=False (at pp.c:305)
            Decl: name='_reent', quals=[], storage=[] (at 0)
              TypeDecl: declname='_reent', quals=[] (at pp.c:316)
                Struct: name='__nesc_unnamed4245', packed=False (at pp.c:307)
                  Decl: name='_unused_rand', quals=[], storage=[] (at 0)
                    TypeDecl: declname='_unused_rand', quals=[] (at pp.c:309)
                      IdentifierType: names=['int', 'unsigned'] (at None)
                  Decl: name='_strtok_last', quals=[], storage=[] (at 0)
                    PtrDecl: quals=[] (at pp.c:310)
                      TypeDecl: declname='_strtok_last', quals=[] (at pp.c:310)
                        IdentifierType: names=['char'] (at None)
                  Decl: name='_asctime_buf', quals=[], storage=[] (at 0)
                    ArrayDecl:  (at pp.c:311)
                      TypeDecl: declname='_asctime_buf', quals=[] (at pp.c:311)
                        IdentifierType: names=['char'] (at None)
                      Constant: type='int', value='26' (at pp.c:311)
                  Decl: name='_localtime_buf', quals=[], storage=[] (at 0)
                    TypeDecl: declname='_localtime_buf', quals=[] (at pp.c:312)
                      Struct: name='__tm', packed=False (at pp.c:312)
                  Decl: name='_gamma_signgam', quals=[], storage=[] (at 0)
                    TypeDecl: declname='_gamma_signgam', quals=[] (at pp.c:313)
                      IdentifierType: names=['int'] (at None)
                  Decl: name='_rand_next', quals=[], storage=[] (at 0)
                    TypeDecl: declname='_rand_next', quals=[] (at pp.c:314)
                      IdentifierType: names=['long', 'long', 'unsigned'] (at None)
                  Decl: name='_r48', quals=[], storage=[] (at 0)
                    TypeDecl: declname='_r48', quals=[] (at pp.c:315)
                      Struct: name='_rand48', packed=False (at pp.c:315)
            Decl: name='_unused', quals=[], storage=[] (at 0)
              TypeDecl: declname='_unused', quals=[] (at pp.c:325)
                Struct: name='__nesc_unnamed4246', packed=False (at pp.c:320)
                  Decl: name='_nextf', quals=[], storage=[] (at 0)
                    ArrayDecl:  (at pp.c:323)
                      PtrDecl: quals=[] (at pp.c:323)
                        TypeDecl: declname='_nextf', quals=[] (at pp.c:323)
                          IdentifierType: names=['char', 'unsigned'] (at None)
                      Constant: type='int', value='30' (at pp.c:323)
                  Decl: name='_nmalloc', quals=[], storage=[] (at 0)
                    ArrayDecl:  (at pp.c:324)
                      TypeDecl: declname='_nmalloc', quals=[] (at pp.c:324)
                        IdentifierType: names=['int', 'unsigned'] (at None)
                      Constant: type='int', value='30' (at pp.c:324)
      Decl: name='_atexit', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:329)
          TypeDecl: declname='_atexit', quals=[] (at pp.c:329)
            Struct: name='_atexit', packed=False (at pp.c:329)
      Decl: name='_atexit0', quals=[], storage=[] (at 0)
        TypeDecl: declname='_atexit0', quals=[] (at pp.c:330)
          Struct: name='_atexit', packed=False (at pp.c:330)
      Decl: name='_sig_func', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:333)
          PtrDecl: quals=[] (at pp.c:333)
            FuncDecl: quals=None (at pp.c:333)
              ParamList:  (at pp.c:333)
                Decl: name='arg_0x10079f180', quals=[], storage=[] (at pp.c:333)
                  TypeDecl: declname='arg_0x10079f180', quals=[] (at pp.c:333)
                    IdentifierType: names=['int'] (at None)
              TypeDecl: declname='_sig_func', quals=[] (at pp.c:333)
                IdentifierType: names=['void'] (at None)
      Decl: name='__sglue', quals=[], storage=[] (at 0)
        TypeDecl: declname='__sglue', quals=[] (at pp.c:338)
          Struct: name='_glue', packed=False (at pp.c:338)
      Decl: name='__sf', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:339)
          TypeDecl: declname='__sf', quals=[] (at pp.c:339)
            Struct: name='__sFILE', packed=False (at pp.c:339)
          Constant: type='int', value='3' (at pp.c:339)
  Decl: name=None, quals=[], storage=[] (at pp.c:342)
    Struct: name='_reent', packed=False (at pp.c:342)
  Decl: name=None, quals=[], storage=[] (at pp.c:344)
    Union: name='__dmath', packed=False (at pp.c:344)
      Decl: name='i', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:346)
          TypeDecl: declname='i', quals=[] (at pp.c:346)
            IdentifierType: names=['__uint32_t'] (at None)
          Constant: type='int', value='2' (at pp.c:346)
      Decl: name='d', quals=[], storage=[] (at 0)
        TypeDecl: declname='d', quals=[] (at pp.c:347)
          IdentifierType: names=['double'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:353)
    Union: name='__dmath', packed=False (at pp.c:353)
  Decl: name=None, quals=[], storage=[] (at pp.c:355)
    Struct: name='exception', packed=False (at pp.c:355)
      Decl: name='type', quals=[], storage=[] (at 0)
        TypeDecl: declname='type', quals=[] (at pp.c:358)
          IdentifierType: names=['int'] (at None)
      Decl: name='name', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:359)
          TypeDecl: declname='name', quals=[] (at pp.c:359)
            IdentifierType: names=['char'] (at None)
      Decl: name='arg1', quals=[], storage=[] (at 0)
        TypeDecl: declname='arg1', quals=[] (at pp.c:360)
          IdentifierType: names=['double'] (at None)
      Decl: name='arg2', quals=[], storage=[] (at 0)
        TypeDecl: declname='arg2', quals=[] (at pp.c:361)
          IdentifierType: names=['double'] (at None)
      Decl: name='retval', quals=[], storage=[] (at 0)
        TypeDecl: declname='retval', quals=[] (at pp.c:362)
          IdentifierType: names=['double'] (at None)
      Decl: name='err', quals=[], storage=[] (at 0)
        TypeDecl: declname='err', quals=[] (at pp.c:363)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:366)
    Enum: name='__fdlibm_version' (at pp.c:366)
      EnumeratorList:  (at pp.c:368)
        Enumerator: name='__fdlibm_ieee' (at pp.c:368)
          UnaryOp: op='-' (at pp.c:368)
            Constant: type='int', value='1' (at pp.c:368)
        Enumerator: name='__fdlibm_svid' (at pp.c:369)
        Enumerator: name='__fdlibm_xopen' (at pp.c:370)
        Enumerator: name='__fdlibm_posix' (at pp.c:371)
  Decl: name=None, quals=[], storage=[] (at pp.c:377)
    Enum: name='__fdlibm_version' (at pp.c:377)
  Typedef: name='bool', quals=[], storage=['typedef'] (at pp.c:379)
    TypeDecl: declname='bool', quals=[] (at pp.c:379)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:380)
    Enum: name='__nesc_unnamed4247' (at pp.c:380)
      EnumeratorList:  (at pp.c:382)
        Enumerator: name='FALSE' (at pp.c:382)
          Constant: type='int', value='0' (at pp.c:382)
        Enumerator: name='TRUE' (at pp.c:382)
          Constant: type='int', value='1' (at pp.c:382)
  Typedef: name='nx_bool', quals=[], storage=['typedef'] (at pp.c:384)
    TypeDecl: declname='nx_bool', quals=[] (at pp.c:384)
      IdentifierType: names=['nx_int8_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:392)
    Struct: name='__nesc_attr_atmostonce', packed=False (at pp.c:392)
  Decl: name=None, quals=[], storage=[] (at pp.c:395)
    Struct: name='__nesc_attr_atleastonce', packed=False (at pp.c:395)
  Decl: name=None, quals=[], storage=[] (at pp.c:398)
    Struct: name='__nesc_attr_exactlyonce', packed=False (at pp.c:398)
  Decl: name=None, quals=[], storage=[] (at pp.c:401)
    Enum: name='__nesc_unnamed4248' (at pp.c:401)
      EnumeratorList:  (at pp.c:402)
        Enumerator: name='SUCCESS' (at pp.c:402)
          Constant: type='int', value='0' (at pp.c:402)
        Enumerator: name='FAIL' (at pp.c:403)
          Constant: type='int', value='1' (at pp.c:403)
        Enumerator: name='ESIZE' (at pp.c:404)
          Constant: type='int', value='2' (at pp.c:404)
        Enumerator: name='ECANCEL' (at pp.c:405)
          Constant: type='int', value='3' (at pp.c:405)
        Enumerator: name='EOFF' (at pp.c:406)
          Constant: type='int', value='4' (at pp.c:406)
        Enumerator: name='EBUSY' (at pp.c:407)
          Constant: type='int', value='5' (at pp.c:407)
        Enumerator: name='EINVAL' (at pp.c:408)
          Constant: type='int', value='6' (at pp.c:408)
        Enumerator: name='ERETRY' (at pp.c:409)
          Constant: type='int', value='7' (at pp.c:409)
        Enumerator: name='ERESERVE' (at pp.c:410)
          Constant: type='int', value='8' (at pp.c:410)
        Enumerator: name='EALREADY' (at pp.c:411)
          Constant: type='int', value='9' (at pp.c:411)
        Enumerator: name='ENOMEM' (at pp.c:412)
          Constant: type='int', value='10' (at pp.c:412)
        Enumerator: name='ENOACK' (at pp.c:413)
          Constant: type='int', value='11' (at pp.c:413)
        Enumerator: name='ELAST' (at pp.c:414)
          Constant: type='int', value='11' (at pp.c:414)
  Typedef: name='error_t', quals=[], storage=['typedef'] (at pp.c:417)
    TypeDecl: declname='error_t', quals=[] (at pp.c:417)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='ioregister_t', quals=[], storage=['typedef'] (at pp.c:432)
    TypeDecl: declname='ioregister_t', quals=[] (at pp.c:432)
      Union: name='port', packed=True (at pp.c:420)
        Decl: name='reg_p', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='reg_p', quals=['volatile'] (at pp.c:421)
            IdentifierType: names=['char', 'unsigned'] (at None)
        Decl: name='__pin', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='__pin', quals=['volatile'] (at pp.c:431)
            Struct: name='__nesc_unnamed4249', packed=False (at pp.c:422)
              Decl: name='__p0', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p0', quals=[] (at pp.c:423)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:423)
              Decl: name='__p1', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p1', quals=[] (at pp.c:424)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:424)
              Decl: name='__p2', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p2', quals=[] (at pp.c:425)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:425)
              Decl: name='__p3', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p3', quals=[] (at pp.c:426)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:426)
              Decl: name='__p4', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p4', quals=[] (at pp.c:427)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:427)
              Decl: name='__p5', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p5', quals=[] (at pp.c:428)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:428)
              Decl: name='__p6', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p6', quals=[] (at pp.c:429)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:429)
              Decl: name='__p7', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p7', quals=[] (at pp.c:430)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:430)
  Decl: name=None, quals=[], storage=[] (at pp.c:434)
    Struct: name='port_full_t', packed=False (at pp.c:434)
      Decl: name='in', quals=[], storage=[] (at 0)
        TypeDecl: declname='in', quals=[] (at pp.c:435)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='out', quals=[], storage=[] (at 0)
        TypeDecl: declname='out', quals=[] (at pp.c:436)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='dir', quals=[], storage=[] (at 0)
        TypeDecl: declname='dir', quals=[] (at pp.c:437)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='ifg', quals=[], storage=[] (at 0)
        TypeDecl: declname='ifg', quals=[] (at pp.c:438)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='ies', quals=[], storage=[] (at 0)
        TypeDecl: declname='ies', quals=[] (at pp.c:439)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='ie', quals=[], storage=[] (at 0)
        TypeDecl: declname='ie', quals=[] (at pp.c:440)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='sel', quals=[], storage=[] (at 0)
        TypeDecl: declname='sel', quals=[] (at pp.c:441)
          IdentifierType: names=['ioregister_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:452)
    Struct: name='port_simple_t', packed=False (at pp.c:452)
      Decl: name='in', quals=[], storage=[] (at 0)
        TypeDecl: declname='in', quals=[] (at pp.c:453)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='out', quals=[], storage=[] (at 0)
        TypeDecl: declname='out', quals=[] (at pp.c:454)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='dir', quals=[], storage=[] (at 0)
        TypeDecl: declname='dir', quals=[] (at pp.c:455)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='sel', quals=[], storage=[] (at 0)
        TypeDecl: declname='sel', quals=[] (at pp.c:456)
          IdentifierType: names=['ioregister_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:462)
    Struct: name='port_full_t', packed=False (at pp.c:462)
  Decl: name=None, quals=[], storage=[] (at pp.c:466)
    Struct: name='port_full_t', packed=False (at pp.c:466)
  Decl: name=None, quals=[], storage=[] (at pp.c:470)
    Struct: name='port_simple_t', packed=False (at pp.c:470)
  Decl: name=None, quals=[], storage=[] (at pp.c:474)
    Struct: name='port_simple_t', packed=False (at pp.c:474)
  Decl: name=None, quals=[], storage=[] (at pp.c:478)
    Struct: name='port_simple_t', packed=False (at pp.c:478)
  Decl: name=None, quals=[], storage=[] (at pp.c:482)
    Struct: name='port_simple_t', packed=False (at pp.c:482)
  Decl: name='P1OUT@"0x0021"', quals=['volatile'], storage=[] (at pp.c:484)
    TypeDecl: declname='P1OUT@"0x0021"', quals=['volatile'] (at pp.c:484)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P1DIR@"0x0022"', quals=['volatile'], storage=[] (at pp.c:486)
    TypeDecl: declname='P1DIR@"0x0022"', quals=['volatile'] (at pp.c:486)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P1IE@"0x0025"', quals=['volatile'], storage=[] (at pp.c:492)
    TypeDecl: declname='P1IE@"0x0025"', quals=['volatile'] (at pp.c:492)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P1SEL@"0x0026"', quals=['volatile'], storage=[] (at pp.c:494)
    TypeDecl: declname='P1SEL@"0x0026"', quals=['volatile'] (at pp.c:494)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P2OUT@"0x0029"', quals=['volatile'], storage=[] (at pp.c:505)
    TypeDecl: declname='P2OUT@"0x0029"', quals=['volatile'] (at pp.c:505)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P2DIR@"0x002A"', quals=['volatile'], storage=[] (at pp.c:507)
    TypeDecl: declname='P2DIR@"0x002A"', quals=['volatile'] (at pp.c:507)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P2IE@"0x002D"', quals=['volatile'], storage=[] (at pp.c:513)
    TypeDecl: declname='P2IE@"0x002D"', quals=['volatile'] (at pp.c:513)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P2SEL@"0x002E"', quals=['volatile'], storage=[] (at pp.c:515)
    TypeDecl: declname='P2SEL@"0x002E"', quals=['volatile'] (at pp.c:515)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P3OUT@"0x0019"', quals=['volatile'], storage=[] (at pp.c:526)
    TypeDecl: declname='P3OUT@"0x0019"', quals=['volatile'] (at pp.c:526)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P3DIR@"0x001A"', quals=['volatile'], storage=[] (at pp.c:528)
    TypeDecl: declname='P3DIR@"0x001A"', quals=['volatile'] (at pp.c:528)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P3SEL@"0x001B"', quals=['volatile'], storage=[] (at pp.c:530)
    TypeDecl: declname='P3SEL@"0x001B"', quals=['volatile'] (at pp.c:530)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P4OUT@"0x001D"', quals=['volatile'], storage=[] (at pp.c:541)
    TypeDecl: declname='P4OUT@"0x001D"', quals=['volatile'] (at pp.c:541)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P4DIR@"0x001E"', quals=['volatile'], storage=[] (at pp.c:543)
    TypeDecl: declname='P4DIR@"0x001E"', quals=['volatile'] (at pp.c:543)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P4SEL@"0x001F"', quals=['volatile'], storage=[] (at pp.c:545)
    TypeDecl: declname='P4SEL@"0x001F"', quals=['volatile'] (at pp.c:545)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P5OUT@"0x0031"', quals=['volatile'], storage=[] (at pp.c:556)
    TypeDecl: declname='P5OUT@"0x0031"', quals=['volatile'] (at pp.c:556)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P5DIR@"0x0032"', quals=['volatile'], storage=[] (at pp.c:558)
    TypeDecl: declname='P5DIR@"0x0032"', quals=['volatile'] (at pp.c:558)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P5SEL@"0x0033"', quals=['volatile'], storage=[] (at pp.c:560)
    TypeDecl: declname='P5SEL@"0x0033"', quals=['volatile'] (at pp.c:560)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P6OUT@"0x0035"', quals=['volatile'], storage=[] (at pp.c:571)
    TypeDecl: declname='P6OUT@"0x0035"', quals=['volatile'] (at pp.c:571)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P6DIR@"0x0036"', quals=['volatile'], storage=[] (at pp.c:573)
    TypeDecl: declname='P6DIR@"0x0036"', quals=['volatile'] (at pp.c:573)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P6SEL@"0x0037"', quals=['volatile'], storage=[] (at pp.c:575)
    TypeDecl: declname='P6SEL@"0x0037"', quals=['volatile'] (at pp.c:575)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U0TCTL@"0x0071"', quals=['volatile'], storage=[] (at pp.c:577)
    TypeDecl: declname='U0TCTL@"0x0071"', quals=['volatile'] (at pp.c:577)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U1TCTL@"0x0079"', quals=['volatile'], storage=[] (at pp.c:579)
    TypeDecl: declname='U1TCTL@"0x0079"', quals=['volatile'] (at pp.c:579)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='TA0CTL@"0x0160"', quals=['volatile'], storage=[] (at pp.c:581)
    TypeDecl: declname='TA0CTL@"0x0160"', quals=['volatile'] (at pp.c:581)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TA0R@"0x0170"', quals=['volatile'], storage=[] (at pp.c:583)
    TypeDecl: declname='TA0R@"0x0170"', quals=['volatile'] (at pp.c:583)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TA0CCTL0@"0x0162"', quals=['volatile'], storage=[] (at pp.c:586)
    TypeDecl: declname='TA0CCTL0@"0x0162"', quals=['volatile'] (at pp.c:586)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TA0CCTL1@"0x0164"', quals=['volatile'], storage=[] (at pp.c:588)
    TypeDecl: declname='TA0CCTL1@"0x0164"', quals=['volatile'] (at pp.c:588)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TA0CCTL2@"0x0166"', quals=['volatile'], storage=[] (at pp.c:590)
    TypeDecl: declname='TA0CCTL2@"0x0166"', quals=['volatile'] (at pp.c:590)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='tactl_t', quals=[], storage=['typedef'] (at pp.c:602)
    TypeDecl: declname='tactl_t', quals=[] (at pp.c:602)
      Struct: name='__nesc_unnamed4250', packed=True (at pp.c:593)
        Decl: name='taifg', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='taifg', quals=['volatile'] (at pp.c:595)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:595)
        Decl: name='taie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='taie', quals=['volatile'] (at pp.c:596)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:596)
        Decl: name='taclr', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='taclr', quals=['volatile'] (at pp.c:597)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:597)
        Decl: name='dummy', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='dummy', quals=['volatile'] (at pp.c:598)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:598)
        Decl: name='tamc', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tamc', quals=['volatile'] (at pp.c:599)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:599)
        Decl: name='taid', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='taid', quals=['volatile'] (at pp.c:600)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:600)
        Decl: name='tassel', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tassel', quals=['volatile'] (at pp.c:601)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:601)
  Typedef: name='tacctl_t', quals=[], storage=['typedef'] (at pp.c:619)
    TypeDecl: declname='tacctl_t', quals=[] (at pp.c:619)
      Struct: name='__nesc_unnamed4251', packed=True (at pp.c:605)
        Decl: name='ccifg', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccifg', quals=['volatile'] (at pp.c:607)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:607)
        Decl: name='cov', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cov', quals=['volatile'] (at pp.c:608)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:608)
        Decl: name='out', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='out', quals=['volatile'] (at pp.c:609)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:609)
        Decl: name='cci', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cci', quals=['volatile'] (at pp.c:610)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:610)
        Decl: name='ccie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccie', quals=['volatile'] (at pp.c:611)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:611)
        Decl: name='outmod', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='outmod', quals=['volatile'] (at pp.c:612)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:612)
        Decl: name='cap', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cap', quals=['volatile'] (at pp.c:613)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:613)
        Decl: name='dummy', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='dummy', quals=['volatile'] (at pp.c:614)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:614)
        Decl: name='scci', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='scci', quals=['volatile'] (at pp.c:615)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:615)
        Decl: name='scs', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='scs', quals=['volatile'] (at pp.c:616)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:616)
        Decl: name='ccis', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccis', quals=['volatile'] (at pp.c:617)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:617)
        Decl: name='cm', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cm', quals=['volatile'] (at pp.c:618)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:618)
  Decl: name=None, quals=[], storage=[] (at pp.c:622)
    Struct: name='timera_t', packed=False (at pp.c:622)
      Decl: name='ctl', quals=[], storage=[] (at 0)
        TypeDecl: declname='ctl', quals=[] (at pp.c:623)
          IdentifierType: names=['tactl_t'] (at None)
      Decl: name='cctl0', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl0', quals=[] (at pp.c:624)
          IdentifierType: names=['tacctl_t'] (at None)
      Decl: name='cctl1', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl1', quals=[] (at pp.c:625)
          IdentifierType: names=['tacctl_t'] (at None)
      Decl: name='cctl2', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl2', quals=[] (at pp.c:626)
          IdentifierType: names=['tacctl_t'] (at None)
      Decl: name='dummy', quals=['volatile'], storage=[] (at 0)
        ArrayDecl:  (at pp.c:627)
          TypeDecl: declname='dummy', quals=['volatile'] (at pp.c:627)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:627)
      Decl: name='tar', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tar', quals=['volatile'] (at pp.c:628)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='taccr0', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='taccr0', quals=['volatile'] (at pp.c:629)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='taccr1', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='taccr1', quals=['volatile'] (at pp.c:630)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='taccr2', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='taccr2', quals=['volatile'] (at pp.c:631)
          IdentifierType: names=['unsigned'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:636)
    Struct: name='timera_t', packed=False (at pp.c:636)
  Decl: name='TBR@"0x0190"', quals=['volatile'], storage=[] (at pp.c:638)
    TypeDecl: declname='TBR@"0x0190"', quals=['volatile'] (at pp.c:638)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TBCCTL0@"0x0182"', quals=['volatile'], storage=[] (at pp.c:641)
    TypeDecl: declname='TBCCTL0@"0x0182"', quals=['volatile'] (at pp.c:641)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TBCCR0@"0x0192"', quals=['volatile'], storage=[] (at pp.c:647)
    TypeDecl: declname='TBCCR0@"0x0192"', quals=['volatile'] (at pp.c:647)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='tbctl_t', quals=[], storage=['typedef'] (at pp.c:662)
    TypeDecl: declname='tbctl_t', quals=[] (at pp.c:662)
      Struct: name='__nesc_unnamed4252', packed=True (at pp.c:650)
        Decl: name='tbifg', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbifg', quals=['volatile'] (at pp.c:652)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:652)
        Decl: name='tbie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbie', quals=['volatile'] (at pp.c:653)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:653)
        Decl: name='tbclr', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbclr', quals=['volatile'] (at pp.c:654)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:654)
        Decl: name='dummy1', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='dummy1', quals=['volatile'] (at pp.c:655)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:655)
        Decl: name='tbmc', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbmc', quals=['volatile'] (at pp.c:656)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:656)
        Decl: name='tbid', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbid', quals=['volatile'] (at pp.c:657)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:657)
        Decl: name='tbssel', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbssel', quals=['volatile'] (at pp.c:658)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:658)
        Decl: name='dummy2', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='dummy2', quals=['volatile'] (at pp.c:659)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:659)
        Decl: name='tbcntl', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbcntl', quals=['volatile'] (at pp.c:660)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:660)
        Decl: name='tbclgrp', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbclgrp', quals=['volatile'] (at pp.c:661)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:661)
  Typedef: name='tbcctl_t', quals=[], storage=['typedef'] (at pp.c:678)
    TypeDecl: declname='tbcctl_t', quals=[] (at pp.c:678)
      Struct: name='__nesc_unnamed4253', packed=True (at pp.c:665)
        Decl: name='ccifg', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccifg', quals=['volatile'] (at pp.c:667)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:667)
        Decl: name='cov', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cov', quals=['volatile'] (at pp.c:668)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:668)
        Decl: name='out', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='out', quals=['volatile'] (at pp.c:669)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:669)
        Decl: name='cci', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cci', quals=['volatile'] (at pp.c:670)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:670)
        Decl: name='ccie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccie', quals=['volatile'] (at pp.c:671)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:671)
        Decl: name='outmod', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='outmod', quals=['volatile'] (at pp.c:672)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:672)
        Decl: name='cap', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cap', quals=['volatile'] (at pp.c:673)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:673)
        Decl: name='clld', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='clld', quals=['volatile'] (at pp.c:674)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:674)
        Decl: name='scs', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='scs', quals=['volatile'] (at pp.c:675)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:675)
        Decl: name='ccis', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccis', quals=['volatile'] (at pp.c:676)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:676)
        Decl: name='cm', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cm', quals=['volatile'] (at pp.c:677)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:677)
  Decl: name=None, quals=[], storage=[] (at pp.c:681)
    Struct: name='timerb_t', packed=False (at pp.c:681)
      Decl: name='ctl', quals=[], storage=[] (at 0)
        TypeDecl: declname='ctl', quals=[] (at pp.c:682)
          IdentifierType: names=['tbctl_t'] (at None)
      Decl: name='cctl0', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl0', quals=[] (at pp.c:683)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl1', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl1', quals=[] (at pp.c:684)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl2', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl2', quals=[] (at pp.c:685)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl3', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl3', quals=[] (at pp.c:687)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl4', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl4', quals=[] (at pp.c:688)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl5', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl5', quals=[] (at pp.c:689)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl6', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl6', quals=[] (at pp.c:690)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='tbr', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbr', quals=['volatile'] (at pp.c:694)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr0', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr0', quals=['volatile'] (at pp.c:695)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr1', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr1', quals=['volatile'] (at pp.c:696)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr2', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr2', quals=['volatile'] (at pp.c:697)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr3', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr3', quals=['volatile'] (at pp.c:699)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr4', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr4', quals=['volatile'] (at pp.c:700)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr5', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr5', quals=['volatile'] (at pp.c:701)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr6', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr6', quals=['volatile'] (at pp.c:702)
          IdentifierType: names=['unsigned'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:709)
    Struct: name='timerb_t', packed=False (at pp.c:709)
  Decl: name='DCOCTL@"0x0056"', quals=['volatile'], storage=[] (at pp.c:711)
    TypeDecl: declname='DCOCTL@"0x0056"', quals=['volatile'] (at pp.c:711)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='BCSCTL1@"0x0057"', quals=['volatile'], storage=[] (at pp.c:713)
    TypeDecl: declname='BCSCTL1@"0x0057"', quals=['volatile'] (at pp.c:713)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='BCSCTL2@"0x0058"', quals=['volatile'], storage=[] (at pp.c:715)
    TypeDecl: declname='BCSCTL2@"0x0058"', quals=['volatile'] (at pp.c:715)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='ADC12CTL0@"0x01A0"', quals=['volatile'], storage=[] (at pp.c:717)
    TypeDecl: declname='ADC12CTL0@"0x01A0"', quals=['volatile'] (at pp.c:717)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='ADC12CTL1@"0x01A2"', quals=['volatile'], storage=[] (at pp.c:719)
    TypeDecl: declname='ADC12CTL1@"0x01A2"', quals=['volatile'] (at pp.c:719)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='adc12ctl0_t', quals=[], storage=['typedef'] (at pp.c:734)
    TypeDecl: declname='adc12ctl0_t', quals=[] (at pp.c:734)
      Struct: name='__nesc_unnamed4254', packed=True (at pp.c:722)
        Decl: name='adc12sc', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12sc', quals=['volatile'] (at pp.c:724)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:724)
        Decl: name='enc', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='enc', quals=['volatile'] (at pp.c:725)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:725)
        Decl: name='adc12tovie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12tovie', quals=['volatile'] (at pp.c:726)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:726)
        Decl: name='adc12ovie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12ovie', quals=['volatile'] (at pp.c:727)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:727)
        Decl: name='adc12on', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12on', quals=['volatile'] (at pp.c:728)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:728)
        Decl: name='refon', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='refon', quals=['volatile'] (at pp.c:729)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:729)
        Decl: name='r2_5v', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='r2_5v', quals=['volatile'] (at pp.c:730)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:730)
        Decl: name='msc', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='msc', quals=['volatile'] (at pp.c:731)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:731)
        Decl: name='sht0', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='sht0', quals=['volatile'] (at pp.c:732)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:732)
        Decl: name='sht1', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='sht1', quals=['volatile'] (at pp.c:733)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:733)
  Typedef: name='adc12ctl1_t', quals=[], storage=['typedef'] (at pp.c:747)
    TypeDecl: declname='adc12ctl1_t', quals=[] (at pp.c:747)
      Struct: name='__nesc_unnamed4255', packed=True (at pp.c:737)
        Decl: name='adc12busy', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12busy', quals=['volatile'] (at pp.c:739)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:739)
        Decl: name='conseq', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='conseq', quals=['volatile'] (at pp.c:740)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:740)
        Decl: name='adc12ssel', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12ssel', quals=['volatile'] (at pp.c:741)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:741)
        Decl: name='adc12div', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12div', quals=['volatile'] (at pp.c:742)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:742)
        Decl: name='issh', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='issh', quals=['volatile'] (at pp.c:743)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:743)
        Decl: name='shp', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='shp', quals=['volatile'] (at pp.c:744)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:744)
        Decl: name='shs', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='shs', quals=['volatile'] (at pp.c:745)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:745)
        Decl: name='cstartadd', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cstartadd', quals=['volatile'] (at pp.c:746)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:746)
  Typedef: name='adc12xflg_t', quals=[], storage=['typedef'] (at pp.c:768)
    TypeDecl: declname='adc12xflg_t', quals=[] (at pp.c:768)
      Struct: name='__nesc_unnamed4256', packed=True (at pp.c:750)
        Decl: name='bit0', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit0', quals=['volatile'] (at pp.c:752)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:752)
        Decl: name='bit1', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit1', quals=['volatile'] (at pp.c:753)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:753)
        Decl: name='bit2', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit2', quals=['volatile'] (at pp.c:754)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:754)
        Decl: name='bit3', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit3', quals=['volatile'] (at pp.c:755)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:755)
        Decl: name='bit4', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit4', quals=['volatile'] (at pp.c:756)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:756)
        Decl: name='bit5', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit5', quals=['volatile'] (at pp.c:757)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:757)
        Decl: name='bit6', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit6', quals=['volatile'] (at pp.c:758)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:758)
        Decl: name='bit7', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit7', quals=['volatile'] (at pp.c:759)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:759)
        Decl: name='bit8', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit8', quals=['volatile'] (at pp.c:760)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:760)
        Decl: name='bit9', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit9', quals=['volatile'] (at pp.c:761)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:761)
        Decl: name='bit10', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit10', quals=['volatile'] (at pp.c:762)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:762)
        Decl: name='bit11', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit11', quals=['volatile'] (at pp.c:763)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:763)
        Decl: name='bit12', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit12', quals=['volatile'] (at pp.c:764)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:764)
        Decl: name='bit13', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit13', quals=['volatile'] (at pp.c:765)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:765)
        Decl: name='bit14', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit14', quals=['volatile'] (at pp.c:766)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:766)
        Decl: name='bit15', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit15', quals=['volatile'] (at pp.c:767)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:767)
  Decl: name=None, quals=[], storage=[] (at pp.c:771)
    Struct: name='adc12_t', packed=False (at pp.c:771)
      Decl: name='ctl0', quals=[], storage=[] (at 0)
        TypeDecl: declname='ctl0', quals=[] (at pp.c:772)
          IdentifierType: names=['adc12ctl0_t'] (at None)
      Decl: name='ctl1', quals=[], storage=[] (at 0)
        TypeDecl: declname='ctl1', quals=[] (at pp.c:773)
          IdentifierType: names=['adc12ctl1_t'] (at None)
      Decl: name='ifg', quals=[], storage=[] (at 0)
        TypeDecl: declname='ifg', quals=[] (at pp.c:774)
          IdentifierType: names=['adc12xflg_t'] (at None)
      Decl: name='ie', quals=[], storage=[] (at 0)
        TypeDecl: declname='ie', quals=[] (at pp.c:775)
          IdentifierType: names=['adc12xflg_t'] (at None)
      Decl: name='iv', quals=[], storage=[] (at 0)
        TypeDecl: declname='iv', quals=[] (at pp.c:776)
          IdentifierType: names=['adc12xflg_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:782)
    Struct: name='adc12_t', packed=False (at pp.c:782)
  Decl: name='ME1@"0x0004"', quals=['volatile'], storage=[] (at pp.c:784)
    TypeDecl: declname='ME1@"0x0004"', quals=['volatile'] (at pp.c:784)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='ME2@"0x0005"', quals=['volatile'], storage=[] (at pp.c:790)
    TypeDecl: declname='ME2@"0x0005"', quals=['volatile'] (at pp.c:790)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U0CTLnr@"0x0070"', quals=['volatile'], storage=['static'] (at pp.c:792)
    TypeDecl: declname='U0CTLnr@"0x0070"', quals=['volatile'] (at pp.c:792)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='I2CTCTLnr@"0x0071"', quals=['volatile'], storage=['static'] (at pp.c:793)
    TypeDecl: declname='I2CTCTLnr@"0x0071"', quals=['volatile'] (at pp.c:793)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='I2CDCTLnr@"0x0072"', quals=['volatile'], storage=['static'] (at pp.c:794)
    TypeDecl: declname='I2CDCTLnr@"0x0072"', quals=['volatile'] (at pp.c:794)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='mcu_power_t', quals=[], storage=['typedef'] (at pp.c:796)
    TypeDecl: declname='mcu_power_t', quals=[] (at pp.c:796)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='mcombine', quals=[], storage=['inline', 'static'] (at pp.c:797)
    FuncDecl: quals=None (at pp.c:797)
      ParamList:  (at pp.c:797)
        Decl: name='m1', quals=[], storage=[] (at pp.c:797)
          TypeDecl: declname='m1', quals=[] (at pp.c:797)
            IdentifierType: names=['mcu_power_t'] (at None)
        Decl: name='m2', quals=[], storage=[] (at pp.c:797)
          TypeDecl: declname='m2', quals=[] (at pp.c:797)
            IdentifierType: names=['mcu_power_t'] (at None)
      TypeDecl: declname='mcombine', quals=[] (at pp.c:797)
        IdentifierType: names=['mcu_power_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:800)
    Enum: name='__nesc_unnamed4257' (at pp.c:800)
      EnumeratorList:  (at pp.c:801)
        Enumerator: name='MSP430_POWER_ACTIVE' (at pp.c:801)
          Constant: type='int', value='0' (at pp.c:801)
        Enumerator: name='MSP430_POWER_LPM0' (at pp.c:802)
          Constant: type='int', value='1' (at pp.c:802)
        Enumerator: name='MSP430_POWER_LPM1' (at pp.c:803)
          Constant: type='int', value='2' (at pp.c:803)
        Enumerator: name='MSP430_POWER_LPM2' (at pp.c:804)
          Constant: type='int', value='3' (at pp.c:804)
        Enumerator: name='MSP430_POWER_LPM3' (at pp.c:805)
          Constant: type='int', value='4' (at pp.c:805)
        Enumerator: name='MSP430_POWER_LPM4' (at pp.c:806)
          Constant: type='int', value='5' (at pp.c:806)
  Decl: name='__nesc_disable_interrupt', quals=[], storage=['inline', 'static'] (at pp.c:809)
    FuncDecl: quals=None (at pp.c:809)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_disable_interrupt', quals=[] (at pp.c:809)
        IdentifierType: names=['void'] (at None)
  Decl: name='__nesc_enable_interrupt', quals=[], storage=['inline', 'static'] (at pp.c:815)
    FuncDecl: quals=None (at pp.c:815)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_enable_interrupt', quals=[] (at pp.c:815)
        IdentifierType: names=['void'] (at None)
  Typedef: name='__nesc_atomic_t', quals=[], storage=['typedef'] (at pp.c:820)
    TypeDecl: declname='__nesc_atomic_t', quals=[] (at pp.c:820)
      IdentifierType: names=['bool'] (at None)
  Decl: name='__nesc_atomic_start', quals=[], storage=[] (at pp.c:821)
    FuncDecl: quals=None (at pp.c:821)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_atomic_start', quals=[] (at pp.c:821)
        IdentifierType: names=['__nesc_atomic_t'] (at None)
  Decl: name='__nesc_atomic_end', quals=[], storage=[] (at pp.c:822)
    FuncDecl: quals=None (at pp.c:822)
      ParamList:  (at pp.c:822)
        Decl: name='reenable_interrupts', quals=[], storage=[] (at pp.c:822)
          TypeDecl: declname='reenable_interrupts', quals=[] (at pp.c:822)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
      TypeDecl: declname='__nesc_atomic_end', quals=[] (at pp.c:822)
        IdentifierType: names=['void'] (at None)
  Decl: name='__nesc_atomic_start', quals=[], storage=[] (at pp.c:829)
    FuncDecl: quals=None (at pp.c:829)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_atomic_start', quals=[] (at pp.c:829)
        IdentifierType: names=['__nesc_atomic_t'] (at None)
  Decl: name='__nesc_atomic_end', quals=[], storage=[] (at pp.c:837)
    FuncDecl: quals=None (at pp.c:837)
      ParamList:  (at pp.c:837)
        Decl: name='reenable_interrupts', quals=[], storage=[] (at pp.c:837)
          TypeDecl: declname='reenable_interrupts', quals=[] (at pp.c:837)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
      TypeDecl: declname='__nesc_atomic_end', quals=[] (at pp.c:837)
        IdentifierType: names=['void'] (at None)
  Typedef: name='nx_float', quals=[], storage=['typedef'] (at pp.c:839)
    TypeDecl: declname='nx_float', quals=[] (at pp.c:839)
      Struct: name=None, packed=False (at pp.c:839)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:839)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:839)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='4' (at pp.c:839)
  Typedef: name='__nesc_nxbase_nx_float', quals=[], storage=['typedef'] (at pp.c:839)
    TypeDecl: declname='__nesc_nxbase_nx_float', quals=[] (at pp.c:839)
      IdentifierType: names=['float'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:841)
    Enum: name='__nesc_unnamed4258' (at pp.c:841)
      EnumeratorList:  (at pp.c:842)
        Enumerator: name='TOS_SLEEP_NONE' (at pp.c:842)
          ID: name='MSP430_POWER_ACTIVE' (at pp.c:842)
  Decl: name=None, quals=[], storage=[] (at pp.c:845)
    Enum: name='__nesc_unnamed4259' (at pp.c:845)
      EnumeratorList:  (at pp.c:846)
        Enumerator: name='MSP430TIMER_CM_NONE' (at pp.c:846)
          Constant: type='int', value='0' (at pp.c:846)
        Enumerator: name='MSP430TIMER_CM_RISING' (at pp.c:847)
          Constant: type='int', value='1' (at pp.c:847)
        Enumerator: name='MSP430TIMER_CM_FALLING' (at pp.c:848)
          Constant: type='int', value='2' (at pp.c:848)
        Enumerator: name='MSP430TIMER_CM_BOTH' (at pp.c:849)
          Constant: type='int', value='3' (at pp.c:849)
        Enumerator: name='MSP430TIMER_STOP_MODE' (at pp.c:851)
          Constant: type='int', value='0' (at pp.c:851)
        Enumerator: name='MSP430TIMER_UP_MODE' (at pp.c:852)
          Constant: type='int', value='1' (at pp.c:852)
        Enumerator: name='MSP430TIMER_CONTINUOUS_MODE' (at pp.c:853)
          Constant: type='int', value='2' (at pp.c:853)
        Enumerator: name='MSP430TIMER_UPDOWN_MODE' (at pp.c:854)
          Constant: type='int', value='3' (at pp.c:854)
        Enumerator: name='MSP430TIMER_TACLK' (at pp.c:856)
          Constant: type='int', value='0' (at pp.c:856)
        Enumerator: name='MSP430TIMER_TBCLK' (at pp.c:857)
          Constant: type='int', value='0' (at pp.c:857)
        Enumerator: name='MSP430TIMER_ACLK' (at pp.c:858)
          Constant: type='int', value='1' (at pp.c:858)
        Enumerator: name='MSP430TIMER_SMCLK' (at pp.c:859)
          Constant: type='int', value='2' (at pp.c:859)
        Enumerator: name='MSP430TIMER_INCLK' (at pp.c:860)
          Constant: type='int', value='3' (at pp.c:860)
        Enumerator: name='MSP430TIMER_CLOCKDIV_1' (at pp.c:862)
          Constant: type='int', value='0' (at pp.c:862)
        Enumerator: name='MSP430TIMER_CLOCKDIV_2' (at pp.c:863)
          Constant: type='int', value='1' (at pp.c:863)
        Enumerator: name='MSP430TIMER_CLOCKDIV_4' (at pp.c:864)
          Constant: type='int', value='2' (at pp.c:864)
        Enumerator: name='MSP430TIMER_CLOCKDIV_8' (at pp.c:865)
          Constant: type='int', value='3' (at pp.c:865)
  Typedef: name='msp430_compare_control_t', quals=[], storage=['typedef'] (at pp.c:882)
    TypeDecl: declname='msp430_compare_control_t', quals=[] (at pp.c:882)
      Struct: name='__nesc_unnamed4260', packed=False (at pp.c:869)
        Decl: name='ccifg', quals=[], storage=[] (at 0)
          TypeDecl: declname='ccifg', quals=[] (at pp.c:871)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:871)
        Decl: name='cov', quals=[], storage=[] (at 0)
          TypeDecl: declname='cov', quals=[] (at pp.c:872)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:872)
        Decl: name='out', quals=[], storage=[] (at 0)
          TypeDecl: declname='out', quals=[] (at pp.c:873)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:873)
        Decl: name='cci', quals=[], storage=[] (at 0)
          TypeDecl: declname='cci', quals=[] (at pp.c:874)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:874)
        Decl: name='ccie', quals=[], storage=[] (at 0)
          TypeDecl: declname='ccie', quals=[] (at pp.c:875)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:875)
        Decl: name='outmod', quals=[], storage=[] (at 0)
          TypeDecl: declname='outmod', quals=[] (at pp.c:876)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='3' (at pp.c:876)
        Decl: name='cap', quals=[], storage=[] (at 0)
          TypeDecl: declname='cap', quals=[] (at pp.c:877)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:877)
        Decl: name='clld', quals=[], storage=[] (at 0)
          TypeDecl: declname='clld', quals=[] (at pp.c:878)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:878)
        Decl: name='scs', quals=[], storage=[] (at 0)
          TypeDecl: declname='scs', quals=[] (at pp.c:879)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:879)
        Decl: name='ccis', quals=[], storage=[] (at 0)
          TypeDecl: declname='ccis', quals=[] (at pp.c:880)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:880)
        Decl: name='cm', quals=[], storage=[] (at 0)
          TypeDecl: declname='cm', quals=[] (at pp.c:881)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:881)
  Typedef: name='msp430_timer_a_control_t', quals=[], storage=['typedef'] (at pp.c:895)
    TypeDecl: declname='msp430_timer_a_control_t', quals=[] (at pp.c:895)
      Struct: name='__nesc_unnamed4261', packed=False (at pp.c:885)
        Decl: name='taifg', quals=[], storage=[] (at 0)
          TypeDecl: declname='taifg', quals=[] (at pp.c:887)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:887)
        Decl: name='taie', quals=[], storage=[] (at 0)
          TypeDecl: declname='taie', quals=[] (at pp.c:888)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:888)
        Decl: name='taclr', quals=[], storage=[] (at 0)
          TypeDecl: declname='taclr', quals=[] (at pp.c:889)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:889)
        Decl: name='_unused0', quals=[], storage=[] (at 0)
          TypeDecl: declname='_unused0', quals=[] (at pp.c:890)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:890)
        Decl: name='mc', quals=[], storage=[] (at 0)
          TypeDecl: declname='mc', quals=[] (at pp.c:891)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:891)
        Decl: name='id', quals=[], storage=[] (at 0)
          TypeDecl: declname='id', quals=[] (at pp.c:892)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:892)
        Decl: name='tassel', quals=[], storage=[] (at 0)
          TypeDecl: declname='tassel', quals=[] (at pp.c:893)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:893)
        Decl: name='_unused1', quals=[], storage=[] (at 0)
          TypeDecl: declname='_unused1', quals=[] (at pp.c:894)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='6' (at pp.c:894)
  Typedef: name='msp430_timer_b_control_t', quals=[], storage=['typedef'] (at pp.c:911)
    TypeDecl: declname='msp430_timer_b_control_t', quals=[] (at pp.c:911)
      Struct: name='__nesc_unnamed4262', packed=False (at pp.c:898)
        Decl: name='tbifg', quals=[], storage=[] (at 0)
          TypeDecl: declname='tbifg', quals=[] (at pp.c:900)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:900)
        Decl: name='tbie', quals=[], storage=[] (at 0)
          TypeDecl: declname='tbie', quals=[] (at pp.c:901)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:901)
        Decl: name='tbclr', quals=[], storage=[] (at 0)
          TypeDecl: declname='tbclr', quals=[] (at pp.c:902)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:902)
        Decl: name='_unused0', quals=[], storage=[] (at 0)
          TypeDecl: declname='_unused0', quals=[] (at pp.c:903)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:903)
        Decl: name='mc', quals=[], storage=[] (at 0)
          TypeDecl: declname='mc', quals=[] (at pp.c:904)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:904)
        Decl: name='id', quals=[], storage=[] (at 0)
          TypeDecl: declname='id', quals=[] (at pp.c:905)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:905)
        Decl: name='tbssel', quals=[], storage=[] (at 0)
          TypeDecl: declname='tbssel', quals=[] (at pp.c:906)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:906)
        Decl: name='_unused1', quals=[], storage=[] (at 0)
          TypeDecl: declname='_unused1', quals=[] (at pp.c:907)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:907)
        Decl: name='cntl', quals=[], storage=[] (at 0)
          TypeDecl: declname='cntl', quals=[] (at pp.c:908)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:908)
        Decl: name='tbclgrp', quals=[], storage=[] (at 0)
          TypeDecl: declname='tbclgrp', quals=[] (at pp.c:909)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:909)
        Decl: name='_unused2', quals=[], storage=[] (at 0)
          TypeDecl: declname='_unused2', quals=[] (at pp.c:910)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:910)
  Typedef: name='TMilli', quals=[], storage=['typedef'] (at pp.c:918)
    TypeDecl: declname='TMilli', quals=[] (at pp.c:918)
      Struct: name='__nesc_unnamed4263', packed=False (at pp.c:913)
        Decl: name='notUsed', quals=[], storage=[] (at 0)
          TypeDecl: declname='notUsed', quals=[] (at pp.c:915)
            IdentifierType: names=['int'] (at None)
  Typedef: name='T32khz', quals=[], storage=['typedef'] (at pp.c:924)
    TypeDecl: declname='T32khz', quals=[] (at pp.c:924)
      Struct: name='__nesc_unnamed4264', packed=False (at pp.c:919)
        Decl: name='notUsed', quals=[], storage=[] (at 0)
          TypeDecl: declname='notUsed', quals=[] (at pp.c:921)
            IdentifierType: names=['int'] (at None)
  Typedef: name='TMicro', quals=[], storage=['typedef'] (at pp.c:930)
    TypeDecl: declname='TMicro', quals=[] (at pp.c:930)
      Struct: name='__nesc_unnamed4265', packed=False (at pp.c:925)
        Decl: name='notUsed', quals=[], storage=[] (at 0)
          TypeDecl: declname='notUsed', quals=[] (at pp.c:927)
            IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:932)
    Enum: name='__nesc_unnamed4266' (at pp.c:932)
      EnumeratorList:  (at pp.c:933)
        Enumerator: name='LEDS_LED0' (at pp.c:933)
          BinaryOp: op='<<' (at pp.c:933)
            Constant: type='int', value='1' (at pp.c:933)
            Constant: type='int', value='0' (at pp.c:933)
        Enumerator: name='LEDS_LED1' (at pp.c:934)
          BinaryOp: op='<<' (at pp.c:934)
            Constant: type='int', value='1' (at pp.c:934)
            Constant: type='int', value='1' (at pp.c:934)
        Enumerator: name='LEDS_LED2' (at pp.c:935)
          BinaryOp: op='<<' (at pp.c:935)
            Constant: type='int', value='1' (at pp.c:935)
            Constant: type='int', value='2' (at pp.c:935)
        Enumerator: name='LEDS_LED3' (at pp.c:936)
          BinaryOp: op='<<' (at pp.c:936)
            Constant: type='int', value='1' (at pp.c:936)
            Constant: type='int', value='3' (at pp.c:936)
        Enumerator: name='LEDS_LED4' (at pp.c:937)
          BinaryOp: op='<<' (at pp.c:937)
            Constant: type='int', value='1' (at pp.c:937)
            Constant: type='int', value='4' (at pp.c:937)
        Enumerator: name='LEDS_LED5' (at pp.c:938)
          BinaryOp: op='<<' (at pp.c:938)
            Constant: type='int', value='1' (at pp.c:938)
            Constant: type='int', value='5' (at pp.c:938)
        Enumerator: name='LEDS_LED6' (at pp.c:939)
          BinaryOp: op='<<' (at pp.c:939)
            Constant: type='int', value='1' (at pp.c:939)
            Constant: type='int', value='6' (at pp.c:939)
        Enumerator: name='LEDS_LED7' (at pp.c:940)
          BinaryOp: op='<<' (at pp.c:940)
            Constant: type='int', value='1' (at pp.c:940)
            Constant: type='int', value='7' (at pp.c:940)
  Typedef: name='BlinkC__Timer0__precision_tag', quals=[], storage=['typedef'] (at pp.c:942)
    TypeDecl: declname='BlinkC__Timer0__precision_tag', quals=[] (at pp.c:942)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='BlinkC__Timer1__precision_tag', quals=[], storage=['typedef'] (at pp.c:943)
    TypeDecl: declname='BlinkC__Timer1__precision_tag', quals=[] (at pp.c:943)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='BlinkC__Timer2__precision_tag', quals=[], storage=['typedef'] (at pp.c:944)
    TypeDecl: declname='BlinkC__Timer2__precision_tag', quals=[] (at pp.c:944)
      IdentifierType: names=['TMilli'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:945)
    Enum: name='Msp430Timer32khzC__0____nesc_unnamed4267' (at pp.c:945)
      EnumeratorList:  (at pp.c:946)
        Enumerator: name='Msp430Timer32khzC__0__ALARM_ID' (at pp.c:946)
          Constant: type='int', value='0U' (at pp.c:946)
  Typedef: name='Msp430AlarmC__0__frequency_tag', quals=[], storage=['typedef'] (at pp.c:948)
    TypeDecl: declname='Msp430AlarmC__0__frequency_tag', quals=[] (at pp.c:948)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='Msp430AlarmC__0__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:949)
    TypeDecl: declname='Msp430AlarmC__0__Alarm__precision_tag', quals=[] (at pp.c:949)
      IdentifierType: names=['Msp430AlarmC__0__frequency_tag'] (at None)
  Typedef: name='Msp430AlarmC__0__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:950)
    TypeDecl: declname='Msp430AlarmC__0__Alarm__size_type', quals=[] (at pp.c:950)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='Msp430CounterC__0__frequency_tag', quals=[], storage=['typedef'] (at pp.c:951)
    TypeDecl: declname='Msp430CounterC__0__frequency_tag', quals=[] (at pp.c:951)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='Msp430CounterC__0__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:952)
    TypeDecl: declname='Msp430CounterC__0__Counter__precision_tag', quals=[] (at pp.c:952)
      IdentifierType: names=['Msp430CounterC__0__frequency_tag'] (at None)
  Typedef: name='Msp430CounterC__0__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:953)
    TypeDecl: declname='Msp430CounterC__0__Counter__size_type', quals=[] (at pp.c:953)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformCounterC__0__to_precision_tag', quals=[], storage=['typedef'] (at pp.c:954)
    TypeDecl: declname='TransformCounterC__0__to_precision_tag', quals=[] (at pp.c:954)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='TransformCounterC__0__to_size_type', quals=[], storage=['typedef'] (at pp.c:955)
    TypeDecl: declname='TransformCounterC__0__to_size_type', quals=[] (at pp.c:955)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='TransformCounterC__0__from_precision_tag', quals=[], storage=['typedef'] (at pp.c:956)
    TypeDecl: declname='TransformCounterC__0__from_precision_tag', quals=[] (at pp.c:956)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='TransformCounterC__0__from_size_type', quals=[], storage=['typedef'] (at pp.c:957)
    TypeDecl: declname='TransformCounterC__0__from_size_type', quals=[] (at pp.c:957)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformCounterC__0__upper_count_type', quals=[], storage=['typedef'] (at pp.c:958)
    TypeDecl: declname='TransformCounterC__0__upper_count_type', quals=[] (at pp.c:958)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='TransformCounterC__0__CounterFrom__precision_tag', quals=[], storage=['typedef'] (at pp.c:959)
    TypeDecl: declname='TransformCounterC__0__CounterFrom__precision_tag', quals=[] (at pp.c:959)
      IdentifierType: names=['TransformCounterC__0__from_precision_tag'] (at None)
  Typedef: name='TransformCounterC__0__CounterFrom__size_type', quals=[], storage=['typedef'] (at pp.c:960)
    TypeDecl: declname='TransformCounterC__0__CounterFrom__size_type', quals=[] (at pp.c:960)
      IdentifierType: names=['TransformCounterC__0__from_size_type'] (at None)
  Typedef: name='TransformCounterC__0__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:961)
    TypeDecl: declname='TransformCounterC__0__Counter__precision_tag', quals=[] (at pp.c:961)
      IdentifierType: names=['TransformCounterC__0__to_precision_tag'] (at None)
  Typedef: name='TransformCounterC__0__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:962)
    TypeDecl: declname='TransformCounterC__0__Counter__size_type', quals=[] (at pp.c:962)
      IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
  Typedef: name='TransformAlarmC__0__to_precision_tag', quals=[], storage=['typedef'] (at pp.c:963)
    TypeDecl: declname='TransformAlarmC__0__to_precision_tag', quals=[] (at pp.c:963)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='TransformAlarmC__0__to_size_type', quals=[], storage=['typedef'] (at pp.c:964)
    TypeDecl: declname='TransformAlarmC__0__to_size_type', quals=[] (at pp.c:964)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='TransformAlarmC__0__from_precision_tag', quals=[], storage=['typedef'] (at pp.c:965)
    TypeDecl: declname='TransformAlarmC__0__from_precision_tag', quals=[] (at pp.c:965)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='TransformAlarmC__0__from_size_type', quals=[], storage=['typedef'] (at pp.c:966)
    TypeDecl: declname='TransformAlarmC__0__from_size_type', quals=[] (at pp.c:966)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformAlarmC__0__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:967)
    TypeDecl: declname='TransformAlarmC__0__Alarm__precision_tag', quals=[] (at pp.c:967)
      IdentifierType: names=['TransformAlarmC__0__to_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__0__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:968)
    TypeDecl: declname='TransformAlarmC__0__Alarm__size_type', quals=[] (at pp.c:968)
      IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Typedef: name='TransformAlarmC__0__AlarmFrom__precision_tag', quals=[], storage=['typedef'] (at pp.c:969)
    TypeDecl: declname='TransformAlarmC__0__AlarmFrom__precision_tag', quals=[] (at pp.c:969)
      IdentifierType: names=['TransformAlarmC__0__from_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__0__AlarmFrom__size_type', quals=[], storage=['typedef'] (at pp.c:970)
    TypeDecl: declname='TransformAlarmC__0__AlarmFrom__size_type', quals=[] (at pp.c:970)
      IdentifierType: names=['TransformAlarmC__0__from_size_type'] (at None)
  Typedef: name='TransformAlarmC__0__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:971)
    TypeDecl: declname='TransformAlarmC__0__Counter__precision_tag', quals=[] (at pp.c:971)
      IdentifierType: names=['TransformAlarmC__0__to_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__0__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:972)
    TypeDecl: declname='TransformAlarmC__0__Counter__size_type', quals=[] (at pp.c:972)
      IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Typedef: name='AlarmToTimerC__0__precision_tag', quals=[], storage=['typedef'] (at pp.c:973)
    TypeDecl: declname='AlarmToTimerC__0__precision_tag', quals=[] (at pp.c:973)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='AlarmToTimerC__0__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:974)
    TypeDecl: declname='AlarmToTimerC__0__Alarm__precision_tag', quals=[] (at pp.c:974)
      IdentifierType: names=['AlarmToTimerC__0__precision_tag'] (at None)
  Typedef: name='AlarmToTimerC__0__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:975)
    TypeDecl: declname='AlarmToTimerC__0__Alarm__size_type', quals=[] (at pp.c:975)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='AlarmToTimerC__0__Timer__precision_tag', quals=[], storage=['typedef'] (at pp.c:976)
    TypeDecl: declname='AlarmToTimerC__0__Timer__precision_tag', quals=[] (at pp.c:976)
      IdentifierType: names=['AlarmToTimerC__0__precision_tag'] (at None)
  Typedef: name='VirtualizeTimerC__0__precision_tag', quals=[], storage=['typedef'] (at pp.c:977)
    TypeDecl: declname='VirtualizeTimerC__0__precision_tag', quals=[] (at pp.c:977)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='VirtualizeTimerC__0__TimerFrom__precision_tag', quals=[], storage=['typedef'] (at pp.c:978)
    TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__precision_tag', quals=[] (at pp.c:978)
      IdentifierType: names=['VirtualizeTimerC__0__precision_tag'] (at None)
  Typedef: name='VirtualizeTimerC__0__Timer__precision_tag', quals=[], storage=['typedef'] (at pp.c:979)
    TypeDecl: declname='VirtualizeTimerC__0__Timer__precision_tag', quals=[] (at pp.c:979)
      IdentifierType: names=['VirtualizeTimerC__0__precision_tag'] (at None)
  Typedef: name='CounterToLocalTimeC__0__precision_tag', quals=[], storage=['typedef'] (at pp.c:980)
    TypeDecl: declname='CounterToLocalTimeC__0__precision_tag', quals=[] (at pp.c:980)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='CounterToLocalTimeC__0__LocalTime__precision_tag', quals=[], storage=['typedef'] (at pp.c:981)
    TypeDecl: declname='CounterToLocalTimeC__0__LocalTime__precision_tag', quals=[] (at pp.c:981)
      IdentifierType: names=['CounterToLocalTimeC__0__precision_tag'] (at None)
  Typedef: name='CounterToLocalTimeC__0__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:982)
    TypeDecl: declname='CounterToLocalTimeC__0__Counter__precision_tag', quals=[] (at pp.c:982)
      IdentifierType: names=['CounterToLocalTimeC__0__precision_tag'] (at None)
  Typedef: name='CounterToLocalTimeC__0__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:983)
    TypeDecl: declname='CounterToLocalTimeC__0__Counter__size_type', quals=[] (at pp.c:983)
      IdentifierType: names=['uint32_t'] (at None)
  Decl: name='PlatformP__Init__init', quals=[], storage=['static'] (at pp.c:985)
    FuncDecl: quals=None (at pp.c:985)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='PlatformP__Init__init', quals=[] (at pp.c:985)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[], storage=['static'] (at pp.c:987)
    FuncDecl: quals=None (at pp.c:987)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[] (at pp.c:987)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[], storage=['static'] (at pp.c:989)
    FuncDecl: quals=None (at pp.c:989)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[] (at pp.c:989)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[], storage=['static'] (at pp.c:993)
    FuncDecl: quals=None (at pp.c:993)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[] (at pp.c:993)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[], storage=['static'] (at pp.c:995)
    FuncDecl: quals=None (at pp.c:995)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[] (at pp.c:995)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[], storage=['static'] (at pp.c:1001)
    FuncDecl: quals=None (at pp.c:1001)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[] (at pp.c:1001)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[], storage=['static'] (at pp.c:1003)
    FuncDecl: quals=None (at pp.c:1003)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[] (at pp.c:1003)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[], storage=['static'] (at pp.c:1005)
    FuncDecl: quals=None (at pp.c:1005)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[] (at pp.c:1005)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[], storage=['static'] (at pp.c:1006)
    FuncDecl: quals=None (at pp.c:1006)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[] (at pp.c:1006)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__McuPowerOverride__lowestState', quals=[], storage=['static'] (at pp.c:1008)
    FuncDecl: quals=None (at pp.c:1008)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__McuPowerOverride__lowestState', quals=[] (at pp.c:1008)
        IdentifierType: names=['mcu_power_t'] (at None)
  Decl: name='Msp430ClockP__Init__init', quals=[], storage=['static'] (at pp.c:1010)
    FuncDecl: quals=None (at pp.c:1010)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Init__init', quals=[] (at pp.c:1010)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430TimerP__0__VectorTimerX0__fired', quals=[], storage=['static'] (at pp.c:1012)
    FuncDecl: quals=None (at pp.c:1012)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__VectorTimerX0__fired', quals=[] (at pp.c:1012)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Overflow__fired', quals=[], storage=['static'] (at pp.c:1014)
    FuncDecl: quals=None (at pp.c:1014)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Overflow__fired', quals=[] (at pp.c:1014)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__VectorTimerX1__fired', quals=[], storage=['static'] (at pp.c:1016)
    FuncDecl: quals=None (at pp.c:1016)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__VectorTimerX1__fired', quals=[] (at pp.c:1016)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Event__default__fired', quals=[], storage=['static'] (at pp.c:1018)
    FuncDecl: quals=None (at pp.c:1018)
      ParamList:  (at pp.c:1020)
        Decl: name='arg_0x101409020', quals=[], storage=[] (at pp.c:1020)
          TypeDecl: declname='arg_0x101409020', quals=[] (at pp.c:1020)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Event__default__fired', quals=[] (at pp.c:1018)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__VectorTimerX0__fired', quals=[], storage=['static'] (at pp.c:1022)
    FuncDecl: quals=None (at pp.c:1022)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__VectorTimerX0__fired', quals=[] (at pp.c:1022)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Overflow__fired', quals=[], storage=['static'] (at pp.c:1024)
    FuncDecl: quals=None (at pp.c:1024)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Overflow__fired', quals=[] (at pp.c:1024)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__VectorTimerX1__fired', quals=[], storage=['static'] (at pp.c:1026)
    FuncDecl: quals=None (at pp.c:1026)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__VectorTimerX1__fired', quals=[] (at pp.c:1026)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Event__default__fired', quals=[], storage=['static'] (at pp.c:1028)
    FuncDecl: quals=None (at pp.c:1028)
      ParamList:  (at pp.c:1030)
        Decl: name='arg_0x101409020', quals=[], storage=[] (at pp.c:1030)
          TypeDecl: declname='arg_0x101409020', quals=[] (at pp.c:1030)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Event__default__fired', quals=[] (at pp.c:1028)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Timer__get', quals=[], storage=['static'] (at pp.c:1032)
    FuncDecl: quals=None (at pp.c:1032)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Timer__get', quals=[] (at pp.c:1032)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerP__1__Timer__isOverflowPending', quals=[], storage=['static'] (at pp.c:1033)
    FuncDecl: quals=None (at pp.c:1033)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Timer__isOverflowPending', quals=[] (at pp.c:1033)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430TimerCapComP__0__Capture__getEvent', quals=[], storage=['static'] (at pp.c:1035)
    FuncDecl: quals=None (at pp.c:1035)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Capture__getEvent', quals=[] (at pp.c:1035)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__Capture__default__captured', quals=[], storage=['static'] (at pp.c:1037)
    FuncDecl: quals=None (at pp.c:1037)
      ParamList:  (at pp.c:1037)
        Decl: name='time', quals=[], storage=[] (at pp.c:1037)
          TypeDecl: declname='time', quals=[] (at pp.c:1037)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Capture__default__captured', quals=[] (at pp.c:1037)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Control__getControl', quals=[], storage=['static'] (at pp.c:1039)
    FuncDecl: quals=None (at pp.c:1039)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Control__getControl', quals=[] (at pp.c:1039)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__Event__fired', quals=[], storage=['static'] (at pp.c:1041)
    FuncDecl: quals=None (at pp.c:1041)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Event__fired', quals=[] (at pp.c:1041)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Compare__default__fired', quals=[], storage=['static'] (at pp.c:1043)
    FuncDecl: quals=None (at pp.c:1043)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Compare__default__fired', quals=[] (at pp.c:1043)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Timer__overflow', quals=[], storage=['static'] (at pp.c:1045)
    FuncDecl: quals=None (at pp.c:1045)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Timer__overflow', quals=[] (at pp.c:1045)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Capture__getEvent', quals=[], storage=['static'] (at pp.c:1047)
    FuncDecl: quals=None (at pp.c:1047)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Capture__getEvent', quals=[] (at pp.c:1047)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__Capture__default__captured', quals=[], storage=['static'] (at pp.c:1049)
    FuncDecl: quals=None (at pp.c:1049)
      ParamList:  (at pp.c:1049)
        Decl: name='time', quals=[], storage=[] (at pp.c:1049)
          TypeDecl: declname='time', quals=[] (at pp.c:1049)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Capture__default__captured', quals=[] (at pp.c:1049)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Control__getControl', quals=[], storage=['static'] (at pp.c:1051)
    FuncDecl: quals=None (at pp.c:1051)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Control__getControl', quals=[] (at pp.c:1051)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__Event__fired', quals=[], storage=['static'] (at pp.c:1053)
    FuncDecl: quals=None (at pp.c:1053)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Event__fired', quals=[] (at pp.c:1053)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Compare__default__fired', quals=[], storage=['static'] (at pp.c:1055)
    FuncDecl: quals=None (at pp.c:1055)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Compare__default__fired', quals=[] (at pp.c:1055)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Timer__overflow', quals=[], storage=['static'] (at pp.c:1057)
    FuncDecl: quals=None (at pp.c:1057)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Timer__overflow', quals=[] (at pp.c:1057)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Capture__getEvent', quals=[], storage=['static'] (at pp.c:1059)
    FuncDecl: quals=None (at pp.c:1059)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Capture__getEvent', quals=[] (at pp.c:1059)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__Capture__default__captured', quals=[], storage=['static'] (at pp.c:1061)
    FuncDecl: quals=None (at pp.c:1061)
      ParamList:  (at pp.c:1061)
        Decl: name='time', quals=[], storage=[] (at pp.c:1061)
          TypeDecl: declname='time', quals=[] (at pp.c:1061)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Capture__default__captured', quals=[] (at pp.c:1061)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Control__getControl', quals=[], storage=['static'] (at pp.c:1063)
    FuncDecl: quals=None (at pp.c:1063)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Control__getControl', quals=[] (at pp.c:1063)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__Event__fired', quals=[], storage=['static'] (at pp.c:1065)
    FuncDecl: quals=None (at pp.c:1065)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Event__fired', quals=[] (at pp.c:1065)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Compare__default__fired', quals=[], storage=['static'] (at pp.c:1067)
    FuncDecl: quals=None (at pp.c:1067)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Compare__default__fired', quals=[] (at pp.c:1067)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Timer__overflow', quals=[], storage=['static'] (at pp.c:1069)
    FuncDecl: quals=None (at pp.c:1069)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Timer__overflow', quals=[] (at pp.c:1069)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Capture__getEvent', quals=[], storage=['static'] (at pp.c:1071)
    FuncDecl: quals=None (at pp.c:1071)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Capture__getEvent', quals=[] (at pp.c:1071)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__Capture__default__captured', quals=[], storage=['static'] (at pp.c:1073)
    FuncDecl: quals=None (at pp.c:1073)
      ParamList:  (at pp.c:1073)
        Decl: name='time', quals=[], storage=[] (at pp.c:1073)
          TypeDecl: declname='time', quals=[] (at pp.c:1073)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Capture__default__captured', quals=[] (at pp.c:1073)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__getControl', quals=[], storage=['static'] (at pp.c:1075)
    FuncDecl: quals=None (at pp.c:1075)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__getControl', quals=[] (at pp.c:1075)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__enableEvents', quals=[], storage=['static'] (at pp.c:1077)
    FuncDecl: quals=None (at pp.c:1077)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__enableEvents', quals=[] (at pp.c:1077)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[], storage=['static'] (at pp.c:1079)
    FuncDecl: quals=None (at pp.c:1079)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[] (at pp.c:1079)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__disableEvents', quals=[], storage=['static'] (at pp.c:1090)
    FuncDecl: quals=None (at pp.c:1090)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__disableEvents', quals=[] (at pp.c:1090)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[], storage=['static'] (at pp.c:1092)
    FuncDecl: quals=None (at pp.c:1092)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[] (at pp.c:1092)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Event__fired', quals=[], storage=['static'] (at pp.c:1094)
    FuncDecl: quals=None (at pp.c:1094)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Event__fired', quals=[] (at pp.c:1094)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Compare__setEvent', quals=[], storage=['static'] (at pp.c:1096)
    FuncDecl: quals=None (at pp.c:1096)
      ParamList:  (at pp.c:1096)
        Decl: name='time', quals=[], storage=[] (at pp.c:1096)
          TypeDecl: declname='time', quals=[] (at pp.c:1096)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEvent', quals=[] (at pp.c:1096)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[], storage=['static'] (at pp.c:1098)
    FuncDecl: quals=None (at pp.c:1098)
      ParamList:  (at pp.c:1098)
        Decl: name='delta', quals=[], storage=[] (at pp.c:1098)
          TypeDecl: declname='delta', quals=[] (at pp.c:1098)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[] (at pp.c:1098)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Timer__overflow', quals=[], storage=['static'] (at pp.c:1100)
    FuncDecl: quals=None (at pp.c:1100)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Timer__overflow', quals=[] (at pp.c:1100)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Capture__getEvent', quals=[], storage=['static'] (at pp.c:1102)
    FuncDecl: quals=None (at pp.c:1102)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Capture__getEvent', quals=[] (at pp.c:1102)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__Capture__default__captured', quals=[], storage=['static'] (at pp.c:1104)
    FuncDecl: quals=None (at pp.c:1104)
      ParamList:  (at pp.c:1104)
        Decl: name='time', quals=[], storage=[] (at pp.c:1104)
          TypeDecl: declname='time', quals=[] (at pp.c:1104)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Capture__default__captured', quals=[] (at pp.c:1104)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__getControl', quals=[], storage=['static'] (at pp.c:1106)
    FuncDecl: quals=None (at pp.c:1106)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__getControl', quals=[] (at pp.c:1106)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__Event__fired', quals=[], storage=['static'] (at pp.c:1108)
    FuncDecl: quals=None (at pp.c:1108)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Event__fired', quals=[] (at pp.c:1108)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Compare__default__fired', quals=[], storage=['static'] (at pp.c:1110)
    FuncDecl: quals=None (at pp.c:1110)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Compare__default__fired', quals=[] (at pp.c:1110)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Timer__overflow', quals=[], storage=['static'] (at pp.c:1112)
    FuncDecl: quals=None (at pp.c:1112)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Timer__overflow', quals=[] (at pp.c:1112)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Capture__getEvent', quals=[], storage=['static'] (at pp.c:1114)
    FuncDecl: quals=None (at pp.c:1114)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Capture__getEvent', quals=[] (at pp.c:1114)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__Capture__default__captured', quals=[], storage=['static'] (at pp.c:1116)
    FuncDecl: quals=None (at pp.c:1116)
      ParamList:  (at pp.c:1116)
        Decl: name='time', quals=[], storage=[] (at pp.c:1116)
          TypeDecl: declname='time', quals=[] (at pp.c:1116)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Capture__default__captured', quals=[] (at pp.c:1116)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__getControl', quals=[], storage=['static'] (at pp.c:1118)
    FuncDecl: quals=None (at pp.c:1118)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__getControl', quals=[] (at pp.c:1118)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__Event__fired', quals=[], storage=['static'] (at pp.c:1120)
    FuncDecl: quals=None (at pp.c:1120)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Event__fired', quals=[] (at pp.c:1120)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Compare__default__fired', quals=[], storage=['static'] (at pp.c:1122)
    FuncDecl: quals=None (at pp.c:1122)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Compare__default__fired', quals=[] (at pp.c:1122)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Timer__overflow', quals=[], storage=['static'] (at pp.c:1124)
    FuncDecl: quals=None (at pp.c:1124)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Timer__overflow', quals=[] (at pp.c:1124)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Capture__getEvent', quals=[], storage=['static'] (at pp.c:1126)
    FuncDecl: quals=None (at pp.c:1126)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Capture__getEvent', quals=[] (at pp.c:1126)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__Capture__default__captured', quals=[], storage=['static'] (at pp.c:1128)
    FuncDecl: quals=None (at pp.c:1128)
      ParamList:  (at pp.c:1128)
        Decl: name='time', quals=[], storage=[] (at pp.c:1128)
          TypeDecl: declname='time', quals=[] (at pp.c:1128)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Capture__default__captured', quals=[] (at pp.c:1128)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Control__getControl', quals=[], storage=['static'] (at pp.c:1130)
    FuncDecl: quals=None (at pp.c:1130)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Control__getControl', quals=[] (at pp.c:1130)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__Event__fired', quals=[], storage=['static'] (at pp.c:1132)
    FuncDecl: quals=None (at pp.c:1132)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Event__fired', quals=[] (at pp.c:1132)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Compare__default__fired', quals=[], storage=['static'] (at pp.c:1134)
    FuncDecl: quals=None (at pp.c:1134)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Compare__default__fired', quals=[] (at pp.c:1134)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Timer__overflow', quals=[], storage=['static'] (at pp.c:1136)
    FuncDecl: quals=None (at pp.c:1136)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Timer__overflow', quals=[] (at pp.c:1136)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Capture__getEvent', quals=[], storage=['static'] (at pp.c:1138)
    FuncDecl: quals=None (at pp.c:1138)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Capture__getEvent', quals=[] (at pp.c:1138)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__Capture__default__captured', quals=[], storage=['static'] (at pp.c:1140)
    FuncDecl: quals=None (at pp.c:1140)
      ParamList:  (at pp.c:1140)
        Decl: name='time', quals=[], storage=[] (at pp.c:1140)
          TypeDecl: declname='time', quals=[] (at pp.c:1140)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Capture__default__captured', quals=[] (at pp.c:1140)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Control__getControl', quals=[], storage=['static'] (at pp.c:1142)
    FuncDecl: quals=None (at pp.c:1142)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Control__getControl', quals=[] (at pp.c:1142)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__Event__fired', quals=[], storage=['static'] (at pp.c:1144)
    FuncDecl: quals=None (at pp.c:1144)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Event__fired', quals=[] (at pp.c:1144)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Compare__default__fired', quals=[], storage=['static'] (at pp.c:1146)
    FuncDecl: quals=None (at pp.c:1146)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Compare__default__fired', quals=[] (at pp.c:1146)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Timer__overflow', quals=[], storage=['static'] (at pp.c:1148)
    FuncDecl: quals=None (at pp.c:1148)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Timer__overflow', quals=[] (at pp.c:1148)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Capture__getEvent', quals=[], storage=['static'] (at pp.c:1150)
    FuncDecl: quals=None (at pp.c:1150)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Capture__getEvent', quals=[] (at pp.c:1150)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__Capture__default__captured', quals=[], storage=['static'] (at pp.c:1152)
    FuncDecl: quals=None (at pp.c:1152)
      ParamList:  (at pp.c:1152)
        Decl: name='time', quals=[], storage=[] (at pp.c:1152)
          TypeDecl: declname='time', quals=[] (at pp.c:1152)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Capture__default__captured', quals=[] (at pp.c:1152)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Control__getControl', quals=[], storage=['static'] (at pp.c:1154)
    FuncDecl: quals=None (at pp.c:1154)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Control__getControl', quals=[] (at pp.c:1154)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__Event__fired', quals=[], storage=['static'] (at pp.c:1156)
    FuncDecl: quals=None (at pp.c:1156)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Event__fired', quals=[] (at pp.c:1156)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Compare__default__fired', quals=[], storage=['static'] (at pp.c:1158)
    FuncDecl: quals=None (at pp.c:1158)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Compare__default__fired', quals=[] (at pp.c:1158)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Timer__overflow', quals=[], storage=['static'] (at pp.c:1160)
    FuncDecl: quals=None (at pp.c:1160)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Timer__overflow', quals=[] (at pp.c:1160)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Capture__getEvent', quals=[], storage=['static'] (at pp.c:1162)
    FuncDecl: quals=None (at pp.c:1162)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Capture__getEvent', quals=[] (at pp.c:1162)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__Capture__default__captured', quals=[], storage=['static'] (at pp.c:1164)
    FuncDecl: quals=None (at pp.c:1164)
      ParamList:  (at pp.c:1164)
        Decl: name='time', quals=[], storage=[] (at pp.c:1164)
          TypeDecl: declname='time', quals=[] (at pp.c:1164)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Capture__default__captured', quals=[] (at pp.c:1164)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Control__getControl', quals=[], storage=['static'] (at pp.c:1166)
    FuncDecl: quals=None (at pp.c:1166)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Control__getControl', quals=[] (at pp.c:1166)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__Event__fired', quals=[], storage=['static'] (at pp.c:1168)
    FuncDecl: quals=None (at pp.c:1168)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Event__fired', quals=[] (at pp.c:1168)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Compare__default__fired', quals=[], storage=['static'] (at pp.c:1170)
    FuncDecl: quals=None (at pp.c:1170)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Compare__default__fired', quals=[] (at pp.c:1170)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Timer__overflow', quals=[], storage=['static'] (at pp.c:1172)
    FuncDecl: quals=None (at pp.c:1172)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Timer__overflow', quals=[] (at pp.c:1172)
        IdentifierType: names=['void'] (at None)
  Decl: name='McuSleepC__McuSleep__sleep', quals=[], storage=['static'] (at pp.c:1174)
    FuncDecl: quals=None (at pp.c:1174)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='McuSleepC__McuSleep__sleep', quals=[] (at pp.c:1174)
        IdentifierType: names=['void'] (at None)
  Decl: name='MotePlatformC__SubInit__default__init', quals=[], storage=['static'] (at pp.c:1176)
    FuncDecl: quals=None (at pp.c:1176)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='MotePlatformC__SubInit__default__init', quals=[] (at pp.c:1176)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='MotePlatformC__Init__init', quals=[], storage=['static'] (at pp.c:1178)
    FuncDecl: quals=None (at pp.c:1178)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='MotePlatformC__Init__init', quals=[] (at pp.c:1178)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SchedulerBasicP__TaskBasic__postTask', quals=[], storage=['static'] (at pp.c:1180)
    FuncDecl: quals=None (at pp.c:1180)
      ParamList:  (at pp.c:1182)
        Decl: name='arg_0x101333340', quals=[], storage=[] (at pp.c:1182)
          TypeDecl: declname='arg_0x101333340', quals=[] (at pp.c:1182)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__TaskBasic__postTask', quals=[] (at pp.c:1180)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SchedulerBasicP__TaskBasic__default__runTask', quals=[], storage=['static'] (at pp.c:1184)
    FuncDecl: quals=None (at pp.c:1184)
      ParamList:  (at pp.c:1186)
        Decl: name='arg_0x101333340', quals=[], storage=[] (at pp.c:1186)
          TypeDecl: declname='arg_0x101333340', quals=[] (at pp.c:1186)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__TaskBasic__default__runTask', quals=[] (at pp.c:1184)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__init', quals=[], storage=['static'] (at pp.c:1188)
    FuncDecl: quals=None (at pp.c:1188)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__init', quals=[] (at pp.c:1188)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__taskLoop', quals=[], storage=['static'] (at pp.c:1190)
    FuncDecl: quals=None (at pp.c:1190)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__taskLoop', quals=[] (at pp.c:1190)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__runNextTask', quals=[], storage=['static'] (at pp.c:1192)
    FuncDecl: quals=None (at pp.c:1192)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__runNextTask', quals=[] (at pp.c:1192)
        IdentifierType: names=['bool'] (at None)
  Decl: name='BlinkC__Timer0__fired', quals=[], storage=['static'] (at pp.c:1194)
    FuncDecl: quals=None (at pp.c:1194)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BlinkC__Timer0__fired', quals=[] (at pp.c:1194)
        IdentifierType: names=['void'] (at None)
  Decl: name='BlinkC__Boot__booted', quals=[], storage=['static'] (at pp.c:1196)
    FuncDecl: quals=None (at pp.c:1196)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BlinkC__Boot__booted', quals=[] (at pp.c:1196)
        IdentifierType: names=['void'] (at None)
  Decl: name='BlinkC__Timer1__fired', quals=[], storage=['static'] (at pp.c:1198)
    FuncDecl: quals=None (at pp.c:1198)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BlinkC__Timer1__fired', quals=[] (at pp.c:1198)
        IdentifierType: names=['void'] (at None)
  Decl: name='BlinkC__Timer2__fired', quals=[], storage=['static'] (at pp.c:1200)
    FuncDecl: quals=None (at pp.c:1200)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BlinkC__Timer2__fired', quals=[] (at pp.c:1200)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Init__init', quals=[], storage=['static'] (at pp.c:1202)
    FuncDecl: quals=None (at pp.c:1202)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Init__init', quals=[] (at pp.c:1202)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='LedsP__Leds__led0Toggle', quals=[], storage=['static'] (at pp.c:1204)
    FuncDecl: quals=None (at pp.c:1204)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led0Toggle', quals=[] (at pp.c:1204)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led1Toggle', quals=[], storage=['static'] (at pp.c:1206)
    FuncDecl: quals=None (at pp.c:1206)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led1Toggle', quals=[] (at pp.c:1206)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led2Toggle', quals=[], storage=['static'] (at pp.c:1208)
    FuncDecl: quals=None (at pp.c:1208)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led2Toggle', quals=[] (at pp.c:1208)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__toggle', quals=[], storage=['static'] (at pp.c:1210)
    FuncDecl: quals=None (at pp.c:1210)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__toggle', quals=[] (at pp.c:1210)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[], storage=['static'] (at pp.c:1212)
    FuncDecl: quals=None (at pp.c:1212)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[] (at pp.c:1212)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__set', quals=[], storage=['static'] (at pp.c:1214)
    FuncDecl: quals=None (at pp.c:1214)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__set', quals=[] (at pp.c:1214)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__toggle', quals=[], storage=['static'] (at pp.c:1224)
    FuncDecl: quals=None (at pp.c:1224)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__toggle', quals=[] (at pp.c:1224)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[], storage=['static'] (at pp.c:1226)
    FuncDecl: quals=None (at pp.c:1226)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[] (at pp.c:1226)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__set', quals=[], storage=['static'] (at pp.c:1228)
    FuncDecl: quals=None (at pp.c:1228)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__set', quals=[] (at pp.c:1228)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__toggle', quals=[], storage=['static'] (at pp.c:1238)
    FuncDecl: quals=None (at pp.c:1238)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__toggle', quals=[] (at pp.c:1238)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[], storage=['static'] (at pp.c:1240)
    FuncDecl: quals=None (at pp.c:1240)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[] (at pp.c:1240)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__set', quals=[], storage=['static'] (at pp.c:1242)
    FuncDecl: quals=None (at pp.c:1242)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__set', quals=[] (at pp.c:1242)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__toggle', quals=[], storage=['static'] (at pp.c:1244)
    FuncDecl: quals=None (at pp.c:1244)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__toggle', quals=[] (at pp.c:1244)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:1248)
    FuncDecl: quals=None (at pp.c:1248)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__makeOutput', quals=[] (at pp.c:1248)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__set', quals=[], storage=['static'] (at pp.c:1250)
    FuncDecl: quals=None (at pp.c:1250)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__set', quals=[] (at pp.c:1250)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__toggle', quals=[], storage=['static'] (at pp.c:1252)
    FuncDecl: quals=None (at pp.c:1252)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__toggle', quals=[] (at pp.c:1252)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:1256)
    FuncDecl: quals=None (at pp.c:1256)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__makeOutput', quals=[] (at pp.c:1256)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__set', quals=[], storage=['static'] (at pp.c:1258)
    FuncDecl: quals=None (at pp.c:1258)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__set', quals=[] (at pp.c:1258)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__GeneralIO__toggle', quals=[], storage=['static'] (at pp.c:1260)
    FuncDecl: quals=None (at pp.c:1260)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__GeneralIO__toggle', quals=[] (at pp.c:1260)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__GeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:1264)
    FuncDecl: quals=None (at pp.c:1264)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__GeneralIO__makeOutput', quals=[] (at pp.c:1264)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__GeneralIO__set', quals=[], storage=['static'] (at pp.c:1266)
    FuncDecl: quals=None (at pp.c:1266)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__GeneralIO__set', quals=[] (at pp.c:1266)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Compare__fired', quals=[], storage=['static'] (at pp.c:1268)
    FuncDecl: quals=None (at pp.c:1268)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__fired', quals=[] (at pp.c:1268)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Timer__overflow', quals=[], storage=['static'] (at pp.c:1270)
    FuncDecl: quals=None (at pp.c:1270)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Timer__overflow', quals=[] (at pp.c:1270)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Alarm__startAt', quals=[], storage=['static'] (at pp.c:1272)
    FuncDecl: quals=None (at pp.c:1272)
      ParamList:  (at pp.c:1272)
        Decl: name='t0', quals=[], storage=[] (at pp.c:1272)
          TypeDecl: declname='t0', quals=[] (at pp.c:1272)
            IdentifierType: names=['Msp430AlarmC__0__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:1272)
          TypeDecl: declname='dt', quals=[] (at pp.c:1272)
            IdentifierType: names=['Msp430AlarmC__0__Alarm__size_type'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Alarm__startAt', quals=[] (at pp.c:1272)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Alarm__stop', quals=[], storage=['static'] (at pp.c:1274)
    FuncDecl: quals=None (at pp.c:1274)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Alarm__stop', quals=[] (at pp.c:1274)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Init__init', quals=[], storage=['static'] (at pp.c:1276)
    FuncDecl: quals=None (at pp.c:1276)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Init__init', quals=[] (at pp.c:1276)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430CounterC__0__Msp430Timer__overflow', quals=[], storage=['static'] (at pp.c:1278)
    FuncDecl: quals=None (at pp.c:1278)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Msp430Timer__overflow', quals=[] (at pp.c:1278)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430CounterC__0__Counter__get', quals=[], storage=['static'] (at pp.c:1280)
    FuncDecl: quals=None (at pp.c:1280)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Counter__get', quals=[] (at pp.c:1280)
        IdentifierType: names=['Msp430CounterC__0__Counter__size_type'] (at None)
  Decl: name='Msp430CounterC__0__Counter__isOverflowPending', quals=[], storage=['static'] (at pp.c:1287)
    FuncDecl: quals=None (at pp.c:1287)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Counter__isOverflowPending', quals=[] (at pp.c:1287)
        IdentifierType: names=['bool'] (at None)
  Decl: name='TransformCounterC__0__CounterFrom__overflow', quals=[], storage=['static'] (at pp.c:1298)
    FuncDecl: quals=None (at pp.c:1298)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__CounterFrom__overflow', quals=[] (at pp.c:1298)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformCounterC__0__Counter__get', quals=[], storage=['static'] (at pp.c:1300)
    FuncDecl: quals=None (at pp.c:1300)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__Counter__get', quals=[] (at pp.c:1300)
        IdentifierType: names=['TransformCounterC__0__Counter__size_type'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__getNow', quals=[], storage=['static'] (at pp.c:1302)
    FuncDecl: quals=None (at pp.c:1302)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__getNow', quals=[] (at pp.c:1302)
        IdentifierType: names=['TransformAlarmC__0__Alarm__size_type'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__startAt', quals=[], storage=['static'] (at pp.c:1304)
    FuncDecl: quals=None (at pp.c:1304)
      ParamList:  (at pp.c:1304)
        Decl: name='t0', quals=[], storage=[] (at pp.c:1304)
          TypeDecl: declname='t0', quals=[] (at pp.c:1304)
            IdentifierType: names=['TransformAlarmC__0__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:1304)
          TypeDecl: declname='dt', quals=[] (at pp.c:1304)
            IdentifierType: names=['TransformAlarmC__0__Alarm__size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__startAt', quals=[] (at pp.c:1304)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__getAlarm', quals=[], storage=['static'] (at pp.c:1306)
    FuncDecl: quals=None (at pp.c:1306)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__getAlarm', quals=[] (at pp.c:1306)
        IdentifierType: names=['TransformAlarmC__0__Alarm__size_type'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__stop', quals=[], storage=['static'] (at pp.c:1308)
    FuncDecl: quals=None (at pp.c:1308)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__stop', quals=[] (at pp.c:1308)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__AlarmFrom__fired', quals=[], storage=['static'] (at pp.c:1313)
    FuncDecl: quals=None (at pp.c:1313)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__AlarmFrom__fired', quals=[] (at pp.c:1313)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Counter__overflow', quals=[], storage=['static'] (at pp.c:1315)
    FuncDecl: quals=None (at pp.c:1315)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Counter__overflow', quals=[] (at pp.c:1315)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__fired__runTask', quals=[], storage=['static'] (at pp.c:1317)
    FuncDecl: quals=None (at pp.c:1317)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__fired__runTask', quals=[] (at pp.c:1317)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__fired', quals=[], storage=['static'] (at pp.c:1319)
    FuncDecl: quals=None (at pp.c:1319)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__fired', quals=[] (at pp.c:1319)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__getNow', quals=[], storage=['static'] (at pp.c:1321)
    FuncDecl: quals=None (at pp.c:1321)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__getNow', quals=[] (at pp.c:1321)
        IdentifierType: names=['uint32_t'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__startOneShotAt', quals=[], storage=['static'] (at pp.c:1323)
    FuncDecl: quals=None (at pp.c:1323)
      ParamList:  (at pp.c:1323)
        Decl: name='t0', quals=[], storage=[] (at pp.c:1323)
          TypeDecl: declname='t0', quals=[] (at pp.c:1323)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:1323)
          TypeDecl: declname='dt', quals=[] (at pp.c:1323)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__startOneShotAt', quals=[] (at pp.c:1323)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__stop', quals=[], storage=['static'] (at pp.c:1325)
    FuncDecl: quals=None (at pp.c:1325)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__stop', quals=[] (at pp.c:1325)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[], storage=['static'] (at pp.c:1327)
    FuncDecl: quals=None (at pp.c:1327)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[] (at pp.c:1327)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__TimerFrom__fired', quals=[], storage=['static'] (at pp.c:1329)
    FuncDecl: quals=None (at pp.c:1329)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__fired', quals=[] (at pp.c:1329)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__default__fired', quals=[], storage=['static'] (at pp.c:1331)
    FuncDecl: quals=None (at pp.c:1331)
      ParamList:  (at pp.c:1333)
        Decl: name='arg_0x1018b95d8', quals=[], storage=[] (at pp.c:1333)
          TypeDecl: declname='arg_0x1018b95d8', quals=[] (at pp.c:1333)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__default__fired', quals=[] (at pp.c:1331)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__startPeriodic', quals=[], storage=['static'] (at pp.c:1335)
    FuncDecl: quals=None (at pp.c:1335)
      ParamList:  (at pp.c:1337)
        Decl: name='arg_0x1018b95d8', quals=[], storage=[] (at pp.c:1337)
          TypeDecl: declname='arg_0x1018b95d8', quals=[] (at pp.c:1337)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:1339)
          TypeDecl: declname='dt', quals=[] (at pp.c:1339)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__startPeriodic', quals=[] (at pp.c:1335)
        IdentifierType: names=['void'] (at None)
  Decl: name='CounterToLocalTimeC__0__Counter__overflow', quals=[], storage=['static'] (at pp.c:1341)
    FuncDecl: quals=None (at pp.c:1341)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CounterToLocalTimeC__0__Counter__overflow', quals=[] (at pp.c:1341)
        IdentifierType: names=['void'] (at None)
  Decl: name='PlatformP__MoteInit__init', quals=[], storage=['static'] (at pp.c:1343)
    FuncDecl: quals=None (at pp.c:1343)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='PlatformP__MoteInit__init', quals=[] (at pp.c:1343)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='PlatformP__MoteClockInit__init', quals=[], storage=['static'] (at pp.c:1345)
    FuncDecl: quals=None (at pp.c:1345)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='PlatformP__MoteClockInit__init', quals=[] (at pp.c:1345)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='PlatformP__LedsInit__init', quals=[], storage=['static'] (at pp.c:1347)
    FuncDecl: quals=None (at pp.c:1347)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='PlatformP__LedsInit__init', quals=[] (at pp.c:1347)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='PlatformP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:1349)
    FuncDecl: quals=None (at pp.c:1349)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='PlatformP__Init__init', quals=[] (at pp.c:1349)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__initTimerB', quals=[], storage=['static'] (at pp.c:1351)
    FuncDecl: quals=None (at pp.c:1351)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initTimerB', quals=[] (at pp.c:1351)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__initTimerA', quals=[], storage=['static'] (at pp.c:1353)
    FuncDecl: quals=None (at pp.c:1353)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initTimerA', quals=[] (at pp.c:1353)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__setupDcoCalibrate', quals=[], storage=['static'] (at pp.c:1355)
    FuncDecl: quals=None (at pp.c:1355)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__setupDcoCalibrate', quals=[] (at pp.c:1355)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__initClocks', quals=[], storage=['static'] (at pp.c:1356)
    FuncDecl: quals=None (at pp.c:1356)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initClocks', quals=[] (at pp.c:1356)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__IE1@"0x0000"', quals=['volatile'], storage=['static'] (at pp.c:1358)
    TypeDecl: declname='Msp430ClockP__IE1@"0x0000"', quals=['volatile'] (at pp.c:1358)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430ClockP__TA0CTL@"0x0160"', quals=['volatile'], storage=['static'] (at pp.c:1359)
    TypeDecl: declname='Msp430ClockP__TA0CTL@"0x0160"', quals=['volatile'] (at pp.c:1359)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430ClockP__TA0IV@"0x012E"', quals=['volatile'], storage=['static'] (at pp.c:1360)
    TypeDecl: declname='Msp430ClockP__TA0IV@"0x012E"', quals=['volatile'] (at pp.c:1360)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430ClockP__TBCTL@"0x0180"', quals=['volatile'], storage=['static'] (at pp.c:1361)
    TypeDecl: declname='Msp430ClockP__TBCTL@"0x0180"', quals=['volatile'] (at pp.c:1361)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430ClockP__TBIV@"0x011E"', quals=['volatile'], storage=['static'] (at pp.c:1362)
    TypeDecl: declname='Msp430ClockP__TBIV@"0x011E"', quals=['volatile'] (at pp.c:1362)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1364)
    Enum: name='Msp430ClockP____nesc_unnamed4268' (at pp.c:1364)
      EnumeratorList:  (at pp.c:1366)
        Enumerator: name='Msp430ClockP__ACLK_CALIB_PERIOD' (at pp.c:1366)
          Constant: type='int', value='8' (at pp.c:1366)
        Enumerator: name='Msp430ClockP__TARGET_DCO_DELTA' (at pp.c:1367)
          BinaryOp: op='*' (at pp.c:1367)
            BinaryOp: op='/' (at pp.c:1367)
              Constant: type='int', value='4096' (at pp.c:1367)
              Constant: type='int', value='32' (at pp.c:1367)
            ID: name='Msp430ClockP__ACLK_CALIB_PERIOD' (at pp.c:1367)
  Decl: name='Msp430ClockP__McuPowerOverride__lowestState', quals=[], storage=['inline', 'static'] (at pp.c:1370)
    FuncDecl: quals=None (at pp.c:1370)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__McuPowerOverride__lowestState', quals=[] (at pp.c:1370)
        IdentifierType: names=['mcu_power_t'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[], storage=['inline', 'static'] (at pp.c:1374)
    FuncDecl: quals=None (at pp.c:1374)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[] (at pp.c:1374)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[], storage=['inline', 'static'] (at pp.c:1376)
    FuncDecl: quals=None (at pp.c:1376)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[] (at pp.c:1376)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[], storage=['inline', 'static'] (at pp.c:1378)
    FuncDecl: quals=None (at pp.c:1378)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[] (at pp.c:1378)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[], storage=['inline', 'static'] (at pp.c:1380)
    FuncDecl: quals=None (at pp.c:1380)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[] (at pp.c:1380)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[], storage=['inline', 'static'] (at pp.c:1382)
    FuncDecl: quals=None (at pp.c:1382)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[] (at pp.c:1382)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[], storage=['inline', 'static'] (at pp.c:1387)
    FuncDecl: quals=None (at pp.c:1387)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[] (at pp.c:1387)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[], storage=['inline', 'static'] (at pp.c:1392)
    FuncDecl: quals=None (at pp.c:1392)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[] (at pp.c:1392)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[], storage=['inline', 'static'] (at pp.c:1397)
    FuncDecl: quals=None (at pp.c:1397)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[] (at pp.c:1397)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__startTimerA', quals=[], storage=['inline', 'static'] (at pp.c:1403)
    FuncDecl: quals=None (at pp.c:1403)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__startTimerA', quals=[] (at pp.c:1403)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__startTimerB', quals=[], storage=['inline', 'static'] (at pp.c:1405)
    FuncDecl: quals=None (at pp.c:1405)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__startTimerB', quals=[] (at pp.c:1405)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__set_dco_calib', quals=[], storage=['static'] (at pp.c:1407)
    FuncDecl: quals=None (at pp.c:1407)
      ParamList:  (at pp.c:1407)
        Decl: name='calib', quals=[], storage=[] (at pp.c:1407)
          TypeDecl: declname='calib', quals=[] (at pp.c:1407)
            IdentifierType: names=['int'] (at None)
      TypeDecl: declname='Msp430ClockP__set_dco_calib', quals=[] (at pp.c:1407)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__test_calib_busywait_delta', quals=[], storage=['inline', 'static'] (at pp.c:1413)
    FuncDecl: quals=None (at pp.c:1413)
      ParamList:  (at pp.c:1413)
        Decl: name='calib', quals=[], storage=[] (at pp.c:1413)
          TypeDecl: declname='calib', quals=[] (at pp.c:1413)
            IdentifierType: names=['int'] (at None)
      TypeDecl: declname='Msp430ClockP__test_calib_busywait_delta', quals=[] (at pp.c:1413)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430ClockP__busyCalibrateDco', quals=[], storage=['inline', 'static'] (at pp.c:1415)
    FuncDecl: quals=None (at pp.c:1415)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__busyCalibrateDco', quals=[] (at pp.c:1415)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:1417)
    FuncDecl: quals=None (at pp.c:1417)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Init__init', quals=[] (at pp.c:1417)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430TimerP__0__Event__fired', quals=[], storage=['static'] (at pp.c:1419)
    FuncDecl: quals=None (at pp.c:1419)
      ParamList:  (at pp.c:1421)
        Decl: name='arg_0x101409020', quals=[], storage=[] (at pp.c:1421)
          TypeDecl: declname='arg_0x101409020', quals=[] (at pp.c:1421)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Event__fired', quals=[] (at pp.c:1419)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__overflow', quals=[], storage=['static'] (at pp.c:1423)
    FuncDecl: quals=None (at pp.c:1423)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__overflow', quals=[] (at pp.c:1423)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__VectorTimerX0__fired', quals=[], storage=['inline', 'static'] (at pp.c:1425)
    FuncDecl: quals=None (at pp.c:1425)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__VectorTimerX0__fired', quals=[] (at pp.c:1425)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__VectorTimerX1__fired', quals=[], storage=['inline', 'static'] (at pp.c:1430)
    FuncDecl: quals=None (at pp.c:1430)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__VectorTimerX1__fired', quals=[] (at pp.c:1430)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Overflow__fired', quals=[], storage=['inline', 'static'] (at pp.c:1436)
    FuncDecl: quals=None (at pp.c:1436)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Overflow__fired', quals=[] (at pp.c:1436)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Event__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:1445)
    FuncDecl: quals=None (at pp.c:1445)
      ParamList:  (at pp.c:1445)
        Decl: name='n', quals=[], storage=[] (at pp.c:1445)
          TypeDecl: declname='n', quals=[] (at pp.c:1445)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Event__default__fired', quals=[] (at pp.c:1445)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Event__fired', quals=[], storage=['static'] (at pp.c:1447)
    FuncDecl: quals=None (at pp.c:1447)
      ParamList:  (at pp.c:1449)
        Decl: name='arg_0x101409020', quals=[], storage=[] (at pp.c:1449)
          TypeDecl: declname='arg_0x101409020', quals=[] (at pp.c:1449)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Event__fired', quals=[] (at pp.c:1447)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Timer__overflow', quals=[], storage=['static'] (at pp.c:1451)
    FuncDecl: quals=None (at pp.c:1451)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Timer__overflow', quals=[] (at pp.c:1451)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Timer__get', quals=[], storage=['static'] (at pp.c:1453)
    FuncDecl: quals=None (at pp.c:1453)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Timer__get', quals=[] (at pp.c:1453)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerP__1__Timer__isOverflowPending', quals=[], storage=['inline', 'static'] (at pp.c:1455)
    FuncDecl: quals=None (at pp.c:1455)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Timer__isOverflowPending', quals=[] (at pp.c:1455)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430TimerP__1__VectorTimerX0__fired', quals=[], storage=['inline', 'static'] (at pp.c:1457)
    FuncDecl: quals=None (at pp.c:1457)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__VectorTimerX0__fired', quals=[] (at pp.c:1457)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__VectorTimerX1__fired', quals=[], storage=['inline', 'static'] (at pp.c:1462)
    FuncDecl: quals=None (at pp.c:1462)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__VectorTimerX1__fired', quals=[] (at pp.c:1462)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Overflow__fired', quals=[], storage=['inline', 'static'] (at pp.c:1468)
    FuncDecl: quals=None (at pp.c:1468)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Overflow__fired', quals=[] (at pp.c:1468)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Event__default__fired', quals=[], storage=['static'] (at pp.c:1477)
    FuncDecl: quals=None (at pp.c:1477)
      ParamList:  (at pp.c:1477)
        Decl: name='n', quals=[], storage=[] (at pp.c:1477)
          TypeDecl: declname='n', quals=[] (at pp.c:1477)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Event__default__fired', quals=[] (at pp.c:1477)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Capture__captured', quals=[], storage=['static'] (at pp.c:1479)
    FuncDecl: quals=None (at pp.c:1479)
      ParamList:  (at pp.c:1479)
        Decl: name='time', quals=[], storage=[] (at pp.c:1479)
          TypeDecl: declname='time', quals=[] (at pp.c:1479)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Capture__captured', quals=[] (at pp.c:1479)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Compare__fired', quals=[], storage=['static'] (at pp.c:1481)
    FuncDecl: quals=None (at pp.c:1481)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Compare__fired', quals=[] (at pp.c:1481)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__0__cc_t', quals=[], storage=['typedef'] (at pp.c:1483)
    TypeDecl: declname='Msp430TimerCapComP__0__cc_t', quals=[] (at pp.c:1483)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:1486)
    FuncDecl: quals=None (at pp.c:1486)
      ParamList:  (at pp.c:1486)
        Decl: name='x', quals=[], storage=[] (at pp.c:1486)
          TypeDecl: declname='x', quals=[] (at pp.c:1486)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__int2CC', quals=[] (at pp.c:1486)
        IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:1488)
    FuncDecl: quals=None (at pp.c:1488)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Control__getControl', quals=[] (at pp.c:1488)
        IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:1490)
    FuncDecl: quals=None (at pp.c:1490)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Capture__getEvent', quals=[] (at pp.c:1490)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__Event__fired', quals=[], storage=['static'] (at pp.c:1492)
    FuncDecl: quals=None (at pp.c:1492)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Event__fired', quals=[] (at pp.c:1492)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:1500)
    FuncDecl: quals=None (at pp.c:1500)
      ParamList:  (at pp.c:1500)
        Decl: name='n', quals=[], storage=[] (at pp.c:1500)
          TypeDecl: declname='n', quals=[] (at pp.c:1500)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Capture__default__captured', quals=[] (at pp.c:1500)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:1504)
    FuncDecl: quals=None (at pp.c:1504)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Compare__default__fired', quals=[] (at pp.c:1504)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:1508)
    FuncDecl: quals=None (at pp.c:1508)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Timer__overflow', quals=[] (at pp.c:1508)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Capture__captured', quals=[], storage=['static'] (at pp.c:1510)
    FuncDecl: quals=None (at pp.c:1510)
      ParamList:  (at pp.c:1510)
        Decl: name='time', quals=[], storage=[] (at pp.c:1510)
          TypeDecl: declname='time', quals=[] (at pp.c:1510)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Capture__captured', quals=[] (at pp.c:1510)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Compare__fired', quals=[], storage=['static'] (at pp.c:1512)
    FuncDecl: quals=None (at pp.c:1512)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Compare__fired', quals=[] (at pp.c:1512)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__1__cc_t', quals=[], storage=['typedef'] (at pp.c:1514)
    TypeDecl: declname='Msp430TimerCapComP__1__cc_t', quals=[] (at pp.c:1514)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:1517)
    FuncDecl: quals=None (at pp.c:1517)
      ParamList:  (at pp.c:1517)
        Decl: name='x', quals=[], storage=[] (at pp.c:1517)
          TypeDecl: declname='x', quals=[] (at pp.c:1517)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__int2CC', quals=[] (at pp.c:1517)
        IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:1519)
    FuncDecl: quals=None (at pp.c:1519)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Control__getControl', quals=[] (at pp.c:1519)
        IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:1521)
    FuncDecl: quals=None (at pp.c:1521)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Capture__getEvent', quals=[] (at pp.c:1521)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__Event__fired', quals=[], storage=['static'] (at pp.c:1523)
    FuncDecl: quals=None (at pp.c:1523)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Event__fired', quals=[] (at pp.c:1523)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:1531)
    FuncDecl: quals=None (at pp.c:1531)
      ParamList:  (at pp.c:1531)
        Decl: name='n', quals=[], storage=[] (at pp.c:1531)
          TypeDecl: declname='n', quals=[] (at pp.c:1531)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Capture__default__captured', quals=[] (at pp.c:1531)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:1535)
    FuncDecl: quals=None (at pp.c:1535)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Compare__default__fired', quals=[] (at pp.c:1535)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:1539)
    FuncDecl: quals=None (at pp.c:1539)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Timer__overflow', quals=[] (at pp.c:1539)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Capture__captured', quals=[], storage=['static'] (at pp.c:1541)
    FuncDecl: quals=None (at pp.c:1541)
      ParamList:  (at pp.c:1541)
        Decl: name='time', quals=[], storage=[] (at pp.c:1541)
          TypeDecl: declname='time', quals=[] (at pp.c:1541)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Capture__captured', quals=[] (at pp.c:1541)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Compare__fired', quals=[], storage=['static'] (at pp.c:1543)
    FuncDecl: quals=None (at pp.c:1543)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Compare__fired', quals=[] (at pp.c:1543)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__2__cc_t', quals=[], storage=['typedef'] (at pp.c:1545)
    TypeDecl: declname='Msp430TimerCapComP__2__cc_t', quals=[] (at pp.c:1545)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:1548)
    FuncDecl: quals=None (at pp.c:1548)
      ParamList:  (at pp.c:1548)
        Decl: name='x', quals=[], storage=[] (at pp.c:1548)
          TypeDecl: declname='x', quals=[] (at pp.c:1548)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__int2CC', quals=[] (at pp.c:1548)
        IdentifierType: names=['Msp430TimerCapComP__2__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:1550)
    FuncDecl: quals=None (at pp.c:1550)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Control__getControl', quals=[] (at pp.c:1550)
        IdentifierType: names=['Msp430TimerCapComP__2__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:1552)
    FuncDecl: quals=None (at pp.c:1552)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Capture__getEvent', quals=[] (at pp.c:1552)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__Event__fired', quals=[], storage=['static'] (at pp.c:1554)
    FuncDecl: quals=None (at pp.c:1554)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Event__fired', quals=[] (at pp.c:1554)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:1562)
    FuncDecl: quals=None (at pp.c:1562)
      ParamList:  (at pp.c:1562)
        Decl: name='n', quals=[], storage=[] (at pp.c:1562)
          TypeDecl: declname='n', quals=[] (at pp.c:1562)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Capture__default__captured', quals=[] (at pp.c:1562)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:1566)
    FuncDecl: quals=None (at pp.c:1566)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Compare__default__fired', quals=[] (at pp.c:1566)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:1570)
    FuncDecl: quals=None (at pp.c:1570)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Timer__overflow', quals=[] (at pp.c:1570)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Capture__captured', quals=[], storage=['static'] (at pp.c:1572)
    FuncDecl: quals=None (at pp.c:1572)
      ParamList:  (at pp.c:1572)
        Decl: name='time', quals=[], storage=[] (at pp.c:1572)
          TypeDecl: declname='time', quals=[] (at pp.c:1572)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Capture__captured', quals=[] (at pp.c:1572)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Compare__fired', quals=[], storage=['static'] (at pp.c:1574)
    FuncDecl: quals=None (at pp.c:1574)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Compare__fired', quals=[] (at pp.c:1574)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Timer__get', quals=[], storage=['static'] (at pp.c:1576)
    FuncDecl: quals=None (at pp.c:1576)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Timer__get', quals=[] (at pp.c:1576)
        IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='Msp430TimerCapComP__3__cc_t', quals=[], storage=['typedef'] (at pp.c:1578)
    TypeDecl: declname='Msp430TimerCapComP__3__cc_t', quals=[] (at pp.c:1578)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:1580)
    FuncDecl: quals=None (at pp.c:1580)
      ParamList:  (at pp.c:1580)
        Decl: name='x', quals=[], storage=[] (at pp.c:1580)
          TypeDecl: declname='x', quals=[] (at pp.c:1580)
            IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__CC2int', quals=[] (at pp.c:1580)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:1581)
    FuncDecl: quals=None (at pp.c:1581)
      ParamList:  (at pp.c:1581)
        Decl: name='x', quals=[], storage=[] (at pp.c:1581)
          TypeDecl: declname='x', quals=[] (at pp.c:1581)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__int2CC', quals=[] (at pp.c:1581)
        IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__compareControl', quals=[], storage=['inline', 'static'] (at pp.c:1583)
    FuncDecl: quals=None (at pp.c:1583)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__compareControl', quals=[] (at pp.c:1583)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:1585)
    FuncDecl: quals=None (at pp.c:1585)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__getControl', quals=[] (at pp.c:1585)
        IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[], storage=['inline', 'static'] (at pp.c:1595)
    FuncDecl: quals=None (at pp.c:1595)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[] (at pp.c:1595)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[], storage=['inline', 'static'] (at pp.c:1605)
    FuncDecl: quals=None (at pp.c:1605)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[] (at pp.c:1605)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__enableEvents', quals=[], storage=['inline', 'static'] (at pp.c:1607)
    FuncDecl: quals=None (at pp.c:1607)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__enableEvents', quals=[] (at pp.c:1607)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:1612)
    FuncDecl: quals=None (at pp.c:1612)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__disableEvents', quals=[] (at pp.c:1612)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:1614)
    FuncDecl: quals=None (at pp.c:1614)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Capture__getEvent', quals=[] (at pp.c:1614)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:1619)
    FuncDecl: quals=None (at pp.c:1619)
      ParamList:  (at pp.c:1619)
        Decl: name='x', quals=[], storage=[] (at pp.c:1619)
          TypeDecl: declname='x', quals=[] (at pp.c:1619)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEvent', quals=[] (at pp.c:1619)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[], storage=['inline', 'static'] (at pp.c:1629)
    FuncDecl: quals=None (at pp.c:1629)
      ParamList:  (at pp.c:1629)
        Decl: name='x', quals=[], storage=[] (at pp.c:1629)
          TypeDecl: declname='x', quals=[] (at pp.c:1629)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[] (at pp.c:1629)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:1631)
    FuncDecl: quals=None (at pp.c:1631)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Event__fired', quals=[] (at pp.c:1631)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:1639)
    FuncDecl: quals=None (at pp.c:1639)
      ParamList:  (at pp.c:1639)
        Decl: name='n', quals=[], storage=[] (at pp.c:1639)
          TypeDecl: declname='n', quals=[] (at pp.c:1639)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Capture__default__captured', quals=[] (at pp.c:1639)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:1647)
    FuncDecl: quals=None (at pp.c:1647)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Timer__overflow', quals=[] (at pp.c:1647)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Capture__captured', quals=[], storage=['static'] (at pp.c:1649)
    FuncDecl: quals=None (at pp.c:1649)
      ParamList:  (at pp.c:1649)
        Decl: name='time', quals=[], storage=[] (at pp.c:1649)
          TypeDecl: declname='time', quals=[] (at pp.c:1649)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Capture__captured', quals=[] (at pp.c:1649)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Compare__fired', quals=[], storage=['static'] (at pp.c:1651)
    FuncDecl: quals=None (at pp.c:1651)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Compare__fired', quals=[] (at pp.c:1651)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__4__cc_t', quals=[], storage=['typedef'] (at pp.c:1653)
    TypeDecl: declname='Msp430TimerCapComP__4__cc_t', quals=[] (at pp.c:1653)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:1656)
    FuncDecl: quals=None (at pp.c:1656)
      ParamList:  (at pp.c:1656)
        Decl: name='x', quals=[], storage=[] (at pp.c:1656)
          TypeDecl: declname='x', quals=[] (at pp.c:1656)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__int2CC', quals=[] (at pp.c:1656)
        IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:1658)
    FuncDecl: quals=None (at pp.c:1658)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__getControl', quals=[] (at pp.c:1658)
        IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:1660)
    FuncDecl: quals=None (at pp.c:1660)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Capture__getEvent', quals=[] (at pp.c:1660)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:1662)
    FuncDecl: quals=None (at pp.c:1662)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Event__fired', quals=[] (at pp.c:1662)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:1670)
    FuncDecl: quals=None (at pp.c:1670)
      ParamList:  (at pp.c:1670)
        Decl: name='n', quals=[], storage=[] (at pp.c:1670)
          TypeDecl: declname='n', quals=[] (at pp.c:1670)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Capture__default__captured', quals=[] (at pp.c:1670)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:1674)
    FuncDecl: quals=None (at pp.c:1674)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Compare__default__fired', quals=[] (at pp.c:1674)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:1678)
    FuncDecl: quals=None (at pp.c:1678)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Timer__overflow', quals=[] (at pp.c:1678)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Capture__captured', quals=[], storage=['static'] (at pp.c:1680)
    FuncDecl: quals=None (at pp.c:1680)
      ParamList:  (at pp.c:1680)
        Decl: name='time', quals=[], storage=[] (at pp.c:1680)
          TypeDecl: declname='time', quals=[] (at pp.c:1680)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Capture__captured', quals=[] (at pp.c:1680)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Compare__fired', quals=[], storage=['static'] (at pp.c:1682)
    FuncDecl: quals=None (at pp.c:1682)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Compare__fired', quals=[] (at pp.c:1682)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__5__cc_t', quals=[], storage=['typedef'] (at pp.c:1684)
    TypeDecl: declname='Msp430TimerCapComP__5__cc_t', quals=[] (at pp.c:1684)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:1687)
    FuncDecl: quals=None (at pp.c:1687)
      ParamList:  (at pp.c:1687)
        Decl: name='x', quals=[], storage=[] (at pp.c:1687)
          TypeDecl: declname='x', quals=[] (at pp.c:1687)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__int2CC', quals=[] (at pp.c:1687)
        IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:1689)
    FuncDecl: quals=None (at pp.c:1689)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__getControl', quals=[] (at pp.c:1689)
        IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:1691)
    FuncDecl: quals=None (at pp.c:1691)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Capture__getEvent', quals=[] (at pp.c:1691)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:1693)
    FuncDecl: quals=None (at pp.c:1693)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Event__fired', quals=[] (at pp.c:1693)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:1701)
    FuncDecl: quals=None (at pp.c:1701)
      ParamList:  (at pp.c:1701)
        Decl: name='n', quals=[], storage=[] (at pp.c:1701)
          TypeDecl: declname='n', quals=[] (at pp.c:1701)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Capture__default__captured', quals=[] (at pp.c:1701)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:1705)
    FuncDecl: quals=None (at pp.c:1705)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Compare__default__fired', quals=[] (at pp.c:1705)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:1709)
    FuncDecl: quals=None (at pp.c:1709)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Timer__overflow', quals=[] (at pp.c:1709)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Capture__captured', quals=[], storage=['static'] (at pp.c:1711)
    FuncDecl: quals=None (at pp.c:1711)
      ParamList:  (at pp.c:1711)
        Decl: name='time', quals=[], storage=[] (at pp.c:1711)
          TypeDecl: declname='time', quals=[] (at pp.c:1711)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Capture__captured', quals=[] (at pp.c:1711)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Compare__fired', quals=[], storage=['static'] (at pp.c:1713)
    FuncDecl: quals=None (at pp.c:1713)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Compare__fired', quals=[] (at pp.c:1713)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__6__cc_t', quals=[], storage=['typedef'] (at pp.c:1715)
    TypeDecl: declname='Msp430TimerCapComP__6__cc_t', quals=[] (at pp.c:1715)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:1718)
    FuncDecl: quals=None (at pp.c:1718)
      ParamList:  (at pp.c:1718)
        Decl: name='x', quals=[], storage=[] (at pp.c:1718)
          TypeDecl: declname='x', quals=[] (at pp.c:1718)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__int2CC', quals=[] (at pp.c:1718)
        IdentifierType: names=['Msp430TimerCapComP__6__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:1720)
    FuncDecl: quals=None (at pp.c:1720)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Control__getControl', quals=[] (at pp.c:1720)
        IdentifierType: names=['Msp430TimerCapComP__6__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:1722)
    FuncDecl: quals=None (at pp.c:1722)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Capture__getEvent', quals=[] (at pp.c:1722)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:1724)
    FuncDecl: quals=None (at pp.c:1724)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Event__fired', quals=[] (at pp.c:1724)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:1732)
    FuncDecl: quals=None (at pp.c:1732)
      ParamList:  (at pp.c:1732)
        Decl: name='n', quals=[], storage=[] (at pp.c:1732)
          TypeDecl: declname='n', quals=[] (at pp.c:1732)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Capture__default__captured', quals=[] (at pp.c:1732)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:1736)
    FuncDecl: quals=None (at pp.c:1736)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Compare__default__fired', quals=[] (at pp.c:1736)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:1740)
    FuncDecl: quals=None (at pp.c:1740)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Timer__overflow', quals=[] (at pp.c:1740)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Capture__captured', quals=[], storage=['static'] (at pp.c:1742)
    FuncDecl: quals=None (at pp.c:1742)
      ParamList:  (at pp.c:1742)
        Decl: name='time', quals=[], storage=[] (at pp.c:1742)
          TypeDecl: declname='time', quals=[] (at pp.c:1742)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Capture__captured', quals=[] (at pp.c:1742)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Compare__fired', quals=[], storage=['static'] (at pp.c:1744)
    FuncDecl: quals=None (at pp.c:1744)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Compare__fired', quals=[] (at pp.c:1744)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__7__cc_t', quals=[], storage=['typedef'] (at pp.c:1746)
    TypeDecl: declname='Msp430TimerCapComP__7__cc_t', quals=[] (at pp.c:1746)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:1749)
    FuncDecl: quals=None (at pp.c:1749)
      ParamList:  (at pp.c:1749)
        Decl: name='x', quals=[], storage=[] (at pp.c:1749)
          TypeDecl: declname='x', quals=[] (at pp.c:1749)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__int2CC', quals=[] (at pp.c:1749)
        IdentifierType: names=['Msp430TimerCapComP__7__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:1751)
    FuncDecl: quals=None (at pp.c:1751)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Control__getControl', quals=[] (at pp.c:1751)
        IdentifierType: names=['Msp430TimerCapComP__7__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:1753)
    FuncDecl: quals=None (at pp.c:1753)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Capture__getEvent', quals=[] (at pp.c:1753)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:1755)
    FuncDecl: quals=None (at pp.c:1755)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Event__fired', quals=[] (at pp.c:1755)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:1763)
    FuncDecl: quals=None (at pp.c:1763)
      ParamList:  (at pp.c:1763)
        Decl: name='n', quals=[], storage=[] (at pp.c:1763)
          TypeDecl: declname='n', quals=[] (at pp.c:1763)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Capture__default__captured', quals=[] (at pp.c:1763)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:1767)
    FuncDecl: quals=None (at pp.c:1767)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Compare__default__fired', quals=[] (at pp.c:1767)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:1771)
    FuncDecl: quals=None (at pp.c:1771)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Timer__overflow', quals=[] (at pp.c:1771)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Capture__captured', quals=[], storage=['static'] (at pp.c:1773)
    FuncDecl: quals=None (at pp.c:1773)
      ParamList:  (at pp.c:1773)
        Decl: name='time', quals=[], storage=[] (at pp.c:1773)
          TypeDecl: declname='time', quals=[] (at pp.c:1773)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Capture__captured', quals=[] (at pp.c:1773)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Compare__fired', quals=[], storage=['static'] (at pp.c:1775)
    FuncDecl: quals=None (at pp.c:1775)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Compare__fired', quals=[] (at pp.c:1775)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__8__cc_t', quals=[], storage=['typedef'] (at pp.c:1777)
    TypeDecl: declname='Msp430TimerCapComP__8__cc_t', quals=[] (at pp.c:1777)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:1780)
    FuncDecl: quals=None (at pp.c:1780)
      ParamList:  (at pp.c:1780)
        Decl: name='x', quals=[], storage=[] (at pp.c:1780)
          TypeDecl: declname='x', quals=[] (at pp.c:1780)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__int2CC', quals=[] (at pp.c:1780)
        IdentifierType: names=['Msp430TimerCapComP__8__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:1782)
    FuncDecl: quals=None (at pp.c:1782)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Control__getControl', quals=[] (at pp.c:1782)
        IdentifierType: names=['Msp430TimerCapComP__8__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:1784)
    FuncDecl: quals=None (at pp.c:1784)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Capture__getEvent', quals=[] (at pp.c:1784)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:1786)
    FuncDecl: quals=None (at pp.c:1786)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Event__fired', quals=[] (at pp.c:1786)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:1794)
    FuncDecl: quals=None (at pp.c:1794)
      ParamList:  (at pp.c:1794)
        Decl: name='n', quals=[], storage=[] (at pp.c:1794)
          TypeDecl: declname='n', quals=[] (at pp.c:1794)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Capture__default__captured', quals=[] (at pp.c:1794)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:1798)
    FuncDecl: quals=None (at pp.c:1798)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Compare__default__fired', quals=[] (at pp.c:1798)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:1802)
    FuncDecl: quals=None (at pp.c:1802)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Timer__overflow', quals=[] (at pp.c:1802)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Capture__captured', quals=[], storage=['static'] (at pp.c:1804)
    FuncDecl: quals=None (at pp.c:1804)
      ParamList:  (at pp.c:1804)
        Decl: name='time', quals=[], storage=[] (at pp.c:1804)
          TypeDecl: declname='time', quals=[] (at pp.c:1804)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Capture__captured', quals=[] (at pp.c:1804)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Compare__fired', quals=[], storage=['static'] (at pp.c:1806)
    FuncDecl: quals=None (at pp.c:1806)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Compare__fired', quals=[] (at pp.c:1806)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__9__cc_t', quals=[], storage=['typedef'] (at pp.c:1808)
    TypeDecl: declname='Msp430TimerCapComP__9__cc_t', quals=[] (at pp.c:1808)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:1811)
    FuncDecl: quals=None (at pp.c:1811)
      ParamList:  (at pp.c:1811)
        Decl: name='x', quals=[], storage=[] (at pp.c:1811)
          TypeDecl: declname='x', quals=[] (at pp.c:1811)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__int2CC', quals=[] (at pp.c:1811)
        IdentifierType: names=['Msp430TimerCapComP__9__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:1813)
    FuncDecl: quals=None (at pp.c:1813)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Control__getControl', quals=[] (at pp.c:1813)
        IdentifierType: names=['Msp430TimerCapComP__9__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:1815)
    FuncDecl: quals=None (at pp.c:1815)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Capture__getEvent', quals=[] (at pp.c:1815)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:1817)
    FuncDecl: quals=None (at pp.c:1817)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Event__fired', quals=[] (at pp.c:1817)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:1825)
    FuncDecl: quals=None (at pp.c:1825)
      ParamList:  (at pp.c:1825)
        Decl: name='n', quals=[], storage=[] (at pp.c:1825)
          TypeDecl: declname='n', quals=[] (at pp.c:1825)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Capture__default__captured', quals=[] (at pp.c:1825)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:1829)
    FuncDecl: quals=None (at pp.c:1829)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Compare__default__fired', quals=[] (at pp.c:1829)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:1833)
    FuncDecl: quals=None (at pp.c:1833)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Timer__overflow', quals=[] (at pp.c:1833)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCommonP__VectorTimerB1__fired', quals=[], storage=['static'] (at pp.c:1835)
    FuncDecl: quals=None (at pp.c:1835)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCommonP__VectorTimerB1__fired', quals=[] (at pp.c:1835)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCommonP__VectorTimerA0__fired', quals=[], storage=['static'] (at pp.c:1837)
    FuncDecl: quals=None (at pp.c:1837)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCommonP__VectorTimerA0__fired', quals=[] (at pp.c:1837)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCommonP__VectorTimerA1__fired', quals=[], storage=['static'] (at pp.c:1839)
    FuncDecl: quals=None (at pp.c:1839)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCommonP__VectorTimerA1__fired', quals=[] (at pp.c:1839)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCommonP__VectorTimerB0__fired', quals=[], storage=['static'] (at pp.c:1841)
    FuncDecl: quals=None (at pp.c:1841)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCommonP__VectorTimerB0__fired', quals=[] (at pp.c:1841)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_TIMERA0_VECTOR', quals=[], storage=[] (at pp.c:1843)
    FuncDecl: quals=None (at pp.c:1843)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_TIMERA0_VECTOR', quals=[] (at pp.c:1843)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_TIMERA1_VECTOR', quals=[], storage=[] (at pp.c:1844)
    FuncDecl: quals=None (at pp.c:1844)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_TIMERA1_VECTOR', quals=[] (at pp.c:1844)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_TIMERB0_VECTOR', quals=[], storage=[] (at pp.c:1845)
    FuncDecl: quals=None (at pp.c:1845)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_TIMERB0_VECTOR', quals=[] (at pp.c:1845)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_TIMERB1_VECTOR', quals=[], storage=[] (at pp.c:1846)
    FuncDecl: quals=None (at pp.c:1846)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_TIMERB1_VECTOR', quals=[] (at pp.c:1846)
        IdentifierType: names=['void'] (at None)
  Decl: name='McuSleepC__McuPowerOverride__lowestState', quals=[], storage=['static'] (at pp.c:1848)
    FuncDecl: quals=None (at pp.c:1848)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='McuSleepC__McuPowerOverride__lowestState', quals=[] (at pp.c:1848)
        IdentifierType: names=['mcu_power_t'] (at None)
  Decl: name='McuSleepC__dirty', quals=[], storage=[] (at pp.c:1850)
    TypeDecl: declname='McuSleepC__dirty', quals=[] (at pp.c:1850)
      IdentifierType: names=['bool'] (at None)
    ID: name='TRUE' (at pp.c:1850)
  Decl: name='McuSleepC__powerState', quals=[], storage=[] (at pp.c:1851)
    TypeDecl: declname='McuSleepC__powerState', quals=[] (at pp.c:1851)
      IdentifierType: names=['mcu_power_t'] (at None)
    ID: name='MSP430_POWER_ACTIVE' (at pp.c:1851)
  Decl: name='McuSleepC__msp430PowerBits', quals=['const'], storage=[] (at pp.c:1856)
    ArrayDecl:  (at pp.c:1856)
      TypeDecl: declname='McuSleepC__msp430PowerBits', quals=['const'] (at pp.c:1856)
        IdentifierType: names=['uint16_t'] (at None)
      BinaryOp: op='+' (at pp.c:1856)
        ID: name='MSP430_POWER_LPM4' (at pp.c:1856)
        Constant: type='int', value='1' (at pp.c:1856)
    ExprList:  (at pp.c:1857)
      Constant: type='int', value='0' (at pp.c:1857)
      Constant: type='int', value='0x0010' (at pp.c:1858)
      BinaryOp: op='+' (at pp.c:1859)
        Constant: type='int', value='0x0040' (at pp.c:1859)
        Constant: type='int', value='0x0010' (at pp.c:1859)
      BinaryOp: op='+' (at pp.c:1860)
        Constant: type='int', value='0x0080' (at pp.c:1860)
        Constant: type='int', value='0x0010' (at pp.c:1860)
      BinaryOp: op='+' (at pp.c:1861)
        BinaryOp: op='+' (at pp.c:1861)
          Constant: type='int', value='0x0080' (at pp.c:1861)
          Constant: type='int', value='0x0040' (at pp.c:1861)
        Constant: type='int', value='0x0010' (at pp.c:1861)
      BinaryOp: op='+' (at pp.c:1862)
        BinaryOp: op='+' (at pp.c:1862)
          BinaryOp: op='+' (at pp.c:1862)
            Constant: type='int', value='0x0080' (at pp.c:1862)
            Constant: type='int', value='0x0040' (at pp.c:1862)
          Constant: type='int', value='0x0020' (at pp.c:1862)
        Constant: type='int', value='0x0010' (at pp.c:1862)
  Decl: name='McuSleepC__getPowerState', quals=[], storage=['inline', 'static'] (at pp.c:1865)
    FuncDecl: quals=None (at pp.c:1865)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='McuSleepC__getPowerState', quals=[] (at pp.c:1865)
        IdentifierType: names=['mcu_power_t'] (at None)
  Decl: name='McuSleepC__computePowerState', quals=[], storage=['inline', 'static'] (at pp.c:1867)
    FuncDecl: quals=None (at pp.c:1867)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='McuSleepC__computePowerState', quals=[] (at pp.c:1867)
        IdentifierType: names=['void'] (at None)
  Decl: name='McuSleepC__McuSleep__sleep', quals=[], storage=['inline', 'static'] (at pp.c:1872)
    FuncDecl: quals=None (at pp.c:1872)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='McuSleepC__McuSleep__sleep', quals=[] (at pp.c:1872)
        IdentifierType: names=['void'] (at None)
  Decl: name='MotePlatformC__SubInit__init', quals=[], storage=['static'] (at pp.c:1874)
    FuncDecl: quals=None (at pp.c:1874)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='MotePlatformC__SubInit__init', quals=[] (at pp.c:1874)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='MotePlatformC__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:1876)
    FuncDecl: quals=None (at pp.c:1876)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='MotePlatformC__Init__init', quals=[] (at pp.c:1876)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='MotePlatformC__SubInit__default__init', quals=[], storage=['inline', 'static'] (at pp.c:1878)
    FuncDecl: quals=None (at pp.c:1878)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='MotePlatformC__SubInit__default__init', quals=[] (at pp.c:1878)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='RealMainP__SoftwareInit__init', quals=[], storage=['static'] (at pp.c:1880)
    FuncDecl: quals=None (at pp.c:1880)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__SoftwareInit__init', quals=[] (at pp.c:1880)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='RealMainP__Boot__booted', quals=[], storage=['static'] (at pp.c:1882)
    FuncDecl: quals=None (at pp.c:1882)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__Boot__booted', quals=[] (at pp.c:1882)
        IdentifierType: names=['void'] (at None)
  Decl: name='RealMainP__PlatformInit__init', quals=[], storage=['static'] (at pp.c:1884)
    FuncDecl: quals=None (at pp.c:1884)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__PlatformInit__init', quals=[] (at pp.c:1884)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='RealMainP__Scheduler__init', quals=[], storage=['static'] (at pp.c:1886)
    FuncDecl: quals=None (at pp.c:1886)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__Scheduler__init', quals=[] (at pp.c:1886)
        IdentifierType: names=['void'] (at None)
  Decl: name='RealMainP__Scheduler__taskLoop', quals=[], storage=['static'] (at pp.c:1888)
    FuncDecl: quals=None (at pp.c:1888)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__Scheduler__taskLoop', quals=[] (at pp.c:1888)
        IdentifierType: names=['void'] (at None)
  Decl: name='RealMainP__Scheduler__runNextTask', quals=[], storage=['static'] (at pp.c:1890)
    FuncDecl: quals=None (at pp.c:1890)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__Scheduler__runNextTask', quals=[] (at pp.c:1890)
        IdentifierType: names=['bool'] (at None)
  Decl: name='main', quals=[], storage=[] (at pp.c:1892)
    FuncDecl: quals=None (at pp.c:1892)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='main', quals=[] (at pp.c:1892)
        IdentifierType: names=['int'] (at None)
  Decl: name='SchedulerBasicP__TaskBasic__runTask', quals=[], storage=['static'] (at pp.c:1894)
    FuncDecl: quals=None (at pp.c:1894)
      ParamList:  (at pp.c:1896)
        Decl: name='arg_0x101333340', quals=[], storage=[] (at pp.c:1896)
          TypeDecl: declname='arg_0x101333340', quals=[] (at pp.c:1896)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__TaskBasic__runTask', quals=[] (at pp.c:1894)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__McuSleep__sleep', quals=[], storage=['static'] (at pp.c:1898)
    FuncDecl: quals=None (at pp.c:1898)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__McuSleep__sleep', quals=[] (at pp.c:1898)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1900)
    Enum: name='SchedulerBasicP____nesc_unnamed4269' (at pp.c:1900)
      EnumeratorList:  (at pp.c:1902)
        Enumerator: name='SchedulerBasicP__NUM_TASKS' (at pp.c:1902)
          Constant: type='int', value='2U' (at pp.c:1902)
        Enumerator: name='SchedulerBasicP__NO_TASK' (at pp.c:1903)
          Constant: type='int', value='255' (at pp.c:1903)
  Decl: name='SchedulerBasicP__m_head', quals=[], storage=[] (at pp.c:1906)
    TypeDecl: declname='SchedulerBasicP__m_head', quals=[] (at pp.c:1906)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SchedulerBasicP__m_tail', quals=[], storage=[] (at pp.c:1907)
    TypeDecl: declname='SchedulerBasicP__m_tail', quals=[] (at pp.c:1907)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SchedulerBasicP__m_next', quals=[], storage=[] (at pp.c:1908)
    ArrayDecl:  (at pp.c:1908)
      TypeDecl: declname='SchedulerBasicP__m_next', quals=[] (at pp.c:1908)
        IdentifierType: names=['uint8_t'] (at None)
      ID: name='SchedulerBasicP__NUM_TASKS' (at pp.c:1908)
  Decl: name='SchedulerBasicP__popTask', quals=[], storage=['__inline', 'static'] (at pp.c:1917)
    FuncDecl: quals=None (at pp.c:1917)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__popTask', quals=[] (at pp.c:1917)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SchedulerBasicP__isWaiting', quals=[], storage=['inline', 'static'] (at pp.c:1919)
    FuncDecl: quals=None (at pp.c:1919)
      ParamList:  (at pp.c:1919)
        Decl: name='id', quals=[], storage=[] (at pp.c:1919)
          TypeDecl: declname='id', quals=[] (at pp.c:1919)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__isWaiting', quals=[] (at pp.c:1919)
        IdentifierType: names=['bool'] (at None)
  Decl: name='SchedulerBasicP__pushTask', quals=[], storage=['inline', 'static'] (at pp.c:1924)
    FuncDecl: quals=None (at pp.c:1924)
      ParamList:  (at pp.c:1924)
        Decl: name='id', quals=[], storage=[] (at pp.c:1924)
          TypeDecl: declname='id', quals=[] (at pp.c:1924)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__pushTask', quals=[] (at pp.c:1924)
        IdentifierType: names=['bool'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__init', quals=[], storage=['inline', 'static'] (at pp.c:1926)
    FuncDecl: quals=None (at pp.c:1926)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__init', quals=[] (at pp.c:1926)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__runNextTask', quals=[], storage=['static'] (at pp.c:1936)
    FuncDecl: quals=None (at pp.c:1936)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__runNextTask', quals=[] (at pp.c:1936)
        IdentifierType: names=['bool'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__taskLoop', quals=[], storage=['inline', 'static'] (at pp.c:1938)
    FuncDecl: quals=None (at pp.c:1938)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__taskLoop', quals=[] (at pp.c:1938)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__TaskBasic__postTask', quals=[], storage=['static'] (at pp.c:1940)
    FuncDecl: quals=None (at pp.c:1940)
      ParamList:  (at pp.c:1940)
        Decl: name='id', quals=[], storage=[] (at pp.c:1940)
          TypeDecl: declname='id', quals=[] (at pp.c:1940)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__TaskBasic__postTask', quals=[] (at pp.c:1940)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SchedulerBasicP__TaskBasic__default__runTask', quals=[], storage=['inline', 'static'] (at pp.c:1945)
    FuncDecl: quals=None (at pp.c:1945)
      ParamList:  (at pp.c:1945)
        Decl: name='id', quals=[], storage=[] (at pp.c:1945)
          TypeDecl: declname='id', quals=[] (at pp.c:1945)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__TaskBasic__default__runTask', quals=[] (at pp.c:1945)
        IdentifierType: names=['void'] (at None)
  Decl: name='BlinkC__Timer0__startPeriodic', quals=[], storage=['static'] (at pp.c:1947)
    FuncDecl: quals=None (at pp.c:1947)
      ParamList:  (at pp.c:1947)
        Decl: name='dt', quals=[], storage=[] (at pp.c:1947)
          TypeDecl: declname='dt', quals=[] (at pp.c:1947)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='BlinkC__Timer0__startPeriodic', quals=[] (at pp.c:1947)
        IdentifierType: names=['void'] (at None)
  Decl: name='BlinkC__Timer1__startPeriodic', quals=[], storage=['static'] (at pp.c:1949)
    FuncDecl: quals=None (at pp.c:1949)
      ParamList:  (at pp.c:1949)
        Decl: name='dt', quals=[], storage=[] (at pp.c:1949)
          TypeDecl: declname='dt', quals=[] (at pp.c:1949)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='BlinkC__Timer1__startPeriodic', quals=[] (at pp.c:1949)
        IdentifierType: names=['void'] (at None)
  Decl: name='BlinkC__Leds__led0Toggle', quals=[], storage=['static'] (at pp.c:1951)
    FuncDecl: quals=None (at pp.c:1951)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BlinkC__Leds__led0Toggle', quals=[] (at pp.c:1951)
        IdentifierType: names=['void'] (at None)
  Decl: name='BlinkC__Leds__led1Toggle', quals=[], storage=['static'] (at pp.c:1953)
    FuncDecl: quals=None (at pp.c:1953)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BlinkC__Leds__led1Toggle', quals=[] (at pp.c:1953)
        IdentifierType: names=['void'] (at None)
  Decl: name='BlinkC__Leds__led2Toggle', quals=[], storage=['static'] (at pp.c:1955)
    FuncDecl: quals=None (at pp.c:1955)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BlinkC__Leds__led2Toggle', quals=[] (at pp.c:1955)
        IdentifierType: names=['void'] (at None)
  Decl: name='BlinkC__Timer2__startPeriodic', quals=[], storage=['static'] (at pp.c:1957)
    FuncDecl: quals=None (at pp.c:1957)
      ParamList:  (at pp.c:1957)
        Decl: name='dt', quals=[], storage=[] (at pp.c:1957)
          TypeDecl: declname='dt', quals=[] (at pp.c:1957)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='BlinkC__Timer2__startPeriodic', quals=[] (at pp.c:1957)
        IdentifierType: names=['void'] (at None)
  Decl: name='BlinkC__Boot__booted', quals=[], storage=['inline', 'static'] (at pp.c:1959)
    FuncDecl: quals=None (at pp.c:1959)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BlinkC__Boot__booted', quals=[] (at pp.c:1959)
        IdentifierType: names=['void'] (at None)
  Decl: name='BlinkC__Timer0__fired', quals=[], storage=['inline', 'static'] (at pp.c:1966)
    FuncDecl: quals=None (at pp.c:1966)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BlinkC__Timer0__fired', quals=[] (at pp.c:1966)
        IdentifierType: names=['void'] (at None)
  Decl: name='BlinkC__Timer1__fired', quals=[], storage=['inline', 'static'] (at pp.c:1972)
    FuncDecl: quals=None (at pp.c:1972)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BlinkC__Timer1__fired', quals=[] (at pp.c:1972)
        IdentifierType: names=['void'] (at None)
  Decl: name='BlinkC__Timer2__fired', quals=[], storage=['inline', 'static'] (at pp.c:1978)
    FuncDecl: quals=None (at pp.c:1978)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BlinkC__Timer2__fired', quals=[] (at pp.c:1978)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led0__toggle', quals=[], storage=['static'] (at pp.c:1980)
    FuncDecl: quals=None (at pp.c:1980)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led0__toggle', quals=[] (at pp.c:1980)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led0__makeOutput', quals=[], storage=['static'] (at pp.c:1984)
    FuncDecl: quals=None (at pp.c:1984)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led0__makeOutput', quals=[] (at pp.c:1984)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led0__set', quals=[], storage=['static'] (at pp.c:1986)
    FuncDecl: quals=None (at pp.c:1986)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led0__set', quals=[] (at pp.c:1986)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led1__toggle', quals=[], storage=['static'] (at pp.c:1988)
    FuncDecl: quals=None (at pp.c:1988)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led1__toggle', quals=[] (at pp.c:1988)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led1__makeOutput', quals=[], storage=['static'] (at pp.c:1992)
    FuncDecl: quals=None (at pp.c:1992)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led1__makeOutput', quals=[] (at pp.c:1992)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led1__set', quals=[], storage=['static'] (at pp.c:1994)
    FuncDecl: quals=None (at pp.c:1994)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led1__set', quals=[] (at pp.c:1994)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led2__toggle', quals=[], storage=['static'] (at pp.c:1996)
    FuncDecl: quals=None (at pp.c:1996)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led2__toggle', quals=[] (at pp.c:1996)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led2__makeOutput', quals=[], storage=['static'] (at pp.c:2000)
    FuncDecl: quals=None (at pp.c:2000)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led2__makeOutput', quals=[] (at pp.c:2000)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led2__set', quals=[], storage=['static'] (at pp.c:2002)
    FuncDecl: quals=None (at pp.c:2002)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led2__set', quals=[] (at pp.c:2002)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:2004)
    FuncDecl: quals=None (at pp.c:2004)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Init__init', quals=[] (at pp.c:2004)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='LedsP__Leds__led0Toggle', quals=[], storage=['inline', 'static'] (at pp.c:2006)
    FuncDecl: quals=None (at pp.c:2006)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led0Toggle', quals=[] (at pp.c:2006)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led1Toggle', quals=[], storage=['inline', 'static'] (at pp.c:2008)
    FuncDecl: quals=None (at pp.c:2008)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led1Toggle', quals=[] (at pp.c:2008)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led2Toggle', quals=[], storage=['inline', 'static'] (at pp.c:2010)
    FuncDecl: quals=None (at pp.c:2010)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led2Toggle', quals=[] (at pp.c:2010)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:2012)
    FuncDecl: quals=None (at pp.c:2012)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__set', quals=[] (at pp.c:2012)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:2014)
    FuncDecl: quals=None (at pp.c:2014)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__toggle', quals=[] (at pp.c:2014)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:2019)
    FuncDecl: quals=None (at pp.c:2019)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[] (at pp.c:2019)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:2021)
    FuncDecl: quals=None (at pp.c:2021)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__set', quals=[] (at pp.c:2021)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:2023)
    FuncDecl: quals=None (at pp.c:2023)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__toggle', quals=[] (at pp.c:2023)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:2028)
    FuncDecl: quals=None (at pp.c:2028)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[] (at pp.c:2028)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:2030)
    FuncDecl: quals=None (at pp.c:2030)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__set', quals=[] (at pp.c:2030)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:2032)
    FuncDecl: quals=None (at pp.c:2032)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__toggle', quals=[] (at pp.c:2032)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:2037)
    FuncDecl: quals=None (at pp.c:2037)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[] (at pp.c:2037)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__HplGeneralIO__toggle', quals=[], storage=['static'] (at pp.c:2039)
    FuncDecl: quals=None (at pp.c:2039)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__toggle', quals=[] (at pp.c:2039)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__HplGeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:2041)
    FuncDecl: quals=None (at pp.c:2041)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__makeOutput', quals=[] (at pp.c:2041)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__HplGeneralIO__set', quals=[], storage=['static'] (at pp.c:2043)
    FuncDecl: quals=None (at pp.c:2043)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__set', quals=[] (at pp.c:2043)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:2045)
    FuncDecl: quals=None (at pp.c:2045)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__set', quals=[] (at pp.c:2045)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:2047)
    FuncDecl: quals=None (at pp.c:2047)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__toggle', quals=[] (at pp.c:2047)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:2051)
    FuncDecl: quals=None (at pp.c:2051)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__makeOutput', quals=[] (at pp.c:2051)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__HplGeneralIO__toggle', quals=[], storage=['static'] (at pp.c:2053)
    FuncDecl: quals=None (at pp.c:2053)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__toggle', quals=[] (at pp.c:2053)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__HplGeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:2055)
    FuncDecl: quals=None (at pp.c:2055)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__makeOutput', quals=[] (at pp.c:2055)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__HplGeneralIO__set', quals=[], storage=['static'] (at pp.c:2057)
    FuncDecl: quals=None (at pp.c:2057)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__set', quals=[] (at pp.c:2057)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:2059)
    FuncDecl: quals=None (at pp.c:2059)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__set', quals=[] (at pp.c:2059)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:2061)
    FuncDecl: quals=None (at pp.c:2061)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__toggle', quals=[] (at pp.c:2061)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:2065)
    FuncDecl: quals=None (at pp.c:2065)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__makeOutput', quals=[] (at pp.c:2065)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__HplGeneralIO__toggle', quals=[], storage=['static'] (at pp.c:2067)
    FuncDecl: quals=None (at pp.c:2067)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__HplGeneralIO__toggle', quals=[] (at pp.c:2067)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__HplGeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:2069)
    FuncDecl: quals=None (at pp.c:2069)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__HplGeneralIO__makeOutput', quals=[] (at pp.c:2069)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__HplGeneralIO__set', quals=[], storage=['static'] (at pp.c:2071)
    FuncDecl: quals=None (at pp.c:2071)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__HplGeneralIO__set', quals=[] (at pp.c:2071)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:2073)
    FuncDecl: quals=None (at pp.c:2073)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__GeneralIO__set', quals=[] (at pp.c:2073)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__GeneralIO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:2075)
    FuncDecl: quals=None (at pp.c:2075)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__GeneralIO__toggle', quals=[] (at pp.c:2075)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:2079)
    FuncDecl: quals=None (at pp.c:2079)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__GeneralIO__makeOutput', quals=[] (at pp.c:2079)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Compare__setEvent', quals=[], storage=['static'] (at pp.c:2081)
    FuncDecl: quals=None (at pp.c:2081)
      ParamList:  (at pp.c:2081)
        Decl: name='time', quals=[], storage=[] (at pp.c:2081)
          TypeDecl: declname='time', quals=[] (at pp.c:2081)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__setEvent', quals=[] (at pp.c:2081)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Compare__setEventFromNow', quals=[], storage=['static'] (at pp.c:2083)
    FuncDecl: quals=None (at pp.c:2083)
      ParamList:  (at pp.c:2083)
        Decl: name='delta', quals=[], storage=[] (at pp.c:2083)
          TypeDecl: declname='delta', quals=[] (at pp.c:2083)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__setEventFromNow', quals=[] (at pp.c:2083)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Timer__get', quals=[], storage=['static'] (at pp.c:2085)
    FuncDecl: quals=None (at pp.c:2085)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Timer__get', quals=[] (at pp.c:2085)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430AlarmC__0__Alarm__fired', quals=[], storage=['static'] (at pp.c:2087)
    FuncDecl: quals=None (at pp.c:2087)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Alarm__fired', quals=[] (at pp.c:2087)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430TimerControl__enableEvents', quals=[], storage=['static'] (at pp.c:2089)
    FuncDecl: quals=None (at pp.c:2089)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__enableEvents', quals=[] (at pp.c:2089)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430TimerControl__setControlAsCompare', quals=[], storage=['static'] (at pp.c:2091)
    FuncDecl: quals=None (at pp.c:2091)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__setControlAsCompare', quals=[] (at pp.c:2091)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430TimerControl__disableEvents', quals=[], storage=['static'] (at pp.c:2102)
    FuncDecl: quals=None (at pp.c:2102)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__disableEvents', quals=[] (at pp.c:2102)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430TimerControl__clearPendingInterrupt', quals=[], storage=['static'] (at pp.c:2104)
    FuncDecl: quals=None (at pp.c:2104)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__clearPendingInterrupt', quals=[] (at pp.c:2104)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:2106)
    FuncDecl: quals=None (at pp.c:2106)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Init__init', quals=[] (at pp.c:2106)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430AlarmC__0__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:2108)
    FuncDecl: quals=None (at pp.c:2108)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Alarm__stop', quals=[] (at pp.c:2108)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Compare__fired', quals=[], storage=['inline', 'static'] (at pp.c:2113)
    FuncDecl: quals=None (at pp.c:2113)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__fired', quals=[] (at pp.c:2113)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Alarm__startAt', quals=[], storage=['inline', 'static'] (at pp.c:2124)
    FuncDecl: quals=None (at pp.c:2124)
      ParamList:  (at pp.c:2124)
        Decl: name='t0', quals=[], storage=[] (at pp.c:2124)
          TypeDecl: declname='t0', quals=[] (at pp.c:2124)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:2124)
          TypeDecl: declname='dt', quals=[] (at pp.c:2124)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Alarm__startAt', quals=[] (at pp.c:2124)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2126)
    FuncDecl: quals=None (at pp.c:2126)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Timer__overflow', quals=[] (at pp.c:2126)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430CounterC__0__Msp430Timer__get', quals=[], storage=['static'] (at pp.c:2128)
    FuncDecl: quals=None (at pp.c:2128)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Msp430Timer__get', quals=[] (at pp.c:2128)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430CounterC__0__Msp430Timer__isOverflowPending', quals=[], storage=['static'] (at pp.c:2129)
    FuncDecl: quals=None (at pp.c:2129)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Msp430Timer__isOverflowPending', quals=[] (at pp.c:2129)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430CounterC__0__Counter__overflow', quals=[], storage=['static'] (at pp.c:2131)
    FuncDecl: quals=None (at pp.c:2131)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Counter__overflow', quals=[] (at pp.c:2131)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430CounterC__0__Counter__get', quals=[], storage=['inline', 'static'] (at pp.c:2133)
    FuncDecl: quals=None (at pp.c:2133)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Counter__get', quals=[] (at pp.c:2133)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430CounterC__0__Counter__isOverflowPending', quals=[], storage=['inline', 'static'] (at pp.c:2138)
    FuncDecl: quals=None (at pp.c:2138)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Counter__isOverflowPending', quals=[] (at pp.c:2138)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430CounterC__0__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2148)
    FuncDecl: quals=None (at pp.c:2148)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Msp430Timer__overflow', quals=[] (at pp.c:2148)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformCounterC__0__CounterFrom__get', quals=[], storage=['static'] (at pp.c:2150)
    FuncDecl: quals=None (at pp.c:2150)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__CounterFrom__get', quals=[] (at pp.c:2150)
        IdentifierType: names=['TransformCounterC__0__CounterFrom__size_type'] (at None)
  Decl: name='TransformCounterC__0__CounterFrom__isOverflowPending', quals=[], storage=['static'] (at pp.c:2157)
    FuncDecl: quals=None (at pp.c:2157)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__CounterFrom__isOverflowPending', quals=[] (at pp.c:2157)
        IdentifierType: names=['bool'] (at None)
  Decl: name='TransformCounterC__0__Counter__overflow', quals=[], storage=['static'] (at pp.c:2168)
    FuncDecl: quals=None (at pp.c:2168)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__Counter__overflow', quals=[] (at pp.c:2168)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformCounterC__0__m_upper', quals=[], storage=[] (at pp.c:2170)
    TypeDecl: declname='TransformCounterC__0__m_upper', quals=[] (at pp.c:2170)
      IdentifierType: names=['TransformCounterC__0__upper_count_type'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2172)
    Enum: name='TransformCounterC__0____nesc_unnamed4270' (at pp.c:2172)
      EnumeratorList:  (at pp.c:2174)
        Enumerator: name='TransformCounterC__0__LOW_SHIFT_RIGHT' (at pp.c:2174)
          Constant: type='int', value='5' (at pp.c:2174)
        Enumerator: name='TransformCounterC__0__HIGH_SHIFT_LEFT' (at pp.c:2175)
          BinaryOp: op='-' (at pp.c:2175)
            BinaryOp: op='*' (at pp.c:2175)
              Constant: type='int', value='8' (at pp.c:2175)
              UnaryOp: op='sizeof' (at pp.c:2175)
                Typename: quals=[] (at None)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['TransformCounterC__0__from_size_type'] (at None)
            ID: name='TransformCounterC__0__LOW_SHIFT_RIGHT' (at pp.c:2175)
        Enumerator: name='TransformCounterC__0__NUM_UPPER_BITS' (at pp.c:2176)
          BinaryOp: op='+' (at pp.c:2176)
            BinaryOp: op='-' (at pp.c:2176)
              BinaryOp: op='*' (at pp.c:2176)
                Constant: type='int', value='8' (at pp.c:2176)
                UnaryOp: op='sizeof' (at pp.c:2176)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
              BinaryOp: op='*' (at pp.c:2176)
                Constant: type='int', value='8' (at pp.c:2176)
                UnaryOp: op='sizeof' (at pp.c:2176)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformCounterC__0__from_size_type'] (at None)
            Constant: type='int', value='5' (at pp.c:2176)
        Enumerator: name='TransformCounterC__0__OVERFLOW_MASK' (at pp.c:2180)
          TernaryOp:  (at pp.c:2180)
            ID: name='TransformCounterC__0__NUM_UPPER_BITS' (at pp.c:2180)
            BinaryOp: op='-' (at None)
              BinaryOp: op='<<' (at None)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformCounterC__0__upper_count_type'] (at None)
                  Constant: type='int', value='2' (at pp.c:2180)
                BinaryOp: op='-' (at pp.c:2180)
                  ID: name='TransformCounterC__0__NUM_UPPER_BITS' (at pp.c:2180)
                  Constant: type='int', value='1' (at pp.c:2180)
              Constant: type='int', value='1' (at pp.c:2180)
            Constant: type='int', value='0' (at pp.c:2180)
  Decl: name='TransformCounterC__0__Counter__get', quals=[], storage=['static'] (at pp.c:2183)
    FuncDecl: quals=None (at pp.c:2183)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__Counter__get', quals=[] (at pp.c:2183)
        IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
  Decl: name='TransformCounterC__0__CounterFrom__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2185)
    FuncDecl: quals=None (at pp.c:2185)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__CounterFrom__overflow', quals=[] (at pp.c:2185)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__fired', quals=[], storage=['static'] (at pp.c:2187)
    FuncDecl: quals=None (at pp.c:2187)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__fired', quals=[] (at pp.c:2187)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__AlarmFrom__startAt', quals=[], storage=['static'] (at pp.c:2189)
    FuncDecl: quals=None (at pp.c:2189)
      ParamList:  (at pp.c:2189)
        Decl: name='t0', quals=[], storage=[] (at pp.c:2189)
          TypeDecl: declname='t0', quals=[] (at pp.c:2189)
            IdentifierType: names=['TransformAlarmC__0__AlarmFrom__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:2189)
          TypeDecl: declname='dt', quals=[] (at pp.c:2189)
            IdentifierType: names=['TransformAlarmC__0__AlarmFrom__size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__0__AlarmFrom__startAt', quals=[] (at pp.c:2189)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__AlarmFrom__stop', quals=[], storage=['static'] (at pp.c:2191)
    FuncDecl: quals=None (at pp.c:2191)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__AlarmFrom__stop', quals=[] (at pp.c:2191)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Counter__get', quals=[], storage=['static'] (at pp.c:2193)
    FuncDecl: quals=None (at pp.c:2193)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Counter__get', quals=[] (at pp.c:2193)
        IdentifierType: names=['TransformAlarmC__0__Counter__size_type'] (at None)
  Decl: name='TransformAlarmC__0__m_t0', quals=[], storage=[] (at pp.c:2195)
    TypeDecl: declname='TransformAlarmC__0__m_t0', quals=[] (at pp.c:2195)
      IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Decl: name='TransformAlarmC__0__m_dt', quals=[], storage=[] (at pp.c:2196)
    TypeDecl: declname='TransformAlarmC__0__m_dt', quals=[] (at pp.c:2196)
      IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2198)
    Enum: name='TransformAlarmC__0____nesc_unnamed4271' (at pp.c:2198)
      EnumeratorList:  (at pp.c:2200)
        Enumerator: name='TransformAlarmC__0__MAX_DELAY_LOG2' (at pp.c:2200)
          BinaryOp: op='-' (at pp.c:2200)
            BinaryOp: op='-' (at pp.c:2200)
              BinaryOp: op='*' (at pp.c:2200)
                Constant: type='int', value='8' (at pp.c:2200)
                UnaryOp: op='sizeof' (at pp.c:2200)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformAlarmC__0__from_size_type'] (at None)
              Constant: type='int', value='1' (at pp.c:2200)
            Constant: type='int', value='5' (at pp.c:2200)
        Enumerator: name='TransformAlarmC__0__MAX_DELAY' (at pp.c:2201)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
              Constant: type='int', value='1' (at pp.c:2201)
            ID: name='TransformAlarmC__0__MAX_DELAY_LOG2' (at pp.c:2201)
  Decl: name='TransformAlarmC__0__Alarm__getNow', quals=[], storage=['inline', 'static'] (at pp.c:2204)
    FuncDecl: quals=None (at pp.c:2204)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__getNow', quals=[] (at pp.c:2204)
        IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__getAlarm', quals=[], storage=['inline', 'static'] (at pp.c:2209)
    FuncDecl: quals=None (at pp.c:2209)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__getAlarm', quals=[] (at pp.c:2209)
        IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:2220)
    FuncDecl: quals=None (at pp.c:2220)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__stop', quals=[] (at pp.c:2220)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__set_alarm', quals=[], storage=['static'] (at pp.c:2225)
    FuncDecl: quals=None (at pp.c:2225)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__set_alarm', quals=[] (at pp.c:2225)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__startAt', quals=[], storage=['static'] (at pp.c:2227)
    FuncDecl: quals=None (at pp.c:2227)
      ParamList:  (at pp.c:2227)
        Decl: name='t0', quals=[], storage=[] (at pp.c:2227)
          TypeDecl: declname='t0', quals=[] (at pp.c:2227)
            IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:2227)
          TypeDecl: declname='dt', quals=[] (at pp.c:2227)
            IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__startAt', quals=[] (at pp.c:2227)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__AlarmFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:2229)
    FuncDecl: quals=None (at pp.c:2229)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__AlarmFrom__fired', quals=[] (at pp.c:2229)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2231)
    FuncDecl: quals=None (at pp.c:2231)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Counter__overflow', quals=[] (at pp.c:2231)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__fired__postTask', quals=[], storage=['static'] (at pp.c:2233)
    FuncDecl: quals=None (at pp.c:2233)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__fired__postTask', quals=[] (at pp.c:2233)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__getNow', quals=[], storage=['static'] (at pp.c:2235)
    FuncDecl: quals=None (at pp.c:2235)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__getNow', quals=[] (at pp.c:2235)
        IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__startAt', quals=[], storage=['static'] (at pp.c:2237)
    FuncDecl: quals=None (at pp.c:2237)
      ParamList:  (at pp.c:2237)
        Decl: name='t0', quals=[], storage=[] (at pp.c:2237)
          TypeDecl: declname='t0', quals=[] (at pp.c:2237)
            IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:2237)
          TypeDecl: declname='dt', quals=[] (at pp.c:2237)
            IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__startAt', quals=[] (at pp.c:2237)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__getAlarm', quals=[], storage=['static'] (at pp.c:2239)
    FuncDecl: quals=None (at pp.c:2239)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__getAlarm', quals=[] (at pp.c:2239)
        IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__stop', quals=[], storage=['static'] (at pp.c:2241)
    FuncDecl: quals=None (at pp.c:2241)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__stop', quals=[] (at pp.c:2241)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__fired', quals=[], storage=['static'] (at pp.c:2243)
    FuncDecl: quals=None (at pp.c:2243)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__fired', quals=[] (at pp.c:2243)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2245)
    Enum: name='AlarmToTimerC__0____nesc_unnamed4272' (at pp.c:2245)
      EnumeratorList:  (at pp.c:2247)
        Enumerator: name='AlarmToTimerC__0__fired' (at pp.c:2247)
          Constant: type='int', value='0U' (at pp.c:2247)
  Typedef: name='AlarmToTimerC__0____nesc_sillytask_fired', quals=[], storage=['typedef'] (at pp.c:2250)
    ArrayDecl:  (at pp.c:2250)
      TypeDecl: declname='AlarmToTimerC__0____nesc_sillytask_fired', quals=[] (at pp.c:2250)
        IdentifierType: names=['int'] (at None)
      ID: name='AlarmToTimerC__0__fired' (at pp.c:2250)
  Decl: name='AlarmToTimerC__0__m_dt', quals=[], storage=[] (at pp.c:2252)
    TypeDecl: declname='AlarmToTimerC__0__m_dt', quals=[] (at pp.c:2252)
      IdentifierType: names=['uint32_t'] (at None)
  Decl: name='AlarmToTimerC__0__m_oneshot', quals=[], storage=[] (at pp.c:2253)
    TypeDecl: declname='AlarmToTimerC__0__m_oneshot', quals=[] (at pp.c:2253)
      IdentifierType: names=['bool'] (at None)
  Decl: name='AlarmToTimerC__0__start', quals=[], storage=['inline', 'static'] (at pp.c:2255)
    FuncDecl: quals=None (at pp.c:2255)
      ParamList:  (at pp.c:2255)
        Decl: name='t0', quals=[], storage=[] (at pp.c:2255)
          TypeDecl: declname='t0', quals=[] (at pp.c:2255)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:2255)
          TypeDecl: declname='dt', quals=[] (at pp.c:2255)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='oneshot', quals=[], storage=[] (at pp.c:2255)
          TypeDecl: declname='oneshot', quals=[] (at pp.c:2255)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__start', quals=[] (at pp.c:2255)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__stop', quals=[], storage=['inline', 'static'] (at pp.c:2257)
    FuncDecl: quals=None (at pp.c:2257)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__stop', quals=[] (at pp.c:2257)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__fired__runTask', quals=[], storage=['static'] (at pp.c:2260)
    FuncDecl: quals=None (at pp.c:2260)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__fired__runTask', quals=[] (at pp.c:2260)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__fired', quals=[], storage=['inline', 'static'] (at pp.c:2267)
    FuncDecl: quals=None (at pp.c:2267)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__fired', quals=[] (at pp.c:2267)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__startOneShotAt', quals=[], storage=['inline', 'static'] (at pp.c:2269)
    FuncDecl: quals=None (at pp.c:2269)
      ParamList:  (at pp.c:2269)
        Decl: name='t0', quals=[], storage=[] (at pp.c:2269)
          TypeDecl: declname='t0', quals=[] (at pp.c:2269)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:2269)
          TypeDecl: declname='dt', quals=[] (at pp.c:2269)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__startOneShotAt', quals=[] (at pp.c:2269)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__getNow', quals=[], storage=['inline', 'static'] (at pp.c:2272)
    FuncDecl: quals=None (at pp.c:2272)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__getNow', quals=[] (at pp.c:2272)
        IdentifierType: names=['uint32_t'] (at None)
  Decl: name='VirtualizeTimerC__0__updateFromTimer__postTask', quals=[], storage=['static'] (at pp.c:2274)
    FuncDecl: quals=None (at pp.c:2274)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__updateFromTimer__postTask', quals=[] (at pp.c:2274)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='VirtualizeTimerC__0__TimerFrom__getNow', quals=[], storage=['static'] (at pp.c:2276)
    FuncDecl: quals=None (at pp.c:2276)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__getNow', quals=[] (at pp.c:2276)
        IdentifierType: names=['uint32_t'] (at None)
  Decl: name='VirtualizeTimerC__0__TimerFrom__startOneShotAt', quals=[], storage=['static'] (at pp.c:2278)
    FuncDecl: quals=None (at pp.c:2278)
      ParamList:  (at pp.c:2278)
        Decl: name='t0', quals=[], storage=[] (at pp.c:2278)
          TypeDecl: declname='t0', quals=[] (at pp.c:2278)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:2278)
          TypeDecl: declname='dt', quals=[] (at pp.c:2278)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__startOneShotAt', quals=[] (at pp.c:2278)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__TimerFrom__stop', quals=[], storage=['static'] (at pp.c:2280)
    FuncDecl: quals=None (at pp.c:2280)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__stop', quals=[] (at pp.c:2280)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__fired', quals=[], storage=['static'] (at pp.c:2285)
    FuncDecl: quals=None (at pp.c:2285)
      ParamList:  (at pp.c:2287)
        Decl: name='arg_0x1018b95d8', quals=[], storage=[] (at pp.c:2287)
          TypeDecl: declname='arg_0x1018b95d8', quals=[] (at pp.c:2287)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__fired', quals=[] (at pp.c:2285)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2289)
    Enum: name='VirtualizeTimerC__0____nesc_unnamed4273' (at pp.c:2289)
      EnumeratorList:  (at pp.c:2291)
        Enumerator: name='VirtualizeTimerC__0__updateFromTimer' (at pp.c:2291)
          Constant: type='int', value='1U' (at pp.c:2291)
  Typedef: name='VirtualizeTimerC__0____nesc_sillytask_updateFromTimer', quals=[], storage=['typedef'] (at pp.c:2294)
    ArrayDecl:  (at pp.c:2294)
      TypeDecl: declname='VirtualizeTimerC__0____nesc_sillytask_updateFromTimer', quals=[] (at pp.c:2294)
        IdentifierType: names=['int'] (at None)
      ID: name='VirtualizeTimerC__0__updateFromTimer' (at pp.c:2294)
  Decl: name=None, quals=[], storage=[] (at pp.c:2296)
    Enum: name='VirtualizeTimerC__0____nesc_unnamed4274' (at pp.c:2296)
      EnumeratorList:  (at pp.c:2298)
        Enumerator: name='VirtualizeTimerC__0__NUM_TIMERS' (at pp.c:2298)
          Constant: type='int', value='3U' (at pp.c:2298)
        Enumerator: name='VirtualizeTimerC__0__END_OF_LIST' (at pp.c:2299)
          Constant: type='int', value='255' (at pp.c:2299)
  Typedef: name='VirtualizeTimerC__0__Timer_t', quals=[], storage=['typedef'] (at pp.c:2317)
    TypeDecl: declname='VirtualizeTimerC__0__Timer_t', quals=[] (at pp.c:2317)
      Struct: name='VirtualizeTimerC__0____nesc_unnamed4275', packed=False (at pp.c:2310)
        Decl: name='t0', quals=[], storage=[] (at 0)
          TypeDecl: declname='t0', quals=[] (at pp.c:2312)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at 0)
          TypeDecl: declname='dt', quals=[] (at pp.c:2313)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='isoneshot', quals=[], storage=[] (at 0)
          TypeDecl: declname='isoneshot', quals=[] (at pp.c:2314)
            IdentifierType: names=['bool'] (at None)
          Constant: type='int', value='1' (at pp.c:2314)
        Decl: name='isrunning', quals=[], storage=[] (at 0)
          TypeDecl: declname='isrunning', quals=[] (at pp.c:2315)
            IdentifierType: names=['bool'] (at None)
          Constant: type='int', value='1' (at pp.c:2315)
        Decl: name='_reserved', quals=[], storage=[] (at 0)
          TypeDecl: declname='_reserved', quals=[] (at pp.c:2316)
            IdentifierType: names=['bool'] (at None)
          Constant: type='int', value='6' (at pp.c:2316)
  Decl: name='VirtualizeTimerC__0__m_timers', quals=[], storage=[] (at pp.c:2319)
    ArrayDecl:  (at pp.c:2319)
      TypeDecl: declname='VirtualizeTimerC__0__m_timers', quals=[] (at pp.c:2319)
        IdentifierType: names=['VirtualizeTimerC__0__Timer_t'] (at None)
      ID: name='VirtualizeTimerC__0__NUM_TIMERS' (at pp.c:2319)
  Decl: name='VirtualizeTimerC__0__fireTimers', quals=[], storage=['static'] (at pp.c:2324)
    FuncDecl: quals=None (at pp.c:2324)
      ParamList:  (at pp.c:2324)
        Decl: name='now', quals=[], storage=[] (at pp.c:2324)
          TypeDecl: declname='now', quals=[] (at pp.c:2324)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__fireTimers', quals=[] (at pp.c:2324)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[], storage=['static'] (at pp.c:2326)
    FuncDecl: quals=None (at pp.c:2326)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[] (at pp.c:2326)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__TimerFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:2328)
    FuncDecl: quals=None (at pp.c:2328)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__fired', quals=[] (at pp.c:2328)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__startTimer', quals=[], storage=['inline', 'static'] (at pp.c:2333)
    FuncDecl: quals=None (at pp.c:2333)
      ParamList:  (at pp.c:2333)
        Decl: name='num', quals=[], storage=[] (at pp.c:2333)
          TypeDecl: declname='num', quals=[] (at pp.c:2333)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='t0', quals=[], storage=[] (at pp.c:2333)
          TypeDecl: declname='t0', quals=[] (at pp.c:2333)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:2333)
          TypeDecl: declname='dt', quals=[] (at pp.c:2333)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='isoneshot', quals=[], storage=[] (at pp.c:2333)
          TypeDecl: declname='isoneshot', quals=[] (at pp.c:2333)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__startTimer', quals=[] (at pp.c:2333)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__startPeriodic', quals=[], storage=['static'] (at pp.c:2343)
    FuncDecl: quals=None (at pp.c:2343)
      ParamList:  (at pp.c:2343)
        Decl: name='num', quals=[], storage=[] (at pp.c:2343)
          TypeDecl: declname='num', quals=[] (at pp.c:2343)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:2343)
          TypeDecl: declname='dt', quals=[] (at pp.c:2343)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__startPeriodic', quals=[] (at pp.c:2343)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:2345)
    FuncDecl: quals=None (at pp.c:2345)
      ParamList:  (at pp.c:2345)
        Decl: name='num', quals=[], storage=[] (at pp.c:2345)
          TypeDecl: declname='num', quals=[] (at pp.c:2345)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__default__fired', quals=[] (at pp.c:2345)
        IdentifierType: names=['void'] (at None)
  Decl: name='CounterToLocalTimeC__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2347)
    FuncDecl: quals=None (at pp.c:2347)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CounterToLocalTimeC__0__Counter__overflow', quals=[] (at pp.c:2347)
        IdentifierType: names=['void'] (at None)
  FuncDef:  (at pp.c:2349)
    Decl: name='__nesc_enable_interrupt', quals=[], storage=['inline', 'static'] (at pp.c:2349)
      FuncDecl: quals=None (at pp.c:2349)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_enable_interrupt', quals=[] (at pp.c:2349)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2350)
      Assignment: op='|=' (at pp.c:2351)
        ID: name='_R2' (at pp.c:2351)
        Constant: type='int', value='0x0008' (at pp.c:2351)
  FuncDef:  (at pp.c:2354)
    Decl: name='Msp430TimerCapComP__2__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2354)
      FuncDecl: quals=None (at pp.c:2354)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Timer__overflow', quals=[] (at pp.c:2354)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2355)
  FuncDef:  (at pp.c:2359)
    Decl: name='Msp430TimerCapComP__1__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2359)
      FuncDecl: quals=None (at pp.c:2359)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Timer__overflow', quals=[] (at pp.c:2359)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2360)
  FuncDef:  (at pp.c:2364)
    Decl: name='Msp430TimerCapComP__0__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2364)
      FuncDecl: quals=None (at pp.c:2364)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Timer__overflow', quals=[] (at pp.c:2364)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2365)
  FuncDef:  (at pp.c:2369)
    Decl: name='Msp430TimerP__0__Timer__overflow', quals=[], storage=['static', 'inline'] (at pp.c:2369)
      FuncDecl: quals=None (at pp.c:2369)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Timer__overflow', quals=[] (at pp.c:2369)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2369)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__0__Timer__overflow' (at pp.c:2371)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__1__Timer__overflow' (at pp.c:2373)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__2__Timer__overflow' (at pp.c:2375)
  FuncDef:  (at pp.c:2380)
    Decl: name='Msp430TimerP__0__Overflow__fired', quals=[], storage=['inline', 'static'] (at pp.c:2380)
      FuncDecl: quals=None (at pp.c:2380)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Overflow__fired', quals=[] (at pp.c:2380)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2381)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Timer__overflow' (at pp.c:2382)
  FuncDef:  (at pp.c:2389)
    Decl: name='Msp430TimerP__0__Event__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:2389)
      FuncDecl: quals=None (at pp.c:2389)
        ParamList:  (at pp.c:2389)
          Decl: name='n', quals=[], storage=[] (at pp.c:2389)
            TypeDecl: declname='n', quals=[] (at pp.c:2389)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Event__default__fired', quals=[] (at pp.c:2389)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2390)
  FuncDef:  (at pp.c:2394)
    Decl: name='Msp430TimerP__0__Event__fired', quals=[], storage=['static', 'inline'] (at pp.c:2394)
      FuncDecl: quals=None (at pp.c:2394)
        ParamList:  (at pp.c:2394)
          Decl: name='arg_0x101409020', quals=[], storage=[] (at pp.c:2394)
            TypeDecl: declname='arg_0x101409020', quals=[] (at pp.c:2394)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Event__fired', quals=[] (at pp.c:2394)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2394)
      Switch:  (at pp.c:2396)
        ID: name='arg_0x101409020' (at pp.c:2396)
        Compound:  (at pp.c:2396)
          Case:  (at pp.c:2398)
            Constant: type='int', value='0' (at pp.c:2398)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__0__Event__fired' (at pp.c:2400)
          Break:  (at pp.c:2402)
          Case:  (at pp.c:2404)
            Constant: type='int', value='1' (at pp.c:2404)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__1__Event__fired' (at pp.c:2406)
          Break:  (at pp.c:2408)
          Case:  (at pp.c:2410)
            Constant: type='int', value='2' (at pp.c:2410)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__2__Event__fired' (at pp.c:2412)
          Break:  (at pp.c:2414)
          Case:  (at pp.c:2416)
            Constant: type='int', value='5' (at pp.c:2416)
            FuncCall:  (at None)
              ID: name='Msp430TimerP__0__Overflow__fired' (at pp.c:2418)
          Break:  (at pp.c:2420)
          Default:  (at pp.c:2422)
            FuncCall:  (at None)
              ID: name='Msp430TimerP__0__Event__default__fired' (at pp.c:2424)
              ExprList:  (at pp.c:2424)
                ID: name='arg_0x101409020' (at pp.c:2424)
          Break:  (at pp.c:2426)
  FuncDef:  (at pp.c:2433)
    Decl: name='Msp430TimerP__0__VectorTimerX0__fired', quals=[], storage=['inline', 'static'] (at pp.c:2433)
      FuncDecl: quals=None (at pp.c:2433)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__VectorTimerX0__fired', quals=[] (at pp.c:2433)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2434)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Event__fired' (at pp.c:2435)
        ExprList:  (at pp.c:2435)
          Constant: type='int', value='0' (at pp.c:2435)
  FuncDef:  (at pp.c:2439)
    Decl: name='Msp430TimerCommonP__VectorTimerA0__fired', quals=[], storage=['static', 'inline'] (at pp.c:2439)
      FuncDecl: quals=None (at pp.c:2439)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCommonP__VectorTimerA0__fired', quals=[] (at pp.c:2439)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2439)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__VectorTimerX0__fired' (at pp.c:2441)
  FuncDef:  (at pp.c:2446)
    Decl: name='Msp430TimerCapComP__0__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:2446)
      FuncDecl: quals=None (at pp.c:2446)
        ParamList:  (at pp.c:2446)
          Decl: name='x', quals=[], storage=[] (at pp.c:2446)
            TypeDecl: declname='x', quals=[] (at pp.c:2446)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__int2CC', quals=[] (at pp.c:2446)
          IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
    Compound:  (at pp.c:2448)
      Decl: name='c', quals=[], storage=[] (at pp.c:2457)
        TypeDecl: declname='c', quals=[] (at pp.c:2457)
          Union: name='Msp430TimerCapComP__0____nesc_unnamed4276', packed=False (at pp.c:2450)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:2452)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:2454)
                IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
        ExprList:  (at pp.c:2457)
          Assignment: op='=' (at pp.c:2457)
            StructRef: type='.' (at pp.c:2457)
              ID: name='f' (at pp.c:2457)
            ID: name='x' (at pp.c:2457)
      Return:  (at pp.c:2460)
        StructRef: type='.' (at pp.c:2460)
          ID: name='c' (at pp.c:2460)
          ID: name='t' (at pp.c:2460)
  FuncDef:  (at pp.c:2464)
    Decl: name='Msp430TimerCapComP__0__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:2464)
      FuncDecl: quals=None (at pp.c:2464)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Control__getControl', quals=[] (at pp.c:2464)
          IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
    Compound:  (at pp.c:2465)
      Return:  (at pp.c:2466)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__0__int2CC' (at pp.c:2466)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:2466)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='354U' (at pp.c:2466)
  FuncDef:  (at pp.c:2470)
    Decl: name='Msp430TimerCapComP__0__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:2470)
      FuncDecl: quals=None (at pp.c:2470)
        ParamList:  (at pp.c:2470)
          Decl: name='n', quals=[], storage=[] (at pp.c:2470)
            TypeDecl: declname='n', quals=[] (at pp.c:2470)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Capture__default__captured', quals=[] (at pp.c:2470)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2471)
  FuncDef:  (at pp.c:2475)
    Decl: name='Msp430TimerCapComP__0__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:2475)
      FuncDecl: quals=None (at pp.c:2475)
        ParamList:  (at pp.c:2475)
          Decl: name='time', quals=[], storage=[] (at pp.c:2475)
            TypeDecl: declname='time', quals=[] (at pp.c:2475)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Capture__captured', quals=[] (at pp.c:2475)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2475)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__0__Capture__default__captured' (at pp.c:2477)
        ExprList:  (at pp.c:2477)
          ID: name='time' (at pp.c:2477)
  FuncDef:  (at pp.c:2482)
    Decl: name='Msp430TimerCapComP__0__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:2482)
      FuncDecl: quals=None (at pp.c:2482)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Capture__getEvent', quals=[] (at pp.c:2482)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:2483)
      Return:  (at pp.c:2484)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:2484)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='370U' (at pp.c:2484)
  FuncDef:  (at pp.c:2488)
    Decl: name='Msp430TimerCapComP__0__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:2488)
      FuncDecl: quals=None (at pp.c:2488)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Compare__default__fired', quals=[] (at pp.c:2488)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2489)
  FuncDef:  (at pp.c:2493)
    Decl: name='Msp430TimerCapComP__0__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:2493)
      FuncDecl: quals=None (at pp.c:2493)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Compare__fired', quals=[] (at pp.c:2493)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2493)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__0__Compare__default__fired' (at pp.c:2495)
  FuncDef:  (at pp.c:2500)
    Decl: name='Msp430TimerCapComP__1__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:2500)
      FuncDecl: quals=None (at pp.c:2500)
        ParamList:  (at pp.c:2500)
          Decl: name='x', quals=[], storage=[] (at pp.c:2500)
            TypeDecl: declname='x', quals=[] (at pp.c:2500)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__int2CC', quals=[] (at pp.c:2500)
          IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
    Compound:  (at pp.c:2502)
      Decl: name='c', quals=[], storage=[] (at pp.c:2511)
        TypeDecl: declname='c', quals=[] (at pp.c:2511)
          Union: name='Msp430TimerCapComP__1____nesc_unnamed4277', packed=False (at pp.c:2504)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:2506)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:2508)
                IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
        ExprList:  (at pp.c:2511)
          Assignment: op='=' (at pp.c:2511)
            StructRef: type='.' (at pp.c:2511)
              ID: name='f' (at pp.c:2511)
            ID: name='x' (at pp.c:2511)
      Return:  (at pp.c:2514)
        StructRef: type='.' (at pp.c:2514)
          ID: name='c' (at pp.c:2514)
          ID: name='t' (at pp.c:2514)
  FuncDef:  (at pp.c:2518)
    Decl: name='Msp430TimerCapComP__1__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:2518)
      FuncDecl: quals=None (at pp.c:2518)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Control__getControl', quals=[] (at pp.c:2518)
          IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
    Compound:  (at pp.c:2519)
      Return:  (at pp.c:2520)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__1__int2CC' (at pp.c:2520)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:2520)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='356U' (at pp.c:2520)
  FuncDef:  (at pp.c:2524)
    Decl: name='Msp430TimerCapComP__1__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:2524)
      FuncDecl: quals=None (at pp.c:2524)
        ParamList:  (at pp.c:2524)
          Decl: name='n', quals=[], storage=[] (at pp.c:2524)
            TypeDecl: declname='n', quals=[] (at pp.c:2524)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Capture__default__captured', quals=[] (at pp.c:2524)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2525)
  FuncDef:  (at pp.c:2529)
    Decl: name='Msp430TimerCapComP__1__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:2529)
      FuncDecl: quals=None (at pp.c:2529)
        ParamList:  (at pp.c:2529)
          Decl: name='time', quals=[], storage=[] (at pp.c:2529)
            TypeDecl: declname='time', quals=[] (at pp.c:2529)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Capture__captured', quals=[] (at pp.c:2529)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2529)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__1__Capture__default__captured' (at pp.c:2531)
        ExprList:  (at pp.c:2531)
          ID: name='time' (at pp.c:2531)
  FuncDef:  (at pp.c:2536)
    Decl: name='Msp430TimerCapComP__1__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:2536)
      FuncDecl: quals=None (at pp.c:2536)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Capture__getEvent', quals=[] (at pp.c:2536)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:2537)
      Return:  (at pp.c:2538)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:2538)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='372U' (at pp.c:2538)
  FuncDef:  (at pp.c:2542)
    Decl: name='Msp430TimerCapComP__1__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:2542)
      FuncDecl: quals=None (at pp.c:2542)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Compare__default__fired', quals=[] (at pp.c:2542)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2543)
  FuncDef:  (at pp.c:2547)
    Decl: name='Msp430TimerCapComP__1__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:2547)
      FuncDecl: quals=None (at pp.c:2547)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Compare__fired', quals=[] (at pp.c:2547)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2547)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__1__Compare__default__fired' (at pp.c:2549)
  FuncDef:  (at pp.c:2554)
    Decl: name='Msp430TimerCapComP__2__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:2554)
      FuncDecl: quals=None (at pp.c:2554)
        ParamList:  (at pp.c:2554)
          Decl: name='x', quals=[], storage=[] (at pp.c:2554)
            TypeDecl: declname='x', quals=[] (at pp.c:2554)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__int2CC', quals=[] (at pp.c:2554)
          IdentifierType: names=['Msp430TimerCapComP__2__cc_t'] (at None)
    Compound:  (at pp.c:2556)
      Decl: name='c', quals=[], storage=[] (at pp.c:2565)
        TypeDecl: declname='c', quals=[] (at pp.c:2565)
          Union: name='Msp430TimerCapComP__2____nesc_unnamed4278', packed=False (at pp.c:2558)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:2560)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:2562)
                IdentifierType: names=['Msp430TimerCapComP__2__cc_t'] (at None)
        ExprList:  (at pp.c:2565)
          Assignment: op='=' (at pp.c:2565)
            StructRef: type='.' (at pp.c:2565)
              ID: name='f' (at pp.c:2565)
            ID: name='x' (at pp.c:2565)
      Return:  (at pp.c:2568)
        StructRef: type='.' (at pp.c:2568)
          ID: name='c' (at pp.c:2568)
          ID: name='t' (at pp.c:2568)
  FuncDef:  (at pp.c:2572)
    Decl: name='Msp430TimerCapComP__2__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:2572)
      FuncDecl: quals=None (at pp.c:2572)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Control__getControl', quals=[] (at pp.c:2572)
          IdentifierType: names=['Msp430TimerCapComP__2__cc_t'] (at None)
    Compound:  (at pp.c:2573)
      Return:  (at pp.c:2574)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__2__int2CC' (at pp.c:2574)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:2574)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='358U' (at pp.c:2574)
  FuncDef:  (at pp.c:2578)
    Decl: name='Msp430TimerCapComP__2__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:2578)
      FuncDecl: quals=None (at pp.c:2578)
        ParamList:  (at pp.c:2578)
          Decl: name='n', quals=[], storage=[] (at pp.c:2578)
            TypeDecl: declname='n', quals=[] (at pp.c:2578)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Capture__default__captured', quals=[] (at pp.c:2578)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2579)
  FuncDef:  (at pp.c:2583)
    Decl: name='Msp430TimerCapComP__2__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:2583)
      FuncDecl: quals=None (at pp.c:2583)
        ParamList:  (at pp.c:2583)
          Decl: name='time', quals=[], storage=[] (at pp.c:2583)
            TypeDecl: declname='time', quals=[] (at pp.c:2583)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Capture__captured', quals=[] (at pp.c:2583)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2583)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__2__Capture__default__captured' (at pp.c:2585)
        ExprList:  (at pp.c:2585)
          ID: name='time' (at pp.c:2585)
  FuncDef:  (at pp.c:2590)
    Decl: name='Msp430TimerCapComP__2__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:2590)
      FuncDecl: quals=None (at pp.c:2590)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Capture__getEvent', quals=[] (at pp.c:2590)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:2591)
      Return:  (at pp.c:2592)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:2592)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='374U' (at pp.c:2592)
  FuncDef:  (at pp.c:2596)
    Decl: name='Msp430TimerCapComP__2__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:2596)
      FuncDecl: quals=None (at pp.c:2596)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Compare__default__fired', quals=[] (at pp.c:2596)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2597)
  FuncDef:  (at pp.c:2601)
    Decl: name='Msp430TimerCapComP__2__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:2601)
      FuncDecl: quals=None (at pp.c:2601)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Compare__fired', quals=[] (at pp.c:2601)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2601)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__2__Compare__default__fired' (at pp.c:2603)
  FuncDef:  (at pp.c:2608)
    Decl: name='Msp430TimerP__0__VectorTimerX1__fired', quals=[], storage=['inline', 'static'] (at pp.c:2608)
      FuncDecl: quals=None (at pp.c:2608)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__VectorTimerX1__fired', quals=[] (at pp.c:2608)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2609)
      Decl: name='n', quals=[], storage=[] (at pp.c:2610)
        TypeDecl: declname='n', quals=[] (at pp.c:2610)
          IdentifierType: names=['uint8_t'] (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:2610)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='302U' (at pp.c:2610)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Event__fired' (at pp.c:2613)
        ExprList:  (at pp.c:2613)
          BinaryOp: op='>>' (at pp.c:2613)
            ID: name='n' (at pp.c:2613)
            Constant: type='int', value='1' (at pp.c:2613)
  FuncDef:  (at pp.c:2617)
    Decl: name='Msp430TimerCommonP__VectorTimerA1__fired', quals=[], storage=['static', 'inline'] (at pp.c:2617)
      FuncDecl: quals=None (at pp.c:2617)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCommonP__VectorTimerA1__fired', quals=[] (at pp.c:2617)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2617)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__VectorTimerX1__fired' (at pp.c:2619)
  FuncDef:  (at pp.c:2624)
    Decl: name='Msp430TimerP__1__VectorTimerX0__fired', quals=[], storage=['inline', 'static'] (at pp.c:2624)
      FuncDecl: quals=None (at pp.c:2624)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__VectorTimerX0__fired', quals=[] (at pp.c:2624)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2625)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__1__Event__fired' (at pp.c:2626)
        ExprList:  (at pp.c:2626)
          Constant: type='int', value='0' (at pp.c:2626)
  FuncDef:  (at pp.c:2630)
    Decl: name='Msp430TimerCommonP__VectorTimerB0__fired', quals=[], storage=['static', 'inline'] (at pp.c:2630)
      FuncDecl: quals=None (at pp.c:2630)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCommonP__VectorTimerB0__fired', quals=[] (at pp.c:2630)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2630)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__1__VectorTimerX0__fired' (at pp.c:2632)
  FuncDef:  (at pp.c:2637)
    Decl: name='Msp430TimerCapComP__9__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2637)
      FuncDecl: quals=None (at pp.c:2637)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Timer__overflow', quals=[] (at pp.c:2637)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2638)
  FuncDef:  (at pp.c:2642)
    Decl: name='Msp430TimerCapComP__8__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2642)
      FuncDecl: quals=None (at pp.c:2642)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Timer__overflow', quals=[] (at pp.c:2642)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2643)
  FuncDef:  (at pp.c:2647)
    Decl: name='Msp430TimerCapComP__7__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2647)
      FuncDecl: quals=None (at pp.c:2647)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Timer__overflow', quals=[] (at pp.c:2647)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2648)
  FuncDef:  (at pp.c:2652)
    Decl: name='Msp430TimerCapComP__6__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2652)
      FuncDecl: quals=None (at pp.c:2652)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Timer__overflow', quals=[] (at pp.c:2652)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2653)
  FuncDef:  (at pp.c:2657)
    Decl: name='Msp430TimerCapComP__5__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2657)
      FuncDecl: quals=None (at pp.c:2657)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Timer__overflow', quals=[] (at pp.c:2657)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2658)
  FuncDef:  (at pp.c:2662)
    Decl: name='Msp430TimerCapComP__4__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2662)
      FuncDecl: quals=None (at pp.c:2662)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Timer__overflow', quals=[] (at pp.c:2662)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2663)
  FuncDef:  (at pp.c:2667)
    Decl: name='Msp430TimerCapComP__3__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2667)
      FuncDecl: quals=None (at pp.c:2667)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Timer__overflow', quals=[] (at pp.c:2667)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2668)
  FuncDef:  (at pp.c:2672)
    Decl: name='Msp430AlarmC__0__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2672)
      FuncDecl: quals=None (at pp.c:2672)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430Timer__overflow', quals=[] (at pp.c:2672)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2673)
  FuncDef:  (at pp.c:2677)
    Decl: name='CounterToLocalTimeC__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2677)
      FuncDecl: quals=None (at pp.c:2677)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CounterToLocalTimeC__0__Counter__overflow', quals=[] (at pp.c:2677)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2678)
  FuncDef:  (at pp.c:2682)
    Decl: name='TransformAlarmC__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2682)
      FuncDecl: quals=None (at pp.c:2682)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Counter__overflow', quals=[] (at pp.c:2682)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2683)
  FuncDef:  (at pp.c:2687)
    Decl: name='TransformCounterC__0__Counter__overflow', quals=[], storage=['static', 'inline'] (at pp.c:2687)
      FuncDecl: quals=None (at pp.c:2687)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__0__Counter__overflow', quals=[] (at pp.c:2687)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2687)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__Counter__overflow' (at pp.c:2689)
      FuncCall:  (at None)
        ID: name='CounterToLocalTimeC__0__Counter__overflow' (at pp.c:2691)
  FuncDef:  (at pp.c:2696)
    Decl: name='TransformCounterC__0__CounterFrom__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2696)
      FuncDecl: quals=None (at pp.c:2696)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__0__CounterFrom__overflow', quals=[] (at pp.c:2696)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2697)
      Compound:  (at pp.c:2699)
        UnaryOp: op='p++' (at pp.c:2700)
          ID: name='TransformCounterC__0__m_upper' (at pp.c:2700)
        If:  (at pp.c:2701)
          BinaryOp: op='==' (at pp.c:2701)
            BinaryOp: op='&' (at pp.c:2701)
              ID: name='TransformCounterC__0__m_upper' (at pp.c:2701)
              ID: name='TransformCounterC__0__OVERFLOW_MASK' (at pp.c:2701)
            Constant: type='int', value='0' (at pp.c:2701)
          Compound:  (at pp.c:2701)
            FuncCall:  (at None)
              ID: name='TransformCounterC__0__Counter__overflow' (at pp.c:2702)
  FuncDef:  (at pp.c:2708)
    Decl: name='Msp430CounterC__0__Counter__overflow', quals=[], storage=['static', 'inline'] (at pp.c:2708)
      FuncDecl: quals=None (at pp.c:2708)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Counter__overflow', quals=[] (at pp.c:2708)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2708)
      FuncCall:  (at None)
        ID: name='TransformCounterC__0__CounterFrom__overflow' (at pp.c:2710)
  FuncDef:  (at pp.c:2715)
    Decl: name='Msp430CounterC__0__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2715)
      FuncDecl: quals=None (at pp.c:2715)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Msp430Timer__overflow', quals=[] (at pp.c:2715)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2716)
      FuncCall:  (at None)
        ID: name='Msp430CounterC__0__Counter__overflow' (at pp.c:2717)
  FuncDef:  (at pp.c:2721)
    Decl: name='Msp430TimerP__1__Timer__overflow', quals=[], storage=['static', 'inline'] (at pp.c:2721)
      FuncDecl: quals=None (at pp.c:2721)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Timer__overflow', quals=[] (at pp.c:2721)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2721)
      FuncCall:  (at None)
        ID: name='Msp430CounterC__0__Msp430Timer__overflow' (at pp.c:2723)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430Timer__overflow' (at pp.c:2725)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Timer__overflow' (at pp.c:2727)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__4__Timer__overflow' (at pp.c:2729)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Timer__overflow' (at pp.c:2731)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__6__Timer__overflow' (at pp.c:2733)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__7__Timer__overflow' (at pp.c:2735)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__8__Timer__overflow' (at pp.c:2737)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__9__Timer__overflow' (at pp.c:2739)
  FuncDef:  (at pp.c:2744)
    Decl: name='Msp430TimerP__1__Overflow__fired', quals=[], storage=['inline', 'static'] (at pp.c:2744)
      FuncDecl: quals=None (at pp.c:2744)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Overflow__fired', quals=[] (at pp.c:2744)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2745)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__1__Timer__overflow' (at pp.c:2746)
  FuncDef:  (at pp.c:2750)
    Decl: name='AlarmToTimerC__0__fired__postTask', quals=[], storage=['static', 'inline'] (at pp.c:2750)
      FuncDecl: quals=None (at pp.c:2750)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__fired__postTask', quals=[] (at pp.c:2750)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:2750)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:2752)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:2752)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:2756)
        ID: name='__nesc_result' (at pp.c:2756)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:2756)
          ExprList:  (at pp.c:2756)
            ID: name='AlarmToTimerC__0__fired' (at pp.c:2756)
      Return:  (at pp.c:2760)
        ID: name='__nesc_result' (at pp.c:2760)
  FuncDef:  (at pp.c:2765)
    Decl: name='AlarmToTimerC__0__Alarm__fired', quals=[], storage=['inline', 'static'] (at pp.c:2765)
      FuncDecl: quals=None (at pp.c:2765)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Alarm__fired', quals=[] (at pp.c:2765)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2766)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__fired__postTask' (at pp.c:2768)
  FuncDef:  (at pp.c:2772)
    Decl: name='TransformAlarmC__0__Alarm__fired', quals=[], storage=['static', 'inline'] (at pp.c:2772)
      FuncDecl: quals=None (at pp.c:2772)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Alarm__fired', quals=[] (at pp.c:2772)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2772)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Alarm__fired' (at pp.c:2774)
  FuncDef:  (at pp.c:2779)
    Decl: name='TransformAlarmC__0__AlarmFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:2779)
      FuncDecl: quals=None (at pp.c:2779)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__AlarmFrom__fired', quals=[] (at pp.c:2779)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2780)
      Compound:  (at pp.c:2782)
        If:  (at pp.c:2783)
          BinaryOp: op='==' (at pp.c:2783)
            ID: name='TransformAlarmC__0__m_dt' (at pp.c:2783)
            Constant: type='int', value='0' (at pp.c:2783)
          Compound:  (at pp.c:2784)
            FuncCall:  (at None)
              ID: name='TransformAlarmC__0__Alarm__fired' (at pp.c:2785)
          Compound:  (at pp.c:2788)
            FuncCall:  (at None)
              ID: name='TransformAlarmC__0__set_alarm' (at pp.c:2789)
  FuncDef:  (at pp.c:2795)
    Decl: name='Msp430AlarmC__0__Alarm__fired', quals=[], storage=['static', 'inline'] (at pp.c:2795)
      FuncDecl: quals=None (at pp.c:2795)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Alarm__fired', quals=[] (at pp.c:2795)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2795)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__AlarmFrom__fired' (at pp.c:2797)
  FuncDef:  (at pp.c:2802)
    Decl: name='Msp430TimerCapComP__3__Control__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:2802)
      FuncDecl: quals=None (at pp.c:2802)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Control__disableEvents', quals=[] (at pp.c:2802)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2803)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:2804)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='386U' (at pp.c:2804)
        UnaryOp: op='~' (at pp.c:2804)
          Constant: type='int', value='0x0010' (at pp.c:2804)
  FuncDef:  (at pp.c:2808)
    Decl: name='Msp430AlarmC__0__Msp430TimerControl__disableEvents', quals=[], storage=['static', 'inline'] (at pp.c:2808)
      FuncDecl: quals=None (at pp.c:2808)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__disableEvents', quals=[] (at pp.c:2808)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2808)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Control__disableEvents' (at pp.c:2810)
  FuncDef:  (at pp.c:2815)
    Decl: name='Msp430AlarmC__0__Msp430Compare__fired', quals=[], storage=['inline', 'static'] (at pp.c:2815)
      FuncDecl: quals=None (at pp.c:2815)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__fired', quals=[] (at pp.c:2815)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2816)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430TimerControl__disableEvents' (at pp.c:2817)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Alarm__fired' (at pp.c:2818)
  FuncDef:  (at pp.c:2822)
    Decl: name='Msp430TimerCapComP__3__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:2822)
      FuncDecl: quals=None (at pp.c:2822)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Compare__fired', quals=[] (at pp.c:2822)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2822)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430Compare__fired' (at pp.c:2824)
  FuncDef:  (at pp.c:2829)
    Decl: name='Msp430TimerCapComP__3__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:2829)
      FuncDecl: quals=None (at pp.c:2829)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Capture__getEvent', quals=[] (at pp.c:2829)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:2830)
      Return:  (at pp.c:2831)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:2831)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='402U' (at pp.c:2831)
  FuncDef:  (at pp.c:2835)
    Decl: name='Msp430TimerCapComP__3__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:2835)
      FuncDecl: quals=None (at pp.c:2835)
        ParamList:  (at pp.c:2835)
          Decl: name='n', quals=[], storage=[] (at pp.c:2835)
            TypeDecl: declname='n', quals=[] (at pp.c:2835)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Capture__default__captured', quals=[] (at pp.c:2835)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2836)
  FuncDef:  (at pp.c:2840)
    Decl: name='Msp430TimerCapComP__3__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:2840)
      FuncDecl: quals=None (at pp.c:2840)
        ParamList:  (at pp.c:2840)
          Decl: name='time', quals=[], storage=[] (at pp.c:2840)
            TypeDecl: declname='time', quals=[] (at pp.c:2840)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Capture__captured', quals=[] (at pp.c:2840)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2840)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Capture__default__captured' (at pp.c:2842)
        ExprList:  (at pp.c:2842)
          ID: name='time' (at pp.c:2842)
  FuncDef:  (at pp.c:2847)
    Decl: name='Msp430TimerCapComP__3__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:2847)
      FuncDecl: quals=None (at pp.c:2847)
        ParamList:  (at pp.c:2847)
          Decl: name='x', quals=[], storage=[] (at pp.c:2847)
            TypeDecl: declname='x', quals=[] (at pp.c:2847)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__int2CC', quals=[] (at pp.c:2847)
          IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
    Compound:  (at pp.c:2849)
      Decl: name='c', quals=[], storage=[] (at pp.c:2858)
        TypeDecl: declname='c', quals=[] (at pp.c:2858)
          Union: name='Msp430TimerCapComP__3____nesc_unnamed4279', packed=False (at pp.c:2851)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:2853)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:2855)
                IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
        ExprList:  (at pp.c:2858)
          Assignment: op='=' (at pp.c:2858)
            StructRef: type='.' (at pp.c:2858)
              ID: name='f' (at pp.c:2858)
            ID: name='x' (at pp.c:2858)
      Return:  (at pp.c:2861)
        StructRef: type='.' (at pp.c:2861)
          ID: name='c' (at pp.c:2861)
          ID: name='t' (at pp.c:2861)
  FuncDef:  (at pp.c:2865)
    Decl: name='Msp430TimerCapComP__3__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:2865)
      FuncDecl: quals=None (at pp.c:2865)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Control__getControl', quals=[] (at pp.c:2865)
          IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
    Compound:  (at pp.c:2866)
      Return:  (at pp.c:2867)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__3__int2CC' (at pp.c:2867)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:2867)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='386U' (at pp.c:2867)
  FuncDef:  (at pp.c:2871)
    Decl: name='Msp430TimerCapComP__3__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:2871)
      FuncDecl: quals=None (at pp.c:2871)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Event__fired', quals=[] (at pp.c:2871)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2872)
      If:  (at pp.c:2873)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__3__Control__getControl' (at pp.c:2873)
          ID: name='cap' (at pp.c:2873)
        Compound:  (at pp.c:2873)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__3__Capture__captured' (at pp.c:2874)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__3__Capture__getEvent' (at pp.c:2874)
        Compound:  (at pp.c:2876)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__3__Compare__fired' (at pp.c:2878)
  FuncDef:  (at pp.c:2883)
    Decl: name='SchedulerBasicP__isWaiting', quals=[], storage=['inline', 'static'] (at pp.c:2883)
      FuncDecl: quals=None (at pp.c:2883)
        ParamList:  (at pp.c:2883)
          Decl: name='id', quals=[], storage=[] (at pp.c:2883)
            TypeDecl: declname='id', quals=[] (at pp.c:2883)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SchedulerBasicP__isWaiting', quals=[] (at pp.c:2883)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:2884)
      Return:  (at pp.c:2885)
        BinaryOp: op='||' (at pp.c:2885)
          BinaryOp: op='!=' (at pp.c:2885)
            ArrayRef:  (at pp.c:2885)
              ID: name='SchedulerBasicP__m_next' (at pp.c:2885)
              ID: name='id' (at pp.c:2885)
            ID: name='SchedulerBasicP__NO_TASK' (at pp.c:2885)
          BinaryOp: op='==' (at pp.c:2885)
            ID: name='SchedulerBasicP__m_tail' (at pp.c:2885)
            ID: name='id' (at pp.c:2885)
  FuncDef:  (at pp.c:2888)
    Decl: name='SchedulerBasicP__pushTask', quals=[], storage=['inline', 'static'] (at pp.c:2888)
      FuncDecl: quals=None (at pp.c:2888)
        ParamList:  (at pp.c:2888)
          Decl: name='id', quals=[], storage=[] (at pp.c:2888)
            TypeDecl: declname='id', quals=[] (at pp.c:2888)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SchedulerBasicP__pushTask', quals=[] (at pp.c:2888)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:2889)
      If:  (at pp.c:2890)
        UnaryOp: op='!' (at None)
          FuncCall:  (at None)
            ID: name='SchedulerBasicP__isWaiting' (at pp.c:2890)
            ExprList:  (at pp.c:2890)
              ID: name='id' (at pp.c:2890)
        Compound:  (at pp.c:2891)
          If:  (at pp.c:2892)
            BinaryOp: op='==' (at pp.c:2892)
              ID: name='SchedulerBasicP__m_head' (at pp.c:2892)
              ID: name='SchedulerBasicP__NO_TASK' (at pp.c:2892)
            Compound:  (at pp.c:2893)
              Assignment: op='=' (at pp.c:2894)
                ID: name='SchedulerBasicP__m_head' (at pp.c:2894)
                ID: name='id' (at pp.c:2894)
              Assignment: op='=' (at pp.c:2895)
                ID: name='SchedulerBasicP__m_tail' (at pp.c:2895)
                ID: name='id' (at pp.c:2895)
            Compound:  (at pp.c:2898)
              Assignment: op='=' (at pp.c:2899)
                ArrayRef:  (at pp.c:2899)
                  ID: name='SchedulerBasicP__m_next' (at pp.c:2899)
                  ID: name='SchedulerBasicP__m_tail' (at pp.c:2899)
                ID: name='id' (at pp.c:2899)
              Assignment: op='=' (at pp.c:2900)
                ID: name='SchedulerBasicP__m_tail' (at pp.c:2900)
                ID: name='id' (at pp.c:2900)
          Return:  (at pp.c:2902)
            ID: name='TRUE' (at pp.c:2902)
        Compound:  (at pp.c:2905)
          Return:  (at pp.c:2906)
            ID: name='FALSE' (at pp.c:2906)
  FuncDef:  (at pp.c:2911)
    Decl: name='Msp430CounterC__0__Msp430Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:2911)
      FuncDecl: quals=None (at pp.c:2911)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Msp430Timer__get', quals=[] (at pp.c:2911)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:2911)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:2913)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:2913)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:2917)
        ID: name='__nesc_result' (at pp.c:2917)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__get' (at pp.c:2917)
      Return:  (at pp.c:2921)
        ID: name='__nesc_result' (at pp.c:2921)
  FuncDef:  (at pp.c:2926)
    Decl: name='Msp430CounterC__0__Counter__get', quals=[], storage=['inline', 'static'] (at pp.c:2926)
      FuncDecl: quals=None (at pp.c:2926)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Counter__get', quals=[] (at pp.c:2926)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:2927)
      Return:  (at pp.c:2928)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__0__Msp430Timer__get' (at pp.c:2928)
  FuncDef:  (at pp.c:2932)
    Decl: name='TransformCounterC__0__CounterFrom__get', quals=[], storage=['static', 'inline'] (at pp.c:2932)
      FuncDecl: quals=None (at pp.c:2932)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__0__CounterFrom__get', quals=[] (at pp.c:2932)
          IdentifierType: names=['TransformCounterC__0__CounterFrom__size_type'] (at None)
    Compound:  (at pp.c:2932)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:2934)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:2934)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:2938)
        ID: name='__nesc_result' (at pp.c:2938)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__0__Counter__get' (at pp.c:2938)
      Return:  (at pp.c:2942)
        ID: name='__nesc_result' (at pp.c:2942)
  FuncDef:  (at pp.c:2947)
    Decl: name='Msp430TimerP__1__Timer__isOverflowPending', quals=[], storage=['inline', 'static'] (at pp.c:2947)
      FuncDecl: quals=None (at pp.c:2947)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Timer__isOverflowPending', quals=[] (at pp.c:2947)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:2948)
      Return:  (at pp.c:2949)
        BinaryOp: op='&' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:2949)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint16_t'] (at None)
              Constant: type='int', value='384U' (at pp.c:2949)
          Constant: type='int', value='1U' (at pp.c:2949)
  FuncDef:  (at pp.c:2953)
    Decl: name='Msp430CounterC__0__Msp430Timer__isOverflowPending', quals=[], storage=['static', 'inline'] (at pp.c:2953)
      FuncDecl: quals=None (at pp.c:2953)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Msp430Timer__isOverflowPending', quals=[] (at pp.c:2953)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:2953)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:2955)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:2955)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:2959)
        ID: name='__nesc_result' (at pp.c:2959)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__isOverflowPending' (at pp.c:2959)
      Return:  (at pp.c:2963)
        ID: name='__nesc_result' (at pp.c:2963)
  FuncDef:  (at pp.c:2968)
    Decl: name='Msp430CounterC__0__Counter__isOverflowPending', quals=[], storage=['inline', 'static'] (at pp.c:2968)
      FuncDecl: quals=None (at pp.c:2968)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Counter__isOverflowPending', quals=[] (at pp.c:2968)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:2969)
      Return:  (at pp.c:2970)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__0__Msp430Timer__isOverflowPending' (at pp.c:2970)
  FuncDef:  (at pp.c:2974)
    Decl: name='TransformCounterC__0__CounterFrom__isOverflowPending', quals=[], storage=['static', 'inline'] (at pp.c:2974)
      FuncDecl: quals=None (at pp.c:2974)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__0__CounterFrom__isOverflowPending', quals=[] (at pp.c:2974)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:2974)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:2976)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:2976)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:2980)
        ID: name='__nesc_result' (at pp.c:2980)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__0__Counter__isOverflowPending' (at pp.c:2980)
      Return:  (at pp.c:2984)
        ID: name='__nesc_result' (at pp.c:2984)
  FuncDef:  (at pp.c:2989)
    Decl: name='Msp430TimerCapComP__3__Control__enableEvents', quals=[], storage=['inline', 'static'] (at pp.c:2989)
      FuncDecl: quals=None (at pp.c:2989)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Control__enableEvents', quals=[] (at pp.c:2989)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2990)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:2991)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='386U' (at pp.c:2991)
        Constant: type='int', value='0x0010' (at pp.c:2991)
  FuncDef:  (at pp.c:2995)
    Decl: name='Msp430AlarmC__0__Msp430TimerControl__enableEvents', quals=[], storage=['static', 'inline'] (at pp.c:2995)
      FuncDecl: quals=None (at pp.c:2995)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__enableEvents', quals=[] (at pp.c:2995)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:2995)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Control__enableEvents' (at pp.c:2997)
  FuncDef:  (at pp.c:3002)
    Decl: name='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[], storage=['inline', 'static'] (at pp.c:3002)
      FuncDecl: quals=None (at pp.c:3002)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[] (at pp.c:3002)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3003)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:3004)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='386U' (at pp.c:3004)
        UnaryOp: op='~' (at pp.c:3004)
          Constant: type='int', value='0x0001' (at pp.c:3004)
  FuncDef:  (at pp.c:3008)
    Decl: name='Msp430AlarmC__0__Msp430TimerControl__clearPendingInterrupt', quals=[], storage=['static', 'inline'] (at pp.c:3008)
      FuncDecl: quals=None (at pp.c:3008)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__clearPendingInterrupt', quals=[] (at pp.c:3008)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3008)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Control__clearPendingInterrupt' (at pp.c:3010)
  FuncDef:  (at pp.c:3015)
    Decl: name='Msp430TimerCapComP__3__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:3015)
      FuncDecl: quals=None (at pp.c:3015)
        ParamList:  (at pp.c:3015)
          Decl: name='x', quals=[], storage=[] (at pp.c:3015)
            TypeDecl: declname='x', quals=[] (at pp.c:3015)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEvent', quals=[] (at pp.c:3015)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3016)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:3017)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='402U' (at pp.c:3017)
        ID: name='x' (at pp.c:3017)
  FuncDef:  (at pp.c:3021)
    Decl: name='Msp430AlarmC__0__Msp430Compare__setEvent', quals=[], storage=['static', 'inline'] (at pp.c:3021)
      FuncDecl: quals=None (at pp.c:3021)
        ParamList:  (at pp.c:3021)
          Decl: name='time', quals=[], storage=[] (at pp.c:3021)
            TypeDecl: declname='time', quals=[] (at pp.c:3021)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__setEvent', quals=[] (at pp.c:3021)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3021)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Compare__setEvent' (at pp.c:3023)
        ExprList:  (at pp.c:3023)
          ID: name='time' (at pp.c:3023)
  FuncDef:  (at pp.c:3028)
    Decl: name='Msp430TimerCapComP__3__Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:3028)
      FuncDecl: quals=None (at pp.c:3028)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Timer__get', quals=[] (at pp.c:3028)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:3028)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:3030)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:3030)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:3034)
        ID: name='__nesc_result' (at pp.c:3034)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__get' (at pp.c:3034)
      Return:  (at pp.c:3038)
        ID: name='__nesc_result' (at pp.c:3038)
  FuncDef:  (at pp.c:3043)
    Decl: name='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[], storage=['inline', 'static'] (at pp.c:3043)
      FuncDecl: quals=None (at pp.c:3043)
        ParamList:  (at pp.c:3043)
          Decl: name='x', quals=[], storage=[] (at pp.c:3043)
            TypeDecl: declname='x', quals=[] (at pp.c:3043)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[] (at pp.c:3043)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3044)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:3045)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='402U' (at pp.c:3045)
        BinaryOp: op='+' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__3__Timer__get' (at pp.c:3045)
          ID: name='x' (at pp.c:3045)
  FuncDef:  (at pp.c:3049)
    Decl: name='Msp430AlarmC__0__Msp430Compare__setEventFromNow', quals=[], storage=['static', 'inline'] (at pp.c:3049)
      FuncDecl: quals=None (at pp.c:3049)
        ParamList:  (at pp.c:3049)
          Decl: name='delta', quals=[], storage=[] (at pp.c:3049)
            TypeDecl: declname='delta', quals=[] (at pp.c:3049)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__setEventFromNow', quals=[] (at pp.c:3049)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3049)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Compare__setEventFromNow' (at pp.c:3051)
        ExprList:  (at pp.c:3051)
          ID: name='delta' (at pp.c:3051)
  FuncDef:  (at pp.c:3056)
    Decl: name='Msp430AlarmC__0__Msp430Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:3056)
      FuncDecl: quals=None (at pp.c:3056)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430Timer__get', quals=[] (at pp.c:3056)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:3056)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:3058)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:3058)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:3062)
        ID: name='__nesc_result' (at pp.c:3062)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__get' (at pp.c:3062)
      Return:  (at pp.c:3066)
        ID: name='__nesc_result' (at pp.c:3066)
  FuncDef:  (at pp.c:3071)
    Decl: name='Msp430AlarmC__0__Alarm__startAt', quals=[], storage=['inline', 'static'] (at pp.c:3071)
      FuncDecl: quals=None (at pp.c:3071)
        ParamList:  (at pp.c:3071)
          Decl: name='t0', quals=[], storage=[] (at pp.c:3071)
            TypeDecl: declname='t0', quals=[] (at pp.c:3071)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:3071)
            TypeDecl: declname='dt', quals=[] (at pp.c:3071)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Alarm__startAt', quals=[] (at pp.c:3071)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3072)
      Compound:  (at pp.c:3074)
        Decl: name='now', quals=[], storage=[] (at pp.c:3075)
          TypeDecl: declname='now', quals=[] (at pp.c:3075)
            IdentifierType: names=['uint16_t'] (at None)
          FuncCall:  (at None)
            ID: name='Msp430AlarmC__0__Msp430Timer__get' (at pp.c:3075)
        Decl: name='elapsed', quals=[], storage=[] (at pp.c:3076)
          TypeDecl: declname='elapsed', quals=[] (at pp.c:3076)
            IdentifierType: names=['uint16_t'] (at None)
          BinaryOp: op='-' (at pp.c:3076)
            ID: name='now' (at pp.c:3076)
            ID: name='t0' (at pp.c:3076)
        If:  (at pp.c:3079)
          BinaryOp: op='>=' (at pp.c:3079)
            ID: name='elapsed' (at pp.c:3079)
            ID: name='dt' (at pp.c:3079)
          Compound:  (at pp.c:3080)
            FuncCall:  (at None)
              ID: name='Msp430AlarmC__0__Msp430Compare__setEventFromNow' (at pp.c:3081)
              ExprList:  (at pp.c:3081)
                Constant: type='int', value='2' (at pp.c:3081)
          Compound:  (at pp.c:3084)
            Decl: name='remaining', quals=[], storage=[] (at pp.c:3085)
              TypeDecl: declname='remaining', quals=[] (at pp.c:3085)
                IdentifierType: names=['uint16_t'] (at None)
              BinaryOp: op='-' (at pp.c:3085)
                ID: name='dt' (at pp.c:3085)
                ID: name='elapsed' (at pp.c:3085)
            If:  (at pp.c:3088)
              BinaryOp: op='<=' (at pp.c:3088)
                ID: name='remaining' (at pp.c:3088)
                Constant: type='int', value='2' (at pp.c:3088)
              Compound:  (at pp.c:3088)
                FuncCall:  (at None)
                  ID: name='Msp430AlarmC__0__Msp430Compare__setEventFromNow' (at pp.c:3089)
                  ExprList:  (at pp.c:3089)
                    Constant: type='int', value='2' (at pp.c:3089)
              Compound:  (at pp.c:3091)
                FuncCall:  (at None)
                  ID: name='Msp430AlarmC__0__Msp430Compare__setEvent' (at pp.c:3093)
                  ExprList:  (at pp.c:3093)
                    BinaryOp: op='+' (at pp.c:3093)
                      ID: name='now' (at pp.c:3093)
                      ID: name='remaining' (at pp.c:3093)
        FuncCall:  (at None)
          ID: name='Msp430AlarmC__0__Msp430TimerControl__clearPendingInterrupt' (at pp.c:3097)
        FuncCall:  (at None)
          ID: name='Msp430AlarmC__0__Msp430TimerControl__enableEvents' (at pp.c:3098)
  FuncDef:  (at pp.c:3103)
    Decl: name='TransformAlarmC__0__AlarmFrom__startAt', quals=[], storage=['static', 'inline'] (at pp.c:3103)
      FuncDecl: quals=None (at pp.c:3103)
        ParamList:  (at pp.c:3103)
          Decl: name='t0', quals=[], storage=[] (at pp.c:3103)
            TypeDecl: declname='t0', quals=[] (at pp.c:3103)
              IdentifierType: names=['TransformAlarmC__0__AlarmFrom__size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:3103)
            TypeDecl: declname='dt', quals=[] (at pp.c:3103)
              IdentifierType: names=['TransformAlarmC__0__AlarmFrom__size_type'] (at None)
        TypeDecl: declname='TransformAlarmC__0__AlarmFrom__startAt', quals=[] (at pp.c:3103)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3103)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Alarm__startAt' (at pp.c:3105)
        ExprList:  (at pp.c:3105)
          ID: name='t0' (at pp.c:3105)
          ID: name='dt' (at pp.c:3105)
  FuncDef:  (at pp.c:3110)
    Decl: name='Msp430TimerCapComP__4__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:3110)
      FuncDecl: quals=None (at pp.c:3110)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Compare__default__fired', quals=[] (at pp.c:3110)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3111)
  FuncDef:  (at pp.c:3115)
    Decl: name='Msp430TimerCapComP__4__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:3115)
      FuncDecl: quals=None (at pp.c:3115)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Compare__fired', quals=[] (at pp.c:3115)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3115)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__4__Compare__default__fired' (at pp.c:3117)
  FuncDef:  (at pp.c:3122)
    Decl: name='Msp430TimerCapComP__4__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:3122)
      FuncDecl: quals=None (at pp.c:3122)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Capture__getEvent', quals=[] (at pp.c:3122)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:3123)
      Return:  (at pp.c:3124)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:3124)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='404U' (at pp.c:3124)
  FuncDef:  (at pp.c:3128)
    Decl: name='Msp430TimerCapComP__4__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:3128)
      FuncDecl: quals=None (at pp.c:3128)
        ParamList:  (at pp.c:3128)
          Decl: name='n', quals=[], storage=[] (at pp.c:3128)
            TypeDecl: declname='n', quals=[] (at pp.c:3128)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Capture__default__captured', quals=[] (at pp.c:3128)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3129)
  FuncDef:  (at pp.c:3133)
    Decl: name='Msp430TimerCapComP__4__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:3133)
      FuncDecl: quals=None (at pp.c:3133)
        ParamList:  (at pp.c:3133)
          Decl: name='time', quals=[], storage=[] (at pp.c:3133)
            TypeDecl: declname='time', quals=[] (at pp.c:3133)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Capture__captured', quals=[] (at pp.c:3133)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3133)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__4__Capture__default__captured' (at pp.c:3135)
        ExprList:  (at pp.c:3135)
          ID: name='time' (at pp.c:3135)
  FuncDef:  (at pp.c:3140)
    Decl: name='Msp430TimerCapComP__4__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:3140)
      FuncDecl: quals=None (at pp.c:3140)
        ParamList:  (at pp.c:3140)
          Decl: name='x', quals=[], storage=[] (at pp.c:3140)
            TypeDecl: declname='x', quals=[] (at pp.c:3140)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__int2CC', quals=[] (at pp.c:3140)
          IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
    Compound:  (at pp.c:3142)
      Decl: name='c', quals=[], storage=[] (at pp.c:3151)
        TypeDecl: declname='c', quals=[] (at pp.c:3151)
          Union: name='Msp430TimerCapComP__4____nesc_unnamed4280', packed=False (at pp.c:3144)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:3146)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:3148)
                IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
        ExprList:  (at pp.c:3151)
          Assignment: op='=' (at pp.c:3151)
            StructRef: type='.' (at pp.c:3151)
              ID: name='f' (at pp.c:3151)
            ID: name='x' (at pp.c:3151)
      Return:  (at pp.c:3154)
        StructRef: type='.' (at pp.c:3154)
          ID: name='c' (at pp.c:3154)
          ID: name='t' (at pp.c:3154)
  FuncDef:  (at pp.c:3158)
    Decl: name='Msp430TimerCapComP__4__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:3158)
      FuncDecl: quals=None (at pp.c:3158)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Control__getControl', quals=[] (at pp.c:3158)
          IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
    Compound:  (at pp.c:3159)
      Return:  (at pp.c:3160)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__4__int2CC' (at pp.c:3160)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:3160)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='388U' (at pp.c:3160)
  FuncDef:  (at pp.c:3164)
    Decl: name='Msp430TimerCapComP__4__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:3164)
      FuncDecl: quals=None (at pp.c:3164)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Event__fired', quals=[] (at pp.c:3164)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3165)
      If:  (at pp.c:3166)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__4__Control__getControl' (at pp.c:3166)
          ID: name='cap' (at pp.c:3166)
        Compound:  (at pp.c:3166)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__4__Capture__captured' (at pp.c:3167)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__4__Capture__getEvent' (at pp.c:3167)
        Compound:  (at pp.c:3169)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__4__Compare__fired' (at pp.c:3171)
  FuncDef:  (at pp.c:3178)
    Decl: name='Msp430TimerCapComP__5__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:3178)
      FuncDecl: quals=None (at pp.c:3178)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Compare__default__fired', quals=[] (at pp.c:3178)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3179)
  FuncDef:  (at pp.c:3183)
    Decl: name='Msp430TimerCapComP__5__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:3183)
      FuncDecl: quals=None (at pp.c:3183)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Compare__fired', quals=[] (at pp.c:3183)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3183)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Compare__default__fired' (at pp.c:3185)
  FuncDef:  (at pp.c:3190)
    Decl: name='Msp430TimerCapComP__5__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:3190)
      FuncDecl: quals=None (at pp.c:3190)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Capture__getEvent', quals=[] (at pp.c:3190)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:3191)
      Return:  (at pp.c:3192)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:3192)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='406U' (at pp.c:3192)
  FuncDef:  (at pp.c:3196)
    Decl: name='Msp430TimerCapComP__5__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:3196)
      FuncDecl: quals=None (at pp.c:3196)
        ParamList:  (at pp.c:3196)
          Decl: name='n', quals=[], storage=[] (at pp.c:3196)
            TypeDecl: declname='n', quals=[] (at pp.c:3196)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Capture__default__captured', quals=[] (at pp.c:3196)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3197)
  FuncDef:  (at pp.c:3201)
    Decl: name='Msp430TimerCapComP__5__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:3201)
      FuncDecl: quals=None (at pp.c:3201)
        ParamList:  (at pp.c:3201)
          Decl: name='time', quals=[], storage=[] (at pp.c:3201)
            TypeDecl: declname='time', quals=[] (at pp.c:3201)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Capture__captured', quals=[] (at pp.c:3201)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3201)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Capture__default__captured' (at pp.c:3203)
        ExprList:  (at pp.c:3203)
          ID: name='time' (at pp.c:3203)
  FuncDef:  (at pp.c:3208)
    Decl: name='Msp430TimerCapComP__5__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:3208)
      FuncDecl: quals=None (at pp.c:3208)
        ParamList:  (at pp.c:3208)
          Decl: name='x', quals=[], storage=[] (at pp.c:3208)
            TypeDecl: declname='x', quals=[] (at pp.c:3208)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__int2CC', quals=[] (at pp.c:3208)
          IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
    Compound:  (at pp.c:3210)
      Decl: name='c', quals=[], storage=[] (at pp.c:3219)
        TypeDecl: declname='c', quals=[] (at pp.c:3219)
          Union: name='Msp430TimerCapComP__5____nesc_unnamed4281', packed=False (at pp.c:3212)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:3214)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:3216)
                IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
        ExprList:  (at pp.c:3219)
          Assignment: op='=' (at pp.c:3219)
            StructRef: type='.' (at pp.c:3219)
              ID: name='f' (at pp.c:3219)
            ID: name='x' (at pp.c:3219)
      Return:  (at pp.c:3222)
        StructRef: type='.' (at pp.c:3222)
          ID: name='c' (at pp.c:3222)
          ID: name='t' (at pp.c:3222)
  FuncDef:  (at pp.c:3226)
    Decl: name='Msp430TimerCapComP__5__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:3226)
      FuncDecl: quals=None (at pp.c:3226)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Control__getControl', quals=[] (at pp.c:3226)
          IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
    Compound:  (at pp.c:3227)
      Return:  (at pp.c:3228)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__5__int2CC' (at pp.c:3228)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:3228)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='390U' (at pp.c:3228)
  FuncDef:  (at pp.c:3232)
    Decl: name='Msp430TimerCapComP__5__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:3232)
      FuncDecl: quals=None (at pp.c:3232)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Event__fired', quals=[] (at pp.c:3232)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3233)
      If:  (at pp.c:3234)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__5__Control__getControl' (at pp.c:3234)
          ID: name='cap' (at pp.c:3234)
        Compound:  (at pp.c:3234)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__5__Capture__captured' (at pp.c:3235)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__5__Capture__getEvent' (at pp.c:3235)
        Compound:  (at pp.c:3237)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__5__Compare__fired' (at pp.c:3239)
  FuncDef:  (at pp.c:3246)
    Decl: name='Msp430TimerCapComP__6__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:3246)
      FuncDecl: quals=None (at pp.c:3246)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Compare__default__fired', quals=[] (at pp.c:3246)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3247)
  FuncDef:  (at pp.c:3251)
    Decl: name='Msp430TimerCapComP__6__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:3251)
      FuncDecl: quals=None (at pp.c:3251)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Compare__fired', quals=[] (at pp.c:3251)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3251)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__6__Compare__default__fired' (at pp.c:3253)
  FuncDef:  (at pp.c:3258)
    Decl: name='Msp430TimerCapComP__6__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:3258)
      FuncDecl: quals=None (at pp.c:3258)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Capture__getEvent', quals=[] (at pp.c:3258)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:3259)
      Return:  (at pp.c:3260)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:3260)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='408U' (at pp.c:3260)
  FuncDef:  (at pp.c:3264)
    Decl: name='Msp430TimerCapComP__6__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:3264)
      FuncDecl: quals=None (at pp.c:3264)
        ParamList:  (at pp.c:3264)
          Decl: name='n', quals=[], storage=[] (at pp.c:3264)
            TypeDecl: declname='n', quals=[] (at pp.c:3264)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Capture__default__captured', quals=[] (at pp.c:3264)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3265)
  FuncDef:  (at pp.c:3269)
    Decl: name='Msp430TimerCapComP__6__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:3269)
      FuncDecl: quals=None (at pp.c:3269)
        ParamList:  (at pp.c:3269)
          Decl: name='time', quals=[], storage=[] (at pp.c:3269)
            TypeDecl: declname='time', quals=[] (at pp.c:3269)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Capture__captured', quals=[] (at pp.c:3269)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3269)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__6__Capture__default__captured' (at pp.c:3271)
        ExprList:  (at pp.c:3271)
          ID: name='time' (at pp.c:3271)
  FuncDef:  (at pp.c:3276)
    Decl: name='Msp430TimerCapComP__6__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:3276)
      FuncDecl: quals=None (at pp.c:3276)
        ParamList:  (at pp.c:3276)
          Decl: name='x', quals=[], storage=[] (at pp.c:3276)
            TypeDecl: declname='x', quals=[] (at pp.c:3276)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__int2CC', quals=[] (at pp.c:3276)
          IdentifierType: names=['Msp430TimerCapComP__6__cc_t'] (at None)
    Compound:  (at pp.c:3278)
      Decl: name='c', quals=[], storage=[] (at pp.c:3287)
        TypeDecl: declname='c', quals=[] (at pp.c:3287)
          Union: name='Msp430TimerCapComP__6____nesc_unnamed4282', packed=False (at pp.c:3280)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:3282)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:3284)
                IdentifierType: names=['Msp430TimerCapComP__6__cc_t'] (at None)
        ExprList:  (at pp.c:3287)
          Assignment: op='=' (at pp.c:3287)
            StructRef: type='.' (at pp.c:3287)
              ID: name='f' (at pp.c:3287)
            ID: name='x' (at pp.c:3287)
      Return:  (at pp.c:3290)
        StructRef: type='.' (at pp.c:3290)
          ID: name='c' (at pp.c:3290)
          ID: name='t' (at pp.c:3290)
  FuncDef:  (at pp.c:3294)
    Decl: name='Msp430TimerCapComP__6__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:3294)
      FuncDecl: quals=None (at pp.c:3294)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Control__getControl', quals=[] (at pp.c:3294)
          IdentifierType: names=['Msp430TimerCapComP__6__cc_t'] (at None)
    Compound:  (at pp.c:3295)
      Return:  (at pp.c:3296)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__6__int2CC' (at pp.c:3296)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:3296)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='392U' (at pp.c:3296)
  FuncDef:  (at pp.c:3300)
    Decl: name='Msp430TimerCapComP__6__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:3300)
      FuncDecl: quals=None (at pp.c:3300)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Event__fired', quals=[] (at pp.c:3300)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3301)
      If:  (at pp.c:3302)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__6__Control__getControl' (at pp.c:3302)
          ID: name='cap' (at pp.c:3302)
        Compound:  (at pp.c:3302)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__6__Capture__captured' (at pp.c:3303)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__6__Capture__getEvent' (at pp.c:3303)
        Compound:  (at pp.c:3305)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__6__Compare__fired' (at pp.c:3307)
  FuncDef:  (at pp.c:3314)
    Decl: name='Msp430TimerCapComP__7__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:3314)
      FuncDecl: quals=None (at pp.c:3314)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Compare__default__fired', quals=[] (at pp.c:3314)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3315)
  FuncDef:  (at pp.c:3319)
    Decl: name='Msp430TimerCapComP__7__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:3319)
      FuncDecl: quals=None (at pp.c:3319)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Compare__fired', quals=[] (at pp.c:3319)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3319)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__7__Compare__default__fired' (at pp.c:3321)
  FuncDef:  (at pp.c:3326)
    Decl: name='Msp430TimerCapComP__7__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:3326)
      FuncDecl: quals=None (at pp.c:3326)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Capture__getEvent', quals=[] (at pp.c:3326)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:3327)
      Return:  (at pp.c:3328)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:3328)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='410U' (at pp.c:3328)
  FuncDef:  (at pp.c:3332)
    Decl: name='Msp430TimerCapComP__7__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:3332)
      FuncDecl: quals=None (at pp.c:3332)
        ParamList:  (at pp.c:3332)
          Decl: name='n', quals=[], storage=[] (at pp.c:3332)
            TypeDecl: declname='n', quals=[] (at pp.c:3332)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Capture__default__captured', quals=[] (at pp.c:3332)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3333)
  FuncDef:  (at pp.c:3337)
    Decl: name='Msp430TimerCapComP__7__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:3337)
      FuncDecl: quals=None (at pp.c:3337)
        ParamList:  (at pp.c:3337)
          Decl: name='time', quals=[], storage=[] (at pp.c:3337)
            TypeDecl: declname='time', quals=[] (at pp.c:3337)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Capture__captured', quals=[] (at pp.c:3337)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3337)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__7__Capture__default__captured' (at pp.c:3339)
        ExprList:  (at pp.c:3339)
          ID: name='time' (at pp.c:3339)
  FuncDef:  (at pp.c:3344)
    Decl: name='Msp430TimerCapComP__7__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:3344)
      FuncDecl: quals=None (at pp.c:3344)
        ParamList:  (at pp.c:3344)
          Decl: name='x', quals=[], storage=[] (at pp.c:3344)
            TypeDecl: declname='x', quals=[] (at pp.c:3344)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__int2CC', quals=[] (at pp.c:3344)
          IdentifierType: names=['Msp430TimerCapComP__7__cc_t'] (at None)
    Compound:  (at pp.c:3346)
      Decl: name='c', quals=[], storage=[] (at pp.c:3355)
        TypeDecl: declname='c', quals=[] (at pp.c:3355)
          Union: name='Msp430TimerCapComP__7____nesc_unnamed4283', packed=False (at pp.c:3348)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:3350)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:3352)
                IdentifierType: names=['Msp430TimerCapComP__7__cc_t'] (at None)
        ExprList:  (at pp.c:3355)
          Assignment: op='=' (at pp.c:3355)
            StructRef: type='.' (at pp.c:3355)
              ID: name='f' (at pp.c:3355)
            ID: name='x' (at pp.c:3355)
      Return:  (at pp.c:3358)
        StructRef: type='.' (at pp.c:3358)
          ID: name='c' (at pp.c:3358)
          ID: name='t' (at pp.c:3358)
  FuncDef:  (at pp.c:3362)
    Decl: name='Msp430TimerCapComP__7__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:3362)
      FuncDecl: quals=None (at pp.c:3362)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Control__getControl', quals=[] (at pp.c:3362)
          IdentifierType: names=['Msp430TimerCapComP__7__cc_t'] (at None)
    Compound:  (at pp.c:3363)
      Return:  (at pp.c:3364)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__7__int2CC' (at pp.c:3364)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:3364)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='394U' (at pp.c:3364)
  FuncDef:  (at pp.c:3368)
    Decl: name='Msp430TimerCapComP__7__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:3368)
      FuncDecl: quals=None (at pp.c:3368)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Event__fired', quals=[] (at pp.c:3368)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3369)
      If:  (at pp.c:3370)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__7__Control__getControl' (at pp.c:3370)
          ID: name='cap' (at pp.c:3370)
        Compound:  (at pp.c:3370)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__7__Capture__captured' (at pp.c:3371)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__7__Capture__getEvent' (at pp.c:3371)
        Compound:  (at pp.c:3373)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__7__Compare__fired' (at pp.c:3375)
  FuncDef:  (at pp.c:3382)
    Decl: name='Msp430TimerCapComP__8__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:3382)
      FuncDecl: quals=None (at pp.c:3382)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Compare__default__fired', quals=[] (at pp.c:3382)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3383)
  FuncDef:  (at pp.c:3387)
    Decl: name='Msp430TimerCapComP__8__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:3387)
      FuncDecl: quals=None (at pp.c:3387)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Compare__fired', quals=[] (at pp.c:3387)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3387)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__8__Compare__default__fired' (at pp.c:3389)
  FuncDef:  (at pp.c:3394)
    Decl: name='Msp430TimerCapComP__8__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:3394)
      FuncDecl: quals=None (at pp.c:3394)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Capture__getEvent', quals=[] (at pp.c:3394)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:3395)
      Return:  (at pp.c:3396)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:3396)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='412U' (at pp.c:3396)
  FuncDef:  (at pp.c:3400)
    Decl: name='Msp430TimerCapComP__8__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:3400)
      FuncDecl: quals=None (at pp.c:3400)
        ParamList:  (at pp.c:3400)
          Decl: name='n', quals=[], storage=[] (at pp.c:3400)
            TypeDecl: declname='n', quals=[] (at pp.c:3400)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Capture__default__captured', quals=[] (at pp.c:3400)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3401)
  FuncDef:  (at pp.c:3405)
    Decl: name='Msp430TimerCapComP__8__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:3405)
      FuncDecl: quals=None (at pp.c:3405)
        ParamList:  (at pp.c:3405)
          Decl: name='time', quals=[], storage=[] (at pp.c:3405)
            TypeDecl: declname='time', quals=[] (at pp.c:3405)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Capture__captured', quals=[] (at pp.c:3405)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3405)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__8__Capture__default__captured' (at pp.c:3407)
        ExprList:  (at pp.c:3407)
          ID: name='time' (at pp.c:3407)
  FuncDef:  (at pp.c:3412)
    Decl: name='Msp430TimerCapComP__8__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:3412)
      FuncDecl: quals=None (at pp.c:3412)
        ParamList:  (at pp.c:3412)
          Decl: name='x', quals=[], storage=[] (at pp.c:3412)
            TypeDecl: declname='x', quals=[] (at pp.c:3412)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__int2CC', quals=[] (at pp.c:3412)
          IdentifierType: names=['Msp430TimerCapComP__8__cc_t'] (at None)
    Compound:  (at pp.c:3414)
      Decl: name='c', quals=[], storage=[] (at pp.c:3423)
        TypeDecl: declname='c', quals=[] (at pp.c:3423)
          Union: name='Msp430TimerCapComP__8____nesc_unnamed4284', packed=False (at pp.c:3416)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:3418)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:3420)
                IdentifierType: names=['Msp430TimerCapComP__8__cc_t'] (at None)
        ExprList:  (at pp.c:3423)
          Assignment: op='=' (at pp.c:3423)
            StructRef: type='.' (at pp.c:3423)
              ID: name='f' (at pp.c:3423)
            ID: name='x' (at pp.c:3423)
      Return:  (at pp.c:3426)
        StructRef: type='.' (at pp.c:3426)
          ID: name='c' (at pp.c:3426)
          ID: name='t' (at pp.c:3426)
  FuncDef:  (at pp.c:3430)
    Decl: name='Msp430TimerCapComP__8__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:3430)
      FuncDecl: quals=None (at pp.c:3430)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Control__getControl', quals=[] (at pp.c:3430)
          IdentifierType: names=['Msp430TimerCapComP__8__cc_t'] (at None)
    Compound:  (at pp.c:3431)
      Return:  (at pp.c:3432)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__8__int2CC' (at pp.c:3432)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:3432)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='396U' (at pp.c:3432)
  FuncDef:  (at pp.c:3436)
    Decl: name='Msp430TimerCapComP__8__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:3436)
      FuncDecl: quals=None (at pp.c:3436)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Event__fired', quals=[] (at pp.c:3436)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3437)
      If:  (at pp.c:3438)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__8__Control__getControl' (at pp.c:3438)
          ID: name='cap' (at pp.c:3438)
        Compound:  (at pp.c:3438)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__8__Capture__captured' (at pp.c:3439)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__8__Capture__getEvent' (at pp.c:3439)
        Compound:  (at pp.c:3441)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__8__Compare__fired' (at pp.c:3443)
  FuncDef:  (at pp.c:3450)
    Decl: name='Msp430TimerCapComP__9__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:3450)
      FuncDecl: quals=None (at pp.c:3450)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Compare__default__fired', quals=[] (at pp.c:3450)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3451)
  FuncDef:  (at pp.c:3455)
    Decl: name='Msp430TimerCapComP__9__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:3455)
      FuncDecl: quals=None (at pp.c:3455)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Compare__fired', quals=[] (at pp.c:3455)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3455)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__9__Compare__default__fired' (at pp.c:3457)
  FuncDef:  (at pp.c:3462)
    Decl: name='Msp430TimerCapComP__9__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:3462)
      FuncDecl: quals=None (at pp.c:3462)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Capture__getEvent', quals=[] (at pp.c:3462)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:3463)
      Return:  (at pp.c:3464)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:3464)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='414U' (at pp.c:3464)
  FuncDef:  (at pp.c:3468)
    Decl: name='Msp430TimerCapComP__9__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:3468)
      FuncDecl: quals=None (at pp.c:3468)
        ParamList:  (at pp.c:3468)
          Decl: name='n', quals=[], storage=[] (at pp.c:3468)
            TypeDecl: declname='n', quals=[] (at pp.c:3468)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Capture__default__captured', quals=[] (at pp.c:3468)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3469)
  FuncDef:  (at pp.c:3473)
    Decl: name='Msp430TimerCapComP__9__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:3473)
      FuncDecl: quals=None (at pp.c:3473)
        ParamList:  (at pp.c:3473)
          Decl: name='time', quals=[], storage=[] (at pp.c:3473)
            TypeDecl: declname='time', quals=[] (at pp.c:3473)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Capture__captured', quals=[] (at pp.c:3473)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3473)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__9__Capture__default__captured' (at pp.c:3475)
        ExprList:  (at pp.c:3475)
          ID: name='time' (at pp.c:3475)
  FuncDef:  (at pp.c:3480)
    Decl: name='Msp430TimerCapComP__9__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:3480)
      FuncDecl: quals=None (at pp.c:3480)
        ParamList:  (at pp.c:3480)
          Decl: name='x', quals=[], storage=[] (at pp.c:3480)
            TypeDecl: declname='x', quals=[] (at pp.c:3480)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__int2CC', quals=[] (at pp.c:3480)
          IdentifierType: names=['Msp430TimerCapComP__9__cc_t'] (at None)
    Compound:  (at pp.c:3482)
      Decl: name='c', quals=[], storage=[] (at pp.c:3491)
        TypeDecl: declname='c', quals=[] (at pp.c:3491)
          Union: name='Msp430TimerCapComP__9____nesc_unnamed4285', packed=False (at pp.c:3484)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:3486)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:3488)
                IdentifierType: names=['Msp430TimerCapComP__9__cc_t'] (at None)
        ExprList:  (at pp.c:3491)
          Assignment: op='=' (at pp.c:3491)
            StructRef: type='.' (at pp.c:3491)
              ID: name='f' (at pp.c:3491)
            ID: name='x' (at pp.c:3491)
      Return:  (at pp.c:3494)
        StructRef: type='.' (at pp.c:3494)
          ID: name='c' (at pp.c:3494)
          ID: name='t' (at pp.c:3494)
  FuncDef:  (at pp.c:3498)
    Decl: name='Msp430TimerCapComP__9__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:3498)
      FuncDecl: quals=None (at pp.c:3498)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Control__getControl', quals=[] (at pp.c:3498)
          IdentifierType: names=['Msp430TimerCapComP__9__cc_t'] (at None)
    Compound:  (at pp.c:3499)
      Return:  (at pp.c:3500)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__9__int2CC' (at pp.c:3500)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:3500)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='398U' (at pp.c:3500)
  FuncDef:  (at pp.c:3504)
    Decl: name='Msp430TimerCapComP__9__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:3504)
      FuncDecl: quals=None (at pp.c:3504)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Event__fired', quals=[] (at pp.c:3504)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3505)
      If:  (at pp.c:3506)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__9__Control__getControl' (at pp.c:3506)
          ID: name='cap' (at pp.c:3506)
        Compound:  (at pp.c:3506)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__9__Capture__captured' (at pp.c:3507)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__9__Capture__getEvent' (at pp.c:3507)
        Compound:  (at pp.c:3509)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__9__Compare__fired' (at pp.c:3511)
  FuncDef:  (at pp.c:3516)
    Decl: name='Msp430TimerP__1__VectorTimerX1__fired', quals=[], storage=['inline', 'static'] (at pp.c:3516)
      FuncDecl: quals=None (at pp.c:3516)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__VectorTimerX1__fired', quals=[] (at pp.c:3516)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3517)
      Decl: name='n', quals=[], storage=[] (at pp.c:3518)
        TypeDecl: declname='n', quals=[] (at pp.c:3518)
          IdentifierType: names=['uint8_t'] (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:3518)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='286U' (at pp.c:3518)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__1__Event__fired' (at pp.c:3521)
        ExprList:  (at pp.c:3521)
          BinaryOp: op='>>' (at pp.c:3521)
            ID: name='n' (at pp.c:3521)
            Constant: type='int', value='1' (at pp.c:3521)
  FuncDef:  (at pp.c:3525)
    Decl: name='Msp430TimerCommonP__VectorTimerB1__fired', quals=[], storage=['static', 'inline'] (at pp.c:3525)
      FuncDecl: quals=None (at pp.c:3525)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCommonP__VectorTimerB1__fired', quals=[] (at pp.c:3525)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3525)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__1__VectorTimerX1__fired' (at pp.c:3527)
  FuncDef:  (at pp.c:3532)
    Decl: name='SchedulerBasicP__Scheduler__init', quals=[], storage=['inline', 'static'] (at pp.c:3532)
      FuncDecl: quals=None (at pp.c:3532)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SchedulerBasicP__Scheduler__init', quals=[] (at pp.c:3532)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3533)
      Compound:  (at pp.c:3535)
        FuncCall:  (at None)
          ID: name='memset' (at pp.c:3536)
          ExprList:  (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                PtrDecl: quals=[] (at pp.c:3536)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['void'] (at None)
              ID: name='SchedulerBasicP__m_next' (at pp.c:3536)
            ID: name='SchedulerBasicP__NO_TASK' (at pp.c:3536)
            UnaryOp: op='sizeof' (at pp.c:3536)
              ID: name='SchedulerBasicP__m_next' (at pp.c:3536)
        Assignment: op='=' (at pp.c:3537)
          ID: name='SchedulerBasicP__m_head' (at pp.c:3537)
          ID: name='SchedulerBasicP__NO_TASK' (at pp.c:3537)
        Assignment: op='=' (at pp.c:3538)
          ID: name='SchedulerBasicP__m_tail' (at pp.c:3538)
          ID: name='SchedulerBasicP__NO_TASK' (at pp.c:3538)
  FuncDef:  (at pp.c:3543)
    Decl: name='RealMainP__Scheduler__init', quals=[], storage=['static', 'inline'] (at pp.c:3543)
      FuncDecl: quals=None (at pp.c:3543)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__Scheduler__init', quals=[] (at pp.c:3543)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3543)
      FuncCall:  (at None)
        ID: name='SchedulerBasicP__Scheduler__init' (at pp.c:3545)
  FuncDef:  (at pp.c:3550)
    Decl: name='HplMsp430GeneralIOP__31__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:3550)
      FuncDecl: quals=None (at pp.c:3550)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__31__IO__set', quals=[] (at pp.c:3550)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3552)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:3555)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='29U' (at pp.c:3555)
        BinaryOp: op='<<' (at pp.c:3555)
          Constant: type='int', value='0x01' (at pp.c:3555)
          Constant: type='int', value='7' (at pp.c:3555)
  FuncDef:  (at pp.c:3559)
    Decl: name='Msp430GpioC__2__HplGeneralIO__set', quals=[], storage=['static', 'inline'] (at pp.c:3559)
      FuncDecl: quals=None (at pp.c:3559)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__2__HplGeneralIO__set', quals=[] (at pp.c:3559)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3559)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__31__IO__set' (at pp.c:3561)
  FuncDef:  (at pp.c:3566)
    Decl: name='Msp430GpioC__2__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:3566)
      FuncDecl: quals=None (at pp.c:3566)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__2__GeneralIO__set', quals=[] (at pp.c:3566)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3568)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__2__HplGeneralIO__set' (at pp.c:3570)
  FuncDef:  (at pp.c:3574)
    Decl: name='LedsP__Led2__set', quals=[], storage=['static', 'inline'] (at pp.c:3574)
      FuncDecl: quals=None (at pp.c:3574)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led2__set', quals=[] (at pp.c:3574)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3574)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__2__GeneralIO__set' (at pp.c:3576)
  FuncDef:  (at pp.c:3581)
    Decl: name='HplMsp430GeneralIOP__27__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:3581)
      FuncDecl: quals=None (at pp.c:3581)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__27__IO__set', quals=[] (at pp.c:3581)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3583)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:3586)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='29U' (at pp.c:3586)
        BinaryOp: op='<<' (at pp.c:3586)
          Constant: type='int', value='0x01' (at pp.c:3586)
          Constant: type='int', value='3' (at pp.c:3586)
  FuncDef:  (at pp.c:3590)
    Decl: name='Msp430GpioC__1__HplGeneralIO__set', quals=[], storage=['static', 'inline'] (at pp.c:3590)
      FuncDecl: quals=None (at pp.c:3590)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__set', quals=[] (at pp.c:3590)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3590)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__27__IO__set' (at pp.c:3592)
  FuncDef:  (at pp.c:3597)
    Decl: name='Msp430GpioC__1__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:3597)
      FuncDecl: quals=None (at pp.c:3597)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__GeneralIO__set', quals=[] (at pp.c:3597)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3599)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__HplGeneralIO__set' (at pp.c:3601)
  FuncDef:  (at pp.c:3605)
    Decl: name='LedsP__Led1__set', quals=[], storage=['static', 'inline'] (at pp.c:3605)
      FuncDecl: quals=None (at pp.c:3605)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led1__set', quals=[] (at pp.c:3605)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3605)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__GeneralIO__set' (at pp.c:3607)
  FuncDef:  (at pp.c:3612)
    Decl: name='HplMsp430GeneralIOP__24__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:3612)
      FuncDecl: quals=None (at pp.c:3612)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__24__IO__set', quals=[] (at pp.c:3612)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3614)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:3617)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='29U' (at pp.c:3617)
        BinaryOp: op='<<' (at pp.c:3617)
          Constant: type='int', value='0x01' (at pp.c:3617)
          Constant: type='int', value='0' (at pp.c:3617)
  FuncDef:  (at pp.c:3621)
    Decl: name='Msp430GpioC__0__HplGeneralIO__set', quals=[], storage=['static', 'inline'] (at pp.c:3621)
      FuncDecl: quals=None (at pp.c:3621)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__set', quals=[] (at pp.c:3621)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3621)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__24__IO__set' (at pp.c:3623)
  FuncDef:  (at pp.c:3628)
    Decl: name='Msp430GpioC__0__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:3628)
      FuncDecl: quals=None (at pp.c:3628)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__GeneralIO__set', quals=[] (at pp.c:3628)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3630)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__0__HplGeneralIO__set' (at pp.c:3632)
  FuncDef:  (at pp.c:3636)
    Decl: name='LedsP__Led0__set', quals=[], storage=['static', 'inline'] (at pp.c:3636)
      FuncDecl: quals=None (at pp.c:3636)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led0__set', quals=[] (at pp.c:3636)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3636)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__0__GeneralIO__set' (at pp.c:3638)
  FuncDef:  (at pp.c:3643)
    Decl: name='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:3643)
      FuncDecl: quals=None (at pp.c:3643)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[] (at pp.c:3643)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3645)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:3648)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='30U' (at pp.c:3648)
        BinaryOp: op='<<' (at pp.c:3648)
          Constant: type='int', value='0x01' (at pp.c:3648)
          Constant: type='int', value='7' (at pp.c:3648)
  FuncDef:  (at pp.c:3652)
    Decl: name='Msp430GpioC__2__HplGeneralIO__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:3652)
      FuncDecl: quals=None (at pp.c:3652)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__2__HplGeneralIO__makeOutput', quals=[] (at pp.c:3652)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3652)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__31__IO__makeOutput' (at pp.c:3654)
  FuncDef:  (at pp.c:3659)
    Decl: name='Msp430GpioC__2__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:3659)
      FuncDecl: quals=None (at pp.c:3659)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__2__GeneralIO__makeOutput', quals=[] (at pp.c:3659)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3661)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__2__HplGeneralIO__makeOutput' (at pp.c:3663)
  FuncDef:  (at pp.c:3667)
    Decl: name='LedsP__Led2__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:3667)
      FuncDecl: quals=None (at pp.c:3667)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led2__makeOutput', quals=[] (at pp.c:3667)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3667)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__2__GeneralIO__makeOutput' (at pp.c:3669)
  FuncDef:  (at pp.c:3674)
    Decl: name='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:3674)
      FuncDecl: quals=None (at pp.c:3674)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[] (at pp.c:3674)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3676)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:3679)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='30U' (at pp.c:3679)
        BinaryOp: op='<<' (at pp.c:3679)
          Constant: type='int', value='0x01' (at pp.c:3679)
          Constant: type='int', value='3' (at pp.c:3679)
  FuncDef:  (at pp.c:3683)
    Decl: name='Msp430GpioC__1__HplGeneralIO__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:3683)
      FuncDecl: quals=None (at pp.c:3683)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__makeOutput', quals=[] (at pp.c:3683)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3683)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__27__IO__makeOutput' (at pp.c:3685)
  FuncDef:  (at pp.c:3690)
    Decl: name='Msp430GpioC__1__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:3690)
      FuncDecl: quals=None (at pp.c:3690)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__GeneralIO__makeOutput', quals=[] (at pp.c:3690)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3692)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__HplGeneralIO__makeOutput' (at pp.c:3694)
  FuncDef:  (at pp.c:3698)
    Decl: name='LedsP__Led1__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:3698)
      FuncDecl: quals=None (at pp.c:3698)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led1__makeOutput', quals=[] (at pp.c:3698)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3698)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__GeneralIO__makeOutput' (at pp.c:3700)
  FuncDef:  (at pp.c:3705)
    Decl: name='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:3705)
      FuncDecl: quals=None (at pp.c:3705)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[] (at pp.c:3705)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3707)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:3710)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='30U' (at pp.c:3710)
        BinaryOp: op='<<' (at pp.c:3710)
          Constant: type='int', value='0x01' (at pp.c:3710)
          Constant: type='int', value='0' (at pp.c:3710)
  FuncDef:  (at pp.c:3714)
    Decl: name='Msp430GpioC__0__HplGeneralIO__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:3714)
      FuncDecl: quals=None (at pp.c:3714)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__makeOutput', quals=[] (at pp.c:3714)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3714)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__24__IO__makeOutput' (at pp.c:3716)
  FuncDef:  (at pp.c:3721)
    Decl: name='Msp430GpioC__0__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:3721)
      FuncDecl: quals=None (at pp.c:3721)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__GeneralIO__makeOutput', quals=[] (at pp.c:3721)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3723)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__0__HplGeneralIO__makeOutput' (at pp.c:3725)
  FuncDef:  (at pp.c:3729)
    Decl: name='LedsP__Led0__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:3729)
      FuncDecl: quals=None (at pp.c:3729)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led0__makeOutput', quals=[] (at pp.c:3729)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3729)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__0__GeneralIO__makeOutput' (at pp.c:3731)
  FuncDef:  (at pp.c:3736)
    Decl: name='LedsP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:3736)
      FuncDecl: quals=None (at pp.c:3736)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Init__init', quals=[] (at pp.c:3736)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:3738)
      Compound:  (at pp.c:3741)
        FuncCall:  (at None)
          ID: name='LedsP__Led0__makeOutput' (at pp.c:3743)
        FuncCall:  (at None)
          ID: name='LedsP__Led1__makeOutput' (at pp.c:3744)
        FuncCall:  (at None)
          ID: name='LedsP__Led2__makeOutput' (at pp.c:3745)
        FuncCall:  (at None)
          ID: name='LedsP__Led0__set' (at pp.c:3746)
        FuncCall:  (at None)
          ID: name='LedsP__Led1__set' (at pp.c:3747)
        FuncCall:  (at None)
          ID: name='LedsP__Led2__set' (at pp.c:3748)
      Return:  (at pp.c:3750)
        ID: name='SUCCESS' (at pp.c:3750)
  FuncDef:  (at pp.c:3754)
    Decl: name='PlatformP__LedsInit__init', quals=[], storage=['static', 'inline'] (at pp.c:3754)
      FuncDecl: quals=None (at pp.c:3754)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='PlatformP__LedsInit__init', quals=[] (at pp.c:3754)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:3754)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:3756)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:3756)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:3760)
        ID: name='__nesc_result' (at pp.c:3760)
        FuncCall:  (at None)
          ID: name='LedsP__Init__init' (at pp.c:3760)
      Return:  (at pp.c:3764)
        ID: name='__nesc_result' (at pp.c:3764)
  FuncDef:  (at pp.c:3769)
    Decl: name='MotePlatformC__SubInit__default__init', quals=[], storage=['inline', 'static'] (at pp.c:3769)
      FuncDecl: quals=None (at pp.c:3769)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='MotePlatformC__SubInit__default__init', quals=[] (at pp.c:3769)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:3771)
      Return:  (at pp.c:3773)
        ID: name='SUCCESS' (at pp.c:3773)
  FuncDef:  (at pp.c:3777)
    Decl: name='MotePlatformC__SubInit__init', quals=[], storage=['static', 'inline'] (at pp.c:3777)
      FuncDecl: quals=None (at pp.c:3777)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='MotePlatformC__SubInit__init', quals=[] (at pp.c:3777)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:3777)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:3779)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:3779)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:3783)
        ID: name='__nesc_result' (at pp.c:3783)
        FuncCall:  (at None)
          ID: name='MotePlatformC__SubInit__default__init' (at pp.c:3783)
      Return:  (at pp.c:3787)
        ID: name='__nesc_result' (at pp.c:3787)
  FuncDef:  (at pp.c:3792)
    Decl: name='MotePlatformC__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:3792)
      FuncDecl: quals=None (at pp.c:3792)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='MotePlatformC__Init__init', quals=[] (at pp.c:3792)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:3794)
      Compound:  (at pp.c:3797)
        Assignment: op='=' (at pp.c:3798)
          ID: name='P1SEL' (at pp.c:3798)
          Constant: type='int', value='0' (at pp.c:3798)
        Assignment: op='=' (at pp.c:3799)
          ID: name='P2SEL' (at pp.c:3799)
          Constant: type='int', value='0' (at pp.c:3799)
        Assignment: op='=' (at pp.c:3800)
          ID: name='P3SEL' (at pp.c:3800)
          Constant: type='int', value='0' (at pp.c:3800)
        Assignment: op='=' (at pp.c:3801)
          ID: name='P4SEL' (at pp.c:3801)
          Constant: type='int', value='0' (at pp.c:3801)
        Assignment: op='=' (at pp.c:3802)
          ID: name='P5SEL' (at pp.c:3802)
          Constant: type='int', value='0' (at pp.c:3802)
        Assignment: op='=' (at pp.c:3803)
          ID: name='P6SEL' (at pp.c:3803)
          Constant: type='int', value='0' (at pp.c:3803)
        Assignment: op='=' (at pp.c:3805)
          ID: name='P1OUT' (at pp.c:3805)
          Constant: type='int', value='0x00' (at pp.c:3805)
        Assignment: op='=' (at pp.c:3806)
          ID: name='P1DIR' (at pp.c:3806)
          Constant: type='int', value='0xe0' (at pp.c:3806)
        Assignment: op='=' (at pp.c:3808)
          ID: name='P2OUT' (at pp.c:3808)
          Constant: type='int', value='0x30' (at pp.c:3808)
        Assignment: op='=' (at pp.c:3809)
          ID: name='P2DIR' (at pp.c:3809)
          Constant: type='int', value='0x7b' (at pp.c:3809)
        Assignment: op='=' (at pp.c:3811)
          ID: name='P3OUT' (at pp.c:3811)
          Constant: type='int', value='0x00' (at pp.c:3811)
        Assignment: op='=' (at pp.c:3812)
          ID: name='P3DIR' (at pp.c:3812)
          Constant: type='int', value='0xf1' (at pp.c:3812)
        Assignment: op='=' (at pp.c:3814)
          ID: name='P4OUT' (at pp.c:3814)
          Constant: type='int', value='0xdd' (at pp.c:3814)
        Assignment: op='=' (at pp.c:3815)
          ID: name='P4DIR' (at pp.c:3815)
          Constant: type='int', value='0xfd' (at pp.c:3815)
        Assignment: op='=' (at pp.c:3817)
          ID: name='P5OUT' (at pp.c:3817)
          Constant: type='int', value='0xff' (at pp.c:3817)
        Assignment: op='=' (at pp.c:3818)
          ID: name='P5DIR' (at pp.c:3818)
          Constant: type='int', value='0xff' (at pp.c:3818)
        Assignment: op='=' (at pp.c:3820)
          ID: name='P6OUT' (at pp.c:3820)
          Constant: type='int', value='0x00' (at pp.c:3820)
        Assignment: op='=' (at pp.c:3821)
          ID: name='P6DIR' (at pp.c:3821)
          Constant: type='int', value='0xff' (at pp.c:3821)
        Assignment: op='=' (at pp.c:3823)
          ID: name='P1IE' (at pp.c:3823)
          Constant: type='int', value='0' (at pp.c:3823)
        Assignment: op='=' (at pp.c:3824)
          ID: name='P2IE' (at pp.c:3824)
          Constant: type='int', value='0' (at pp.c:3824)
      Return:  (at pp.c:3831)
        FuncCall:  (at None)
          ID: name='MotePlatformC__SubInit__init' (at pp.c:3831)
  FuncDef:  (at pp.c:3835)
    Decl: name='PlatformP__MoteInit__init', quals=[], storage=['static', 'inline'] (at pp.c:3835)
      FuncDecl: quals=None (at pp.c:3835)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='PlatformP__MoteInit__init', quals=[] (at pp.c:3835)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:3835)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:3837)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:3837)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:3841)
        ID: name='__nesc_result' (at pp.c:3841)
        FuncCall:  (at None)
          ID: name='MotePlatformC__Init__init' (at pp.c:3841)
      Return:  (at pp.c:3845)
        ID: name='__nesc_result' (at pp.c:3845)
  FuncDef:  (at pp.c:3850)
    Decl: name='Msp430ClockP__startTimerB', quals=[], storage=['inline', 'static'] (at pp.c:3850)
      FuncDecl: quals=None (at pp.c:3850)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__startTimerB', quals=[] (at pp.c:3850)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3851)
      Assignment: op='=' (at pp.c:3853)
        ID: name='Msp430ClockP__TBCTL' (at pp.c:3853)
        BinaryOp: op='|' (at pp.c:3853)
          Constant: type='int', value='0x0020' (at pp.c:3853)
          BinaryOp: op='&' (at pp.c:3853)
            ID: name='Msp430ClockP__TBCTL' (at pp.c:3853)
            UnaryOp: op='~' (at pp.c:3853)
              BinaryOp: op='|' (at pp.c:3853)
                Constant: type='int', value='0x0020' (at pp.c:3853)
                Constant: type='int', value='0x0010' (at pp.c:3853)
  FuncDef:  (at pp.c:3857)
    Decl: name='Msp430ClockP__startTimerA', quals=[], storage=['inline', 'static'] (at pp.c:3857)
      FuncDecl: quals=None (at pp.c:3857)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__startTimerA', quals=[] (at pp.c:3857)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3858)
      Assignment: op='=' (at pp.c:3860)
        ID: name='Msp430ClockP__TA0CTL' (at pp.c:3860)
        BinaryOp: op='|' (at pp.c:3860)
          Constant: type='int', value='0x0020' (at pp.c:3860)
          BinaryOp: op='&' (at pp.c:3860)
            ID: name='Msp430ClockP__TA0CTL' (at pp.c:3860)
            UnaryOp: op='~' (at pp.c:3860)
              BinaryOp: op='|' (at pp.c:3860)
                Constant: type='int', value='0x0020' (at pp.c:3860)
                Constant: type='int', value='0x0010' (at pp.c:3860)
  FuncDef:  (at pp.c:3864)
    Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[], storage=['inline', 'static'] (at pp.c:3864)
      FuncDecl: quals=None (at pp.c:3864)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[] (at pp.c:3864)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3865)
      Assignment: op='=' (at pp.c:3866)
        ID: name='TBR' (at pp.c:3866)
        Constant: type='int', value='0' (at pp.c:3866)
      Assignment: op='=' (at pp.c:3876)
        ID: name='Msp430ClockP__TBCTL' (at pp.c:3876)
        BinaryOp: op='|' (at pp.c:3876)
          Constant: type='int', value='0x0100' (at pp.c:3876)
          Constant: type='int', value='0x0002' (at pp.c:3876)
  FuncDef:  (at pp.c:3880)
    Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[], storage=['inline', 'static'] (at pp.c:3880)
      FuncDecl: quals=None (at pp.c:3880)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[] (at pp.c:3880)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3881)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerB' (at pp.c:3882)
  FuncDef:  (at pp.c:3886)
    Decl: name='Msp430ClockP__Msp430ClockInit__initTimerB', quals=[], storage=['static', 'inline'] (at pp.c:3886)
      FuncDecl: quals=None (at pp.c:3886)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initTimerB', quals=[] (at pp.c:3886)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3886)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__default__initTimerB' (at pp.c:3888)
  FuncDef:  (at pp.c:3893)
    Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[], storage=['inline', 'static'] (at pp.c:3893)
      FuncDecl: quals=None (at pp.c:3893)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[] (at pp.c:3893)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3894)
      Assignment: op='=' (at pp.c:3895)
        ID: name='TA0R' (at pp.c:3895)
        Constant: type='int', value='0' (at pp.c:3895)
      Assignment: op='=' (at pp.c:3905)
        ID: name='Msp430ClockP__TA0CTL' (at pp.c:3905)
        BinaryOp: op='|' (at pp.c:3905)
          Constant: type='int', value='0x0200' (at pp.c:3905)
          Constant: type='int', value='0x0002' (at pp.c:3905)
  FuncDef:  (at pp.c:3909)
    Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[], storage=['inline', 'static'] (at pp.c:3909)
      FuncDecl: quals=None (at pp.c:3909)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[] (at pp.c:3909)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3910)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerA' (at pp.c:3911)
  FuncDef:  (at pp.c:3915)
    Decl: name='Msp430ClockP__Msp430ClockInit__initTimerA', quals=[], storage=['static', 'inline'] (at pp.c:3915)
      FuncDecl: quals=None (at pp.c:3915)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initTimerA', quals=[] (at pp.c:3915)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3915)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__default__initTimerA' (at pp.c:3917)
  FuncDef:  (at pp.c:3922)
    Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[], storage=['inline', 'static'] (at pp.c:3922)
      FuncDecl: quals=None (at pp.c:3922)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[] (at pp.c:3922)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3923)
      Assignment: op='=' (at pp.c:3929)
        ID: name='BCSCTL1' (at pp.c:3929)
        BinaryOp: op='|' (at pp.c:3929)
          Constant: type='int', value='0x80' (at pp.c:3929)
          BinaryOp: op='&' (at pp.c:3929)
            ID: name='BCSCTL1' (at pp.c:3929)
            BinaryOp: op='|' (at pp.c:3929)
              BinaryOp: op='|' (at pp.c:3929)
                Constant: type='int', value='0x04' (at pp.c:3929)
                Constant: type='int', value='0x02' (at pp.c:3929)
              Constant: type='int', value='0x01' (at pp.c:3929)
      Assignment: op='=' (at pp.c:3937)
        ID: name='BCSCTL2' (at pp.c:3937)
        Constant: type='int', value='0x04' (at pp.c:3937)
      Assignment: op='&=' (at pp.c:3940)
        ID: name='Msp430ClockP__IE1' (at pp.c:3940)
        UnaryOp: op='~' (at pp.c:3940)
          BinaryOp: op='<<' (at pp.c:3940)
            Constant: type='int', value='1' (at pp.c:3940)
            Constant: type='int', value='1' (at pp.c:3940)
  FuncDef:  (at pp.c:3944)
    Decl: name='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[], storage=['inline', 'static'] (at pp.c:3944)
      FuncDecl: quals=None (at pp.c:3944)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[] (at pp.c:3944)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3945)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__defaultInitClocks' (at pp.c:3946)
  FuncDef:  (at pp.c:3950)
    Decl: name='Msp430ClockP__Msp430ClockInit__initClocks', quals=[], storage=['static', 'inline'] (at pp.c:3950)
      FuncDecl: quals=None (at pp.c:3950)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initClocks', quals=[] (at pp.c:3950)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3950)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__default__initClocks' (at pp.c:3952)
  FuncDef:  (at pp.c:3957)
    Decl: name='Msp430ClockP__test_calib_busywait_delta', quals=[], storage=['inline', 'static'] (at pp.c:3957)
      FuncDecl: quals=None (at pp.c:3957)
        ParamList:  (at pp.c:3957)
          Decl: name='calib', quals=[], storage=[] (at pp.c:3957)
            TypeDecl: declname='calib', quals=[] (at pp.c:3957)
              IdentifierType: names=['int'] (at None)
        TypeDecl: declname='Msp430ClockP__test_calib_busywait_delta', quals=[] (at pp.c:3957)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:3958)
      Decl: name='aclk_count', quals=[], storage=[] (at pp.c:3959)
        TypeDecl: declname='aclk_count', quals=[] (at pp.c:3959)
          IdentifierType: names=['int8_t'] (at None)
        Constant: type='int', value='2' (at pp.c:3959)
      Decl: name='dco_prev', quals=[], storage=[] (at pp.c:3960)
        TypeDecl: declname='dco_prev', quals=[] (at pp.c:3960)
          IdentifierType: names=['uint16_t'] (at None)
        Constant: type='int', value='0' (at pp.c:3960)
      Decl: name='dco_curr', quals=[], storage=[] (at pp.c:3961)
        TypeDecl: declname='dco_curr', quals=[] (at pp.c:3961)
          IdentifierType: names=['uint16_t'] (at None)
        Constant: type='int', value='0' (at pp.c:3961)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__set_dco_calib' (at pp.c:3963)
        ExprList:  (at pp.c:3963)
          ID: name='calib' (at pp.c:3963)
      While:  (at pp.c:3965)
        BinaryOp: op='>' (at pp.c:3965)
          UnaryOp: op='p--' (at pp.c:3965)
            ID: name='aclk_count' (at pp.c:3965)
          Constant: type='int', value='0' (at pp.c:3965)
        Compound:  (at pp.c:3966)
          Assignment: op='=' (at pp.c:3967)
            ID: name='TBCCR0' (at pp.c:3967)
            BinaryOp: op='+' (at pp.c:3967)
              ID: name='TBR' (at pp.c:3967)
              ID: name='Msp430ClockP__ACLK_CALIB_PERIOD' (at pp.c:3967)
          Assignment: op='&=' (at pp.c:3968)
            ID: name='TBCCTL0' (at pp.c:3968)
            UnaryOp: op='~' (at pp.c:3968)
              Constant: type='int', value='0x0001' (at pp.c:3968)
          While:  (at pp.c:3969)
            BinaryOp: op='==' (at pp.c:3969)
              BinaryOp: op='&' (at pp.c:3969)
                ID: name='TBCCTL0' (at pp.c:3969)
                Constant: type='int', value='0x0001' (at pp.c:3969)
              Constant: type='int', value='0' (at pp.c:3969)
          Assignment: op='=' (at pp.c:3970)
            ID: name='dco_prev' (at pp.c:3970)
            ID: name='dco_curr' (at pp.c:3970)
          Assignment: op='=' (at pp.c:3971)
            ID: name='dco_curr' (at pp.c:3971)
            ID: name='TA0R' (at pp.c:3971)
      Return:  (at pp.c:3974)
        BinaryOp: op='-' (at pp.c:3974)
          ID: name='dco_curr' (at pp.c:3974)
          ID: name='dco_prev' (at pp.c:3974)
  FuncDef:  (at pp.c:3980)
    Decl: name='Msp430ClockP__busyCalibrateDco', quals=[], storage=['inline', 'static'] (at pp.c:3980)
      FuncDecl: quals=None (at pp.c:3980)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__busyCalibrateDco', quals=[] (at pp.c:3980)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:3981)
      Decl: name='calib', quals=[], storage=[] (at pp.c:3983)
        TypeDecl: declname='calib', quals=[] (at pp.c:3983)
          IdentifierType: names=['int'] (at None)
      Decl: name='step', quals=[], storage=[] (at pp.c:3984)
        TypeDecl: declname='step', quals=[] (at pp.c:3984)
          IdentifierType: names=['int'] (at None)
      For:  (at pp.c:3991)
        ExprList:  (at pp.c:3991)
          Assignment: op='=' (at pp.c:3991)
            ID: name='calib' (at pp.c:3991)
            Constant: type='int', value='0' (at pp.c:3991)
          Assignment: op='=' (at pp.c:3991)
            ID: name='step' (at pp.c:3991)
            Constant: type='int', value='0x800' (at pp.c:3991)
        BinaryOp: op='!=' (at pp.c:3991)
          ID: name='step' (at pp.c:3991)
          Constant: type='int', value='0' (at pp.c:3991)
        Assignment: op='>>=' (at pp.c:3991)
          ID: name='step' (at pp.c:3991)
          Constant: type='int', value='1' (at pp.c:3991)
        Compound:  (at pp.c:3992)
          If:  (at pp.c:3994)
            BinaryOp: op='<=' (at None)
              FuncCall:  (at None)
                ID: name='Msp430ClockP__test_calib_busywait_delta' (at pp.c:3994)
                ExprList:  (at pp.c:3994)
                  BinaryOp: op='|' (at pp.c:3994)
                    ID: name='calib' (at pp.c:3994)
                    ID: name='step' (at pp.c:3994)
              ID: name='Msp430ClockP__TARGET_DCO_DELTA' (at pp.c:3994)
            Compound:  (at pp.c:3994)
              Assignment: op='|=' (at pp.c:3995)
                ID: name='calib' (at pp.c:3995)
                ID: name='step' (at pp.c:3995)
      If:  (at pp.c:3999)
        BinaryOp: op='==' (at pp.c:3999)
          BinaryOp: op='&' (at pp.c:3999)
            ID: name='calib' (at pp.c:3999)
            Constant: type='int', value='0x0e0' (at pp.c:3999)
          Constant: type='int', value='0x0e0' (at pp.c:3999)
        Compound:  (at pp.c:3999)
          Assignment: op='&=' (at pp.c:4000)
            ID: name='calib' (at pp.c:4000)
            UnaryOp: op='~' (at pp.c:4000)
              Constant: type='int', value='0x01f' (at pp.c:4000)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__set_dco_calib' (at pp.c:4002)
        ExprList:  (at pp.c:4002)
          ID: name='calib' (at pp.c:4002)
  FuncDef:  (at pp.c:4006)
    Decl: name='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[], storage=['inline', 'static'] (at pp.c:4006)
      FuncDecl: quals=None (at pp.c:4006)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[] (at pp.c:4006)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4007)
      Assignment: op='=' (at pp.c:4011)
        ID: name='Msp430ClockP__TA0CTL' (at pp.c:4011)
        BinaryOp: op='|' (at pp.c:4011)
          Constant: type='int', value='0x0200' (at pp.c:4011)
          Constant: type='int', value='0x0020' (at pp.c:4011)
      Assignment: op='=' (at pp.c:4012)
        ID: name='Msp430ClockP__TBCTL' (at pp.c:4012)
        BinaryOp: op='|' (at pp.c:4012)
          Constant: type='int', value='0x0100' (at pp.c:4012)
          Constant: type='int', value='0x0020' (at pp.c:4012)
      Assignment: op='=' (at pp.c:4013)
        ID: name='BCSCTL1' (at pp.c:4013)
        BinaryOp: op='|' (at pp.c:4013)
          Constant: type='int', value='0x80' (at pp.c:4013)
          Constant: type='int', value='0x04' (at pp.c:4013)
      Assignment: op='=' (at pp.c:4014)
        ID: name='BCSCTL2' (at pp.c:4014)
        Constant: type='int', value='0' (at pp.c:4014)
      Assignment: op='=' (at pp.c:4015)
        ID: name='TBCCTL0' (at pp.c:4015)
        Constant: type='int', value='0x4000' (at pp.c:4015)
  FuncDef:  (at pp.c:4019)
    Decl: name='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[], storage=['inline', 'static'] (at pp.c:4019)
      FuncDecl: quals=None (at pp.c:4019)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[] (at pp.c:4019)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4020)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate' (at pp.c:4021)
  FuncDef:  (at pp.c:4025)
    Decl: name='Msp430ClockP__Msp430ClockInit__setupDcoCalibrate', quals=[], storage=['static', 'inline'] (at pp.c:4025)
      FuncDecl: quals=None (at pp.c:4025)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__setupDcoCalibrate', quals=[] (at pp.c:4025)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4025)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate' (at pp.c:4027)
  FuncDef:  (at pp.c:4032)
    Decl: name='Msp430ClockP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:4032)
      FuncDecl: quals=None (at pp.c:4032)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Init__init', quals=[] (at pp.c:4032)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:4033)
      Assignment: op='=' (at pp.c:4035)
        ID: name='Msp430ClockP__TA0CTL' (at pp.c:4035)
        Constant: type='int', value='0x0004' (at pp.c:4035)
      Assignment: op='=' (at pp.c:4036)
        ID: name='Msp430ClockP__TA0IV' (at pp.c:4036)
        Constant: type='int', value='0' (at pp.c:4036)
      Assignment: op='=' (at pp.c:4037)
        ID: name='Msp430ClockP__TBCTL' (at pp.c:4037)
        Constant: type='int', value='0x0004' (at pp.c:4037)
      Assignment: op='=' (at pp.c:4038)
        ID: name='Msp430ClockP__TBIV' (at pp.c:4038)
        Constant: type='int', value='0' (at pp.c:4038)
      Compound:  (at pp.c:4041)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__Msp430ClockInit__setupDcoCalibrate' (at pp.c:4042)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__busyCalibrateDco' (at pp.c:4043)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__Msp430ClockInit__initClocks' (at pp.c:4044)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__Msp430ClockInit__initTimerA' (at pp.c:4045)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__Msp430ClockInit__initTimerB' (at pp.c:4046)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__startTimerA' (at pp.c:4047)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__startTimerB' (at pp.c:4048)
      Return:  (at pp.c:4051)
        ID: name='SUCCESS' (at pp.c:4051)
  FuncDef:  (at pp.c:4055)
    Decl: name='PlatformP__MoteClockInit__init', quals=[], storage=['static', 'inline'] (at pp.c:4055)
      FuncDecl: quals=None (at pp.c:4055)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='PlatformP__MoteClockInit__init', quals=[] (at pp.c:4055)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:4055)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:4057)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:4057)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:4061)
        ID: name='__nesc_result' (at pp.c:4061)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__Init__init' (at pp.c:4061)
      Return:  (at pp.c:4065)
        ID: name='__nesc_result' (at pp.c:4065)
  FuncDef:  (at pp.c:4070)
    Decl: name='PlatformP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:4070)
      FuncDecl: quals=None (at pp.c:4070)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='PlatformP__Init__init', quals=[] (at pp.c:4070)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:4072)
      FuncCall:  (at None)
        ID: name='PlatformP__MoteClockInit__init' (at pp.c:4073)
      FuncCall:  (at None)
        ID: name='PlatformP__MoteInit__init' (at pp.c:4074)
      FuncCall:  (at None)
        ID: name='PlatformP__LedsInit__init' (at pp.c:4075)
      Return:  (at pp.c:4076)
        ID: name='SUCCESS' (at pp.c:4076)
  FuncDef:  (at pp.c:4080)
    Decl: name='RealMainP__PlatformInit__init', quals=[], storage=['static', 'inline'] (at pp.c:4080)
      FuncDecl: quals=None (at pp.c:4080)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__PlatformInit__init', quals=[] (at pp.c:4080)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:4080)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:4082)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:4082)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:4086)
        ID: name='__nesc_result' (at pp.c:4086)
        FuncCall:  (at None)
          ID: name='PlatformP__Init__init' (at pp.c:4086)
      Return:  (at pp.c:4090)
        ID: name='__nesc_result' (at pp.c:4090)
  FuncDef:  (at pp.c:4095)
    Decl: name='RealMainP__Scheduler__runNextTask', quals=[], storage=['static', 'inline'] (at pp.c:4095)
      FuncDecl: quals=None (at pp.c:4095)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__Scheduler__runNextTask', quals=[] (at pp.c:4095)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:4095)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:4097)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:4097)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:4101)
        ID: name='__nesc_result' (at pp.c:4101)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__Scheduler__runNextTask' (at pp.c:4101)
      Return:  (at pp.c:4105)
        ID: name='__nesc_result' (at pp.c:4105)
  FuncDef:  (at pp.c:4110)
    Decl: name='Msp430AlarmC__0__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:4110)
      FuncDecl: quals=None (at pp.c:4110)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Alarm__stop', quals=[] (at pp.c:4110)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4111)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430TimerControl__disableEvents' (at pp.c:4112)
  FuncDef:  (at pp.c:4116)
    Decl: name='TransformAlarmC__0__AlarmFrom__stop', quals=[], storage=['static', 'inline'] (at pp.c:4116)
      FuncDecl: quals=None (at pp.c:4116)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__AlarmFrom__stop', quals=[] (at pp.c:4116)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4116)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Alarm__stop' (at pp.c:4118)
  FuncDef:  (at pp.c:4123)
    Decl: name='TransformAlarmC__0__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:4123)
      FuncDecl: quals=None (at pp.c:4123)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Alarm__stop', quals=[] (at pp.c:4123)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4124)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__AlarmFrom__stop' (at pp.c:4125)
  FuncDef:  (at pp.c:4129)
    Decl: name='AlarmToTimerC__0__Alarm__stop', quals=[], storage=['static', 'inline'] (at pp.c:4129)
      FuncDecl: quals=None (at pp.c:4129)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Alarm__stop', quals=[] (at pp.c:4129)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4129)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__Alarm__stop' (at pp.c:4131)
  FuncDef:  (at pp.c:4136)
    Decl: name='AlarmToTimerC__0__Timer__stop', quals=[], storage=['inline', 'static'] (at pp.c:4136)
      FuncDecl: quals=None (at pp.c:4136)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Timer__stop', quals=[] (at pp.c:4136)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4137)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Alarm__stop' (at pp.c:4139)
  FuncDef:  (at pp.c:4143)
    Decl: name='VirtualizeTimerC__0__TimerFrom__stop', quals=[], storage=['static', 'inline'] (at pp.c:4143)
      FuncDecl: quals=None (at pp.c:4143)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__stop', quals=[] (at pp.c:4143)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4143)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Timer__stop' (at pp.c:4145)
  FuncDef:  (at pp.c:4150)
    Decl: name='HplMsp430GeneralIOP__24__IO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:4150)
      FuncDecl: quals=None (at pp.c:4150)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__24__IO__toggle', quals=[] (at pp.c:4150)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4152)
      Compound:  (at pp.c:4154)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:4154)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:4154)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:4154)
        Assignment: op='^=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:4156)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:4156)
          BinaryOp: op='<<' (at pp.c:4156)
            Constant: type='int', value='0x01' (at pp.c:4156)
            Constant: type='int', value='0' (at pp.c:4156)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:4158)
          ExprList:  (at pp.c:4158)
            ID: name='__nesc_atomic' (at pp.c:4158)
  FuncDef:  (at pp.c:4162)
    Decl: name='Msp430GpioC__0__HplGeneralIO__toggle', quals=[], storage=['static', 'inline'] (at pp.c:4162)
      FuncDecl: quals=None (at pp.c:4162)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__toggle', quals=[] (at pp.c:4162)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4162)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__24__IO__toggle' (at pp.c:4164)
  FuncDef:  (at pp.c:4169)
    Decl: name='Msp430GpioC__0__GeneralIO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:4169)
      FuncDecl: quals=None (at pp.c:4169)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__GeneralIO__toggle', quals=[] (at pp.c:4169)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4171)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__0__HplGeneralIO__toggle' (at pp.c:4173)
  FuncDef:  (at pp.c:4177)
    Decl: name='LedsP__Led0__toggle', quals=[], storage=['static', 'inline'] (at pp.c:4177)
      FuncDecl: quals=None (at pp.c:4177)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led0__toggle', quals=[] (at pp.c:4177)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4177)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__0__GeneralIO__toggle' (at pp.c:4179)
  FuncDef:  (at pp.c:4184)
    Decl: name='LedsP__Leds__led0Toggle', quals=[], storage=['inline', 'static'] (at pp.c:4184)
      FuncDecl: quals=None (at pp.c:4184)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Leds__led0Toggle', quals=[] (at pp.c:4184)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4186)
      FuncCall:  (at None)
        ID: name='LedsP__Led0__toggle' (at pp.c:4187)
  FuncDef:  (at pp.c:4194)
    Decl: name='BlinkC__Leds__led0Toggle', quals=[], storage=['static', 'inline'] (at pp.c:4194)
      FuncDecl: quals=None (at pp.c:4194)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BlinkC__Leds__led0Toggle', quals=[] (at pp.c:4194)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4194)
      FuncCall:  (at None)
        ID: name='LedsP__Leds__led0Toggle' (at pp.c:4196)
  FuncDef:  (at pp.c:4201)
    Decl: name='BlinkC__Timer0__fired', quals=[], storage=['inline', 'static'] (at pp.c:4201)
      FuncDecl: quals=None (at pp.c:4201)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BlinkC__Timer0__fired', quals=[] (at pp.c:4201)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4202)
      FuncCall:  (at None)
        ID: name='BlinkC__Leds__led0Toggle' (at pp.c:4204)
  FuncDef:  (at pp.c:4208)
    Decl: name='HplMsp430GeneralIOP__27__IO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:4208)
      FuncDecl: quals=None (at pp.c:4208)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__27__IO__toggle', quals=[] (at pp.c:4208)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4210)
      Compound:  (at pp.c:4212)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:4212)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:4212)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:4212)
        Assignment: op='^=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:4214)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:4214)
          BinaryOp: op='<<' (at pp.c:4214)
            Constant: type='int', value='0x01' (at pp.c:4214)
            Constant: type='int', value='3' (at pp.c:4214)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:4216)
          ExprList:  (at pp.c:4216)
            ID: name='__nesc_atomic' (at pp.c:4216)
  FuncDef:  (at pp.c:4220)
    Decl: name='Msp430GpioC__1__HplGeneralIO__toggle', quals=[], storage=['static', 'inline'] (at pp.c:4220)
      FuncDecl: quals=None (at pp.c:4220)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__toggle', quals=[] (at pp.c:4220)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4220)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__27__IO__toggle' (at pp.c:4222)
  FuncDef:  (at pp.c:4227)
    Decl: name='Msp430GpioC__1__GeneralIO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:4227)
      FuncDecl: quals=None (at pp.c:4227)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__GeneralIO__toggle', quals=[] (at pp.c:4227)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4229)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__HplGeneralIO__toggle' (at pp.c:4231)
  FuncDef:  (at pp.c:4235)
    Decl: name='LedsP__Led1__toggle', quals=[], storage=['static', 'inline'] (at pp.c:4235)
      FuncDecl: quals=None (at pp.c:4235)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led1__toggle', quals=[] (at pp.c:4235)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4235)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__GeneralIO__toggle' (at pp.c:4237)
  FuncDef:  (at pp.c:4242)
    Decl: name='LedsP__Leds__led1Toggle', quals=[], storage=['inline', 'static'] (at pp.c:4242)
      FuncDecl: quals=None (at pp.c:4242)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Leds__led1Toggle', quals=[] (at pp.c:4242)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4244)
      FuncCall:  (at None)
        ID: name='LedsP__Led1__toggle' (at pp.c:4245)
  FuncDef:  (at pp.c:4252)
    Decl: name='BlinkC__Leds__led1Toggle', quals=[], storage=['static', 'inline'] (at pp.c:4252)
      FuncDecl: quals=None (at pp.c:4252)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BlinkC__Leds__led1Toggle', quals=[] (at pp.c:4252)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4252)
      FuncCall:  (at None)
        ID: name='LedsP__Leds__led1Toggle' (at pp.c:4254)
  FuncDef:  (at pp.c:4259)
    Decl: name='BlinkC__Timer1__fired', quals=[], storage=['inline', 'static'] (at pp.c:4259)
      FuncDecl: quals=None (at pp.c:4259)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BlinkC__Timer1__fired', quals=[] (at pp.c:4259)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4260)
      FuncCall:  (at None)
        ID: name='BlinkC__Leds__led1Toggle' (at pp.c:4262)
  FuncDef:  (at pp.c:4266)
    Decl: name='HplMsp430GeneralIOP__31__IO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:4266)
      FuncDecl: quals=None (at pp.c:4266)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__31__IO__toggle', quals=[] (at pp.c:4266)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4268)
      Compound:  (at pp.c:4270)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:4270)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:4270)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:4270)
        Assignment: op='^=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:4272)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:4272)
          BinaryOp: op='<<' (at pp.c:4272)
            Constant: type='int', value='0x01' (at pp.c:4272)
            Constant: type='int', value='7' (at pp.c:4272)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:4274)
          ExprList:  (at pp.c:4274)
            ID: name='__nesc_atomic' (at pp.c:4274)
  FuncDef:  (at pp.c:4278)
    Decl: name='Msp430GpioC__2__HplGeneralIO__toggle', quals=[], storage=['static', 'inline'] (at pp.c:4278)
      FuncDecl: quals=None (at pp.c:4278)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__2__HplGeneralIO__toggle', quals=[] (at pp.c:4278)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4278)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__31__IO__toggle' (at pp.c:4280)
  FuncDef:  (at pp.c:4285)
    Decl: name='Msp430GpioC__2__GeneralIO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:4285)
      FuncDecl: quals=None (at pp.c:4285)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__2__GeneralIO__toggle', quals=[] (at pp.c:4285)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4287)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__2__HplGeneralIO__toggle' (at pp.c:4289)
  FuncDef:  (at pp.c:4293)
    Decl: name='LedsP__Led2__toggle', quals=[], storage=['static', 'inline'] (at pp.c:4293)
      FuncDecl: quals=None (at pp.c:4293)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led2__toggle', quals=[] (at pp.c:4293)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4293)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__2__GeneralIO__toggle' (at pp.c:4295)
  FuncDef:  (at pp.c:4300)
    Decl: name='LedsP__Leds__led2Toggle', quals=[], storage=['inline', 'static'] (at pp.c:4300)
      FuncDecl: quals=None (at pp.c:4300)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Leds__led2Toggle', quals=[] (at pp.c:4300)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4302)
      FuncCall:  (at None)
        ID: name='LedsP__Led2__toggle' (at pp.c:4303)
  FuncDef:  (at pp.c:4310)
    Decl: name='BlinkC__Leds__led2Toggle', quals=[], storage=['static', 'inline'] (at pp.c:4310)
      FuncDecl: quals=None (at pp.c:4310)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BlinkC__Leds__led2Toggle', quals=[] (at pp.c:4310)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4310)
      FuncCall:  (at None)
        ID: name='LedsP__Leds__led2Toggle' (at pp.c:4312)
  FuncDef:  (at pp.c:4317)
    Decl: name='BlinkC__Timer2__fired', quals=[], storage=['inline', 'static'] (at pp.c:4317)
      FuncDecl: quals=None (at pp.c:4317)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BlinkC__Timer2__fired', quals=[] (at pp.c:4317)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4318)
      FuncCall:  (at None)
        ID: name='BlinkC__Leds__led2Toggle' (at pp.c:4320)
  FuncDef:  (at pp.c:4324)
    Decl: name='VirtualizeTimerC__0__Timer__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:4324)
      FuncDecl: quals=None (at pp.c:4324)
        ParamList:  (at pp.c:4324)
          Decl: name='num', quals=[], storage=[] (at pp.c:4324)
            TypeDecl: declname='num', quals=[] (at pp.c:4324)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__Timer__default__fired', quals=[] (at pp.c:4324)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4325)
  FuncDef:  (at pp.c:4329)
    Decl: name='VirtualizeTimerC__0__Timer__fired', quals=[], storage=['static', 'inline'] (at pp.c:4329)
      FuncDecl: quals=None (at pp.c:4329)
        ParamList:  (at pp.c:4329)
          Decl: name='arg_0x1018b95d8', quals=[], storage=[] (at pp.c:4329)
            TypeDecl: declname='arg_0x1018b95d8', quals=[] (at pp.c:4329)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__Timer__fired', quals=[] (at pp.c:4329)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4329)
      Switch:  (at pp.c:4331)
        ID: name='arg_0x1018b95d8' (at pp.c:4331)
        Compound:  (at pp.c:4331)
          Case:  (at pp.c:4333)
            Constant: type='int', value='0U' (at pp.c:4333)
            FuncCall:  (at None)
              ID: name='BlinkC__Timer0__fired' (at pp.c:4335)
          Break:  (at pp.c:4337)
          Case:  (at pp.c:4339)
            Constant: type='int', value='1U' (at pp.c:4339)
            FuncCall:  (at None)
              ID: name='BlinkC__Timer1__fired' (at pp.c:4341)
          Break:  (at pp.c:4343)
          Case:  (at pp.c:4345)
            Constant: type='int', value='2U' (at pp.c:4345)
            FuncCall:  (at None)
              ID: name='BlinkC__Timer2__fired' (at pp.c:4347)
          Break:  (at pp.c:4349)
          Default:  (at pp.c:4351)
            FuncCall:  (at None)
              ID: name='VirtualizeTimerC__0__Timer__default__fired' (at pp.c:4353)
              ExprList:  (at pp.c:4353)
                ID: name='arg_0x1018b95d8' (at pp.c:4353)
          Break:  (at pp.c:4355)
  FuncDef:  (at pp.c:4362)
    Decl: name='AlarmToTimerC__0__Alarm__startAt', quals=[], storage=['static', 'inline'] (at pp.c:4362)
      FuncDecl: quals=None (at pp.c:4362)
        ParamList:  (at pp.c:4362)
          Decl: name='t0', quals=[], storage=[] (at pp.c:4362)
            TypeDecl: declname='t0', quals=[] (at pp.c:4362)
              IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:4362)
            TypeDecl: declname='dt', quals=[] (at pp.c:4362)
              IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Alarm__startAt', quals=[] (at pp.c:4362)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4362)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__Alarm__startAt' (at pp.c:4364)
        ExprList:  (at pp.c:4364)
          ID: name='t0' (at pp.c:4364)
          ID: name='dt' (at pp.c:4364)
  FuncDef:  (at pp.c:4369)
    Decl: name='AlarmToTimerC__0__start', quals=[], storage=['inline', 'static'] (at pp.c:4369)
      FuncDecl: quals=None (at pp.c:4369)
        ParamList:  (at pp.c:4369)
          Decl: name='t0', quals=[], storage=[] (at pp.c:4369)
            TypeDecl: declname='t0', quals=[] (at pp.c:4369)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:4369)
            TypeDecl: declname='dt', quals=[] (at pp.c:4369)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='oneshot', quals=[], storage=[] (at pp.c:4369)
            TypeDecl: declname='oneshot', quals=[] (at pp.c:4369)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__start', quals=[] (at pp.c:4369)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4370)
      Assignment: op='=' (at pp.c:4371)
        ID: name='AlarmToTimerC__0__m_dt' (at pp.c:4371)
        ID: name='dt' (at pp.c:4371)
      Assignment: op='=' (at pp.c:4372)
        ID: name='AlarmToTimerC__0__m_oneshot' (at pp.c:4372)
        ID: name='oneshot' (at pp.c:4372)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Alarm__startAt' (at pp.c:4373)
        ExprList:  (at pp.c:4373)
          ID: name='t0' (at pp.c:4373)
          ID: name='dt' (at pp.c:4373)
  FuncDef:  (at pp.c:4377)
    Decl: name='AlarmToTimerC__0__Timer__startOneShotAt', quals=[], storage=['inline', 'static'] (at pp.c:4377)
      FuncDecl: quals=None (at pp.c:4377)
        ParamList:  (at pp.c:4377)
          Decl: name='t0', quals=[], storage=[] (at pp.c:4377)
            TypeDecl: declname='t0', quals=[] (at pp.c:4377)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:4377)
            TypeDecl: declname='dt', quals=[] (at pp.c:4377)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Timer__startOneShotAt', quals=[] (at pp.c:4377)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4378)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__start' (at pp.c:4380)
        ExprList:  (at pp.c:4380)
          ID: name='t0' (at pp.c:4380)
          ID: name='dt' (at pp.c:4380)
          ID: name='TRUE' (at pp.c:4380)
  FuncDef:  (at pp.c:4384)
    Decl: name='VirtualizeTimerC__0__TimerFrom__startOneShotAt', quals=[], storage=['static', 'inline'] (at pp.c:4384)
      FuncDecl: quals=None (at pp.c:4384)
        ParamList:  (at pp.c:4384)
          Decl: name='t0', quals=[], storage=[] (at pp.c:4384)
            TypeDecl: declname='t0', quals=[] (at pp.c:4384)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:4384)
            TypeDecl: declname='dt', quals=[] (at pp.c:4384)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__startOneShotAt', quals=[] (at pp.c:4384)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4384)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Timer__startOneShotAt' (at pp.c:4386)
        ExprList:  (at pp.c:4386)
          ID: name='t0' (at pp.c:4386)
          ID: name='dt' (at pp.c:4386)
  FuncDef:  (at pp.c:4391)
    Decl: name='TransformAlarmC__0__Alarm__getAlarm', quals=[], storage=['inline', 'static'] (at pp.c:4391)
      FuncDecl: quals=None (at pp.c:4391)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Alarm__getAlarm', quals=[] (at pp.c:4391)
          IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
    Compound:  (at pp.c:4392)
      Compound:  (at pp.c:4393)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:4393)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:4393)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:4393)
        Compound:  (at pp.c:4395)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:4396)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:4396)
              IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
            BinaryOp: op='+' (at pp.c:4398)
              ID: name='TransformAlarmC__0__m_t0' (at pp.c:4398)
              ID: name='TransformAlarmC__0__m_dt' (at pp.c:4398)
          Compound:  (at pp.c:4400)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:4402)
              ExprList:  (at pp.c:4402)
                ID: name='__nesc_atomic' (at pp.c:4402)
            Return:  (at pp.c:4404)
              ID: name='__nesc_temp' (at pp.c:4404)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:4408)
          ExprList:  (at pp.c:4408)
            ID: name='__nesc_atomic' (at pp.c:4408)
  FuncDef:  (at pp.c:4412)
    Decl: name='AlarmToTimerC__0__Alarm__getAlarm', quals=[], storage=['static', 'inline'] (at pp.c:4412)
      FuncDecl: quals=None (at pp.c:4412)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Alarm__getAlarm', quals=[] (at pp.c:4412)
          IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
    Compound:  (at pp.c:4412)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:4414)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:4414)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:4418)
        ID: name='__nesc_result' (at pp.c:4418)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__0__Alarm__getAlarm' (at pp.c:4418)
      Return:  (at pp.c:4422)
        ID: name='__nesc_result' (at pp.c:4422)
  FuncDef:  (at pp.c:4427)
    Decl: name='TransformAlarmC__0__Counter__get', quals=[], storage=['static', 'inline'] (at pp.c:4427)
      FuncDecl: quals=None (at pp.c:4427)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Counter__get', quals=[] (at pp.c:4427)
          IdentifierType: names=['TransformAlarmC__0__Counter__size_type'] (at None)
    Compound:  (at pp.c:4427)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:4429)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:4429)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:4433)
        ID: name='__nesc_result' (at pp.c:4433)
        FuncCall:  (at None)
          ID: name='TransformCounterC__0__Counter__get' (at pp.c:4433)
      Return:  (at pp.c:4437)
        ID: name='__nesc_result' (at pp.c:4437)
  FuncDef:  (at pp.c:4442)
    Decl: name='TransformAlarmC__0__Alarm__getNow', quals=[], storage=['inline', 'static'] (at pp.c:4442)
      FuncDecl: quals=None (at pp.c:4442)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Alarm__getNow', quals=[] (at pp.c:4442)
          IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
    Compound:  (at pp.c:4443)
      Return:  (at pp.c:4444)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__0__Counter__get' (at pp.c:4444)
  FuncDef:  (at pp.c:4448)
    Decl: name='AlarmToTimerC__0__Alarm__getNow', quals=[], storage=['static', 'inline'] (at pp.c:4448)
      FuncDecl: quals=None (at pp.c:4448)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Alarm__getNow', quals=[] (at pp.c:4448)
          IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
    Compound:  (at pp.c:4448)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:4450)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:4450)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:4454)
        ID: name='__nesc_result' (at pp.c:4454)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__0__Alarm__getNow' (at pp.c:4454)
      Return:  (at pp.c:4458)
        ID: name='__nesc_result' (at pp.c:4458)
  FuncDef:  (at pp.c:4463)
    Decl: name='AlarmToTimerC__0__Timer__getNow', quals=[], storage=['inline', 'static'] (at pp.c:4463)
      FuncDecl: quals=None (at pp.c:4463)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Timer__getNow', quals=[] (at pp.c:4463)
          IdentifierType: names=['uint32_t'] (at None)
    Compound:  (at pp.c:4464)
      Return:  (at pp.c:4466)
        FuncCall:  (at None)
          ID: name='AlarmToTimerC__0__Alarm__getNow' (at pp.c:4466)
  FuncDef:  (at pp.c:4470)
    Decl: name='VirtualizeTimerC__0__TimerFrom__getNow', quals=[], storage=['static', 'inline'] (at pp.c:4470)
      FuncDecl: quals=None (at pp.c:4470)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__getNow', quals=[] (at pp.c:4470)
          IdentifierType: names=['uint32_t'] (at None)
    Compound:  (at pp.c:4470)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:4472)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:4472)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:4476)
        ID: name='__nesc_result' (at pp.c:4476)
        FuncCall:  (at None)
          ID: name='AlarmToTimerC__0__Timer__getNow' (at pp.c:4476)
      Return:  (at pp.c:4480)
        ID: name='__nesc_result' (at pp.c:4480)
  FuncDef:  (at pp.c:4485)
    Decl: name='VirtualizeTimerC__0__TimerFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:4485)
      FuncDecl: quals=None (at pp.c:4485)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__fired', quals=[] (at pp.c:4485)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4486)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__fireTimers' (at pp.c:4487)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='VirtualizeTimerC__0__TimerFrom__getNow' (at pp.c:4487)
  FuncDef:  (at pp.c:4491)
    Decl: name='AlarmToTimerC__0__Timer__fired', quals=[], storage=['static', 'inline'] (at pp.c:4491)
      FuncDecl: quals=None (at pp.c:4491)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Timer__fired', quals=[] (at pp.c:4491)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4491)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__TimerFrom__fired' (at pp.c:4493)
  FuncDef:  (at pp.c:4498)
    Decl: name='Msp430TimerCapComP__3__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:4498)
      FuncDecl: quals=None (at pp.c:4498)
        ParamList:  (at pp.c:4498)
          Decl: name='x', quals=[], storage=[] (at pp.c:4498)
            TypeDecl: declname='x', quals=[] (at pp.c:4498)
              IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__CC2int', quals=[] (at pp.c:4498)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:4500)
      Decl: name='c', quals=[], storage=[] (at pp.c:4509)
        TypeDecl: declname='c', quals=[] (at pp.c:4509)
          Union: name='Msp430TimerCapComP__3____nesc_unnamed4286', packed=False (at pp.c:4502)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:4504)
                IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:4506)
                IdentifierType: names=['uint16_t'] (at None)
        ExprList:  (at pp.c:4509)
          Assignment: op='=' (at pp.c:4509)
            StructRef: type='.' (at pp.c:4509)
              ID: name='f' (at pp.c:4509)
            ID: name='x' (at pp.c:4509)
      Return:  (at pp.c:4512)
        StructRef: type='.' (at pp.c:4512)
          ID: name='c' (at pp.c:4512)
          ID: name='t' (at pp.c:4512)
  FuncDef:  (at pp.c:4515)
    Decl: name='Msp430TimerCapComP__3__compareControl', quals=[], storage=['inline', 'static'] (at pp.c:4515)
      FuncDecl: quals=None (at pp.c:4515)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__compareControl', quals=[] (at pp.c:4515)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:4516)
      Decl: name='x', quals=[], storage=[] (at pp.c:4517)
        TypeDecl: declname='x', quals=[] (at pp.c:4517)
          IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
        ExprList:  (at pp.c:4518)
          Assignment: op='=' (at pp.c:4518)
            StructRef: type='.' (at pp.c:4518)
              ID: name='cm' (at pp.c:4518)
            Constant: type='int', value='1' (at pp.c:4518)
          Assignment: op='=' (at pp.c:4519)
            StructRef: type='.' (at pp.c:4519)
              ID: name='ccis' (at pp.c:4519)
            Constant: type='int', value='0' (at pp.c:4519)
          Assignment: op='=' (at pp.c:4520)
            StructRef: type='.' (at pp.c:4520)
              ID: name='clld' (at pp.c:4520)
            Constant: type='int', value='0' (at pp.c:4520)
          Assignment: op='=' (at pp.c:4521)
            StructRef: type='.' (at pp.c:4521)
              ID: name='cap' (at pp.c:4521)
            Constant: type='int', value='0' (at pp.c:4521)
          Assignment: op='=' (at pp.c:4522)
            StructRef: type='.' (at pp.c:4522)
              ID: name='ccie' (at pp.c:4522)
            Constant: type='int', value='0' (at pp.c:4522)
      Return:  (at pp.c:4524)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__3__CC2int' (at pp.c:4524)
          ExprList:  (at pp.c:4524)
            ID: name='x' (at pp.c:4524)
  FuncDef:  (at pp.c:4528)
    Decl: name='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[], storage=['inline', 'static'] (at pp.c:4528)
      FuncDecl: quals=None (at pp.c:4528)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[] (at pp.c:4528)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4529)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:4530)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='386U' (at pp.c:4530)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__3__compareControl' (at pp.c:4530)
  FuncDef:  (at pp.c:4534)
    Decl: name='Msp430AlarmC__0__Msp430TimerControl__setControlAsCompare', quals=[], storage=['static', 'inline'] (at pp.c:4534)
      FuncDecl: quals=None (at pp.c:4534)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__setControlAsCompare', quals=[] (at pp.c:4534)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4534)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Control__setControlAsCompare' (at pp.c:4536)
  FuncDef:  (at pp.c:4541)
    Decl: name='Msp430AlarmC__0__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:4541)
      FuncDecl: quals=None (at pp.c:4541)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Init__init', quals=[] (at pp.c:4541)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:4542)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430TimerControl__disableEvents' (at pp.c:4543)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430TimerControl__setControlAsCompare' (at pp.c:4544)
      Return:  (at pp.c:4545)
        ID: name='SUCCESS' (at pp.c:4545)
  FuncDef:  (at pp.c:4549)
    Decl: name='RealMainP__SoftwareInit__init', quals=[], storage=['static', 'inline'] (at pp.c:4549)
      FuncDecl: quals=None (at pp.c:4549)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__SoftwareInit__init', quals=[] (at pp.c:4549)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:4549)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:4551)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:4551)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:4555)
        ID: name='__nesc_result' (at pp.c:4555)
        FuncCall:  (at None)
          ID: name='Msp430AlarmC__0__Init__init' (at pp.c:4555)
      Return:  (at pp.c:4559)
        ID: name='__nesc_result' (at pp.c:4559)
  FuncDef:  (at pp.c:4564)
    Decl: name='BlinkC__Timer2__startPeriodic', quals=[], storage=['static', 'inline'] (at pp.c:4564)
      FuncDecl: quals=None (at pp.c:4564)
        ParamList:  (at pp.c:4564)
          Decl: name='dt', quals=[], storage=[] (at pp.c:4564)
            TypeDecl: declname='dt', quals=[] (at pp.c:4564)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='BlinkC__Timer2__startPeriodic', quals=[] (at pp.c:4564)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4564)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__Timer__startPeriodic' (at pp.c:4566)
        ExprList:  (at pp.c:4566)
          Constant: type='int', value='2U' (at pp.c:4566)
          ID: name='dt' (at pp.c:4566)
  FuncDef:  (at pp.c:4570)
    Decl: name='BlinkC__Timer1__startPeriodic', quals=[], storage=['static', 'inline'] (at pp.c:4570)
      FuncDecl: quals=None (at pp.c:4570)
        ParamList:  (at pp.c:4570)
          Decl: name='dt', quals=[], storage=[] (at pp.c:4570)
            TypeDecl: declname='dt', quals=[] (at pp.c:4570)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='BlinkC__Timer1__startPeriodic', quals=[] (at pp.c:4570)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4570)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__Timer__startPeriodic' (at pp.c:4572)
        ExprList:  (at pp.c:4572)
          Constant: type='int', value='1U' (at pp.c:4572)
          ID: name='dt' (at pp.c:4572)
  FuncDef:  (at pp.c:4576)
    Decl: name='BlinkC__Timer0__startPeriodic', quals=[], storage=['static', 'inline'] (at pp.c:4576)
      FuncDecl: quals=None (at pp.c:4576)
        ParamList:  (at pp.c:4576)
          Decl: name='dt', quals=[], storage=[] (at pp.c:4576)
            TypeDecl: declname='dt', quals=[] (at pp.c:4576)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='BlinkC__Timer0__startPeriodic', quals=[] (at pp.c:4576)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4576)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__Timer__startPeriodic' (at pp.c:4578)
        ExprList:  (at pp.c:4578)
          Constant: type='int', value='0U' (at pp.c:4578)
          ID: name='dt' (at pp.c:4578)
  FuncDef:  (at pp.c:4583)
    Decl: name='BlinkC__Boot__booted', quals=[], storage=['inline', 'static'] (at pp.c:4583)
      FuncDecl: quals=None (at pp.c:4583)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BlinkC__Boot__booted', quals=[] (at pp.c:4583)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4584)
      FuncCall:  (at None)
        ID: name='BlinkC__Timer0__startPeriodic' (at pp.c:4585)
        ExprList:  (at pp.c:4585)
          Constant: type='int', value='250' (at pp.c:4585)
      FuncCall:  (at None)
        ID: name='BlinkC__Timer1__startPeriodic' (at pp.c:4586)
        ExprList:  (at pp.c:4586)
          Constant: type='int', value='500' (at pp.c:4586)
      FuncCall:  (at None)
        ID: name='BlinkC__Timer2__startPeriodic' (at pp.c:4587)
        ExprList:  (at pp.c:4587)
          Constant: type='int', value='1000' (at pp.c:4587)
  FuncDef:  (at pp.c:4591)
    Decl: name='RealMainP__Boot__booted', quals=[], storage=['static', 'inline'] (at pp.c:4591)
      FuncDecl: quals=None (at pp.c:4591)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__Boot__booted', quals=[] (at pp.c:4591)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4591)
      FuncCall:  (at None)
        ID: name='BlinkC__Boot__booted' (at pp.c:4593)
  FuncDef:  (at pp.c:4598)
    Decl: name='VirtualizeTimerC__0__updateFromTimer__postTask', quals=[], storage=['static', 'inline'] (at pp.c:4598)
      FuncDecl: quals=None (at pp.c:4598)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__updateFromTimer__postTask', quals=[] (at pp.c:4598)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:4598)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:4600)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:4600)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:4604)
        ID: name='__nesc_result' (at pp.c:4604)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:4604)
          ExprList:  (at pp.c:4604)
            ID: name='VirtualizeTimerC__0__updateFromTimer' (at pp.c:4604)
      Return:  (at pp.c:4608)
        ID: name='__nesc_result' (at pp.c:4608)
  FuncDef:  (at pp.c:4613)
    Decl: name='VirtualizeTimerC__0__startTimer', quals=[], storage=['inline', 'static'] (at pp.c:4613)
      FuncDecl: quals=None (at pp.c:4613)
        ParamList:  (at pp.c:4613)
          Decl: name='num', quals=[], storage=[] (at pp.c:4613)
            TypeDecl: declname='num', quals=[] (at pp.c:4613)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='t0', quals=[], storage=[] (at pp.c:4613)
            TypeDecl: declname='t0', quals=[] (at pp.c:4613)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:4613)
            TypeDecl: declname='dt', quals=[] (at pp.c:4613)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='isoneshot', quals=[], storage=[] (at pp.c:4613)
            TypeDecl: declname='isoneshot', quals=[] (at pp.c:4613)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__startTimer', quals=[] (at pp.c:4613)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4614)
      Decl: name='timer', quals=[], storage=[] (at pp.c:4615)
        PtrDecl: quals=[] (at pp.c:4615)
          TypeDecl: declname='timer', quals=[] (at pp.c:4615)
            IdentifierType: names=['VirtualizeTimerC__0__Timer_t'] (at None)
        UnaryOp: op='&' (at pp.c:4615)
          ArrayRef:  (at pp.c:4615)
            ID: name='VirtualizeTimerC__0__m_timers' (at pp.c:4615)
            ID: name='num' (at pp.c:4615)
      Assignment: op='=' (at pp.c:4618)
        StructRef: type='->' (at pp.c:4618)
          ID: name='timer' (at pp.c:4618)
          ID: name='t0' (at pp.c:4618)
        ID: name='t0' (at pp.c:4618)
      Assignment: op='=' (at pp.c:4619)
        StructRef: type='->' (at pp.c:4619)
          ID: name='timer' (at pp.c:4619)
          ID: name='dt' (at pp.c:4619)
        ID: name='dt' (at pp.c:4619)
      Assignment: op='=' (at pp.c:4620)
        StructRef: type='->' (at pp.c:4620)
          ID: name='timer' (at pp.c:4620)
          ID: name='isoneshot' (at pp.c:4620)
        ID: name='isoneshot' (at pp.c:4620)
      Assignment: op='=' (at pp.c:4621)
        StructRef: type='->' (at pp.c:4621)
          ID: name='timer' (at pp.c:4621)
          ID: name='isrunning' (at pp.c:4621)
        ID: name='TRUE' (at pp.c:4621)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__updateFromTimer__postTask' (at pp.c:4622)
  FuncDef:  (at pp.c:4626)
    Decl: name='SchedulerBasicP__TaskBasic__default__runTask', quals=[], storage=['inline', 'static'] (at pp.c:4626)
      FuncDecl: quals=None (at pp.c:4626)
        ParamList:  (at pp.c:4626)
          Decl: name='id', quals=[], storage=[] (at pp.c:4626)
            TypeDecl: declname='id', quals=[] (at pp.c:4626)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SchedulerBasicP__TaskBasic__default__runTask', quals=[] (at pp.c:4626)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4627)
  FuncDef:  (at pp.c:4631)
    Decl: name='SchedulerBasicP__TaskBasic__runTask', quals=[], storage=['static', 'inline'] (at pp.c:4631)
      FuncDecl: quals=None (at pp.c:4631)
        ParamList:  (at pp.c:4631)
          Decl: name='arg_0x101333340', quals=[], storage=[] (at pp.c:4631)
            TypeDecl: declname='arg_0x101333340', quals=[] (at pp.c:4631)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SchedulerBasicP__TaskBasic__runTask', quals=[] (at pp.c:4631)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4631)
      Switch:  (at pp.c:4633)
        ID: name='arg_0x101333340' (at pp.c:4633)
        Compound:  (at pp.c:4633)
          Case:  (at pp.c:4635)
            ID: name='AlarmToTimerC__0__fired' (at pp.c:4635)
            FuncCall:  (at None)
              ID: name='AlarmToTimerC__0__fired__runTask' (at pp.c:4637)
          Break:  (at pp.c:4639)
          Case:  (at pp.c:4641)
            ID: name='VirtualizeTimerC__0__updateFromTimer' (at pp.c:4641)
            FuncCall:  (at None)
              ID: name='VirtualizeTimerC__0__updateFromTimer__runTask' (at pp.c:4643)
          Break:  (at pp.c:4645)
          Default:  (at pp.c:4647)
            FuncCall:  (at None)
              ID: name='SchedulerBasicP__TaskBasic__default__runTask' (at pp.c:4649)
              ExprList:  (at pp.c:4649)
                ID: name='arg_0x101333340' (at pp.c:4649)
          Break:  (at pp.c:4651)
  FuncDef:  (at pp.c:4658)
    Decl: name='__nesc_disable_interrupt', quals=[], storage=['inline', 'static'] (at pp.c:4658)
      FuncDecl: quals=None (at pp.c:4658)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_disable_interrupt', quals=[] (at pp.c:4658)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4659)
      Assignment: op='&=' (at pp.c:4660)
        ID: name='_R2' (at pp.c:4660)
        Constant: type='int', value='0xfff7' (at pp.c:4660)
  FuncDef:  (at pp.c:4664)
    Decl: name='Msp430ClockP__McuPowerOverride__lowestState', quals=[], storage=['inline', 'static'] (at pp.c:4664)
      FuncDecl: quals=None (at pp.c:4664)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__McuPowerOverride__lowestState', quals=[] (at pp.c:4664)
          IdentifierType: names=['mcu_power_t'] (at None)
    Compound:  (at pp.c:4666)
      Return:  (at pp.c:4667)
        ID: name='MSP430_POWER_LPM3' (at pp.c:4667)
  FuncDef:  (at pp.c:4671)
    Decl: name='McuSleepC__McuPowerOverride__lowestState', quals=[], storage=['static', 'inline'] (at pp.c:4671)
      FuncDecl: quals=None (at pp.c:4671)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='McuSleepC__McuPowerOverride__lowestState', quals=[] (at pp.c:4671)
          IdentifierType: names=['mcu_power_t'] (at None)
    Compound:  (at pp.c:4671)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:4673)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:4673)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:4677)
        ID: name='__nesc_result' (at pp.c:4677)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__McuPowerOverride__lowestState' (at pp.c:4677)
      Return:  (at pp.c:4681)
        ID: name='__nesc_result' (at pp.c:4681)
  FuncDef:  (at pp.c:4686)
    Decl: name='McuSleepC__getPowerState', quals=[], storage=['inline', 'static'] (at pp.c:4686)
      FuncDecl: quals=None (at pp.c:4686)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='McuSleepC__getPowerState', quals=[] (at pp.c:4686)
          IdentifierType: names=['mcu_power_t'] (at None)
    Compound:  (at pp.c:4688)
      Decl: name='pState', quals=[], storage=[] (at pp.c:4689)
        TypeDecl: declname='pState', quals=[] (at pp.c:4689)
          IdentifierType: names=['mcu_power_t'] (at None)
        ID: name='MSP430_POWER_LPM4' (at pp.c:4689)
      If:  (at pp.c:4699)
        BinaryOp: op='||' (at pp.c:4701)
          BinaryOp: op='||' (at pp.c:4701)
            BinaryOp: op='||' (at pp.c:4701)
              BinaryOp: op='&&' (at pp.c:4701)
                BinaryOp: op='||' (at pp.c:4701)
                  BinaryOp: op='||' (at pp.c:4701)
                    BinaryOp: op='&' (at pp.c:4701)
                      ID: name='TA0CCTL0' (at pp.c:4701)
                      Constant: type='int', value='0x0010' (at pp.c:4701)
                    BinaryOp: op='&' (at pp.c:4702)
                      ID: name='TA0CCTL1' (at pp.c:4702)
                      Constant: type='int', value='0x0010' (at pp.c:4702)
                  BinaryOp: op='&' (at pp.c:4703)
                    ID: name='TA0CCTL2' (at pp.c:4703)
                    Constant: type='int', value='0x0010' (at pp.c:4703)
                BinaryOp: op='==' (at pp.c:4704)
                  BinaryOp: op='&' (at pp.c:4704)
                    ID: name='TA0CTL' (at pp.c:4704)
                    BinaryOp: op='<<' (at pp.c:4704)
                      Constant: type='int', value='3' (at pp.c:4704)
                      Constant: type='int', value='8' (at pp.c:4704)
                  BinaryOp: op='<<' (at pp.c:4704)
                    Constant: type='int', value='2' (at pp.c:4704)
                    Constant: type='int', value='8' (at pp.c:4704)
              BinaryOp: op='&&' (at pp.c:4705)
                BinaryOp: op='&' (at pp.c:4705)
                  ID: name='ME1' (at pp.c:4705)
                  BinaryOp: op='|' (at pp.c:4705)
                    BinaryOp: op='<<' (at pp.c:4705)
                      Constant: type='int', value='1' (at pp.c:4705)
                      Constant: type='int', value='7' (at pp.c:4705)
                    BinaryOp: op='<<' (at pp.c:4705)
                      Constant: type='int', value='1' (at pp.c:4705)
                      Constant: type='int', value='6' (at pp.c:4705)
                BinaryOp: op='&' (at pp.c:4705)
                  ID: name='U0TCTL' (at pp.c:4705)
                  Constant: type='int', value='0x20' (at pp.c:4705)
            BinaryOp: op='&&' (at pp.c:4706)
              BinaryOp: op='&' (at pp.c:4706)
                ID: name='ME2' (at pp.c:4706)
                BinaryOp: op='|' (at pp.c:4706)
                  BinaryOp: op='<<' (at pp.c:4706)
                    Constant: type='int', value='1' (at pp.c:4706)
                    Constant: type='int', value='5' (at pp.c:4706)
                  BinaryOp: op='<<' (at pp.c:4706)
                    Constant: type='int', value='1' (at pp.c:4706)
                    Constant: type='int', value='4' (at pp.c:4706)
              BinaryOp: op='&' (at pp.c:4706)
                ID: name='U1TCTL' (at pp.c:4706)
                Constant: type='int', value='0x20' (at pp.c:4706)
          BinaryOp: op='&&' (at pp.c:4709)
            BinaryOp: op='&&' (at pp.c:4709)
              BinaryOp: op='&&' (at pp.c:4709)
                BinaryOp: op='&&' (at pp.c:4709)
                  BinaryOp: op='&' (at pp.c:4709)
                    ID: name='U0CTLnr' (at pp.c:4709)
                    Constant: type='int', value='0x01' (at pp.c:4709)
                  BinaryOp: op='&' (at pp.c:4709)
                    ID: name='I2CTCTLnr' (at pp.c:4709)
                    Constant: type='int', value='0x20' (at pp.c:4709)
                BinaryOp: op='&' (at pp.c:4710)
                  ID: name='I2CDCTLnr' (at pp.c:4710)
                  Constant: type='int', value='0x20' (at pp.c:4710)
              BinaryOp: op='&' (at pp.c:4710)
                ID: name='U0CTLnr' (at pp.c:4710)
                Constant: type='int', value='0x04' (at pp.c:4710)
            BinaryOp: op='&' (at pp.c:4710)
              ID: name='U0CTLnr' (at pp.c:4710)
              Constant: type='int', value='0x20' (at pp.c:4710)
        Compound:  (at pp.c:4710)
          Assignment: op='=' (at pp.c:4713)
            ID: name='pState' (at pp.c:4713)
            ID: name='MSP430_POWER_LPM1' (at pp.c:4713)
      If:  (at pp.c:4717)
        BinaryOp: op='&' (at pp.c:4717)
          ID: name='ADC12CTL0' (at pp.c:4717)
          Constant: type='int', value='0x0010' (at pp.c:4717)
        Compound:  (at pp.c:4717)
          If:  (at pp.c:4718)
            BinaryOp: op='&' (at pp.c:4718)
              ID: name='ADC12CTL1' (at pp.c:4718)
              BinaryOp: op='<<' (at pp.c:4718)
                Constant: type='int', value='2' (at pp.c:4718)
                Constant: type='int', value='3' (at pp.c:4718)
            Compound:  (at pp.c:4718)
              If:  (at pp.c:4720)
                BinaryOp: op='&' (at pp.c:4720)
                  ID: name='ADC12CTL1' (at pp.c:4720)
                  BinaryOp: op='<<' (at pp.c:4720)
                    Constant: type='int', value='1' (at pp.c:4720)
                    Constant: type='int', value='3' (at pp.c:4720)
                Compound:  (at pp.c:4720)
                  Assignment: op='=' (at pp.c:4721)
                    ID: name='pState' (at pp.c:4721)
                    ID: name='MSP430_POWER_LPM1' (at pp.c:4721)
                Compound:  (at pp.c:4723)
                  Assignment: op='=' (at pp.c:4725)
                    ID: name='pState' (at pp.c:4725)
                    ID: name='MSP430_POWER_ACTIVE' (at pp.c:4725)
            Compound:  (at pp.c:4728)
              If:  (at pp.c:4730)
                BinaryOp: op='&&' (at pp.c:4730)
                  BinaryOp: op='&' (at pp.c:4730)
                    ID: name='ADC12CTL1' (at pp.c:4730)
                    Constant: type='int', value='0x0400' (at pp.c:4730)
                  BinaryOp: op='==' (at pp.c:4730)
                    BinaryOp: op='&' (at pp.c:4730)
                      ID: name='TA0CTL' (at pp.c:4730)
                      BinaryOp: op='<<' (at pp.c:4730)
                        Constant: type='int', value='3' (at pp.c:4730)
                        Constant: type='int', value='8' (at pp.c:4730)
                    BinaryOp: op='<<' (at pp.c:4730)
                      Constant: type='int', value='2' (at pp.c:4730)
                      Constant: type='int', value='8' (at pp.c:4730)
                Compound:  (at pp.c:4730)
                  Assignment: op='=' (at pp.c:4734)
                    ID: name='pState' (at pp.c:4734)
                    ID: name='MSP430_POWER_LPM1' (at pp.c:4734)
      Return:  (at pp.c:4739)
        ID: name='pState' (at pp.c:4739)
  FuncDef:  (at pp.c:4743)
    Decl: name='mcombine', quals=[], storage=['inline', 'static'] (at pp.c:4743)
      FuncDecl: quals=None (at pp.c:4743)
        ParamList:  (at pp.c:4743)
          Decl: name='m1', quals=[], storage=[] (at pp.c:4743)
            TypeDecl: declname='m1', quals=[] (at pp.c:4743)
              IdentifierType: names=['mcu_power_t'] (at None)
          Decl: name='m2', quals=[], storage=[] (at pp.c:4743)
            TypeDecl: declname='m2', quals=[] (at pp.c:4743)
              IdentifierType: names=['mcu_power_t'] (at None)
        TypeDecl: declname='mcombine', quals=[] (at pp.c:4743)
          IdentifierType: names=['mcu_power_t'] (at None)
    Compound:  (at pp.c:4745)
      Return:  (at pp.c:4746)
        TernaryOp:  (at pp.c:4746)
          BinaryOp: op='<' (at pp.c:4746)
            ID: name='m1' (at pp.c:4746)
            ID: name='m2' (at pp.c:4746)
          ID: name='m1' (at pp.c:4746)
          ID: name='m2' (at pp.c:4746)
  FuncDef:  (at pp.c:4750)
    Decl: name='McuSleepC__computePowerState', quals=[], storage=['inline', 'static'] (at pp.c:4750)
      FuncDecl: quals=None (at pp.c:4750)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='McuSleepC__computePowerState', quals=[] (at pp.c:4750)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4752)
      Assignment: op='=' (at pp.c:4753)
        ID: name='McuSleepC__powerState' (at pp.c:4753)
        FuncCall:  (at None)
          ID: name='mcombine' (at pp.c:4753)
          ExprList:  (at None)
            FuncCall:  (at None)
              ID: name='McuSleepC__getPowerState' (at pp.c:4753)
            FuncCall:  (at None)
              ID: name='McuSleepC__McuPowerOverride__lowestState' (at pp.c:4754)
  FuncDef:  (at pp.c:4757)
    Decl: name='McuSleepC__McuSleep__sleep', quals=[], storage=['inline', 'static'] (at pp.c:4757)
      FuncDecl: quals=None (at pp.c:4757)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='McuSleepC__McuSleep__sleep', quals=[] (at pp.c:4757)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4759)
      Decl: name='temp', quals=[], storage=[] (at pp.c:4760)
        TypeDecl: declname='temp', quals=[] (at pp.c:4760)
          IdentifierType: names=['uint16_t'] (at None)
      If:  (at pp.c:4763)
        ID: name='McuSleepC__dirty' (at pp.c:4763)
        Compound:  (at pp.c:4763)
          FuncCall:  (at None)
            ID: name='McuSleepC__computePowerState' (at pp.c:4764)
      Assignment: op='=' (at pp.c:4767)
        ID: name='temp' (at pp.c:4767)
        BinaryOp: op='|' (at pp.c:4767)
          ArrayRef:  (at pp.c:4767)
            ID: name='McuSleepC__msp430PowerBits' (at pp.c:4767)
            ID: name='McuSleepC__powerState' (at pp.c:4767)
          Constant: type='int', value='0x0008' (at pp.c:4767)
      Assignment: op='|=' (at pp.c:4768)
        ID: name='_R2' (at pp.c:4768)
        ID: name='temp' (at pp.c:4768)
      FuncCall:  (at None)
        ID: name='__nesc_disable_interrupt' (at pp.c:4771)
  FuncDef:  (at pp.c:4775)
    Decl: name='SchedulerBasicP__McuSleep__sleep', quals=[], storage=['static', 'inline'] (at pp.c:4775)
      FuncDecl: quals=None (at pp.c:4775)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SchedulerBasicP__McuSleep__sleep', quals=[] (at pp.c:4775)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4775)
      FuncCall:  (at None)
        ID: name='McuSleepC__McuSleep__sleep' (at pp.c:4777)
  FuncDef:  (at pp.c:4782)
    Decl: name='SchedulerBasicP__popTask', quals=[], storage=['__inline', 'static'] (at pp.c:4782)
      FuncDecl: quals=None (at pp.c:4782)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SchedulerBasicP__popTask', quals=[] (at pp.c:4782)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:4783)
      If:  (at pp.c:4784)
        BinaryOp: op='!=' (at pp.c:4784)
          ID: name='SchedulerBasicP__m_head' (at pp.c:4784)
          ID: name='SchedulerBasicP__NO_TASK' (at pp.c:4784)
        Compound:  (at pp.c:4785)
          Decl: name='id', quals=[], storage=[] (at pp.c:4786)
            TypeDecl: declname='id', quals=[] (at pp.c:4786)
              IdentifierType: names=['uint8_t'] (at None)
            ID: name='SchedulerBasicP__m_head' (at pp.c:4786)
          Assignment: op='=' (at pp.c:4789)
            ID: name='SchedulerBasicP__m_head' (at pp.c:4789)
            ArrayRef:  (at pp.c:4789)
              ID: name='SchedulerBasicP__m_next' (at pp.c:4789)
              ID: name='SchedulerBasicP__m_head' (at pp.c:4789)
          If:  (at pp.c:4790)
            BinaryOp: op='==' (at pp.c:4790)
              ID: name='SchedulerBasicP__m_head' (at pp.c:4790)
              ID: name='SchedulerBasicP__NO_TASK' (at pp.c:4790)
            Compound:  (at pp.c:4791)
              Assignment: op='=' (at pp.c:4792)
                ID: name='SchedulerBasicP__m_tail' (at pp.c:4792)
                ID: name='SchedulerBasicP__NO_TASK' (at pp.c:4792)
          Assignment: op='=' (at pp.c:4794)
            ArrayRef:  (at pp.c:4794)
              ID: name='SchedulerBasicP__m_next' (at pp.c:4794)
              ID: name='id' (at pp.c:4794)
            ID: name='SchedulerBasicP__NO_TASK' (at pp.c:4794)
          Return:  (at pp.c:4795)
            ID: name='id' (at pp.c:4795)
        Compound:  (at pp.c:4798)
          Return:  (at pp.c:4799)
            ID: name='SchedulerBasicP__NO_TASK' (at pp.c:4799)
  FuncDef:  (at pp.c:4804)
    Decl: name='SchedulerBasicP__Scheduler__taskLoop', quals=[], storage=['inline', 'static'] (at pp.c:4804)
      FuncDecl: quals=None (at pp.c:4804)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SchedulerBasicP__Scheduler__taskLoop', quals=[] (at pp.c:4804)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4805)
      For:  (at pp.c:4806)
        Compound:  (at pp.c:4807)
          Decl: name='nextTask', quals=[], storage=[] (at pp.c:4808)
            TypeDecl: declname='nextTask', quals=[] (at pp.c:4808)
              IdentifierType: names=['uint8_t'] (at None)
          Compound:  (at pp.c:4810)
            Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:4810)
              TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:4810)
                IdentifierType: names=['__nesc_atomic_t'] (at None)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_start' (at pp.c:4810)
            Compound:  (at pp.c:4811)
              While:  (at pp.c:4812)
                BinaryOp: op='==' (at pp.c:4812)
                  Assignment: op='=' (at pp.c:4812)
                    ID: name='nextTask' (at pp.c:4812)
                    FuncCall:  (at None)
                      ID: name='SchedulerBasicP__popTask' (at pp.c:4812)
                  ID: name='SchedulerBasicP__NO_TASK' (at pp.c:4812)
                Compound:  (at pp.c:4813)
                  FuncCall:  (at None)
                    ID: name='SchedulerBasicP__McuSleep__sleep' (at pp.c:4814)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:4818)
              ExprList:  (at pp.c:4818)
                ID: name='__nesc_atomic' (at pp.c:4818)
          FuncCall:  (at None)
            ID: name='SchedulerBasicP__TaskBasic__runTask' (at pp.c:4819)
            ExprList:  (at pp.c:4819)
              ID: name='nextTask' (at pp.c:4819)
  FuncDef:  (at pp.c:4824)
    Decl: name='RealMainP__Scheduler__taskLoop', quals=[], storage=['static', 'inline'] (at pp.c:4824)
      FuncDecl: quals=None (at pp.c:4824)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__Scheduler__taskLoop', quals=[] (at pp.c:4824)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4824)
      FuncCall:  (at None)
        ID: name='SchedulerBasicP__Scheduler__taskLoop' (at pp.c:4826)
  FuncDef:  (at pp.c:4831)
    Decl: name='__nesc_atomic_start', quals=[], storage=[] (at pp.c:4831)
      FuncDecl: quals=None (at pp.c:4831)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_atomic_start', quals=[] (at pp.c:4831)
          IdentifierType: names=['__nesc_atomic_t'] (at None)
    Compound:  (at pp.c:4832)
      Decl: name='result', quals=[], storage=[] (at pp.c:4833)
        TypeDecl: declname='result', quals=[] (at pp.c:4833)
          IdentifierType: names=['__nesc_atomic_t'] (at None)
        BinaryOp: op='!=' (at pp.c:4833)
          BinaryOp: op='&' (at pp.c:4833)
            Compound:  (at pp.c:4833)
              Decl: name='__x', quals=[], storage=[] (at pp.c:4835)
                TypeDecl: declname='__x', quals=[] (at pp.c:4835)
                  IdentifierType: names=['uint16_t'] (at None)
              Assignment: op='=' (at None)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                  ID: name='__x' (at pp.c:4838)
                ID: name='_R2' (at pp.c:4838)
              ID: name='__x' (at pp.c:4838)
            Constant: type='int', value='0x0008' (at pp.c:4842)
          Constant: type='int', value='0' (at pp.c:4842)
      FuncCall:  (at None)
        ID: name='__nesc_disable_interrupt' (at pp.c:4845)
      Return:  (at pp.c:4847)
        ID: name='result' (at pp.c:4847)
  FuncDef:  (at pp.c:4850)
    Decl: name='__nesc_atomic_end', quals=[], storage=[] (at pp.c:4850)
      FuncDecl: quals=None (at pp.c:4850)
        ParamList:  (at pp.c:4850)
          Decl: name='reenable_interrupts', quals=[], storage=[] (at pp.c:4850)
            TypeDecl: declname='reenable_interrupts', quals=[] (at pp.c:4850)
              IdentifierType: names=['__nesc_atomic_t'] (at None)
        TypeDecl: declname='__nesc_atomic_end', quals=[] (at pp.c:4850)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4851)
      If:  (at pp.c:4853)
        ID: name='reenable_interrupts' (at pp.c:4853)
        Compound:  (at pp.c:4853)
          FuncCall:  (at None)
            ID: name='__nesc_enable_interrupt' (at pp.c:4854)
  FuncDef:  (at pp.c:4859)
    Decl: name='sig_TIMERA0_VECTOR', quals=[], storage=[] (at pp.c:4859)
      FuncDecl: quals=None (at pp.c:4859)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_TIMERA0_VECTOR', quals=[] (at pp.c:4859)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4861)
      FuncCall:  (at None)
        ID: name='Msp430TimerCommonP__VectorTimerA0__fired' (at pp.c:4863)
  FuncDef:  (at pp.c:4867)
    Decl: name='Msp430TimerCapComP__0__Event__fired', quals=[], storage=['static'] (at pp.c:4867)
      FuncDecl: quals=None (at pp.c:4867)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Event__fired', quals=[] (at pp.c:4867)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4868)
      If:  (at pp.c:4869)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__0__Control__getControl' (at pp.c:4869)
          ID: name='cap' (at pp.c:4869)
        Compound:  (at pp.c:4869)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__0__Capture__captured' (at pp.c:4870)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__0__Capture__getEvent' (at pp.c:4870)
        Compound:  (at pp.c:4872)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__0__Compare__fired' (at pp.c:4874)
  FuncDef:  (at pp.c:4879)
    Decl: name='Msp430TimerCapComP__1__Event__fired', quals=[], storage=['static'] (at pp.c:4879)
      FuncDecl: quals=None (at pp.c:4879)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Event__fired', quals=[] (at pp.c:4879)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4880)
      If:  (at pp.c:4881)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__1__Control__getControl' (at pp.c:4881)
          ID: name='cap' (at pp.c:4881)
        Compound:  (at pp.c:4881)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__1__Capture__captured' (at pp.c:4882)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__1__Capture__getEvent' (at pp.c:4882)
        Compound:  (at pp.c:4884)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__1__Compare__fired' (at pp.c:4886)
  FuncDef:  (at pp.c:4891)
    Decl: name='Msp430TimerCapComP__2__Event__fired', quals=[], storage=['static'] (at pp.c:4891)
      FuncDecl: quals=None (at pp.c:4891)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Event__fired', quals=[] (at pp.c:4891)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4892)
      If:  (at pp.c:4893)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__2__Control__getControl' (at pp.c:4893)
          ID: name='cap' (at pp.c:4893)
        Compound:  (at pp.c:4893)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__2__Capture__captured' (at pp.c:4894)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__2__Capture__getEvent' (at pp.c:4894)
        Compound:  (at pp.c:4896)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__2__Compare__fired' (at pp.c:4898)
  FuncDef:  (at pp.c:4903)
    Decl: name='sig_TIMERA1_VECTOR', quals=[], storage=[] (at pp.c:4903)
      FuncDecl: quals=None (at pp.c:4903)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_TIMERA1_VECTOR', quals=[] (at pp.c:4903)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4905)
      FuncCall:  (at None)
        ID: name='Msp430TimerCommonP__VectorTimerA1__fired' (at pp.c:4907)
  FuncDef:  (at pp.c:4911)
    Decl: name='sig_TIMERB0_VECTOR', quals=[], storage=[] (at pp.c:4911)
      FuncDecl: quals=None (at pp.c:4911)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_TIMERB0_VECTOR', quals=[] (at pp.c:4911)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4913)
      FuncCall:  (at None)
        ID: name='Msp430TimerCommonP__VectorTimerB0__fired' (at pp.c:4915)
  FuncDef:  (at pp.c:4919)
    Decl: name='Msp430TimerP__1__Event__default__fired', quals=[], storage=['static'] (at pp.c:4919)
      FuncDecl: quals=None (at pp.c:4919)
        ParamList:  (at pp.c:4919)
          Decl: name='n', quals=[], storage=[] (at pp.c:4919)
            TypeDecl: declname='n', quals=[] (at pp.c:4919)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Event__default__fired', quals=[] (at pp.c:4919)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4920)
  FuncDef:  (at pp.c:4924)
    Decl: name='Msp430TimerP__1__Event__fired', quals=[], storage=['static'] (at pp.c:4924)
      FuncDecl: quals=None (at pp.c:4924)
        ParamList:  (at pp.c:4924)
          Decl: name='arg_0x101409020', quals=[], storage=[] (at pp.c:4924)
            TypeDecl: declname='arg_0x101409020', quals=[] (at pp.c:4924)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Event__fired', quals=[] (at pp.c:4924)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4924)
      Switch:  (at pp.c:4926)
        ID: name='arg_0x101409020' (at pp.c:4926)
        Compound:  (at pp.c:4926)
          Case:  (at pp.c:4928)
            Constant: type='int', value='0' (at pp.c:4928)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__3__Event__fired' (at pp.c:4930)
          Break:  (at pp.c:4932)
          Case:  (at pp.c:4934)
            Constant: type='int', value='1' (at pp.c:4934)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__4__Event__fired' (at pp.c:4936)
          Break:  (at pp.c:4938)
          Case:  (at pp.c:4940)
            Constant: type='int', value='2' (at pp.c:4940)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__5__Event__fired' (at pp.c:4942)
          Break:  (at pp.c:4944)
          Case:  (at pp.c:4946)
            Constant: type='int', value='3' (at pp.c:4946)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__6__Event__fired' (at pp.c:4948)
          Break:  (at pp.c:4950)
          Case:  (at pp.c:4952)
            Constant: type='int', value='4' (at pp.c:4952)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__7__Event__fired' (at pp.c:4954)
          Break:  (at pp.c:4956)
          Case:  (at pp.c:4958)
            Constant: type='int', value='5' (at pp.c:4958)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__8__Event__fired' (at pp.c:4960)
          Break:  (at pp.c:4962)
          Case:  (at pp.c:4964)
            Constant: type='int', value='6' (at pp.c:4964)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__9__Event__fired' (at pp.c:4966)
          Break:  (at pp.c:4968)
          Case:  (at pp.c:4970)
            Constant: type='int', value='7' (at pp.c:4970)
            FuncCall:  (at None)
              ID: name='Msp430TimerP__1__Overflow__fired' (at pp.c:4972)
          Break:  (at pp.c:4974)
          Default:  (at pp.c:4976)
            FuncCall:  (at None)
              ID: name='Msp430TimerP__1__Event__default__fired' (at pp.c:4978)
              ExprList:  (at pp.c:4978)
                ID: name='arg_0x101409020' (at pp.c:4978)
          Break:  (at pp.c:4980)
  FuncDef:  (at pp.c:4987)
    Decl: name='SchedulerBasicP__TaskBasic__postTask', quals=[], storage=['static'] (at pp.c:4987)
      FuncDecl: quals=None (at pp.c:4987)
        ParamList:  (at pp.c:4987)
          Decl: name='id', quals=[], storage=[] (at pp.c:4987)
            TypeDecl: declname='id', quals=[] (at pp.c:4987)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SchedulerBasicP__TaskBasic__postTask', quals=[] (at pp.c:4987)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:4988)
      Compound:  (at pp.c:4989)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:4989)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:4989)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:4989)
        Compound:  (at pp.c:4991)
          Compound:  (at pp.c:4993)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:4994)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:4994)
                IdentifierType: names=['char', 'unsigned'] (at None)
              TernaryOp:  (at None)
                FuncCall:  (at None)
                  ID: name='SchedulerBasicP__pushTask' (at pp.c:4996)
                  ExprList:  (at pp.c:4996)
                    ID: name='id' (at pp.c:4996)
                ID: name='SUCCESS' (at pp.c:4996)
                ID: name='EBUSY' (at pp.c:4996)
            Compound:  (at pp.c:4998)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_end' (at pp.c:5000)
                ExprList:  (at pp.c:5000)
                  ID: name='__nesc_atomic' (at pp.c:5000)
              Return:  (at pp.c:5002)
                ID: name='__nesc_temp' (at pp.c:5002)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:5007)
          ExprList:  (at pp.c:5007)
            ID: name='__nesc_atomic' (at pp.c:5007)
  FuncDef:  (at pp.c:5011)
    Decl: name='TransformAlarmC__0__set_alarm', quals=[], storage=['static'] (at pp.c:5011)
      FuncDecl: quals=None (at pp.c:5011)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__set_alarm', quals=[] (at pp.c:5011)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5012)
      Decl: name='now', quals=[], storage=[] (at pp.c:5013)
        TypeDecl: declname='now', quals=[] (at pp.c:5013)
          IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__0__Counter__get' (at pp.c:5013)
      Decl: name='expires', quals=[], storage=[] (at pp.c:5015)
        TypeDecl: declname='expires', quals=[] (at pp.c:5015)
          IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
      Decl: name='remaining', quals=[], storage=[] (at pp.c:5017)
        TypeDecl: declname='remaining', quals=[] (at pp.c:5017)
          IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
      Assignment: op='=' (at pp.c:5022)
        ID: name='expires' (at pp.c:5022)
        BinaryOp: op='+' (at pp.c:5022)
          ID: name='TransformAlarmC__0__m_t0' (at pp.c:5022)
          ID: name='TransformAlarmC__0__m_dt' (at pp.c:5022)
      Assignment: op='=' (at pp.c:5025)
        ID: name='remaining' (at pp.c:5025)
        Cast:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
          BinaryOp: op='-' (at pp.c:5025)
            ID: name='expires' (at pp.c:5025)
            ID: name='now' (at pp.c:5025)
      If:  (at pp.c:5028)
        BinaryOp: op='<=' (at pp.c:5028)
          ID: name='TransformAlarmC__0__m_t0' (at pp.c:5028)
          ID: name='now' (at pp.c:5028)
        Compound:  (at pp.c:5029)
          If:  (at pp.c:5030)
            BinaryOp: op='&&' (at pp.c:5030)
              BinaryOp: op='>=' (at pp.c:5030)
                ID: name='expires' (at pp.c:5030)
                ID: name='TransformAlarmC__0__m_t0' (at pp.c:5030)
              BinaryOp: op='<=' (at pp.c:5031)
                ID: name='expires' (at pp.c:5031)
                ID: name='now' (at pp.c:5031)
            Compound:  (at pp.c:5031)
              Assignment: op='=' (at pp.c:5032)
                ID: name='remaining' (at pp.c:5032)
                Constant: type='int', value='0' (at pp.c:5032)
        Compound:  (at pp.c:5035)
          If:  (at pp.c:5036)
            BinaryOp: op='||' (at pp.c:5036)
              BinaryOp: op='>=' (at pp.c:5036)
                ID: name='expires' (at pp.c:5036)
                ID: name='TransformAlarmC__0__m_t0' (at pp.c:5036)
              BinaryOp: op='<=' (at pp.c:5037)
                ID: name='expires' (at pp.c:5037)
                ID: name='now' (at pp.c:5037)
            Compound:  (at pp.c:5037)
              Assignment: op='=' (at pp.c:5038)
                ID: name='remaining' (at pp.c:5038)
                Constant: type='int', value='0' (at pp.c:5038)
      If:  (at pp.c:5042)
        BinaryOp: op='>' (at pp.c:5042)
          ID: name='remaining' (at pp.c:5042)
          ID: name='TransformAlarmC__0__MAX_DELAY' (at pp.c:5042)
        Compound:  (at pp.c:5043)
          Assignment: op='=' (at pp.c:5044)
            ID: name='TransformAlarmC__0__m_t0' (at pp.c:5044)
            BinaryOp: op='+' (at pp.c:5044)
              ID: name='now' (at pp.c:5044)
              ID: name='TransformAlarmC__0__MAX_DELAY' (at pp.c:5044)
          Assignment: op='=' (at pp.c:5045)
            ID: name='TransformAlarmC__0__m_dt' (at pp.c:5045)
            BinaryOp: op='-' (at pp.c:5045)
              ID: name='remaining' (at pp.c:5045)
              ID: name='TransformAlarmC__0__MAX_DELAY' (at pp.c:5045)
          Assignment: op='=' (at pp.c:5046)
            ID: name='remaining' (at pp.c:5046)
            ID: name='TransformAlarmC__0__MAX_DELAY' (at pp.c:5046)
        Compound:  (at pp.c:5049)
          Assignment: op='+=' (at pp.c:5050)
            ID: name='TransformAlarmC__0__m_t0' (at pp.c:5050)
            ID: name='TransformAlarmC__0__m_dt' (at pp.c:5050)
          Assignment: op='=' (at pp.c:5051)
            ID: name='TransformAlarmC__0__m_dt' (at pp.c:5051)
            Constant: type='int', value='0' (at pp.c:5051)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__AlarmFrom__startAt' (at pp.c:5053)
        ExprList:  (at None)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__0__from_size_type'] (at None)
              ID: name='now' (at pp.c:5053)
            Constant: type='int', value='5' (at pp.c:5053)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__0__from_size_type'] (at None)
              ID: name='remaining' (at pp.c:5054)
            Constant: type='int', value='5' (at pp.c:5054)
  FuncDef:  (at pp.c:5058)
    Decl: name='TransformCounterC__0__Counter__get', quals=[], storage=['static'] (at pp.c:5058)
      FuncDecl: quals=None (at pp.c:5058)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__0__Counter__get', quals=[] (at pp.c:5058)
          IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
    Compound:  (at pp.c:5059)
      Decl: name='rv', quals=[], storage=[] (at pp.c:5060)
        TypeDecl: declname='rv', quals=[] (at pp.c:5060)
          IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
        Constant: type='int', value='0' (at pp.c:5060)
      Compound:  (at pp.c:5063)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:5063)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:5063)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:5063)
        Compound:  (at pp.c:5064)
          Decl: name='high', quals=[], storage=[] (at pp.c:5065)
            TypeDecl: declname='high', quals=[] (at pp.c:5065)
              IdentifierType: names=['TransformCounterC__0__upper_count_type'] (at None)
            ID: name='TransformCounterC__0__m_upper' (at pp.c:5065)
          Decl: name='low', quals=[], storage=[] (at pp.c:5066)
            TypeDecl: declname='low', quals=[] (at pp.c:5066)
              IdentifierType: names=['TransformCounterC__0__from_size_type'] (at None)
            FuncCall:  (at None)
              ID: name='TransformCounterC__0__CounterFrom__get' (at pp.c:5066)
          If:  (at pp.c:5069)
            FuncCall:  (at None)
              ID: name='TransformCounterC__0__CounterFrom__isOverflowPending' (at pp.c:5069)
            Compound:  (at pp.c:5070)
              UnaryOp: op='p++' (at pp.c:5077)
                ID: name='high' (at pp.c:5077)
              Assignment: op='=' (at pp.c:5078)
                ID: name='low' (at pp.c:5078)
                FuncCall:  (at None)
                  ID: name='TransformCounterC__0__CounterFrom__get' (at pp.c:5078)
          Compound:  (at pp.c:5080)
            Decl: name='high_to', quals=[], storage=[] (at pp.c:5081)
              TypeDecl: declname='high_to', quals=[] (at pp.c:5081)
                IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
              ID: name='high' (at pp.c:5081)
            Decl: name='low_to', quals=[], storage=[] (at pp.c:5082)
              TypeDecl: declname='low_to', quals=[] (at pp.c:5082)
                IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
              BinaryOp: op='>>' (at pp.c:5082)
                ID: name='low' (at pp.c:5082)
                ID: name='TransformCounterC__0__LOW_SHIFT_RIGHT' (at pp.c:5082)
            Assignment: op='=' (at pp.c:5085)
              ID: name='rv' (at pp.c:5085)
              BinaryOp: op='|' (at pp.c:5085)
                BinaryOp: op='<<' (at pp.c:5085)
                  ID: name='high_to' (at pp.c:5085)
                  ID: name='TransformCounterC__0__HIGH_SHIFT_LEFT' (at pp.c:5085)
                ID: name='low_to' (at pp.c:5085)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:5089)
          ExprList:  (at pp.c:5089)
            ID: name='__nesc_atomic' (at pp.c:5089)
      Return:  (at pp.c:5090)
        ID: name='rv' (at pp.c:5090)
  FuncDef:  (at pp.c:5094)
    Decl: name='Msp430TimerP__1__Timer__get', quals=[], storage=['static'] (at pp.c:5094)
      FuncDecl: quals=None (at pp.c:5094)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Timer__get', quals=[] (at pp.c:5094)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:5095)
      If:  (at pp.c:5100)
        Constant: type='int', value='1' (at pp.c:5100)
        Compound:  (at pp.c:5100)
          Compound:  (at pp.c:5103)
            Decl: name='t0', quals=[], storage=[] (at pp.c:5104)
              TypeDecl: declname='t0', quals=[] (at pp.c:5104)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t1', quals=[], storage=[] (at pp.c:5105)
              TypeDecl: declname='t1', quals=[] (at pp.c:5105)
                IdentifierType: names=['uint16_t'] (at None)
              UnaryOp: op='*' (at None)
                Cast:  (at None)
                  Typename: quals=['volatile'] (at None)
                    PtrDecl: quals=[] (at pp.c:5105)
                      TypeDecl: declname=None, quals=['volatile'] (at None)
                        IdentifierType: names=['uint16_t'] (at None)
                  Constant: type='int', value='400U' (at pp.c:5105)
            DoWhile:  (at pp.c:5108)
              BinaryOp: op='!=' (at pp.c:5116)
                ID: name='t0' (at pp.c:5116)
                ID: name='t1' (at pp.c:5116)
              Compound:  (at pp.c:5108)
                Assignment: op='=' (at pp.c:5110)
                  ID: name='t0' (at pp.c:5110)
                  ID: name='t1' (at pp.c:5110)
                Assignment: op='=' (at pp.c:5112)
                  ID: name='t1' (at pp.c:5112)
                  UnaryOp: op='*' (at None)
                    Cast:  (at None)
                      Typename: quals=['volatile'] (at None)
                        PtrDecl: quals=[] (at pp.c:5112)
                          TypeDecl: declname=None, quals=['volatile'] (at None)
                            IdentifierType: names=['uint16_t'] (at None)
                      Constant: type='int', value='400U' (at pp.c:5112)
            Compound:  (at pp.c:5117)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:5118)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:5118)
                  IdentifierType: names=['int', 'unsigned'] (at None)
                ID: name='t1' (at pp.c:5120)
              Return:  (at pp.c:5123)
                ID: name='__nesc_temp' (at pp.c:5123)
        Compound:  (at pp.c:5129)
          Return:  (at pp.c:5130)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:5130)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='400U' (at pp.c:5130)
  FuncDef:  (at pp.c:5135)
    Decl: name='sig_TIMERB1_VECTOR', quals=[], storage=[] (at pp.c:5135)
      FuncDecl: quals=None (at pp.c:5135)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_TIMERB1_VECTOR', quals=[] (at pp.c:5135)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5137)
      FuncCall:  (at None)
        ID: name='Msp430TimerCommonP__VectorTimerB1__fired' (at pp.c:5139)
  FuncDef:  (at pp.c:5143)
    Decl: name='main', quals=[], storage=[] (at pp.c:5143)
      FuncDecl: quals=None (at pp.c:5143)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='main', quals=[] (at pp.c:5143)
          IdentifierType: names=['int'] (at None)
    Compound:  (at pp.c:5145)
      Compound:  (at pp.c:5146)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:5146)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:5146)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:5146)
        Compound:  (at pp.c:5147)
          Compound:  (at pp.c:5153)
          FuncCall:  (at None)
            ID: name='RealMainP__Scheduler__init' (at pp.c:5158)
          FuncCall:  (at None)
            ID: name='RealMainP__PlatformInit__init' (at pp.c:5164)
          While:  (at pp.c:5165)
            FuncCall:  (at None)
              ID: name='RealMainP__Scheduler__runNextTask' (at pp.c:5165)
          FuncCall:  (at None)
            ID: name='RealMainP__SoftwareInit__init' (at pp.c:5171)
          While:  (at pp.c:5172)
            FuncCall:  (at None)
              ID: name='RealMainP__Scheduler__runNextTask' (at pp.c:5172)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:5175)
          ExprList:  (at pp.c:5175)
            ID: name='__nesc_atomic' (at pp.c:5175)
      FuncCall:  (at None)
        ID: name='__nesc_enable_interrupt' (at pp.c:5178)
      FuncCall:  (at None)
        ID: name='RealMainP__Boot__booted' (at pp.c:5180)
      FuncCall:  (at None)
        ID: name='RealMainP__Scheduler__taskLoop' (at pp.c:5183)
      Return:  (at pp.c:5188)
        UnaryOp: op='-' (at pp.c:5188)
          Constant: type='int', value='1' (at pp.c:5188)
  FuncDef:  (at pp.c:5192)
    Decl: name='Msp430ClockP__set_dco_calib', quals=[], storage=['static'] (at pp.c:5192)
      FuncDecl: quals=None (at pp.c:5192)
        ParamList:  (at pp.c:5192)
          Decl: name='calib', quals=[], storage=[] (at pp.c:5192)
            TypeDecl: declname='calib', quals=[] (at pp.c:5192)
              IdentifierType: names=['int'] (at None)
        TypeDecl: declname='Msp430ClockP__set_dco_calib', quals=[] (at pp.c:5192)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5193)
      Assignment: op='=' (at pp.c:5194)
        ID: name='BCSCTL1' (at pp.c:5194)
        BinaryOp: op='|' (at pp.c:5194)
          BinaryOp: op='&' (at pp.c:5194)
            ID: name='BCSCTL1' (at pp.c:5194)
            UnaryOp: op='~' (at pp.c:5194)
              Constant: type='int', value='0x07' (at pp.c:5194)
          BinaryOp: op='&' (at pp.c:5194)
            BinaryOp: op='>>' (at pp.c:5194)
              ID: name='calib' (at pp.c:5194)
              Constant: type='int', value='8' (at pp.c:5194)
            Constant: type='int', value='0x07' (at pp.c:5194)
      Assignment: op='=' (at pp.c:5195)
        ID: name='DCOCTL' (at pp.c:5195)
        BinaryOp: op='&' (at pp.c:5195)
          ID: name='calib' (at pp.c:5195)
          Constant: type='int', value='0xff' (at pp.c:5195)
  FuncDef:  (at pp.c:5199)
    Decl: name='SchedulerBasicP__Scheduler__runNextTask', quals=[], storage=['static'] (at pp.c:5199)
      FuncDecl: quals=None (at pp.c:5199)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SchedulerBasicP__Scheduler__runNextTask', quals=[] (at pp.c:5199)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:5200)
      Decl: name='nextTask', quals=[], storage=[] (at pp.c:5201)
        TypeDecl: declname='nextTask', quals=[] (at pp.c:5201)
          IdentifierType: names=['uint8_t'] (at None)
      Compound:  (at pp.c:5205)
        Assignment: op='=' (at pp.c:5206)
          ID: name='nextTask' (at pp.c:5206)
          FuncCall:  (at None)
            ID: name='SchedulerBasicP__popTask' (at pp.c:5206)
        If:  (at pp.c:5207)
          BinaryOp: op='==' (at pp.c:5207)
            ID: name='nextTask' (at pp.c:5207)
            ID: name='SchedulerBasicP__NO_TASK' (at pp.c:5207)
          Compound:  (at pp.c:5208)
            Compound:  (at pp.c:5209)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:5210)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:5210)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='FALSE' (at pp.c:5212)
              Return:  (at pp.c:5215)
                ID: name='__nesc_temp' (at pp.c:5215)
      FuncCall:  (at None)
        ID: name='SchedulerBasicP__TaskBasic__runTask' (at pp.c:5220)
        ExprList:  (at pp.c:5220)
          ID: name='nextTask' (at pp.c:5220)
      Return:  (at pp.c:5221)
        ID: name='TRUE' (at pp.c:5221)
  FuncDef:  (at pp.c:5225)
    Decl: name='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[], storage=['static'] (at pp.c:5225)
      FuncDecl: quals=None (at pp.c:5225)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[] (at pp.c:5225)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5226)
      Decl: name='now', quals=[], storage=[] (at pp.c:5231)
        TypeDecl: declname='now', quals=[] (at pp.c:5231)
          IdentifierType: names=['uint32_t'] (at None)
        FuncCall:  (at None)
          ID: name='VirtualizeTimerC__0__TimerFrom__getNow' (at pp.c:5231)
      Decl: name='min_remaining', quals=[], storage=[] (at pp.c:5232)
        TypeDecl: declname='min_remaining', quals=[] (at pp.c:5232)
          IdentifierType: names=['int32_t'] (at None)
        BinaryOp: op='-' (at pp.c:5232)
          BinaryOp: op='<<' (at pp.c:5232)
            Constant: type='int', value='1UL' (at pp.c:5232)
            Constant: type='int', value='31' (at pp.c:5232)
          Constant: type='int', value='1' (at pp.c:5232)
      Decl: name='min_remaining_isset', quals=[], storage=[] (at pp.c:5233)
        TypeDecl: declname='min_remaining_isset', quals=[] (at pp.c:5233)
          IdentifierType: names=['bool'] (at None)
        ID: name='FALSE' (at pp.c:5233)
      Decl: name='num', quals=[], storage=[] (at pp.c:5234)
        TypeDecl: declname='num', quals=[] (at pp.c:5234)
          IdentifierType: names=['uint8_t'] (at None)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__TimerFrom__stop' (at pp.c:5236)
      For:  (at pp.c:5238)
        Assignment: op='=' (at pp.c:5238)
          ID: name='num' (at pp.c:5238)
          Constant: type='int', value='0' (at pp.c:5238)
        BinaryOp: op='<' (at pp.c:5238)
          ID: name='num' (at pp.c:5238)
          ID: name='VirtualizeTimerC__0__NUM_TIMERS' (at pp.c:5238)
        UnaryOp: op='p++' (at pp.c:5238)
          ID: name='num' (at pp.c:5238)
        Compound:  (at pp.c:5239)
          Decl: name='timer', quals=[], storage=[] (at pp.c:5240)
            PtrDecl: quals=[] (at pp.c:5240)
              TypeDecl: declname='timer', quals=[] (at pp.c:5240)
                IdentifierType: names=['VirtualizeTimerC__0__Timer_t'] (at None)
            UnaryOp: op='&' (at pp.c:5240)
              ArrayRef:  (at pp.c:5240)
                ID: name='VirtualizeTimerC__0__m_timers' (at pp.c:5240)
                ID: name='num' (at pp.c:5240)
          If:  (at pp.c:5242)
            StructRef: type='->' (at pp.c:5242)
              ID: name='timer' (at pp.c:5242)
              ID: name='isrunning' (at pp.c:5242)
            Compound:  (at pp.c:5243)
              Decl: name='elapsed', quals=[], storage=[] (at pp.c:5244)
                TypeDecl: declname='elapsed', quals=[] (at pp.c:5244)
                  IdentifierType: names=['uint32_t'] (at None)
                BinaryOp: op='-' (at pp.c:5244)
                  ID: name='now' (at pp.c:5244)
                  StructRef: type='->' (at pp.c:5244)
                    ID: name='timer' (at pp.c:5244)
                    ID: name='t0' (at pp.c:5244)
              Decl: name='remaining', quals=[], storage=[] (at pp.c:5245)
                TypeDecl: declname='remaining', quals=[] (at pp.c:5245)
                  IdentifierType: names=['int32_t'] (at None)
                BinaryOp: op='-' (at pp.c:5245)
                  StructRef: type='->' (at pp.c:5245)
                    ID: name='timer' (at pp.c:5245)
                    ID: name='dt' (at pp.c:5245)
                  ID: name='elapsed' (at pp.c:5245)
              If:  (at pp.c:5247)
                BinaryOp: op='<' (at pp.c:5247)
                  ID: name='remaining' (at pp.c:5247)
                  ID: name='min_remaining' (at pp.c:5247)
                Compound:  (at pp.c:5248)
                  Assignment: op='=' (at pp.c:5249)
                    ID: name='min_remaining' (at pp.c:5249)
                    ID: name='remaining' (at pp.c:5249)
                  Assignment: op='=' (at pp.c:5250)
                    ID: name='min_remaining_isset' (at pp.c:5250)
                    ID: name='TRUE' (at pp.c:5250)
      If:  (at pp.c:5255)
        ID: name='min_remaining_isset' (at pp.c:5255)
        Compound:  (at pp.c:5256)
          If:  (at pp.c:5257)
            BinaryOp: op='<=' (at pp.c:5257)
              ID: name='min_remaining' (at pp.c:5257)
              Constant: type='int', value='0' (at pp.c:5257)
            Compound:  (at pp.c:5257)
              FuncCall:  (at None)
                ID: name='VirtualizeTimerC__0__fireTimers' (at pp.c:5258)
                ExprList:  (at pp.c:5258)
                  ID: name='now' (at pp.c:5258)
            Compound:  (at pp.c:5260)
              FuncCall:  (at None)
                ID: name='VirtualizeTimerC__0__TimerFrom__startOneShotAt' (at pp.c:5262)
                ExprList:  (at pp.c:5262)
                  ID: name='now' (at pp.c:5262)
                  ID: name='min_remaining' (at pp.c:5262)
  FuncDef:  (at pp.c:5268)
    Decl: name='VirtualizeTimerC__0__fireTimers', quals=[], storage=['static'] (at pp.c:5268)
      FuncDecl: quals=None (at pp.c:5268)
        ParamList:  (at pp.c:5268)
          Decl: name='now', quals=[], storage=[] (at pp.c:5268)
            TypeDecl: declname='now', quals=[] (at pp.c:5268)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__fireTimers', quals=[] (at pp.c:5268)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5269)
      Decl: name='num', quals=[], storage=[] (at pp.c:5270)
        TypeDecl: declname='num', quals=[] (at pp.c:5270)
          IdentifierType: names=['uint8_t'] (at None)
      For:  (at pp.c:5272)
        Assignment: op='=' (at pp.c:5272)
          ID: name='num' (at pp.c:5272)
          Constant: type='int', value='0' (at pp.c:5272)
        BinaryOp: op='<' (at pp.c:5272)
          ID: name='num' (at pp.c:5272)
          ID: name='VirtualizeTimerC__0__NUM_TIMERS' (at pp.c:5272)
        UnaryOp: op='p++' (at pp.c:5272)
          ID: name='num' (at pp.c:5272)
        Compound:  (at pp.c:5273)
          Decl: name='timer', quals=[], storage=[] (at pp.c:5274)
            PtrDecl: quals=[] (at pp.c:5274)
              TypeDecl: declname='timer', quals=[] (at pp.c:5274)
                IdentifierType: names=['VirtualizeTimerC__0__Timer_t'] (at None)
            UnaryOp: op='&' (at pp.c:5274)
              ArrayRef:  (at pp.c:5274)
                ID: name='VirtualizeTimerC__0__m_timers' (at pp.c:5274)
                ID: name='num' (at pp.c:5274)
          If:  (at pp.c:5276)
            StructRef: type='->' (at pp.c:5276)
              ID: name='timer' (at pp.c:5276)
              ID: name='isrunning' (at pp.c:5276)
            Compound:  (at pp.c:5277)
              Decl: name='elapsed', quals=[], storage=[] (at pp.c:5278)
                TypeDecl: declname='elapsed', quals=[] (at pp.c:5278)
                  IdentifierType: names=['uint32_t'] (at None)
                BinaryOp: op='-' (at pp.c:5278)
                  ID: name='now' (at pp.c:5278)
                  StructRef: type='->' (at pp.c:5278)
                    ID: name='timer' (at pp.c:5278)
                    ID: name='t0' (at pp.c:5278)
              If:  (at pp.c:5280)
                BinaryOp: op='>=' (at pp.c:5280)
                  ID: name='elapsed' (at pp.c:5280)
                  StructRef: type='->' (at pp.c:5280)
                    ID: name='timer' (at pp.c:5280)
                    ID: name='dt' (at pp.c:5280)
                Compound:  (at pp.c:5281)
                  If:  (at pp.c:5282)
                    StructRef: type='->' (at pp.c:5282)
                      ID: name='timer' (at pp.c:5282)
                      ID: name='isoneshot' (at pp.c:5282)
                    Compound:  (at pp.c:5282)
                      Assignment: op='=' (at pp.c:5283)
                        StructRef: type='->' (at pp.c:5283)
                          ID: name='timer' (at pp.c:5283)
                          ID: name='isrunning' (at pp.c:5283)
                        ID: name='FALSE' (at pp.c:5283)
                    Compound:  (at pp.c:5285)
                      Assignment: op='+=' (at pp.c:5287)
                        StructRef: type='->' (at pp.c:5287)
                          ID: name='timer' (at pp.c:5287)
                          ID: name='t0' (at pp.c:5287)
                        StructRef: type='->' (at pp.c:5287)
                          ID: name='timer' (at pp.c:5287)
                          ID: name='dt' (at pp.c:5287)
                  FuncCall:  (at None)
                    ID: name='VirtualizeTimerC__0__Timer__fired' (at pp.c:5289)
                    ExprList:  (at pp.c:5289)
                      ID: name='num' (at pp.c:5289)
                  Break:  (at pp.c:5290)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__updateFromTimer__postTask' (at pp.c:5294)
  FuncDef:  (at pp.c:5298)
    Decl: name='TransformAlarmC__0__Alarm__startAt', quals=[], storage=['static'] (at pp.c:5298)
      FuncDecl: quals=None (at pp.c:5298)
        ParamList:  (at pp.c:5298)
          Decl: name='t0', quals=[], storage=[] (at pp.c:5298)
            TypeDecl: declname='t0', quals=[] (at pp.c:5298)
              IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:5298)
            TypeDecl: declname='dt', quals=[] (at pp.c:5298)
              IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Alarm__startAt', quals=[] (at pp.c:5298)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5299)
      Compound:  (at pp.c:5300)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:5300)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:5300)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:5300)
        Compound:  (at pp.c:5301)
          Assignment: op='=' (at pp.c:5302)
            ID: name='TransformAlarmC__0__m_t0' (at pp.c:5302)
            ID: name='t0' (at pp.c:5302)
          Assignment: op='=' (at pp.c:5303)
            ID: name='TransformAlarmC__0__m_dt' (at pp.c:5303)
            ID: name='dt' (at pp.c:5303)
          FuncCall:  (at None)
            ID: name='TransformAlarmC__0__set_alarm' (at pp.c:5304)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:5307)
          ExprList:  (at pp.c:5307)
            ID: name='__nesc_atomic' (at pp.c:5307)
  FuncDef:  (at pp.c:5311)
    Decl: name='AlarmToTimerC__0__fired__runTask', quals=[], storage=['static'] (at pp.c:5311)
      FuncDecl: quals=None (at pp.c:5311)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__fired__runTask', quals=[] (at pp.c:5311)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5312)
      If:  (at pp.c:5313)
        BinaryOp: op='==' (at pp.c:5313)
          ID: name='AlarmToTimerC__0__m_oneshot' (at pp.c:5313)
          ID: name='FALSE' (at pp.c:5313)
        Compound:  (at pp.c:5313)
          FuncCall:  (at None)
            ID: name='AlarmToTimerC__0__start' (at pp.c:5314)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='AlarmToTimerC__0__Alarm__getAlarm' (at pp.c:5314)
              ID: name='AlarmToTimerC__0__m_dt' (at pp.c:5314)
              ID: name='FALSE' (at pp.c:5314)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Timer__fired' (at pp.c:5317)
  FuncDef:  (at pp.c:5321)
    Decl: name='VirtualizeTimerC__0__Timer__startPeriodic', quals=[], storage=['static'] (at pp.c:5321)
      FuncDecl: quals=None (at pp.c:5321)
        ParamList:  (at pp.c:5321)
          Decl: name='num', quals=[], storage=[] (at pp.c:5321)
            TypeDecl: declname='num', quals=[] (at pp.c:5321)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:5321)
            TypeDecl: declname='dt', quals=[] (at pp.c:5321)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__Timer__startPeriodic', quals=[] (at pp.c:5321)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5322)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__startTimer' (at pp.c:5323)
        ExprList:  (at pp.c:5323)
          ID: name='num' (at pp.c:5323)
          FuncCall:  (at None)
            ID: name='VirtualizeTimerC__0__TimerFrom__getNow' (at pp.c:5323)
          ID: name='dt' (at pp.c:5323)
          ID: name='FALSE' (at pp.c:5323)
[Log] Parsed preprocessed file into AST.
