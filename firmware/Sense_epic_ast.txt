[Log] Preprocessed input file.
FileAST:  (at None)
  Typedef: name='ptrdiff_t', quals=[], storage=['typedef'] (at pp.c:7)
    TypeDecl: declname='ptrdiff_t', quals=[] (at pp.c:7)
      IdentifierType: names=['int'] (at None)
  Typedef: name='size_t', quals=[], storage=['typedef'] (at pp.c:9)
    TypeDecl: declname='size_t', quals=[] (at pp.c:9)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='wchar_t', quals=[], storage=['typedef'] (at pp.c:11)
    TypeDecl: declname='wchar_t', quals=[] (at pp.c:11)
      IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:13)
    Struct: name='__nesc_attr_nonnull', packed=False (at pp.c:13)
      Decl: name='dummy', quals=[], storage=[] (at 0)
        TypeDecl: declname='dummy', quals=[] (at pp.c:15)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:18)
    Struct: name='__nesc_attr_bnd', packed=False (at pp.c:18)
      Decl: name='lo', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:20)
          TypeDecl: declname='lo', quals=[] (at pp.c:20)
            IdentifierType: names=['void'] (at None)
      Decl: name='hi', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:20)
          TypeDecl: declname='hi', quals=[] (at pp.c:20)
            IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:23)
    Struct: name='__nesc_attr_bnd_nok', packed=False (at pp.c:23)
      Decl: name='lo', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:25)
          TypeDecl: declname='lo', quals=[] (at pp.c:25)
            IdentifierType: names=['void'] (at None)
      Decl: name='hi', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:25)
          TypeDecl: declname='hi', quals=[] (at pp.c:25)
            IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:28)
    Struct: name='__nesc_attr_count', packed=False (at pp.c:28)
      Decl: name='n', quals=[], storage=[] (at 0)
        TypeDecl: declname='n', quals=[] (at pp.c:30)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:33)
    Struct: name='__nesc_attr_count_nok', packed=False (at pp.c:33)
      Decl: name='n', quals=[], storage=[] (at 0)
        TypeDecl: declname='n', quals=[] (at pp.c:35)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:38)
    Struct: name='__nesc_attr_one', packed=False (at pp.c:38)
      Decl: name='dummy', quals=[], storage=[] (at 0)
        TypeDecl: declname='dummy', quals=[] (at pp.c:40)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:43)
    Struct: name='__nesc_attr_one_nok', packed=False (at pp.c:43)
      Decl: name='dummy', quals=[], storage=[] (at 0)
        TypeDecl: declname='dummy', quals=[] (at pp.c:45)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:48)
    Struct: name='__nesc_attr_dmemset', packed=False (at pp.c:48)
      Decl: name='a1', quals=[], storage=[] (at 0)
        TypeDecl: declname='a1', quals=[] (at pp.c:50)
          IdentifierType: names=['int'] (at None)
      Decl: name='a2', quals=[], storage=[] (at 0)
        TypeDecl: declname='a2', quals=[] (at pp.c:50)
          IdentifierType: names=['int'] (at None)
      Decl: name='a3', quals=[], storage=[] (at 0)
        TypeDecl: declname='a3', quals=[] (at pp.c:50)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:53)
    Struct: name='__nesc_attr_dmemcpy', packed=False (at pp.c:53)
      Decl: name='a1', quals=[], storage=[] (at 0)
        TypeDecl: declname='a1', quals=[] (at pp.c:55)
          IdentifierType: names=['int'] (at None)
      Decl: name='a2', quals=[], storage=[] (at 0)
        TypeDecl: declname='a2', quals=[] (at pp.c:55)
          IdentifierType: names=['int'] (at None)
      Decl: name='a3', quals=[], storage=[] (at 0)
        TypeDecl: declname='a3', quals=[] (at pp.c:55)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:58)
    Struct: name='__nesc_attr_nts', packed=False (at pp.c:58)
      Decl: name='dummy', quals=[], storage=[] (at 0)
        TypeDecl: declname='dummy', quals=[] (at pp.c:60)
          IdentifierType: names=['int'] (at None)
  Typedef: name='int8_t', quals=[], storage=['typedef'] (at pp.c:63)
    TypeDecl: declname='int8_t', quals=[] (at pp.c:63)
      IdentifierType: names=['char', 'signed'] (at None)
  Typedef: name='uint8_t', quals=[], storage=['typedef'] (at pp.c:64)
    TypeDecl: declname='uint8_t', quals=[] (at pp.c:64)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Typedef: name='int16_t', quals=[], storage=['typedef'] (at pp.c:66)
    TypeDecl: declname='int16_t', quals=[] (at pp.c:66)
      IdentifierType: names=['int'] (at None)
  Typedef: name='uint16_t', quals=[], storage=['typedef'] (at pp.c:67)
    TypeDecl: declname='uint16_t', quals=[] (at pp.c:67)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='int32_t', quals=[], storage=['typedef'] (at pp.c:69)
    TypeDecl: declname='int32_t', quals=[] (at pp.c:69)
      IdentifierType: names=['long'] (at None)
  Typedef: name='uint32_t', quals=[], storage=['typedef'] (at pp.c:70)
    TypeDecl: declname='uint32_t', quals=[] (at pp.c:70)
      IdentifierType: names=['long', 'unsigned'] (at None)
  Typedef: name='int64_t', quals=[], storage=['typedef'] (at pp.c:72)
    TypeDecl: declname='int64_t', quals=[] (at pp.c:72)
      IdentifierType: names=['long', 'long'] (at None)
  Typedef: name='uint64_t', quals=[], storage=['typedef'] (at pp.c:73)
    TypeDecl: declname='uint64_t', quals=[] (at pp.c:73)
      IdentifierType: names=['long', 'long', 'unsigned'] (at None)
  Typedef: name='intptr_t', quals=[], storage=['typedef'] (at pp.c:78)
    TypeDecl: declname='intptr_t', quals=[] (at pp.c:78)
      IdentifierType: names=['int16_t'] (at None)
  Typedef: name='uintptr_t', quals=[], storage=['typedef'] (at pp.c:79)
    TypeDecl: declname='uintptr_t', quals=[] (at pp.c:79)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='nx_int8_t', quals=[], storage=['typedef'] (at pp.c:81)
    TypeDecl: declname='nx_int8_t', quals=[] (at pp.c:81)
      Struct: name=None, packed=False (at pp.c:81)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:81)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:81)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='1' (at pp.c:81)
  Typedef: name='__nesc_nxbase_nx_int8_t', quals=[], storage=['typedef'] (at pp.c:81)
    TypeDecl: declname='__nesc_nxbase_nx_int8_t', quals=[] (at pp.c:81)
      IdentifierType: names=['int8_t'] (at None)
  Typedef: name='nx_int16_t', quals=[], storage=['typedef'] (at pp.c:82)
    TypeDecl: declname='nx_int16_t', quals=[] (at pp.c:82)
      Struct: name=None, packed=False (at pp.c:82)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:82)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:82)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='2' (at pp.c:82)
  Typedef: name='__nesc_nxbase_nx_int16_t', quals=[], storage=['typedef'] (at pp.c:82)
    TypeDecl: declname='__nesc_nxbase_nx_int16_t', quals=[] (at pp.c:82)
      IdentifierType: names=['int16_t'] (at None)
  Typedef: name='nx_int32_t', quals=[], storage=['typedef'] (at pp.c:83)
    TypeDecl: declname='nx_int32_t', quals=[] (at pp.c:83)
      Struct: name=None, packed=False (at pp.c:83)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:83)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:83)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='4' (at pp.c:83)
  Typedef: name='__nesc_nxbase_nx_int32_t', quals=[], storage=['typedef'] (at pp.c:83)
    TypeDecl: declname='__nesc_nxbase_nx_int32_t', quals=[] (at pp.c:83)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='nx_int64_t', quals=[], storage=['typedef'] (at pp.c:84)
    TypeDecl: declname='nx_int64_t', quals=[] (at pp.c:84)
      Struct: name=None, packed=False (at pp.c:84)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:84)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:84)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='8' (at pp.c:84)
  Typedef: name='__nesc_nxbase_nx_int64_t', quals=[], storage=['typedef'] (at pp.c:84)
    TypeDecl: declname='__nesc_nxbase_nx_int64_t', quals=[] (at pp.c:84)
      IdentifierType: names=['int64_t'] (at None)
  Typedef: name='nx_uint8_t', quals=[], storage=['typedef'] (at pp.c:85)
    TypeDecl: declname='nx_uint8_t', quals=[] (at pp.c:85)
      Struct: name=None, packed=False (at pp.c:85)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:85)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:85)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='1' (at pp.c:85)
  Typedef: name='__nesc_nxbase_nx_uint8_t', quals=[], storage=['typedef'] (at pp.c:85)
    TypeDecl: declname='__nesc_nxbase_nx_uint8_t', quals=[] (at pp.c:85)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='nx_uint16_t', quals=[], storage=['typedef'] (at pp.c:86)
    TypeDecl: declname='nx_uint16_t', quals=[] (at pp.c:86)
      Struct: name=None, packed=False (at pp.c:86)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:86)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:86)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='2' (at pp.c:86)
  Typedef: name='__nesc_nxbase_nx_uint16_t', quals=[], storage=['typedef'] (at pp.c:86)
    TypeDecl: declname='__nesc_nxbase_nx_uint16_t', quals=[] (at pp.c:86)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='nx_uint32_t', quals=[], storage=['typedef'] (at pp.c:87)
    TypeDecl: declname='nx_uint32_t', quals=[] (at pp.c:87)
      Struct: name=None, packed=False (at pp.c:87)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:87)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:87)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='4' (at pp.c:87)
  Typedef: name='__nesc_nxbase_nx_uint32_t', quals=[], storage=['typedef'] (at pp.c:87)
    TypeDecl: declname='__nesc_nxbase_nx_uint32_t', quals=[] (at pp.c:87)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='nx_uint64_t', quals=[], storage=['typedef'] (at pp.c:88)
    TypeDecl: declname='nx_uint64_t', quals=[] (at pp.c:88)
      Struct: name=None, packed=False (at pp.c:88)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:88)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:88)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='8' (at pp.c:88)
  Typedef: name='__nesc_nxbase_nx_uint64_t', quals=[], storage=['typedef'] (at pp.c:88)
    TypeDecl: declname='__nesc_nxbase_nx_uint64_t', quals=[] (at pp.c:88)
      IdentifierType: names=['uint64_t'] (at None)
  Typedef: name='nxle_int8_t', quals=[], storage=['typedef'] (at pp.c:91)
    TypeDecl: declname='nxle_int8_t', quals=[] (at pp.c:91)
      Struct: name=None, packed=False (at pp.c:91)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:91)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:91)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='1' (at pp.c:91)
  Typedef: name='__nesc_nxbase_nxle_int8_t', quals=[], storage=['typedef'] (at pp.c:91)
    TypeDecl: declname='__nesc_nxbase_nxle_int8_t', quals=[] (at pp.c:91)
      IdentifierType: names=['int8_t'] (at None)
  Typedef: name='nxle_int16_t', quals=[], storage=['typedef'] (at pp.c:92)
    TypeDecl: declname='nxle_int16_t', quals=[] (at pp.c:92)
      Struct: name=None, packed=False (at pp.c:92)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:92)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:92)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='2' (at pp.c:92)
  Typedef: name='__nesc_nxbase_nxle_int16_t', quals=[], storage=['typedef'] (at pp.c:92)
    TypeDecl: declname='__nesc_nxbase_nxle_int16_t', quals=[] (at pp.c:92)
      IdentifierType: names=['int16_t'] (at None)
  Typedef: name='nxle_int32_t', quals=[], storage=['typedef'] (at pp.c:93)
    TypeDecl: declname='nxle_int32_t', quals=[] (at pp.c:93)
      Struct: name=None, packed=False (at pp.c:93)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:93)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:93)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='4' (at pp.c:93)
  Typedef: name='__nesc_nxbase_nxle_int32_t', quals=[], storage=['typedef'] (at pp.c:93)
    TypeDecl: declname='__nesc_nxbase_nxle_int32_t', quals=[] (at pp.c:93)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='nxle_int64_t', quals=[], storage=['typedef'] (at pp.c:94)
    TypeDecl: declname='nxle_int64_t', quals=[] (at pp.c:94)
      Struct: name=None, packed=False (at pp.c:94)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:94)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:94)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='8' (at pp.c:94)
  Typedef: name='__nesc_nxbase_nxle_int64_t', quals=[], storage=['typedef'] (at pp.c:94)
    TypeDecl: declname='__nesc_nxbase_nxle_int64_t', quals=[] (at pp.c:94)
      IdentifierType: names=['int64_t'] (at None)
  Typedef: name='nxle_uint8_t', quals=[], storage=['typedef'] (at pp.c:95)
    TypeDecl: declname='nxle_uint8_t', quals=[] (at pp.c:95)
      Struct: name=None, packed=False (at pp.c:95)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:95)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:95)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='1' (at pp.c:95)
  Typedef: name='__nesc_nxbase_nxle_uint8_t', quals=[], storage=['typedef'] (at pp.c:95)
    TypeDecl: declname='__nesc_nxbase_nxle_uint8_t', quals=[] (at pp.c:95)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='nxle_uint16_t', quals=[], storage=['typedef'] (at pp.c:96)
    TypeDecl: declname='nxle_uint16_t', quals=[] (at pp.c:96)
      Struct: name=None, packed=False (at pp.c:96)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:96)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:96)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='2' (at pp.c:96)
  Typedef: name='__nesc_nxbase_nxle_uint16_t', quals=[], storage=['typedef'] (at pp.c:96)
    TypeDecl: declname='__nesc_nxbase_nxle_uint16_t', quals=[] (at pp.c:96)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='nxle_uint32_t', quals=[], storage=['typedef'] (at pp.c:97)
    TypeDecl: declname='nxle_uint32_t', quals=[] (at pp.c:97)
      Struct: name=None, packed=False (at pp.c:97)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:97)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:97)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='4' (at pp.c:97)
  Typedef: name='__nesc_nxbase_nxle_uint32_t', quals=[], storage=['typedef'] (at pp.c:97)
    TypeDecl: declname='__nesc_nxbase_nxle_uint32_t', quals=[] (at pp.c:97)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='nxle_uint64_t', quals=[], storage=['typedef'] (at pp.c:98)
    TypeDecl: declname='nxle_uint64_t', quals=[] (at pp.c:98)
      Struct: name=None, packed=False (at pp.c:98)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:98)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:98)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='8' (at pp.c:98)
  Typedef: name='__nesc_nxbase_nxle_uint64_t', quals=[], storage=['typedef'] (at pp.c:98)
    TypeDecl: declname='__nesc_nxbase_nxle_uint64_t', quals=[] (at pp.c:98)
      IdentifierType: names=['uint64_t'] (at None)
  Typedef: name='u_char', quals=[], storage=['typedef'] (at pp.c:100)
    TypeDecl: declname='u_char', quals=[] (at pp.c:100)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Typedef: name='u_short', quals=[], storage=['typedef'] (at pp.c:101)
    TypeDecl: declname='u_short', quals=[] (at pp.c:101)
      IdentifierType: names=['short', 'unsigned'] (at None)
  Typedef: name='u_int', quals=[], storage=['typedef'] (at pp.c:102)
    TypeDecl: declname='u_int', quals=[] (at pp.c:102)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='u_long', quals=[], storage=['typedef'] (at pp.c:103)
    TypeDecl: declname='u_long', quals=[] (at pp.c:103)
      IdentifierType: names=['long', 'unsigned'] (at None)
  Typedef: name='ushort', quals=[], storage=['typedef'] (at pp.c:104)
    TypeDecl: declname='ushort', quals=[] (at pp.c:104)
      IdentifierType: names=['short', 'unsigned'] (at None)
  Typedef: name='uint', quals=[], storage=['typedef'] (at pp.c:105)
    TypeDecl: declname='uint', quals=[] (at pp.c:105)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='u_int8_t', quals=[], storage=['typedef'] (at pp.c:107)
    TypeDecl: declname='u_int8_t', quals=[] (at pp.c:107)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='u_int16_t', quals=[], storage=['typedef'] (at pp.c:108)
    TypeDecl: declname='u_int16_t', quals=[] (at pp.c:108)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='u_int32_t', quals=[], storage=['typedef'] (at pp.c:109)
    TypeDecl: declname='u_int32_t', quals=[] (at pp.c:109)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='u_int64_t', quals=[], storage=['typedef'] (at pp.c:110)
    TypeDecl: declname='u_int64_t', quals=[] (at pp.c:110)
      IdentifierType: names=['uint64_t'] (at None)
  Typedef: name='u_quad_t', quals=[], storage=['typedef'] (at pp.c:112)
    TypeDecl: declname='u_quad_t', quals=[] (at pp.c:112)
      IdentifierType: names=['u_int64_t'] (at None)
  Typedef: name='quad_t', quals=[], storage=['typedef'] (at pp.c:113)
    TypeDecl: declname='quad_t', quals=[] (at pp.c:113)
      IdentifierType: names=['int64_t'] (at None)
  Typedef: name='qaddr_t', quals=[], storage=['typedef'] (at pp.c:114)
    PtrDecl: quals=[] (at pp.c:114)
      TypeDecl: declname='qaddr_t', quals=[] (at pp.c:114)
        IdentifierType: names=['quad_t'] (at None)
  Typedef: name='caddr_t', quals=[], storage=['typedef'] (at pp.c:116)
    PtrDecl: quals=[] (at pp.c:116)
      TypeDecl: declname='caddr_t', quals=[] (at pp.c:116)
        IdentifierType: names=['char'] (at None)
  Typedef: name='c_caddr_t', quals=['const'], storage=['typedef'] (at pp.c:117)
    PtrDecl: quals=[] (at pp.c:117)
      TypeDecl: declname='c_caddr_t', quals=['const'] (at pp.c:117)
        IdentifierType: names=['char'] (at None)
  Typedef: name='v_caddr_t', quals=['volatile'], storage=['typedef'] (at pp.c:118)
    PtrDecl: quals=[] (at pp.c:118)
      TypeDecl: declname='v_caddr_t', quals=['volatile'] (at pp.c:118)
        IdentifierType: names=['char'] (at None)
  Typedef: name='fixpt_t', quals=[], storage=['typedef'] (at pp.c:119)
    TypeDecl: declname='fixpt_t', quals=[] (at pp.c:119)
      IdentifierType: names=['u_int32_t'] (at None)
  Typedef: name='gid_t', quals=[], storage=['typedef'] (at pp.c:120)
    TypeDecl: declname='gid_t', quals=[] (at pp.c:120)
      IdentifierType: names=['u_int32_t'] (at None)
  Typedef: name='in_addr_t', quals=[], storage=['typedef'] (at pp.c:121)
    TypeDecl: declname='in_addr_t', quals=[] (at pp.c:121)
      IdentifierType: names=['u_int32_t'] (at None)
  Typedef: name='in_port_t', quals=[], storage=['typedef'] (at pp.c:122)
    TypeDecl: declname='in_port_t', quals=[] (at pp.c:122)
      IdentifierType: names=['u_int16_t'] (at None)
  Typedef: name='ino_t', quals=[], storage=['typedef'] (at pp.c:123)
    TypeDecl: declname='ino_t', quals=[] (at pp.c:123)
      IdentifierType: names=['u_int32_t'] (at None)
  Typedef: name='key_t', quals=[], storage=['typedef'] (at pp.c:124)
    TypeDecl: declname='key_t', quals=[] (at pp.c:124)
      IdentifierType: names=['long'] (at None)
  Typedef: name='mode_t', quals=[], storage=['typedef'] (at pp.c:125)
    TypeDecl: declname='mode_t', quals=[] (at pp.c:125)
      IdentifierType: names=['u_int16_t'] (at None)
  Typedef: name='nlink_t', quals=[], storage=['typedef'] (at pp.c:126)
    TypeDecl: declname='nlink_t', quals=[] (at pp.c:126)
      IdentifierType: names=['u_int16_t'] (at None)
  Typedef: name='rlim_t', quals=[], storage=['typedef'] (at pp.c:127)
    TypeDecl: declname='rlim_t', quals=[] (at pp.c:127)
      IdentifierType: names=['quad_t'] (at None)
  Typedef: name='segsz_t', quals=[], storage=['typedef'] (at pp.c:128)
    TypeDecl: declname='segsz_t', quals=[] (at pp.c:128)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='swblk_t', quals=[], storage=['typedef'] (at pp.c:129)
    TypeDecl: declname='swblk_t', quals=[] (at pp.c:129)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='ufs_daddr_t', quals=[], storage=['typedef'] (at pp.c:130)
    TypeDecl: declname='ufs_daddr_t', quals=[] (at pp.c:130)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='ufs_time_t', quals=[], storage=['typedef'] (at pp.c:131)
    TypeDecl: declname='ufs_time_t', quals=[] (at pp.c:131)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='uid_t', quals=[], storage=['typedef'] (at pp.c:132)
    TypeDecl: declname='uid_t', quals=[] (at pp.c:132)
      IdentifierType: names=['u_int32_t'] (at None)
  Decl: name='memset', quals=[], storage=['extern'] (at pp.c:134)
    FuncDecl: quals=None (at pp.c:134)
      ParamList:  (at pp.c:134)
        Decl: name='arg_0x100748980', quals=[], storage=[] (at pp.c:134)
          PtrDecl: quals=[] (at pp.c:134)
            TypeDecl: declname='arg_0x100748980', quals=[] (at pp.c:134)
              IdentifierType: names=['void'] (at None)
        Decl: name='arg_0x100748be8', quals=[], storage=[] (at pp.c:134)
          TypeDecl: declname='arg_0x100748be8', quals=[] (at pp.c:134)
            IdentifierType: names=['int'] (at None)
        Decl: name='arg_0x10074e020', quals=[], storage=[] (at pp.c:134)
          TypeDecl: declname='arg_0x10074e020', quals=[] (at pp.c:134)
            IdentifierType: names=['size_t'] (at None)
      PtrDecl: quals=[] (at pp.c:134)
        TypeDecl: declname='memset', quals=[] (at pp.c:134)
          IdentifierType: names=['void'] (at None)
  Decl: name='memset', quals=[], storage=['extern'] (at pp.c:136)
    FuncDecl: quals=None (at pp.c:136)
      ParamList:  (at pp.c:136)
        Decl: name='arg_0x100761b10', quals=[], storage=[] (at pp.c:136)
          PtrDecl: quals=[] (at pp.c:136)
            TypeDecl: declname='arg_0x100761b10', quals=[] (at pp.c:136)
              IdentifierType: names=['void'] (at None)
        Decl: name='arg_0x100761d78', quals=[], storage=[] (at pp.c:136)
          TypeDecl: declname='arg_0x100761d78', quals=[] (at pp.c:136)
            IdentifierType: names=['int'] (at None)
        Decl: name='arg_0x100767060', quals=[], storage=[] (at pp.c:136)
          TypeDecl: declname='arg_0x100767060', quals=[] (at pp.c:136)
            IdentifierType: names=['size_t'] (at None)
      PtrDecl: quals=[] (at pp.c:136)
        TypeDecl: declname='memset', quals=[] (at pp.c:136)
          IdentifierType: names=['void'] (at None)
  Typedef: name='div_t', quals=[], storage=['typedef'] (at pp.c:142)
    TypeDecl: declname='div_t', quals=[] (at pp.c:142)
      Struct: name='__nesc_unnamed4242', packed=False (at pp.c:139)
        Decl: name='quot', quals=[], storage=[] (at 0)
          TypeDecl: declname='quot', quals=[] (at pp.c:140)
            IdentifierType: names=['int'] (at None)
        Decl: name='rem', quals=[], storage=[] (at 0)
          TypeDecl: declname='rem', quals=[] (at pp.c:141)
            IdentifierType: names=['int'] (at None)
  Typedef: name='ldiv_t', quals=[], storage=['typedef'] (at pp.c:154)
    TypeDecl: declname='ldiv_t', quals=[] (at pp.c:154)
      Struct: name='__nesc_unnamed4243', packed=False (at pp.c:151)
        Decl: name='quot', quals=[], storage=[] (at 0)
          TypeDecl: declname='quot', quals=[] (at pp.c:152)
            IdentifierType: names=['long'] (at None)
        Decl: name='rem', quals=[], storage=[] (at 0)
          TypeDecl: declname='rem', quals=[] (at pp.c:153)
            IdentifierType: names=['long'] (at None)
  Typedef: name='__int32_t', quals=[], storage=['typedef'] (at pp.c:156)
    TypeDecl: declname='__int32_t', quals=[] (at pp.c:156)
      IdentifierType: names=['int', 'long'] (at None)
  Typedef: name='__uint32_t', quals=[], storage=['typedef'] (at pp.c:157)
    TypeDecl: declname='__uint32_t', quals=[] (at pp.c:157)
      IdentifierType: names=['int', 'long', 'unsigned'] (at None)
  Typedef: name='_off_t', quals=[], storage=['typedef'] (at pp.c:159)
    TypeDecl: declname='_off_t', quals=[] (at pp.c:159)
      IdentifierType: names=['long'] (at None)
  Typedef: name='_ssize_t', quals=[], storage=['typedef'] (at pp.c:160)
    TypeDecl: declname='_ssize_t', quals=[] (at pp.c:160)
      IdentifierType: names=['long'] (at None)
  Typedef: name='__ULong', quals=[], storage=['typedef'] (at pp.c:162)
    TypeDecl: declname='__ULong', quals=[] (at pp.c:162)
      IdentifierType: names=['__uint32_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:165)
    Struct: name='_glue', packed=False (at pp.c:165)
      Decl: name='_next', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:167)
          TypeDecl: declname='_next', quals=[] (at pp.c:167)
            Struct: name='_glue', packed=False (at pp.c:167)
      Decl: name='_niobs', quals=[], storage=[] (at 0)
        TypeDecl: declname='_niobs', quals=[] (at pp.c:168)
          IdentifierType: names=['int'] (at None)
      Decl: name='_iobs', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:169)
          TypeDecl: declname='_iobs', quals=[] (at pp.c:169)
            Struct: name='__sFILE', packed=False (at pp.c:169)
  Decl: name=None, quals=[], storage=[] (at pp.c:172)
    Struct: name='_Bigint', packed=False (at pp.c:172)
      Decl: name='_next', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:174)
          TypeDecl: declname='_next', quals=[] (at pp.c:174)
            Struct: name='_Bigint', packed=False (at pp.c:174)
      Decl: name='_k', quals=[], storage=[] (at 0)
        TypeDecl: declname='_k', quals=[] (at pp.c:175)
          IdentifierType: names=['int'] (at None)
      Decl: name='_maxwds', quals=[], storage=[] (at 0)
        TypeDecl: declname='_maxwds', quals=[] (at pp.c:175)
          IdentifierType: names=['int'] (at None)
      Decl: name='_sign', quals=[], storage=[] (at 0)
        TypeDecl: declname='_sign', quals=[] (at pp.c:175)
          IdentifierType: names=['int'] (at None)
      Decl: name='_wds', quals=[], storage=[] (at 0)
        TypeDecl: declname='_wds', quals=[] (at pp.c:175)
          IdentifierType: names=['int'] (at None)
      Decl: name='_x', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:176)
          TypeDecl: declname='_x', quals=[] (at pp.c:176)
            IdentifierType: names=['__ULong'] (at None)
          Constant: type='int', value='1' (at pp.c:176)
  Decl: name=None, quals=[], storage=[] (at pp.c:180)
    Struct: name='__tm', packed=False (at pp.c:180)
      Decl: name='__tm_sec', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_sec', quals=[] (at pp.c:182)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_min', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_min', quals=[] (at pp.c:183)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_hour', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_hour', quals=[] (at pp.c:184)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_mday', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_mday', quals=[] (at pp.c:185)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_mon', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_mon', quals=[] (at pp.c:186)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_year', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_year', quals=[] (at pp.c:187)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_wday', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_wday', quals=[] (at pp.c:188)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_yday', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_yday', quals=[] (at pp.c:189)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_isdst', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_isdst', quals=[] (at pp.c:190)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:199)
    Struct: name='_atexit', packed=False (at pp.c:199)
      Decl: name='_next', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:200)
          TypeDecl: declname='_next', quals=[] (at pp.c:200)
            Struct: name='_atexit', packed=False (at pp.c:200)
      Decl: name='_ind', quals=[], storage=[] (at 0)
        TypeDecl: declname='_ind', quals=[] (at pp.c:201)
          IdentifierType: names=['int'] (at None)
      Decl: name='_fns', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:202)
          PtrDecl: quals=[] (at pp.c:202)
            FuncDecl: quals=None (at pp.c:202)
              ParamList:  (at None)
                Typename: quals=[] (at None)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['void'] (at None)
              TypeDecl: declname='_fns', quals=[] (at pp.c:202)
                IdentifierType: names=['void'] (at None)
          Constant: type='int', value='32' (at pp.c:202)
  Decl: name=None, quals=[], storage=[] (at pp.c:212)
    Struct: name='__sbuf', packed=False (at pp.c:212)
      Decl: name='_base', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:213)
          TypeDecl: declname='_base', quals=[] (at pp.c:213)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='_size', quals=[], storage=[] (at 0)
        TypeDecl: declname='_size', quals=[] (at pp.c:214)
          IdentifierType: names=['int'] (at None)
  Typedef: name='_fpos_t', quals=[], storage=['typedef'] (at pp.c:222)
    TypeDecl: declname='_fpos_t', quals=[] (at pp.c:222)
      IdentifierType: names=['long'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:224)
    Struct: name='__sFILE', packed=False (at pp.c:224)
      Decl: name='_p', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:225)
          TypeDecl: declname='_p', quals=[] (at pp.c:225)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='_r', quals=[], storage=[] (at 0)
        TypeDecl: declname='_r', quals=[] (at pp.c:226)
          IdentifierType: names=['int'] (at None)
      Decl: name='_w', quals=[], storage=[] (at 0)
        TypeDecl: declname='_w', quals=[] (at pp.c:227)
          IdentifierType: names=['int'] (at None)
      Decl: name='_flags', quals=[], storage=[] (at 0)
        TypeDecl: declname='_flags', quals=[] (at pp.c:228)
          IdentifierType: names=['short'] (at None)
      Decl: name='_file', quals=[], storage=[] (at 0)
        TypeDecl: declname='_file', quals=[] (at pp.c:229)
          IdentifierType: names=['short'] (at None)
      Decl: name='_bf', quals=[], storage=[] (at 0)
        TypeDecl: declname='_bf', quals=[] (at pp.c:230)
          Struct: name='__sbuf', packed=False (at pp.c:230)
      Decl: name='_lbfsize', quals=[], storage=[] (at 0)
        TypeDecl: declname='_lbfsize', quals=[] (at pp.c:231)
          IdentifierType: names=['int'] (at None)
      Decl: name='_cookie', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:234)
          TypeDecl: declname='_cookie', quals=[] (at pp.c:234)
            IdentifierType: names=['void'] (at None)
      Decl: name='_read', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:236)
          FuncDecl: quals=None (at pp.c:236)
            ParamList:  (at pp.c:236)
              Decl: name='_cookie', quals=[], storage=[] (at pp.c:236)
                PtrDecl: quals=[] (at pp.c:236)
                  TypeDecl: declname='_cookie', quals=[] (at pp.c:236)
                    IdentifierType: names=['void'] (at None)
              Decl: name='_buf', quals=[], storage=[] (at pp.c:236)
                PtrDecl: quals=[] (at pp.c:236)
                  TypeDecl: declname='_buf', quals=[] (at pp.c:236)
                    IdentifierType: names=['char'] (at None)
              Decl: name='_n', quals=[], storage=[] (at pp.c:236)
                TypeDecl: declname='_n', quals=[] (at pp.c:236)
                  IdentifierType: names=['int'] (at None)
            TypeDecl: declname='_read', quals=[] (at pp.c:236)
              IdentifierType: names=['int'] (at None)
      Decl: name='_write', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:237)
          FuncDecl: quals=None (at pp.c:237)
            ParamList:  (at pp.c:237)
              Decl: name='_cookie', quals=[], storage=[] (at pp.c:237)
                PtrDecl: quals=[] (at pp.c:237)
                  TypeDecl: declname='_cookie', quals=[] (at pp.c:237)
                    IdentifierType: names=['void'] (at None)
              Decl: name='_buf', quals=['const'], storage=[] (at pp.c:237)
                PtrDecl: quals=[] (at pp.c:237)
                  TypeDecl: declname='_buf', quals=['const'] (at pp.c:237)
                    IdentifierType: names=['char'] (at None)
              Decl: name='_n', quals=[], storage=[] (at pp.c:237)
                TypeDecl: declname='_n', quals=[] (at pp.c:237)
                  IdentifierType: names=['int'] (at None)
            TypeDecl: declname='_write', quals=[] (at pp.c:237)
              IdentifierType: names=['int'] (at None)
      Decl: name='_seek', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:239)
          FuncDecl: quals=None (at pp.c:239)
            ParamList:  (at pp.c:239)
              Decl: name='_cookie', quals=[], storage=[] (at pp.c:239)
                PtrDecl: quals=[] (at pp.c:239)
                  TypeDecl: declname='_cookie', quals=[] (at pp.c:239)
                    IdentifierType: names=['void'] (at None)
              Decl: name='_offset', quals=[], storage=[] (at pp.c:239)
                TypeDecl: declname='_offset', quals=[] (at pp.c:239)
                  IdentifierType: names=['_fpos_t'] (at None)
              Decl: name='_whence', quals=[], storage=[] (at pp.c:239)
                TypeDecl: declname='_whence', quals=[] (at pp.c:239)
                  IdentifierType: names=['int'] (at None)
            TypeDecl: declname='_seek', quals=[] (at pp.c:239)
              IdentifierType: names=['_fpos_t'] (at None)
      Decl: name='_close', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:240)
          FuncDecl: quals=None (at pp.c:240)
            ParamList:  (at pp.c:240)
              Decl: name='_cookie', quals=[], storage=[] (at pp.c:240)
                PtrDecl: quals=[] (at pp.c:240)
                  TypeDecl: declname='_cookie', quals=[] (at pp.c:240)
                    IdentifierType: names=['void'] (at None)
            TypeDecl: declname='_close', quals=[] (at pp.c:240)
              IdentifierType: names=['int'] (at None)
      Decl: name='_ub', quals=[], storage=[] (at 0)
        TypeDecl: declname='_ub', quals=[] (at pp.c:243)
          Struct: name='__sbuf', packed=False (at pp.c:243)
      Decl: name='_up', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:244)
          TypeDecl: declname='_up', quals=[] (at pp.c:244)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='_ur', quals=[], storage=[] (at 0)
        TypeDecl: declname='_ur', quals=[] (at pp.c:245)
          IdentifierType: names=['int'] (at None)
      Decl: name='_ubuf', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:248)
          TypeDecl: declname='_ubuf', quals=[] (at pp.c:248)
            IdentifierType: names=['char', 'unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:248)
      Decl: name='_nbuf', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:249)
          TypeDecl: declname='_nbuf', quals=[] (at pp.c:249)
            IdentifierType: names=['char', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:249)
      Decl: name='_lb', quals=[], storage=[] (at 0)
        TypeDecl: declname='_lb', quals=[] (at pp.c:252)
          Struct: name='__sbuf', packed=False (at pp.c:252)
      Decl: name='_blksize', quals=[], storage=[] (at 0)
        TypeDecl: declname='_blksize', quals=[] (at pp.c:255)
          IdentifierType: names=['int'] (at None)
      Decl: name='_offset', quals=[], storage=[] (at 0)
        TypeDecl: declname='_offset', quals=[] (at pp.c:256)
          IdentifierType: names=['int'] (at None)
      Decl: name='_data', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:258)
          TypeDecl: declname='_data', quals=[] (at pp.c:258)
            Struct: name='_reent', packed=False (at pp.c:258)
  Decl: name=None, quals=[], storage=[] (at pp.c:261)
    Struct: name='_rand48', packed=False (at pp.c:261)
      Decl: name='_seed', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:262)
          TypeDecl: declname='_seed', quals=[] (at pp.c:262)
            IdentifierType: names=['short', 'unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:262)
      Decl: name='_mult', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:263)
          TypeDecl: declname='_mult', quals=[] (at pp.c:263)
            IdentifierType: names=['short', 'unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:263)
      Decl: name='_add', quals=[], storage=[] (at 0)
        TypeDecl: declname='_add', quals=[] (at pp.c:264)
          IdentifierType: names=['short', 'unsigned'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:275)
    Struct: name='_reent', packed=False (at pp.c:275)
      Decl: name='_errno', quals=[], storage=[] (at 0)
        TypeDecl: declname='_errno', quals=[] (at pp.c:278)
          IdentifierType: names=['int'] (at None)
      Decl: name='_stdin', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:283)
          TypeDecl: declname='_stdin', quals=[] (at pp.c:283)
            Struct: name='__sFILE', packed=False (at pp.c:283)
      Decl: name='_stdout', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:283)
          TypeDecl: declname='_stdout', quals=[] (at pp.c:283)
            Struct: name='__sFILE', packed=False (at pp.c:283)
      Decl: name='_stderr', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:283)
          TypeDecl: declname='_stderr', quals=[] (at pp.c:283)
            Struct: name='__sFILE', packed=False (at pp.c:283)
      Decl: name='_inc', quals=[], storage=[] (at 0)
        TypeDecl: declname='_inc', quals=[] (at pp.c:285)
          IdentifierType: names=['int'] (at None)
      Decl: name='_emergency', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:286)
          TypeDecl: declname='_emergency', quals=[] (at pp.c:286)
            IdentifierType: names=['char'] (at None)
          Constant: type='int', value='25' (at pp.c:286)
      Decl: name='_current_category', quals=[], storage=[] (at 0)
        TypeDecl: declname='_current_category', quals=[] (at pp.c:288)
          IdentifierType: names=['int'] (at None)
      Decl: name='_current_locale', quals=['const'], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:289)
          TypeDecl: declname='_current_locale', quals=['const'] (at pp.c:289)
            IdentifierType: names=['char'] (at None)
      Decl: name='__sdidinit', quals=[], storage=[] (at 0)
        TypeDecl: declname='__sdidinit', quals=[] (at pp.c:291)
          IdentifierType: names=['int'] (at None)
      Decl: name='__cleanup', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:293)
          FuncDecl: quals=None (at pp.c:293)
            ParamList:  (at pp.c:293)
              Decl: name='arg_0x10079c0c8', quals=[], storage=[] (at pp.c:293)
                PtrDecl: quals=[] (at pp.c:293)
                  TypeDecl: declname='arg_0x10079c0c8', quals=[] (at pp.c:293)
                    Struct: name='_reent', packed=False (at pp.c:293)
            TypeDecl: declname='__cleanup', quals=[] (at pp.c:293)
              IdentifierType: names=['void'] (at None)
      Decl: name='_result', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:296)
          TypeDecl: declname='_result', quals=[] (at pp.c:296)
            Struct: name='_Bigint', packed=False (at pp.c:296)
      Decl: name='_result_k', quals=[], storage=[] (at 0)
        TypeDecl: declname='_result_k', quals=[] (at pp.c:297)
          IdentifierType: names=['int'] (at None)
      Decl: name='_p5s', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:298)
          TypeDecl: declname='_p5s', quals=[] (at pp.c:298)
            Struct: name='_Bigint', packed=False (at pp.c:298)
      Decl: name='_freelist', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:299)
          PtrDecl: quals=[] (at pp.c:299)
            TypeDecl: declname='_freelist', quals=[] (at pp.c:299)
              Struct: name='_Bigint', packed=False (at pp.c:299)
      Decl: name='_cvtlen', quals=[], storage=[] (at 0)
        TypeDecl: declname='_cvtlen', quals=[] (at pp.c:302)
          IdentifierType: names=['int'] (at None)
      Decl: name='_cvtbuf', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:303)
          TypeDecl: declname='_cvtbuf', quals=[] (at pp.c:303)
            IdentifierType: names=['char'] (at None)
      Decl: name='_new', quals=[], storage=[] (at 0)
        TypeDecl: declname='_new', quals=[] (at pp.c:326)
          Union: name='__nesc_unnamed4244', packed=False (at pp.c:305)
            Decl: name='_reent', quals=[], storage=[] (at 0)
              TypeDecl: declname='_reent', quals=[] (at pp.c:316)
                Struct: name='__nesc_unnamed4245', packed=False (at pp.c:307)
                  Decl: name='_unused_rand', quals=[], storage=[] (at 0)
                    TypeDecl: declname='_unused_rand', quals=[] (at pp.c:309)
                      IdentifierType: names=['int', 'unsigned'] (at None)
                  Decl: name='_strtok_last', quals=[], storage=[] (at 0)
                    PtrDecl: quals=[] (at pp.c:310)
                      TypeDecl: declname='_strtok_last', quals=[] (at pp.c:310)
                        IdentifierType: names=['char'] (at None)
                  Decl: name='_asctime_buf', quals=[], storage=[] (at 0)
                    ArrayDecl:  (at pp.c:311)
                      TypeDecl: declname='_asctime_buf', quals=[] (at pp.c:311)
                        IdentifierType: names=['char'] (at None)
                      Constant: type='int', value='26' (at pp.c:311)
                  Decl: name='_localtime_buf', quals=[], storage=[] (at 0)
                    TypeDecl: declname='_localtime_buf', quals=[] (at pp.c:312)
                      Struct: name='__tm', packed=False (at pp.c:312)
                  Decl: name='_gamma_signgam', quals=[], storage=[] (at 0)
                    TypeDecl: declname='_gamma_signgam', quals=[] (at pp.c:313)
                      IdentifierType: names=['int'] (at None)
                  Decl: name='_rand_next', quals=[], storage=[] (at 0)
                    TypeDecl: declname='_rand_next', quals=[] (at pp.c:314)
                      IdentifierType: names=['long', 'long', 'unsigned'] (at None)
                  Decl: name='_r48', quals=[], storage=[] (at 0)
                    TypeDecl: declname='_r48', quals=[] (at pp.c:315)
                      Struct: name='_rand48', packed=False (at pp.c:315)
            Decl: name='_unused', quals=[], storage=[] (at 0)
              TypeDecl: declname='_unused', quals=[] (at pp.c:325)
                Struct: name='__nesc_unnamed4246', packed=False (at pp.c:320)
                  Decl: name='_nextf', quals=[], storage=[] (at 0)
                    ArrayDecl:  (at pp.c:323)
                      PtrDecl: quals=[] (at pp.c:323)
                        TypeDecl: declname='_nextf', quals=[] (at pp.c:323)
                          IdentifierType: names=['char', 'unsigned'] (at None)
                      Constant: type='int', value='30' (at pp.c:323)
                  Decl: name='_nmalloc', quals=[], storage=[] (at 0)
                    ArrayDecl:  (at pp.c:324)
                      TypeDecl: declname='_nmalloc', quals=[] (at pp.c:324)
                        IdentifierType: names=['int', 'unsigned'] (at None)
                      Constant: type='int', value='30' (at pp.c:324)
      Decl: name='_atexit', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:329)
          TypeDecl: declname='_atexit', quals=[] (at pp.c:329)
            Struct: name='_atexit', packed=False (at pp.c:329)
      Decl: name='_atexit0', quals=[], storage=[] (at 0)
        TypeDecl: declname='_atexit0', quals=[] (at pp.c:330)
          Struct: name='_atexit', packed=False (at pp.c:330)
      Decl: name='_sig_func', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:333)
          PtrDecl: quals=[] (at pp.c:333)
            FuncDecl: quals=None (at pp.c:333)
              ParamList:  (at pp.c:333)
                Decl: name='arg_0x10079f180', quals=[], storage=[] (at pp.c:333)
                  TypeDecl: declname='arg_0x10079f180', quals=[] (at pp.c:333)
                    IdentifierType: names=['int'] (at None)
              TypeDecl: declname='_sig_func', quals=[] (at pp.c:333)
                IdentifierType: names=['void'] (at None)
      Decl: name='__sglue', quals=[], storage=[] (at 0)
        TypeDecl: declname='__sglue', quals=[] (at pp.c:338)
          Struct: name='_glue', packed=False (at pp.c:338)
      Decl: name='__sf', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:339)
          TypeDecl: declname='__sf', quals=[] (at pp.c:339)
            Struct: name='__sFILE', packed=False (at pp.c:339)
          Constant: type='int', value='3' (at pp.c:339)
  Decl: name=None, quals=[], storage=[] (at pp.c:342)
    Struct: name='_reent', packed=False (at pp.c:342)
  Decl: name=None, quals=[], storage=[] (at pp.c:344)
    Union: name='__dmath', packed=False (at pp.c:344)
      Decl: name='i', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:346)
          TypeDecl: declname='i', quals=[] (at pp.c:346)
            IdentifierType: names=['__uint32_t'] (at None)
          Constant: type='int', value='2' (at pp.c:346)
      Decl: name='d', quals=[], storage=[] (at 0)
        TypeDecl: declname='d', quals=[] (at pp.c:347)
          IdentifierType: names=['double'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:353)
    Union: name='__dmath', packed=False (at pp.c:353)
  Decl: name=None, quals=[], storage=[] (at pp.c:355)
    Struct: name='exception', packed=False (at pp.c:355)
      Decl: name='type', quals=[], storage=[] (at 0)
        TypeDecl: declname='type', quals=[] (at pp.c:358)
          IdentifierType: names=['int'] (at None)
      Decl: name='name', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:359)
          TypeDecl: declname='name', quals=[] (at pp.c:359)
            IdentifierType: names=['char'] (at None)
      Decl: name='arg1', quals=[], storage=[] (at 0)
        TypeDecl: declname='arg1', quals=[] (at pp.c:360)
          IdentifierType: names=['double'] (at None)
      Decl: name='arg2', quals=[], storage=[] (at 0)
        TypeDecl: declname='arg2', quals=[] (at pp.c:361)
          IdentifierType: names=['double'] (at None)
      Decl: name='retval', quals=[], storage=[] (at 0)
        TypeDecl: declname='retval', quals=[] (at pp.c:362)
          IdentifierType: names=['double'] (at None)
      Decl: name='err', quals=[], storage=[] (at 0)
        TypeDecl: declname='err', quals=[] (at pp.c:363)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:366)
    Enum: name='__fdlibm_version' (at pp.c:366)
      EnumeratorList:  (at pp.c:368)
        Enumerator: name='__fdlibm_ieee' (at pp.c:368)
          UnaryOp: op='-' (at pp.c:368)
            Constant: type='int', value='1' (at pp.c:368)
        Enumerator: name='__fdlibm_svid' (at pp.c:369)
        Enumerator: name='__fdlibm_xopen' (at pp.c:370)
        Enumerator: name='__fdlibm_posix' (at pp.c:371)
  Decl: name=None, quals=[], storage=[] (at pp.c:377)
    Enum: name='__fdlibm_version' (at pp.c:377)
  Typedef: name='bool', quals=[], storage=['typedef'] (at pp.c:379)
    TypeDecl: declname='bool', quals=[] (at pp.c:379)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:380)
    Enum: name='__nesc_unnamed4247' (at pp.c:380)
      EnumeratorList:  (at pp.c:382)
        Enumerator: name='FALSE' (at pp.c:382)
          Constant: type='int', value='0' (at pp.c:382)
        Enumerator: name='TRUE' (at pp.c:382)
          Constant: type='int', value='1' (at pp.c:382)
  Typedef: name='nx_bool', quals=[], storage=['typedef'] (at pp.c:384)
    TypeDecl: declname='nx_bool', quals=[] (at pp.c:384)
      IdentifierType: names=['nx_int8_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:392)
    Struct: name='__nesc_attr_atmostonce', packed=False (at pp.c:392)
  Decl: name=None, quals=[], storage=[] (at pp.c:395)
    Struct: name='__nesc_attr_atleastonce', packed=False (at pp.c:395)
  Decl: name=None, quals=[], storage=[] (at pp.c:398)
    Struct: name='__nesc_attr_exactlyonce', packed=False (at pp.c:398)
  Decl: name=None, quals=[], storage=[] (at pp.c:401)
    Enum: name='__nesc_unnamed4248' (at pp.c:401)
      EnumeratorList:  (at pp.c:402)
        Enumerator: name='SUCCESS' (at pp.c:402)
          Constant: type='int', value='0' (at pp.c:402)
        Enumerator: name='FAIL' (at pp.c:403)
          Constant: type='int', value='1' (at pp.c:403)
        Enumerator: name='ESIZE' (at pp.c:404)
          Constant: type='int', value='2' (at pp.c:404)
        Enumerator: name='ECANCEL' (at pp.c:405)
          Constant: type='int', value='3' (at pp.c:405)
        Enumerator: name='EOFF' (at pp.c:406)
          Constant: type='int', value='4' (at pp.c:406)
        Enumerator: name='EBUSY' (at pp.c:407)
          Constant: type='int', value='5' (at pp.c:407)
        Enumerator: name='EINVAL' (at pp.c:408)
          Constant: type='int', value='6' (at pp.c:408)
        Enumerator: name='ERETRY' (at pp.c:409)
          Constant: type='int', value='7' (at pp.c:409)
        Enumerator: name='ERESERVE' (at pp.c:410)
          Constant: type='int', value='8' (at pp.c:410)
        Enumerator: name='EALREADY' (at pp.c:411)
          Constant: type='int', value='9' (at pp.c:411)
        Enumerator: name='ENOMEM' (at pp.c:412)
          Constant: type='int', value='10' (at pp.c:412)
        Enumerator: name='ENOACK' (at pp.c:413)
          Constant: type='int', value='11' (at pp.c:413)
        Enumerator: name='ELAST' (at pp.c:414)
          Constant: type='int', value='11' (at pp.c:414)
  Typedef: name='error_t', quals=[], storage=['typedef'] (at pp.c:417)
    TypeDecl: declname='error_t', quals=[] (at pp.c:417)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='ecombine', quals=[], storage=['inline', 'static'] (at pp.c:419)
    FuncDecl: quals=None (at pp.c:419)
      ParamList:  (at pp.c:419)
        Decl: name='r1', quals=[], storage=[] (at pp.c:419)
          TypeDecl: declname='r1', quals=[] (at pp.c:419)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='r2', quals=[], storage=[] (at pp.c:419)
          TypeDecl: declname='r2', quals=[] (at pp.c:419)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='ecombine', quals=[] (at pp.c:419)
        IdentifierType: names=['error_t'] (at None)
  Typedef: name='ioregister_t', quals=[], storage=['typedef'] (at pp.c:434)
    TypeDecl: declname='ioregister_t', quals=[] (at pp.c:434)
      Union: name='port', packed=True (at pp.c:422)
        Decl: name='reg_p', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='reg_p', quals=['volatile'] (at pp.c:423)
            IdentifierType: names=['char', 'unsigned'] (at None)
        Decl: name='__pin', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='__pin', quals=['volatile'] (at pp.c:433)
            Struct: name='__nesc_unnamed4249', packed=False (at pp.c:424)
              Decl: name='__p0', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p0', quals=[] (at pp.c:425)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:425)
              Decl: name='__p1', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p1', quals=[] (at pp.c:426)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:426)
              Decl: name='__p2', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p2', quals=[] (at pp.c:427)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:427)
              Decl: name='__p3', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p3', quals=[] (at pp.c:428)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:428)
              Decl: name='__p4', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p4', quals=[] (at pp.c:429)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:429)
              Decl: name='__p5', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p5', quals=[] (at pp.c:430)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:430)
              Decl: name='__p6', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p6', quals=[] (at pp.c:431)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:431)
              Decl: name='__p7', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p7', quals=[] (at pp.c:432)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:432)
  Decl: name=None, quals=[], storage=[] (at pp.c:436)
    Struct: name='port_full_t', packed=False (at pp.c:436)
      Decl: name='in', quals=[], storage=[] (at 0)
        TypeDecl: declname='in', quals=[] (at pp.c:437)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='out', quals=[], storage=[] (at 0)
        TypeDecl: declname='out', quals=[] (at pp.c:438)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='dir', quals=[], storage=[] (at 0)
        TypeDecl: declname='dir', quals=[] (at pp.c:439)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='ifg', quals=[], storage=[] (at 0)
        TypeDecl: declname='ifg', quals=[] (at pp.c:440)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='ies', quals=[], storage=[] (at 0)
        TypeDecl: declname='ies', quals=[] (at pp.c:441)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='ie', quals=[], storage=[] (at 0)
        TypeDecl: declname='ie', quals=[] (at pp.c:442)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='sel', quals=[], storage=[] (at 0)
        TypeDecl: declname='sel', quals=[] (at pp.c:443)
          IdentifierType: names=['ioregister_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:454)
    Struct: name='port_simple_t', packed=False (at pp.c:454)
      Decl: name='in', quals=[], storage=[] (at 0)
        TypeDecl: declname='in', quals=[] (at pp.c:455)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='out', quals=[], storage=[] (at 0)
        TypeDecl: declname='out', quals=[] (at pp.c:456)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='dir', quals=[], storage=[] (at 0)
        TypeDecl: declname='dir', quals=[] (at pp.c:457)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='sel', quals=[], storage=[] (at 0)
        TypeDecl: declname='sel', quals=[] (at pp.c:458)
          IdentifierType: names=['ioregister_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:464)
    Struct: name='port_full_t', packed=False (at pp.c:464)
  Decl: name=None, quals=[], storage=[] (at pp.c:468)
    Struct: name='port_full_t', packed=False (at pp.c:468)
  Decl: name=None, quals=[], storage=[] (at pp.c:472)
    Struct: name='port_simple_t', packed=False (at pp.c:472)
  Decl: name=None, quals=[], storage=[] (at pp.c:476)
    Struct: name='port_simple_t', packed=False (at pp.c:476)
  Decl: name=None, quals=[], storage=[] (at pp.c:480)
    Struct: name='port_simple_t', packed=False (at pp.c:480)
  Decl: name=None, quals=[], storage=[] (at pp.c:484)
    Struct: name='port_simple_t', packed=False (at pp.c:484)
  Decl: name='P1OUT@"0x0021"', quals=['volatile'], storage=[] (at pp.c:486)
    TypeDecl: declname='P1OUT@"0x0021"', quals=['volatile'] (at pp.c:486)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P1DIR@"0x0022"', quals=['volatile'], storage=[] (at pp.c:488)
    TypeDecl: declname='P1DIR@"0x0022"', quals=['volatile'] (at pp.c:488)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P1IE@"0x0025"', quals=['volatile'], storage=[] (at pp.c:494)
    TypeDecl: declname='P1IE@"0x0025"', quals=['volatile'] (at pp.c:494)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P1SEL@"0x0026"', quals=['volatile'], storage=[] (at pp.c:496)
    TypeDecl: declname='P1SEL@"0x0026"', quals=['volatile'] (at pp.c:496)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P2OUT@"0x0029"', quals=['volatile'], storage=[] (at pp.c:507)
    TypeDecl: declname='P2OUT@"0x0029"', quals=['volatile'] (at pp.c:507)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P2DIR@"0x002A"', quals=['volatile'], storage=[] (at pp.c:509)
    TypeDecl: declname='P2DIR@"0x002A"', quals=['volatile'] (at pp.c:509)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P2IE@"0x002D"', quals=['volatile'], storage=[] (at pp.c:515)
    TypeDecl: declname='P2IE@"0x002D"', quals=['volatile'] (at pp.c:515)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P2SEL@"0x002E"', quals=['volatile'], storage=[] (at pp.c:517)
    TypeDecl: declname='P2SEL@"0x002E"', quals=['volatile'] (at pp.c:517)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P3OUT@"0x0019"', quals=['volatile'], storage=[] (at pp.c:528)
    TypeDecl: declname='P3OUT@"0x0019"', quals=['volatile'] (at pp.c:528)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P3DIR@"0x001A"', quals=['volatile'], storage=[] (at pp.c:530)
    TypeDecl: declname='P3DIR@"0x001A"', quals=['volatile'] (at pp.c:530)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P3SEL@"0x001B"', quals=['volatile'], storage=[] (at pp.c:532)
    TypeDecl: declname='P3SEL@"0x001B"', quals=['volatile'] (at pp.c:532)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P4OUT@"0x001D"', quals=['volatile'], storage=[] (at pp.c:543)
    TypeDecl: declname='P4OUT@"0x001D"', quals=['volatile'] (at pp.c:543)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P4DIR@"0x001E"', quals=['volatile'], storage=[] (at pp.c:545)
    TypeDecl: declname='P4DIR@"0x001E"', quals=['volatile'] (at pp.c:545)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P4SEL@"0x001F"', quals=['volatile'], storage=[] (at pp.c:547)
    TypeDecl: declname='P4SEL@"0x001F"', quals=['volatile'] (at pp.c:547)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P5OUT@"0x0031"', quals=['volatile'], storage=[] (at pp.c:558)
    TypeDecl: declname='P5OUT@"0x0031"', quals=['volatile'] (at pp.c:558)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P5DIR@"0x0032"', quals=['volatile'], storage=[] (at pp.c:560)
    TypeDecl: declname='P5DIR@"0x0032"', quals=['volatile'] (at pp.c:560)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P5SEL@"0x0033"', quals=['volatile'], storage=[] (at pp.c:562)
    TypeDecl: declname='P5SEL@"0x0033"', quals=['volatile'] (at pp.c:562)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P6OUT@"0x0035"', quals=['volatile'], storage=[] (at pp.c:573)
    TypeDecl: declname='P6OUT@"0x0035"', quals=['volatile'] (at pp.c:573)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P6DIR@"0x0036"', quals=['volatile'], storage=[] (at pp.c:575)
    TypeDecl: declname='P6DIR@"0x0036"', quals=['volatile'] (at pp.c:575)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P6SEL@"0x0037"', quals=['volatile'], storage=[] (at pp.c:577)
    TypeDecl: declname='P6SEL@"0x0037"', quals=['volatile'] (at pp.c:577)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U0TCTL@"0x0071"', quals=['volatile'], storage=[] (at pp.c:579)
    TypeDecl: declname='U0TCTL@"0x0071"', quals=['volatile'] (at pp.c:579)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U1TCTL@"0x0079"', quals=['volatile'], storage=[] (at pp.c:581)
    TypeDecl: declname='U1TCTL@"0x0079"', quals=['volatile'] (at pp.c:581)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='TA0CTL@"0x0160"', quals=['volatile'], storage=[] (at pp.c:583)
    TypeDecl: declname='TA0CTL@"0x0160"', quals=['volatile'] (at pp.c:583)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TA0R@"0x0170"', quals=['volatile'], storage=[] (at pp.c:585)
    TypeDecl: declname='TA0R@"0x0170"', quals=['volatile'] (at pp.c:585)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TA0CCTL0@"0x0162"', quals=['volatile'], storage=[] (at pp.c:588)
    TypeDecl: declname='TA0CCTL0@"0x0162"', quals=['volatile'] (at pp.c:588)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TA0CCTL1@"0x0164"', quals=['volatile'], storage=[] (at pp.c:590)
    TypeDecl: declname='TA0CCTL1@"0x0164"', quals=['volatile'] (at pp.c:590)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TA0CCTL2@"0x0166"', quals=['volatile'], storage=[] (at pp.c:592)
    TypeDecl: declname='TA0CCTL2@"0x0166"', quals=['volatile'] (at pp.c:592)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='tactl_t', quals=[], storage=['typedef'] (at pp.c:604)
    TypeDecl: declname='tactl_t', quals=[] (at pp.c:604)
      Struct: name='__nesc_unnamed4250', packed=True (at pp.c:595)
        Decl: name='taifg', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='taifg', quals=['volatile'] (at pp.c:597)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:597)
        Decl: name='taie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='taie', quals=['volatile'] (at pp.c:598)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:598)
        Decl: name='taclr', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='taclr', quals=['volatile'] (at pp.c:599)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:599)
        Decl: name='dummy', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='dummy', quals=['volatile'] (at pp.c:600)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:600)
        Decl: name='tamc', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tamc', quals=['volatile'] (at pp.c:601)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:601)
        Decl: name='taid', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='taid', quals=['volatile'] (at pp.c:602)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:602)
        Decl: name='tassel', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tassel', quals=['volatile'] (at pp.c:603)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:603)
  Typedef: name='tacctl_t', quals=[], storage=['typedef'] (at pp.c:621)
    TypeDecl: declname='tacctl_t', quals=[] (at pp.c:621)
      Struct: name='__nesc_unnamed4251', packed=True (at pp.c:607)
        Decl: name='ccifg', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccifg', quals=['volatile'] (at pp.c:609)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:609)
        Decl: name='cov', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cov', quals=['volatile'] (at pp.c:610)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:610)
        Decl: name='out', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='out', quals=['volatile'] (at pp.c:611)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:611)
        Decl: name='cci', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cci', quals=['volatile'] (at pp.c:612)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:612)
        Decl: name='ccie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccie', quals=['volatile'] (at pp.c:613)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:613)
        Decl: name='outmod', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='outmod', quals=['volatile'] (at pp.c:614)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:614)
        Decl: name='cap', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cap', quals=['volatile'] (at pp.c:615)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:615)
        Decl: name='dummy', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='dummy', quals=['volatile'] (at pp.c:616)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:616)
        Decl: name='scci', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='scci', quals=['volatile'] (at pp.c:617)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:617)
        Decl: name='scs', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='scs', quals=['volatile'] (at pp.c:618)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:618)
        Decl: name='ccis', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccis', quals=['volatile'] (at pp.c:619)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:619)
        Decl: name='cm', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cm', quals=['volatile'] (at pp.c:620)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:620)
  Decl: name=None, quals=[], storage=[] (at pp.c:624)
    Struct: name='timera_t', packed=False (at pp.c:624)
      Decl: name='ctl', quals=[], storage=[] (at 0)
        TypeDecl: declname='ctl', quals=[] (at pp.c:625)
          IdentifierType: names=['tactl_t'] (at None)
      Decl: name='cctl0', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl0', quals=[] (at pp.c:626)
          IdentifierType: names=['tacctl_t'] (at None)
      Decl: name='cctl1', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl1', quals=[] (at pp.c:627)
          IdentifierType: names=['tacctl_t'] (at None)
      Decl: name='cctl2', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl2', quals=[] (at pp.c:628)
          IdentifierType: names=['tacctl_t'] (at None)
      Decl: name='dummy', quals=['volatile'], storage=[] (at 0)
        ArrayDecl:  (at pp.c:629)
          TypeDecl: declname='dummy', quals=['volatile'] (at pp.c:629)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:629)
      Decl: name='tar', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tar', quals=['volatile'] (at pp.c:630)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='taccr0', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='taccr0', quals=['volatile'] (at pp.c:631)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='taccr1', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='taccr1', quals=['volatile'] (at pp.c:632)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='taccr2', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='taccr2', quals=['volatile'] (at pp.c:633)
          IdentifierType: names=['unsigned'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:638)
    Struct: name='timera_t', packed=False (at pp.c:638)
  Decl: name='TBR@"0x0190"', quals=['volatile'], storage=[] (at pp.c:640)
    TypeDecl: declname='TBR@"0x0190"', quals=['volatile'] (at pp.c:640)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TBCCTL0@"0x0182"', quals=['volatile'], storage=[] (at pp.c:643)
    TypeDecl: declname='TBCCTL0@"0x0182"', quals=['volatile'] (at pp.c:643)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TBCCR0@"0x0192"', quals=['volatile'], storage=[] (at pp.c:649)
    TypeDecl: declname='TBCCR0@"0x0192"', quals=['volatile'] (at pp.c:649)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='tbctl_t', quals=[], storage=['typedef'] (at pp.c:664)
    TypeDecl: declname='tbctl_t', quals=[] (at pp.c:664)
      Struct: name='__nesc_unnamed4252', packed=True (at pp.c:652)
        Decl: name='tbifg', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbifg', quals=['volatile'] (at pp.c:654)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:654)
        Decl: name='tbie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbie', quals=['volatile'] (at pp.c:655)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:655)
        Decl: name='tbclr', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbclr', quals=['volatile'] (at pp.c:656)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:656)
        Decl: name='dummy1', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='dummy1', quals=['volatile'] (at pp.c:657)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:657)
        Decl: name='tbmc', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbmc', quals=['volatile'] (at pp.c:658)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:658)
        Decl: name='tbid', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbid', quals=['volatile'] (at pp.c:659)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:659)
        Decl: name='tbssel', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbssel', quals=['volatile'] (at pp.c:660)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:660)
        Decl: name='dummy2', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='dummy2', quals=['volatile'] (at pp.c:661)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:661)
        Decl: name='tbcntl', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbcntl', quals=['volatile'] (at pp.c:662)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:662)
        Decl: name='tbclgrp', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbclgrp', quals=['volatile'] (at pp.c:663)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:663)
  Typedef: name='tbcctl_t', quals=[], storage=['typedef'] (at pp.c:680)
    TypeDecl: declname='tbcctl_t', quals=[] (at pp.c:680)
      Struct: name='__nesc_unnamed4253', packed=True (at pp.c:667)
        Decl: name='ccifg', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccifg', quals=['volatile'] (at pp.c:669)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:669)
        Decl: name='cov', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cov', quals=['volatile'] (at pp.c:670)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:670)
        Decl: name='out', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='out', quals=['volatile'] (at pp.c:671)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:671)
        Decl: name='cci', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cci', quals=['volatile'] (at pp.c:672)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:672)
        Decl: name='ccie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccie', quals=['volatile'] (at pp.c:673)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:673)
        Decl: name='outmod', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='outmod', quals=['volatile'] (at pp.c:674)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:674)
        Decl: name='cap', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cap', quals=['volatile'] (at pp.c:675)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:675)
        Decl: name='clld', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='clld', quals=['volatile'] (at pp.c:676)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:676)
        Decl: name='scs', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='scs', quals=['volatile'] (at pp.c:677)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:677)
        Decl: name='ccis', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccis', quals=['volatile'] (at pp.c:678)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:678)
        Decl: name='cm', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cm', quals=['volatile'] (at pp.c:679)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:679)
  Decl: name=None, quals=[], storage=[] (at pp.c:683)
    Struct: name='timerb_t', packed=False (at pp.c:683)
      Decl: name='ctl', quals=[], storage=[] (at 0)
        TypeDecl: declname='ctl', quals=[] (at pp.c:684)
          IdentifierType: names=['tbctl_t'] (at None)
      Decl: name='cctl0', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl0', quals=[] (at pp.c:685)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl1', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl1', quals=[] (at pp.c:686)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl2', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl2', quals=[] (at pp.c:687)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl3', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl3', quals=[] (at pp.c:689)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl4', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl4', quals=[] (at pp.c:690)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl5', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl5', quals=[] (at pp.c:691)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl6', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl6', quals=[] (at pp.c:692)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='tbr', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbr', quals=['volatile'] (at pp.c:696)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr0', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr0', quals=['volatile'] (at pp.c:697)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr1', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr1', quals=['volatile'] (at pp.c:698)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr2', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr2', quals=['volatile'] (at pp.c:699)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr3', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr3', quals=['volatile'] (at pp.c:701)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr4', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr4', quals=['volatile'] (at pp.c:702)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr5', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr5', quals=['volatile'] (at pp.c:703)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr6', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr6', quals=['volatile'] (at pp.c:704)
          IdentifierType: names=['unsigned'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:711)
    Struct: name='timerb_t', packed=False (at pp.c:711)
  Decl: name='DCOCTL@"0x0056"', quals=['volatile'], storage=[] (at pp.c:713)
    TypeDecl: declname='DCOCTL@"0x0056"', quals=['volatile'] (at pp.c:713)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='BCSCTL1@"0x0057"', quals=['volatile'], storage=[] (at pp.c:715)
    TypeDecl: declname='BCSCTL1@"0x0057"', quals=['volatile'] (at pp.c:715)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='BCSCTL2@"0x0058"', quals=['volatile'], storage=[] (at pp.c:717)
    TypeDecl: declname='BCSCTL2@"0x0058"', quals=['volatile'] (at pp.c:717)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='ADC12CTL0@"0x01A0"', quals=['volatile'], storage=[] (at pp.c:719)
    TypeDecl: declname='ADC12CTL0@"0x01A0"', quals=['volatile'] (at pp.c:719)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='ADC12CTL1@"0x01A2"', quals=['volatile'], storage=[] (at pp.c:721)
    TypeDecl: declname='ADC12CTL1@"0x01A2"', quals=['volatile'] (at pp.c:721)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='adc12ctl0_t', quals=[], storage=['typedef'] (at pp.c:736)
    TypeDecl: declname='adc12ctl0_t', quals=[] (at pp.c:736)
      Struct: name='__nesc_unnamed4254', packed=True (at pp.c:724)
        Decl: name='adc12sc', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12sc', quals=['volatile'] (at pp.c:726)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:726)
        Decl: name='enc', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='enc', quals=['volatile'] (at pp.c:727)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:727)
        Decl: name='adc12tovie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12tovie', quals=['volatile'] (at pp.c:728)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:728)
        Decl: name='adc12ovie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12ovie', quals=['volatile'] (at pp.c:729)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:729)
        Decl: name='adc12on', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12on', quals=['volatile'] (at pp.c:730)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:730)
        Decl: name='refon', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='refon', quals=['volatile'] (at pp.c:731)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:731)
        Decl: name='r2_5v', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='r2_5v', quals=['volatile'] (at pp.c:732)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:732)
        Decl: name='msc', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='msc', quals=['volatile'] (at pp.c:733)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:733)
        Decl: name='sht0', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='sht0', quals=['volatile'] (at pp.c:734)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:734)
        Decl: name='sht1', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='sht1', quals=['volatile'] (at pp.c:735)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:735)
  Typedef: name='adc12ctl1_t', quals=[], storage=['typedef'] (at pp.c:749)
    TypeDecl: declname='adc12ctl1_t', quals=[] (at pp.c:749)
      Struct: name='__nesc_unnamed4255', packed=True (at pp.c:739)
        Decl: name='adc12busy', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12busy', quals=['volatile'] (at pp.c:741)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:741)
        Decl: name='conseq', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='conseq', quals=['volatile'] (at pp.c:742)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:742)
        Decl: name='adc12ssel', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12ssel', quals=['volatile'] (at pp.c:743)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:743)
        Decl: name='adc12div', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12div', quals=['volatile'] (at pp.c:744)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:744)
        Decl: name='issh', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='issh', quals=['volatile'] (at pp.c:745)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:745)
        Decl: name='shp', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='shp', quals=['volatile'] (at pp.c:746)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:746)
        Decl: name='shs', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='shs', quals=['volatile'] (at pp.c:747)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:747)
        Decl: name='cstartadd', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cstartadd', quals=['volatile'] (at pp.c:748)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:748)
  Typedef: name='adc12xflg_t', quals=[], storage=['typedef'] (at pp.c:770)
    TypeDecl: declname='adc12xflg_t', quals=[] (at pp.c:770)
      Struct: name='__nesc_unnamed4256', packed=True (at pp.c:752)
        Decl: name='bit0', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit0', quals=['volatile'] (at pp.c:754)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:754)
        Decl: name='bit1', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit1', quals=['volatile'] (at pp.c:755)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:755)
        Decl: name='bit2', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit2', quals=['volatile'] (at pp.c:756)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:756)
        Decl: name='bit3', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit3', quals=['volatile'] (at pp.c:757)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:757)
        Decl: name='bit4', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit4', quals=['volatile'] (at pp.c:758)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:758)
        Decl: name='bit5', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit5', quals=['volatile'] (at pp.c:759)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:759)
        Decl: name='bit6', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit6', quals=['volatile'] (at pp.c:760)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:760)
        Decl: name='bit7', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit7', quals=['volatile'] (at pp.c:761)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:761)
        Decl: name='bit8', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit8', quals=['volatile'] (at pp.c:762)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:762)
        Decl: name='bit9', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit9', quals=['volatile'] (at pp.c:763)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:763)
        Decl: name='bit10', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit10', quals=['volatile'] (at pp.c:764)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:764)
        Decl: name='bit11', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit11', quals=['volatile'] (at pp.c:765)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:765)
        Decl: name='bit12', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit12', quals=['volatile'] (at pp.c:766)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:766)
        Decl: name='bit13', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit13', quals=['volatile'] (at pp.c:767)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:767)
        Decl: name='bit14', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit14', quals=['volatile'] (at pp.c:768)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:768)
        Decl: name='bit15', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit15', quals=['volatile'] (at pp.c:769)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:769)
  Decl: name=None, quals=[], storage=[] (at pp.c:773)
    Struct: name='adc12_t', packed=False (at pp.c:773)
      Decl: name='ctl0', quals=[], storage=[] (at 0)
        TypeDecl: declname='ctl0', quals=[] (at pp.c:774)
          IdentifierType: names=['adc12ctl0_t'] (at None)
      Decl: name='ctl1', quals=[], storage=[] (at 0)
        TypeDecl: declname='ctl1', quals=[] (at pp.c:775)
          IdentifierType: names=['adc12ctl1_t'] (at None)
      Decl: name='ifg', quals=[], storage=[] (at 0)
        TypeDecl: declname='ifg', quals=[] (at pp.c:776)
          IdentifierType: names=['adc12xflg_t'] (at None)
      Decl: name='ie', quals=[], storage=[] (at 0)
        TypeDecl: declname='ie', quals=[] (at pp.c:777)
          IdentifierType: names=['adc12xflg_t'] (at None)
      Decl: name='iv', quals=[], storage=[] (at 0)
        TypeDecl: declname='iv', quals=[] (at pp.c:778)
          IdentifierType: names=['adc12xflg_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:784)
    Struct: name='adc12_t', packed=False (at pp.c:784)
  Decl: name='ME1@"0x0004"', quals=['volatile'], storage=[] (at pp.c:786)
    TypeDecl: declname='ME1@"0x0004"', quals=['volatile'] (at pp.c:786)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='ME2@"0x0005"', quals=['volatile'], storage=[] (at pp.c:792)
    TypeDecl: declname='ME2@"0x0005"', quals=['volatile'] (at pp.c:792)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U0CTLnr@"0x0070"', quals=['volatile'], storage=['static'] (at pp.c:794)
    TypeDecl: declname='U0CTLnr@"0x0070"', quals=['volatile'] (at pp.c:794)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='I2CTCTLnr@"0x0071"', quals=['volatile'], storage=['static'] (at pp.c:795)
    TypeDecl: declname='I2CTCTLnr@"0x0071"', quals=['volatile'] (at pp.c:795)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='I2CDCTLnr@"0x0072"', quals=['volatile'], storage=['static'] (at pp.c:796)
    TypeDecl: declname='I2CDCTLnr@"0x0072"', quals=['volatile'] (at pp.c:796)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='mcu_power_t', quals=[], storage=['typedef'] (at pp.c:798)
    TypeDecl: declname='mcu_power_t', quals=[] (at pp.c:798)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='mcombine', quals=[], storage=['inline', 'static'] (at pp.c:799)
    FuncDecl: quals=None (at pp.c:799)
      ParamList:  (at pp.c:799)
        Decl: name='m1', quals=[], storage=[] (at pp.c:799)
          TypeDecl: declname='m1', quals=[] (at pp.c:799)
            IdentifierType: names=['mcu_power_t'] (at None)
        Decl: name='m2', quals=[], storage=[] (at pp.c:799)
          TypeDecl: declname='m2', quals=[] (at pp.c:799)
            IdentifierType: names=['mcu_power_t'] (at None)
      TypeDecl: declname='mcombine', quals=[] (at pp.c:799)
        IdentifierType: names=['mcu_power_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:802)
    Enum: name='__nesc_unnamed4257' (at pp.c:802)
      EnumeratorList:  (at pp.c:803)
        Enumerator: name='MSP430_POWER_ACTIVE' (at pp.c:803)
          Constant: type='int', value='0' (at pp.c:803)
        Enumerator: name='MSP430_POWER_LPM0' (at pp.c:804)
          Constant: type='int', value='1' (at pp.c:804)
        Enumerator: name='MSP430_POWER_LPM1' (at pp.c:805)
          Constant: type='int', value='2' (at pp.c:805)
        Enumerator: name='MSP430_POWER_LPM2' (at pp.c:806)
          Constant: type='int', value='3' (at pp.c:806)
        Enumerator: name='MSP430_POWER_LPM3' (at pp.c:807)
          Constant: type='int', value='4' (at pp.c:807)
        Enumerator: name='MSP430_POWER_LPM4' (at pp.c:808)
          Constant: type='int', value='5' (at pp.c:808)
  Decl: name='__nesc_disable_interrupt', quals=[], storage=['inline', 'static'] (at pp.c:811)
    FuncDecl: quals=None (at pp.c:811)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_disable_interrupt', quals=[] (at pp.c:811)
        IdentifierType: names=['void'] (at None)
  Decl: name='__nesc_enable_interrupt', quals=[], storage=['inline', 'static'] (at pp.c:817)
    FuncDecl: quals=None (at pp.c:817)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_enable_interrupt', quals=[] (at pp.c:817)
        IdentifierType: names=['void'] (at None)
  Typedef: name='__nesc_atomic_t', quals=[], storage=['typedef'] (at pp.c:822)
    TypeDecl: declname='__nesc_atomic_t', quals=[] (at pp.c:822)
      IdentifierType: names=['bool'] (at None)
  Decl: name='__nesc_atomic_start', quals=[], storage=[] (at pp.c:823)
    FuncDecl: quals=None (at pp.c:823)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_atomic_start', quals=[] (at pp.c:823)
        IdentifierType: names=['__nesc_atomic_t'] (at None)
  Decl: name='__nesc_atomic_end', quals=[], storage=[] (at pp.c:824)
    FuncDecl: quals=None (at pp.c:824)
      ParamList:  (at pp.c:824)
        Decl: name='reenable_interrupts', quals=[], storage=[] (at pp.c:824)
          TypeDecl: declname='reenable_interrupts', quals=[] (at pp.c:824)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
      TypeDecl: declname='__nesc_atomic_end', quals=[] (at pp.c:824)
        IdentifierType: names=['void'] (at None)
  Decl: name='__nesc_atomic_start', quals=[], storage=[] (at pp.c:831)
    FuncDecl: quals=None (at pp.c:831)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_atomic_start', quals=[] (at pp.c:831)
        IdentifierType: names=['__nesc_atomic_t'] (at None)
  Decl: name='__nesc_atomic_end', quals=[], storage=[] (at pp.c:839)
    FuncDecl: quals=None (at pp.c:839)
      ParamList:  (at pp.c:839)
        Decl: name='reenable_interrupts', quals=[], storage=[] (at pp.c:839)
          TypeDecl: declname='reenable_interrupts', quals=[] (at pp.c:839)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
      TypeDecl: declname='__nesc_atomic_end', quals=[] (at pp.c:839)
        IdentifierType: names=['void'] (at None)
  Typedef: name='nx_float', quals=[], storage=['typedef'] (at pp.c:841)
    TypeDecl: declname='nx_float', quals=[] (at pp.c:841)
      Struct: name=None, packed=False (at pp.c:841)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:841)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:841)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='4' (at pp.c:841)
  Typedef: name='__nesc_nxbase_nx_float', quals=[], storage=['typedef'] (at pp.c:841)
    TypeDecl: declname='__nesc_nxbase_nx_float', quals=[] (at pp.c:841)
      IdentifierType: names=['float'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:843)
    Enum: name='__nesc_unnamed4258' (at pp.c:843)
      EnumeratorList:  (at pp.c:844)
        Enumerator: name='TOS_SLEEP_NONE' (at pp.c:844)
          ID: name='MSP430_POWER_ACTIVE' (at pp.c:844)
  Typedef: name='TMilli', quals=[], storage=['typedef'] (at pp.c:852)
    TypeDecl: declname='TMilli', quals=[] (at pp.c:852)
      Struct: name='__nesc_unnamed4259', packed=False (at pp.c:847)
        Decl: name='notUsed', quals=[], storage=[] (at 0)
          TypeDecl: declname='notUsed', quals=[] (at pp.c:849)
            IdentifierType: names=['int'] (at None)
  Typedef: name='T32khz', quals=[], storage=['typedef'] (at pp.c:858)
    TypeDecl: declname='T32khz', quals=[] (at pp.c:858)
      Struct: name='__nesc_unnamed4260', packed=False (at pp.c:853)
        Decl: name='notUsed', quals=[], storage=[] (at 0)
          TypeDecl: declname='notUsed', quals=[] (at pp.c:855)
            IdentifierType: names=['int'] (at None)
  Typedef: name='TMicro', quals=[], storage=['typedef'] (at pp.c:864)
    TypeDecl: declname='TMicro', quals=[] (at pp.c:864)
      Struct: name='__nesc_unnamed4261', packed=False (at pp.c:859)
        Decl: name='notUsed', quals=[], storage=[] (at 0)
          TypeDecl: declname='notUsed', quals=[] (at pp.c:861)
            IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:866)
    Enum: name='__nesc_unnamed4262' (at pp.c:866)
      EnumeratorList:  (at pp.c:867)
        Enumerator: name='LEDS_LED0' (at pp.c:867)
          BinaryOp: op='<<' (at pp.c:867)
            Constant: type='int', value='1' (at pp.c:867)
            Constant: type='int', value='0' (at pp.c:867)
        Enumerator: name='LEDS_LED1' (at pp.c:868)
          BinaryOp: op='<<' (at pp.c:868)
            Constant: type='int', value='1' (at pp.c:868)
            Constant: type='int', value='1' (at pp.c:868)
        Enumerator: name='LEDS_LED2' (at pp.c:869)
          BinaryOp: op='<<' (at pp.c:869)
            Constant: type='int', value='1' (at pp.c:869)
            Constant: type='int', value='2' (at pp.c:869)
        Enumerator: name='LEDS_LED3' (at pp.c:870)
          BinaryOp: op='<<' (at pp.c:870)
            Constant: type='int', value='1' (at pp.c:870)
            Constant: type='int', value='3' (at pp.c:870)
        Enumerator: name='LEDS_LED4' (at pp.c:871)
          BinaryOp: op='<<' (at pp.c:871)
            Constant: type='int', value='1' (at pp.c:871)
            Constant: type='int', value='4' (at pp.c:871)
        Enumerator: name='LEDS_LED5' (at pp.c:872)
          BinaryOp: op='<<' (at pp.c:872)
            Constant: type='int', value='1' (at pp.c:872)
            Constant: type='int', value='5' (at pp.c:872)
        Enumerator: name='LEDS_LED6' (at pp.c:873)
          BinaryOp: op='<<' (at pp.c:873)
            Constant: type='int', value='1' (at pp.c:873)
            Constant: type='int', value='6' (at pp.c:873)
        Enumerator: name='LEDS_LED7' (at pp.c:874)
          BinaryOp: op='<<' (at pp.c:874)
            Constant: type='int', value='1' (at pp.c:874)
            Constant: type='int', value='7' (at pp.c:874)
  Decl: name=None, quals=[], storage=[] (at pp.c:877)
    Enum: name='__nesc_unnamed4263' (at pp.c:877)
      EnumeratorList:  (at pp.c:878)
        Enumerator: name='MSP430TIMER_CM_NONE' (at pp.c:878)
          Constant: type='int', value='0' (at pp.c:878)
        Enumerator: name='MSP430TIMER_CM_RISING' (at pp.c:879)
          Constant: type='int', value='1' (at pp.c:879)
        Enumerator: name='MSP430TIMER_CM_FALLING' (at pp.c:880)
          Constant: type='int', value='2' (at pp.c:880)
        Enumerator: name='MSP430TIMER_CM_BOTH' (at pp.c:881)
          Constant: type='int', value='3' (at pp.c:881)
        Enumerator: name='MSP430TIMER_STOP_MODE' (at pp.c:883)
          Constant: type='int', value='0' (at pp.c:883)
        Enumerator: name='MSP430TIMER_UP_MODE' (at pp.c:884)
          Constant: type='int', value='1' (at pp.c:884)
        Enumerator: name='MSP430TIMER_CONTINUOUS_MODE' (at pp.c:885)
          Constant: type='int', value='2' (at pp.c:885)
        Enumerator: name='MSP430TIMER_UPDOWN_MODE' (at pp.c:886)
          Constant: type='int', value='3' (at pp.c:886)
        Enumerator: name='MSP430TIMER_TACLK' (at pp.c:888)
          Constant: type='int', value='0' (at pp.c:888)
        Enumerator: name='MSP430TIMER_TBCLK' (at pp.c:889)
          Constant: type='int', value='0' (at pp.c:889)
        Enumerator: name='MSP430TIMER_ACLK' (at pp.c:890)
          Constant: type='int', value='1' (at pp.c:890)
        Enumerator: name='MSP430TIMER_SMCLK' (at pp.c:891)
          Constant: type='int', value='2' (at pp.c:891)
        Enumerator: name='MSP430TIMER_INCLK' (at pp.c:892)
          Constant: type='int', value='3' (at pp.c:892)
        Enumerator: name='MSP430TIMER_CLOCKDIV_1' (at pp.c:894)
          Constant: type='int', value='0' (at pp.c:894)
        Enumerator: name='MSP430TIMER_CLOCKDIV_2' (at pp.c:895)
          Constant: type='int', value='1' (at pp.c:895)
        Enumerator: name='MSP430TIMER_CLOCKDIV_4' (at pp.c:896)
          Constant: type='int', value='2' (at pp.c:896)
        Enumerator: name='MSP430TIMER_CLOCKDIV_8' (at pp.c:897)
          Constant: type='int', value='3' (at pp.c:897)
  Typedef: name='msp430_compare_control_t', quals=[], storage=['typedef'] (at pp.c:914)
    TypeDecl: declname='msp430_compare_control_t', quals=[] (at pp.c:914)
      Struct: name='__nesc_unnamed4264', packed=False (at pp.c:901)
        Decl: name='ccifg', quals=[], storage=[] (at 0)
          TypeDecl: declname='ccifg', quals=[] (at pp.c:903)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:903)
        Decl: name='cov', quals=[], storage=[] (at 0)
          TypeDecl: declname='cov', quals=[] (at pp.c:904)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:904)
        Decl: name='out', quals=[], storage=[] (at 0)
          TypeDecl: declname='out', quals=[] (at pp.c:905)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:905)
        Decl: name='cci', quals=[], storage=[] (at 0)
          TypeDecl: declname='cci', quals=[] (at pp.c:906)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:906)
        Decl: name='ccie', quals=[], storage=[] (at 0)
          TypeDecl: declname='ccie', quals=[] (at pp.c:907)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:907)
        Decl: name='outmod', quals=[], storage=[] (at 0)
          TypeDecl: declname='outmod', quals=[] (at pp.c:908)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='3' (at pp.c:908)
        Decl: name='cap', quals=[], storage=[] (at 0)
          TypeDecl: declname='cap', quals=[] (at pp.c:909)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:909)
        Decl: name='clld', quals=[], storage=[] (at 0)
          TypeDecl: declname='clld', quals=[] (at pp.c:910)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:910)
        Decl: name='scs', quals=[], storage=[] (at 0)
          TypeDecl: declname='scs', quals=[] (at pp.c:911)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:911)
        Decl: name='ccis', quals=[], storage=[] (at 0)
          TypeDecl: declname='ccis', quals=[] (at pp.c:912)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:912)
        Decl: name='cm', quals=[], storage=[] (at 0)
          TypeDecl: declname='cm', quals=[] (at pp.c:913)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:913)
  Typedef: name='msp430_timer_a_control_t', quals=[], storage=['typedef'] (at pp.c:927)
    TypeDecl: declname='msp430_timer_a_control_t', quals=[] (at pp.c:927)
      Struct: name='__nesc_unnamed4265', packed=False (at pp.c:917)
        Decl: name='taifg', quals=[], storage=[] (at 0)
          TypeDecl: declname='taifg', quals=[] (at pp.c:919)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:919)
        Decl: name='taie', quals=[], storage=[] (at 0)
          TypeDecl: declname='taie', quals=[] (at pp.c:920)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:920)
        Decl: name='taclr', quals=[], storage=[] (at 0)
          TypeDecl: declname='taclr', quals=[] (at pp.c:921)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:921)
        Decl: name='_unused0', quals=[], storage=[] (at 0)
          TypeDecl: declname='_unused0', quals=[] (at pp.c:922)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:922)
        Decl: name='mc', quals=[], storage=[] (at 0)
          TypeDecl: declname='mc', quals=[] (at pp.c:923)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:923)
        Decl: name='id', quals=[], storage=[] (at 0)
          TypeDecl: declname='id', quals=[] (at pp.c:924)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:924)
        Decl: name='tassel', quals=[], storage=[] (at 0)
          TypeDecl: declname='tassel', quals=[] (at pp.c:925)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:925)
        Decl: name='_unused1', quals=[], storage=[] (at 0)
          TypeDecl: declname='_unused1', quals=[] (at pp.c:926)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='6' (at pp.c:926)
  Typedef: name='msp430_timer_b_control_t', quals=[], storage=['typedef'] (at pp.c:943)
    TypeDecl: declname='msp430_timer_b_control_t', quals=[] (at pp.c:943)
      Struct: name='__nesc_unnamed4266', packed=False (at pp.c:930)
        Decl: name='tbifg', quals=[], storage=[] (at 0)
          TypeDecl: declname='tbifg', quals=[] (at pp.c:932)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:932)
        Decl: name='tbie', quals=[], storage=[] (at 0)
          TypeDecl: declname='tbie', quals=[] (at pp.c:933)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:933)
        Decl: name='tbclr', quals=[], storage=[] (at 0)
          TypeDecl: declname='tbclr', quals=[] (at pp.c:934)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:934)
        Decl: name='_unused0', quals=[], storage=[] (at 0)
          TypeDecl: declname='_unused0', quals=[] (at pp.c:935)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:935)
        Decl: name='mc', quals=[], storage=[] (at 0)
          TypeDecl: declname='mc', quals=[] (at pp.c:936)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:936)
        Decl: name='id', quals=[], storage=[] (at 0)
          TypeDecl: declname='id', quals=[] (at pp.c:937)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:937)
        Decl: name='tbssel', quals=[], storage=[] (at 0)
          TypeDecl: declname='tbssel', quals=[] (at pp.c:938)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:938)
        Decl: name='_unused1', quals=[], storage=[] (at 0)
          TypeDecl: declname='_unused1', quals=[] (at pp.c:939)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:939)
        Decl: name='cntl', quals=[], storage=[] (at 0)
          TypeDecl: declname='cntl', quals=[] (at pp.c:940)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:940)
        Decl: name='tbclgrp', quals=[], storage=[] (at 0)
          TypeDecl: declname='tbclgrp', quals=[] (at pp.c:941)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:941)
        Decl: name='_unused2', quals=[], storage=[] (at 0)
          TypeDecl: declname='_unused2', quals=[] (at pp.c:942)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:942)
  Typedef: name='msp430adc12_channel_config_t', quals=[], storage=['typedef'] (at pp.c:957)
    TypeDecl: declname='msp430adc12_channel_config_t', quals=[] (at pp.c:957)
      Struct: name='__nesc_unnamed4267', packed=False (at pp.c:946)
        Decl: name='inch', quals=[], storage=[] (at 0)
          TypeDecl: declname='inch', quals=[] (at pp.c:948)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:948)
        Decl: name='sref', quals=[], storage=[] (at 0)
          TypeDecl: declname='sref', quals=[] (at pp.c:949)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:949)
        Decl: name='ref2_5v', quals=[], storage=[] (at 0)
          TypeDecl: declname='ref2_5v', quals=[] (at pp.c:950)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:950)
        Decl: name='adc12ssel', quals=[], storage=[] (at 0)
          TypeDecl: declname='adc12ssel', quals=[] (at pp.c:951)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:951)
        Decl: name='adc12div', quals=[], storage=[] (at 0)
          TypeDecl: declname='adc12div', quals=[] (at pp.c:952)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:952)
        Decl: name='sht', quals=[], storage=[] (at 0)
          TypeDecl: declname='sht', quals=[] (at pp.c:953)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:953)
        Decl: name='sampcon_ssel', quals=[], storage=[] (at 0)
          TypeDecl: declname='sampcon_ssel', quals=[] (at pp.c:954)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:954)
        Decl: name='sampcon_id', quals=[], storage=[] (at 0)
          TypeDecl: declname='sampcon_id', quals=[] (at pp.c:955)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:955)
  Typedef: name='adc12memctl_t', quals=[], storage=['typedef'] (at pp.c:974)
    TypeDecl: declname='adc12memctl_t', quals=[] (at pp.c:974)
      Struct: name='__nesc_unnamed4268', packed=True (at pp.c:967)
        Decl: name='inch', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='inch', quals=['volatile'] (at pp.c:971)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:971)
        Decl: name='sref', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='sref', quals=['volatile'] (at pp.c:972)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:972)
        Decl: name='eos', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='eos', quals=['volatile'] (at pp.c:973)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:973)
  Decl: name=None, quals=[], storage=[] (at pp.c:976)
    Enum: name='inch_enum' (at pp.c:976)
      EnumeratorList:  (at pp.c:979)
        Enumerator: name='INPUT_CHANNEL_A0' (at pp.c:979)
          Constant: type='int', value='0' (at pp.c:979)
        Enumerator: name='INPUT_CHANNEL_A1' (at pp.c:980)
          Constant: type='int', value='1' (at pp.c:980)
        Enumerator: name='INPUT_CHANNEL_A2' (at pp.c:981)
          Constant: type='int', value='2' (at pp.c:981)
        Enumerator: name='INPUT_CHANNEL_A3' (at pp.c:982)
          Constant: type='int', value='3' (at pp.c:982)
        Enumerator: name='INPUT_CHANNEL_A4' (at pp.c:983)
          Constant: type='int', value='4' (at pp.c:983)
        Enumerator: name='INPUT_CHANNEL_A5' (at pp.c:984)
          Constant: type='int', value='5' (at pp.c:984)
        Enumerator: name='INPUT_CHANNEL_A6' (at pp.c:985)
          Constant: type='int', value='6' (at pp.c:985)
        Enumerator: name='INPUT_CHANNEL_A7' (at pp.c:986)
          Constant: type='int', value='7' (at pp.c:986)
        Enumerator: name='EXTERNAL_REF_VOLTAGE_CHANNEL' (at pp.c:987)
          Constant: type='int', value='8' (at pp.c:987)
        Enumerator: name='REF_VOLTAGE_NEG_TERMINAL_CHANNEL' (at pp.c:988)
          Constant: type='int', value='9' (at pp.c:988)
        Enumerator: name='TEMPERATURE_DIODE_CHANNEL' (at pp.c:989)
          Constant: type='int', value='10' (at pp.c:989)
        Enumerator: name='SUPPLY_VOLTAGE_HALF_CHANNEL' (at pp.c:990)
          Constant: type='int', value='11' (at pp.c:990)
        Enumerator: name='INPUT_CHANNEL_NONE' (at pp.c:991)
          Constant: type='int', value='12' (at pp.c:991)
  Decl: name=None, quals=[], storage=[] (at pp.c:994)
    Enum: name='sref_enum' (at pp.c:994)
      EnumeratorList:  (at pp.c:996)
        Enumerator: name='REFERENCE_AVcc_AVss' (at pp.c:996)
          Constant: type='int', value='0' (at pp.c:996)
        Enumerator: name='REFERENCE_VREFplus_AVss' (at pp.c:997)
          Constant: type='int', value='1' (at pp.c:997)
        Enumerator: name='REFERENCE_VeREFplus_AVss' (at pp.c:998)
          Constant: type='int', value='2' (at pp.c:998)
        Enumerator: name='REFERENCE_AVcc_VREFnegterm' (at pp.c:999)
          Constant: type='int', value='4' (at pp.c:999)
        Enumerator: name='REFERENCE_VREFplus_VREFnegterm' (at pp.c:1000)
          Constant: type='int', value='5' (at pp.c:1000)
        Enumerator: name='REFERENCE_VeREFplus_VREFnegterm' (at pp.c:1001)
          Constant: type='int', value='6' (at pp.c:1001)
  Decl: name=None, quals=[], storage=[] (at pp.c:1004)
    Enum: name='ref2_5v_enum' (at pp.c:1004)
      EnumeratorList:  (at pp.c:1006)
        Enumerator: name='REFVOLT_LEVEL_1_5' (at pp.c:1006)
          Constant: type='int', value='0' (at pp.c:1006)
        Enumerator: name='REFVOLT_LEVEL_2_5' (at pp.c:1007)
          Constant: type='int', value='1' (at pp.c:1007)
        Enumerator: name='REFVOLT_LEVEL_NONE' (at pp.c:1008)
          Constant: type='int', value='0' (at pp.c:1008)
  Decl: name=None, quals=[], storage=[] (at pp.c:1011)
    Enum: name='adc12ssel_enum' (at pp.c:1011)
      EnumeratorList:  (at pp.c:1013)
        Enumerator: name='SHT_SOURCE_ADC12OSC' (at pp.c:1013)
          Constant: type='int', value='0' (at pp.c:1013)
        Enumerator: name='SHT_SOURCE_ACLK' (at pp.c:1014)
          Constant: type='int', value='1' (at pp.c:1014)
        Enumerator: name='SHT_SOURCE_MCLK' (at pp.c:1015)
          Constant: type='int', value='2' (at pp.c:1015)
        Enumerator: name='SHT_SOURCE_SMCLK' (at pp.c:1016)
          Constant: type='int', value='3' (at pp.c:1016)
  Decl: name=None, quals=[], storage=[] (at pp.c:1019)
    Enum: name='adc12div_enum' (at pp.c:1019)
      EnumeratorList:  (at pp.c:1021)
        Enumerator: name='SHT_CLOCK_DIV_1' (at pp.c:1021)
          Constant: type='int', value='0' (at pp.c:1021)
        Enumerator: name='SHT_CLOCK_DIV_2' (at pp.c:1022)
          Constant: type='int', value='1' (at pp.c:1022)
        Enumerator: name='SHT_CLOCK_DIV_3' (at pp.c:1023)
          Constant: type='int', value='2' (at pp.c:1023)
        Enumerator: name='SHT_CLOCK_DIV_4' (at pp.c:1024)
          Constant: type='int', value='3' (at pp.c:1024)
        Enumerator: name='SHT_CLOCK_DIV_5' (at pp.c:1025)
          Constant: type='int', value='4' (at pp.c:1025)
        Enumerator: name='SHT_CLOCK_DIV_6' (at pp.c:1026)
          Constant: type='int', value='5' (at pp.c:1026)
        Enumerator: name='SHT_CLOCK_DIV_7' (at pp.c:1027)
          Constant: type='int', value='6' (at pp.c:1027)
        Enumerator: name='SHT_CLOCK_DIV_8' (at pp.c:1028)
          Constant: type='int', value='7' (at pp.c:1028)
  Decl: name=None, quals=[], storage=[] (at pp.c:1031)
    Enum: name='sht_enum' (at pp.c:1031)
      EnumeratorList:  (at pp.c:1033)
        Enumerator: name='SAMPLE_HOLD_4_CYCLES' (at pp.c:1033)
          Constant: type='int', value='0' (at pp.c:1033)
        Enumerator: name='SAMPLE_HOLD_8_CYCLES' (at pp.c:1034)
          Constant: type='int', value='1' (at pp.c:1034)
        Enumerator: name='SAMPLE_HOLD_16_CYCLES' (at pp.c:1035)
          Constant: type='int', value='2' (at pp.c:1035)
        Enumerator: name='SAMPLE_HOLD_32_CYCLES' (at pp.c:1036)
          Constant: type='int', value='3' (at pp.c:1036)
        Enumerator: name='SAMPLE_HOLD_64_CYCLES' (at pp.c:1037)
          Constant: type='int', value='4' (at pp.c:1037)
        Enumerator: name='SAMPLE_HOLD_96_CYCLES' (at pp.c:1038)
          Constant: type='int', value='5' (at pp.c:1038)
        Enumerator: name='SAMPLE_HOLD_128_CYCLES' (at pp.c:1039)
          Constant: type='int', value='6' (at pp.c:1039)
        Enumerator: name='SAMPLE_HOLD_192_CYCLES' (at pp.c:1040)
          Constant: type='int', value='7' (at pp.c:1040)
        Enumerator: name='SAMPLE_HOLD_256_CYCLES' (at pp.c:1041)
          Constant: type='int', value='8' (at pp.c:1041)
        Enumerator: name='SAMPLE_HOLD_384_CYCLES' (at pp.c:1042)
          Constant: type='int', value='9' (at pp.c:1042)
        Enumerator: name='SAMPLE_HOLD_512_CYCLES' (at pp.c:1043)
          Constant: type='int', value='10' (at pp.c:1043)
        Enumerator: name='SAMPLE_HOLD_768_CYCLES' (at pp.c:1044)
          Constant: type='int', value='11' (at pp.c:1044)
        Enumerator: name='SAMPLE_HOLD_1024_CYCLES' (at pp.c:1045)
          Constant: type='int', value='12' (at pp.c:1045)
  Decl: name=None, quals=[], storage=[] (at pp.c:1048)
    Enum: name='sampcon_ssel_enum' (at pp.c:1048)
      EnumeratorList:  (at pp.c:1050)
        Enumerator: name='SAMPCON_SOURCE_TACLK' (at pp.c:1050)
          Constant: type='int', value='0' (at pp.c:1050)
        Enumerator: name='SAMPCON_SOURCE_ACLK' (at pp.c:1051)
          Constant: type='int', value='1' (at pp.c:1051)
        Enumerator: name='SAMPCON_SOURCE_SMCLK' (at pp.c:1052)
          Constant: type='int', value='2' (at pp.c:1052)
        Enumerator: name='SAMPCON_SOURCE_INCLK' (at pp.c:1053)
          Constant: type='int', value='3' (at pp.c:1053)
  Decl: name=None, quals=[], storage=[] (at pp.c:1056)
    Enum: name='sampcon_id_enum' (at pp.c:1056)
      EnumeratorList:  (at pp.c:1058)
        Enumerator: name='SAMPCON_CLOCK_DIV_1' (at pp.c:1058)
          Constant: type='int', value='0' (at pp.c:1058)
        Enumerator: name='SAMPCON_CLOCK_DIV_2' (at pp.c:1059)
          Constant: type='int', value='1' (at pp.c:1059)
        Enumerator: name='SAMPCON_CLOCK_DIV_4' (at pp.c:1060)
          Constant: type='int', value='2' (at pp.c:1060)
        Enumerator: name='SAMPCON_CLOCK_DIV_8' (at pp.c:1061)
          Constant: type='int', value='3' (at pp.c:1061)
  Typedef: name='resource_client_id_t', quals=[], storage=['typedef'] (at pp.c:1064)
    TypeDecl: declname='resource_client_id_t', quals=[] (at pp.c:1064)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='SenseC__Read__val_t', quals=[], storage=['typedef'] (at pp.c:1065)
    TypeDecl: declname='SenseC__Read__val_t', quals=[] (at pp.c:1065)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='SenseC__Timer__precision_tag', quals=[], storage=['typedef'] (at pp.c:1066)
    TypeDecl: declname='SenseC__Timer__precision_tag', quals=[] (at pp.c:1066)
      IdentifierType: names=['TMilli'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1067)
    Enum: name='Msp430Timer32khzC__0____nesc_unnamed4269' (at pp.c:1067)
      EnumeratorList:  (at pp.c:1068)
        Enumerator: name='Msp430Timer32khzC__0__ALARM_ID' (at pp.c:1068)
          Constant: type='int', value='0U' (at pp.c:1068)
  Typedef: name='Msp430AlarmC__0__frequency_tag', quals=[], storage=['typedef'] (at pp.c:1070)
    TypeDecl: declname='Msp430AlarmC__0__frequency_tag', quals=[] (at pp.c:1070)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='Msp430AlarmC__0__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:1071)
    TypeDecl: declname='Msp430AlarmC__0__Alarm__precision_tag', quals=[] (at pp.c:1071)
      IdentifierType: names=['Msp430AlarmC__0__frequency_tag'] (at None)
  Typedef: name='Msp430AlarmC__0__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:1072)
    TypeDecl: declname='Msp430AlarmC__0__Alarm__size_type', quals=[] (at pp.c:1072)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='Msp430CounterC__0__frequency_tag', quals=[], storage=['typedef'] (at pp.c:1073)
    TypeDecl: declname='Msp430CounterC__0__frequency_tag', quals=[] (at pp.c:1073)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='Msp430CounterC__0__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:1074)
    TypeDecl: declname='Msp430CounterC__0__Counter__precision_tag', quals=[] (at pp.c:1074)
      IdentifierType: names=['Msp430CounterC__0__frequency_tag'] (at None)
  Typedef: name='Msp430CounterC__0__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:1075)
    TypeDecl: declname='Msp430CounterC__0__Counter__size_type', quals=[] (at pp.c:1075)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformCounterC__0__to_precision_tag', quals=[], storage=['typedef'] (at pp.c:1076)
    TypeDecl: declname='TransformCounterC__0__to_precision_tag', quals=[] (at pp.c:1076)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='TransformCounterC__0__to_size_type', quals=[], storage=['typedef'] (at pp.c:1077)
    TypeDecl: declname='TransformCounterC__0__to_size_type', quals=[] (at pp.c:1077)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='TransformCounterC__0__from_precision_tag', quals=[], storage=['typedef'] (at pp.c:1078)
    TypeDecl: declname='TransformCounterC__0__from_precision_tag', quals=[] (at pp.c:1078)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='TransformCounterC__0__from_size_type', quals=[], storage=['typedef'] (at pp.c:1079)
    TypeDecl: declname='TransformCounterC__0__from_size_type', quals=[] (at pp.c:1079)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformCounterC__0__upper_count_type', quals=[], storage=['typedef'] (at pp.c:1080)
    TypeDecl: declname='TransformCounterC__0__upper_count_type', quals=[] (at pp.c:1080)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='TransformCounterC__0__CounterFrom__precision_tag', quals=[], storage=['typedef'] (at pp.c:1081)
    TypeDecl: declname='TransformCounterC__0__CounterFrom__precision_tag', quals=[] (at pp.c:1081)
      IdentifierType: names=['TransformCounterC__0__from_precision_tag'] (at None)
  Typedef: name='TransformCounterC__0__CounterFrom__size_type', quals=[], storage=['typedef'] (at pp.c:1082)
    TypeDecl: declname='TransformCounterC__0__CounterFrom__size_type', quals=[] (at pp.c:1082)
      IdentifierType: names=['TransformCounterC__0__from_size_type'] (at None)
  Typedef: name='TransformCounterC__0__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:1083)
    TypeDecl: declname='TransformCounterC__0__Counter__precision_tag', quals=[] (at pp.c:1083)
      IdentifierType: names=['TransformCounterC__0__to_precision_tag'] (at None)
  Typedef: name='TransformCounterC__0__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:1084)
    TypeDecl: declname='TransformCounterC__0__Counter__size_type', quals=[] (at pp.c:1084)
      IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
  Typedef: name='TransformAlarmC__0__to_precision_tag', quals=[], storage=['typedef'] (at pp.c:1085)
    TypeDecl: declname='TransformAlarmC__0__to_precision_tag', quals=[] (at pp.c:1085)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='TransformAlarmC__0__to_size_type', quals=[], storage=['typedef'] (at pp.c:1086)
    TypeDecl: declname='TransformAlarmC__0__to_size_type', quals=[] (at pp.c:1086)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='TransformAlarmC__0__from_precision_tag', quals=[], storage=['typedef'] (at pp.c:1087)
    TypeDecl: declname='TransformAlarmC__0__from_precision_tag', quals=[] (at pp.c:1087)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='TransformAlarmC__0__from_size_type', quals=[], storage=['typedef'] (at pp.c:1088)
    TypeDecl: declname='TransformAlarmC__0__from_size_type', quals=[] (at pp.c:1088)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformAlarmC__0__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:1089)
    TypeDecl: declname='TransformAlarmC__0__Alarm__precision_tag', quals=[] (at pp.c:1089)
      IdentifierType: names=['TransformAlarmC__0__to_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__0__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:1090)
    TypeDecl: declname='TransformAlarmC__0__Alarm__size_type', quals=[] (at pp.c:1090)
      IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Typedef: name='TransformAlarmC__0__AlarmFrom__precision_tag', quals=[], storage=['typedef'] (at pp.c:1091)
    TypeDecl: declname='TransformAlarmC__0__AlarmFrom__precision_tag', quals=[] (at pp.c:1091)
      IdentifierType: names=['TransformAlarmC__0__from_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__0__AlarmFrom__size_type', quals=[], storage=['typedef'] (at pp.c:1092)
    TypeDecl: declname='TransformAlarmC__0__AlarmFrom__size_type', quals=[] (at pp.c:1092)
      IdentifierType: names=['TransformAlarmC__0__from_size_type'] (at None)
  Typedef: name='TransformAlarmC__0__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:1093)
    TypeDecl: declname='TransformAlarmC__0__Counter__precision_tag', quals=[] (at pp.c:1093)
      IdentifierType: names=['TransformAlarmC__0__to_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__0__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:1094)
    TypeDecl: declname='TransformAlarmC__0__Counter__size_type', quals=[] (at pp.c:1094)
      IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Typedef: name='AlarmToTimerC__0__precision_tag', quals=[], storage=['typedef'] (at pp.c:1095)
    TypeDecl: declname='AlarmToTimerC__0__precision_tag', quals=[] (at pp.c:1095)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='AlarmToTimerC__0__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:1096)
    TypeDecl: declname='AlarmToTimerC__0__Alarm__precision_tag', quals=[] (at pp.c:1096)
      IdentifierType: names=['AlarmToTimerC__0__precision_tag'] (at None)
  Typedef: name='AlarmToTimerC__0__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:1097)
    TypeDecl: declname='AlarmToTimerC__0__Alarm__size_type', quals=[] (at pp.c:1097)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='AlarmToTimerC__0__Timer__precision_tag', quals=[], storage=['typedef'] (at pp.c:1098)
    TypeDecl: declname='AlarmToTimerC__0__Timer__precision_tag', quals=[] (at pp.c:1098)
      IdentifierType: names=['AlarmToTimerC__0__precision_tag'] (at None)
  Typedef: name='VirtualizeTimerC__0__precision_tag', quals=[], storage=['typedef'] (at pp.c:1099)
    TypeDecl: declname='VirtualizeTimerC__0__precision_tag', quals=[] (at pp.c:1099)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='VirtualizeTimerC__0__TimerFrom__precision_tag', quals=[], storage=['typedef'] (at pp.c:1100)
    TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__precision_tag', quals=[] (at pp.c:1100)
      IdentifierType: names=['VirtualizeTimerC__0__precision_tag'] (at None)
  Typedef: name='VirtualizeTimerC__0__Timer__precision_tag', quals=[], storage=['typedef'] (at pp.c:1101)
    TypeDecl: declname='VirtualizeTimerC__0__Timer__precision_tag', quals=[] (at pp.c:1101)
      IdentifierType: names=['VirtualizeTimerC__0__precision_tag'] (at None)
  Typedef: name='CounterToLocalTimeC__0__precision_tag', quals=[], storage=['typedef'] (at pp.c:1102)
    TypeDecl: declname='CounterToLocalTimeC__0__precision_tag', quals=[] (at pp.c:1102)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='CounterToLocalTimeC__0__LocalTime__precision_tag', quals=[], storage=['typedef'] (at pp.c:1103)
    TypeDecl: declname='CounterToLocalTimeC__0__LocalTime__precision_tag', quals=[] (at pp.c:1103)
      IdentifierType: names=['CounterToLocalTimeC__0__precision_tag'] (at None)
  Typedef: name='CounterToLocalTimeC__0__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:1104)
    TypeDecl: declname='CounterToLocalTimeC__0__Counter__precision_tag', quals=[] (at pp.c:1104)
      IdentifierType: names=['CounterToLocalTimeC__0__precision_tag'] (at None)
  Typedef: name='CounterToLocalTimeC__0__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:1105)
    TypeDecl: declname='CounterToLocalTimeC__0__Counter__size_type', quals=[] (at pp.c:1105)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='AdcP__Read__val_t', quals=[], storage=['typedef'] (at pp.c:1106)
    TypeDecl: declname='AdcP__Read__val_t', quals=[] (at pp.c:1106)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='AdcP__ReadNow__val_t', quals=[], storage=['typedef'] (at pp.c:1107)
    TypeDecl: declname='AdcP__ReadNow__val_t', quals=[] (at pp.c:1107)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='AdcP__Config__adc_config_t', quals=['const'], storage=['typedef'] (at pp.c:1108)
    PtrDecl: quals=[] (at pp.c:1108)
      TypeDecl: declname='AdcP__Config__adc_config_t', quals=['const'] (at pp.c:1108)
        IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Typedef: name='Msp430RefVoltGeneratorP__SwitchOffTimer__precision_tag', quals=[], storage=['typedef'] (at pp.c:1109)
    TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffTimer__precision_tag', quals=[] (at pp.c:1109)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__precision_tag', quals=[], storage=['typedef'] (at pp.c:1110)
    TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__precision_tag', quals=[] (at pp.c:1110)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='Msp430RefVoltGeneratorP__SwitchOnTimer__precision_tag', quals=[], storage=['typedef'] (at pp.c:1111)
    TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOnTimer__precision_tag', quals=[] (at pp.c:1111)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='Msp430RefVoltArbiterImplP__Config__adc_config_t', quals=['const'], storage=['typedef'] (at pp.c:1112)
    PtrDecl: quals=[] (at pp.c:1112)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__Config__adc_config_t', quals=['const'] (at pp.c:1112)
        IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1113)
    Enum: name='Msp430Adc12ClientAutoRVGC__0____nesc_unnamed4270' (at pp.c:1113)
      EnumeratorList:  (at pp.c:1114)
        Enumerator: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:1114)
          Constant: type='int', value='0U' (at pp.c:1114)
  Typedef: name='Msp430Adc12ConfAlertC__0__ConfSub__adc_config_t', quals=['const'], storage=['typedef'] (at pp.c:1116)
    PtrDecl: quals=[] (at pp.c:1116)
      TypeDecl: declname='Msp430Adc12ConfAlertC__0__ConfSub__adc_config_t', quals=['const'] (at pp.c:1116)
        IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Typedef: name='Msp430Adc12ConfAlertC__0__ConfUp__adc_config_t', quals=['const'], storage=['typedef'] (at pp.c:1117)
    PtrDecl: quals=[] (at pp.c:1117)
      TypeDecl: declname='Msp430Adc12ConfAlertC__0__ConfUp__adc_config_t', quals=['const'] (at pp.c:1117)
        IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1118)
    Enum: name='AdcReadClientC__0____nesc_unnamed4271' (at pp.c:1118)
      EnumeratorList:  (at pp.c:1119)
        Enumerator: name='AdcReadClientC__0__CLIENT' (at pp.c:1119)
          Constant: type='int', value='0U' (at pp.c:1119)
  Typedef: name='AdcStreamP__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:1121)
    TypeDecl: declname='AdcStreamP__Alarm__precision_tag', quals=[] (at pp.c:1121)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='AdcStreamP__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:1122)
    TypeDecl: declname='AdcStreamP__Alarm__size_type', quals=[] (at pp.c:1122)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='AdcStreamP__AdcConfigure__adc_config_t', quals=['const'], storage=['typedef'] (at pp.c:1123)
    PtrDecl: quals=[] (at pp.c:1123)
      TypeDecl: declname='AdcStreamP__AdcConfigure__adc_config_t', quals=['const'] (at pp.c:1123)
        IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Typedef: name='AdcStreamP__ReadStream__val_t', quals=[], storage=['typedef'] (at pp.c:1124)
    TypeDecl: declname='AdcStreamP__ReadStream__val_t', quals=[] (at pp.c:1124)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1125)
    Enum: name='Msp430Timer32khzC__1____nesc_unnamed4272' (at pp.c:1125)
      EnumeratorList:  (at pp.c:1126)
        Enumerator: name='Msp430Timer32khzC__1__ALARM_ID' (at pp.c:1126)
          Constant: type='int', value='1U' (at pp.c:1126)
  Typedef: name='Msp430AlarmC__1__frequency_tag', quals=[], storage=['typedef'] (at pp.c:1128)
    TypeDecl: declname='Msp430AlarmC__1__frequency_tag', quals=[] (at pp.c:1128)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='Msp430AlarmC__1__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:1129)
    TypeDecl: declname='Msp430AlarmC__1__Alarm__precision_tag', quals=[] (at pp.c:1129)
      IdentifierType: names=['Msp430AlarmC__1__frequency_tag'] (at None)
  Typedef: name='Msp430AlarmC__1__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:1130)
    TypeDecl: declname='Msp430AlarmC__1__Alarm__size_type', quals=[] (at pp.c:1130)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformAlarmC__1__to_precision_tag', quals=[], storage=['typedef'] (at pp.c:1131)
    TypeDecl: declname='TransformAlarmC__1__to_precision_tag', quals=[] (at pp.c:1131)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='TransformAlarmC__1__to_size_type', quals=[], storage=['typedef'] (at pp.c:1132)
    TypeDecl: declname='TransformAlarmC__1__to_size_type', quals=[] (at pp.c:1132)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='TransformAlarmC__1__from_precision_tag', quals=[], storage=['typedef'] (at pp.c:1133)
    TypeDecl: declname='TransformAlarmC__1__from_precision_tag', quals=[] (at pp.c:1133)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='TransformAlarmC__1__from_size_type', quals=[], storage=['typedef'] (at pp.c:1134)
    TypeDecl: declname='TransformAlarmC__1__from_size_type', quals=[] (at pp.c:1134)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformAlarmC__1__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:1135)
    TypeDecl: declname='TransformAlarmC__1__Alarm__precision_tag', quals=[] (at pp.c:1135)
      IdentifierType: names=['TransformAlarmC__1__to_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__1__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:1136)
    TypeDecl: declname='TransformAlarmC__1__Alarm__size_type', quals=[] (at pp.c:1136)
      IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
  Typedef: name='TransformAlarmC__1__AlarmFrom__precision_tag', quals=[], storage=['typedef'] (at pp.c:1137)
    TypeDecl: declname='TransformAlarmC__1__AlarmFrom__precision_tag', quals=[] (at pp.c:1137)
      IdentifierType: names=['TransformAlarmC__1__from_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__1__AlarmFrom__size_type', quals=[], storage=['typedef'] (at pp.c:1138)
    TypeDecl: declname='TransformAlarmC__1__AlarmFrom__size_type', quals=[] (at pp.c:1138)
      IdentifierType: names=['TransformAlarmC__1__from_size_type'] (at None)
  Typedef: name='TransformAlarmC__1__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:1139)
    TypeDecl: declname='TransformAlarmC__1__Counter__precision_tag', quals=[] (at pp.c:1139)
      IdentifierType: names=['TransformAlarmC__1__to_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__1__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:1140)
    TypeDecl: declname='TransformAlarmC__1__Counter__size_type', quals=[] (at pp.c:1140)
      IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
  Typedef: name='ArbitratedReadStreamC__0__val_t', quals=[], storage=['typedef'] (at pp.c:1141)
    TypeDecl: declname='ArbitratedReadStreamC__0__val_t', quals=[] (at pp.c:1141)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='ArbitratedReadStreamC__0__Service__val_t', quals=[], storage=['typedef'] (at pp.c:1142)
    TypeDecl: declname='ArbitratedReadStreamC__0__Service__val_t', quals=[] (at pp.c:1142)
      IdentifierType: names=['ArbitratedReadStreamC__0__val_t'] (at None)
  Typedef: name='ArbitratedReadStreamC__0__ReadStream__val_t', quals=[], storage=['typedef'] (at pp.c:1143)
    TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__val_t', quals=[] (at pp.c:1143)
      IdentifierType: names=['ArbitratedReadStreamC__0__val_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1144)
    Enum: name='Msp430Adc12ClientAutoRVGC__1____nesc_unnamed4273' (at pp.c:1144)
      EnumeratorList:  (at pp.c:1145)
        Enumerator: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:1145)
          Constant: type='int', value='1U' (at pp.c:1145)
  Typedef: name='Msp430Adc12ConfAlertC__1__ConfSub__adc_config_t', quals=['const'], storage=['typedef'] (at pp.c:1147)
    PtrDecl: quals=[] (at pp.c:1147)
      TypeDecl: declname='Msp430Adc12ConfAlertC__1__ConfSub__adc_config_t', quals=['const'] (at pp.c:1147)
        IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Typedef: name='Msp430Adc12ConfAlertC__1__ConfUp__adc_config_t', quals=['const'], storage=['typedef'] (at pp.c:1148)
    PtrDecl: quals=[] (at pp.c:1148)
      TypeDecl: declname='Msp430Adc12ConfAlertC__1__ConfUp__adc_config_t', quals=['const'] (at pp.c:1148)
        IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1149)
    Enum: name='AdcReadStreamClientC__0____nesc_unnamed4274' (at pp.c:1149)
      EnumeratorList:  (at pp.c:1150)
        Enumerator: name='AdcReadStreamClientC__0__RSCLIENT' (at pp.c:1150)
          Constant: type='int', value='0U' (at pp.c:1150)
  Typedef: name='Msp430InternalVoltageP__AdcConfigure__adc_config_t', quals=['const'], storage=['typedef'] (at pp.c:1152)
    PtrDecl: quals=[] (at pp.c:1152)
      TypeDecl: declname='Msp430InternalVoltageP__AdcConfigure__adc_config_t', quals=['const'] (at pp.c:1152)
        IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1153)
    Enum: name='Msp430Adc12ClientAutoRVGC__2____nesc_unnamed4275' (at pp.c:1153)
      EnumeratorList:  (at pp.c:1154)
        Enumerator: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:1154)
          Constant: type='int', value='2U' (at pp.c:1154)
  Typedef: name='Msp430Adc12ConfAlertC__2__ConfSub__adc_config_t', quals=['const'], storage=['typedef'] (at pp.c:1156)
    PtrDecl: quals=[] (at pp.c:1156)
      TypeDecl: declname='Msp430Adc12ConfAlertC__2__ConfSub__adc_config_t', quals=['const'] (at pp.c:1156)
        IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Typedef: name='Msp430Adc12ConfAlertC__2__ConfUp__adc_config_t', quals=['const'], storage=['typedef'] (at pp.c:1157)
    PtrDecl: quals=[] (at pp.c:1157)
      TypeDecl: declname='Msp430Adc12ConfAlertC__2__ConfUp__adc_config_t', quals=['const'] (at pp.c:1157)
        IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1158)
    Enum: name='AdcReadNowClientC__0____nesc_unnamed4276' (at pp.c:1158)
      EnumeratorList:  (at pp.c:1159)
        Enumerator: name='AdcReadNowClientC__0__CLIENT' (at pp.c:1159)
          Constant: type='int', value='1U' (at pp.c:1159)
  Decl: name='SenseC__Boot__booted', quals=[], storage=['static'] (at pp.c:1162)
    FuncDecl: quals=None (at pp.c:1162)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SenseC__Boot__booted', quals=[] (at pp.c:1162)
        IdentifierType: names=['void'] (at None)
  Decl: name='SenseC__Read__readDone', quals=[], storage=['static'] (at pp.c:1164)
    FuncDecl: quals=None (at pp.c:1164)
      ParamList:  (at pp.c:1164)
        Decl: name='result', quals=[], storage=[] (at pp.c:1164)
          TypeDecl: declname='result', quals=[] (at pp.c:1164)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='val', quals=[], storage=[] (at pp.c:1164)
          TypeDecl: declname='val', quals=[] (at pp.c:1164)
            IdentifierType: names=['SenseC__Read__val_t'] (at None)
      TypeDecl: declname='SenseC__Read__readDone', quals=[] (at pp.c:1164)
        IdentifierType: names=['void'] (at None)
  Decl: name='SenseC__Timer__fired', quals=[], storage=['static'] (at pp.c:1166)
    FuncDecl: quals=None (at pp.c:1166)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SenseC__Timer__fired', quals=[] (at pp.c:1166)
        IdentifierType: names=['void'] (at None)
  Decl: name='PlatformP__Init__init', quals=[], storage=['static'] (at pp.c:1168)
    FuncDecl: quals=None (at pp.c:1168)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='PlatformP__Init__init', quals=[] (at pp.c:1168)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[], storage=['static'] (at pp.c:1170)
    FuncDecl: quals=None (at pp.c:1170)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[] (at pp.c:1170)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[], storage=['static'] (at pp.c:1172)
    FuncDecl: quals=None (at pp.c:1172)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[] (at pp.c:1172)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[], storage=['static'] (at pp.c:1176)
    FuncDecl: quals=None (at pp.c:1176)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[] (at pp.c:1176)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[], storage=['static'] (at pp.c:1178)
    FuncDecl: quals=None (at pp.c:1178)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[] (at pp.c:1178)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[], storage=['static'] (at pp.c:1184)
    FuncDecl: quals=None (at pp.c:1184)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[] (at pp.c:1184)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[], storage=['static'] (at pp.c:1186)
    FuncDecl: quals=None (at pp.c:1186)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[] (at pp.c:1186)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[], storage=['static'] (at pp.c:1188)
    FuncDecl: quals=None (at pp.c:1188)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[] (at pp.c:1188)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[], storage=['static'] (at pp.c:1189)
    FuncDecl: quals=None (at pp.c:1189)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[] (at pp.c:1189)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__McuPowerOverride__lowestState', quals=[], storage=['static'] (at pp.c:1191)
    FuncDecl: quals=None (at pp.c:1191)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__McuPowerOverride__lowestState', quals=[] (at pp.c:1191)
        IdentifierType: names=['mcu_power_t'] (at None)
  Decl: name='Msp430ClockP__Init__init', quals=[], storage=['static'] (at pp.c:1193)
    FuncDecl: quals=None (at pp.c:1193)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Init__init', quals=[] (at pp.c:1193)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430TimerP__0__VectorTimerX0__fired', quals=[], storage=['static'] (at pp.c:1195)
    FuncDecl: quals=None (at pp.c:1195)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__VectorTimerX0__fired', quals=[] (at pp.c:1195)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Overflow__fired', quals=[], storage=['static'] (at pp.c:1197)
    FuncDecl: quals=None (at pp.c:1197)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Overflow__fired', quals=[] (at pp.c:1197)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__VectorTimerX1__fired', quals=[], storage=['static'] (at pp.c:1199)
    FuncDecl: quals=None (at pp.c:1199)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__VectorTimerX1__fired', quals=[] (at pp.c:1199)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Event__default__fired', quals=[], storage=['static'] (at pp.c:1201)
    FuncDecl: quals=None (at pp.c:1201)
      ParamList:  (at pp.c:1203)
        Decl: name='arg_0x10142ec98', quals=[], storage=[] (at pp.c:1203)
          TypeDecl: declname='arg_0x10142ec98', quals=[] (at pp.c:1203)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Event__default__fired', quals=[] (at pp.c:1201)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__clear', quals=[], storage=['static'] (at pp.c:1205)
    FuncDecl: quals=None (at pp.c:1205)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__clear', quals=[] (at pp.c:1205)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__setClockSource', quals=[], storage=['static'] (at pp.c:1208)
    FuncDecl: quals=None (at pp.c:1208)
      ParamList:  (at pp.c:1208)
        Decl: name='clockSource', quals=[], storage=[] (at pp.c:1208)
          TypeDecl: declname='clockSource', quals=[] (at pp.c:1208)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__setClockSource', quals=[] (at pp.c:1208)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__disableEvents', quals=[], storage=['static'] (at pp.c:1210)
    FuncDecl: quals=None (at pp.c:1210)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__disableEvents', quals=[] (at pp.c:1210)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__setMode', quals=[], storage=['static'] (at pp.c:1212)
    FuncDecl: quals=None (at pp.c:1212)
      ParamList:  (at pp.c:1212)
        Decl: name='mode', quals=[], storage=[] (at pp.c:1212)
          TypeDecl: declname='mode', quals=[] (at pp.c:1212)
            IdentifierType: names=['int'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__setMode', quals=[] (at pp.c:1212)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__setInputDivider', quals=[], storage=['static'] (at pp.c:1218)
    FuncDecl: quals=None (at pp.c:1218)
      ParamList:  (at pp.c:1218)
        Decl: name='inputDivider', quals=[], storage=[] (at pp.c:1218)
          TypeDecl: declname='inputDivider', quals=[] (at pp.c:1218)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__setInputDivider', quals=[] (at pp.c:1218)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__VectorTimerX0__fired', quals=[], storage=['static'] (at pp.c:1220)
    FuncDecl: quals=None (at pp.c:1220)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__VectorTimerX0__fired', quals=[] (at pp.c:1220)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Overflow__fired', quals=[], storage=['static'] (at pp.c:1222)
    FuncDecl: quals=None (at pp.c:1222)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Overflow__fired', quals=[] (at pp.c:1222)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__VectorTimerX1__fired', quals=[], storage=['static'] (at pp.c:1224)
    FuncDecl: quals=None (at pp.c:1224)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__VectorTimerX1__fired', quals=[] (at pp.c:1224)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Event__default__fired', quals=[], storage=['static'] (at pp.c:1226)
    FuncDecl: quals=None (at pp.c:1226)
      ParamList:  (at pp.c:1228)
        Decl: name='arg_0x10142ec98', quals=[], storage=[] (at pp.c:1228)
          TypeDecl: declname='arg_0x10142ec98', quals=[] (at pp.c:1228)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Event__default__fired', quals=[] (at pp.c:1226)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Timer__get', quals=[], storage=['static'] (at pp.c:1230)
    FuncDecl: quals=None (at pp.c:1230)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Timer__get', quals=[] (at pp.c:1230)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerP__1__Timer__isOverflowPending', quals=[], storage=['static'] (at pp.c:1231)
    FuncDecl: quals=None (at pp.c:1231)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Timer__isOverflowPending', quals=[] (at pp.c:1231)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430TimerCapComP__0__Capture__getEvent', quals=[], storage=['static'] (at pp.c:1233)
    FuncDecl: quals=None (at pp.c:1233)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Capture__getEvent', quals=[] (at pp.c:1233)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__Capture__default__captured', quals=[], storage=['static'] (at pp.c:1235)
    FuncDecl: quals=None (at pp.c:1235)
      ParamList:  (at pp.c:1235)
        Decl: name='time', quals=[], storage=[] (at pp.c:1235)
          TypeDecl: declname='time', quals=[] (at pp.c:1235)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Capture__default__captured', quals=[] (at pp.c:1235)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Control__getControl', quals=[], storage=['static'] (at pp.c:1237)
    FuncDecl: quals=None (at pp.c:1237)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Control__getControl', quals=[] (at pp.c:1237)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__Control__setControl', quals=[], storage=['static'] (at pp.c:1241)
    FuncDecl: quals=None (at pp.c:1241)
      ParamList:  (at pp.c:1241)
        Decl: name='control', quals=[], storage=[] (at pp.c:1241)
          TypeDecl: declname='control', quals=[] (at pp.c:1241)
            IdentifierType: names=['msp430_compare_control_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Control__setControl', quals=[] (at pp.c:1241)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Event__fired', quals=[], storage=['static'] (at pp.c:1243)
    FuncDecl: quals=None (at pp.c:1243)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Event__fired', quals=[] (at pp.c:1243)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Compare__setEvent', quals=[], storage=['static'] (at pp.c:1245)
    FuncDecl: quals=None (at pp.c:1245)
      ParamList:  (at pp.c:1245)
        Decl: name='time', quals=[], storage=[] (at pp.c:1245)
          TypeDecl: declname='time', quals=[] (at pp.c:1245)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Compare__setEvent', quals=[] (at pp.c:1245)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Timer__overflow', quals=[], storage=['static'] (at pp.c:1247)
    FuncDecl: quals=None (at pp.c:1247)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Timer__overflow', quals=[] (at pp.c:1247)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Capture__getEvent', quals=[], storage=['static'] (at pp.c:1249)
    FuncDecl: quals=None (at pp.c:1249)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Capture__getEvent', quals=[] (at pp.c:1249)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__Capture__default__captured', quals=[], storage=['static'] (at pp.c:1251)
    FuncDecl: quals=None (at pp.c:1251)
      ParamList:  (at pp.c:1251)
        Decl: name='time', quals=[], storage=[] (at pp.c:1251)
          TypeDecl: declname='time', quals=[] (at pp.c:1251)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Capture__default__captured', quals=[] (at pp.c:1251)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Control__getControl', quals=[], storage=['static'] (at pp.c:1253)
    FuncDecl: quals=None (at pp.c:1253)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Control__getControl', quals=[] (at pp.c:1253)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__Control__setControl', quals=[], storage=['static'] (at pp.c:1257)
    FuncDecl: quals=None (at pp.c:1257)
      ParamList:  (at pp.c:1257)
        Decl: name='control', quals=[], storage=[] (at pp.c:1257)
          TypeDecl: declname='control', quals=[] (at pp.c:1257)
            IdentifierType: names=['msp430_compare_control_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Control__setControl', quals=[] (at pp.c:1257)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Event__fired', quals=[], storage=['static'] (at pp.c:1259)
    FuncDecl: quals=None (at pp.c:1259)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Event__fired', quals=[] (at pp.c:1259)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Compare__setEvent', quals=[], storage=['static'] (at pp.c:1261)
    FuncDecl: quals=None (at pp.c:1261)
      ParamList:  (at pp.c:1261)
        Decl: name='time', quals=[], storage=[] (at pp.c:1261)
          TypeDecl: declname='time', quals=[] (at pp.c:1261)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Compare__setEvent', quals=[] (at pp.c:1261)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Timer__overflow', quals=[], storage=['static'] (at pp.c:1263)
    FuncDecl: quals=None (at pp.c:1263)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Timer__overflow', quals=[] (at pp.c:1263)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Capture__getEvent', quals=[], storage=['static'] (at pp.c:1265)
    FuncDecl: quals=None (at pp.c:1265)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Capture__getEvent', quals=[] (at pp.c:1265)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__Capture__default__captured', quals=[], storage=['static'] (at pp.c:1267)
    FuncDecl: quals=None (at pp.c:1267)
      ParamList:  (at pp.c:1267)
        Decl: name='time', quals=[], storage=[] (at pp.c:1267)
          TypeDecl: declname='time', quals=[] (at pp.c:1267)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Capture__default__captured', quals=[] (at pp.c:1267)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Control__getControl', quals=[], storage=['static'] (at pp.c:1269)
    FuncDecl: quals=None (at pp.c:1269)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Control__getControl', quals=[] (at pp.c:1269)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__Event__fired', quals=[], storage=['static'] (at pp.c:1271)
    FuncDecl: quals=None (at pp.c:1271)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Event__fired', quals=[] (at pp.c:1271)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Compare__default__fired', quals=[], storage=['static'] (at pp.c:1273)
    FuncDecl: quals=None (at pp.c:1273)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Compare__default__fired', quals=[] (at pp.c:1273)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Timer__overflow', quals=[], storage=['static'] (at pp.c:1275)
    FuncDecl: quals=None (at pp.c:1275)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Timer__overflow', quals=[] (at pp.c:1275)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Capture__getEvent', quals=[], storage=['static'] (at pp.c:1277)
    FuncDecl: quals=None (at pp.c:1277)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Capture__getEvent', quals=[] (at pp.c:1277)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__Capture__default__captured', quals=[], storage=['static'] (at pp.c:1279)
    FuncDecl: quals=None (at pp.c:1279)
      ParamList:  (at pp.c:1279)
        Decl: name='time', quals=[], storage=[] (at pp.c:1279)
          TypeDecl: declname='time', quals=[] (at pp.c:1279)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Capture__default__captured', quals=[] (at pp.c:1279)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__getControl', quals=[], storage=['static'] (at pp.c:1281)
    FuncDecl: quals=None (at pp.c:1281)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__getControl', quals=[] (at pp.c:1281)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__enableEvents', quals=[], storage=['static'] (at pp.c:1283)
    FuncDecl: quals=None (at pp.c:1283)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__enableEvents', quals=[] (at pp.c:1283)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[], storage=['static'] (at pp.c:1285)
    FuncDecl: quals=None (at pp.c:1285)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[] (at pp.c:1285)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__disableEvents', quals=[], storage=['static'] (at pp.c:1296)
    FuncDecl: quals=None (at pp.c:1296)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__disableEvents', quals=[] (at pp.c:1296)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[], storage=['static'] (at pp.c:1298)
    FuncDecl: quals=None (at pp.c:1298)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[] (at pp.c:1298)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Event__fired', quals=[], storage=['static'] (at pp.c:1300)
    FuncDecl: quals=None (at pp.c:1300)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Event__fired', quals=[] (at pp.c:1300)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Compare__setEvent', quals=[], storage=['static'] (at pp.c:1302)
    FuncDecl: quals=None (at pp.c:1302)
      ParamList:  (at pp.c:1302)
        Decl: name='time', quals=[], storage=[] (at pp.c:1302)
          TypeDecl: declname='time', quals=[] (at pp.c:1302)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEvent', quals=[] (at pp.c:1302)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[], storage=['static'] (at pp.c:1304)
    FuncDecl: quals=None (at pp.c:1304)
      ParamList:  (at pp.c:1304)
        Decl: name='delta', quals=[], storage=[] (at pp.c:1304)
          TypeDecl: declname='delta', quals=[] (at pp.c:1304)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[] (at pp.c:1304)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Timer__overflow', quals=[], storage=['static'] (at pp.c:1306)
    FuncDecl: quals=None (at pp.c:1306)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Timer__overflow', quals=[] (at pp.c:1306)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Capture__getEvent', quals=[], storage=['static'] (at pp.c:1308)
    FuncDecl: quals=None (at pp.c:1308)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Capture__getEvent', quals=[] (at pp.c:1308)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__Capture__default__captured', quals=[], storage=['static'] (at pp.c:1310)
    FuncDecl: quals=None (at pp.c:1310)
      ParamList:  (at pp.c:1310)
        Decl: name='time', quals=[], storage=[] (at pp.c:1310)
          TypeDecl: declname='time', quals=[] (at pp.c:1310)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Capture__default__captured', quals=[] (at pp.c:1310)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__getControl', quals=[], storage=['static'] (at pp.c:1312)
    FuncDecl: quals=None (at pp.c:1312)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__getControl', quals=[] (at pp.c:1312)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__Event__fired', quals=[], storage=['static'] (at pp.c:1314)
    FuncDecl: quals=None (at pp.c:1314)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Event__fired', quals=[] (at pp.c:1314)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Compare__default__fired', quals=[], storage=['static'] (at pp.c:1316)
    FuncDecl: quals=None (at pp.c:1316)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Compare__default__fired', quals=[] (at pp.c:1316)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Timer__overflow', quals=[], storage=['static'] (at pp.c:1318)
    FuncDecl: quals=None (at pp.c:1318)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Timer__overflow', quals=[] (at pp.c:1318)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Capture__getEvent', quals=[], storage=['static'] (at pp.c:1320)
    FuncDecl: quals=None (at pp.c:1320)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Capture__getEvent', quals=[] (at pp.c:1320)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__Capture__default__captured', quals=[], storage=['static'] (at pp.c:1322)
    FuncDecl: quals=None (at pp.c:1322)
      ParamList:  (at pp.c:1322)
        Decl: name='time', quals=[], storage=[] (at pp.c:1322)
          TypeDecl: declname='time', quals=[] (at pp.c:1322)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Capture__default__captured', quals=[] (at pp.c:1322)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__getControl', quals=[], storage=['static'] (at pp.c:1324)
    FuncDecl: quals=None (at pp.c:1324)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__getControl', quals=[] (at pp.c:1324)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__enableEvents', quals=[], storage=['static'] (at pp.c:1326)
    FuncDecl: quals=None (at pp.c:1326)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__enableEvents', quals=[] (at pp.c:1326)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__disableEvents', quals=[], storage=['static'] (at pp.c:1327)
    FuncDecl: quals=None (at pp.c:1327)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__disableEvents', quals=[] (at pp.c:1327)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__clearPendingInterrupt', quals=[], storage=['static'] (at pp.c:1329)
    FuncDecl: quals=None (at pp.c:1329)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__clearPendingInterrupt', quals=[] (at pp.c:1329)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Event__fired', quals=[], storage=['static'] (at pp.c:1331)
    FuncDecl: quals=None (at pp.c:1331)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Event__fired', quals=[] (at pp.c:1331)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Compare__setEvent', quals=[], storage=['static'] (at pp.c:1333)
    FuncDecl: quals=None (at pp.c:1333)
      ParamList:  (at pp.c:1333)
        Decl: name='time', quals=[], storage=[] (at pp.c:1333)
          TypeDecl: declname='time', quals=[] (at pp.c:1333)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Compare__setEvent', quals=[] (at pp.c:1333)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Compare__setEventFromNow', quals=[], storage=['static'] (at pp.c:1335)
    FuncDecl: quals=None (at pp.c:1335)
      ParamList:  (at pp.c:1335)
        Decl: name='delta', quals=[], storage=[] (at pp.c:1335)
          TypeDecl: declname='delta', quals=[] (at pp.c:1335)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Compare__setEventFromNow', quals=[] (at pp.c:1335)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Timer__overflow', quals=[], storage=['static'] (at pp.c:1337)
    FuncDecl: quals=None (at pp.c:1337)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Timer__overflow', quals=[] (at pp.c:1337)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Capture__getEvent', quals=[], storage=['static'] (at pp.c:1339)
    FuncDecl: quals=None (at pp.c:1339)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Capture__getEvent', quals=[] (at pp.c:1339)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__Capture__default__captured', quals=[], storage=['static'] (at pp.c:1341)
    FuncDecl: quals=None (at pp.c:1341)
      ParamList:  (at pp.c:1341)
        Decl: name='time', quals=[], storage=[] (at pp.c:1341)
          TypeDecl: declname='time', quals=[] (at pp.c:1341)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Capture__default__captured', quals=[] (at pp.c:1341)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Control__getControl', quals=[], storage=['static'] (at pp.c:1343)
    FuncDecl: quals=None (at pp.c:1343)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Control__getControl', quals=[] (at pp.c:1343)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__Event__fired', quals=[], storage=['static'] (at pp.c:1345)
    FuncDecl: quals=None (at pp.c:1345)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Event__fired', quals=[] (at pp.c:1345)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Compare__default__fired', quals=[], storage=['static'] (at pp.c:1347)
    FuncDecl: quals=None (at pp.c:1347)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Compare__default__fired', quals=[] (at pp.c:1347)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Timer__overflow', quals=[], storage=['static'] (at pp.c:1349)
    FuncDecl: quals=None (at pp.c:1349)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Timer__overflow', quals=[] (at pp.c:1349)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Capture__getEvent', quals=[], storage=['static'] (at pp.c:1351)
    FuncDecl: quals=None (at pp.c:1351)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Capture__getEvent', quals=[] (at pp.c:1351)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__Capture__default__captured', quals=[], storage=['static'] (at pp.c:1353)
    FuncDecl: quals=None (at pp.c:1353)
      ParamList:  (at pp.c:1353)
        Decl: name='time', quals=[], storage=[] (at pp.c:1353)
          TypeDecl: declname='time', quals=[] (at pp.c:1353)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Capture__default__captured', quals=[] (at pp.c:1353)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Control__getControl', quals=[], storage=['static'] (at pp.c:1355)
    FuncDecl: quals=None (at pp.c:1355)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Control__getControl', quals=[] (at pp.c:1355)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__Event__fired', quals=[], storage=['static'] (at pp.c:1357)
    FuncDecl: quals=None (at pp.c:1357)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Event__fired', quals=[] (at pp.c:1357)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Compare__default__fired', quals=[], storage=['static'] (at pp.c:1359)
    FuncDecl: quals=None (at pp.c:1359)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Compare__default__fired', quals=[] (at pp.c:1359)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Timer__overflow', quals=[], storage=['static'] (at pp.c:1361)
    FuncDecl: quals=None (at pp.c:1361)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Timer__overflow', quals=[] (at pp.c:1361)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Capture__getEvent', quals=[], storage=['static'] (at pp.c:1363)
    FuncDecl: quals=None (at pp.c:1363)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Capture__getEvent', quals=[] (at pp.c:1363)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__Capture__default__captured', quals=[], storage=['static'] (at pp.c:1365)
    FuncDecl: quals=None (at pp.c:1365)
      ParamList:  (at pp.c:1365)
        Decl: name='time', quals=[], storage=[] (at pp.c:1365)
          TypeDecl: declname='time', quals=[] (at pp.c:1365)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Capture__default__captured', quals=[] (at pp.c:1365)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Control__getControl', quals=[], storage=['static'] (at pp.c:1367)
    FuncDecl: quals=None (at pp.c:1367)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Control__getControl', quals=[] (at pp.c:1367)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__Event__fired', quals=[], storage=['static'] (at pp.c:1369)
    FuncDecl: quals=None (at pp.c:1369)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Event__fired', quals=[] (at pp.c:1369)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Compare__default__fired', quals=[], storage=['static'] (at pp.c:1371)
    FuncDecl: quals=None (at pp.c:1371)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Compare__default__fired', quals=[] (at pp.c:1371)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Timer__overflow', quals=[], storage=['static'] (at pp.c:1373)
    FuncDecl: quals=None (at pp.c:1373)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Timer__overflow', quals=[] (at pp.c:1373)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Capture__getEvent', quals=[], storage=['static'] (at pp.c:1375)
    FuncDecl: quals=None (at pp.c:1375)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Capture__getEvent', quals=[] (at pp.c:1375)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__Capture__default__captured', quals=[], storage=['static'] (at pp.c:1377)
    FuncDecl: quals=None (at pp.c:1377)
      ParamList:  (at pp.c:1377)
        Decl: name='time', quals=[], storage=[] (at pp.c:1377)
          TypeDecl: declname='time', quals=[] (at pp.c:1377)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Capture__default__captured', quals=[] (at pp.c:1377)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Control__getControl', quals=[], storage=['static'] (at pp.c:1379)
    FuncDecl: quals=None (at pp.c:1379)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Control__getControl', quals=[] (at pp.c:1379)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__Event__fired', quals=[], storage=['static'] (at pp.c:1381)
    FuncDecl: quals=None (at pp.c:1381)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Event__fired', quals=[] (at pp.c:1381)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Compare__default__fired', quals=[], storage=['static'] (at pp.c:1383)
    FuncDecl: quals=None (at pp.c:1383)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Compare__default__fired', quals=[] (at pp.c:1383)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Timer__overflow', quals=[], storage=['static'] (at pp.c:1385)
    FuncDecl: quals=None (at pp.c:1385)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Timer__overflow', quals=[] (at pp.c:1385)
        IdentifierType: names=['void'] (at None)
  Decl: name='McuSleepC__McuSleep__sleep', quals=[], storage=['static'] (at pp.c:1387)
    FuncDecl: quals=None (at pp.c:1387)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='McuSleepC__McuSleep__sleep', quals=[] (at pp.c:1387)
        IdentifierType: names=['void'] (at None)
  Decl: name='MotePlatformC__SubInit__default__init', quals=[], storage=['static'] (at pp.c:1389)
    FuncDecl: quals=None (at pp.c:1389)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='MotePlatformC__SubInit__default__init', quals=[] (at pp.c:1389)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='MotePlatformC__Init__init', quals=[], storage=['static'] (at pp.c:1391)
    FuncDecl: quals=None (at pp.c:1391)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='MotePlatformC__Init__init', quals=[] (at pp.c:1391)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SchedulerBasicP__TaskBasic__postTask', quals=[], storage=['static'] (at pp.c:1393)
    FuncDecl: quals=None (at pp.c:1393)
      ParamList:  (at pp.c:1395)
        Decl: name='arg_0x101333340', quals=[], storage=[] (at pp.c:1395)
          TypeDecl: declname='arg_0x101333340', quals=[] (at pp.c:1395)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__TaskBasic__postTask', quals=[] (at pp.c:1393)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SchedulerBasicP__TaskBasic__default__runTask', quals=[], storage=['static'] (at pp.c:1397)
    FuncDecl: quals=None (at pp.c:1397)
      ParamList:  (at pp.c:1399)
        Decl: name='arg_0x101333340', quals=[], storage=[] (at pp.c:1399)
          TypeDecl: declname='arg_0x101333340', quals=[] (at pp.c:1399)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__TaskBasic__default__runTask', quals=[] (at pp.c:1397)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__init', quals=[], storage=['static'] (at pp.c:1401)
    FuncDecl: quals=None (at pp.c:1401)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__init', quals=[] (at pp.c:1401)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__taskLoop', quals=[], storage=['static'] (at pp.c:1403)
    FuncDecl: quals=None (at pp.c:1403)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__taskLoop', quals=[] (at pp.c:1403)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__runNextTask', quals=[], storage=['static'] (at pp.c:1405)
    FuncDecl: quals=None (at pp.c:1405)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__runNextTask', quals=[] (at pp.c:1405)
        IdentifierType: names=['bool'] (at None)
  Decl: name='LedsP__Init__init', quals=[], storage=['static'] (at pp.c:1407)
    FuncDecl: quals=None (at pp.c:1407)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Init__init', quals=[] (at pp.c:1407)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='LedsP__Leds__led0Off', quals=[], storage=['static'] (at pp.c:1409)
    FuncDecl: quals=None (at pp.c:1409)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led0Off', quals=[] (at pp.c:1409)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led1On', quals=[], storage=['static'] (at pp.c:1420)
    FuncDecl: quals=None (at pp.c:1420)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led1On', quals=[] (at pp.c:1420)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led1Off', quals=[], storage=['static'] (at pp.c:1425)
    FuncDecl: quals=None (at pp.c:1425)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led1Off', quals=[] (at pp.c:1425)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led2Off', quals=[], storage=['static'] (at pp.c:1427)
    FuncDecl: quals=None (at pp.c:1427)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led2Off', quals=[] (at pp.c:1427)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led0On', quals=[], storage=['static'] (at pp.c:1429)
    FuncDecl: quals=None (at pp.c:1429)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led0On', quals=[] (at pp.c:1429)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led2On', quals=[], storage=['static'] (at pp.c:1431)
    FuncDecl: quals=None (at pp.c:1431)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led2On', quals=[] (at pp.c:1431)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[], storage=['static'] (at pp.c:1433)
    FuncDecl: quals=None (at pp.c:1433)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[] (at pp.c:1433)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__set', quals=[], storage=['static'] (at pp.c:1435)
    FuncDecl: quals=None (at pp.c:1435)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__set', quals=[] (at pp.c:1435)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__clr', quals=[], storage=['static'] (at pp.c:1440)
    FuncDecl: quals=None (at pp.c:1440)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__clr', quals=[] (at pp.c:1440)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[], storage=['static'] (at pp.c:1442)
    FuncDecl: quals=None (at pp.c:1442)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[] (at pp.c:1442)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__set', quals=[], storage=['static'] (at pp.c:1444)
    FuncDecl: quals=None (at pp.c:1444)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__set', quals=[] (at pp.c:1444)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__clr', quals=[], storage=['static'] (at pp.c:1449)
    FuncDecl: quals=None (at pp.c:1449)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__clr', quals=[] (at pp.c:1449)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[], storage=['static'] (at pp.c:1451)
    FuncDecl: quals=None (at pp.c:1451)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[] (at pp.c:1451)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__set', quals=[], storage=['static'] (at pp.c:1453)
    FuncDecl: quals=None (at pp.c:1453)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__set', quals=[] (at pp.c:1453)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__clr', quals=[], storage=['static'] (at pp.c:1458)
    FuncDecl: quals=None (at pp.c:1458)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__clr', quals=[] (at pp.c:1458)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__40__IO__makeInput', quals=[], storage=['static'] (at pp.c:1460)
    FuncDecl: quals=None (at pp.c:1460)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__40__IO__makeInput', quals=[] (at pp.c:1460)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__40__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:1462)
    FuncDecl: quals=None (at pp.c:1462)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__40__IO__selectIOFunc', quals=[] (at pp.c:1462)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__40__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:1464)
    FuncDecl: quals=None (at pp.c:1464)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__40__IO__selectModuleFunc', quals=[] (at pp.c:1464)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__41__IO__makeInput', quals=[], storage=['static'] (at pp.c:1466)
    FuncDecl: quals=None (at pp.c:1466)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__41__IO__makeInput', quals=[] (at pp.c:1466)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__41__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:1468)
    FuncDecl: quals=None (at pp.c:1468)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__41__IO__selectIOFunc', quals=[] (at pp.c:1468)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__41__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:1470)
    FuncDecl: quals=None (at pp.c:1470)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__41__IO__selectModuleFunc', quals=[] (at pp.c:1470)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__42__IO__makeInput', quals=[], storage=['static'] (at pp.c:1472)
    FuncDecl: quals=None (at pp.c:1472)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__42__IO__makeInput', quals=[] (at pp.c:1472)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__42__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:1474)
    FuncDecl: quals=None (at pp.c:1474)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__42__IO__selectIOFunc', quals=[] (at pp.c:1474)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__42__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:1476)
    FuncDecl: quals=None (at pp.c:1476)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__42__IO__selectModuleFunc', quals=[] (at pp.c:1476)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__43__IO__makeInput', quals=[], storage=['static'] (at pp.c:1478)
    FuncDecl: quals=None (at pp.c:1478)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__43__IO__makeInput', quals=[] (at pp.c:1478)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__43__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:1480)
    FuncDecl: quals=None (at pp.c:1480)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__43__IO__selectIOFunc', quals=[] (at pp.c:1480)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__43__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:1482)
    FuncDecl: quals=None (at pp.c:1482)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__43__IO__selectModuleFunc', quals=[] (at pp.c:1482)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__44__IO__makeInput', quals=[], storage=['static'] (at pp.c:1484)
    FuncDecl: quals=None (at pp.c:1484)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__44__IO__makeInput', quals=[] (at pp.c:1484)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__44__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:1486)
    FuncDecl: quals=None (at pp.c:1486)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__44__IO__selectIOFunc', quals=[] (at pp.c:1486)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__44__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:1488)
    FuncDecl: quals=None (at pp.c:1488)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__44__IO__selectModuleFunc', quals=[] (at pp.c:1488)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__45__IO__makeInput', quals=[], storage=['static'] (at pp.c:1490)
    FuncDecl: quals=None (at pp.c:1490)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__45__IO__makeInput', quals=[] (at pp.c:1490)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__45__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:1492)
    FuncDecl: quals=None (at pp.c:1492)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__45__IO__selectIOFunc', quals=[] (at pp.c:1492)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__45__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:1494)
    FuncDecl: quals=None (at pp.c:1494)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__45__IO__selectModuleFunc', quals=[] (at pp.c:1494)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__46__IO__makeInput', quals=[], storage=['static'] (at pp.c:1496)
    FuncDecl: quals=None (at pp.c:1496)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__46__IO__makeInput', quals=[] (at pp.c:1496)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__46__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:1498)
    FuncDecl: quals=None (at pp.c:1498)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__46__IO__selectIOFunc', quals=[] (at pp.c:1498)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__46__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:1500)
    FuncDecl: quals=None (at pp.c:1500)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__46__IO__selectModuleFunc', quals=[] (at pp.c:1500)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__47__IO__makeInput', quals=[], storage=['static'] (at pp.c:1502)
    FuncDecl: quals=None (at pp.c:1502)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__47__IO__makeInput', quals=[] (at pp.c:1502)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__47__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:1504)
    FuncDecl: quals=None (at pp.c:1504)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__47__IO__selectIOFunc', quals=[] (at pp.c:1504)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__47__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:1506)
    FuncDecl: quals=None (at pp.c:1506)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__47__IO__selectModuleFunc', quals=[] (at pp.c:1506)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:1508)
    FuncDecl: quals=None (at pp.c:1508)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__makeOutput', quals=[] (at pp.c:1508)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__set', quals=[], storage=['static'] (at pp.c:1510)
    FuncDecl: quals=None (at pp.c:1510)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__set', quals=[] (at pp.c:1510)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__clr', quals=[], storage=['static'] (at pp.c:1511)
    FuncDecl: quals=None (at pp.c:1511)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__clr', quals=[] (at pp.c:1511)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:1516)
    FuncDecl: quals=None (at pp.c:1516)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__makeOutput', quals=[] (at pp.c:1516)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__set', quals=[], storage=['static'] (at pp.c:1518)
    FuncDecl: quals=None (at pp.c:1518)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__set', quals=[] (at pp.c:1518)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__clr', quals=[], storage=['static'] (at pp.c:1519)
    FuncDecl: quals=None (at pp.c:1519)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__clr', quals=[] (at pp.c:1519)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__GeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:1524)
    FuncDecl: quals=None (at pp.c:1524)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__GeneralIO__makeOutput', quals=[] (at pp.c:1524)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__GeneralIO__set', quals=[], storage=['static'] (at pp.c:1526)
    FuncDecl: quals=None (at pp.c:1526)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__GeneralIO__set', quals=[] (at pp.c:1526)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__GeneralIO__clr', quals=[], storage=['static'] (at pp.c:1527)
    FuncDecl: quals=None (at pp.c:1527)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__GeneralIO__clr', quals=[] (at pp.c:1527)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Compare__fired', quals=[], storage=['static'] (at pp.c:1529)
    FuncDecl: quals=None (at pp.c:1529)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__fired', quals=[] (at pp.c:1529)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Timer__overflow', quals=[], storage=['static'] (at pp.c:1531)
    FuncDecl: quals=None (at pp.c:1531)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Timer__overflow', quals=[] (at pp.c:1531)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Alarm__startAt', quals=[], storage=['static'] (at pp.c:1533)
    FuncDecl: quals=None (at pp.c:1533)
      ParamList:  (at pp.c:1533)
        Decl: name='t0', quals=[], storage=[] (at pp.c:1533)
          TypeDecl: declname='t0', quals=[] (at pp.c:1533)
            IdentifierType: names=['Msp430AlarmC__0__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:1533)
          TypeDecl: declname='dt', quals=[] (at pp.c:1533)
            IdentifierType: names=['Msp430AlarmC__0__Alarm__size_type'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Alarm__startAt', quals=[] (at pp.c:1533)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Alarm__stop', quals=[], storage=['static'] (at pp.c:1535)
    FuncDecl: quals=None (at pp.c:1535)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Alarm__stop', quals=[] (at pp.c:1535)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Init__init', quals=[], storage=['static'] (at pp.c:1537)
    FuncDecl: quals=None (at pp.c:1537)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Init__init', quals=[] (at pp.c:1537)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430CounterC__0__Msp430Timer__overflow', quals=[], storage=['static'] (at pp.c:1539)
    FuncDecl: quals=None (at pp.c:1539)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Msp430Timer__overflow', quals=[] (at pp.c:1539)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430CounterC__0__Counter__get', quals=[], storage=['static'] (at pp.c:1541)
    FuncDecl: quals=None (at pp.c:1541)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Counter__get', quals=[] (at pp.c:1541)
        IdentifierType: names=['Msp430CounterC__0__Counter__size_type'] (at None)
  Decl: name='Msp430CounterC__0__Counter__isOverflowPending', quals=[], storage=['static'] (at pp.c:1548)
    FuncDecl: quals=None (at pp.c:1548)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Counter__isOverflowPending', quals=[] (at pp.c:1548)
        IdentifierType: names=['bool'] (at None)
  Decl: name='TransformCounterC__0__CounterFrom__overflow', quals=[], storage=['static'] (at pp.c:1559)
    FuncDecl: quals=None (at pp.c:1559)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__CounterFrom__overflow', quals=[] (at pp.c:1559)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformCounterC__0__Counter__get', quals=[], storage=['static'] (at pp.c:1561)
    FuncDecl: quals=None (at pp.c:1561)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__Counter__get', quals=[] (at pp.c:1561)
        IdentifierType: names=['TransformCounterC__0__Counter__size_type'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__getNow', quals=[], storage=['static'] (at pp.c:1563)
    FuncDecl: quals=None (at pp.c:1563)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__getNow', quals=[] (at pp.c:1563)
        IdentifierType: names=['TransformAlarmC__0__Alarm__size_type'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__startAt', quals=[], storage=['static'] (at pp.c:1565)
    FuncDecl: quals=None (at pp.c:1565)
      ParamList:  (at pp.c:1565)
        Decl: name='t0', quals=[], storage=[] (at pp.c:1565)
          TypeDecl: declname='t0', quals=[] (at pp.c:1565)
            IdentifierType: names=['TransformAlarmC__0__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:1565)
          TypeDecl: declname='dt', quals=[] (at pp.c:1565)
            IdentifierType: names=['TransformAlarmC__0__Alarm__size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__startAt', quals=[] (at pp.c:1565)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__getAlarm', quals=[], storage=['static'] (at pp.c:1567)
    FuncDecl: quals=None (at pp.c:1567)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__getAlarm', quals=[] (at pp.c:1567)
        IdentifierType: names=['TransformAlarmC__0__Alarm__size_type'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__stop', quals=[], storage=['static'] (at pp.c:1569)
    FuncDecl: quals=None (at pp.c:1569)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__stop', quals=[] (at pp.c:1569)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__AlarmFrom__fired', quals=[], storage=['static'] (at pp.c:1574)
    FuncDecl: quals=None (at pp.c:1574)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__AlarmFrom__fired', quals=[] (at pp.c:1574)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Counter__overflow', quals=[], storage=['static'] (at pp.c:1576)
    FuncDecl: quals=None (at pp.c:1576)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Counter__overflow', quals=[] (at pp.c:1576)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__fired__runTask', quals=[], storage=['static'] (at pp.c:1578)
    FuncDecl: quals=None (at pp.c:1578)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__fired__runTask', quals=[] (at pp.c:1578)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__fired', quals=[], storage=['static'] (at pp.c:1580)
    FuncDecl: quals=None (at pp.c:1580)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__fired', quals=[] (at pp.c:1580)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__getNow', quals=[], storage=['static'] (at pp.c:1582)
    FuncDecl: quals=None (at pp.c:1582)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__getNow', quals=[] (at pp.c:1582)
        IdentifierType: names=['uint32_t'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__startOneShotAt', quals=[], storage=['static'] (at pp.c:1584)
    FuncDecl: quals=None (at pp.c:1584)
      ParamList:  (at pp.c:1584)
        Decl: name='t0', quals=[], storage=[] (at pp.c:1584)
          TypeDecl: declname='t0', quals=[] (at pp.c:1584)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:1584)
          TypeDecl: declname='dt', quals=[] (at pp.c:1584)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__startOneShotAt', quals=[] (at pp.c:1584)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__stop', quals=[], storage=['static'] (at pp.c:1586)
    FuncDecl: quals=None (at pp.c:1586)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__stop', quals=[] (at pp.c:1586)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[], storage=['static'] (at pp.c:1588)
    FuncDecl: quals=None (at pp.c:1588)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[] (at pp.c:1588)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__TimerFrom__fired', quals=[], storage=['static'] (at pp.c:1590)
    FuncDecl: quals=None (at pp.c:1590)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__fired', quals=[] (at pp.c:1590)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__default__fired', quals=[], storage=['static'] (at pp.c:1592)
    FuncDecl: quals=None (at pp.c:1592)
      ParamList:  (at pp.c:1594)
        Decl: name='arg_0x1018be5d8', quals=[], storage=[] (at pp.c:1594)
          TypeDecl: declname='arg_0x1018be5d8', quals=[] (at pp.c:1594)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__default__fired', quals=[] (at pp.c:1592)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__isRunning', quals=[], storage=['static'] (at pp.c:1596)
    FuncDecl: quals=None (at pp.c:1596)
      ParamList:  (at pp.c:1598)
        Decl: name='arg_0x1018be5d8', quals=[], storage=[] (at pp.c:1598)
          TypeDecl: declname='arg_0x1018be5d8', quals=[] (at pp.c:1598)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__isRunning', quals=[] (at pp.c:1596)
        IdentifierType: names=['bool'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__startPeriodic', quals=[], storage=['static'] (at pp.c:1600)
    FuncDecl: quals=None (at pp.c:1600)
      ParamList:  (at pp.c:1602)
        Decl: name='arg_0x1018be5d8', quals=[], storage=[] (at pp.c:1602)
          TypeDecl: declname='arg_0x1018be5d8', quals=[] (at pp.c:1602)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:1604)
          TypeDecl: declname='dt', quals=[] (at pp.c:1604)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__startPeriodic', quals=[] (at pp.c:1600)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__startOneShot', quals=[], storage=['static'] (at pp.c:1613)
    FuncDecl: quals=None (at pp.c:1613)
      ParamList:  (at pp.c:1615)
        Decl: name='arg_0x1018be5d8', quals=[], storage=[] (at pp.c:1615)
          TypeDecl: declname='arg_0x1018be5d8', quals=[] (at pp.c:1615)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:1617)
          TypeDecl: declname='dt', quals=[] (at pp.c:1617)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__startOneShot', quals=[] (at pp.c:1613)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__stop', quals=[], storage=['static'] (at pp.c:1622)
    FuncDecl: quals=None (at pp.c:1622)
      ParamList:  (at pp.c:1624)
        Decl: name='arg_0x1018be5d8', quals=[], storage=[] (at pp.c:1624)
          TypeDecl: declname='arg_0x1018be5d8', quals=[] (at pp.c:1624)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__stop', quals=[] (at pp.c:1622)
        IdentifierType: names=['void'] (at None)
  Decl: name='CounterToLocalTimeC__0__Counter__overflow', quals=[], storage=['static'] (at pp.c:1626)
    FuncDecl: quals=None (at pp.c:1626)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CounterToLocalTimeC__0__Counter__overflow', quals=[] (at pp.c:1626)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__SubResourceReadNow__granted', quals=[], storage=['static'] (at pp.c:1628)
    FuncDecl: quals=None (at pp.c:1628)
      ParamList:  (at pp.c:1630)
        Decl: name='arg_0x10195bd68', quals=[], storage=[] (at pp.c:1630)
          TypeDecl: declname='arg_0x10195bd68', quals=[] (at pp.c:1630)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__SubResourceReadNow__granted', quals=[] (at pp.c:1628)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__Read__read', quals=[], storage=['static'] (at pp.c:1632)
    FuncDecl: quals=None (at pp.c:1632)
      ParamList:  (at pp.c:1634)
        Decl: name='arg_0x101966db0', quals=[], storage=[] (at pp.c:1634)
          TypeDecl: declname='arg_0x101966db0', quals=[] (at pp.c:1634)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__Read__read', quals=[] (at pp.c:1632)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__Read__default__readDone', quals=[], storage=['static'] (at pp.c:1636)
    FuncDecl: quals=None (at pp.c:1636)
      ParamList:  (at pp.c:1638)
        Decl: name='arg_0x101966db0', quals=[], storage=[] (at pp.c:1638)
          TypeDecl: declname='arg_0x101966db0', quals=[] (at pp.c:1638)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:1640)
          TypeDecl: declname='result', quals=[] (at pp.c:1640)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='val', quals=[], storage=[] (at pp.c:1640)
          TypeDecl: declname='val', quals=[] (at pp.c:1640)
            IdentifierType: names=['AdcP__Read__val_t'] (at None)
      TypeDecl: declname='AdcP__Read__default__readDone', quals=[] (at pp.c:1636)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__ReadNow__default__readDone', quals=[], storage=['static'] (at pp.c:1642)
    FuncDecl: quals=None (at pp.c:1642)
      ParamList:  (at pp.c:1644)
        Decl: name='arg_0x101961b18', quals=[], storage=[] (at pp.c:1644)
          TypeDecl: declname='arg_0x101961b18', quals=[] (at pp.c:1644)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:1646)
          TypeDecl: declname='result', quals=[] (at pp.c:1646)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='val', quals=[], storage=[] (at pp.c:1646)
          TypeDecl: declname='val', quals=[] (at pp.c:1646)
            IdentifierType: names=['AdcP__ReadNow__val_t'] (at None)
      TypeDecl: declname='AdcP__ReadNow__default__readDone', quals=[] (at pp.c:1642)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__ResourceReadNow__default__granted', quals=[], storage=['static'] (at pp.c:1648)
    FuncDecl: quals=None (at pp.c:1648)
      ParamList:  (at pp.c:1650)
        Decl: name='arg_0x10195e748', quals=[], storage=[] (at pp.c:1650)
          TypeDecl: declname='arg_0x10195e748', quals=[] (at pp.c:1650)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceReadNow__default__granted', quals=[] (at pp.c:1648)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__Config__default__getConfiguration', quals=[], storage=['static'] (at pp.c:1652)
    FuncDecl: quals=None (at pp.c:1652)
      ParamList:  (at pp.c:1654)
        Decl: name='arg_0x101959350', quals=[], storage=[] (at pp.c:1654)
          TypeDecl: declname='arg_0x101959350', quals=[] (at pp.c:1654)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__Config__default__getConfiguration', quals=[] (at pp.c:1652)
        IdentifierType: names=['AdcP__Config__adc_config_t'] (at None)
  Decl: name='AdcP__SingleChannel__default__getData', quals=[], storage=['static'] (at pp.c:1656)
    FuncDecl: quals=None (at pp.c:1656)
      ParamList:  (at pp.c:1658)
        Decl: name='arg_0x101977910', quals=[], storage=[] (at pp.c:1658)
          TypeDecl: declname='arg_0x101977910', quals=[] (at pp.c:1658)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__SingleChannel__default__getData', quals=[] (at pp.c:1656)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__SingleChannel__default__configureSingle', quals=[], storage=['static'] (at pp.c:1660)
    FuncDecl: quals=None (at pp.c:1660)
      ParamList:  (at pp.c:1662)
        Decl: name='arg_0x101977910', quals=[], storage=[] (at pp.c:1662)
          TypeDecl: declname='arg_0x101977910', quals=[] (at pp.c:1662)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:1664)
          PtrDecl: quals=[] (at pp.c:1664)
            TypeDecl: declname='config', quals=['const'] (at pp.c:1664)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
      TypeDecl: declname='AdcP__SingleChannel__default__configureSingle', quals=[] (at pp.c:1660)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__SingleChannel__multipleDataReady', quals=[], storage=['static'] (at pp.c:1666)
    FuncDecl: quals=None (at pp.c:1666)
      ParamList:  (at pp.c:1668)
        Decl: name='arg_0x101977910', quals=[], storage=[] (at pp.c:1668)
          TypeDecl: declname='arg_0x101977910', quals=[] (at pp.c:1668)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buffer', quals=[], storage=[] (at pp.c:1670)
          PtrDecl: quals=[] (at pp.c:1670)
            TypeDecl: declname='buffer', quals=[] (at pp.c:1670)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:1670)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:1670)
            IdentifierType: names=['uint16_t'] (at None)
      PtrDecl: quals=[] (at pp.c:1666)
        TypeDecl: declname='AdcP__SingleChannel__multipleDataReady', quals=[] (at pp.c:1666)
          IdentifierType: names=['uint16_t'] (at None)
  Decl: name='AdcP__SingleChannel__singleDataReady', quals=[], storage=['static'] (at pp.c:1672)
    FuncDecl: quals=None (at pp.c:1672)
      ParamList:  (at pp.c:1674)
        Decl: name='arg_0x101977910', quals=[], storage=[] (at pp.c:1674)
          TypeDecl: declname='arg_0x101977910', quals=[] (at pp.c:1674)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:1676)
          TypeDecl: declname='data', quals=[] (at pp.c:1676)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcP__SingleChannel__singleDataReady', quals=[] (at pp.c:1672)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__ResourceRead__default__release', quals=[], storage=['static'] (at pp.c:1678)
    FuncDecl: quals=None (at pp.c:1678)
      ParamList:  (at pp.c:1680)
        Decl: name='arg_0x10195daa0', quals=[], storage=[] (at pp.c:1680)
          TypeDecl: declname='arg_0x10195daa0', quals=[] (at pp.c:1680)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceRead__default__release', quals=[] (at pp.c:1678)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__ResourceRead__default__request', quals=[], storage=['static'] (at pp.c:1682)
    FuncDecl: quals=None (at pp.c:1682)
      ParamList:  (at pp.c:1684)
        Decl: name='arg_0x10195daa0', quals=[], storage=[] (at pp.c:1684)
          TypeDecl: declname='arg_0x10195daa0', quals=[] (at pp.c:1684)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceRead__default__request', quals=[] (at pp.c:1682)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__ResourceRead__granted', quals=[], storage=['static'] (at pp.c:1686)
    FuncDecl: quals=None (at pp.c:1686)
      ParamList:  (at pp.c:1688)
        Decl: name='arg_0x10195daa0', quals=[], storage=[] (at pp.c:1688)
          TypeDecl: declname='arg_0x10195daa0', quals=[] (at pp.c:1688)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceRead__granted', quals=[] (at pp.c:1686)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__readDone__runTask', quals=[], storage=['static'] (at pp.c:1690)
    FuncDecl: quals=None (at pp.c:1690)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcP__readDone__runTask', quals=[] (at pp.c:1690)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__MultiChannel__default__dataReady', quals=[], storage=['static'] (at pp.c:1692)
    FuncDecl: quals=None (at pp.c:1692)
      ParamList:  (at pp.c:1694)
        Decl: name='arg_0x1019da0c8', quals=[], storage=[] (at pp.c:1694)
          TypeDecl: declname='arg_0x1019da0c8', quals=[] (at pp.c:1694)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buffer', quals=[], storage=[] (at pp.c:1696)
          PtrDecl: quals=[] (at pp.c:1696)
            TypeDecl: declname='buffer', quals=[] (at pp.c:1696)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:1696)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:1696)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__MultiChannel__default__dataReady', quals=[] (at pp.c:1692)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__conversionDone', quals=[], storage=['static'] (at pp.c:1698)
    FuncDecl: quals=None (at pp.c:1698)
      ParamList:  (at pp.c:1698)
        Decl: name='iv', quals=[], storage=[] (at pp.c:1698)
          TypeDecl: declname='iv', quals=[] (at pp.c:1698)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__conversionDone', quals=[] (at pp.c:1698)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__CompareA1__fired', quals=[], storage=['static'] (at pp.c:1700)
    FuncDecl: quals=None (at pp.c:1700)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__CompareA1__fired', quals=[] (at pp.c:1700)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Overflow__default__memOverflow', quals=[], storage=['static'] (at pp.c:1702)
    FuncDecl: quals=None (at pp.c:1702)
      ParamList:  (at pp.c:1704)
        Decl: name='arg_0x1019d9020', quals=[], storage=[] (at pp.c:1704)
          TypeDecl: declname='arg_0x1019d9020', quals=[] (at pp.c:1704)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Overflow__default__memOverflow', quals=[] (at pp.c:1702)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Overflow__default__conversionTimeOverflow', quals=[], storage=['static'] (at pp.c:1706)
    FuncDecl: quals=None (at pp.c:1706)
      ParamList:  (at pp.c:1708)
        Decl: name='arg_0x1019d9020', quals=[], storage=[] (at pp.c:1708)
          TypeDecl: declname='arg_0x1019d9020', quals=[] (at pp.c:1708)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Overflow__default__conversionTimeOverflow', quals=[] (at pp.c:1706)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Init__init', quals=[], storage=['static'] (at pp.c:1710)
    FuncDecl: quals=None (at pp.c:1710)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Init__init', quals=[] (at pp.c:1710)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__TimerA__overflow', quals=[], storage=['static'] (at pp.c:1712)
    FuncDecl: quals=None (at pp.c:1712)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__TimerA__overflow', quals=[] (at pp.c:1712)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__getData', quals=[], storage=['static'] (at pp.c:1714)
    FuncDecl: quals=None (at pp.c:1714)
      ParamList:  (at pp.c:1716)
        Decl: name='arg_0x1019dcac0', quals=[], storage=[] (at pp.c:1716)
          TypeDecl: declname='arg_0x1019dcac0', quals=[] (at pp.c:1716)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__getData', quals=[] (at pp.c:1714)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__configureSingle', quals=[], storage=['static'] (at pp.c:1718)
    FuncDecl: quals=None (at pp.c:1718)
      ParamList:  (at pp.c:1720)
        Decl: name='arg_0x1019dcac0', quals=[], storage=[] (at pp.c:1720)
          TypeDecl: declname='arg_0x1019dcac0', quals=[] (at pp.c:1720)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:1722)
          PtrDecl: quals=[] (at pp.c:1722)
            TypeDecl: declname='config', quals=['const'] (at pp.c:1722)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__configureSingle', quals=[] (at pp.c:1718)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__default__multipleDataReady', quals=[], storage=['static'] (at pp.c:1724)
    FuncDecl: quals=None (at pp.c:1724)
      ParamList:  (at pp.c:1726)
        Decl: name='arg_0x1019dcac0', quals=[], storage=[] (at pp.c:1726)
          TypeDecl: declname='arg_0x1019dcac0', quals=[] (at pp.c:1726)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buffer', quals=[], storage=[] (at pp.c:1728)
          PtrDecl: quals=[] (at pp.c:1728)
            TypeDecl: declname='buffer', quals=[] (at pp.c:1728)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:1728)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:1728)
            IdentifierType: names=['uint16_t'] (at None)
      PtrDecl: quals=[] (at pp.c:1724)
        TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__default__multipleDataReady', quals=[] (at pp.c:1724)
          IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__configureMultiple', quals=[], storage=['static'] (at pp.c:1730)
    FuncDecl: quals=None (at pp.c:1730)
      ParamList:  (at pp.c:1732)
        Decl: name='arg_0x1019dcac0', quals=[], storage=[] (at pp.c:1732)
          TypeDecl: declname='arg_0x1019dcac0', quals=[] (at pp.c:1732)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:1734)
          PtrDecl: quals=[] (at pp.c:1734)
            TypeDecl: declname='config', quals=['const'] (at pp.c:1734)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        Decl: name='buffer', quals=[], storage=[] (at pp.c:1734)
          PtrDecl: quals=[] (at pp.c:1734)
            TypeDecl: declname='buffer', quals=[] (at pp.c:1734)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:1734)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:1734)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='jiffies', quals=[], storage=[] (at pp.c:1734)
          TypeDecl: declname='jiffies', quals=[] (at pp.c:1734)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__configureMultiple', quals=[] (at pp.c:1730)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__default__singleDataReady', quals=[], storage=['static'] (at pp.c:1736)
    FuncDecl: quals=None (at pp.c:1736)
      ParamList:  (at pp.c:1738)
        Decl: name='arg_0x1019dcac0', quals=[], storage=[] (at pp.c:1738)
          TypeDecl: declname='arg_0x1019dcac0', quals=[] (at pp.c:1738)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:1740)
          TypeDecl: declname='data', quals=[] (at pp.c:1740)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__default__singleDataReady', quals=[] (at pp.c:1736)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__CompareA0__fired', quals=[], storage=['static'] (at pp.c:1742)
    FuncDecl: quals=None (at pp.c:1742)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__CompareA0__fired', quals=[] (at pp.c:1742)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__getCtl0', quals=[], storage=['static'] (at pp.c:1744)
    FuncDecl: quals=None (at pp.c:1744)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__getCtl0', quals=[] (at pp.c:1744)
        IdentifierType: names=['adc12ctl0_t'] (at None)
  Decl: name='HplAdc12P__HplAdc12__getMCtl', quals=[], storage=['static'] (at pp.c:1746)
    FuncDecl: quals=None (at pp.c:1746)
      ParamList:  (at pp.c:1746)
        Decl: name='idx', quals=[], storage=[] (at pp.c:1746)
          TypeDecl: declname='idx', quals=[] (at pp.c:1746)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__getMCtl', quals=[] (at pp.c:1746)
        IdentifierType: names=['adc12memctl_t'] (at None)
  Decl: name='HplAdc12P__HplAdc12__resetIFGs', quals=[], storage=['static'] (at pp.c:1748)
    FuncDecl: quals=None (at pp.c:1748)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__resetIFGs', quals=[] (at pp.c:1748)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__isBusy', quals=[], storage=['static'] (at pp.c:1750)
    FuncDecl: quals=None (at pp.c:1750)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__isBusy', quals=[] (at pp.c:1750)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplAdc12P__HplAdc12__setMCtl', quals=[], storage=['static'] (at pp.c:1752)
    FuncDecl: quals=None (at pp.c:1752)
      ParamList:  (at pp.c:1752)
        Decl: name='idx', quals=[], storage=[] (at pp.c:1752)
          TypeDecl: declname='idx', quals=[] (at pp.c:1752)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='memControl', quals=[], storage=[] (at pp.c:1752)
          TypeDecl: declname='memControl', quals=[] (at pp.c:1752)
            IdentifierType: names=['adc12memctl_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__setMCtl', quals=[] (at pp.c:1752)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__startConversion', quals=[], storage=['static'] (at pp.c:1754)
    FuncDecl: quals=None (at pp.c:1754)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__startConversion', quals=[] (at pp.c:1754)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__setCtl0', quals=[], storage=['static'] (at pp.c:1756)
    FuncDecl: quals=None (at pp.c:1756)
      ParamList:  (at pp.c:1756)
        Decl: name='control0', quals=[], storage=[] (at pp.c:1756)
          TypeDecl: declname='control0', quals=[] (at pp.c:1756)
            IdentifierType: names=['adc12ctl0_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__setCtl0', quals=[] (at pp.c:1756)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__getMem', quals=[], storage=['static'] (at pp.c:1758)
    FuncDecl: quals=None (at pp.c:1758)
      ParamList:  (at pp.c:1758)
        Decl: name='idx', quals=[], storage=[] (at pp.c:1758)
          TypeDecl: declname='idx', quals=[] (at pp.c:1758)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__getMem', quals=[] (at pp.c:1758)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='HplAdc12P__HplAdc12__setIEFlags', quals=[], storage=['static'] (at pp.c:1764)
    FuncDecl: quals=None (at pp.c:1764)
      ParamList:  (at pp.c:1764)
        Decl: name='mask', quals=[], storage=[] (at pp.c:1764)
          TypeDecl: declname='mask', quals=[] (at pp.c:1764)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__setIEFlags', quals=[] (at pp.c:1764)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__stopConversion', quals=[], storage=['static'] (at pp.c:1766)
    FuncDecl: quals=None (at pp.c:1766)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__stopConversion', quals=[] (at pp.c:1766)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__setCtl1', quals=[], storage=['static'] (at pp.c:1768)
    FuncDecl: quals=None (at pp.c:1768)
      ParamList:  (at pp.c:1768)
        Decl: name='control1', quals=[], storage=[] (at pp.c:1768)
          TypeDecl: declname='control1', quals=[] (at pp.c:1768)
            IdentifierType: names=['adc12ctl1_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__setCtl1', quals=[] (at pp.c:1768)
        IdentifierType: names=['void'] (at None)
  Decl: name='RoundRobinResourceQueueC__0__Init__init', quals=[], storage=['static'] (at pp.c:1770)
    FuncDecl: quals=None (at pp.c:1770)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__Init__init', quals=[] (at pp.c:1770)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__enqueue', quals=[], storage=['static'] (at pp.c:1772)
    FuncDecl: quals=None (at pp.c:1772)
      ParamList:  (at pp.c:1772)
        Decl: name='id', quals=[], storage=[] (at pp.c:1772)
          TypeDecl: declname='id', quals=[] (at pp.c:1772)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__enqueue', quals=[] (at pp.c:1772)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__isEmpty', quals=[], storage=['static'] (at pp.c:1774)
    FuncDecl: quals=None (at pp.c:1774)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__isEmpty', quals=[] (at pp.c:1774)
        IdentifierType: names=['bool'] (at None)
  Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__isEnqueued', quals=[], storage=['static'] (at pp.c:1783)
    FuncDecl: quals=None (at pp.c:1783)
      ParamList:  (at pp.c:1783)
        Decl: name='id', quals=[], storage=[] (at pp.c:1783)
          TypeDecl: declname='id', quals=[] (at pp.c:1783)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__isEnqueued', quals=[] (at pp.c:1783)
        IdentifierType: names=['bool'] (at None)
  Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__dequeue', quals=[], storage=['static'] (at pp.c:1791)
    FuncDecl: quals=None (at pp.c:1791)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__dequeue', quals=[] (at pp.c:1791)
        IdentifierType: names=['resource_client_id_t'] (at None)
  Decl: name='SimpleArbiterP__0__ResourceRequested__default__requested', quals=[], storage=['static'] (at pp.c:1793)
    FuncDecl: quals=None (at pp.c:1793)
      ParamList:  (at pp.c:1795)
        Decl: name='arg_0x101b0d2f0', quals=[], storage=[] (at pp.c:1795)
          TypeDecl: declname='arg_0x101b0d2f0', quals=[] (at pp.c:1795)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ResourceRequested__default__requested', quals=[] (at pp.c:1793)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__ResourceConfigure__default__unconfigure', quals=[], storage=['static'] (at pp.c:1797)
    FuncDecl: quals=None (at pp.c:1797)
      ParamList:  (at pp.c:1799)
        Decl: name='arg_0x101b0c868', quals=[], storage=[] (at pp.c:1799)
          TypeDecl: declname='arg_0x101b0c868', quals=[] (at pp.c:1799)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ResourceConfigure__default__unconfigure', quals=[] (at pp.c:1797)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__ResourceConfigure__default__configure', quals=[], storage=['static'] (at pp.c:1801)
    FuncDecl: quals=None (at pp.c:1801)
      ParamList:  (at pp.c:1803)
        Decl: name='arg_0x101b0c868', quals=[], storage=[] (at pp.c:1803)
          TypeDecl: declname='arg_0x101b0c868', quals=[] (at pp.c:1803)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ResourceConfigure__default__configure', quals=[] (at pp.c:1801)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__Resource__release', quals=[], storage=['static'] (at pp.c:1805)
    FuncDecl: quals=None (at pp.c:1805)
      ParamList:  (at pp.c:1807)
        Decl: name='arg_0x101b0e158', quals=[], storage=[] (at pp.c:1807)
          TypeDecl: declname='arg_0x101b0e158', quals=[] (at pp.c:1807)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__Resource__release', quals=[] (at pp.c:1805)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SimpleArbiterP__0__Resource__request', quals=[], storage=['static'] (at pp.c:1809)
    FuncDecl: quals=None (at pp.c:1809)
      ParamList:  (at pp.c:1811)
        Decl: name='arg_0x101b0e158', quals=[], storage=[] (at pp.c:1811)
          TypeDecl: declname='arg_0x101b0e158', quals=[] (at pp.c:1811)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__Resource__request', quals=[] (at pp.c:1809)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SimpleArbiterP__0__Resource__default__granted', quals=[], storage=['static'] (at pp.c:1813)
    FuncDecl: quals=None (at pp.c:1813)
      ParamList:  (at pp.c:1815)
        Decl: name='arg_0x101b0e158', quals=[], storage=[] (at pp.c:1815)
          TypeDecl: declname='arg_0x101b0e158', quals=[] (at pp.c:1815)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__Resource__default__granted', quals=[] (at pp.c:1813)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__ArbiterInfo__userId', quals=[], storage=['static'] (at pp.c:1817)
    FuncDecl: quals=None (at pp.c:1817)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ArbiterInfo__userId', quals=[] (at pp.c:1817)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SimpleArbiterP__0__grantedTask__runTask', quals=[], storage=['static'] (at pp.c:1819)
    FuncDecl: quals=None (at pp.c:1819)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__grantedTask__runTask', quals=[] (at pp.c:1819)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__HplAdc12__conversionDone', quals=[], storage=['static'] (at pp.c:1821)
    FuncDecl: quals=None (at pp.c:1821)
      ParamList:  (at pp.c:1821)
        Decl: name='iv', quals=[], storage=[] (at pp.c:1821)
          TypeDecl: declname='iv', quals=[] (at pp.c:1821)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__HplAdc12__conversionDone', quals=[] (at pp.c:1821)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOffTimer__fired', quals=[], storage=['static'] (at pp.c:1823)
    FuncDecl: quals=None (at pp.c:1823)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffTimer__fired', quals=[] (at pp.c:1823)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__start', quals=[], storage=['static'] (at pp.c:1825)
    FuncDecl: quals=None (at pp.c:1825)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_2_5V__start', quals=[] (at pp.c:1825)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__stop', quals=[], storage=['static'] (at pp.c:1827)
    FuncDecl: quals=None (at pp.c:1827)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_2_5V__stop', quals=[] (at pp.c:1827)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__fired', quals=[], storage=['static'] (at pp.c:1829)
    FuncDecl: quals=None (at pp.c:1829)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__fired', quals=[] (at pp.c:1829)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__start', quals=[], storage=['static'] (at pp.c:1831)
    FuncDecl: quals=None (at pp.c:1831)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_1_5V__start', quals=[] (at pp.c:1831)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__stop', quals=[], storage=['static'] (at pp.c:1833)
    FuncDecl: quals=None (at pp.c:1833)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_1_5V__stop', quals=[] (at pp.c:1833)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOnTimer__fired', quals=[], storage=['static'] (at pp.c:1835)
    FuncDecl: quals=None (at pp.c:1835)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOnTimer__fired', quals=[] (at pp.c:1835)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__Config__default__getConfiguration', quals=[], storage=['static'] (at pp.c:1837)
    FuncDecl: quals=None (at pp.c:1837)
      ParamList:  (at pp.c:1839)
        Decl: name='arg_0x101ba9af8', quals=[], storage=[] (at pp.c:1839)
          TypeDecl: declname='arg_0x101ba9af8', quals=[] (at pp.c:1839)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__Config__default__getConfiguration', quals=[] (at pp.c:1837)
        IdentifierType: names=['Msp430RefVoltArbiterImplP__Config__adc_config_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__startDone', quals=[], storage=['static'] (at pp.c:1841)
    FuncDecl: quals=None (at pp.c:1841)
      ParamList:  (at pp.c:1841)
        Decl: name='error', quals=[], storage=[] (at pp.c:1841)
          TypeDecl: declname='error', quals=[] (at pp.c:1841)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_2_5V__startDone', quals=[] (at pp.c:1841)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stopDone', quals=[], storage=['static'] (at pp.c:1843)
    FuncDecl: quals=None (at pp.c:1843)
      ParamList:  (at pp.c:1843)
        Decl: name='error', quals=[], storage=[] (at pp.c:1843)
          TypeDecl: declname='error', quals=[] (at pp.c:1843)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stopDone', quals=[] (at pp.c:1843)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__AdcResource__default__release', quals=[], storage=['static'] (at pp.c:1845)
    FuncDecl: quals=None (at pp.c:1845)
      ParamList:  (at pp.c:1847)
        Decl: name='arg_0x101bace18', quals=[], storage=[] (at pp.c:1847)
          TypeDecl: declname='arg_0x101bace18', quals=[] (at pp.c:1847)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__default__release', quals=[] (at pp.c:1845)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__AdcResource__default__request', quals=[], storage=['static'] (at pp.c:1849)
    FuncDecl: quals=None (at pp.c:1849)
      ParamList:  (at pp.c:1851)
        Decl: name='arg_0x101bace18', quals=[], storage=[] (at pp.c:1851)
          TypeDecl: declname='arg_0x101bace18', quals=[] (at pp.c:1851)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__default__request', quals=[] (at pp.c:1849)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__AdcResource__granted', quals=[], storage=['static'] (at pp.c:1853)
    FuncDecl: quals=None (at pp.c:1853)
      ParamList:  (at pp.c:1855)
        Decl: name='arg_0x101bace18', quals=[], storage=[] (at pp.c:1855)
          TypeDecl: declname='arg_0x101bace18', quals=[] (at pp.c:1855)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__granted', quals=[] (at pp.c:1853)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__ClientResource__release', quals=[], storage=['static'] (at pp.c:1857)
    FuncDecl: quals=None (at pp.c:1857)
      ParamList:  (at pp.c:1859)
        Decl: name='arg_0x101bafb98', quals=[], storage=[] (at pp.c:1859)
          TypeDecl: declname='arg_0x101bafb98', quals=[] (at pp.c:1859)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__release', quals=[] (at pp.c:1857)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__ClientResource__request', quals=[], storage=['static'] (at pp.c:1861)
    FuncDecl: quals=None (at pp.c:1861)
      ParamList:  (at pp.c:1863)
        Decl: name='arg_0x101bafb98', quals=[], storage=[] (at pp.c:1863)
          TypeDecl: declname='arg_0x101bafb98', quals=[] (at pp.c:1863)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__request', quals=[] (at pp.c:1861)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__ClientResource__default__granted', quals=[], storage=['static'] (at pp.c:1865)
    FuncDecl: quals=None (at pp.c:1865)
      ParamList:  (at pp.c:1867)
        Decl: name='arg_0x101bafb98', quals=[], storage=[] (at pp.c:1867)
          TypeDecl: declname='arg_0x101bafb98', quals=[] (at pp.c:1867)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__default__granted', quals=[] (at pp.c:1865)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__switchOff__runTask', quals=[], storage=['static'] (at pp.c:1869)
    FuncDecl: quals=None (at pp.c:1869)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__switchOff__runTask', quals=[] (at pp.c:1869)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__startDone', quals=[], storage=['static'] (at pp.c:1871)
    FuncDecl: quals=None (at pp.c:1871)
      ParamList:  (at pp.c:1871)
        Decl: name='error', quals=[], storage=[] (at pp.c:1871)
          TypeDecl: declname='error', quals=[] (at pp.c:1871)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_1_5V__startDone', quals=[] (at pp.c:1871)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stopDone', quals=[], storage=['static'] (at pp.c:1873)
    FuncDecl: quals=None (at pp.c:1873)
      ParamList:  (at pp.c:1873)
        Decl: name='error', quals=[], storage=[] (at pp.c:1873)
          TypeDecl: declname='error', quals=[] (at pp.c:1873)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stopDone', quals=[] (at pp.c:1873)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ConfAlertC__0__ConfSub__getConfiguration', quals=[], storage=['static'] (at pp.c:1875)
    FuncDecl: quals=None (at pp.c:1875)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ConfAlertC__0__ConfSub__getConfiguration', quals=[] (at pp.c:1875)
        IdentifierType: names=['Msp430Adc12ConfAlertC__0__ConfSub__adc_config_t'] (at None)
  Decl: name='AdcStreamP__bufferDone__runTask', quals=[], storage=['static'] (at pp.c:1877)
    FuncDecl: quals=None (at pp.c:1877)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__bufferDone__runTask', quals=[] (at pp.c:1877)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__readStreamDone__runTask', quals=[], storage=['static'] (at pp.c:1879)
    FuncDecl: quals=None (at pp.c:1879)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__readStreamDone__runTask', quals=[] (at pp.c:1879)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__readStreamFail__runTask', quals=[], storage=['static'] (at pp.c:1881)
    FuncDecl: quals=None (at pp.c:1881)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__readStreamFail__runTask', quals=[] (at pp.c:1881)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__Alarm__fired', quals=[], storage=['static'] (at pp.c:1883)
    FuncDecl: quals=None (at pp.c:1883)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__Alarm__fired', quals=[] (at pp.c:1883)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__Init__init', quals=[], storage=['static'] (at pp.c:1885)
    FuncDecl: quals=None (at pp.c:1885)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__Init__init', quals=[] (at pp.c:1885)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__AdcConfigure__default__getConfiguration', quals=[], storage=['static'] (at pp.c:1887)
    FuncDecl: quals=None (at pp.c:1887)
      ParamList:  (at pp.c:1889)
        Decl: name='arg_0x101c49318', quals=[], storage=[] (at pp.c:1889)
          TypeDecl: declname='arg_0x101c49318', quals=[] (at pp.c:1889)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcStreamP__AdcConfigure__default__getConfiguration', quals=[] (at pp.c:1887)
        IdentifierType: names=['AdcStreamP__AdcConfigure__adc_config_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__default__getData', quals=[], storage=['static'] (at pp.c:1891)
    FuncDecl: quals=None (at pp.c:1891)
      ParamList:  (at pp.c:1893)
        Decl: name='arg_0x101c4bb90', quals=[], storage=[] (at pp.c:1893)
          TypeDecl: declname='arg_0x101c4bb90', quals=[] (at pp.c:1893)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__default__getData', quals=[] (at pp.c:1891)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__default__configureSingle', quals=[], storage=['static'] (at pp.c:1895)
    FuncDecl: quals=None (at pp.c:1895)
      ParamList:  (at pp.c:1897)
        Decl: name='arg_0x101c4bb90', quals=[], storage=[] (at pp.c:1897)
          TypeDecl: declname='arg_0x101c4bb90', quals=[] (at pp.c:1897)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:1899)
          PtrDecl: quals=[] (at pp.c:1899)
            TypeDecl: declname='config', quals=['const'] (at pp.c:1899)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__default__configureSingle', quals=[] (at pp.c:1895)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__multipleDataReady', quals=[], storage=['static'] (at pp.c:1901)
    FuncDecl: quals=None (at pp.c:1901)
      ParamList:  (at pp.c:1903)
        Decl: name='arg_0x101c4bb90', quals=[], storage=[] (at pp.c:1903)
          TypeDecl: declname='arg_0x101c4bb90', quals=[] (at pp.c:1903)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buffer', quals=[], storage=[] (at pp.c:1905)
          PtrDecl: quals=[] (at pp.c:1905)
            TypeDecl: declname='buffer', quals=[] (at pp.c:1905)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:1905)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:1905)
            IdentifierType: names=['uint16_t'] (at None)
      PtrDecl: quals=[] (at pp.c:1901)
        TypeDecl: declname='AdcStreamP__SingleChannel__multipleDataReady', quals=[] (at pp.c:1901)
          IdentifierType: names=['uint16_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__default__configureMultiple', quals=[], storage=['static'] (at pp.c:1907)
    FuncDecl: quals=None (at pp.c:1907)
      ParamList:  (at pp.c:1909)
        Decl: name='arg_0x101c4bb90', quals=[], storage=[] (at pp.c:1909)
          TypeDecl: declname='arg_0x101c4bb90', quals=[] (at pp.c:1909)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:1911)
          PtrDecl: quals=[] (at pp.c:1911)
            TypeDecl: declname='config', quals=['const'] (at pp.c:1911)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        Decl: name='buffer', quals=[], storage=[] (at pp.c:1911)
          PtrDecl: quals=[] (at pp.c:1911)
            TypeDecl: declname='buffer', quals=[] (at pp.c:1911)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:1911)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:1911)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='jiffies', quals=[], storage=[] (at pp.c:1911)
          TypeDecl: declname='jiffies', quals=[] (at pp.c:1911)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__default__configureMultiple', quals=[] (at pp.c:1907)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__singleDataReady', quals=[], storage=['static'] (at pp.c:1913)
    FuncDecl: quals=None (at pp.c:1913)
      ParamList:  (at pp.c:1915)
        Decl: name='arg_0x101c4bb90', quals=[], storage=[] (at pp.c:1915)
          TypeDecl: declname='arg_0x101c4bb90', quals=[] (at pp.c:1915)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:1917)
          TypeDecl: declname='data', quals=[] (at pp.c:1917)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__singleDataReady', quals=[] (at pp.c:1913)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__ReadStream__read', quals=[], storage=['static'] (at pp.c:1919)
    FuncDecl: quals=None (at pp.c:1919)
      ParamList:  (at pp.c:1921)
        Decl: name='arg_0x101c4fb08', quals=[], storage=[] (at pp.c:1921)
          TypeDecl: declname='arg_0x101c4fb08', quals=[] (at pp.c:1921)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='usPeriod', quals=[], storage=[] (at pp.c:1923)
          TypeDecl: declname='usPeriod', quals=[] (at pp.c:1923)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='AdcStreamP__ReadStream__read', quals=[] (at pp.c:1919)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430Compare__fired', quals=[], storage=['static'] (at pp.c:1925)
    FuncDecl: quals=None (at pp.c:1925)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430Compare__fired', quals=[] (at pp.c:1925)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430Timer__overflow', quals=[], storage=['static'] (at pp.c:1927)
    FuncDecl: quals=None (at pp.c:1927)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430Timer__overflow', quals=[] (at pp.c:1927)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Alarm__startAt', quals=[], storage=['static'] (at pp.c:1929)
    FuncDecl: quals=None (at pp.c:1929)
      ParamList:  (at pp.c:1929)
        Decl: name='t0', quals=[], storage=[] (at pp.c:1929)
          TypeDecl: declname='t0', quals=[] (at pp.c:1929)
            IdentifierType: names=['Msp430AlarmC__1__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:1929)
          TypeDecl: declname='dt', quals=[] (at pp.c:1929)
            IdentifierType: names=['Msp430AlarmC__1__Alarm__size_type'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Alarm__startAt', quals=[] (at pp.c:1929)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__Alarm__getNow', quals=[], storage=['static'] (at pp.c:1935)
    FuncDecl: quals=None (at pp.c:1935)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__getNow', quals=[] (at pp.c:1935)
        IdentifierType: names=['TransformAlarmC__1__Alarm__size_type'] (at None)
  Decl: name='TransformAlarmC__1__Alarm__startAt', quals=[], storage=['static'] (at pp.c:1937)
    FuncDecl: quals=None (at pp.c:1937)
      ParamList:  (at pp.c:1937)
        Decl: name='t0', quals=[], storage=[] (at pp.c:1937)
          TypeDecl: declname='t0', quals=[] (at pp.c:1937)
            IdentifierType: names=['TransformAlarmC__1__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:1937)
          TypeDecl: declname='dt', quals=[] (at pp.c:1937)
            IdentifierType: names=['TransformAlarmC__1__Alarm__size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__startAt', quals=[] (at pp.c:1937)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__AlarmFrom__fired', quals=[], storage=['static'] (at pp.c:1939)
    FuncDecl: quals=None (at pp.c:1939)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__AlarmFrom__fired', quals=[] (at pp.c:1939)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__Counter__overflow', quals=[], storage=['static'] (at pp.c:1941)
    FuncDecl: quals=None (at pp.c:1941)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Counter__overflow', quals=[] (at pp.c:1941)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__Service__bufferDone', quals=[], storage=['static'] (at pp.c:1943)
    FuncDecl: quals=None (at pp.c:1943)
      ParamList:  (at pp.c:1945)
        Decl: name='arg_0x101cc7148', quals=[], storage=[] (at pp.c:1945)
          TypeDecl: declname='arg_0x101cc7148', quals=[] (at pp.c:1945)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:1947)
          TypeDecl: declname='result', quals=[] (at pp.c:1947)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:1949)
          PtrDecl: quals=[] (at pp.c:1949)
            TypeDecl: declname='buf', quals=[] (at pp.c:1949)
              IdentifierType: names=['ArbitratedReadStreamC__0__Service__val_t'] (at None)
        Decl: name='count', quals=[], storage=[] (at pp.c:1953)
          TypeDecl: declname='count', quals=[] (at pp.c:1953)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__Service__bufferDone', quals=[] (at pp.c:1943)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__Service__readDone', quals=[], storage=['static'] (at pp.c:1955)
    FuncDecl: quals=None (at pp.c:1955)
      ParamList:  (at pp.c:1957)
        Decl: name='arg_0x101cc7148', quals=[], storage=[] (at pp.c:1957)
          TypeDecl: declname='arg_0x101cc7148', quals=[] (at pp.c:1957)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:1959)
          TypeDecl: declname='result', quals=[] (at pp.c:1959)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='usActualPeriod', quals=[], storage=[] (at pp.c:1959)
          TypeDecl: declname='usActualPeriod', quals=[] (at pp.c:1959)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__Service__readDone', quals=[] (at pp.c:1955)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__ReadStream__default__bufferDone', quals=[], storage=['static'] (at pp.c:1961)
    FuncDecl: quals=None (at pp.c:1961)
      ParamList:  (at pp.c:1963)
        Decl: name='arg_0x101ccb020', quals=[], storage=[] (at pp.c:1963)
          TypeDecl: declname='arg_0x101ccb020', quals=[] (at pp.c:1963)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:1965)
          TypeDecl: declname='result', quals=[] (at pp.c:1965)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:1967)
          PtrDecl: quals=[] (at pp.c:1967)
            TypeDecl: declname='buf', quals=[] (at pp.c:1967)
              IdentifierType: names=['ArbitratedReadStreamC__0__ReadStream__val_t'] (at None)
        Decl: name='count', quals=[], storage=[] (at pp.c:1971)
          TypeDecl: declname='count', quals=[] (at pp.c:1971)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__default__bufferDone', quals=[] (at pp.c:1961)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__ReadStream__default__readDone', quals=[], storage=['static'] (at pp.c:1973)
    FuncDecl: quals=None (at pp.c:1973)
      ParamList:  (at pp.c:1975)
        Decl: name='arg_0x101ccb020', quals=[], storage=[] (at pp.c:1975)
          TypeDecl: declname='arg_0x101ccb020', quals=[] (at pp.c:1975)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:1977)
          TypeDecl: declname='result', quals=[] (at pp.c:1977)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='usActualPeriod', quals=[], storage=[] (at pp.c:1977)
          TypeDecl: declname='usActualPeriod', quals=[] (at pp.c:1977)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__default__readDone', quals=[] (at pp.c:1973)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__Resource__default__release', quals=[], storage=['static'] (at pp.c:1979)
    FuncDecl: quals=None (at pp.c:1979)
      ParamList:  (at pp.c:1981)
        Decl: name='arg_0x101cc3020', quals=[], storage=[] (at pp.c:1981)
          TypeDecl: declname='arg_0x101cc3020', quals=[] (at pp.c:1981)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__Resource__default__release', quals=[] (at pp.c:1979)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbitratedReadStreamC__0__Resource__granted', quals=[], storage=['static'] (at pp.c:1983)
    FuncDecl: quals=None (at pp.c:1983)
      ParamList:  (at pp.c:1985)
        Decl: name='arg_0x101cc3020', quals=[], storage=[] (at pp.c:1985)
          TypeDecl: declname='arg_0x101cc3020', quals=[] (at pp.c:1985)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__Resource__granted', quals=[] (at pp.c:1983)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ConfAlertC__1__ConfSub__getConfiguration', quals=[], storage=['static'] (at pp.c:1987)
    FuncDecl: quals=None (at pp.c:1987)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ConfAlertC__1__ConfSub__getConfiguration', quals=[] (at pp.c:1987)
        IdentifierType: names=['Msp430Adc12ConfAlertC__1__ConfSub__adc_config_t'] (at None)
  Decl: name='Msp430InternalVoltageP__AdcConfigure__getConfiguration', quals=[], storage=['static'] (at pp.c:1989)
    FuncDecl: quals=None (at pp.c:1989)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InternalVoltageP__AdcConfigure__getConfiguration', quals=[] (at pp.c:1989)
        IdentifierType: names=['Msp430InternalVoltageP__AdcConfigure__adc_config_t'] (at None)
  Decl: name='Msp430Adc12ConfAlertC__2__ConfSub__getConfiguration', quals=[], storage=['static'] (at pp.c:1991)
    FuncDecl: quals=None (at pp.c:1991)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ConfAlertC__2__ConfSub__getConfiguration', quals=[] (at pp.c:1991)
        IdentifierType: names=['Msp430Adc12ConfAlertC__2__ConfSub__adc_config_t'] (at None)
  Decl: name='SenseC__Read__read', quals=[], storage=['static'] (at pp.c:1993)
    FuncDecl: quals=None (at pp.c:1993)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SenseC__Read__read', quals=[] (at pp.c:1993)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SenseC__Leds__led0Off', quals=[], storage=['static'] (at pp.c:1995)
    FuncDecl: quals=None (at pp.c:1995)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SenseC__Leds__led0Off', quals=[] (at pp.c:1995)
        IdentifierType: names=['void'] (at None)
  Decl: name='SenseC__Leds__led1On', quals=[], storage=['static'] (at pp.c:2006)
    FuncDecl: quals=None (at pp.c:2006)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SenseC__Leds__led1On', quals=[] (at pp.c:2006)
        IdentifierType: names=['void'] (at None)
  Decl: name='SenseC__Leds__led1Off', quals=[], storage=['static'] (at pp.c:2011)
    FuncDecl: quals=None (at pp.c:2011)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SenseC__Leds__led1Off', quals=[] (at pp.c:2011)
        IdentifierType: names=['void'] (at None)
  Decl: name='SenseC__Leds__led2Off', quals=[], storage=['static'] (at pp.c:2013)
    FuncDecl: quals=None (at pp.c:2013)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SenseC__Leds__led2Off', quals=[] (at pp.c:2013)
        IdentifierType: names=['void'] (at None)
  Decl: name='SenseC__Leds__led0On', quals=[], storage=['static'] (at pp.c:2015)
    FuncDecl: quals=None (at pp.c:2015)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SenseC__Leds__led0On', quals=[] (at pp.c:2015)
        IdentifierType: names=['void'] (at None)
  Decl: name='SenseC__Leds__led2On', quals=[], storage=['static'] (at pp.c:2017)
    FuncDecl: quals=None (at pp.c:2017)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SenseC__Leds__led2On', quals=[] (at pp.c:2017)
        IdentifierType: names=['void'] (at None)
  Decl: name='SenseC__Timer__startPeriodic', quals=[], storage=['static'] (at pp.c:2019)
    FuncDecl: quals=None (at pp.c:2019)
      ParamList:  (at pp.c:2019)
        Decl: name='dt', quals=[], storage=[] (at pp.c:2019)
          TypeDecl: declname='dt', quals=[] (at pp.c:2019)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='SenseC__Timer__startPeriodic', quals=[] (at pp.c:2019)
        IdentifierType: names=['void'] (at None)
  Decl: name='SenseC__Boot__booted', quals=[], storage=['inline', 'static'] (at pp.c:2021)
    FuncDecl: quals=None (at pp.c:2021)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SenseC__Boot__booted', quals=[] (at pp.c:2021)
        IdentifierType: names=['void'] (at None)
  Decl: name='SenseC__Timer__fired', quals=[], storage=['inline', 'static'] (at pp.c:2025)
    FuncDecl: quals=None (at pp.c:2025)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SenseC__Timer__fired', quals=[] (at pp.c:2025)
        IdentifierType: names=['void'] (at None)
  Decl: name='SenseC__Read__readDone', quals=[], storage=['static'] (at pp.c:2030)
    FuncDecl: quals=None (at pp.c:2030)
      ParamList:  (at pp.c:2030)
        Decl: name='result', quals=[], storage=[] (at pp.c:2030)
          TypeDecl: declname='result', quals=[] (at pp.c:2030)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:2030)
          TypeDecl: declname='data', quals=[] (at pp.c:2030)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='SenseC__Read__readDone', quals=[] (at pp.c:2030)
        IdentifierType: names=['void'] (at None)
  Decl: name='PlatformP__MoteInit__init', quals=[], storage=['static'] (at pp.c:2032)
    FuncDecl: quals=None (at pp.c:2032)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='PlatformP__MoteInit__init', quals=[] (at pp.c:2032)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='PlatformP__MoteClockInit__init', quals=[], storage=['static'] (at pp.c:2034)
    FuncDecl: quals=None (at pp.c:2034)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='PlatformP__MoteClockInit__init', quals=[] (at pp.c:2034)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='PlatformP__LedsInit__init', quals=[], storage=['static'] (at pp.c:2036)
    FuncDecl: quals=None (at pp.c:2036)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='PlatformP__LedsInit__init', quals=[] (at pp.c:2036)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='PlatformP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:2038)
    FuncDecl: quals=None (at pp.c:2038)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='PlatformP__Init__init', quals=[] (at pp.c:2038)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__initTimerB', quals=[], storage=['static'] (at pp.c:2040)
    FuncDecl: quals=None (at pp.c:2040)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initTimerB', quals=[] (at pp.c:2040)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__initTimerA', quals=[], storage=['static'] (at pp.c:2042)
    FuncDecl: quals=None (at pp.c:2042)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initTimerA', quals=[] (at pp.c:2042)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__setupDcoCalibrate', quals=[], storage=['static'] (at pp.c:2044)
    FuncDecl: quals=None (at pp.c:2044)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__setupDcoCalibrate', quals=[] (at pp.c:2044)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__initClocks', quals=[], storage=['static'] (at pp.c:2045)
    FuncDecl: quals=None (at pp.c:2045)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initClocks', quals=[] (at pp.c:2045)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__IE1@"0x0000"', quals=['volatile'], storage=['static'] (at pp.c:2047)
    TypeDecl: declname='Msp430ClockP__IE1@"0x0000"', quals=['volatile'] (at pp.c:2047)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430ClockP__TA0CTL@"0x0160"', quals=['volatile'], storage=['static'] (at pp.c:2048)
    TypeDecl: declname='Msp430ClockP__TA0CTL@"0x0160"', quals=['volatile'] (at pp.c:2048)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430ClockP__TA0IV@"0x012E"', quals=['volatile'], storage=['static'] (at pp.c:2049)
    TypeDecl: declname='Msp430ClockP__TA0IV@"0x012E"', quals=['volatile'] (at pp.c:2049)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430ClockP__TBCTL@"0x0180"', quals=['volatile'], storage=['static'] (at pp.c:2050)
    TypeDecl: declname='Msp430ClockP__TBCTL@"0x0180"', quals=['volatile'] (at pp.c:2050)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430ClockP__TBIV@"0x011E"', quals=['volatile'], storage=['static'] (at pp.c:2051)
    TypeDecl: declname='Msp430ClockP__TBIV@"0x011E"', quals=['volatile'] (at pp.c:2051)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2053)
    Enum: name='Msp430ClockP____nesc_unnamed4277' (at pp.c:2053)
      EnumeratorList:  (at pp.c:2055)
        Enumerator: name='Msp430ClockP__ACLK_CALIB_PERIOD' (at pp.c:2055)
          Constant: type='int', value='8' (at pp.c:2055)
        Enumerator: name='Msp430ClockP__TARGET_DCO_DELTA' (at pp.c:2056)
          BinaryOp: op='*' (at pp.c:2056)
            BinaryOp: op='/' (at pp.c:2056)
              Constant: type='int', value='4096' (at pp.c:2056)
              Constant: type='int', value='32' (at pp.c:2056)
            ID: name='Msp430ClockP__ACLK_CALIB_PERIOD' (at pp.c:2056)
  Decl: name='Msp430ClockP__McuPowerOverride__lowestState', quals=[], storage=['inline', 'static'] (at pp.c:2059)
    FuncDecl: quals=None (at pp.c:2059)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__McuPowerOverride__lowestState', quals=[] (at pp.c:2059)
        IdentifierType: names=['mcu_power_t'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[], storage=['inline', 'static'] (at pp.c:2063)
    FuncDecl: quals=None (at pp.c:2063)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[] (at pp.c:2063)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[], storage=['inline', 'static'] (at pp.c:2065)
    FuncDecl: quals=None (at pp.c:2065)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[] (at pp.c:2065)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[], storage=['inline', 'static'] (at pp.c:2067)
    FuncDecl: quals=None (at pp.c:2067)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[] (at pp.c:2067)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[], storage=['inline', 'static'] (at pp.c:2069)
    FuncDecl: quals=None (at pp.c:2069)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[] (at pp.c:2069)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[], storage=['inline', 'static'] (at pp.c:2071)
    FuncDecl: quals=None (at pp.c:2071)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[] (at pp.c:2071)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[], storage=['inline', 'static'] (at pp.c:2076)
    FuncDecl: quals=None (at pp.c:2076)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[] (at pp.c:2076)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[], storage=['inline', 'static'] (at pp.c:2081)
    FuncDecl: quals=None (at pp.c:2081)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[] (at pp.c:2081)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[], storage=['inline', 'static'] (at pp.c:2086)
    FuncDecl: quals=None (at pp.c:2086)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[] (at pp.c:2086)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__startTimerA', quals=[], storage=['inline', 'static'] (at pp.c:2092)
    FuncDecl: quals=None (at pp.c:2092)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__startTimerA', quals=[] (at pp.c:2092)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__startTimerB', quals=[], storage=['inline', 'static'] (at pp.c:2094)
    FuncDecl: quals=None (at pp.c:2094)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__startTimerB', quals=[] (at pp.c:2094)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__set_dco_calib', quals=[], storage=['static'] (at pp.c:2096)
    FuncDecl: quals=None (at pp.c:2096)
      ParamList:  (at pp.c:2096)
        Decl: name='calib', quals=[], storage=[] (at pp.c:2096)
          TypeDecl: declname='calib', quals=[] (at pp.c:2096)
            IdentifierType: names=['int'] (at None)
      TypeDecl: declname='Msp430ClockP__set_dco_calib', quals=[] (at pp.c:2096)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__test_calib_busywait_delta', quals=[], storage=['inline', 'static'] (at pp.c:2102)
    FuncDecl: quals=None (at pp.c:2102)
      ParamList:  (at pp.c:2102)
        Decl: name='calib', quals=[], storage=[] (at pp.c:2102)
          TypeDecl: declname='calib', quals=[] (at pp.c:2102)
            IdentifierType: names=['int'] (at None)
      TypeDecl: declname='Msp430ClockP__test_calib_busywait_delta', quals=[] (at pp.c:2102)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430ClockP__busyCalibrateDco', quals=[], storage=['inline', 'static'] (at pp.c:2104)
    FuncDecl: quals=None (at pp.c:2104)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__busyCalibrateDco', quals=[] (at pp.c:2104)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:2106)
    FuncDecl: quals=None (at pp.c:2106)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Init__init', quals=[] (at pp.c:2106)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430TimerP__0__Event__fired', quals=[], storage=['static'] (at pp.c:2108)
    FuncDecl: quals=None (at pp.c:2108)
      ParamList:  (at pp.c:2110)
        Decl: name='arg_0x10142ec98', quals=[], storage=[] (at pp.c:2110)
          TypeDecl: declname='arg_0x10142ec98', quals=[] (at pp.c:2110)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Event__fired', quals=[] (at pp.c:2108)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__overflow', quals=[], storage=['static'] (at pp.c:2112)
    FuncDecl: quals=None (at pp.c:2112)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__overflow', quals=[] (at pp.c:2112)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__setMode', quals=[], storage=['static'] (at pp.c:2114)
    FuncDecl: quals=None (at pp.c:2114)
      ParamList:  (at pp.c:2114)
        Decl: name='mode', quals=[], storage=[] (at pp.c:2114)
          TypeDecl: declname='mode', quals=[] (at pp.c:2114)
            IdentifierType: names=['int'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__setMode', quals=[] (at pp.c:2114)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__clear', quals=[], storage=['inline', 'static'] (at pp.c:2124)
    FuncDecl: quals=None (at pp.c:2124)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__clear', quals=[] (at pp.c:2124)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:2134)
    FuncDecl: quals=None (at pp.c:2134)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__disableEvents', quals=[] (at pp.c:2134)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__setClockSource', quals=[], storage=['inline', 'static'] (at pp.c:2139)
    FuncDecl: quals=None (at pp.c:2139)
      ParamList:  (at pp.c:2139)
        Decl: name='clockSource', quals=[], storage=[] (at pp.c:2139)
          TypeDecl: declname='clockSource', quals=[] (at pp.c:2139)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__setClockSource', quals=[] (at pp.c:2139)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__setInputDivider', quals=[], storage=['inline', 'static'] (at pp.c:2144)
    FuncDecl: quals=None (at pp.c:2144)
      ParamList:  (at pp.c:2144)
        Decl: name='inputDivider', quals=[], storage=[] (at pp.c:2144)
          TypeDecl: declname='inputDivider', quals=[] (at pp.c:2144)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__setInputDivider', quals=[] (at pp.c:2144)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__VectorTimerX0__fired', quals=[], storage=['inline', 'static'] (at pp.c:2149)
    FuncDecl: quals=None (at pp.c:2149)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__VectorTimerX0__fired', quals=[] (at pp.c:2149)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__VectorTimerX1__fired', quals=[], storage=['inline', 'static'] (at pp.c:2154)
    FuncDecl: quals=None (at pp.c:2154)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__VectorTimerX1__fired', quals=[] (at pp.c:2154)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Overflow__fired', quals=[], storage=['inline', 'static'] (at pp.c:2160)
    FuncDecl: quals=None (at pp.c:2160)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Overflow__fired', quals=[] (at pp.c:2160)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Event__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:2169)
    FuncDecl: quals=None (at pp.c:2169)
      ParamList:  (at pp.c:2169)
        Decl: name='n', quals=[], storage=[] (at pp.c:2169)
          TypeDecl: declname='n', quals=[] (at pp.c:2169)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Event__default__fired', quals=[] (at pp.c:2169)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Event__fired', quals=[], storage=['static'] (at pp.c:2171)
    FuncDecl: quals=None (at pp.c:2171)
      ParamList:  (at pp.c:2173)
        Decl: name='arg_0x10142ec98', quals=[], storage=[] (at pp.c:2173)
          TypeDecl: declname='arg_0x10142ec98', quals=[] (at pp.c:2173)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Event__fired', quals=[] (at pp.c:2171)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Timer__overflow', quals=[], storage=['static'] (at pp.c:2175)
    FuncDecl: quals=None (at pp.c:2175)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Timer__overflow', quals=[] (at pp.c:2175)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Timer__get', quals=[], storage=['static'] (at pp.c:2177)
    FuncDecl: quals=None (at pp.c:2177)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Timer__get', quals=[] (at pp.c:2177)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerP__1__Timer__isOverflowPending', quals=[], storage=['inline', 'static'] (at pp.c:2179)
    FuncDecl: quals=None (at pp.c:2179)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Timer__isOverflowPending', quals=[] (at pp.c:2179)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430TimerP__1__VectorTimerX0__fired', quals=[], storage=['inline', 'static'] (at pp.c:2181)
    FuncDecl: quals=None (at pp.c:2181)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__VectorTimerX0__fired', quals=[] (at pp.c:2181)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__VectorTimerX1__fired', quals=[], storage=['inline', 'static'] (at pp.c:2186)
    FuncDecl: quals=None (at pp.c:2186)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__VectorTimerX1__fired', quals=[] (at pp.c:2186)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Overflow__fired', quals=[], storage=['inline', 'static'] (at pp.c:2192)
    FuncDecl: quals=None (at pp.c:2192)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Overflow__fired', quals=[] (at pp.c:2192)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Event__default__fired', quals=[], storage=['static'] (at pp.c:2201)
    FuncDecl: quals=None (at pp.c:2201)
      ParamList:  (at pp.c:2201)
        Decl: name='n', quals=[], storage=[] (at pp.c:2201)
          TypeDecl: declname='n', quals=[] (at pp.c:2201)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Event__default__fired', quals=[] (at pp.c:2201)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Capture__captured', quals=[], storage=['static'] (at pp.c:2203)
    FuncDecl: quals=None (at pp.c:2203)
      ParamList:  (at pp.c:2203)
        Decl: name='time', quals=[], storage=[] (at pp.c:2203)
          TypeDecl: declname='time', quals=[] (at pp.c:2203)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Capture__captured', quals=[] (at pp.c:2203)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Compare__fired', quals=[], storage=['static'] (at pp.c:2205)
    FuncDecl: quals=None (at pp.c:2205)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Compare__fired', quals=[] (at pp.c:2205)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__0__cc_t', quals=[], storage=['typedef'] (at pp.c:2207)
    TypeDecl: declname='Msp430TimerCapComP__0__cc_t', quals=[] (at pp.c:2207)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:2209)
    FuncDecl: quals=None (at pp.c:2209)
      ParamList:  (at pp.c:2209)
        Decl: name='x', quals=[], storage=[] (at pp.c:2209)
          TypeDecl: declname='x', quals=[] (at pp.c:2209)
            IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__CC2int', quals=[] (at pp.c:2209)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:2210)
    FuncDecl: quals=None (at pp.c:2210)
      ParamList:  (at pp.c:2210)
        Decl: name='x', quals=[], storage=[] (at pp.c:2210)
          TypeDecl: declname='x', quals=[] (at pp.c:2210)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__int2CC', quals=[] (at pp.c:2210)
        IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:2212)
    FuncDecl: quals=None (at pp.c:2212)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Control__getControl', quals=[] (at pp.c:2212)
        IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__Control__setControl', quals=[], storage=['inline', 'static'] (at pp.c:2214)
    FuncDecl: quals=None (at pp.c:2214)
      ParamList:  (at pp.c:2214)
        Decl: name='x', quals=[], storage=[] (at pp.c:2214)
          TypeDecl: declname='x', quals=[] (at pp.c:2214)
            IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Control__setControl', quals=[] (at pp.c:2214)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:2216)
    FuncDecl: quals=None (at pp.c:2216)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Capture__getEvent', quals=[] (at pp.c:2216)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:2221)
    FuncDecl: quals=None (at pp.c:2221)
      ParamList:  (at pp.c:2221)
        Decl: name='x', quals=[], storage=[] (at pp.c:2221)
          TypeDecl: declname='x', quals=[] (at pp.c:2221)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Compare__setEvent', quals=[] (at pp.c:2221)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Event__fired', quals=[], storage=['static'] (at pp.c:2223)
    FuncDecl: quals=None (at pp.c:2223)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Event__fired', quals=[] (at pp.c:2223)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:2231)
    FuncDecl: quals=None (at pp.c:2231)
      ParamList:  (at pp.c:2231)
        Decl: name='n', quals=[], storage=[] (at pp.c:2231)
          TypeDecl: declname='n', quals=[] (at pp.c:2231)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Capture__default__captured', quals=[] (at pp.c:2231)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2239)
    FuncDecl: quals=None (at pp.c:2239)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Timer__overflow', quals=[] (at pp.c:2239)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Capture__captured', quals=[], storage=['static'] (at pp.c:2241)
    FuncDecl: quals=None (at pp.c:2241)
      ParamList:  (at pp.c:2241)
        Decl: name='time', quals=[], storage=[] (at pp.c:2241)
          TypeDecl: declname='time', quals=[] (at pp.c:2241)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Capture__captured', quals=[] (at pp.c:2241)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Compare__fired', quals=[], storage=['static'] (at pp.c:2243)
    FuncDecl: quals=None (at pp.c:2243)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Compare__fired', quals=[] (at pp.c:2243)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__1__cc_t', quals=[], storage=['typedef'] (at pp.c:2245)
    TypeDecl: declname='Msp430TimerCapComP__1__cc_t', quals=[] (at pp.c:2245)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:2247)
    FuncDecl: quals=None (at pp.c:2247)
      ParamList:  (at pp.c:2247)
        Decl: name='x', quals=[], storage=[] (at pp.c:2247)
          TypeDecl: declname='x', quals=[] (at pp.c:2247)
            IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__CC2int', quals=[] (at pp.c:2247)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:2248)
    FuncDecl: quals=None (at pp.c:2248)
      ParamList:  (at pp.c:2248)
        Decl: name='x', quals=[], storage=[] (at pp.c:2248)
          TypeDecl: declname='x', quals=[] (at pp.c:2248)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__int2CC', quals=[] (at pp.c:2248)
        IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:2250)
    FuncDecl: quals=None (at pp.c:2250)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Control__getControl', quals=[] (at pp.c:2250)
        IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__Control__setControl', quals=[], storage=['inline', 'static'] (at pp.c:2252)
    FuncDecl: quals=None (at pp.c:2252)
      ParamList:  (at pp.c:2252)
        Decl: name='x', quals=[], storage=[] (at pp.c:2252)
          TypeDecl: declname='x', quals=[] (at pp.c:2252)
            IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Control__setControl', quals=[] (at pp.c:2252)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:2254)
    FuncDecl: quals=None (at pp.c:2254)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Capture__getEvent', quals=[] (at pp.c:2254)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:2259)
    FuncDecl: quals=None (at pp.c:2259)
      ParamList:  (at pp.c:2259)
        Decl: name='x', quals=[], storage=[] (at pp.c:2259)
          TypeDecl: declname='x', quals=[] (at pp.c:2259)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Compare__setEvent', quals=[] (at pp.c:2259)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Event__fired', quals=[], storage=['static'] (at pp.c:2261)
    FuncDecl: quals=None (at pp.c:2261)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Event__fired', quals=[] (at pp.c:2261)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:2269)
    FuncDecl: quals=None (at pp.c:2269)
      ParamList:  (at pp.c:2269)
        Decl: name='n', quals=[], storage=[] (at pp.c:2269)
          TypeDecl: declname='n', quals=[] (at pp.c:2269)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Capture__default__captured', quals=[] (at pp.c:2269)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2277)
    FuncDecl: quals=None (at pp.c:2277)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Timer__overflow', quals=[] (at pp.c:2277)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Capture__captured', quals=[], storage=['static'] (at pp.c:2279)
    FuncDecl: quals=None (at pp.c:2279)
      ParamList:  (at pp.c:2279)
        Decl: name='time', quals=[], storage=[] (at pp.c:2279)
          TypeDecl: declname='time', quals=[] (at pp.c:2279)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Capture__captured', quals=[] (at pp.c:2279)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Compare__fired', quals=[], storage=['static'] (at pp.c:2281)
    FuncDecl: quals=None (at pp.c:2281)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Compare__fired', quals=[] (at pp.c:2281)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__2__cc_t', quals=[], storage=['typedef'] (at pp.c:2283)
    TypeDecl: declname='Msp430TimerCapComP__2__cc_t', quals=[] (at pp.c:2283)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:2286)
    FuncDecl: quals=None (at pp.c:2286)
      ParamList:  (at pp.c:2286)
        Decl: name='x', quals=[], storage=[] (at pp.c:2286)
          TypeDecl: declname='x', quals=[] (at pp.c:2286)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__int2CC', quals=[] (at pp.c:2286)
        IdentifierType: names=['Msp430TimerCapComP__2__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:2288)
    FuncDecl: quals=None (at pp.c:2288)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Control__getControl', quals=[] (at pp.c:2288)
        IdentifierType: names=['Msp430TimerCapComP__2__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:2290)
    FuncDecl: quals=None (at pp.c:2290)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Capture__getEvent', quals=[] (at pp.c:2290)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__Event__fired', quals=[], storage=['static'] (at pp.c:2292)
    FuncDecl: quals=None (at pp.c:2292)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Event__fired', quals=[] (at pp.c:2292)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:2300)
    FuncDecl: quals=None (at pp.c:2300)
      ParamList:  (at pp.c:2300)
        Decl: name='n', quals=[], storage=[] (at pp.c:2300)
          TypeDecl: declname='n', quals=[] (at pp.c:2300)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Capture__default__captured', quals=[] (at pp.c:2300)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:2304)
    FuncDecl: quals=None (at pp.c:2304)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Compare__default__fired', quals=[] (at pp.c:2304)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2308)
    FuncDecl: quals=None (at pp.c:2308)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Timer__overflow', quals=[] (at pp.c:2308)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Capture__captured', quals=[], storage=['static'] (at pp.c:2310)
    FuncDecl: quals=None (at pp.c:2310)
      ParamList:  (at pp.c:2310)
        Decl: name='time', quals=[], storage=[] (at pp.c:2310)
          TypeDecl: declname='time', quals=[] (at pp.c:2310)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Capture__captured', quals=[] (at pp.c:2310)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Compare__fired', quals=[], storage=['static'] (at pp.c:2312)
    FuncDecl: quals=None (at pp.c:2312)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Compare__fired', quals=[] (at pp.c:2312)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Timer__get', quals=[], storage=['static'] (at pp.c:2314)
    FuncDecl: quals=None (at pp.c:2314)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Timer__get', quals=[] (at pp.c:2314)
        IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='Msp430TimerCapComP__3__cc_t', quals=[], storage=['typedef'] (at pp.c:2316)
    TypeDecl: declname='Msp430TimerCapComP__3__cc_t', quals=[] (at pp.c:2316)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:2318)
    FuncDecl: quals=None (at pp.c:2318)
      ParamList:  (at pp.c:2318)
        Decl: name='x', quals=[], storage=[] (at pp.c:2318)
          TypeDecl: declname='x', quals=[] (at pp.c:2318)
            IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__CC2int', quals=[] (at pp.c:2318)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:2319)
    FuncDecl: quals=None (at pp.c:2319)
      ParamList:  (at pp.c:2319)
        Decl: name='x', quals=[], storage=[] (at pp.c:2319)
          TypeDecl: declname='x', quals=[] (at pp.c:2319)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__int2CC', quals=[] (at pp.c:2319)
        IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__compareControl', quals=[], storage=['inline', 'static'] (at pp.c:2321)
    FuncDecl: quals=None (at pp.c:2321)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__compareControl', quals=[] (at pp.c:2321)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:2323)
    FuncDecl: quals=None (at pp.c:2323)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__getControl', quals=[] (at pp.c:2323)
        IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[], storage=['inline', 'static'] (at pp.c:2333)
    FuncDecl: quals=None (at pp.c:2333)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[] (at pp.c:2333)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[], storage=['inline', 'static'] (at pp.c:2343)
    FuncDecl: quals=None (at pp.c:2343)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[] (at pp.c:2343)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__enableEvents', quals=[], storage=['inline', 'static'] (at pp.c:2345)
    FuncDecl: quals=None (at pp.c:2345)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__enableEvents', quals=[] (at pp.c:2345)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:2350)
    FuncDecl: quals=None (at pp.c:2350)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__disableEvents', quals=[] (at pp.c:2350)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:2352)
    FuncDecl: quals=None (at pp.c:2352)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Capture__getEvent', quals=[] (at pp.c:2352)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:2357)
    FuncDecl: quals=None (at pp.c:2357)
      ParamList:  (at pp.c:2357)
        Decl: name='x', quals=[], storage=[] (at pp.c:2357)
          TypeDecl: declname='x', quals=[] (at pp.c:2357)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEvent', quals=[] (at pp.c:2357)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[], storage=['inline', 'static'] (at pp.c:2367)
    FuncDecl: quals=None (at pp.c:2367)
      ParamList:  (at pp.c:2367)
        Decl: name='x', quals=[], storage=[] (at pp.c:2367)
          TypeDecl: declname='x', quals=[] (at pp.c:2367)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[] (at pp.c:2367)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:2369)
    FuncDecl: quals=None (at pp.c:2369)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Event__fired', quals=[] (at pp.c:2369)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:2377)
    FuncDecl: quals=None (at pp.c:2377)
      ParamList:  (at pp.c:2377)
        Decl: name='n', quals=[], storage=[] (at pp.c:2377)
          TypeDecl: declname='n', quals=[] (at pp.c:2377)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Capture__default__captured', quals=[] (at pp.c:2377)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2385)
    FuncDecl: quals=None (at pp.c:2385)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Timer__overflow', quals=[] (at pp.c:2385)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Capture__captured', quals=[], storage=['static'] (at pp.c:2387)
    FuncDecl: quals=None (at pp.c:2387)
      ParamList:  (at pp.c:2387)
        Decl: name='time', quals=[], storage=[] (at pp.c:2387)
          TypeDecl: declname='time', quals=[] (at pp.c:2387)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Capture__captured', quals=[] (at pp.c:2387)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Compare__fired', quals=[], storage=['static'] (at pp.c:2389)
    FuncDecl: quals=None (at pp.c:2389)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Compare__fired', quals=[] (at pp.c:2389)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__4__cc_t', quals=[], storage=['typedef'] (at pp.c:2391)
    TypeDecl: declname='Msp430TimerCapComP__4__cc_t', quals=[] (at pp.c:2391)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:2394)
    FuncDecl: quals=None (at pp.c:2394)
      ParamList:  (at pp.c:2394)
        Decl: name='x', quals=[], storage=[] (at pp.c:2394)
          TypeDecl: declname='x', quals=[] (at pp.c:2394)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__int2CC', quals=[] (at pp.c:2394)
        IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:2396)
    FuncDecl: quals=None (at pp.c:2396)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__getControl', quals=[] (at pp.c:2396)
        IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:2398)
    FuncDecl: quals=None (at pp.c:2398)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Capture__getEvent', quals=[] (at pp.c:2398)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:2400)
    FuncDecl: quals=None (at pp.c:2400)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Event__fired', quals=[] (at pp.c:2400)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:2408)
    FuncDecl: quals=None (at pp.c:2408)
      ParamList:  (at pp.c:2408)
        Decl: name='n', quals=[], storage=[] (at pp.c:2408)
          TypeDecl: declname='n', quals=[] (at pp.c:2408)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Capture__default__captured', quals=[] (at pp.c:2408)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:2412)
    FuncDecl: quals=None (at pp.c:2412)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Compare__default__fired', quals=[] (at pp.c:2412)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2416)
    FuncDecl: quals=None (at pp.c:2416)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Timer__overflow', quals=[] (at pp.c:2416)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Capture__captured', quals=[], storage=['static'] (at pp.c:2418)
    FuncDecl: quals=None (at pp.c:2418)
      ParamList:  (at pp.c:2418)
        Decl: name='time', quals=[], storage=[] (at pp.c:2418)
          TypeDecl: declname='time', quals=[] (at pp.c:2418)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Capture__captured', quals=[] (at pp.c:2418)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Compare__fired', quals=[], storage=['static'] (at pp.c:2420)
    FuncDecl: quals=None (at pp.c:2420)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Compare__fired', quals=[] (at pp.c:2420)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Timer__get', quals=[], storage=['static'] (at pp.c:2422)
    FuncDecl: quals=None (at pp.c:2422)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Timer__get', quals=[] (at pp.c:2422)
        IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='Msp430TimerCapComP__5__cc_t', quals=[], storage=['typedef'] (at pp.c:2424)
    TypeDecl: declname='Msp430TimerCapComP__5__cc_t', quals=[] (at pp.c:2424)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:2427)
    FuncDecl: quals=None (at pp.c:2427)
      ParamList:  (at pp.c:2427)
        Decl: name='x', quals=[], storage=[] (at pp.c:2427)
          TypeDecl: declname='x', quals=[] (at pp.c:2427)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__int2CC', quals=[] (at pp.c:2427)
        IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:2429)
    FuncDecl: quals=None (at pp.c:2429)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__getControl', quals=[] (at pp.c:2429)
        IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__clearPendingInterrupt', quals=[], storage=['inline', 'static'] (at pp.c:2439)
    FuncDecl: quals=None (at pp.c:2439)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__clearPendingInterrupt', quals=[] (at pp.c:2439)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__enableEvents', quals=[], storage=['inline', 'static'] (at pp.c:2441)
    FuncDecl: quals=None (at pp.c:2441)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__enableEvents', quals=[] (at pp.c:2441)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:2446)
    FuncDecl: quals=None (at pp.c:2446)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__disableEvents', quals=[] (at pp.c:2446)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:2448)
    FuncDecl: quals=None (at pp.c:2448)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Capture__getEvent', quals=[] (at pp.c:2448)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:2453)
    FuncDecl: quals=None (at pp.c:2453)
      ParamList:  (at pp.c:2453)
        Decl: name='x', quals=[], storage=[] (at pp.c:2453)
          TypeDecl: declname='x', quals=[] (at pp.c:2453)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Compare__setEvent', quals=[] (at pp.c:2453)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Compare__setEventFromNow', quals=[], storage=['inline', 'static'] (at pp.c:2463)
    FuncDecl: quals=None (at pp.c:2463)
      ParamList:  (at pp.c:2463)
        Decl: name='x', quals=[], storage=[] (at pp.c:2463)
          TypeDecl: declname='x', quals=[] (at pp.c:2463)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Compare__setEventFromNow', quals=[] (at pp.c:2463)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:2465)
    FuncDecl: quals=None (at pp.c:2465)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Event__fired', quals=[] (at pp.c:2465)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:2473)
    FuncDecl: quals=None (at pp.c:2473)
      ParamList:  (at pp.c:2473)
        Decl: name='n', quals=[], storage=[] (at pp.c:2473)
          TypeDecl: declname='n', quals=[] (at pp.c:2473)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Capture__default__captured', quals=[] (at pp.c:2473)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2481)
    FuncDecl: quals=None (at pp.c:2481)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Timer__overflow', quals=[] (at pp.c:2481)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Capture__captured', quals=[], storage=['static'] (at pp.c:2483)
    FuncDecl: quals=None (at pp.c:2483)
      ParamList:  (at pp.c:2483)
        Decl: name='time', quals=[], storage=[] (at pp.c:2483)
          TypeDecl: declname='time', quals=[] (at pp.c:2483)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Capture__captured', quals=[] (at pp.c:2483)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Compare__fired', quals=[], storage=['static'] (at pp.c:2485)
    FuncDecl: quals=None (at pp.c:2485)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Compare__fired', quals=[] (at pp.c:2485)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__6__cc_t', quals=[], storage=['typedef'] (at pp.c:2487)
    TypeDecl: declname='Msp430TimerCapComP__6__cc_t', quals=[] (at pp.c:2487)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:2490)
    FuncDecl: quals=None (at pp.c:2490)
      ParamList:  (at pp.c:2490)
        Decl: name='x', quals=[], storage=[] (at pp.c:2490)
          TypeDecl: declname='x', quals=[] (at pp.c:2490)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__int2CC', quals=[] (at pp.c:2490)
        IdentifierType: names=['Msp430TimerCapComP__6__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:2492)
    FuncDecl: quals=None (at pp.c:2492)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Control__getControl', quals=[] (at pp.c:2492)
        IdentifierType: names=['Msp430TimerCapComP__6__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:2494)
    FuncDecl: quals=None (at pp.c:2494)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Capture__getEvent', quals=[] (at pp.c:2494)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:2496)
    FuncDecl: quals=None (at pp.c:2496)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Event__fired', quals=[] (at pp.c:2496)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:2504)
    FuncDecl: quals=None (at pp.c:2504)
      ParamList:  (at pp.c:2504)
        Decl: name='n', quals=[], storage=[] (at pp.c:2504)
          TypeDecl: declname='n', quals=[] (at pp.c:2504)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Capture__default__captured', quals=[] (at pp.c:2504)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:2508)
    FuncDecl: quals=None (at pp.c:2508)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Compare__default__fired', quals=[] (at pp.c:2508)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2512)
    FuncDecl: quals=None (at pp.c:2512)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Timer__overflow', quals=[] (at pp.c:2512)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Capture__captured', quals=[], storage=['static'] (at pp.c:2514)
    FuncDecl: quals=None (at pp.c:2514)
      ParamList:  (at pp.c:2514)
        Decl: name='time', quals=[], storage=[] (at pp.c:2514)
          TypeDecl: declname='time', quals=[] (at pp.c:2514)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Capture__captured', quals=[] (at pp.c:2514)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Compare__fired', quals=[], storage=['static'] (at pp.c:2516)
    FuncDecl: quals=None (at pp.c:2516)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Compare__fired', quals=[] (at pp.c:2516)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__7__cc_t', quals=[], storage=['typedef'] (at pp.c:2518)
    TypeDecl: declname='Msp430TimerCapComP__7__cc_t', quals=[] (at pp.c:2518)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:2521)
    FuncDecl: quals=None (at pp.c:2521)
      ParamList:  (at pp.c:2521)
        Decl: name='x', quals=[], storage=[] (at pp.c:2521)
          TypeDecl: declname='x', quals=[] (at pp.c:2521)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__int2CC', quals=[] (at pp.c:2521)
        IdentifierType: names=['Msp430TimerCapComP__7__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:2523)
    FuncDecl: quals=None (at pp.c:2523)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Control__getControl', quals=[] (at pp.c:2523)
        IdentifierType: names=['Msp430TimerCapComP__7__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:2525)
    FuncDecl: quals=None (at pp.c:2525)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Capture__getEvent', quals=[] (at pp.c:2525)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:2527)
    FuncDecl: quals=None (at pp.c:2527)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Event__fired', quals=[] (at pp.c:2527)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:2535)
    FuncDecl: quals=None (at pp.c:2535)
      ParamList:  (at pp.c:2535)
        Decl: name='n', quals=[], storage=[] (at pp.c:2535)
          TypeDecl: declname='n', quals=[] (at pp.c:2535)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Capture__default__captured', quals=[] (at pp.c:2535)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:2539)
    FuncDecl: quals=None (at pp.c:2539)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Compare__default__fired', quals=[] (at pp.c:2539)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2543)
    FuncDecl: quals=None (at pp.c:2543)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Timer__overflow', quals=[] (at pp.c:2543)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Capture__captured', quals=[], storage=['static'] (at pp.c:2545)
    FuncDecl: quals=None (at pp.c:2545)
      ParamList:  (at pp.c:2545)
        Decl: name='time', quals=[], storage=[] (at pp.c:2545)
          TypeDecl: declname='time', quals=[] (at pp.c:2545)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Capture__captured', quals=[] (at pp.c:2545)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Compare__fired', quals=[], storage=['static'] (at pp.c:2547)
    FuncDecl: quals=None (at pp.c:2547)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Compare__fired', quals=[] (at pp.c:2547)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__8__cc_t', quals=[], storage=['typedef'] (at pp.c:2549)
    TypeDecl: declname='Msp430TimerCapComP__8__cc_t', quals=[] (at pp.c:2549)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:2552)
    FuncDecl: quals=None (at pp.c:2552)
      ParamList:  (at pp.c:2552)
        Decl: name='x', quals=[], storage=[] (at pp.c:2552)
          TypeDecl: declname='x', quals=[] (at pp.c:2552)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__int2CC', quals=[] (at pp.c:2552)
        IdentifierType: names=['Msp430TimerCapComP__8__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:2554)
    FuncDecl: quals=None (at pp.c:2554)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Control__getControl', quals=[] (at pp.c:2554)
        IdentifierType: names=['Msp430TimerCapComP__8__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:2556)
    FuncDecl: quals=None (at pp.c:2556)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Capture__getEvent', quals=[] (at pp.c:2556)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:2558)
    FuncDecl: quals=None (at pp.c:2558)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Event__fired', quals=[] (at pp.c:2558)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:2566)
    FuncDecl: quals=None (at pp.c:2566)
      ParamList:  (at pp.c:2566)
        Decl: name='n', quals=[], storage=[] (at pp.c:2566)
          TypeDecl: declname='n', quals=[] (at pp.c:2566)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Capture__default__captured', quals=[] (at pp.c:2566)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:2570)
    FuncDecl: quals=None (at pp.c:2570)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Compare__default__fired', quals=[] (at pp.c:2570)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2574)
    FuncDecl: quals=None (at pp.c:2574)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Timer__overflow', quals=[] (at pp.c:2574)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Capture__captured', quals=[], storage=['static'] (at pp.c:2576)
    FuncDecl: quals=None (at pp.c:2576)
      ParamList:  (at pp.c:2576)
        Decl: name='time', quals=[], storage=[] (at pp.c:2576)
          TypeDecl: declname='time', quals=[] (at pp.c:2576)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Capture__captured', quals=[] (at pp.c:2576)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Compare__fired', quals=[], storage=['static'] (at pp.c:2578)
    FuncDecl: quals=None (at pp.c:2578)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Compare__fired', quals=[] (at pp.c:2578)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__9__cc_t', quals=[], storage=['typedef'] (at pp.c:2580)
    TypeDecl: declname='Msp430TimerCapComP__9__cc_t', quals=[] (at pp.c:2580)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:2583)
    FuncDecl: quals=None (at pp.c:2583)
      ParamList:  (at pp.c:2583)
        Decl: name='x', quals=[], storage=[] (at pp.c:2583)
          TypeDecl: declname='x', quals=[] (at pp.c:2583)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__int2CC', quals=[] (at pp.c:2583)
        IdentifierType: names=['Msp430TimerCapComP__9__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:2585)
    FuncDecl: quals=None (at pp.c:2585)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Control__getControl', quals=[] (at pp.c:2585)
        IdentifierType: names=['Msp430TimerCapComP__9__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:2587)
    FuncDecl: quals=None (at pp.c:2587)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Capture__getEvent', quals=[] (at pp.c:2587)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:2589)
    FuncDecl: quals=None (at pp.c:2589)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Event__fired', quals=[] (at pp.c:2589)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:2597)
    FuncDecl: quals=None (at pp.c:2597)
      ParamList:  (at pp.c:2597)
        Decl: name='n', quals=[], storage=[] (at pp.c:2597)
          TypeDecl: declname='n', quals=[] (at pp.c:2597)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Capture__default__captured', quals=[] (at pp.c:2597)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:2601)
    FuncDecl: quals=None (at pp.c:2601)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Compare__default__fired', quals=[] (at pp.c:2601)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2605)
    FuncDecl: quals=None (at pp.c:2605)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Timer__overflow', quals=[] (at pp.c:2605)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCommonP__VectorTimerB1__fired', quals=[], storage=['static'] (at pp.c:2607)
    FuncDecl: quals=None (at pp.c:2607)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCommonP__VectorTimerB1__fired', quals=[] (at pp.c:2607)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCommonP__VectorTimerA0__fired', quals=[], storage=['static'] (at pp.c:2609)
    FuncDecl: quals=None (at pp.c:2609)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCommonP__VectorTimerA0__fired', quals=[] (at pp.c:2609)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCommonP__VectorTimerA1__fired', quals=[], storage=['static'] (at pp.c:2611)
    FuncDecl: quals=None (at pp.c:2611)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCommonP__VectorTimerA1__fired', quals=[] (at pp.c:2611)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCommonP__VectorTimerB0__fired', quals=[], storage=['static'] (at pp.c:2613)
    FuncDecl: quals=None (at pp.c:2613)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCommonP__VectorTimerB0__fired', quals=[] (at pp.c:2613)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_TIMERA0_VECTOR', quals=[], storage=[] (at pp.c:2615)
    FuncDecl: quals=None (at pp.c:2615)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_TIMERA0_VECTOR', quals=[] (at pp.c:2615)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_TIMERA1_VECTOR', quals=[], storage=[] (at pp.c:2616)
    FuncDecl: quals=None (at pp.c:2616)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_TIMERA1_VECTOR', quals=[] (at pp.c:2616)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_TIMERB0_VECTOR', quals=[], storage=[] (at pp.c:2617)
    FuncDecl: quals=None (at pp.c:2617)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_TIMERB0_VECTOR', quals=[] (at pp.c:2617)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_TIMERB1_VECTOR', quals=[], storage=[] (at pp.c:2618)
    FuncDecl: quals=None (at pp.c:2618)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_TIMERB1_VECTOR', quals=[] (at pp.c:2618)
        IdentifierType: names=['void'] (at None)
  Decl: name='McuSleepC__McuPowerOverride__lowestState', quals=[], storage=['static'] (at pp.c:2620)
    FuncDecl: quals=None (at pp.c:2620)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='McuSleepC__McuPowerOverride__lowestState', quals=[] (at pp.c:2620)
        IdentifierType: names=['mcu_power_t'] (at None)
  Decl: name='McuSleepC__dirty', quals=[], storage=[] (at pp.c:2622)
    TypeDecl: declname='McuSleepC__dirty', quals=[] (at pp.c:2622)
      IdentifierType: names=['bool'] (at None)
    ID: name='TRUE' (at pp.c:2622)
  Decl: name='McuSleepC__powerState', quals=[], storage=[] (at pp.c:2623)
    TypeDecl: declname='McuSleepC__powerState', quals=[] (at pp.c:2623)
      IdentifierType: names=['mcu_power_t'] (at None)
    ID: name='MSP430_POWER_ACTIVE' (at pp.c:2623)
  Decl: name='McuSleepC__msp430PowerBits', quals=['const'], storage=[] (at pp.c:2628)
    ArrayDecl:  (at pp.c:2628)
      TypeDecl: declname='McuSleepC__msp430PowerBits', quals=['const'] (at pp.c:2628)
        IdentifierType: names=['uint16_t'] (at None)
      BinaryOp: op='+' (at pp.c:2628)
        ID: name='MSP430_POWER_LPM4' (at pp.c:2628)
        Constant: type='int', value='1' (at pp.c:2628)
    ExprList:  (at pp.c:2629)
      Constant: type='int', value='0' (at pp.c:2629)
      Constant: type='int', value='0x0010' (at pp.c:2630)
      BinaryOp: op='+' (at pp.c:2631)
        Constant: type='int', value='0x0040' (at pp.c:2631)
        Constant: type='int', value='0x0010' (at pp.c:2631)
      BinaryOp: op='+' (at pp.c:2632)
        Constant: type='int', value='0x0080' (at pp.c:2632)
        Constant: type='int', value='0x0010' (at pp.c:2632)
      BinaryOp: op='+' (at pp.c:2633)
        BinaryOp: op='+' (at pp.c:2633)
          Constant: type='int', value='0x0080' (at pp.c:2633)
          Constant: type='int', value='0x0040' (at pp.c:2633)
        Constant: type='int', value='0x0010' (at pp.c:2633)
      BinaryOp: op='+' (at pp.c:2634)
        BinaryOp: op='+' (at pp.c:2634)
          BinaryOp: op='+' (at pp.c:2634)
            Constant: type='int', value='0x0080' (at pp.c:2634)
            Constant: type='int', value='0x0040' (at pp.c:2634)
          Constant: type='int', value='0x0020' (at pp.c:2634)
        Constant: type='int', value='0x0010' (at pp.c:2634)
  Decl: name='McuSleepC__getPowerState', quals=[], storage=['inline', 'static'] (at pp.c:2637)
    FuncDecl: quals=None (at pp.c:2637)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='McuSleepC__getPowerState', quals=[] (at pp.c:2637)
        IdentifierType: names=['mcu_power_t'] (at None)
  Decl: name='McuSleepC__computePowerState', quals=[], storage=['inline', 'static'] (at pp.c:2639)
    FuncDecl: quals=None (at pp.c:2639)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='McuSleepC__computePowerState', quals=[] (at pp.c:2639)
        IdentifierType: names=['void'] (at None)
  Decl: name='McuSleepC__McuSleep__sleep', quals=[], storage=['inline', 'static'] (at pp.c:2644)
    FuncDecl: quals=None (at pp.c:2644)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='McuSleepC__McuSleep__sleep', quals=[] (at pp.c:2644)
        IdentifierType: names=['void'] (at None)
  Decl: name='MotePlatformC__SubInit__init', quals=[], storage=['static'] (at pp.c:2646)
    FuncDecl: quals=None (at pp.c:2646)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='MotePlatformC__SubInit__init', quals=[] (at pp.c:2646)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='MotePlatformC__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:2648)
    FuncDecl: quals=None (at pp.c:2648)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='MotePlatformC__Init__init', quals=[] (at pp.c:2648)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='MotePlatformC__SubInit__default__init', quals=[], storage=['inline', 'static'] (at pp.c:2650)
    FuncDecl: quals=None (at pp.c:2650)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='MotePlatformC__SubInit__default__init', quals=[] (at pp.c:2650)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='RealMainP__SoftwareInit__init', quals=[], storage=['static'] (at pp.c:2652)
    FuncDecl: quals=None (at pp.c:2652)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__SoftwareInit__init', quals=[] (at pp.c:2652)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='RealMainP__Boot__booted', quals=[], storage=['static'] (at pp.c:2654)
    FuncDecl: quals=None (at pp.c:2654)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__Boot__booted', quals=[] (at pp.c:2654)
        IdentifierType: names=['void'] (at None)
  Decl: name='RealMainP__PlatformInit__init', quals=[], storage=['static'] (at pp.c:2656)
    FuncDecl: quals=None (at pp.c:2656)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__PlatformInit__init', quals=[] (at pp.c:2656)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='RealMainP__Scheduler__init', quals=[], storage=['static'] (at pp.c:2658)
    FuncDecl: quals=None (at pp.c:2658)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__Scheduler__init', quals=[] (at pp.c:2658)
        IdentifierType: names=['void'] (at None)
  Decl: name='RealMainP__Scheduler__taskLoop', quals=[], storage=['static'] (at pp.c:2660)
    FuncDecl: quals=None (at pp.c:2660)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__Scheduler__taskLoop', quals=[] (at pp.c:2660)
        IdentifierType: names=['void'] (at None)
  Decl: name='RealMainP__Scheduler__runNextTask', quals=[], storage=['static'] (at pp.c:2662)
    FuncDecl: quals=None (at pp.c:2662)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__Scheduler__runNextTask', quals=[] (at pp.c:2662)
        IdentifierType: names=['bool'] (at None)
  Decl: name='main', quals=[], storage=[] (at pp.c:2664)
    FuncDecl: quals=None (at pp.c:2664)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='main', quals=[] (at pp.c:2664)
        IdentifierType: names=['int'] (at None)
  Decl: name='SchedulerBasicP__TaskBasic__runTask', quals=[], storage=['static'] (at pp.c:2666)
    FuncDecl: quals=None (at pp.c:2666)
      ParamList:  (at pp.c:2668)
        Decl: name='arg_0x101333340', quals=[], storage=[] (at pp.c:2668)
          TypeDecl: declname='arg_0x101333340', quals=[] (at pp.c:2668)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__TaskBasic__runTask', quals=[] (at pp.c:2666)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__McuSleep__sleep', quals=[], storage=['static'] (at pp.c:2670)
    FuncDecl: quals=None (at pp.c:2670)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__McuSleep__sleep', quals=[] (at pp.c:2670)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2672)
    Enum: name='SchedulerBasicP____nesc_unnamed4278' (at pp.c:2672)
      EnumeratorList:  (at pp.c:2674)
        Enumerator: name='SchedulerBasicP__NUM_TASKS' (at pp.c:2674)
          Constant: type='int', value='8U' (at pp.c:2674)
        Enumerator: name='SchedulerBasicP__NO_TASK' (at pp.c:2675)
          Constant: type='int', value='255' (at pp.c:2675)
  Decl: name='SchedulerBasicP__m_head', quals=[], storage=[] (at pp.c:2678)
    TypeDecl: declname='SchedulerBasicP__m_head', quals=[] (at pp.c:2678)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SchedulerBasicP__m_tail', quals=[], storage=[] (at pp.c:2679)
    TypeDecl: declname='SchedulerBasicP__m_tail', quals=[] (at pp.c:2679)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SchedulerBasicP__m_next', quals=[], storage=[] (at pp.c:2680)
    ArrayDecl:  (at pp.c:2680)
      TypeDecl: declname='SchedulerBasicP__m_next', quals=[] (at pp.c:2680)
        IdentifierType: names=['uint8_t'] (at None)
      ID: name='SchedulerBasicP__NUM_TASKS' (at pp.c:2680)
  Decl: name='SchedulerBasicP__popTask', quals=[], storage=['__inline', 'static'] (at pp.c:2689)
    FuncDecl: quals=None (at pp.c:2689)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__popTask', quals=[] (at pp.c:2689)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SchedulerBasicP__isWaiting', quals=[], storage=['inline', 'static'] (at pp.c:2691)
    FuncDecl: quals=None (at pp.c:2691)
      ParamList:  (at pp.c:2691)
        Decl: name='id', quals=[], storage=[] (at pp.c:2691)
          TypeDecl: declname='id', quals=[] (at pp.c:2691)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__isWaiting', quals=[] (at pp.c:2691)
        IdentifierType: names=['bool'] (at None)
  Decl: name='SchedulerBasicP__pushTask', quals=[], storage=['inline', 'static'] (at pp.c:2696)
    FuncDecl: quals=None (at pp.c:2696)
      ParamList:  (at pp.c:2696)
        Decl: name='id', quals=[], storage=[] (at pp.c:2696)
          TypeDecl: declname='id', quals=[] (at pp.c:2696)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__pushTask', quals=[] (at pp.c:2696)
        IdentifierType: names=['bool'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__init', quals=[], storage=['inline', 'static'] (at pp.c:2698)
    FuncDecl: quals=None (at pp.c:2698)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__init', quals=[] (at pp.c:2698)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__runNextTask', quals=[], storage=['static'] (at pp.c:2708)
    FuncDecl: quals=None (at pp.c:2708)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__runNextTask', quals=[] (at pp.c:2708)
        IdentifierType: names=['bool'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__taskLoop', quals=[], storage=['inline', 'static'] (at pp.c:2710)
    FuncDecl: quals=None (at pp.c:2710)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__taskLoop', quals=[] (at pp.c:2710)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__TaskBasic__postTask', quals=[], storage=['static'] (at pp.c:2712)
    FuncDecl: quals=None (at pp.c:2712)
      ParamList:  (at pp.c:2712)
        Decl: name='id', quals=[], storage=[] (at pp.c:2712)
          TypeDecl: declname='id', quals=[] (at pp.c:2712)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__TaskBasic__postTask', quals=[] (at pp.c:2712)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SchedulerBasicP__TaskBasic__default__runTask', quals=[], storage=['static'] (at pp.c:2717)
    FuncDecl: quals=None (at pp.c:2717)
      ParamList:  (at pp.c:2717)
        Decl: name='id', quals=[], storage=[] (at pp.c:2717)
          TypeDecl: declname='id', quals=[] (at pp.c:2717)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__TaskBasic__default__runTask', quals=[] (at pp.c:2717)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led0__makeOutput', quals=[], storage=['static'] (at pp.c:2719)
    FuncDecl: quals=None (at pp.c:2719)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led0__makeOutput', quals=[] (at pp.c:2719)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led0__set', quals=[], storage=['static'] (at pp.c:2721)
    FuncDecl: quals=None (at pp.c:2721)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led0__set', quals=[] (at pp.c:2721)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led0__clr', quals=[], storage=['static'] (at pp.c:2722)
    FuncDecl: quals=None (at pp.c:2722)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led0__clr', quals=[] (at pp.c:2722)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led1__makeOutput', quals=[], storage=['static'] (at pp.c:2727)
    FuncDecl: quals=None (at pp.c:2727)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led1__makeOutput', quals=[] (at pp.c:2727)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led1__set', quals=[], storage=['static'] (at pp.c:2729)
    FuncDecl: quals=None (at pp.c:2729)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led1__set', quals=[] (at pp.c:2729)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led1__clr', quals=[], storage=['static'] (at pp.c:2730)
    FuncDecl: quals=None (at pp.c:2730)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led1__clr', quals=[] (at pp.c:2730)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led2__makeOutput', quals=[], storage=['static'] (at pp.c:2735)
    FuncDecl: quals=None (at pp.c:2735)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led2__makeOutput', quals=[] (at pp.c:2735)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led2__set', quals=[], storage=['static'] (at pp.c:2737)
    FuncDecl: quals=None (at pp.c:2737)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led2__set', quals=[] (at pp.c:2737)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led2__clr', quals=[], storage=['static'] (at pp.c:2738)
    FuncDecl: quals=None (at pp.c:2738)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led2__clr', quals=[] (at pp.c:2738)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:2740)
    FuncDecl: quals=None (at pp.c:2740)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Init__init', quals=[] (at pp.c:2740)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='LedsP__Leds__led0On', quals=[], storage=['inline', 'static'] (at pp.c:2742)
    FuncDecl: quals=None (at pp.c:2742)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led0On', quals=[] (at pp.c:2742)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led0Off', quals=[], storage=['inline', 'static'] (at pp.c:2747)
    FuncDecl: quals=None (at pp.c:2747)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led0Off', quals=[] (at pp.c:2747)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led1On', quals=[], storage=['inline', 'static'] (at pp.c:2757)
    FuncDecl: quals=None (at pp.c:2757)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led1On', quals=[] (at pp.c:2757)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led1Off', quals=[], storage=['inline', 'static'] (at pp.c:2762)
    FuncDecl: quals=None (at pp.c:2762)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led1Off', quals=[] (at pp.c:2762)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led2On', quals=[], storage=['inline', 'static'] (at pp.c:2772)
    FuncDecl: quals=None (at pp.c:2772)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led2On', quals=[] (at pp.c:2772)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led2Off', quals=[], storage=['inline', 'static'] (at pp.c:2777)
    FuncDecl: quals=None (at pp.c:2777)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led2Off', quals=[] (at pp.c:2777)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__set', quals=[], storage=['static'] (at pp.c:2779)
    FuncDecl: quals=None (at pp.c:2779)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__set', quals=[] (at pp.c:2779)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__clr', quals=[], storage=['inline', 'static'] (at pp.c:2780)
    FuncDecl: quals=None (at pp.c:2780)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__clr', quals=[] (at pp.c:2780)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:2786)
    FuncDecl: quals=None (at pp.c:2786)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[] (at pp.c:2786)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__set', quals=[], storage=['static'] (at pp.c:2788)
    FuncDecl: quals=None (at pp.c:2788)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__set', quals=[] (at pp.c:2788)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__clr', quals=[], storage=['inline', 'static'] (at pp.c:2789)
    FuncDecl: quals=None (at pp.c:2789)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__clr', quals=[] (at pp.c:2789)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:2795)
    FuncDecl: quals=None (at pp.c:2795)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[] (at pp.c:2795)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__set', quals=[], storage=['static'] (at pp.c:2797)
    FuncDecl: quals=None (at pp.c:2797)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__set', quals=[] (at pp.c:2797)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__clr', quals=[], storage=['inline', 'static'] (at pp.c:2798)
    FuncDecl: quals=None (at pp.c:2798)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__clr', quals=[] (at pp.c:2798)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:2804)
    FuncDecl: quals=None (at pp.c:2804)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[] (at pp.c:2804)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__40__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:2806)
    FuncDecl: quals=None (at pp.c:2806)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__40__IO__makeInput', quals=[] (at pp.c:2806)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__40__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:2810)
    FuncDecl: quals=None (at pp.c:2810)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__40__IO__selectModuleFunc', quals=[] (at pp.c:2810)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__40__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:2812)
    FuncDecl: quals=None (at pp.c:2812)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__40__IO__selectIOFunc', quals=[] (at pp.c:2812)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__41__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:2814)
    FuncDecl: quals=None (at pp.c:2814)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__41__IO__makeInput', quals=[] (at pp.c:2814)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__41__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:2818)
    FuncDecl: quals=None (at pp.c:2818)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__41__IO__selectModuleFunc', quals=[] (at pp.c:2818)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__41__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:2820)
    FuncDecl: quals=None (at pp.c:2820)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__41__IO__selectIOFunc', quals=[] (at pp.c:2820)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__42__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:2822)
    FuncDecl: quals=None (at pp.c:2822)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__42__IO__makeInput', quals=[] (at pp.c:2822)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__42__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:2826)
    FuncDecl: quals=None (at pp.c:2826)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__42__IO__selectModuleFunc', quals=[] (at pp.c:2826)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__42__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:2828)
    FuncDecl: quals=None (at pp.c:2828)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__42__IO__selectIOFunc', quals=[] (at pp.c:2828)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__43__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:2830)
    FuncDecl: quals=None (at pp.c:2830)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__43__IO__makeInput', quals=[] (at pp.c:2830)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__43__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:2834)
    FuncDecl: quals=None (at pp.c:2834)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__43__IO__selectModuleFunc', quals=[] (at pp.c:2834)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__43__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:2836)
    FuncDecl: quals=None (at pp.c:2836)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__43__IO__selectIOFunc', quals=[] (at pp.c:2836)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__44__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:2838)
    FuncDecl: quals=None (at pp.c:2838)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__44__IO__makeInput', quals=[] (at pp.c:2838)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__44__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:2842)
    FuncDecl: quals=None (at pp.c:2842)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__44__IO__selectModuleFunc', quals=[] (at pp.c:2842)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__44__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:2844)
    FuncDecl: quals=None (at pp.c:2844)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__44__IO__selectIOFunc', quals=[] (at pp.c:2844)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__45__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:2846)
    FuncDecl: quals=None (at pp.c:2846)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__45__IO__makeInput', quals=[] (at pp.c:2846)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__45__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:2850)
    FuncDecl: quals=None (at pp.c:2850)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__45__IO__selectModuleFunc', quals=[] (at pp.c:2850)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__45__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:2852)
    FuncDecl: quals=None (at pp.c:2852)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__45__IO__selectIOFunc', quals=[] (at pp.c:2852)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__46__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:2854)
    FuncDecl: quals=None (at pp.c:2854)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__46__IO__makeInput', quals=[] (at pp.c:2854)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__46__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:2858)
    FuncDecl: quals=None (at pp.c:2858)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__46__IO__selectModuleFunc', quals=[] (at pp.c:2858)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__46__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:2860)
    FuncDecl: quals=None (at pp.c:2860)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__46__IO__selectIOFunc', quals=[] (at pp.c:2860)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__47__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:2862)
    FuncDecl: quals=None (at pp.c:2862)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__47__IO__makeInput', quals=[] (at pp.c:2862)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__47__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:2866)
    FuncDecl: quals=None (at pp.c:2866)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__47__IO__selectModuleFunc', quals=[] (at pp.c:2866)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__47__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:2868)
    FuncDecl: quals=None (at pp.c:2868)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__47__IO__selectIOFunc', quals=[] (at pp.c:2868)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__HplGeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:2870)
    FuncDecl: quals=None (at pp.c:2870)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__makeOutput', quals=[] (at pp.c:2870)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__HplGeneralIO__set', quals=[], storage=['static'] (at pp.c:2872)
    FuncDecl: quals=None (at pp.c:2872)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__set', quals=[] (at pp.c:2872)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__HplGeneralIO__clr', quals=[], storage=['static'] (at pp.c:2877)
    FuncDecl: quals=None (at pp.c:2877)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__clr', quals=[] (at pp.c:2877)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:2879)
    FuncDecl: quals=None (at pp.c:2879)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__set', quals=[] (at pp.c:2879)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:2880)
    FuncDecl: quals=None (at pp.c:2880)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__clr', quals=[] (at pp.c:2880)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:2885)
    FuncDecl: quals=None (at pp.c:2885)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__makeOutput', quals=[] (at pp.c:2885)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__HplGeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:2887)
    FuncDecl: quals=None (at pp.c:2887)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__makeOutput', quals=[] (at pp.c:2887)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__HplGeneralIO__set', quals=[], storage=['static'] (at pp.c:2889)
    FuncDecl: quals=None (at pp.c:2889)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__set', quals=[] (at pp.c:2889)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__HplGeneralIO__clr', quals=[], storage=['static'] (at pp.c:2894)
    FuncDecl: quals=None (at pp.c:2894)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__clr', quals=[] (at pp.c:2894)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:2896)
    FuncDecl: quals=None (at pp.c:2896)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__set', quals=[] (at pp.c:2896)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:2897)
    FuncDecl: quals=None (at pp.c:2897)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__clr', quals=[] (at pp.c:2897)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:2902)
    FuncDecl: quals=None (at pp.c:2902)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__makeOutput', quals=[] (at pp.c:2902)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__HplGeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:2904)
    FuncDecl: quals=None (at pp.c:2904)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__HplGeneralIO__makeOutput', quals=[] (at pp.c:2904)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__HplGeneralIO__set', quals=[], storage=['static'] (at pp.c:2906)
    FuncDecl: quals=None (at pp.c:2906)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__HplGeneralIO__set', quals=[] (at pp.c:2906)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__HplGeneralIO__clr', quals=[], storage=['static'] (at pp.c:2911)
    FuncDecl: quals=None (at pp.c:2911)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__HplGeneralIO__clr', quals=[] (at pp.c:2911)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:2913)
    FuncDecl: quals=None (at pp.c:2913)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__GeneralIO__set', quals=[] (at pp.c:2913)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:2914)
    FuncDecl: quals=None (at pp.c:2914)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__GeneralIO__clr', quals=[] (at pp.c:2914)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:2919)
    FuncDecl: quals=None (at pp.c:2919)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__GeneralIO__makeOutput', quals=[] (at pp.c:2919)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Compare__setEvent', quals=[], storage=['static'] (at pp.c:2921)
    FuncDecl: quals=None (at pp.c:2921)
      ParamList:  (at pp.c:2921)
        Decl: name='time', quals=[], storage=[] (at pp.c:2921)
          TypeDecl: declname='time', quals=[] (at pp.c:2921)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__setEvent', quals=[] (at pp.c:2921)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Compare__setEventFromNow', quals=[], storage=['static'] (at pp.c:2923)
    FuncDecl: quals=None (at pp.c:2923)
      ParamList:  (at pp.c:2923)
        Decl: name='delta', quals=[], storage=[] (at pp.c:2923)
          TypeDecl: declname='delta', quals=[] (at pp.c:2923)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__setEventFromNow', quals=[] (at pp.c:2923)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Timer__get', quals=[], storage=['static'] (at pp.c:2925)
    FuncDecl: quals=None (at pp.c:2925)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Timer__get', quals=[] (at pp.c:2925)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430AlarmC__0__Alarm__fired', quals=[], storage=['static'] (at pp.c:2927)
    FuncDecl: quals=None (at pp.c:2927)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Alarm__fired', quals=[] (at pp.c:2927)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430TimerControl__enableEvents', quals=[], storage=['static'] (at pp.c:2929)
    FuncDecl: quals=None (at pp.c:2929)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__enableEvents', quals=[] (at pp.c:2929)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430TimerControl__setControlAsCompare', quals=[], storage=['static'] (at pp.c:2931)
    FuncDecl: quals=None (at pp.c:2931)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__setControlAsCompare', quals=[] (at pp.c:2931)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430TimerControl__disableEvents', quals=[], storage=['static'] (at pp.c:2942)
    FuncDecl: quals=None (at pp.c:2942)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__disableEvents', quals=[] (at pp.c:2942)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430TimerControl__clearPendingInterrupt', quals=[], storage=['static'] (at pp.c:2944)
    FuncDecl: quals=None (at pp.c:2944)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__clearPendingInterrupt', quals=[] (at pp.c:2944)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:2946)
    FuncDecl: quals=None (at pp.c:2946)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Init__init', quals=[] (at pp.c:2946)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430AlarmC__0__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:2948)
    FuncDecl: quals=None (at pp.c:2948)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Alarm__stop', quals=[] (at pp.c:2948)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Compare__fired', quals=[], storage=['inline', 'static'] (at pp.c:2953)
    FuncDecl: quals=None (at pp.c:2953)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__fired', quals=[] (at pp.c:2953)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Alarm__startAt', quals=[], storage=['inline', 'static'] (at pp.c:2964)
    FuncDecl: quals=None (at pp.c:2964)
      ParamList:  (at pp.c:2964)
        Decl: name='t0', quals=[], storage=[] (at pp.c:2964)
          TypeDecl: declname='t0', quals=[] (at pp.c:2964)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:2964)
          TypeDecl: declname='dt', quals=[] (at pp.c:2964)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Alarm__startAt', quals=[] (at pp.c:2964)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2966)
    FuncDecl: quals=None (at pp.c:2966)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Timer__overflow', quals=[] (at pp.c:2966)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430CounterC__0__Msp430Timer__get', quals=[], storage=['static'] (at pp.c:2968)
    FuncDecl: quals=None (at pp.c:2968)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Msp430Timer__get', quals=[] (at pp.c:2968)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430CounterC__0__Msp430Timer__isOverflowPending', quals=[], storage=['static'] (at pp.c:2969)
    FuncDecl: quals=None (at pp.c:2969)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Msp430Timer__isOverflowPending', quals=[] (at pp.c:2969)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430CounterC__0__Counter__overflow', quals=[], storage=['static'] (at pp.c:2971)
    FuncDecl: quals=None (at pp.c:2971)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Counter__overflow', quals=[] (at pp.c:2971)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430CounterC__0__Counter__get', quals=[], storage=['inline', 'static'] (at pp.c:2973)
    FuncDecl: quals=None (at pp.c:2973)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Counter__get', quals=[] (at pp.c:2973)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430CounterC__0__Counter__isOverflowPending', quals=[], storage=['inline', 'static'] (at pp.c:2978)
    FuncDecl: quals=None (at pp.c:2978)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Counter__isOverflowPending', quals=[] (at pp.c:2978)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430CounterC__0__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:2988)
    FuncDecl: quals=None (at pp.c:2988)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Msp430Timer__overflow', quals=[] (at pp.c:2988)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformCounterC__0__CounterFrom__get', quals=[], storage=['static'] (at pp.c:2990)
    FuncDecl: quals=None (at pp.c:2990)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__CounterFrom__get', quals=[] (at pp.c:2990)
        IdentifierType: names=['TransformCounterC__0__CounterFrom__size_type'] (at None)
  Decl: name='TransformCounterC__0__CounterFrom__isOverflowPending', quals=[], storage=['static'] (at pp.c:2997)
    FuncDecl: quals=None (at pp.c:2997)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__CounterFrom__isOverflowPending', quals=[] (at pp.c:2997)
        IdentifierType: names=['bool'] (at None)
  Decl: name='TransformCounterC__0__Counter__overflow', quals=[], storage=['static'] (at pp.c:3008)
    FuncDecl: quals=None (at pp.c:3008)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__Counter__overflow', quals=[] (at pp.c:3008)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformCounterC__0__m_upper', quals=[], storage=[] (at pp.c:3010)
    TypeDecl: declname='TransformCounterC__0__m_upper', quals=[] (at pp.c:3010)
      IdentifierType: names=['TransformCounterC__0__upper_count_type'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:3012)
    Enum: name='TransformCounterC__0____nesc_unnamed4279' (at pp.c:3012)
      EnumeratorList:  (at pp.c:3014)
        Enumerator: name='TransformCounterC__0__LOW_SHIFT_RIGHT' (at pp.c:3014)
          Constant: type='int', value='5' (at pp.c:3014)
        Enumerator: name='TransformCounterC__0__HIGH_SHIFT_LEFT' (at pp.c:3015)
          BinaryOp: op='-' (at pp.c:3015)
            BinaryOp: op='*' (at pp.c:3015)
              Constant: type='int', value='8' (at pp.c:3015)
              UnaryOp: op='sizeof' (at pp.c:3015)
                Typename: quals=[] (at None)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['TransformCounterC__0__from_size_type'] (at None)
            ID: name='TransformCounterC__0__LOW_SHIFT_RIGHT' (at pp.c:3015)
        Enumerator: name='TransformCounterC__0__NUM_UPPER_BITS' (at pp.c:3016)
          BinaryOp: op='+' (at pp.c:3016)
            BinaryOp: op='-' (at pp.c:3016)
              BinaryOp: op='*' (at pp.c:3016)
                Constant: type='int', value='8' (at pp.c:3016)
                UnaryOp: op='sizeof' (at pp.c:3016)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
              BinaryOp: op='*' (at pp.c:3016)
                Constant: type='int', value='8' (at pp.c:3016)
                UnaryOp: op='sizeof' (at pp.c:3016)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformCounterC__0__from_size_type'] (at None)
            Constant: type='int', value='5' (at pp.c:3016)
        Enumerator: name='TransformCounterC__0__OVERFLOW_MASK' (at pp.c:3020)
          TernaryOp:  (at pp.c:3020)
            ID: name='TransformCounterC__0__NUM_UPPER_BITS' (at pp.c:3020)
            BinaryOp: op='-' (at None)
              BinaryOp: op='<<' (at None)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformCounterC__0__upper_count_type'] (at None)
                  Constant: type='int', value='2' (at pp.c:3020)
                BinaryOp: op='-' (at pp.c:3020)
                  ID: name='TransformCounterC__0__NUM_UPPER_BITS' (at pp.c:3020)
                  Constant: type='int', value='1' (at pp.c:3020)
              Constant: type='int', value='1' (at pp.c:3020)
            Constant: type='int', value='0' (at pp.c:3020)
  Decl: name='TransformCounterC__0__Counter__get', quals=[], storage=['static'] (at pp.c:3023)
    FuncDecl: quals=None (at pp.c:3023)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__Counter__get', quals=[] (at pp.c:3023)
        IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
  Decl: name='TransformCounterC__0__CounterFrom__overflow', quals=[], storage=['inline', 'static'] (at pp.c:3025)
    FuncDecl: quals=None (at pp.c:3025)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__CounterFrom__overflow', quals=[] (at pp.c:3025)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__fired', quals=[], storage=['static'] (at pp.c:3027)
    FuncDecl: quals=None (at pp.c:3027)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__fired', quals=[] (at pp.c:3027)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__AlarmFrom__startAt', quals=[], storage=['static'] (at pp.c:3029)
    FuncDecl: quals=None (at pp.c:3029)
      ParamList:  (at pp.c:3029)
        Decl: name='t0', quals=[], storage=[] (at pp.c:3029)
          TypeDecl: declname='t0', quals=[] (at pp.c:3029)
            IdentifierType: names=['TransformAlarmC__0__AlarmFrom__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3029)
          TypeDecl: declname='dt', quals=[] (at pp.c:3029)
            IdentifierType: names=['TransformAlarmC__0__AlarmFrom__size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__0__AlarmFrom__startAt', quals=[] (at pp.c:3029)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__AlarmFrom__stop', quals=[], storage=['static'] (at pp.c:3031)
    FuncDecl: quals=None (at pp.c:3031)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__AlarmFrom__stop', quals=[] (at pp.c:3031)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Counter__get', quals=[], storage=['static'] (at pp.c:3033)
    FuncDecl: quals=None (at pp.c:3033)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Counter__get', quals=[] (at pp.c:3033)
        IdentifierType: names=['TransformAlarmC__0__Counter__size_type'] (at None)
  Decl: name='TransformAlarmC__0__m_t0', quals=[], storage=[] (at pp.c:3035)
    TypeDecl: declname='TransformAlarmC__0__m_t0', quals=[] (at pp.c:3035)
      IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Decl: name='TransformAlarmC__0__m_dt', quals=[], storage=[] (at pp.c:3036)
    TypeDecl: declname='TransformAlarmC__0__m_dt', quals=[] (at pp.c:3036)
      IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:3038)
    Enum: name='TransformAlarmC__0____nesc_unnamed4280' (at pp.c:3038)
      EnumeratorList:  (at pp.c:3040)
        Enumerator: name='TransformAlarmC__0__MAX_DELAY_LOG2' (at pp.c:3040)
          BinaryOp: op='-' (at pp.c:3040)
            BinaryOp: op='-' (at pp.c:3040)
              BinaryOp: op='*' (at pp.c:3040)
                Constant: type='int', value='8' (at pp.c:3040)
                UnaryOp: op='sizeof' (at pp.c:3040)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformAlarmC__0__from_size_type'] (at None)
              Constant: type='int', value='1' (at pp.c:3040)
            Constant: type='int', value='5' (at pp.c:3040)
        Enumerator: name='TransformAlarmC__0__MAX_DELAY' (at pp.c:3041)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
              Constant: type='int', value='1' (at pp.c:3041)
            ID: name='TransformAlarmC__0__MAX_DELAY_LOG2' (at pp.c:3041)
  Decl: name='TransformAlarmC__0__Alarm__getNow', quals=[], storage=['inline', 'static'] (at pp.c:3044)
    FuncDecl: quals=None (at pp.c:3044)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__getNow', quals=[] (at pp.c:3044)
        IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__getAlarm', quals=[], storage=['inline', 'static'] (at pp.c:3049)
    FuncDecl: quals=None (at pp.c:3049)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__getAlarm', quals=[] (at pp.c:3049)
        IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:3060)
    FuncDecl: quals=None (at pp.c:3060)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__stop', quals=[] (at pp.c:3060)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__set_alarm', quals=[], storage=['static'] (at pp.c:3065)
    FuncDecl: quals=None (at pp.c:3065)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__set_alarm', quals=[] (at pp.c:3065)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__startAt', quals=[], storage=['static'] (at pp.c:3067)
    FuncDecl: quals=None (at pp.c:3067)
      ParamList:  (at pp.c:3067)
        Decl: name='t0', quals=[], storage=[] (at pp.c:3067)
          TypeDecl: declname='t0', quals=[] (at pp.c:3067)
            IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3067)
          TypeDecl: declname='dt', quals=[] (at pp.c:3067)
            IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__startAt', quals=[] (at pp.c:3067)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__AlarmFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:3069)
    FuncDecl: quals=None (at pp.c:3069)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__AlarmFrom__fired', quals=[] (at pp.c:3069)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:3071)
    FuncDecl: quals=None (at pp.c:3071)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Counter__overflow', quals=[] (at pp.c:3071)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__fired__postTask', quals=[], storage=['static'] (at pp.c:3073)
    FuncDecl: quals=None (at pp.c:3073)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__fired__postTask', quals=[] (at pp.c:3073)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__getNow', quals=[], storage=['static'] (at pp.c:3075)
    FuncDecl: quals=None (at pp.c:3075)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__getNow', quals=[] (at pp.c:3075)
        IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__startAt', quals=[], storage=['static'] (at pp.c:3077)
    FuncDecl: quals=None (at pp.c:3077)
      ParamList:  (at pp.c:3077)
        Decl: name='t0', quals=[], storage=[] (at pp.c:3077)
          TypeDecl: declname='t0', quals=[] (at pp.c:3077)
            IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3077)
          TypeDecl: declname='dt', quals=[] (at pp.c:3077)
            IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__startAt', quals=[] (at pp.c:3077)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__getAlarm', quals=[], storage=['static'] (at pp.c:3079)
    FuncDecl: quals=None (at pp.c:3079)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__getAlarm', quals=[] (at pp.c:3079)
        IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__stop', quals=[], storage=['static'] (at pp.c:3081)
    FuncDecl: quals=None (at pp.c:3081)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__stop', quals=[] (at pp.c:3081)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__fired', quals=[], storage=['static'] (at pp.c:3083)
    FuncDecl: quals=None (at pp.c:3083)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__fired', quals=[] (at pp.c:3083)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:3085)
    Enum: name='AlarmToTimerC__0____nesc_unnamed4281' (at pp.c:3085)
      EnumeratorList:  (at pp.c:3087)
        Enumerator: name='AlarmToTimerC__0__fired' (at pp.c:3087)
          Constant: type='int', value='0U' (at pp.c:3087)
  Typedef: name='AlarmToTimerC__0____nesc_sillytask_fired', quals=[], storage=['typedef'] (at pp.c:3090)
    ArrayDecl:  (at pp.c:3090)
      TypeDecl: declname='AlarmToTimerC__0____nesc_sillytask_fired', quals=[] (at pp.c:3090)
        IdentifierType: names=['int'] (at None)
      ID: name='AlarmToTimerC__0__fired' (at pp.c:3090)
  Decl: name='AlarmToTimerC__0__m_dt', quals=[], storage=[] (at pp.c:3092)
    TypeDecl: declname='AlarmToTimerC__0__m_dt', quals=[] (at pp.c:3092)
      IdentifierType: names=['uint32_t'] (at None)
  Decl: name='AlarmToTimerC__0__m_oneshot', quals=[], storage=[] (at pp.c:3093)
    TypeDecl: declname='AlarmToTimerC__0__m_oneshot', quals=[] (at pp.c:3093)
      IdentifierType: names=['bool'] (at None)
  Decl: name='AlarmToTimerC__0__start', quals=[], storage=['inline', 'static'] (at pp.c:3095)
    FuncDecl: quals=None (at pp.c:3095)
      ParamList:  (at pp.c:3095)
        Decl: name='t0', quals=[], storage=[] (at pp.c:3095)
          TypeDecl: declname='t0', quals=[] (at pp.c:3095)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3095)
          TypeDecl: declname='dt', quals=[] (at pp.c:3095)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='oneshot', quals=[], storage=[] (at pp.c:3095)
          TypeDecl: declname='oneshot', quals=[] (at pp.c:3095)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__start', quals=[] (at pp.c:3095)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__stop', quals=[], storage=['inline', 'static'] (at pp.c:3097)
    FuncDecl: quals=None (at pp.c:3097)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__stop', quals=[] (at pp.c:3097)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__fired__runTask', quals=[], storage=['inline', 'static'] (at pp.c:3100)
    FuncDecl: quals=None (at pp.c:3100)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__fired__runTask', quals=[] (at pp.c:3100)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__fired', quals=[], storage=['inline', 'static'] (at pp.c:3107)
    FuncDecl: quals=None (at pp.c:3107)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__fired', quals=[] (at pp.c:3107)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__startOneShotAt', quals=[], storage=['inline', 'static'] (at pp.c:3109)
    FuncDecl: quals=None (at pp.c:3109)
      ParamList:  (at pp.c:3109)
        Decl: name='t0', quals=[], storage=[] (at pp.c:3109)
          TypeDecl: declname='t0', quals=[] (at pp.c:3109)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3109)
          TypeDecl: declname='dt', quals=[] (at pp.c:3109)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__startOneShotAt', quals=[] (at pp.c:3109)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__getNow', quals=[], storage=['inline', 'static'] (at pp.c:3112)
    FuncDecl: quals=None (at pp.c:3112)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__getNow', quals=[] (at pp.c:3112)
        IdentifierType: names=['uint32_t'] (at None)
  Decl: name='VirtualizeTimerC__0__updateFromTimer__postTask', quals=[], storage=['static'] (at pp.c:3114)
    FuncDecl: quals=None (at pp.c:3114)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__updateFromTimer__postTask', quals=[] (at pp.c:3114)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='VirtualizeTimerC__0__TimerFrom__getNow', quals=[], storage=['static'] (at pp.c:3116)
    FuncDecl: quals=None (at pp.c:3116)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__getNow', quals=[] (at pp.c:3116)
        IdentifierType: names=['uint32_t'] (at None)
  Decl: name='VirtualizeTimerC__0__TimerFrom__startOneShotAt', quals=[], storage=['static'] (at pp.c:3118)
    FuncDecl: quals=None (at pp.c:3118)
      ParamList:  (at pp.c:3118)
        Decl: name='t0', quals=[], storage=[] (at pp.c:3118)
          TypeDecl: declname='t0', quals=[] (at pp.c:3118)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3118)
          TypeDecl: declname='dt', quals=[] (at pp.c:3118)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__startOneShotAt', quals=[] (at pp.c:3118)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__TimerFrom__stop', quals=[], storage=['static'] (at pp.c:3120)
    FuncDecl: quals=None (at pp.c:3120)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__stop', quals=[] (at pp.c:3120)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__fired', quals=[], storage=['static'] (at pp.c:3125)
    FuncDecl: quals=None (at pp.c:3125)
      ParamList:  (at pp.c:3127)
        Decl: name='arg_0x1018be5d8', quals=[], storage=[] (at pp.c:3127)
          TypeDecl: declname='arg_0x1018be5d8', quals=[] (at pp.c:3127)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__fired', quals=[] (at pp.c:3125)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:3129)
    Enum: name='VirtualizeTimerC__0____nesc_unnamed4282' (at pp.c:3129)
      EnumeratorList:  (at pp.c:3131)
        Enumerator: name='VirtualizeTimerC__0__updateFromTimer' (at pp.c:3131)
          Constant: type='int', value='1U' (at pp.c:3131)
  Typedef: name='VirtualizeTimerC__0____nesc_sillytask_updateFromTimer', quals=[], storage=['typedef'] (at pp.c:3134)
    ArrayDecl:  (at pp.c:3134)
      TypeDecl: declname='VirtualizeTimerC__0____nesc_sillytask_updateFromTimer', quals=[] (at pp.c:3134)
        IdentifierType: names=['int'] (at None)
      ID: name='VirtualizeTimerC__0__updateFromTimer' (at pp.c:3134)
  Decl: name=None, quals=[], storage=[] (at pp.c:3136)
    Enum: name='VirtualizeTimerC__0____nesc_unnamed4283' (at pp.c:3136)
      EnumeratorList:  (at pp.c:3138)
        Enumerator: name='VirtualizeTimerC__0__NUM_TIMERS' (at pp.c:3138)
          Constant: type='int', value='4U' (at pp.c:3138)
        Enumerator: name='VirtualizeTimerC__0__END_OF_LIST' (at pp.c:3139)
          Constant: type='int', value='255' (at pp.c:3139)
  Typedef: name='VirtualizeTimerC__0__Timer_t', quals=[], storage=['typedef'] (at pp.c:3157)
    TypeDecl: declname='VirtualizeTimerC__0__Timer_t', quals=[] (at pp.c:3157)
      Struct: name='VirtualizeTimerC__0____nesc_unnamed4284', packed=False (at pp.c:3150)
        Decl: name='t0', quals=[], storage=[] (at 0)
          TypeDecl: declname='t0', quals=[] (at pp.c:3152)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at 0)
          TypeDecl: declname='dt', quals=[] (at pp.c:3153)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='isoneshot', quals=[], storage=[] (at 0)
          TypeDecl: declname='isoneshot', quals=[] (at pp.c:3154)
            IdentifierType: names=['bool'] (at None)
          Constant: type='int', value='1' (at pp.c:3154)
        Decl: name='isrunning', quals=[], storage=[] (at 0)
          TypeDecl: declname='isrunning', quals=[] (at pp.c:3155)
            IdentifierType: names=['bool'] (at None)
          Constant: type='int', value='1' (at pp.c:3155)
        Decl: name='_reserved', quals=[], storage=[] (at 0)
          TypeDecl: declname='_reserved', quals=[] (at pp.c:3156)
            IdentifierType: names=['bool'] (at None)
          Constant: type='int', value='6' (at pp.c:3156)
  Decl: name='VirtualizeTimerC__0__m_timers', quals=[], storage=[] (at pp.c:3159)
    ArrayDecl:  (at pp.c:3159)
      TypeDecl: declname='VirtualizeTimerC__0__m_timers', quals=[] (at pp.c:3159)
        IdentifierType: names=['VirtualizeTimerC__0__Timer_t'] (at None)
      ID: name='VirtualizeTimerC__0__NUM_TIMERS' (at pp.c:3159)
  Decl: name='VirtualizeTimerC__0__fireTimers', quals=[], storage=['static'] (at pp.c:3164)
    FuncDecl: quals=None (at pp.c:3164)
      ParamList:  (at pp.c:3164)
        Decl: name='now', quals=[], storage=[] (at pp.c:3164)
          TypeDecl: declname='now', quals=[] (at pp.c:3164)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__fireTimers', quals=[] (at pp.c:3164)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[], storage=['inline', 'static'] (at pp.c:3166)
    FuncDecl: quals=None (at pp.c:3166)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[] (at pp.c:3166)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__TimerFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:3168)
    FuncDecl: quals=None (at pp.c:3168)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__fired', quals=[] (at pp.c:3168)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__startTimer', quals=[], storage=['static'] (at pp.c:3173)
    FuncDecl: quals=None (at pp.c:3173)
      ParamList:  (at pp.c:3173)
        Decl: name='num', quals=[], storage=[] (at pp.c:3173)
          TypeDecl: declname='num', quals=[] (at pp.c:3173)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='t0', quals=[], storage=[] (at pp.c:3173)
          TypeDecl: declname='t0', quals=[] (at pp.c:3173)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3173)
          TypeDecl: declname='dt', quals=[] (at pp.c:3173)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='isoneshot', quals=[], storage=[] (at pp.c:3173)
          TypeDecl: declname='isoneshot', quals=[] (at pp.c:3173)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__startTimer', quals=[] (at pp.c:3173)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__startPeriodic', quals=[], storage=['inline', 'static'] (at pp.c:3183)
    FuncDecl: quals=None (at pp.c:3183)
      ParamList:  (at pp.c:3183)
        Decl: name='num', quals=[], storage=[] (at pp.c:3183)
          TypeDecl: declname='num', quals=[] (at pp.c:3183)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3183)
          TypeDecl: declname='dt', quals=[] (at pp.c:3183)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__startPeriodic', quals=[] (at pp.c:3183)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__startOneShot', quals=[], storage=['inline', 'static'] (at pp.c:3188)
    FuncDecl: quals=None (at pp.c:3188)
      ParamList:  (at pp.c:3188)
        Decl: name='num', quals=[], storage=[] (at pp.c:3188)
          TypeDecl: declname='num', quals=[] (at pp.c:3188)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3188)
          TypeDecl: declname='dt', quals=[] (at pp.c:3188)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__startOneShot', quals=[] (at pp.c:3188)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__stop', quals=[], storage=['inline', 'static'] (at pp.c:3193)
    FuncDecl: quals=None (at pp.c:3193)
      ParamList:  (at pp.c:3193)
        Decl: name='num', quals=[], storage=[] (at pp.c:3193)
          TypeDecl: declname='num', quals=[] (at pp.c:3193)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__stop', quals=[] (at pp.c:3193)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__isRunning', quals=[], storage=['inline', 'static'] (at pp.c:3198)
    FuncDecl: quals=None (at pp.c:3198)
      ParamList:  (at pp.c:3198)
        Decl: name='num', quals=[], storage=[] (at pp.c:3198)
          TypeDecl: declname='num', quals=[] (at pp.c:3198)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__isRunning', quals=[] (at pp.c:3198)
        IdentifierType: names=['bool'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:3200)
    FuncDecl: quals=None (at pp.c:3200)
      ParamList:  (at pp.c:3200)
        Decl: name='num', quals=[], storage=[] (at pp.c:3200)
          TypeDecl: declname='num', quals=[] (at pp.c:3200)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__default__fired', quals=[] (at pp.c:3200)
        IdentifierType: names=['void'] (at None)
  Decl: name='CounterToLocalTimeC__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:3202)
    FuncDecl: quals=None (at pp.c:3202)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CounterToLocalTimeC__0__Counter__overflow', quals=[] (at pp.c:3202)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__Read__readDone', quals=[], storage=['static'] (at pp.c:3204)
    FuncDecl: quals=None (at pp.c:3204)
      ParamList:  (at pp.c:3206)
        Decl: name='arg_0x101966db0', quals=[], storage=[] (at pp.c:3206)
          TypeDecl: declname='arg_0x101966db0', quals=[] (at pp.c:3206)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:3208)
          TypeDecl: declname='result', quals=[] (at pp.c:3208)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='val', quals=[], storage=[] (at pp.c:3208)
          TypeDecl: declname='val', quals=[] (at pp.c:3208)
            IdentifierType: names=['AdcP__Read__val_t'] (at None)
      TypeDecl: declname='AdcP__Read__readDone', quals=[] (at pp.c:3204)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__ReadNow__readDone', quals=[], storage=['static'] (at pp.c:3210)
    FuncDecl: quals=None (at pp.c:3210)
      ParamList:  (at pp.c:3212)
        Decl: name='arg_0x101961b18', quals=[], storage=[] (at pp.c:3212)
          TypeDecl: declname='arg_0x101961b18', quals=[] (at pp.c:3212)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:3214)
          TypeDecl: declname='result', quals=[] (at pp.c:3214)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='val', quals=[], storage=[] (at pp.c:3214)
          TypeDecl: declname='val', quals=[] (at pp.c:3214)
            IdentifierType: names=['AdcP__ReadNow__val_t'] (at None)
      TypeDecl: declname='AdcP__ReadNow__readDone', quals=[] (at pp.c:3210)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__ResourceReadNow__granted', quals=[], storage=['static'] (at pp.c:3216)
    FuncDecl: quals=None (at pp.c:3216)
      ParamList:  (at pp.c:3218)
        Decl: name='arg_0x10195e748', quals=[], storage=[] (at pp.c:3218)
          TypeDecl: declname='arg_0x10195e748', quals=[] (at pp.c:3218)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceReadNow__granted', quals=[] (at pp.c:3216)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__Config__getConfiguration', quals=[], storage=['static'] (at pp.c:3220)
    FuncDecl: quals=None (at pp.c:3220)
      ParamList:  (at pp.c:3222)
        Decl: name='arg_0x101959350', quals=[], storage=[] (at pp.c:3222)
          TypeDecl: declname='arg_0x101959350', quals=[] (at pp.c:3222)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__Config__getConfiguration', quals=[] (at pp.c:3220)
        IdentifierType: names=['AdcP__Config__adc_config_t'] (at None)
  Decl: name='AdcP__SingleChannel__getData', quals=[], storage=['static'] (at pp.c:3224)
    FuncDecl: quals=None (at pp.c:3224)
      ParamList:  (at pp.c:3226)
        Decl: name='arg_0x101977910', quals=[], storage=[] (at pp.c:3226)
          TypeDecl: declname='arg_0x101977910', quals=[] (at pp.c:3226)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__SingleChannel__getData', quals=[] (at pp.c:3224)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__SingleChannel__configureSingle', quals=[], storage=['static'] (at pp.c:3228)
    FuncDecl: quals=None (at pp.c:3228)
      ParamList:  (at pp.c:3230)
        Decl: name='arg_0x101977910', quals=[], storage=[] (at pp.c:3230)
          TypeDecl: declname='arg_0x101977910', quals=[] (at pp.c:3230)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:3232)
          PtrDecl: quals=[] (at pp.c:3232)
            TypeDecl: declname='config', quals=['const'] (at pp.c:3232)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
      TypeDecl: declname='AdcP__SingleChannel__configureSingle', quals=[] (at pp.c:3228)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__ResourceRead__release', quals=[], storage=['static'] (at pp.c:3234)
    FuncDecl: quals=None (at pp.c:3234)
      ParamList:  (at pp.c:3236)
        Decl: name='arg_0x10195daa0', quals=[], storage=[] (at pp.c:3236)
          TypeDecl: declname='arg_0x10195daa0', quals=[] (at pp.c:3236)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceRead__release', quals=[] (at pp.c:3234)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__ResourceRead__request', quals=[], storage=['static'] (at pp.c:3238)
    FuncDecl: quals=None (at pp.c:3238)
      ParamList:  (at pp.c:3240)
        Decl: name='arg_0x10195daa0', quals=[], storage=[] (at pp.c:3240)
          TypeDecl: declname='arg_0x10195daa0', quals=[] (at pp.c:3240)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceRead__request', quals=[] (at pp.c:3238)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__readDone__postTask', quals=[], storage=['static'] (at pp.c:3242)
    FuncDecl: quals=None (at pp.c:3242)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcP__readDone__postTask', quals=[] (at pp.c:3242)
        IdentifierType: names=['error_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:3244)
    Enum: name='AdcP____nesc_unnamed4285' (at pp.c:3244)
      EnumeratorList:  (at pp.c:3246)
        Enumerator: name='AdcP__readDone' (at pp.c:3246)
          Constant: type='int', value='2U' (at pp.c:3246)
  Typedef: name='AdcP____nesc_sillytask_readDone', quals=[], storage=['typedef'] (at pp.c:3249)
    ArrayDecl:  (at pp.c:3249)
      TypeDecl: declname='AdcP____nesc_sillytask_readDone', quals=[] (at pp.c:3249)
        IdentifierType: names=['int'] (at None)
      ID: name='AdcP__readDone' (at pp.c:3249)
  Decl: name=None, quals=[], storage=[] (at pp.c:3251)
    Enum: name='AdcP____nesc_unnamed4286' (at pp.c:3251)
      EnumeratorList:  (at pp.c:3252)
        Enumerator: name='AdcP__STATE_READ' (at pp.c:3252)
        Enumerator: name='AdcP__STATE_READNOW' (at pp.c:3253)
        Enumerator: name='AdcP__STATE_READNOW_INVALID_CONFIG' (at pp.c:3254)
  Decl: name='AdcP__state', quals=[], storage=[] (at pp.c:3258)
    TypeDecl: declname='AdcP__state', quals=[] (at pp.c:3258)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='AdcP__owner', quals=[], storage=[] (at pp.c:3259)
    TypeDecl: declname='AdcP__owner', quals=[] (at pp.c:3259)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='AdcP__value', quals=[], storage=[] (at pp.c:3260)
    TypeDecl: declname='AdcP__value', quals=[] (at pp.c:3260)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='AdcP__configure', quals=[], storage=['static'] (at pp.c:3262)
    FuncDecl: quals=None (at pp.c:3262)
      ParamList:  (at pp.c:3262)
        Decl: name='client', quals=[], storage=[] (at pp.c:3262)
          TypeDecl: declname='client', quals=[] (at pp.c:3262)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__configure', quals=[] (at pp.c:3262)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__Read__read', quals=[], storage=['inline', 'static'] (at pp.c:3272)
    FuncDecl: quals=None (at pp.c:3272)
      ParamList:  (at pp.c:3272)
        Decl: name='client', quals=[], storage=[] (at pp.c:3272)
          TypeDecl: declname='client', quals=[] (at pp.c:3272)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__Read__read', quals=[] (at pp.c:3272)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__ResourceRead__granted', quals=[], storage=['static'] (at pp.c:3277)
    FuncDecl: quals=None (at pp.c:3277)
      ParamList:  (at pp.c:3277)
        Decl: name='client', quals=[], storage=[] (at pp.c:3277)
          TypeDecl: declname='client', quals=[] (at pp.c:3277)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceRead__granted', quals=[] (at pp.c:3277)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__SubResourceReadNow__granted', quals=[], storage=['static'] (at pp.c:3279)
    FuncDecl: quals=None (at pp.c:3279)
      ParamList:  (at pp.c:3279)
        Decl: name='nowClient', quals=[], storage=[] (at pp.c:3279)
          TypeDecl: declname='nowClient', quals=[] (at pp.c:3279)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__SubResourceReadNow__granted', quals=[] (at pp.c:3279)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__readDone__runTask', quals=[], storage=['inline', 'static'] (at pp.c:3281)
    FuncDecl: quals=None (at pp.c:3281)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcP__readDone__runTask', quals=[] (at pp.c:3281)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__SingleChannel__singleDataReady', quals=[], storage=['static'] (at pp.c:3287)
    FuncDecl: quals=None (at pp.c:3287)
      ParamList:  (at pp.c:3287)
        Decl: name='client', quals=[], storage=[] (at pp.c:3287)
          TypeDecl: declname='client', quals=[] (at pp.c:3287)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:3287)
          TypeDecl: declname='data', quals=[] (at pp.c:3287)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcP__SingleChannel__singleDataReady', quals=[] (at pp.c:3287)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__SingleChannel__multipleDataReady', quals=[], storage=['inline', 'static'] (at pp.c:3289)
    FuncDecl: quals=None (at pp.c:3289)
      ParamList:  (at pp.c:3289)
        Decl: name='client', quals=[], storage=[] (at pp.c:3289)
          TypeDecl: declname='client', quals=[] (at pp.c:3289)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:3290)
          PtrDecl: quals=[] (at pp.c:3290)
            TypeDecl: declname='buf', quals=[] (at pp.c:3290)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:3290)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:3290)
            IdentifierType: names=['uint16_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3289)
        TypeDecl: declname='AdcP__SingleChannel__multipleDataReady', quals=[] (at pp.c:3289)
          IdentifierType: names=['uint16_t'] (at None)
  Decl: name='AdcP__ResourceRead__default__request', quals=[], storage=['inline', 'static'] (at pp.c:3296)
    FuncDecl: quals=None (at pp.c:3296)
      ParamList:  (at pp.c:3296)
        Decl: name='client', quals=[], storage=[] (at pp.c:3296)
          TypeDecl: declname='client', quals=[] (at pp.c:3296)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceRead__default__request', quals=[] (at pp.c:3296)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__ResourceRead__default__release', quals=[], storage=['inline', 'static'] (at pp.c:3298)
    FuncDecl: quals=None (at pp.c:3298)
      ParamList:  (at pp.c:3298)
        Decl: name='client', quals=[], storage=[] (at pp.c:3298)
          TypeDecl: declname='client', quals=[] (at pp.c:3298)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceRead__default__release', quals=[] (at pp.c:3298)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__Read__default__readDone', quals=[], storage=['inline', 'static'] (at pp.c:3300)
    FuncDecl: quals=None (at pp.c:3300)
      ParamList:  (at pp.c:3300)
        Decl: name='client', quals=[], storage=[] (at pp.c:3300)
          TypeDecl: declname='client', quals=[] (at pp.c:3300)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:3300)
          TypeDecl: declname='result', quals=[] (at pp.c:3300)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='val', quals=[], storage=[] (at pp.c:3300)
          TypeDecl: declname='val', quals=[] (at pp.c:3300)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcP__Read__default__readDone', quals=[] (at pp.c:3300)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__ResourceReadNow__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:3305)
    FuncDecl: quals=None (at pp.c:3305)
      ParamList:  (at pp.c:3305)
        Decl: name='nowClient', quals=[], storage=[] (at pp.c:3305)
          TypeDecl: declname='nowClient', quals=[] (at pp.c:3305)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceReadNow__default__granted', quals=[] (at pp.c:3305)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__ReadNow__default__readDone', quals=[], storage=['inline', 'static'] (at pp.c:3306)
    FuncDecl: quals=None (at pp.c:3306)
      ParamList:  (at pp.c:3306)
        Decl: name='client', quals=[], storage=[] (at pp.c:3306)
          TypeDecl: declname='client', quals=[] (at pp.c:3306)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:3306)
          TypeDecl: declname='result', quals=[] (at pp.c:3306)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='val', quals=[], storage=[] (at pp.c:3306)
          TypeDecl: declname='val', quals=[] (at pp.c:3306)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcP__ReadNow__default__readDone', quals=[] (at pp.c:3306)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__SingleChannel__default__getData', quals=[], storage=['inline', 'static'] (at pp.c:3308)
    FuncDecl: quals=None (at pp.c:3308)
      ParamList:  (at pp.c:3308)
        Decl: name='client', quals=[], storage=[] (at pp.c:3308)
          TypeDecl: declname='client', quals=[] (at pp.c:3308)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__SingleChannel__default__getData', quals=[] (at pp.c:3308)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__defaultConfig', quals=['const'], storage=[] (at pp.c:3313)
    TypeDecl: declname='AdcP__defaultConfig', quals=['const'] (at pp.c:3313)
      IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    ExprList:  (at pp.c:3313)
      ID: name='INPUT_CHANNEL_NONE' (at pp.c:3313)
      Constant: type='int', value='0' (at pp.c:3313)
      Constant: type='int', value='0' (at pp.c:3313)
      Constant: type='int', value='0' (at pp.c:3313)
      Constant: type='int', value='0' (at pp.c:3313)
      Constant: type='int', value='0' (at pp.c:3313)
      Constant: type='int', value='0' (at pp.c:3313)
      Constant: type='int', value='0' (at pp.c:3313)
  Decl: name='AdcP__Config__default__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:3315)
    FuncDecl: quals=None (at pp.c:3315)
      ParamList:  (at pp.c:3315)
        Decl: name='client', quals=[], storage=[] (at pp.c:3315)
          TypeDecl: declname='client', quals=[] (at pp.c:3315)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3314)
        TypeDecl: declname='AdcP__Config__default__getConfiguration', quals=['const'] (at pp.c:3315)
          IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name='AdcP__SingleChannel__default__configureSingle', quals=[], storage=['inline', 'static'] (at pp.c:3319)
    FuncDecl: quals=None (at pp.c:3319)
      ParamList:  (at pp.c:3319)
        Decl: name='client', quals=[], storage=[] (at pp.c:3319)
          TypeDecl: declname='client', quals=[] (at pp.c:3319)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:3320)
          PtrDecl: quals=[] (at pp.c:3320)
            TypeDecl: declname='config', quals=['const'] (at pp.c:3320)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
      TypeDecl: declname='AdcP__SingleChannel__default__configureSingle', quals=[] (at pp.c:3319)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__MultiChannel__dataReady', quals=[], storage=['static'] (at pp.c:3322)
    FuncDecl: quals=None (at pp.c:3322)
      ParamList:  (at pp.c:3324)
        Decl: name='arg_0x1019da0c8', quals=[], storage=[] (at pp.c:3324)
          TypeDecl: declname='arg_0x1019da0c8', quals=[] (at pp.c:3324)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buffer', quals=[], storage=[] (at pp.c:3326)
          PtrDecl: quals=[] (at pp.c:3326)
            TypeDecl: declname='buffer', quals=[] (at pp.c:3326)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:3326)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:3326)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__MultiChannel__dataReady', quals=[] (at pp.c:3322)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__getCtl0', quals=[], storage=['static'] (at pp.c:3328)
    FuncDecl: quals=None (at pp.c:3328)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__getCtl0', quals=[] (at pp.c:3328)
        IdentifierType: names=['adc12ctl0_t'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__getMCtl', quals=[], storage=['static'] (at pp.c:3330)
    FuncDecl: quals=None (at pp.c:3330)
      ParamList:  (at pp.c:3330)
        Decl: name='idx', quals=[], storage=[] (at pp.c:3330)
          TypeDecl: declname='idx', quals=[] (at pp.c:3330)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__getMCtl', quals=[] (at pp.c:3330)
        IdentifierType: names=['adc12memctl_t'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__resetIFGs', quals=[], storage=['static'] (at pp.c:3332)
    FuncDecl: quals=None (at pp.c:3332)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__resetIFGs', quals=[] (at pp.c:3332)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__setMCtl', quals=[], storage=['static'] (at pp.c:3334)
    FuncDecl: quals=None (at pp.c:3334)
      ParamList:  (at pp.c:3334)
        Decl: name='idx', quals=[], storage=[] (at pp.c:3334)
          TypeDecl: declname='idx', quals=[] (at pp.c:3334)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='memControl', quals=[], storage=[] (at pp.c:3334)
          TypeDecl: declname='memControl', quals=[] (at pp.c:3334)
            IdentifierType: names=['adc12memctl_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__setMCtl', quals=[] (at pp.c:3334)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__startConversion', quals=[], storage=['static'] (at pp.c:3336)
    FuncDecl: quals=None (at pp.c:3336)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__startConversion', quals=[] (at pp.c:3336)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__setCtl0', quals=[], storage=['static'] (at pp.c:3338)
    FuncDecl: quals=None (at pp.c:3338)
      ParamList:  (at pp.c:3338)
        Decl: name='control0', quals=[], storage=[] (at pp.c:3338)
          TypeDecl: declname='control0', quals=[] (at pp.c:3338)
            IdentifierType: names=['adc12ctl0_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__setCtl0', quals=[] (at pp.c:3338)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__getMem', quals=[], storage=['static'] (at pp.c:3340)
    FuncDecl: quals=None (at pp.c:3340)
      ParamList:  (at pp.c:3340)
        Decl: name='idx', quals=[], storage=[] (at pp.c:3340)
          TypeDecl: declname='idx', quals=[] (at pp.c:3340)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__getMem', quals=[] (at pp.c:3340)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__setIEFlags', quals=[], storage=['static'] (at pp.c:3346)
    FuncDecl: quals=None (at pp.c:3346)
      ParamList:  (at pp.c:3346)
        Decl: name='mask', quals=[], storage=[] (at pp.c:3346)
          TypeDecl: declname='mask', quals=[] (at pp.c:3346)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__setIEFlags', quals=[] (at pp.c:3346)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__stopConversion', quals=[], storage=['static'] (at pp.c:3348)
    FuncDecl: quals=None (at pp.c:3348)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__stopConversion', quals=[] (at pp.c:3348)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__setCtl1', quals=[], storage=['static'] (at pp.c:3350)
    FuncDecl: quals=None (at pp.c:3350)
      ParamList:  (at pp.c:3350)
        Decl: name='control1', quals=[], storage=[] (at pp.c:3350)
          TypeDecl: declname='control1', quals=[] (at pp.c:3350)
            IdentifierType: names=['adc12ctl1_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__setCtl1', quals=[] (at pp.c:3350)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port64__makeInput', quals=[], storage=['static'] (at pp.c:3352)
    FuncDecl: quals=None (at pp.c:3352)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port64__makeInput', quals=[] (at pp.c:3352)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port64__selectIOFunc', quals=[], storage=['static'] (at pp.c:3354)
    FuncDecl: quals=None (at pp.c:3354)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port64__selectIOFunc', quals=[] (at pp.c:3354)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port64__selectModuleFunc', quals=[], storage=['static'] (at pp.c:3356)
    FuncDecl: quals=None (at pp.c:3356)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port64__selectModuleFunc', quals=[] (at pp.c:3356)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__CompareA1__setEvent', quals=[], storage=['static'] (at pp.c:3358)
    FuncDecl: quals=None (at pp.c:3358)
      ParamList:  (at pp.c:3358)
        Decl: name='time', quals=[], storage=[] (at pp.c:3358)
          TypeDecl: declname='time', quals=[] (at pp.c:3358)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__CompareA1__setEvent', quals=[] (at pp.c:3358)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__ControlA0__setControl', quals=[], storage=['static'] (at pp.c:3360)
    FuncDecl: quals=None (at pp.c:3360)
      ParamList:  (at pp.c:3360)
        Decl: name='control', quals=[], storage=[] (at pp.c:3360)
          TypeDecl: declname='control', quals=[] (at pp.c:3360)
            IdentifierType: names=['msp430_compare_control_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__ControlA0__setControl', quals=[] (at pp.c:3360)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port62__makeInput', quals=[], storage=['static'] (at pp.c:3362)
    FuncDecl: quals=None (at pp.c:3362)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port62__makeInput', quals=[] (at pp.c:3362)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port62__selectIOFunc', quals=[], storage=['static'] (at pp.c:3364)
    FuncDecl: quals=None (at pp.c:3364)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port62__selectIOFunc', quals=[] (at pp.c:3364)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port62__selectModuleFunc', quals=[], storage=['static'] (at pp.c:3366)
    FuncDecl: quals=None (at pp.c:3366)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port62__selectModuleFunc', quals=[] (at pp.c:3366)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Overflow__memOverflow', quals=[], storage=['static'] (at pp.c:3368)
    FuncDecl: quals=None (at pp.c:3368)
      ParamList:  (at pp.c:3370)
        Decl: name='arg_0x1019d9020', quals=[], storage=[] (at pp.c:3370)
          TypeDecl: declname='arg_0x1019d9020', quals=[] (at pp.c:3370)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Overflow__memOverflow', quals=[] (at pp.c:3368)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Overflow__conversionTimeOverflow', quals=[], storage=['static'] (at pp.c:3372)
    FuncDecl: quals=None (at pp.c:3372)
      ParamList:  (at pp.c:3374)
        Decl: name='arg_0x1019d9020', quals=[], storage=[] (at pp.c:3374)
          TypeDecl: declname='arg_0x1019d9020', quals=[] (at pp.c:3374)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Overflow__conversionTimeOverflow', quals=[] (at pp.c:3372)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port67__makeInput', quals=[], storage=['static'] (at pp.c:3376)
    FuncDecl: quals=None (at pp.c:3376)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port67__makeInput', quals=[] (at pp.c:3376)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port67__selectIOFunc', quals=[], storage=['static'] (at pp.c:3378)
    FuncDecl: quals=None (at pp.c:3378)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port67__selectIOFunc', quals=[] (at pp.c:3378)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port67__selectModuleFunc', quals=[], storage=['static'] (at pp.c:3380)
    FuncDecl: quals=None (at pp.c:3380)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port67__selectModuleFunc', quals=[] (at pp.c:3380)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port60__makeInput', quals=[], storage=['static'] (at pp.c:3382)
    FuncDecl: quals=None (at pp.c:3382)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port60__makeInput', quals=[] (at pp.c:3382)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port60__selectIOFunc', quals=[], storage=['static'] (at pp.c:3384)
    FuncDecl: quals=None (at pp.c:3384)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port60__selectIOFunc', quals=[] (at pp.c:3384)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port60__selectModuleFunc', quals=[], storage=['static'] (at pp.c:3386)
    FuncDecl: quals=None (at pp.c:3386)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port60__selectModuleFunc', quals=[] (at pp.c:3386)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port65__makeInput', quals=[], storage=['static'] (at pp.c:3388)
    FuncDecl: quals=None (at pp.c:3388)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port65__makeInput', quals=[] (at pp.c:3388)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port65__selectIOFunc', quals=[], storage=['static'] (at pp.c:3390)
    FuncDecl: quals=None (at pp.c:3390)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port65__selectIOFunc', quals=[] (at pp.c:3390)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port65__selectModuleFunc', quals=[], storage=['static'] (at pp.c:3392)
    FuncDecl: quals=None (at pp.c:3392)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port65__selectModuleFunc', quals=[] (at pp.c:3392)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__TimerA__clear', quals=[], storage=['static'] (at pp.c:3394)
    FuncDecl: quals=None (at pp.c:3394)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__TimerA__clear', quals=[] (at pp.c:3394)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__TimerA__setClockSource', quals=[], storage=['static'] (at pp.c:3397)
    FuncDecl: quals=None (at pp.c:3397)
      ParamList:  (at pp.c:3397)
        Decl: name='clockSource', quals=[], storage=[] (at pp.c:3397)
          TypeDecl: declname='clockSource', quals=[] (at pp.c:3397)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__TimerA__setClockSource', quals=[] (at pp.c:3397)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__TimerA__disableEvents', quals=[], storage=['static'] (at pp.c:3399)
    FuncDecl: quals=None (at pp.c:3399)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__TimerA__disableEvents', quals=[] (at pp.c:3399)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__TimerA__setMode', quals=[], storage=['static'] (at pp.c:3401)
    FuncDecl: quals=None (at pp.c:3401)
      ParamList:  (at pp.c:3401)
        Decl: name='mode', quals=[], storage=[] (at pp.c:3401)
          TypeDecl: declname='mode', quals=[] (at pp.c:3401)
            IdentifierType: names=['int'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__TimerA__setMode', quals=[] (at pp.c:3401)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__TimerA__setInputDivider', quals=[], storage=['static'] (at pp.c:3407)
    FuncDecl: quals=None (at pp.c:3407)
      ParamList:  (at pp.c:3407)
        Decl: name='inputDivider', quals=[], storage=[] (at pp.c:3407)
          TypeDecl: declname='inputDivider', quals=[] (at pp.c:3407)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__TimerA__setInputDivider', quals=[] (at pp.c:3407)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__ADCArbiterInfo__userId', quals=[], storage=['static'] (at pp.c:3409)
    FuncDecl: quals=None (at pp.c:3409)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__ADCArbiterInfo__userId', quals=[] (at pp.c:3409)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430Adc12ImplP__ControlA1__setControl', quals=[], storage=['static'] (at pp.c:3411)
    FuncDecl: quals=None (at pp.c:3411)
      ParamList:  (at pp.c:3411)
        Decl: name='control', quals=[], storage=[] (at pp.c:3411)
          TypeDecl: declname='control', quals=[] (at pp.c:3411)
            IdentifierType: names=['msp430_compare_control_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__ControlA1__setControl', quals=[] (at pp.c:3411)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__multipleDataReady', quals=[], storage=['static'] (at pp.c:3413)
    FuncDecl: quals=None (at pp.c:3413)
      ParamList:  (at pp.c:3415)
        Decl: name='arg_0x1019dcac0', quals=[], storage=[] (at pp.c:3415)
          TypeDecl: declname='arg_0x1019dcac0', quals=[] (at pp.c:3415)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buffer', quals=[], storage=[] (at pp.c:3417)
          PtrDecl: quals=[] (at pp.c:3417)
            TypeDecl: declname='buffer', quals=[] (at pp.c:3417)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:3417)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:3417)
            IdentifierType: names=['uint16_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3413)
        TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__multipleDataReady', quals=[] (at pp.c:3413)
          IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__singleDataReady', quals=[], storage=['static'] (at pp.c:3419)
    FuncDecl: quals=None (at pp.c:3419)
      ParamList:  (at pp.c:3421)
        Decl: name='arg_0x1019dcac0', quals=[], storage=[] (at pp.c:3421)
          TypeDecl: declname='arg_0x1019dcac0', quals=[] (at pp.c:3421)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:3423)
          TypeDecl: declname='data', quals=[] (at pp.c:3423)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__singleDataReady', quals=[] (at pp.c:3419)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__Port63__makeInput', quals=[], storage=['static'] (at pp.c:3425)
    FuncDecl: quals=None (at pp.c:3425)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port63__makeInput', quals=[] (at pp.c:3425)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port63__selectIOFunc', quals=[], storage=['static'] (at pp.c:3427)
    FuncDecl: quals=None (at pp.c:3427)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port63__selectIOFunc', quals=[] (at pp.c:3427)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port63__selectModuleFunc', quals=[], storage=['static'] (at pp.c:3429)
    FuncDecl: quals=None (at pp.c:3429)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port63__selectModuleFunc', quals=[] (at pp.c:3429)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__CompareA0__setEvent', quals=[], storage=['static'] (at pp.c:3431)
    FuncDecl: quals=None (at pp.c:3431)
      ParamList:  (at pp.c:3431)
        Decl: name='time', quals=[], storage=[] (at pp.c:3431)
          TypeDecl: declname='time', quals=[] (at pp.c:3431)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__CompareA0__setEvent', quals=[] (at pp.c:3431)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port61__makeInput', quals=[], storage=['static'] (at pp.c:3433)
    FuncDecl: quals=None (at pp.c:3433)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port61__makeInput', quals=[] (at pp.c:3433)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port61__selectIOFunc', quals=[], storage=['static'] (at pp.c:3435)
    FuncDecl: quals=None (at pp.c:3435)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port61__selectIOFunc', quals=[] (at pp.c:3435)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port61__selectModuleFunc', quals=[], storage=['static'] (at pp.c:3437)
    FuncDecl: quals=None (at pp.c:3437)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port61__selectModuleFunc', quals=[] (at pp.c:3437)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port66__makeInput', quals=[], storage=['static'] (at pp.c:3439)
    FuncDecl: quals=None (at pp.c:3439)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port66__makeInput', quals=[] (at pp.c:3439)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port66__selectIOFunc', quals=[], storage=['static'] (at pp.c:3441)
    FuncDecl: quals=None (at pp.c:3441)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port66__selectIOFunc', quals=[] (at pp.c:3441)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port66__selectModuleFunc', quals=[], storage=['static'] (at pp.c:3443)
    FuncDecl: quals=None (at pp.c:3443)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port66__selectModuleFunc', quals=[] (at pp.c:3443)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:3445)
    Enum: name='Msp430Adc12ImplP____nesc_unnamed4287' (at pp.c:3445)
      EnumeratorList:  (at pp.c:3446)
        Enumerator: name='Msp430Adc12ImplP__SINGLE_DATA' (at pp.c:3446)
          Constant: type='int', value='1' (at pp.c:3446)
        Enumerator: name='Msp430Adc12ImplP__SINGLE_DATA_REPEAT' (at pp.c:3447)
          Constant: type='int', value='2' (at pp.c:3447)
        Enumerator: name='Msp430Adc12ImplP__MULTIPLE_DATA' (at pp.c:3448)
          Constant: type='int', value='4' (at pp.c:3448)
        Enumerator: name='Msp430Adc12ImplP__MULTIPLE_DATA_REPEAT' (at pp.c:3449)
          Constant: type='int', value='8' (at pp.c:3449)
        Enumerator: name='Msp430Adc12ImplP__MULTI_CHANNEL' (at pp.c:3450)
          Constant: type='int', value='16' (at pp.c:3450)
        Enumerator: name='Msp430Adc12ImplP__CONVERSION_MODE_MASK' (at pp.c:3451)
          Constant: type='int', value='0x1F' (at pp.c:3451)
        Enumerator: name='Msp430Adc12ImplP__ADC_BUSY' (at pp.c:3453)
          Constant: type='int', value='32' (at pp.c:3453)
        Enumerator: name='Msp430Adc12ImplP__USE_TIMERA' (at pp.c:3454)
          Constant: type='int', value='64' (at pp.c:3454)
        Enumerator: name='Msp430Adc12ImplP__ADC_OVERFLOW' (at pp.c:3455)
          Constant: type='int', value='128' (at pp.c:3455)
  Decl: name='Msp430Adc12ImplP__state', quals=[], storage=[] (at pp.c:3458)
    TypeDecl: declname='Msp430Adc12ImplP__state', quals=[] (at pp.c:3458)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430Adc12ImplP__resultBufferLength', quals=[], storage=[] (at pp.c:3460)
    TypeDecl: declname='Msp430Adc12ImplP__resultBufferLength', quals=[] (at pp.c:3460)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430Adc12ImplP__resultBufferStart', quals=[], storage=[] (at pp.c:3461)
    PtrDecl: quals=[] (at pp.c:3461)
      TypeDecl: declname='Msp430Adc12ImplP__resultBufferStart', quals=[] (at pp.c:3461)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430Adc12ImplP__resultBufferIndex', quals=[], storage=[] (at pp.c:3462)
    TypeDecl: declname='Msp430Adc12ImplP__resultBufferIndex', quals=[] (at pp.c:3462)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430Adc12ImplP__numChannels', quals=[], storage=[] (at pp.c:3463)
    TypeDecl: declname='Msp430Adc12ImplP__numChannels', quals=[] (at pp.c:3463)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430Adc12ImplP__clientID', quals=[], storage=[] (at pp.c:3464)
    TypeDecl: declname='Msp430Adc12ImplP__clientID', quals=[] (at pp.c:3464)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430Adc12ImplP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:3466)
    FuncDecl: quals=None (at pp.c:3466)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Init__init', quals=[] (at pp.c:3466)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__prepareTimerA', quals=[], storage=['inline', 'static'] (at pp.c:3477)
    FuncDecl: quals=None (at pp.c:3477)
      ParamList:  (at pp.c:3477)
        Decl: name='interval', quals=[], storage=[] (at pp.c:3477)
          TypeDecl: declname='interval', quals=[] (at pp.c:3477)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='csSAMPCON', quals=[], storage=[] (at pp.c:3477)
          TypeDecl: declname='csSAMPCON', quals=[] (at pp.c:3477)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='cdSAMPCON', quals=[], storage=[] (at pp.c:3477)
          TypeDecl: declname='cdSAMPCON', quals=[] (at pp.c:3477)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__prepareTimerA', quals=[] (at pp.c:3477)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__startTimerA', quals=[], storage=['inline', 'static'] (at pp.c:3479)
    FuncDecl: quals=None (at pp.c:3479)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__startTimerA', quals=[] (at pp.c:3479)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__configureAdcPin', quals=[], storage=['inline', 'static'] (at pp.c:3481)
    FuncDecl: quals=None (at pp.c:3481)
      ParamList:  (at pp.c:3481)
        Decl: name='inch', quals=[], storage=[] (at pp.c:3481)
          TypeDecl: declname='inch', quals=[] (at pp.c:3481)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__configureAdcPin', quals=[] (at pp.c:3481)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__resetAdcPin', quals=[], storage=['static'] (at pp.c:3483)
    FuncDecl: quals=None (at pp.c:3483)
      ParamList:  (at pp.c:3483)
        Decl: name='inch', quals=[], storage=[] (at pp.c:3483)
          TypeDecl: declname='inch', quals=[] (at pp.c:3483)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__resetAdcPin', quals=[] (at pp.c:3483)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__configureSingle', quals=[], storage=['static'] (at pp.c:3485)
    FuncDecl: quals=None (at pp.c:3485)
      ParamList:  (at pp.c:3485)
        Decl: name='id', quals=[], storage=[] (at pp.c:3485)
          TypeDecl: declname='id', quals=[] (at pp.c:3485)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:3486)
          PtrDecl: quals=[] (at pp.c:3486)
            TypeDecl: declname='config', quals=['const'] (at pp.c:3486)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__configureSingle', quals=[] (at pp.c:3485)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__configureMultiple', quals=[], storage=['inline', 'static'] (at pp.c:3488)
    FuncDecl: quals=None (at pp.c:3488)
      ParamList:  (at pp.c:3488)
        Decl: name='id', quals=[], storage=[] (at pp.c:3488)
          TypeDecl: declname='id', quals=[] (at pp.c:3488)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:3489)
          PtrDecl: quals=[] (at pp.c:3489)
            TypeDecl: declname='config', quals=['const'] (at pp.c:3489)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:3490)
          PtrDecl: quals=[] (at pp.c:3490)
            TypeDecl: declname='buf', quals=[] (at pp.c:3490)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:3490)
          TypeDecl: declname='length', quals=[] (at pp.c:3490)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='jiffies', quals=[], storage=[] (at pp.c:3490)
          TypeDecl: declname='jiffies', quals=[] (at pp.c:3490)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__configureMultiple', quals=[] (at pp.c:3488)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__getData', quals=[], storage=['static'] (at pp.c:3492)
    FuncDecl: quals=None (at pp.c:3492)
      ParamList:  (at pp.c:3492)
        Decl: name='id', quals=[], storage=[] (at pp.c:3492)
          TypeDecl: declname='id', quals=[] (at pp.c:3492)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__getData', quals=[] (at pp.c:3492)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__stopConversion', quals=[], storage=['static'] (at pp.c:3494)
    FuncDecl: quals=None (at pp.c:3494)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__stopConversion', quals=[] (at pp.c:3494)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__TimerA__overflow', quals=[], storage=['inline', 'static'] (at pp.c:3496)
    FuncDecl: quals=None (at pp.c:3496)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__TimerA__overflow', quals=[] (at pp.c:3496)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__CompareA0__fired', quals=[], storage=['inline', 'static'] (at pp.c:3497)
    FuncDecl: quals=None (at pp.c:3497)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__CompareA0__fired', quals=[] (at pp.c:3497)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__CompareA1__fired', quals=[], storage=['inline', 'static'] (at pp.c:3498)
    FuncDecl: quals=None (at pp.c:3498)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__CompareA1__fired', quals=[] (at pp.c:3498)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__conversionDone', quals=[], storage=['inline', 'static'] (at pp.c:3500)
    FuncDecl: quals=None (at pp.c:3500)
      ParamList:  (at pp.c:3500)
        Decl: name='iv', quals=[], storage=[] (at pp.c:3500)
          TypeDecl: declname='iv', quals=[] (at pp.c:3500)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__conversionDone', quals=[] (at pp.c:3500)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__default__singleDataReady', quals=[], storage=['inline', 'static'] (at pp.c:3502)
    FuncDecl: quals=None (at pp.c:3502)
      ParamList:  (at pp.c:3502)
        Decl: name='id', quals=[], storage=[] (at pp.c:3502)
          TypeDecl: declname='id', quals=[] (at pp.c:3502)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:3502)
          TypeDecl: declname='data', quals=[] (at pp.c:3502)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__default__singleDataReady', quals=[] (at pp.c:3502)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__default__multipleDataReady', quals=[], storage=['inline', 'static'] (at pp.c:3507)
    FuncDecl: quals=None (at pp.c:3507)
      ParamList:  (at pp.c:3507)
        Decl: name='id', quals=[], storage=[] (at pp.c:3507)
          TypeDecl: declname='id', quals=[] (at pp.c:3507)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:3508)
          PtrDecl: quals=[] (at pp.c:3508)
            TypeDecl: declname='buf', quals=[] (at pp.c:3508)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:3508)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:3508)
            IdentifierType: names=['uint16_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3507)
        TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__default__multipleDataReady', quals=[] (at pp.c:3507)
          IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430Adc12ImplP__MultiChannel__default__dataReady', quals=[], storage=['inline', 'static'] (at pp.c:3513)
    FuncDecl: quals=None (at pp.c:3513)
      ParamList:  (at pp.c:3513)
        Decl: name='id', quals=[], storage=[] (at pp.c:3513)
          TypeDecl: declname='id', quals=[] (at pp.c:3513)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buffer', quals=[], storage=[] (at pp.c:3513)
          PtrDecl: quals=[] (at pp.c:3513)
            TypeDecl: declname='buffer', quals=[] (at pp.c:3513)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:3513)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:3513)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__MultiChannel__default__dataReady', quals=[] (at pp.c:3513)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Overflow__default__memOverflow', quals=[], storage=['inline', 'static'] (at pp.c:3515)
    FuncDecl: quals=None (at pp.c:3515)
      ParamList:  (at pp.c:3515)
        Decl: name='id', quals=[], storage=[] (at pp.c:3515)
          TypeDecl: declname='id', quals=[] (at pp.c:3515)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Overflow__default__memOverflow', quals=[] (at pp.c:3515)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Overflow__default__conversionTimeOverflow', quals=[], storage=['inline', 'static'] (at pp.c:3516)
    FuncDecl: quals=None (at pp.c:3516)
      ParamList:  (at pp.c:3516)
        Decl: name='id', quals=[], storage=[] (at pp.c:3516)
          TypeDecl: declname='id', quals=[] (at pp.c:3516)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Overflow__default__conversionTimeOverflow', quals=[] (at pp.c:3516)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__conversionDone', quals=[], storage=['static'] (at pp.c:3518)
    FuncDecl: quals=None (at pp.c:3518)
      ParamList:  (at pp.c:3518)
        Decl: name='iv', quals=[], storage=[] (at pp.c:3518)
          TypeDecl: declname='iv', quals=[] (at pp.c:3518)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__conversionDone', quals=[] (at pp.c:3518)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__ADC12CTL0@"0x01A0"', quals=['volatile'], storage=['static'] (at pp.c:3520)
    TypeDecl: declname='HplAdc12P__ADC12CTL0@"0x01A0"', quals=['volatile'] (at pp.c:3520)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='HplAdc12P__ADC12CTL1@"0x01A2"', quals=['volatile'], storage=['static'] (at pp.c:3521)
    TypeDecl: declname='HplAdc12P__ADC12CTL1@"0x01A2"', quals=['volatile'] (at pp.c:3521)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='HplAdc12P__ADC12IFG@"0x01A4"', quals=['volatile'], storage=['static'] (at pp.c:3522)
    TypeDecl: declname='HplAdc12P__ADC12IFG@"0x01A4"', quals=['volatile'] (at pp.c:3522)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='HplAdc12P__ADC12IE@"0x01A6"', quals=['volatile'], storage=['static'] (at pp.c:3523)
    TypeDecl: declname='HplAdc12P__ADC12IE@"0x01A6"', quals=['volatile'] (at pp.c:3523)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='HplAdc12P__ADC12IV@"0x01A8"', quals=['volatile'], storage=['static'] (at pp.c:3524)
    TypeDecl: declname='HplAdc12P__ADC12IV@"0x01A8"', quals=['volatile'] (at pp.c:3524)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='HplAdc12P__int2adc12ctl0', quals=[], storage=['inline', 'static'] (at pp.c:3526)
    FuncDecl: quals=None (at pp.c:3526)
      ParamList:  (at pp.c:3526)
        Decl: name='x', quals=[], storage=[] (at pp.c:3526)
          TypeDecl: declname='x', quals=[] (at pp.c:3526)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='HplAdc12P__int2adc12ctl0', quals=[] (at pp.c:3526)
        IdentifierType: names=['adc12ctl0_t'] (at None)
  Decl: name='HplAdc12P__adc12ctl0cast2int', quals=[], storage=['inline', 'static'] (at pp.c:3528)
    FuncDecl: quals=None (at pp.c:3528)
      ParamList:  (at pp.c:3528)
        Decl: name='x', quals=[], storage=[] (at pp.c:3528)
          TypeDecl: declname='x', quals=[] (at pp.c:3528)
            IdentifierType: names=['adc12ctl0_t'] (at None)
      TypeDecl: declname='HplAdc12P__adc12ctl0cast2int', quals=[] (at pp.c:3528)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='HplAdc12P__adc12ctl1cast2int', quals=[], storage=['inline', 'static'] (at pp.c:3529)
    FuncDecl: quals=None (at pp.c:3529)
      ParamList:  (at pp.c:3529)
        Decl: name='x', quals=[], storage=[] (at pp.c:3529)
          TypeDecl: declname='x', quals=[] (at pp.c:3529)
            IdentifierType: names=['adc12ctl1_t'] (at None)
      TypeDecl: declname='HplAdc12P__adc12ctl1cast2int', quals=[] (at pp.c:3529)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='HplAdc12P__adc12memctl2int', quals=[], storage=['inline', 'static'] (at pp.c:3530)
    FuncDecl: quals=None (at pp.c:3530)
      ParamList:  (at pp.c:3530)
        Decl: name='x', quals=[], storage=[] (at pp.c:3530)
          TypeDecl: declname='x', quals=[] (at pp.c:3530)
            IdentifierType: names=['adc12memctl_t'] (at None)
      TypeDecl: declname='HplAdc12P__adc12memctl2int', quals=[] (at pp.c:3530)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplAdc12P__int2adc12memctl', quals=[], storage=['inline', 'static'] (at pp.c:3531)
    FuncDecl: quals=None (at pp.c:3531)
      ParamList:  (at pp.c:3531)
        Decl: name='x', quals=[], storage=[] (at pp.c:3531)
          TypeDecl: declname='x', quals=[] (at pp.c:3531)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplAdc12P__int2adc12memctl', quals=[] (at pp.c:3531)
        IdentifierType: names=['adc12memctl_t'] (at None)
  Decl: name='HplAdc12P__HplAdc12__setCtl0', quals=[], storage=['inline', 'static'] (at pp.c:3533)
    FuncDecl: quals=None (at pp.c:3533)
      ParamList:  (at pp.c:3533)
        Decl: name='control0', quals=[], storage=[] (at pp.c:3533)
          TypeDecl: declname='control0', quals=[] (at pp.c:3533)
            IdentifierType: names=['adc12ctl0_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__setCtl0', quals=[] (at pp.c:3533)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__setCtl1', quals=[], storage=['inline', 'static'] (at pp.c:3537)
    FuncDecl: quals=None (at pp.c:3537)
      ParamList:  (at pp.c:3537)
        Decl: name='control1', quals=[], storage=[] (at pp.c:3537)
          TypeDecl: declname='control1', quals=[] (at pp.c:3537)
            IdentifierType: names=['adc12ctl1_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__setCtl1', quals=[] (at pp.c:3537)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__getCtl0', quals=[], storage=['inline', 'static'] (at pp.c:3541)
    FuncDecl: quals=None (at pp.c:3541)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__getCtl0', quals=[] (at pp.c:3541)
        IdentifierType: names=['adc12ctl0_t'] (at None)
  Decl: name='HplAdc12P__HplAdc12__setMCtl', quals=[], storage=['inline', 'static'] (at pp.c:3549)
    FuncDecl: quals=None (at pp.c:3549)
      ParamList:  (at pp.c:3549)
        Decl: name='i', quals=[], storage=[] (at pp.c:3549)
          TypeDecl: declname='i', quals=[] (at pp.c:3549)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='memCtl', quals=[], storage=[] (at pp.c:3549)
          TypeDecl: declname='memCtl', quals=[] (at pp.c:3549)
            IdentifierType: names=['adc12memctl_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__setMCtl', quals=[] (at pp.c:3549)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__getMCtl', quals=[], storage=['inline', 'static'] (at pp.c:3553)
    FuncDecl: quals=None (at pp.c:3553)
      ParamList:  (at pp.c:3553)
        Decl: name='i', quals=[], storage=[] (at pp.c:3553)
          TypeDecl: declname='i', quals=[] (at pp.c:3553)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__getMCtl', quals=[] (at pp.c:3553)
        IdentifierType: names=['adc12memctl_t'] (at None)
  Decl: name='HplAdc12P__HplAdc12__getMem', quals=[], storage=['inline', 'static'] (at pp.c:3557)
    FuncDecl: quals=None (at pp.c:3557)
      ParamList:  (at pp.c:3557)
        Decl: name='i', quals=[], storage=[] (at pp.c:3557)
          TypeDecl: declname='i', quals=[] (at pp.c:3557)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__getMem', quals=[] (at pp.c:3557)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='HplAdc12P__HplAdc12__setIEFlags', quals=[], storage=['inline', 'static'] (at pp.c:3561)
    FuncDecl: quals=None (at pp.c:3561)
      ParamList:  (at pp.c:3561)
        Decl: name='mask', quals=[], storage=[] (at pp.c:3561)
          TypeDecl: declname='mask', quals=[] (at pp.c:3561)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__setIEFlags', quals=[] (at pp.c:3561)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__resetIFGs', quals=[], storage=['inline', 'static'] (at pp.c:3564)
    FuncDecl: quals=None (at pp.c:3564)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__resetIFGs', quals=[] (at pp.c:3564)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__startConversion', quals=[], storage=['inline', 'static'] (at pp.c:3569)
    FuncDecl: quals=None (at pp.c:3569)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__startConversion', quals=[] (at pp.c:3569)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__stopConversion', quals=[], storage=['static'] (at pp.c:3574)
    FuncDecl: quals=None (at pp.c:3574)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__stopConversion', quals=[] (at pp.c:3574)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__isBusy', quals=[], storage=['inline', 'static'] (at pp.c:3576)
    FuncDecl: quals=None (at pp.c:3576)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__isBusy', quals=[] (at pp.c:3576)
        IdentifierType: names=['bool'] (at None)
  Decl: name='sig_ADC_VECTOR', quals=[], storage=[] (at pp.c:3578)
    FuncDecl: quals=None (at pp.c:3578)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_ADC_VECTOR', quals=[] (at pp.c:3578)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:3580)
    Enum: name='RoundRobinResourceQueueC__0____nesc_unnamed4288' (at pp.c:3580)
      EnumeratorList:  (at pp.c:3581)
        Enumerator: name='RoundRobinResourceQueueC__0__NO_ENTRY' (at pp.c:3581)
          Constant: type='int', value='0xFF' (at pp.c:3581)
        Enumerator: name='RoundRobinResourceQueueC__0__SIZE' (at pp.c:3582)
          TernaryOp:  (at pp.c:3582)
            Constant: type='int', value='3U' (at pp.c:3582)
            BinaryOp: op='+' (at pp.c:3582)
              BinaryOp: op='/' (at pp.c:3582)
                BinaryOp: op='-' (at pp.c:3582)
                  Constant: type='int', value='3U' (at pp.c:3582)
                  Constant: type='int', value='1' (at pp.c:3582)
                Constant: type='int', value='8' (at pp.c:3582)
              Constant: type='int', value='1' (at pp.c:3582)
            Constant: type='int', value='0' (at pp.c:3582)
  Decl: name='RoundRobinResourceQueueC__0__resQ', quals=[], storage=[] (at pp.c:3585)
    ArrayDecl:  (at pp.c:3585)
      TypeDecl: declname='RoundRobinResourceQueueC__0__resQ', quals=[] (at pp.c:3585)
        IdentifierType: names=['uint8_t'] (at None)
      ID: name='RoundRobinResourceQueueC__0__SIZE' (at pp.c:3585)
  Decl: name='RoundRobinResourceQueueC__0__last', quals=[], storage=[] (at pp.c:3586)
    TypeDecl: declname='RoundRobinResourceQueueC__0__last', quals=[] (at pp.c:3586)
      IdentifierType: names=['uint8_t'] (at None)
    Constant: type='int', value='0' (at pp.c:3586)
  Decl: name='RoundRobinResourceQueueC__0__clearEntry', quals=[], storage=['inline', 'static'] (at pp.c:3588)
    FuncDecl: quals=None (at pp.c:3588)
      ParamList:  (at pp.c:3588)
        Decl: name='id', quals=[], storage=[] (at pp.c:3588)
          TypeDecl: declname='id', quals=[] (at pp.c:3588)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__clearEntry', quals=[] (at pp.c:3588)
        IdentifierType: names=['void'] (at None)
  Decl: name='RoundRobinResourceQueueC__0__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:3592)
    FuncDecl: quals=None (at pp.c:3592)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__Init__init', quals=[] (at pp.c:3592)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__isEmpty', quals=[], storage=['inline', 'static'] (at pp.c:3597)
    FuncDecl: quals=None (at pp.c:3597)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__isEmpty', quals=[] (at pp.c:3597)
        IdentifierType: names=['bool'] (at None)
  Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__isEnqueued', quals=[], storage=['static'] (at pp.c:3606)
    FuncDecl: quals=None (at pp.c:3606)
      ParamList:  (at pp.c:3606)
        Decl: name='id', quals=[], storage=[] (at pp.c:3606)
          TypeDecl: declname='id', quals=[] (at pp.c:3606)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__isEnqueued', quals=[] (at pp.c:3606)
        IdentifierType: names=['bool'] (at None)
  Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__dequeue', quals=[], storage=['inline', 'static'] (at pp.c:3610)
    FuncDecl: quals=None (at pp.c:3610)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__dequeue', quals=[] (at pp.c:3610)
        IdentifierType: names=['resource_client_id_t'] (at None)
  Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__enqueue', quals=[], storage=['inline', 'static'] (at pp.c:3612)
    FuncDecl: quals=None (at pp.c:3612)
      ParamList:  (at pp.c:3612)
        Decl: name='id', quals=[], storage=[] (at pp.c:3612)
          TypeDecl: declname='id', quals=[] (at pp.c:3612)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__enqueue', quals=[] (at pp.c:3612)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SimpleArbiterP__0__ResourceRequested__requested', quals=[], storage=['static'] (at pp.c:3614)
    FuncDecl: quals=None (at pp.c:3614)
      ParamList:  (at pp.c:3616)
        Decl: name='arg_0x101b0d2f0', quals=[], storage=[] (at pp.c:3616)
          TypeDecl: declname='arg_0x101b0d2f0', quals=[] (at pp.c:3616)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ResourceRequested__requested', quals=[] (at pp.c:3614)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__ResourceConfigure__unconfigure', quals=[], storage=['static'] (at pp.c:3618)
    FuncDecl: quals=None (at pp.c:3618)
      ParamList:  (at pp.c:3620)
        Decl: name='arg_0x101b0c868', quals=[], storage=[] (at pp.c:3620)
          TypeDecl: declname='arg_0x101b0c868', quals=[] (at pp.c:3620)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ResourceConfigure__unconfigure', quals=[] (at pp.c:3618)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__ResourceConfigure__configure', quals=[], storage=['static'] (at pp.c:3622)
    FuncDecl: quals=None (at pp.c:3622)
      ParamList:  (at pp.c:3624)
        Decl: name='arg_0x101b0c868', quals=[], storage=[] (at pp.c:3624)
          TypeDecl: declname='arg_0x101b0c868', quals=[] (at pp.c:3624)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ResourceConfigure__configure', quals=[] (at pp.c:3622)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__Queue__enqueue', quals=[], storage=['static'] (at pp.c:3626)
    FuncDecl: quals=None (at pp.c:3626)
      ParamList:  (at pp.c:3626)
        Decl: name='id', quals=[], storage=[] (at pp.c:3626)
          TypeDecl: declname='id', quals=[] (at pp.c:3626)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__Queue__enqueue', quals=[] (at pp.c:3626)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SimpleArbiterP__0__Queue__isEmpty', quals=[], storage=['static'] (at pp.c:3628)
    FuncDecl: quals=None (at pp.c:3628)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__Queue__isEmpty', quals=[] (at pp.c:3628)
        IdentifierType: names=['bool'] (at None)
  Decl: name='SimpleArbiterP__0__Queue__dequeue', quals=[], storage=['static'] (at pp.c:3630)
    FuncDecl: quals=None (at pp.c:3630)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__Queue__dequeue', quals=[] (at pp.c:3630)
        IdentifierType: names=['resource_client_id_t'] (at None)
  Decl: name='SimpleArbiterP__0__Resource__granted', quals=[], storage=['static'] (at pp.c:3632)
    FuncDecl: quals=None (at pp.c:3632)
      ParamList:  (at pp.c:3634)
        Decl: name='arg_0x101b0e158', quals=[], storage=[] (at pp.c:3634)
          TypeDecl: declname='arg_0x101b0e158', quals=[] (at pp.c:3634)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__Resource__granted', quals=[] (at pp.c:3632)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__grantedTask__postTask', quals=[], storage=['static'] (at pp.c:3636)
    FuncDecl: quals=None (at pp.c:3636)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__grantedTask__postTask', quals=[] (at pp.c:3636)
        IdentifierType: names=['error_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:3638)
    Enum: name='SimpleArbiterP__0____nesc_unnamed4289' (at pp.c:3638)
      EnumeratorList:  (at pp.c:3640)
        Enumerator: name='SimpleArbiterP__0__grantedTask' (at pp.c:3640)
          Constant: type='int', value='3U' (at pp.c:3640)
  Typedef: name='SimpleArbiterP__0____nesc_sillytask_grantedTask', quals=[], storage=['typedef'] (at pp.c:3643)
    ArrayDecl:  (at pp.c:3643)
      TypeDecl: declname='SimpleArbiterP__0____nesc_sillytask_grantedTask', quals=[] (at pp.c:3643)
        IdentifierType: names=['int'] (at None)
      ID: name='SimpleArbiterP__0__grantedTask' (at pp.c:3643)
  Decl: name=None, quals=[], storage=[] (at pp.c:3645)
    Enum: name='SimpleArbiterP__0____nesc_unnamed4290' (at pp.c:3645)
      EnumeratorList:  (at pp.c:3647)
        Enumerator: name='SimpleArbiterP__0__RES_IDLE' (at pp.c:3647)
          Constant: type='int', value='0' (at pp.c:3647)
        Enumerator: name='SimpleArbiterP__0__RES_GRANTING' (at pp.c:3647)
          Constant: type='int', value='1' (at pp.c:3647)
        Enumerator: name='SimpleArbiterP__0__RES_BUSY' (at pp.c:3647)
          Constant: type='int', value='2' (at pp.c:3647)
  Decl: name=None, quals=[], storage=[] (at pp.c:3650)
    Enum: name='SimpleArbiterP__0____nesc_unnamed4291' (at pp.c:3650)
      EnumeratorList:  (at pp.c:3652)
        Enumerator: name='SimpleArbiterP__0__NO_RES' (at pp.c:3652)
          Constant: type='int', value='0xFF' (at pp.c:3652)
  Decl: name='SimpleArbiterP__0__state', quals=[], storage=[] (at pp.c:3654)
    TypeDecl: declname='SimpleArbiterP__0__state', quals=[] (at pp.c:3654)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='SimpleArbiterP__0__RES_IDLE' (at pp.c:3654)
  Decl: name='SimpleArbiterP__0__resId', quals=[], storage=[] (at pp.c:3655)
    TypeDecl: declname='SimpleArbiterP__0__resId', quals=[] (at pp.c:3655)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='SimpleArbiterP__0__NO_RES' (at pp.c:3655)
  Decl: name='SimpleArbiterP__0__reqResId', quals=[], storage=[] (at pp.c:3656)
    TypeDecl: declname='SimpleArbiterP__0__reqResId', quals=[] (at pp.c:3656)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SimpleArbiterP__0__Resource__request', quals=[], storage=['static'] (at pp.c:3660)
    FuncDecl: quals=None (at pp.c:3660)
      ParamList:  (at pp.c:3660)
        Decl: name='id', quals=[], storage=[] (at pp.c:3660)
          TypeDecl: declname='id', quals=[] (at pp.c:3660)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__Resource__request', quals=[] (at pp.c:3660)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SimpleArbiterP__0__Resource__release', quals=[], storage=['static'] (at pp.c:3662)
    FuncDecl: quals=None (at pp.c:3662)
      ParamList:  (at pp.c:3662)
        Decl: name='id', quals=[], storage=[] (at pp.c:3662)
          TypeDecl: declname='id', quals=[] (at pp.c:3662)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__Resource__release', quals=[] (at pp.c:3662)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SimpleArbiterP__0__ArbiterInfo__userId', quals=[], storage=['static'] (at pp.c:3664)
    FuncDecl: quals=None (at pp.c:3664)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ArbiterInfo__userId', quals=[] (at pp.c:3664)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SimpleArbiterP__0__grantedTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:3666)
    FuncDecl: quals=None (at pp.c:3666)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__grantedTask__runTask', quals=[] (at pp.c:3666)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:3676)
    FuncDecl: quals=None (at pp.c:3676)
      ParamList:  (at pp.c:3676)
        Decl: name='id', quals=[], storage=[] (at pp.c:3676)
          TypeDecl: declname='id', quals=[] (at pp.c:3676)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__Resource__default__granted', quals=[] (at pp.c:3676)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__ResourceRequested__default__requested', quals=[], storage=['inline', 'static'] (at pp.c:3678)
    FuncDecl: quals=None (at pp.c:3678)
      ParamList:  (at pp.c:3678)
        Decl: name='id', quals=[], storage=[] (at pp.c:3678)
          TypeDecl: declname='id', quals=[] (at pp.c:3678)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ResourceRequested__default__requested', quals=[] (at pp.c:3678)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__ResourceConfigure__default__configure', quals=[], storage=['inline', 'static'] (at pp.c:3682)
    FuncDecl: quals=None (at pp.c:3682)
      ParamList:  (at pp.c:3682)
        Decl: name='id', quals=[], storage=[] (at pp.c:3682)
          TypeDecl: declname='id', quals=[] (at pp.c:3682)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ResourceConfigure__default__configure', quals=[] (at pp.c:3682)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__ResourceConfigure__default__unconfigure', quals=[], storage=['inline', 'static'] (at pp.c:3684)
    FuncDecl: quals=None (at pp.c:3684)
      ParamList:  (at pp.c:3684)
        Decl: name='id', quals=[], storage=[] (at pp.c:3684)
          TypeDecl: declname='id', quals=[] (at pp.c:3684)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ResourceConfigure__default__unconfigure', quals=[] (at pp.c:3684)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__HplAdc12__getCtl0', quals=[], storage=['static'] (at pp.c:3686)
    FuncDecl: quals=None (at pp.c:3686)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__HplAdc12__getCtl0', quals=[] (at pp.c:3686)
        IdentifierType: names=['adc12ctl0_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__HplAdc12__isBusy', quals=[], storage=['static'] (at pp.c:3688)
    FuncDecl: quals=None (at pp.c:3688)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__HplAdc12__isBusy', quals=[] (at pp.c:3688)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__HplAdc12__setCtl0', quals=[], storage=['static'] (at pp.c:3690)
    FuncDecl: quals=None (at pp.c:3690)
      ParamList:  (at pp.c:3690)
        Decl: name='control0', quals=[], storage=[] (at pp.c:3690)
          TypeDecl: declname='control0', quals=[] (at pp.c:3690)
            IdentifierType: names=['adc12ctl0_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__HplAdc12__setCtl0', quals=[] (at pp.c:3690)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOffTimer__startOneShot', quals=[], storage=['static'] (at pp.c:3692)
    FuncDecl: quals=None (at pp.c:3692)
      ParamList:  (at pp.c:3692)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3692)
          TypeDecl: declname='dt', quals=[] (at pp.c:3692)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffTimer__startOneShot', quals=[] (at pp.c:3692)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOffTimer__stop', quals=[], storage=['static'] (at pp.c:3697)
    FuncDecl: quals=None (at pp.c:3697)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffTimer__stop', quals=[] (at pp.c:3697)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__startDone', quals=[], storage=['static'] (at pp.c:3699)
    FuncDecl: quals=None (at pp.c:3699)
      ParamList:  (at pp.c:3699)
        Decl: name='error', quals=[], storage=[] (at pp.c:3699)
          TypeDecl: declname='error', quals=[] (at pp.c:3699)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_2_5V__startDone', quals=[] (at pp.c:3699)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__stopDone', quals=[], storage=['static'] (at pp.c:3701)
    FuncDecl: quals=None (at pp.c:3701)
      ParamList:  (at pp.c:3701)
        Decl: name='error', quals=[], storage=[] (at pp.c:3701)
          TypeDecl: declname='error', quals=[] (at pp.c:3701)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_2_5V__stopDone', quals=[] (at pp.c:3701)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__isRunning', quals=[], storage=['static'] (at pp.c:3703)
    FuncDecl: quals=None (at pp.c:3703)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__isRunning', quals=[] (at pp.c:3703)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__startOneShot', quals=[], storage=['static'] (at pp.c:3705)
    FuncDecl: quals=None (at pp.c:3705)
      ParamList:  (at pp.c:3705)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3705)
          TypeDecl: declname='dt', quals=[] (at pp.c:3705)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__startOneShot', quals=[] (at pp.c:3705)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__stop', quals=[], storage=['static'] (at pp.c:3710)
    FuncDecl: quals=None (at pp.c:3710)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__stop', quals=[] (at pp.c:3710)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__startDone', quals=[], storage=['static'] (at pp.c:3712)
    FuncDecl: quals=None (at pp.c:3712)
      ParamList:  (at pp.c:3712)
        Decl: name='error', quals=[], storage=[] (at pp.c:3712)
          TypeDecl: declname='error', quals=[] (at pp.c:3712)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_1_5V__startDone', quals=[] (at pp.c:3712)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__stopDone', quals=[], storage=['static'] (at pp.c:3714)
    FuncDecl: quals=None (at pp.c:3714)
      ParamList:  (at pp.c:3714)
        Decl: name='error', quals=[], storage=[] (at pp.c:3714)
          TypeDecl: declname='error', quals=[] (at pp.c:3714)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_1_5V__stopDone', quals=[] (at pp.c:3714)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOnTimer__startOneShot', quals=[], storage=['static'] (at pp.c:3716)
    FuncDecl: quals=None (at pp.c:3716)
      ParamList:  (at pp.c:3716)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3716)
          TypeDecl: declname='dt', quals=[] (at pp.c:3716)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOnTimer__startOneShot', quals=[] (at pp.c:3716)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOnTimer__stop', quals=[], storage=['static'] (at pp.c:3721)
    FuncDecl: quals=None (at pp.c:3721)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOnTimer__stop', quals=[] (at pp.c:3721)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430RefVoltGeneratorP__state_t', quals=[], storage=['typedef'] (at pp.c:3737)
    TypeDecl: declname='Msp430RefVoltGeneratorP__state_t', quals=[] (at pp.c:3737)
      Enum: name='Msp430RefVoltGeneratorP____nesc_unnamed4292' (at pp.c:3724)
        EnumeratorList:  (at pp.c:3726)
          Enumerator: name='Msp430RefVoltGeneratorP__GENERATOR_OFF' (at pp.c:3726)
            Constant: type='int', value='0' (at pp.c:3726)
          Enumerator: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_STABLE' (at pp.c:3728)
            Constant: type='int', value='1' (at pp.c:3728)
          Enumerator: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_STABLE' (at pp.c:3729)
            Constant: type='int', value='2' (at pp.c:3729)
          Enumerator: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_ON_PENDING' (at pp.c:3731)
            Constant: type='int', value='3' (at pp.c:3731)
          Enumerator: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_ON_PENDING' (at pp.c:3732)
            Constant: type='int', value='4' (at pp.c:3732)
          Enumerator: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_OFF_PENDING' (at pp.c:3734)
            Constant: type='int', value='5' (at pp.c:3734)
          Enumerator: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_OFF_PENDING' (at pp.c:3735)
            Constant: type='int', value='6' (at pp.c:3735)
  Decl: name='Msp430RefVoltGeneratorP__m_state', quals=[], storage=[] (at pp.c:3739)
    TypeDecl: declname='Msp430RefVoltGeneratorP__m_state', quals=[] (at pp.c:3739)
      IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__switchOn', quals=[], storage=['static'] (at pp.c:3742)
    FuncDecl: quals=None (at pp.c:3742)
      ParamList:  (at pp.c:3742)
        Decl: name='level', quals=[], storage=[] (at pp.c:3742)
          TypeDecl: declname='level', quals=[] (at pp.c:3742)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__switchOn', quals=[] (at pp.c:3742)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__switchOff', quals=[], storage=['static'] (at pp.c:3743)
    FuncDecl: quals=None (at pp.c:3743)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__switchOff', quals=[] (at pp.c:3743)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__signalStartDone', quals=[], storage=['static'] (at pp.c:3744)
    FuncDecl: quals=None (at pp.c:3744)
      ParamList:  (at pp.c:3744)
        Decl: name='state', quals=[], storage=[] (at pp.c:3744)
          TypeDecl: declname='state', quals=[] (at pp.c:3744)
            IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:3744)
          TypeDecl: declname='result', quals=[] (at pp.c:3744)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__signalStartDone', quals=[] (at pp.c:3744)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__signalStopDone', quals=[], storage=['static'] (at pp.c:3745)
    FuncDecl: quals=None (at pp.c:3745)
      ParamList:  (at pp.c:3745)
        Decl: name='state', quals=[], storage=[] (at pp.c:3745)
          TypeDecl: declname='state', quals=[] (at pp.c:3745)
            IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:3745)
          TypeDecl: declname='result', quals=[] (at pp.c:3745)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__signalStopDone', quals=[] (at pp.c:3745)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__start', quals=[], storage=['static'] (at pp.c:3746)
    FuncDecl: quals=None (at pp.c:3746)
      ParamList:  (at pp.c:3746)
        Decl: name='targetState', quals=[], storage=[] (at pp.c:3746)
          TypeDecl: declname='targetState', quals=[] (at pp.c:3746)
            IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__start', quals=[] (at pp.c:3746)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__stop', quals=[], storage=['static'] (at pp.c:3747)
    FuncDecl: quals=None (at pp.c:3747)
      ParamList:  (at pp.c:3747)
        Decl: name='nextState', quals=[], storage=[] (at pp.c:3747)
          TypeDecl: declname='nextState', quals=[] (at pp.c:3747)
            IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__stop', quals=[] (at pp.c:3747)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__start', quals=[], storage=['inline', 'static'] (at pp.c:3750)
    FuncDecl: quals=None (at pp.c:3750)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_1_5V__start', quals=[] (at pp.c:3750)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__start', quals=[], storage=['inline', 'static'] (at pp.c:3754)
    FuncDecl: quals=None (at pp.c:3754)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_2_5V__start', quals=[] (at pp.c:3754)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__stop', quals=[], storage=['inline', 'static'] (at pp.c:3758)
    FuncDecl: quals=None (at pp.c:3758)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_1_5V__stop', quals=[] (at pp.c:3758)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__stop', quals=[], storage=['inline', 'static'] (at pp.c:3762)
    FuncDecl: quals=None (at pp.c:3762)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_2_5V__stop', quals=[] (at pp.c:3762)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__start', quals=[], storage=['static'] (at pp.c:3766)
    FuncDecl: quals=None (at pp.c:3766)
      ParamList:  (at pp.c:3766)
        Decl: name='targetState', quals=[], storage=[] (at pp.c:3766)
          TypeDecl: declname='targetState', quals=[] (at pp.c:3766)
            IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__start', quals=[] (at pp.c:3766)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__stop', quals=[], storage=['static'] (at pp.c:3768)
    FuncDecl: quals=None (at pp.c:3768)
      ParamList:  (at pp.c:3768)
        Decl: name='nextState', quals=[], storage=[] (at pp.c:3768)
          TypeDecl: declname='nextState', quals=[] (at pp.c:3768)
            IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__stop', quals=[] (at pp.c:3768)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__signalStartDone', quals=[], storage=['static'] (at pp.c:3770)
    FuncDecl: quals=None (at pp.c:3770)
      ParamList:  (at pp.c:3770)
        Decl: name='state', quals=[], storage=[] (at pp.c:3770)
          TypeDecl: declname='state', quals=[] (at pp.c:3770)
            IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:3770)
          TypeDecl: declname='result', quals=[] (at pp.c:3770)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__signalStartDone', quals=[] (at pp.c:3770)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__signalStopDone', quals=[], storage=['static'] (at pp.c:3777)
    FuncDecl: quals=None (at pp.c:3777)
      ParamList:  (at pp.c:3777)
        Decl: name='state', quals=[], storage=[] (at pp.c:3777)
          TypeDecl: declname='state', quals=[] (at pp.c:3777)
            IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:3777)
          TypeDecl: declname='result', quals=[] (at pp.c:3777)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__signalStopDone', quals=[] (at pp.c:3777)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOnTimer__fired', quals=[], storage=['inline', 'static'] (at pp.c:3785)
    FuncDecl: quals=None (at pp.c:3785)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOnTimer__fired', quals=[] (at pp.c:3785)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOffTimer__fired', quals=[], storage=['inline', 'static'] (at pp.c:3787)
    FuncDecl: quals=None (at pp.c:3787)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffTimer__fired', quals=[] (at pp.c:3787)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__fired', quals=[], storage=['inline', 'static'] (at pp.c:3789)
    FuncDecl: quals=None (at pp.c:3789)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__fired', quals=[] (at pp.c:3789)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__HplAdc12__conversionDone', quals=[], storage=['inline', 'static'] (at pp.c:3792)
    FuncDecl: quals=None (at pp.c:3792)
      ParamList:  (at pp.c:3792)
        Decl: name='iv', quals=[], storage=[] (at pp.c:3792)
          TypeDecl: declname='iv', quals=[] (at pp.c:3792)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__HplAdc12__conversionDone', quals=[] (at pp.c:3792)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__switchOn', quals=[], storage=['static'] (at pp.c:3796)
    FuncDecl: quals=None (at pp.c:3796)
      ParamList:  (at pp.c:3796)
        Decl: name='level', quals=[], storage=[] (at pp.c:3796)
          TypeDecl: declname='level', quals=[] (at pp.c:3796)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__switchOn', quals=[] (at pp.c:3796)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__switchOff', quals=[], storage=['static'] (at pp.c:3798)
    FuncDecl: quals=None (at pp.c:3798)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__switchOff', quals=[] (at pp.c:3798)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__Config__getConfiguration', quals=[], storage=['static'] (at pp.c:3800)
    FuncDecl: quals=None (at pp.c:3800)
      ParamList:  (at pp.c:3802)
        Decl: name='arg_0x101ba9af8', quals=[], storage=[] (at pp.c:3802)
          TypeDecl: declname='arg_0x101ba9af8', quals=[] (at pp.c:3802)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__Config__getConfiguration', quals=[] (at pp.c:3800)
        IdentifierType: names=['Msp430RefVoltArbiterImplP__Config__adc_config_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__start', quals=[], storage=['static'] (at pp.c:3804)
    FuncDecl: quals=None (at pp.c:3804)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_2_5V__start', quals=[] (at pp.c:3804)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stop', quals=[], storage=['static'] (at pp.c:3806)
    FuncDecl: quals=None (at pp.c:3806)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stop', quals=[] (at pp.c:3806)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__AdcResource__release', quals=[], storage=['static'] (at pp.c:3808)
    FuncDecl: quals=None (at pp.c:3808)
      ParamList:  (at pp.c:3810)
        Decl: name='arg_0x101bace18', quals=[], storage=[] (at pp.c:3810)
          TypeDecl: declname='arg_0x101bace18', quals=[] (at pp.c:3810)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__release', quals=[] (at pp.c:3808)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__AdcResource__request', quals=[], storage=['static'] (at pp.c:3812)
    FuncDecl: quals=None (at pp.c:3812)
      ParamList:  (at pp.c:3814)
        Decl: name='arg_0x101bace18', quals=[], storage=[] (at pp.c:3814)
          TypeDecl: declname='arg_0x101bace18', quals=[] (at pp.c:3814)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__request', quals=[] (at pp.c:3812)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__ClientResource__granted', quals=[], storage=['static'] (at pp.c:3816)
    FuncDecl: quals=None (at pp.c:3816)
      ParamList:  (at pp.c:3818)
        Decl: name='arg_0x101bafb98', quals=[], storage=[] (at pp.c:3818)
          TypeDecl: declname='arg_0x101bafb98', quals=[] (at pp.c:3818)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__granted', quals=[] (at pp.c:3816)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__switchOff__postTask', quals=[], storage=['static'] (at pp.c:3820)
    FuncDecl: quals=None (at pp.c:3820)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__switchOff__postTask', quals=[] (at pp.c:3820)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__start', quals=[], storage=['static'] (at pp.c:3822)
    FuncDecl: quals=None (at pp.c:3822)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_1_5V__start', quals=[] (at pp.c:3822)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stop', quals=[], storage=['static'] (at pp.c:3824)
    FuncDecl: quals=None (at pp.c:3824)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stop', quals=[] (at pp.c:3824)
        IdentifierType: names=['error_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:3826)
    Enum: name='Msp430RefVoltArbiterImplP____nesc_unnamed4293' (at pp.c:3826)
      EnumeratorList:  (at pp.c:3828)
        Enumerator: name='Msp430RefVoltArbiterImplP__switchOff' (at pp.c:3828)
          Constant: type='int', value='4U' (at pp.c:3828)
  Typedef: name='Msp430RefVoltArbiterImplP____nesc_sillytask_switchOff', quals=[], storage=['typedef'] (at pp.c:3831)
    ArrayDecl:  (at pp.c:3831)
      TypeDecl: declname='Msp430RefVoltArbiterImplP____nesc_sillytask_switchOff', quals=[] (at pp.c:3831)
        IdentifierType: names=['int'] (at None)
      ID: name='Msp430RefVoltArbiterImplP__switchOff' (at pp.c:3831)
  Decl: name=None, quals=[], storage=[] (at pp.c:3833)
    Enum: name='Msp430RefVoltArbiterImplP____nesc_unnamed4294' (at pp.c:3833)
      EnumeratorList:  (at pp.c:3834)
        Enumerator: name='Msp430RefVoltArbiterImplP__NO_OWNER' (at pp.c:3834)
          Constant: type='int', value='0xFF' (at pp.c:3834)
  Decl: name='Msp430RefVoltArbiterImplP__syncOwner', quals=[], storage=[] (at pp.c:3836)
    TypeDecl: declname='Msp430RefVoltArbiterImplP__syncOwner', quals=[] (at pp.c:3836)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='Msp430RefVoltArbiterImplP__NO_OWNER' (at pp.c:3836)
  Decl: name='Msp430RefVoltArbiterImplP__ref2_5v', quals=[], storage=[] (at pp.c:3837)
    TypeDecl: declname='Msp430RefVoltArbiterImplP__ref2_5v', quals=[] (at pp.c:3837)
      IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__ClientResource__request', quals=[], storage=['inline', 'static'] (at pp.c:3841)
    FuncDecl: quals=None (at pp.c:3841)
      ParamList:  (at pp.c:3841)
        Decl: name='client', quals=[], storage=[] (at pp.c:3841)
          TypeDecl: declname='client', quals=[] (at pp.c:3841)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__request', quals=[] (at pp.c:3841)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__AdcResource__granted', quals=[], storage=['static'] (at pp.c:3843)
    FuncDecl: quals=None (at pp.c:3843)
      ParamList:  (at pp.c:3843)
        Decl: name='client', quals=[], storage=[] (at pp.c:3843)
          TypeDecl: declname='client', quals=[] (at pp.c:3843)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__granted', quals=[] (at pp.c:3843)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__startDone', quals=[], storage=['inline', 'static'] (at pp.c:3845)
    FuncDecl: quals=None (at pp.c:3845)
      ParamList:  (at pp.c:3845)
        Decl: name='error', quals=[], storage=[] (at pp.c:3845)
          TypeDecl: declname='error', quals=[] (at pp.c:3845)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_1_5V__startDone', quals=[] (at pp.c:3845)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__startDone', quals=[], storage=['static'] (at pp.c:3854)
    FuncDecl: quals=None (at pp.c:3854)
      ParamList:  (at pp.c:3854)
        Decl: name='error', quals=[], storage=[] (at pp.c:3854)
          TypeDecl: declname='error', quals=[] (at pp.c:3854)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_2_5V__startDone', quals=[] (at pp.c:3854)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__ClientResource__release', quals=[], storage=['static'] (at pp.c:3863)
    FuncDecl: quals=None (at pp.c:3863)
      ParamList:  (at pp.c:3863)
        Decl: name='client', quals=[], storage=[] (at pp.c:3863)
          TypeDecl: declname='client', quals=[] (at pp.c:3863)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__release', quals=[] (at pp.c:3863)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__switchOff__runTask', quals=[], storage=['inline', 'static'] (at pp.c:3865)
    FuncDecl: quals=None (at pp.c:3865)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__switchOff__runTask', quals=[] (at pp.c:3865)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stopDone', quals=[], storage=['inline', 'static'] (at pp.c:3867)
    FuncDecl: quals=None (at pp.c:3867)
      ParamList:  (at pp.c:3867)
        Decl: name='error', quals=[], storage=[] (at pp.c:3867)
          TypeDecl: declname='error', quals=[] (at pp.c:3867)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stopDone', quals=[] (at pp.c:3867)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stopDone', quals=[], storage=['inline', 'static'] (at pp.c:3871)
    FuncDecl: quals=None (at pp.c:3871)
      ParamList:  (at pp.c:3871)
        Decl: name='error', quals=[], storage=[] (at pp.c:3871)
          TypeDecl: declname='error', quals=[] (at pp.c:3871)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stopDone', quals=[] (at pp.c:3871)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__ClientResource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:3880)
    FuncDecl: quals=None (at pp.c:3880)
      ParamList:  (at pp.c:3880)
        Decl: name='client', quals=[], storage=[] (at pp.c:3880)
          TypeDecl: declname='client', quals=[] (at pp.c:3880)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__default__granted', quals=[] (at pp.c:3880)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__AdcResource__default__request', quals=[], storage=['inline', 'static'] (at pp.c:3881)
    FuncDecl: quals=None (at pp.c:3881)
      ParamList:  (at pp.c:3881)
        Decl: name='client', quals=[], storage=[] (at pp.c:3881)
          TypeDecl: declname='client', quals=[] (at pp.c:3881)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__default__request', quals=[] (at pp.c:3881)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__AdcResource__default__release', quals=[], storage=['inline', 'static'] (at pp.c:3890)
    FuncDecl: quals=None (at pp.c:3890)
      ParamList:  (at pp.c:3890)
        Decl: name='client', quals=[], storage=[] (at pp.c:3890)
          TypeDecl: declname='client', quals=[] (at pp.c:3890)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__default__release', quals=[] (at pp.c:3890)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__defaultConfig', quals=['const'], storage=[] (at pp.c:3891)
    TypeDecl: declname='Msp430RefVoltArbiterImplP__defaultConfig', quals=['const'] (at pp.c:3891)
      IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    ExprList:  (at pp.c:3891)
      ID: name='INPUT_CHANNEL_NONE' (at pp.c:3891)
      Constant: type='int', value='0' (at pp.c:3891)
      Constant: type='int', value='0' (at pp.c:3891)
      Constant: type='int', value='0' (at pp.c:3891)
      Constant: type='int', value='0' (at pp.c:3891)
      Constant: type='int', value='0' (at pp.c:3891)
      Constant: type='int', value='0' (at pp.c:3891)
      Constant: type='int', value='0' (at pp.c:3891)
  Decl: name='Msp430RefVoltArbiterImplP__Config__default__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:3893)
    FuncDecl: quals=None (at pp.c:3893)
      ParamList:  (at pp.c:3893)
        Decl: name='client', quals=[], storage=[] (at pp.c:3893)
          TypeDecl: declname='client', quals=[] (at pp.c:3893)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3892)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__Config__default__getConfiguration', quals=['const'] (at pp.c:3893)
          IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name='Msp430Adc12ConfAlertC__0__ConfUp__getConfiguration', quals=[], storage=['static'] (at pp.c:3895)
    FuncDecl: quals=None (at pp.c:3895)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ConfAlertC__0__ConfUp__getConfiguration', quals=[] (at pp.c:3895)
        IdentifierType: names=['Msp430Adc12ConfAlertC__0__ConfUp__adc_config_t'] (at None)
  Decl: name='Msp430Adc12ConfAlertC__0__ConfSub__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:3897)
    FuncDecl: quals=None (at pp.c:3897)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      PtrDecl: quals=[] (at pp.c:3897)
        TypeDecl: declname='Msp430Adc12ConfAlertC__0__ConfSub__getConfiguration', quals=['const'] (at pp.c:3897)
          IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name='AdcStreamP__bufferDone__postTask', quals=[], storage=['static'] (at pp.c:3899)
    FuncDecl: quals=None (at pp.c:3899)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__bufferDone__postTask', quals=[] (at pp.c:3899)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__readStreamDone__postTask', quals=[], storage=['static'] (at pp.c:3901)
    FuncDecl: quals=None (at pp.c:3901)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__readStreamDone__postTask', quals=[] (at pp.c:3901)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__readStreamFail__postTask', quals=[], storage=['static'] (at pp.c:3903)
    FuncDecl: quals=None (at pp.c:3903)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__readStreamFail__postTask', quals=[] (at pp.c:3903)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__Alarm__getNow', quals=[], storage=['static'] (at pp.c:3905)
    FuncDecl: quals=None (at pp.c:3905)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__Alarm__getNow', quals=[] (at pp.c:3905)
        IdentifierType: names=['AdcStreamP__Alarm__size_type'] (at None)
  Decl: name='AdcStreamP__Alarm__startAt', quals=[], storage=['static'] (at pp.c:3907)
    FuncDecl: quals=None (at pp.c:3907)
      ParamList:  (at pp.c:3907)
        Decl: name='t0', quals=[], storage=[] (at pp.c:3907)
          TypeDecl: declname='t0', quals=[] (at pp.c:3907)
            IdentifierType: names=['AdcStreamP__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3907)
          TypeDecl: declname='dt', quals=[] (at pp.c:3907)
            IdentifierType: names=['AdcStreamP__Alarm__size_type'] (at None)
      TypeDecl: declname='AdcStreamP__Alarm__startAt', quals=[] (at pp.c:3907)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__AdcConfigure__getConfiguration', quals=[], storage=['static'] (at pp.c:3909)
    FuncDecl: quals=None (at pp.c:3909)
      ParamList:  (at pp.c:3911)
        Decl: name='arg_0x101c49318', quals=[], storage=[] (at pp.c:3911)
          TypeDecl: declname='arg_0x101c49318', quals=[] (at pp.c:3911)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcStreamP__AdcConfigure__getConfiguration', quals=[] (at pp.c:3909)
        IdentifierType: names=['AdcStreamP__AdcConfigure__adc_config_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__getData', quals=[], storage=['static'] (at pp.c:3913)
    FuncDecl: quals=None (at pp.c:3913)
      ParamList:  (at pp.c:3915)
        Decl: name='arg_0x101c4bb90', quals=[], storage=[] (at pp.c:3915)
          TypeDecl: declname='arg_0x101c4bb90', quals=[] (at pp.c:3915)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__getData', quals=[] (at pp.c:3913)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__configureSingle', quals=[], storage=['static'] (at pp.c:3917)
    FuncDecl: quals=None (at pp.c:3917)
      ParamList:  (at pp.c:3919)
        Decl: name='arg_0x101c4bb90', quals=[], storage=[] (at pp.c:3919)
          TypeDecl: declname='arg_0x101c4bb90', quals=[] (at pp.c:3919)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:3921)
          PtrDecl: quals=[] (at pp.c:3921)
            TypeDecl: declname='config', quals=['const'] (at pp.c:3921)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__configureSingle', quals=[] (at pp.c:3917)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__configureMultiple', quals=[], storage=['static'] (at pp.c:3923)
    FuncDecl: quals=None (at pp.c:3923)
      ParamList:  (at pp.c:3925)
        Decl: name='arg_0x101c4bb90', quals=[], storage=[] (at pp.c:3925)
          TypeDecl: declname='arg_0x101c4bb90', quals=[] (at pp.c:3925)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:3927)
          PtrDecl: quals=[] (at pp.c:3927)
            TypeDecl: declname='config', quals=['const'] (at pp.c:3927)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        Decl: name='buffer', quals=[], storage=[] (at pp.c:3927)
          PtrDecl: quals=[] (at pp.c:3927)
            TypeDecl: declname='buffer', quals=[] (at pp.c:3927)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:3927)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:3927)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='jiffies', quals=[], storage=[] (at pp.c:3927)
          TypeDecl: declname='jiffies', quals=[] (at pp.c:3927)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__configureMultiple', quals=[] (at pp.c:3923)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__ReadStream__bufferDone', quals=[], storage=['static'] (at pp.c:3929)
    FuncDecl: quals=None (at pp.c:3929)
      ParamList:  (at pp.c:3931)
        Decl: name='arg_0x101c4fb08', quals=[], storage=[] (at pp.c:3931)
          TypeDecl: declname='arg_0x101c4fb08', quals=[] (at pp.c:3931)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:3933)
          TypeDecl: declname='result', quals=[] (at pp.c:3933)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:3935)
          PtrDecl: quals=[] (at pp.c:3935)
            TypeDecl: declname='buf', quals=[] (at pp.c:3935)
              IdentifierType: names=['AdcStreamP__ReadStream__val_t'] (at None)
        Decl: name='count', quals=[], storage=[] (at pp.c:3939)
          TypeDecl: declname='count', quals=[] (at pp.c:3939)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcStreamP__ReadStream__bufferDone', quals=[] (at pp.c:3929)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__ReadStream__readDone', quals=[], storage=['static'] (at pp.c:3941)
    FuncDecl: quals=None (at pp.c:3941)
      ParamList:  (at pp.c:3943)
        Decl: name='arg_0x101c4fb08', quals=[], storage=[] (at pp.c:3943)
          TypeDecl: declname='arg_0x101c4fb08', quals=[] (at pp.c:3943)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:3945)
          TypeDecl: declname='result', quals=[] (at pp.c:3945)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='usActualPeriod', quals=[], storage=[] (at pp.c:3945)
          TypeDecl: declname='usActualPeriod', quals=[] (at pp.c:3945)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='AdcStreamP__ReadStream__readDone', quals=[] (at pp.c:3941)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:3947)
    Enum: name='AdcStreamP____nesc_unnamed4295' (at pp.c:3947)
      EnumeratorList:  (at pp.c:3949)
        Enumerator: name='AdcStreamP__readStreamDone' (at pp.c:3949)
          Constant: type='int', value='5U' (at pp.c:3949)
  Typedef: name='AdcStreamP____nesc_sillytask_readStreamDone', quals=[], storage=['typedef'] (at pp.c:3952)
    ArrayDecl:  (at pp.c:3952)
      TypeDecl: declname='AdcStreamP____nesc_sillytask_readStreamDone', quals=[] (at pp.c:3952)
        IdentifierType: names=['int'] (at None)
      ID: name='AdcStreamP__readStreamDone' (at pp.c:3952)
  Decl: name=None, quals=[], storage=[] (at pp.c:3954)
    Enum: name='AdcStreamP____nesc_unnamed4296' (at pp.c:3954)
      EnumeratorList:  (at pp.c:3956)
        Enumerator: name='AdcStreamP__readStreamFail' (at pp.c:3956)
          Constant: type='int', value='6U' (at pp.c:3956)
  Typedef: name='AdcStreamP____nesc_sillytask_readStreamFail', quals=[], storage=['typedef'] (at pp.c:3959)
    ArrayDecl:  (at pp.c:3959)
      TypeDecl: declname='AdcStreamP____nesc_sillytask_readStreamFail', quals=[] (at pp.c:3959)
        IdentifierType: names=['int'] (at None)
      ID: name='AdcStreamP__readStreamFail' (at pp.c:3959)
  Decl: name=None, quals=[], storage=[] (at pp.c:3961)
    Enum: name='AdcStreamP____nesc_unnamed4297' (at pp.c:3961)
      EnumeratorList:  (at pp.c:3963)
        Enumerator: name='AdcStreamP__bufferDone' (at pp.c:3963)
          Constant: type='int', value='7U' (at pp.c:3963)
  Typedef: name='AdcStreamP____nesc_sillytask_bufferDone', quals=[], storage=['typedef'] (at pp.c:3966)
    ArrayDecl:  (at pp.c:3966)
      TypeDecl: declname='AdcStreamP____nesc_sillytask_bufferDone', quals=[] (at pp.c:3966)
        IdentifierType: names=['int'] (at None)
      ID: name='AdcStreamP__bufferDone' (at pp.c:3966)
  Decl: name=None, quals=[], storage=[] (at pp.c:3968)
    Enum: name='AdcStreamP____nesc_unnamed4298' (at pp.c:3968)
      EnumeratorList:  (at pp.c:3969)
        Enumerator: name='AdcStreamP__NSTREAM' (at pp.c:3969)
          Constant: type='int', value='1U' (at pp.c:3969)
  Decl: name='AdcStreamP__client', quals=[], storage=[] (at pp.c:3975)
    TypeDecl: declname='AdcStreamP__client', quals=[] (at pp.c:3975)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='AdcStreamP__NSTREAM' (at pp.c:3975)
  Decl: name=None, quals=[], storage=[] (at pp.c:3978)
    Struct: name='AdcStreamP__list_entry_t', packed=False (at pp.c:3978)
      Decl: name='count', quals=[], storage=[] (at 0)
        TypeDecl: declname='count', quals=[] (at pp.c:3979)
          IdentifierType: names=['uint16_t'] (at None)
      Decl: name='next', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:3980)
          TypeDecl: declname='next', quals=[] (at pp.c:3980)
            Struct: name='AdcStreamP__list_entry_t', packed=False (at pp.c:3980)
  Decl: name='AdcStreamP__bufferQueue', quals=[], storage=[] (at pp.c:3982)
    ArrayDecl:  (at pp.c:3982)
      PtrDecl: quals=[] (at pp.c:3982)
        TypeDecl: declname='AdcStreamP__bufferQueue', quals=[] (at pp.c:3982)
          Struct: name='AdcStreamP__list_entry_t', packed=False (at pp.c:3982)
      ID: name='AdcStreamP__NSTREAM' (at pp.c:3982)
  Decl: name='AdcStreamP__bufferQueueEnd', quals=[], storage=[] (at pp.c:3983)
    ArrayDecl:  (at pp.c:3983)
      PtrDecl: quals=[] (at pp.c:3983)
        PtrDecl: quals=[] (at pp.c:3983)
          TypeDecl: declname='AdcStreamP__bufferQueueEnd', quals=[] (at pp.c:3983)
            Struct: name='AdcStreamP__list_entry_t', packed=False (at pp.c:3983)
      ID: name='AdcStreamP__NSTREAM' (at pp.c:3983)
  Decl: name='AdcStreamP__lastBuffer', quals=[], storage=[] (at pp.c:3984)
    PtrDecl: quals=[] (at pp.c:3984)
      TypeDecl: declname='AdcStreamP__lastBuffer', quals=[] (at pp.c:3984)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='AdcStreamP__lastCount', quals=[], storage=[] (at pp.c:3986)
    TypeDecl: declname='AdcStreamP__lastCount', quals=[] (at pp.c:3986)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='AdcStreamP__count', quals=[], storage=[] (at pp.c:3988)
    TypeDecl: declname='AdcStreamP__count', quals=[] (at pp.c:3988)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='AdcStreamP__buffer', quals=[], storage=[] (at pp.c:3989)
    PtrDecl: quals=[] (at pp.c:3989)
      TypeDecl: declname='AdcStreamP__buffer', quals=[] (at pp.c:3989)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='AdcStreamP__pos', quals=[], storage=[] (at pp.c:3990)
    PtrDecl: quals=[] (at pp.c:3990)
      TypeDecl: declname='AdcStreamP__pos', quals=[] (at pp.c:3990)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='AdcStreamP__now', quals=[], storage=[] (at pp.c:3991)
    TypeDecl: declname='AdcStreamP__now', quals=[] (at pp.c:3991)
      IdentifierType: names=['uint32_t'] (at None)
  Decl: name='AdcStreamP__period', quals=[], storage=[] (at pp.c:3993)
    TypeDecl: declname='AdcStreamP__period', quals=[] (at pp.c:3993)
      IdentifierType: names=['uint32_t'] (at None)
  Decl: name='AdcStreamP__periodModified', quals=[], storage=[] (at pp.c:3994)
    TypeDecl: declname='AdcStreamP__periodModified', quals=[] (at pp.c:3994)
      IdentifierType: names=['bool'] (at None)
  Decl: name='AdcStreamP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:3997)
    FuncDecl: quals=None (at pp.c:3997)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__Init__init', quals=[] (at pp.c:3997)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__sampleSingle', quals=[], storage=['inline', 'static'] (at pp.c:4006)
    FuncDecl: quals=None (at pp.c:4006)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__sampleSingle', quals=[] (at pp.c:4006)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__postBuffer', quals=[], storage=['inline', 'static'] (at pp.c:4010)
    FuncDecl: quals=None (at pp.c:4010)
      ParamList:  (at pp.c:4010)
        Decl: name='c', quals=[], storage=[] (at pp.c:4010)
          TypeDecl: declname='c', quals=[] (at pp.c:4010)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:4010)
          PtrDecl: quals=[] (at pp.c:4010)
            TypeDecl: declname='buf', quals=[] (at pp.c:4010)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='n', quals=[], storage=[] (at pp.c:4010)
          TypeDecl: declname='n', quals=[] (at pp.c:4010)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcStreamP__postBuffer', quals=[] (at pp.c:4010)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__readStreamDone__runTask', quals=[], storage=['inline', 'static'] (at pp.c:4012)
    FuncDecl: quals=None (at pp.c:4012)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__readStreamDone__runTask', quals=[] (at pp.c:4012)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__readStreamFail__runTask', quals=[], storage=['inline', 'static'] (at pp.c:4014)
    FuncDecl: quals=None (at pp.c:4014)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__readStreamFail__runTask', quals=[] (at pp.c:4014)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__bufferDone__runTask', quals=[], storage=['inline', 'static'] (at pp.c:4016)
    FuncDecl: quals=None (at pp.c:4016)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__bufferDone__runTask', quals=[] (at pp.c:4016)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__nextAlarm', quals=[], storage=['inline', 'static'] (at pp.c:4018)
    FuncDecl: quals=None (at pp.c:4018)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__nextAlarm', quals=[] (at pp.c:4018)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__Alarm__fired', quals=[], storage=['inline', 'static'] (at pp.c:4023)
    FuncDecl: quals=None (at pp.c:4023)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__Alarm__fired', quals=[] (at pp.c:4023)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__nextBuffer', quals=[], storage=['static'] (at pp.c:4027)
    FuncDecl: quals=None (at pp.c:4027)
      ParamList:  (at pp.c:4027)
        Decl: name='startNextAlarm', quals=[], storage=[] (at pp.c:4027)
          TypeDecl: declname='startNextAlarm', quals=[] (at pp.c:4027)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='AdcStreamP__nextBuffer', quals=[] (at pp.c:4027)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__nextMultiple', quals=[], storage=['static'] (at pp.c:4029)
    FuncDecl: quals=None (at pp.c:4029)
      ParamList:  (at pp.c:4029)
        Decl: name='c', quals=[], storage=[] (at pp.c:4029)
          TypeDecl: declname='c', quals=[] (at pp.c:4029)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcStreamP__nextMultiple', quals=[] (at pp.c:4029)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__ReadStream__read', quals=[], storage=['static'] (at pp.c:4031)
    FuncDecl: quals=None (at pp.c:4031)
      ParamList:  (at pp.c:4031)
        Decl: name='c', quals=[], storage=[] (at pp.c:4031)
          TypeDecl: declname='c', quals=[] (at pp.c:4031)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='usPeriod', quals=[], storage=[] (at pp.c:4031)
          TypeDecl: declname='usPeriod', quals=[] (at pp.c:4031)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='AdcStreamP__ReadStream__read', quals=[] (at pp.c:4031)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__singleDataReady', quals=[], storage=['static'] (at pp.c:4033)
    FuncDecl: quals=None (at pp.c:4033)
      ParamList:  (at pp.c:4033)
        Decl: name='streamClient', quals=[], storage=[] (at pp.c:4033)
          TypeDecl: declname='streamClient', quals=[] (at pp.c:4033)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:4033)
          TypeDecl: declname='data', quals=[] (at pp.c:4033)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__singleDataReady', quals=[] (at pp.c:4033)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__multipleDataReady', quals=[], storage=['static'] (at pp.c:4035)
    FuncDecl: quals=None (at pp.c:4035)
      ParamList:  (at pp.c:4035)
        Decl: name='streamClient', quals=[], storage=[] (at pp.c:4035)
          TypeDecl: declname='streamClient', quals=[] (at pp.c:4035)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:4036)
          PtrDecl: quals=[] (at pp.c:4036)
            TypeDecl: declname='buf', quals=[] (at pp.c:4036)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:4036)
          TypeDecl: declname='length', quals=[] (at pp.c:4036)
            IdentifierType: names=['uint16_t'] (at None)
      PtrDecl: quals=[] (at pp.c:4035)
        TypeDecl: declname='AdcStreamP__SingleChannel__multipleDataReady', quals=[] (at pp.c:4035)
          IdentifierType: names=['uint16_t'] (at None)
  Decl: name='AdcStreamP__defaultConfig', quals=['const'], storage=[] (at pp.c:4038)
    TypeDecl: declname='AdcStreamP__defaultConfig', quals=['const'] (at pp.c:4038)
      IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    ExprList:  (at pp.c:4039)
      Assignment: op='=' (at pp.c:4039)
        StructRef: type='.' (at pp.c:4039)
          ID: name='inch' (at pp.c:4039)
        ID: name='SUPPLY_VOLTAGE_HALF_CHANNEL' (at pp.c:4039)
      Assignment: op='=' (at pp.c:4040)
        StructRef: type='.' (at pp.c:4040)
          ID: name='sref' (at pp.c:4040)
        ID: name='REFERENCE_VREFplus_AVss' (at pp.c:4040)
      Assignment: op='=' (at pp.c:4041)
        StructRef: type='.' (at pp.c:4041)
          ID: name='ref2_5v' (at pp.c:4041)
        ID: name='REFVOLT_LEVEL_1_5' (at pp.c:4041)
      Assignment: op='=' (at pp.c:4042)
        StructRef: type='.' (at pp.c:4042)
          ID: name='adc12ssel' (at pp.c:4042)
        ID: name='SHT_SOURCE_ACLK' (at pp.c:4042)
      Assignment: op='=' (at pp.c:4043)
        StructRef: type='.' (at pp.c:4043)
          ID: name='adc12div' (at pp.c:4043)
        ID: name='SHT_CLOCK_DIV_1' (at pp.c:4043)
      Assignment: op='=' (at pp.c:4044)
        StructRef: type='.' (at pp.c:4044)
          ID: name='sht' (at pp.c:4044)
        ID: name='SAMPLE_HOLD_4_CYCLES' (at pp.c:4044)
      Assignment: op='=' (at pp.c:4045)
        StructRef: type='.' (at pp.c:4045)
          ID: name='sampcon_ssel' (at pp.c:4045)
        ID: name='SAMPCON_SOURCE_SMCLK' (at pp.c:4045)
      Assignment: op='=' (at pp.c:4046)
        StructRef: type='.' (at pp.c:4046)
          ID: name='sampcon_id' (at pp.c:4046)
        ID: name='SAMPCON_CLOCK_DIV_1' (at pp.c:4046)
  Decl: name='AdcStreamP__AdcConfigure__default__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:4048)
    FuncDecl: quals=None (at pp.c:4048)
      ParamList:  (at pp.c:4048)
        Decl: name='c', quals=[], storage=[] (at pp.c:4048)
          TypeDecl: declname='c', quals=[] (at pp.c:4048)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:4048)
        TypeDecl: declname='AdcStreamP__AdcConfigure__default__getConfiguration', quals=['const'] (at pp.c:4048)
          IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__default__configureMultiple', quals=[], storage=['inline', 'static'] (at pp.c:4052)
    FuncDecl: quals=None (at pp.c:4052)
      ParamList:  (at pp.c:4052)
        Decl: name='c', quals=[], storage=[] (at pp.c:4052)
          TypeDecl: declname='c', quals=[] (at pp.c:4052)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:4053)
          PtrDecl: quals=[] (at pp.c:4053)
            TypeDecl: declname='config', quals=['const'] (at pp.c:4053)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        Decl: name='b', quals=[], storage=[] (at pp.c:4053)
          ArrayDecl:  (at pp.c:4053)
            TypeDecl: declname='b', quals=[] (at pp.c:4053)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:4054)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:4054)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='jiffies', quals=[], storage=[] (at pp.c:4054)
          TypeDecl: declname='jiffies', quals=[] (at pp.c:4054)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__default__configureMultiple', quals=[] (at pp.c:4052)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__default__getData', quals=[], storage=['inline', 'static'] (at pp.c:4058)
    FuncDecl: quals=None (at pp.c:4058)
      ParamList:  (at pp.c:4058)
        Decl: name='c', quals=[], storage=[] (at pp.c:4058)
          TypeDecl: declname='c', quals=[] (at pp.c:4058)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__default__getData', quals=[] (at pp.c:4058)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__default__configureSingle', quals=[], storage=['inline', 'static'] (at pp.c:4062)
    FuncDecl: quals=None (at pp.c:4062)
      ParamList:  (at pp.c:4062)
        Decl: name='c', quals=[], storage=[] (at pp.c:4062)
          TypeDecl: declname='c', quals=[] (at pp.c:4062)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:4063)
          PtrDecl: quals=[] (at pp.c:4063)
            TypeDecl: declname='config', quals=['const'] (at pp.c:4063)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__default__configureSingle', quals=[] (at pp.c:4062)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430Compare__setEvent', quals=[], storage=['static'] (at pp.c:4065)
    FuncDecl: quals=None (at pp.c:4065)
      ParamList:  (at pp.c:4065)
        Decl: name='time', quals=[], storage=[] (at pp.c:4065)
          TypeDecl: declname='time', quals=[] (at pp.c:4065)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430Compare__setEvent', quals=[] (at pp.c:4065)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430Compare__setEventFromNow', quals=[], storage=['static'] (at pp.c:4067)
    FuncDecl: quals=None (at pp.c:4067)
      ParamList:  (at pp.c:4067)
        Decl: name='delta', quals=[], storage=[] (at pp.c:4067)
          TypeDecl: declname='delta', quals=[] (at pp.c:4067)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430Compare__setEventFromNow', quals=[] (at pp.c:4067)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430Timer__get', quals=[], storage=['static'] (at pp.c:4069)
    FuncDecl: quals=None (at pp.c:4069)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430Timer__get', quals=[] (at pp.c:4069)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430AlarmC__1__Alarm__fired', quals=[], storage=['static'] (at pp.c:4071)
    FuncDecl: quals=None (at pp.c:4071)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Alarm__fired', quals=[] (at pp.c:4071)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430TimerControl__enableEvents', quals=[], storage=['static'] (at pp.c:4073)
    FuncDecl: quals=None (at pp.c:4073)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__enableEvents', quals=[] (at pp.c:4073)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430TimerControl__disableEvents', quals=[], storage=['static'] (at pp.c:4074)
    FuncDecl: quals=None (at pp.c:4074)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__disableEvents', quals=[] (at pp.c:4074)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430TimerControl__clearPendingInterrupt', quals=[], storage=['static'] (at pp.c:4076)
    FuncDecl: quals=None (at pp.c:4076)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__clearPendingInterrupt', quals=[] (at pp.c:4076)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430Compare__fired', quals=[], storage=['inline', 'static'] (at pp.c:4078)
    FuncDecl: quals=None (at pp.c:4078)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430Compare__fired', quals=[] (at pp.c:4078)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Alarm__startAt', quals=[], storage=['inline', 'static'] (at pp.c:4089)
    FuncDecl: quals=None (at pp.c:4089)
      ParamList:  (at pp.c:4089)
        Decl: name='t0', quals=[], storage=[] (at pp.c:4089)
          TypeDecl: declname='t0', quals=[] (at pp.c:4089)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:4089)
          TypeDecl: declname='dt', quals=[] (at pp.c:4089)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Alarm__startAt', quals=[] (at pp.c:4089)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4091)
    FuncDecl: quals=None (at pp.c:4091)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430Timer__overflow', quals=[] (at pp.c:4091)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__Alarm__fired', quals=[], storage=['static'] (at pp.c:4093)
    FuncDecl: quals=None (at pp.c:4093)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__fired', quals=[] (at pp.c:4093)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__AlarmFrom__startAt', quals=[], storage=['static'] (at pp.c:4095)
    FuncDecl: quals=None (at pp.c:4095)
      ParamList:  (at pp.c:4095)
        Decl: name='t0', quals=[], storage=[] (at pp.c:4095)
          TypeDecl: declname='t0', quals=[] (at pp.c:4095)
            IdentifierType: names=['TransformAlarmC__1__AlarmFrom__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:4095)
          TypeDecl: declname='dt', quals=[] (at pp.c:4095)
            IdentifierType: names=['TransformAlarmC__1__AlarmFrom__size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__1__AlarmFrom__startAt', quals=[] (at pp.c:4095)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__Counter__get', quals=[], storage=['static'] (at pp.c:4097)
    FuncDecl: quals=None (at pp.c:4097)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Counter__get', quals=[] (at pp.c:4097)
        IdentifierType: names=['TransformAlarmC__1__Counter__size_type'] (at None)
  Decl: name='TransformAlarmC__1__m_t0', quals=[], storage=[] (at pp.c:4099)
    TypeDecl: declname='TransformAlarmC__1__m_t0', quals=[] (at pp.c:4099)
      IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
  Decl: name='TransformAlarmC__1__m_dt', quals=[], storage=[] (at pp.c:4100)
    TypeDecl: declname='TransformAlarmC__1__m_dt', quals=[] (at pp.c:4100)
      IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:4102)
    Enum: name='TransformAlarmC__1____nesc_unnamed4299' (at pp.c:4102)
      EnumeratorList:  (at pp.c:4104)
        Enumerator: name='TransformAlarmC__1__MAX_DELAY_LOG2' (at pp.c:4104)
          BinaryOp: op='-' (at pp.c:4104)
            BinaryOp: op='-' (at pp.c:4104)
              BinaryOp: op='*' (at pp.c:4104)
                Constant: type='int', value='8' (at pp.c:4104)
                UnaryOp: op='sizeof' (at pp.c:4104)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformAlarmC__1__from_size_type'] (at None)
              Constant: type='int', value='1' (at pp.c:4104)
            Constant: type='int', value='5' (at pp.c:4104)
        Enumerator: name='TransformAlarmC__1__MAX_DELAY' (at pp.c:4105)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
              Constant: type='int', value='1' (at pp.c:4105)
            ID: name='TransformAlarmC__1__MAX_DELAY_LOG2' (at pp.c:4105)
  Decl: name='TransformAlarmC__1__Alarm__getNow', quals=[], storage=['inline', 'static'] (at pp.c:4108)
    FuncDecl: quals=None (at pp.c:4108)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__getNow', quals=[] (at pp.c:4108)
        IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
  Decl: name='TransformAlarmC__1__set_alarm', quals=[], storage=['static'] (at pp.c:4110)
    FuncDecl: quals=None (at pp.c:4110)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__set_alarm', quals=[] (at pp.c:4110)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__Alarm__startAt', quals=[], storage=['inline', 'static'] (at pp.c:4112)
    FuncDecl: quals=None (at pp.c:4112)
      ParamList:  (at pp.c:4112)
        Decl: name='t0', quals=[], storage=[] (at pp.c:4112)
          TypeDecl: declname='t0', quals=[] (at pp.c:4112)
            IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:4112)
          TypeDecl: declname='dt', quals=[] (at pp.c:4112)
            IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__startAt', quals=[] (at pp.c:4112)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__AlarmFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:4114)
    FuncDecl: quals=None (at pp.c:4114)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__AlarmFrom__fired', quals=[] (at pp.c:4114)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4116)
    FuncDecl: quals=None (at pp.c:4116)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Counter__overflow', quals=[] (at pp.c:4116)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__Service__read', quals=[], storage=['static'] (at pp.c:4118)
    FuncDecl: quals=None (at pp.c:4118)
      ParamList:  (at pp.c:4120)
        Decl: name='arg_0x101cc7148', quals=[], storage=[] (at pp.c:4120)
          TypeDecl: declname='arg_0x101cc7148', quals=[] (at pp.c:4120)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='usPeriod', quals=[], storage=[] (at pp.c:4122)
          TypeDecl: declname='usPeriod', quals=[] (at pp.c:4122)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__Service__read', quals=[] (at pp.c:4118)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbitratedReadStreamC__0__ReadStream__bufferDone', quals=[], storage=['static'] (at pp.c:4133)
    FuncDecl: quals=None (at pp.c:4133)
      ParamList:  (at pp.c:4135)
        Decl: name='arg_0x101ccb020', quals=[], storage=[] (at pp.c:4135)
          TypeDecl: declname='arg_0x101ccb020', quals=[] (at pp.c:4135)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:4137)
          TypeDecl: declname='result', quals=[] (at pp.c:4137)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:4139)
          PtrDecl: quals=[] (at pp.c:4139)
            TypeDecl: declname='buf', quals=[] (at pp.c:4139)
              IdentifierType: names=['ArbitratedReadStreamC__0__ReadStream__val_t'] (at None)
        Decl: name='count', quals=[], storage=[] (at pp.c:4143)
          TypeDecl: declname='count', quals=[] (at pp.c:4143)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__bufferDone', quals=[] (at pp.c:4133)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__ReadStream__readDone', quals=[], storage=['static'] (at pp.c:4145)
    FuncDecl: quals=None (at pp.c:4145)
      ParamList:  (at pp.c:4147)
        Decl: name='arg_0x101ccb020', quals=[], storage=[] (at pp.c:4147)
          TypeDecl: declname='arg_0x101ccb020', quals=[] (at pp.c:4147)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:4149)
          TypeDecl: declname='result', quals=[] (at pp.c:4149)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='usActualPeriod', quals=[], storage=[] (at pp.c:4149)
          TypeDecl: declname='usActualPeriod', quals=[] (at pp.c:4149)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__readDone', quals=[] (at pp.c:4145)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__Resource__release', quals=[], storage=['static'] (at pp.c:4151)
    FuncDecl: quals=None (at pp.c:4151)
      ParamList:  (at pp.c:4153)
        Decl: name='arg_0x101cc3020', quals=[], storage=[] (at pp.c:4153)
          TypeDecl: declname='arg_0x101cc3020', quals=[] (at pp.c:4153)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__Resource__release', quals=[] (at pp.c:4151)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbitratedReadStreamC__0__period', quals=[], storage=[] (at pp.c:4157)
    ArrayDecl:  (at pp.c:4157)
      TypeDecl: declname='ArbitratedReadStreamC__0__period', quals=[] (at pp.c:4157)
        IdentifierType: names=['uint32_t'] (at None)
      Constant: type='int', value='1U' (at pp.c:4157)
  Decl: name='ArbitratedReadStreamC__0__Service__bufferDone', quals=[], storage=['inline', 'static'] (at pp.c:4159)
    FuncDecl: quals=None (at pp.c:4159)
      ParamList:  (at pp.c:4159)
        Decl: name='client', quals=[], storage=[] (at pp.c:4159)
          TypeDecl: declname='client', quals=[] (at pp.c:4159)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:4159)
          TypeDecl: declname='result', quals=[] (at pp.c:4159)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:4159)
          PtrDecl: quals=[] (at pp.c:4159)
            TypeDecl: declname='buf', quals=[] (at pp.c:4159)
              IdentifierType: names=['ArbitratedReadStreamC__0__val_t'] (at None)
        Decl: name='count', quals=[], storage=[] (at pp.c:4159)
          TypeDecl: declname='count', quals=[] (at pp.c:4159)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__Service__bufferDone', quals=[] (at pp.c:4159)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__Service__readDone', quals=[], storage=['inline', 'static'] (at pp.c:4164)
    FuncDecl: quals=None (at pp.c:4164)
      ParamList:  (at pp.c:4164)
        Decl: name='client', quals=[], storage=[] (at pp.c:4164)
          TypeDecl: declname='client', quals=[] (at pp.c:4164)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:4164)
          TypeDecl: declname='result', quals=[] (at pp.c:4164)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='actualPeriod', quals=[], storage=[] (at pp.c:4164)
          TypeDecl: declname='actualPeriod', quals=[] (at pp.c:4164)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__Service__readDone', quals=[] (at pp.c:4164)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__Resource__granted', quals=[], storage=['inline', 'static'] (at pp.c:4170)
    FuncDecl: quals=None (at pp.c:4170)
      ParamList:  (at pp.c:4170)
        Decl: name='client', quals=[], storage=[] (at pp.c:4170)
          TypeDecl: declname='client', quals=[] (at pp.c:4170)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__Resource__granted', quals=[] (at pp.c:4170)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__Resource__default__release', quals=[], storage=['inline', 'static'] (at pp.c:4178)
    FuncDecl: quals=None (at pp.c:4178)
      ParamList:  (at pp.c:4178)
        Decl: name='client', quals=[], storage=[] (at pp.c:4178)
          TypeDecl: declname='client', quals=[] (at pp.c:4178)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__Resource__default__release', quals=[] (at pp.c:4178)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbitratedReadStreamC__0__ReadStream__default__bufferDone', quals=[], storage=['inline', 'static'] (at pp.c:4180)
    FuncDecl: quals=None (at pp.c:4180)
      ParamList:  (at pp.c:4180)
        Decl: name='client', quals=[], storage=[] (at pp.c:4180)
          TypeDecl: declname='client', quals=[] (at pp.c:4180)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:4180)
          TypeDecl: declname='result', quals=[] (at pp.c:4180)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:4180)
          PtrDecl: quals=[] (at pp.c:4180)
            TypeDecl: declname='buf', quals=[] (at pp.c:4180)
              IdentifierType: names=['ArbitratedReadStreamC__0__val_t'] (at None)
        Decl: name='count', quals=[], storage=[] (at pp.c:4180)
          TypeDecl: declname='count', quals=[] (at pp.c:4180)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__default__bufferDone', quals=[] (at pp.c:4180)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__ReadStream__default__readDone', quals=[], storage=['inline', 'static'] (at pp.c:4184)
    FuncDecl: quals=None (at pp.c:4184)
      ParamList:  (at pp.c:4184)
        Decl: name='client', quals=[], storage=[] (at pp.c:4184)
          TypeDecl: declname='client', quals=[] (at pp.c:4184)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:4184)
          TypeDecl: declname='result', quals=[] (at pp.c:4184)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='actualPeriod', quals=[], storage=[] (at pp.c:4184)
          TypeDecl: declname='actualPeriod', quals=[] (at pp.c:4184)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__default__readDone', quals=[] (at pp.c:4184)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ConfAlertC__1__ConfUp__getConfiguration', quals=[], storage=['static'] (at pp.c:4186)
    FuncDecl: quals=None (at pp.c:4186)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ConfAlertC__1__ConfUp__getConfiguration', quals=[] (at pp.c:4186)
        IdentifierType: names=['Msp430Adc12ConfAlertC__1__ConfUp__adc_config_t'] (at None)
  Decl: name='Msp430Adc12ConfAlertC__1__ConfSub__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:4188)
    FuncDecl: quals=None (at pp.c:4188)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      PtrDecl: quals=[] (at pp.c:4188)
        TypeDecl: declname='Msp430Adc12ConfAlertC__1__ConfSub__getConfiguration', quals=['const'] (at pp.c:4188)
          IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name='Msp430InternalVoltageP__config', quals=['const'], storage=[] (at pp.c:4190)
    TypeDecl: declname='Msp430InternalVoltageP__config', quals=['const'] (at pp.c:4190)
      IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    ExprList:  (at pp.c:4191)
      Assignment: op='=' (at pp.c:4191)
        StructRef: type='.' (at pp.c:4191)
          ID: name='inch' (at pp.c:4191)
        ID: name='SUPPLY_VOLTAGE_HALF_CHANNEL' (at pp.c:4191)
      Assignment: op='=' (at pp.c:4192)
        StructRef: type='.' (at pp.c:4192)
          ID: name='sref' (at pp.c:4192)
        ID: name='REFERENCE_VREFplus_AVss' (at pp.c:4192)
      Assignment: op='=' (at pp.c:4193)
        StructRef: type='.' (at pp.c:4193)
          ID: name='ref2_5v' (at pp.c:4193)
        ID: name='REFVOLT_LEVEL_1_5' (at pp.c:4193)
      Assignment: op='=' (at pp.c:4194)
        StructRef: type='.' (at pp.c:4194)
          ID: name='adc12ssel' (at pp.c:4194)
        ID: name='SHT_SOURCE_ACLK' (at pp.c:4194)
      Assignment: op='=' (at pp.c:4195)
        StructRef: type='.' (at pp.c:4195)
          ID: name='adc12div' (at pp.c:4195)
        ID: name='SHT_CLOCK_DIV_1' (at pp.c:4195)
      Assignment: op='=' (at pp.c:4196)
        StructRef: type='.' (at pp.c:4196)
          ID: name='sht' (at pp.c:4196)
        ID: name='SAMPLE_HOLD_4_CYCLES' (at pp.c:4196)
      Assignment: op='=' (at pp.c:4197)
        StructRef: type='.' (at pp.c:4197)
          ID: name='sampcon_ssel' (at pp.c:4197)
        ID: name='SAMPCON_SOURCE_SMCLK' (at pp.c:4197)
      Assignment: op='=' (at pp.c:4198)
        StructRef: type='.' (at pp.c:4198)
          ID: name='sampcon_id' (at pp.c:4198)
        ID: name='SAMPCON_CLOCK_DIV_1' (at pp.c:4198)
  Decl: name='Msp430InternalVoltageP__AdcConfigure__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:4201)
    FuncDecl: quals=None (at pp.c:4201)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      PtrDecl: quals=[] (at pp.c:4201)
        TypeDecl: declname='Msp430InternalVoltageP__AdcConfigure__getConfiguration', quals=['const'] (at pp.c:4201)
          IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name='Msp430Adc12ConfAlertC__2__ConfUp__getConfiguration', quals=[], storage=['static'] (at pp.c:4203)
    FuncDecl: quals=None (at pp.c:4203)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ConfAlertC__2__ConfUp__getConfiguration', quals=[] (at pp.c:4203)
        IdentifierType: names=['Msp430Adc12ConfAlertC__2__ConfUp__adc_config_t'] (at None)
  Decl: name='Msp430Adc12ConfAlertC__2__ConfSub__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:4205)
    FuncDecl: quals=None (at pp.c:4205)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      PtrDecl: quals=[] (at pp.c:4205)
        TypeDecl: declname='Msp430Adc12ConfAlertC__2__ConfSub__getConfiguration', quals=['const'] (at pp.c:4205)
          IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  FuncDef:  (at pp.c:4207)
    Decl: name='__nesc_enable_interrupt', quals=[], storage=['inline', 'static'] (at pp.c:4207)
      FuncDecl: quals=None (at pp.c:4207)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_enable_interrupt', quals=[] (at pp.c:4207)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4208)
      Assignment: op='|=' (at pp.c:4209)
        ID: name='_R2' (at pp.c:4209)
        Constant: type='int', value='0x0008' (at pp.c:4209)
  FuncDef:  (at pp.c:4212)
    Decl: name='Msp430TimerCapComP__2__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4212)
      FuncDecl: quals=None (at pp.c:4212)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Timer__overflow', quals=[] (at pp.c:4212)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4213)
  FuncDef:  (at pp.c:4217)
    Decl: name='Msp430TimerCapComP__1__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4217)
      FuncDecl: quals=None (at pp.c:4217)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Timer__overflow', quals=[] (at pp.c:4217)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4218)
  FuncDef:  (at pp.c:4222)
    Decl: name='Msp430TimerCapComP__0__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4222)
      FuncDecl: quals=None (at pp.c:4222)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Timer__overflow', quals=[] (at pp.c:4222)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4223)
  FuncDef:  (at pp.c:4227)
    Decl: name='Msp430Adc12ImplP__TimerA__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4227)
      FuncDecl: quals=None (at pp.c:4227)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__TimerA__overflow', quals=[] (at pp.c:4227)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4229)
  FuncDef:  (at pp.c:4233)
    Decl: name='Msp430TimerP__0__Timer__overflow', quals=[], storage=['static', 'inline'] (at pp.c:4233)
      FuncDecl: quals=None (at pp.c:4233)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Timer__overflow', quals=[] (at pp.c:4233)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4233)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__TimerA__overflow' (at pp.c:4235)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__0__Timer__overflow' (at pp.c:4237)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__1__Timer__overflow' (at pp.c:4239)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__2__Timer__overflow' (at pp.c:4241)
  FuncDef:  (at pp.c:4246)
    Decl: name='Msp430TimerP__0__Overflow__fired', quals=[], storage=['inline', 'static'] (at pp.c:4246)
      FuncDecl: quals=None (at pp.c:4246)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Overflow__fired', quals=[] (at pp.c:4246)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4247)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Timer__overflow' (at pp.c:4248)
  FuncDef:  (at pp.c:4255)
    Decl: name='Msp430TimerP__0__Event__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:4255)
      FuncDecl: quals=None (at pp.c:4255)
        ParamList:  (at pp.c:4255)
          Decl: name='n', quals=[], storage=[] (at pp.c:4255)
            TypeDecl: declname='n', quals=[] (at pp.c:4255)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Event__default__fired', quals=[] (at pp.c:4255)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4256)
  FuncDef:  (at pp.c:4260)
    Decl: name='Msp430TimerP__0__Event__fired', quals=[], storage=['static', 'inline'] (at pp.c:4260)
      FuncDecl: quals=None (at pp.c:4260)
        ParamList:  (at pp.c:4260)
          Decl: name='arg_0x10142ec98', quals=[], storage=[] (at pp.c:4260)
            TypeDecl: declname='arg_0x10142ec98', quals=[] (at pp.c:4260)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Event__fired', quals=[] (at pp.c:4260)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4260)
      Switch:  (at pp.c:4262)
        ID: name='arg_0x10142ec98' (at pp.c:4262)
        Compound:  (at pp.c:4262)
          Case:  (at pp.c:4264)
            Constant: type='int', value='0' (at pp.c:4264)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__0__Event__fired' (at pp.c:4266)
          Break:  (at pp.c:4268)
          Case:  (at pp.c:4270)
            Constant: type='int', value='1' (at pp.c:4270)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__1__Event__fired' (at pp.c:4272)
          Break:  (at pp.c:4274)
          Case:  (at pp.c:4276)
            Constant: type='int', value='2' (at pp.c:4276)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__2__Event__fired' (at pp.c:4278)
          Break:  (at pp.c:4280)
          Case:  (at pp.c:4282)
            Constant: type='int', value='5' (at pp.c:4282)
            FuncCall:  (at None)
              ID: name='Msp430TimerP__0__Overflow__fired' (at pp.c:4284)
          Break:  (at pp.c:4286)
          Default:  (at pp.c:4288)
            FuncCall:  (at None)
              ID: name='Msp430TimerP__0__Event__default__fired' (at pp.c:4290)
              ExprList:  (at pp.c:4290)
                ID: name='arg_0x10142ec98' (at pp.c:4290)
          Break:  (at pp.c:4292)
  FuncDef:  (at pp.c:4299)
    Decl: name='Msp430TimerP__0__VectorTimerX0__fired', quals=[], storage=['inline', 'static'] (at pp.c:4299)
      FuncDecl: quals=None (at pp.c:4299)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__VectorTimerX0__fired', quals=[] (at pp.c:4299)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4300)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Event__fired' (at pp.c:4301)
        ExprList:  (at pp.c:4301)
          Constant: type='int', value='0' (at pp.c:4301)
  FuncDef:  (at pp.c:4305)
    Decl: name='Msp430TimerCommonP__VectorTimerA0__fired', quals=[], storage=['static', 'inline'] (at pp.c:4305)
      FuncDecl: quals=None (at pp.c:4305)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCommonP__VectorTimerA0__fired', quals=[] (at pp.c:4305)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4305)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__VectorTimerX0__fired' (at pp.c:4307)
  FuncDef:  (at pp.c:4312)
    Decl: name='Msp430TimerCapComP__0__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:4312)
      FuncDecl: quals=None (at pp.c:4312)
        ParamList:  (at pp.c:4312)
          Decl: name='x', quals=[], storage=[] (at pp.c:4312)
            TypeDecl: declname='x', quals=[] (at pp.c:4312)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__int2CC', quals=[] (at pp.c:4312)
          IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
    Compound:  (at pp.c:4314)
      Decl: name='c', quals=[], storage=[] (at pp.c:4323)
        TypeDecl: declname='c', quals=[] (at pp.c:4323)
          Union: name='Msp430TimerCapComP__0____nesc_unnamed4300', packed=False (at pp.c:4316)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:4318)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:4320)
                IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
        ExprList:  (at pp.c:4323)
          Assignment: op='=' (at pp.c:4323)
            StructRef: type='.' (at pp.c:4323)
              ID: name='f' (at pp.c:4323)
            ID: name='x' (at pp.c:4323)
      Return:  (at pp.c:4326)
        StructRef: type='.' (at pp.c:4326)
          ID: name='c' (at pp.c:4326)
          ID: name='t' (at pp.c:4326)
  FuncDef:  (at pp.c:4330)
    Decl: name='Msp430TimerCapComP__0__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:4330)
      FuncDecl: quals=None (at pp.c:4330)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Control__getControl', quals=[] (at pp.c:4330)
          IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
    Compound:  (at pp.c:4331)
      Return:  (at pp.c:4332)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__0__int2CC' (at pp.c:4332)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:4332)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='354U' (at pp.c:4332)
  FuncDef:  (at pp.c:4336)
    Decl: name='Msp430TimerCapComP__0__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:4336)
      FuncDecl: quals=None (at pp.c:4336)
        ParamList:  (at pp.c:4336)
          Decl: name='n', quals=[], storage=[] (at pp.c:4336)
            TypeDecl: declname='n', quals=[] (at pp.c:4336)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Capture__default__captured', quals=[] (at pp.c:4336)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4337)
  FuncDef:  (at pp.c:4341)
    Decl: name='Msp430TimerCapComP__0__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:4341)
      FuncDecl: quals=None (at pp.c:4341)
        ParamList:  (at pp.c:4341)
          Decl: name='time', quals=[], storage=[] (at pp.c:4341)
            TypeDecl: declname='time', quals=[] (at pp.c:4341)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Capture__captured', quals=[] (at pp.c:4341)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4341)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__0__Capture__default__captured' (at pp.c:4343)
        ExprList:  (at pp.c:4343)
          ID: name='time' (at pp.c:4343)
  FuncDef:  (at pp.c:4348)
    Decl: name='Msp430TimerCapComP__0__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:4348)
      FuncDecl: quals=None (at pp.c:4348)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Capture__getEvent', quals=[] (at pp.c:4348)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:4349)
      Return:  (at pp.c:4350)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:4350)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='370U' (at pp.c:4350)
  FuncDef:  (at pp.c:4354)
    Decl: name='Msp430Adc12ImplP__CompareA0__fired', quals=[], storage=['inline', 'static'] (at pp.c:4354)
      FuncDecl: quals=None (at pp.c:4354)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__CompareA0__fired', quals=[] (at pp.c:4354)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4356)
  FuncDef:  (at pp.c:4360)
    Decl: name='Msp430TimerCapComP__0__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:4360)
      FuncDecl: quals=None (at pp.c:4360)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Compare__fired', quals=[] (at pp.c:4360)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4360)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__CompareA0__fired' (at pp.c:4362)
  FuncDef:  (at pp.c:4367)
    Decl: name='Msp430TimerCapComP__1__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:4367)
      FuncDecl: quals=None (at pp.c:4367)
        ParamList:  (at pp.c:4367)
          Decl: name='x', quals=[], storage=[] (at pp.c:4367)
            TypeDecl: declname='x', quals=[] (at pp.c:4367)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__int2CC', quals=[] (at pp.c:4367)
          IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
    Compound:  (at pp.c:4369)
      Decl: name='c', quals=[], storage=[] (at pp.c:4378)
        TypeDecl: declname='c', quals=[] (at pp.c:4378)
          Union: name='Msp430TimerCapComP__1____nesc_unnamed4301', packed=False (at pp.c:4371)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:4373)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:4375)
                IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
        ExprList:  (at pp.c:4378)
          Assignment: op='=' (at pp.c:4378)
            StructRef: type='.' (at pp.c:4378)
              ID: name='f' (at pp.c:4378)
            ID: name='x' (at pp.c:4378)
      Return:  (at pp.c:4381)
        StructRef: type='.' (at pp.c:4381)
          ID: name='c' (at pp.c:4381)
          ID: name='t' (at pp.c:4381)
  FuncDef:  (at pp.c:4385)
    Decl: name='Msp430TimerCapComP__1__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:4385)
      FuncDecl: quals=None (at pp.c:4385)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Control__getControl', quals=[] (at pp.c:4385)
          IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
    Compound:  (at pp.c:4386)
      Return:  (at pp.c:4387)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__1__int2CC' (at pp.c:4387)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:4387)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='356U' (at pp.c:4387)
  FuncDef:  (at pp.c:4391)
    Decl: name='Msp430TimerCapComP__1__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:4391)
      FuncDecl: quals=None (at pp.c:4391)
        ParamList:  (at pp.c:4391)
          Decl: name='n', quals=[], storage=[] (at pp.c:4391)
            TypeDecl: declname='n', quals=[] (at pp.c:4391)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Capture__default__captured', quals=[] (at pp.c:4391)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4392)
  FuncDef:  (at pp.c:4396)
    Decl: name='Msp430TimerCapComP__1__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:4396)
      FuncDecl: quals=None (at pp.c:4396)
        ParamList:  (at pp.c:4396)
          Decl: name='time', quals=[], storage=[] (at pp.c:4396)
            TypeDecl: declname='time', quals=[] (at pp.c:4396)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Capture__captured', quals=[] (at pp.c:4396)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4396)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__1__Capture__default__captured' (at pp.c:4398)
        ExprList:  (at pp.c:4398)
          ID: name='time' (at pp.c:4398)
  FuncDef:  (at pp.c:4403)
    Decl: name='Msp430TimerCapComP__1__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:4403)
      FuncDecl: quals=None (at pp.c:4403)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Capture__getEvent', quals=[] (at pp.c:4403)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:4404)
      Return:  (at pp.c:4405)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:4405)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='372U' (at pp.c:4405)
  FuncDef:  (at pp.c:4409)
    Decl: name='Msp430Adc12ImplP__CompareA1__fired', quals=[], storage=['inline', 'static'] (at pp.c:4409)
      FuncDecl: quals=None (at pp.c:4409)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__CompareA1__fired', quals=[] (at pp.c:4409)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4411)
  FuncDef:  (at pp.c:4415)
    Decl: name='Msp430TimerCapComP__1__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:4415)
      FuncDecl: quals=None (at pp.c:4415)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Compare__fired', quals=[] (at pp.c:4415)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4415)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__CompareA1__fired' (at pp.c:4417)
  FuncDef:  (at pp.c:4422)
    Decl: name='Msp430TimerCapComP__2__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:4422)
      FuncDecl: quals=None (at pp.c:4422)
        ParamList:  (at pp.c:4422)
          Decl: name='x', quals=[], storage=[] (at pp.c:4422)
            TypeDecl: declname='x', quals=[] (at pp.c:4422)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__int2CC', quals=[] (at pp.c:4422)
          IdentifierType: names=['Msp430TimerCapComP__2__cc_t'] (at None)
    Compound:  (at pp.c:4424)
      Decl: name='c', quals=[], storage=[] (at pp.c:4433)
        TypeDecl: declname='c', quals=[] (at pp.c:4433)
          Union: name='Msp430TimerCapComP__2____nesc_unnamed4302', packed=False (at pp.c:4426)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:4428)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:4430)
                IdentifierType: names=['Msp430TimerCapComP__2__cc_t'] (at None)
        ExprList:  (at pp.c:4433)
          Assignment: op='=' (at pp.c:4433)
            StructRef: type='.' (at pp.c:4433)
              ID: name='f' (at pp.c:4433)
            ID: name='x' (at pp.c:4433)
      Return:  (at pp.c:4436)
        StructRef: type='.' (at pp.c:4436)
          ID: name='c' (at pp.c:4436)
          ID: name='t' (at pp.c:4436)
  FuncDef:  (at pp.c:4440)
    Decl: name='Msp430TimerCapComP__2__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:4440)
      FuncDecl: quals=None (at pp.c:4440)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Control__getControl', quals=[] (at pp.c:4440)
          IdentifierType: names=['Msp430TimerCapComP__2__cc_t'] (at None)
    Compound:  (at pp.c:4441)
      Return:  (at pp.c:4442)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__2__int2CC' (at pp.c:4442)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:4442)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='358U' (at pp.c:4442)
  FuncDef:  (at pp.c:4446)
    Decl: name='Msp430TimerCapComP__2__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:4446)
      FuncDecl: quals=None (at pp.c:4446)
        ParamList:  (at pp.c:4446)
          Decl: name='n', quals=[], storage=[] (at pp.c:4446)
            TypeDecl: declname='n', quals=[] (at pp.c:4446)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Capture__default__captured', quals=[] (at pp.c:4446)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4447)
  FuncDef:  (at pp.c:4451)
    Decl: name='Msp430TimerCapComP__2__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:4451)
      FuncDecl: quals=None (at pp.c:4451)
        ParamList:  (at pp.c:4451)
          Decl: name='time', quals=[], storage=[] (at pp.c:4451)
            TypeDecl: declname='time', quals=[] (at pp.c:4451)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Capture__captured', quals=[] (at pp.c:4451)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4451)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__2__Capture__default__captured' (at pp.c:4453)
        ExprList:  (at pp.c:4453)
          ID: name='time' (at pp.c:4453)
  FuncDef:  (at pp.c:4458)
    Decl: name='Msp430TimerCapComP__2__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:4458)
      FuncDecl: quals=None (at pp.c:4458)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Capture__getEvent', quals=[] (at pp.c:4458)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:4459)
      Return:  (at pp.c:4460)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:4460)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='374U' (at pp.c:4460)
  FuncDef:  (at pp.c:4464)
    Decl: name='Msp430TimerCapComP__2__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:4464)
      FuncDecl: quals=None (at pp.c:4464)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Compare__default__fired', quals=[] (at pp.c:4464)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4465)
  FuncDef:  (at pp.c:4469)
    Decl: name='Msp430TimerCapComP__2__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:4469)
      FuncDecl: quals=None (at pp.c:4469)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Compare__fired', quals=[] (at pp.c:4469)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4469)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__2__Compare__default__fired' (at pp.c:4471)
  FuncDef:  (at pp.c:4476)
    Decl: name='Msp430TimerP__0__VectorTimerX1__fired', quals=[], storage=['inline', 'static'] (at pp.c:4476)
      FuncDecl: quals=None (at pp.c:4476)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__VectorTimerX1__fired', quals=[] (at pp.c:4476)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4477)
      Decl: name='n', quals=[], storage=[] (at pp.c:4478)
        TypeDecl: declname='n', quals=[] (at pp.c:4478)
          IdentifierType: names=['uint8_t'] (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:4478)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='302U' (at pp.c:4478)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Event__fired' (at pp.c:4481)
        ExprList:  (at pp.c:4481)
          BinaryOp: op='>>' (at pp.c:4481)
            ID: name='n' (at pp.c:4481)
            Constant: type='int', value='1' (at pp.c:4481)
  FuncDef:  (at pp.c:4485)
    Decl: name='Msp430TimerCommonP__VectorTimerA1__fired', quals=[], storage=['static', 'inline'] (at pp.c:4485)
      FuncDecl: quals=None (at pp.c:4485)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCommonP__VectorTimerA1__fired', quals=[] (at pp.c:4485)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4485)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__VectorTimerX1__fired' (at pp.c:4487)
  FuncDef:  (at pp.c:4492)
    Decl: name='Msp430TimerP__1__VectorTimerX0__fired', quals=[], storage=['inline', 'static'] (at pp.c:4492)
      FuncDecl: quals=None (at pp.c:4492)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__VectorTimerX0__fired', quals=[] (at pp.c:4492)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4493)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__1__Event__fired' (at pp.c:4494)
        ExprList:  (at pp.c:4494)
          Constant: type='int', value='0' (at pp.c:4494)
  FuncDef:  (at pp.c:4498)
    Decl: name='Msp430TimerCommonP__VectorTimerB0__fired', quals=[], storage=['static', 'inline'] (at pp.c:4498)
      FuncDecl: quals=None (at pp.c:4498)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCommonP__VectorTimerB0__fired', quals=[] (at pp.c:4498)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4498)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__1__VectorTimerX0__fired' (at pp.c:4500)
  FuncDef:  (at pp.c:4505)
    Decl: name='Msp430TimerCapComP__9__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4505)
      FuncDecl: quals=None (at pp.c:4505)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Timer__overflow', quals=[] (at pp.c:4505)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4506)
  FuncDef:  (at pp.c:4510)
    Decl: name='Msp430TimerCapComP__8__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4510)
      FuncDecl: quals=None (at pp.c:4510)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Timer__overflow', quals=[] (at pp.c:4510)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4511)
  FuncDef:  (at pp.c:4515)
    Decl: name='Msp430TimerCapComP__7__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4515)
      FuncDecl: quals=None (at pp.c:4515)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Timer__overflow', quals=[] (at pp.c:4515)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4516)
  FuncDef:  (at pp.c:4520)
    Decl: name='Msp430TimerCapComP__6__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4520)
      FuncDecl: quals=None (at pp.c:4520)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Timer__overflow', quals=[] (at pp.c:4520)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4521)
  FuncDef:  (at pp.c:4525)
    Decl: name='Msp430TimerCapComP__5__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4525)
      FuncDecl: quals=None (at pp.c:4525)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Timer__overflow', quals=[] (at pp.c:4525)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4526)
  FuncDef:  (at pp.c:4530)
    Decl: name='Msp430TimerCapComP__4__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4530)
      FuncDecl: quals=None (at pp.c:4530)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Timer__overflow', quals=[] (at pp.c:4530)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4531)
  FuncDef:  (at pp.c:4535)
    Decl: name='Msp430TimerCapComP__3__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4535)
      FuncDecl: quals=None (at pp.c:4535)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Timer__overflow', quals=[] (at pp.c:4535)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4536)
  FuncDef:  (at pp.c:4540)
    Decl: name='Msp430AlarmC__1__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4540)
      FuncDecl: quals=None (at pp.c:4540)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430Timer__overflow', quals=[] (at pp.c:4540)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4541)
  FuncDef:  (at pp.c:4545)
    Decl: name='Msp430AlarmC__0__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4545)
      FuncDecl: quals=None (at pp.c:4545)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430Timer__overflow', quals=[] (at pp.c:4545)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4546)
  FuncDef:  (at pp.c:4550)
    Decl: name='CounterToLocalTimeC__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4550)
      FuncDecl: quals=None (at pp.c:4550)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CounterToLocalTimeC__0__Counter__overflow', quals=[] (at pp.c:4550)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4551)
  FuncDef:  (at pp.c:4555)
    Decl: name='TransformAlarmC__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4555)
      FuncDecl: quals=None (at pp.c:4555)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Counter__overflow', quals=[] (at pp.c:4555)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4556)
  FuncDef:  (at pp.c:4560)
    Decl: name='TransformAlarmC__1__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4560)
      FuncDecl: quals=None (at pp.c:4560)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__Counter__overflow', quals=[] (at pp.c:4560)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4561)
  FuncDef:  (at pp.c:4565)
    Decl: name='TransformCounterC__0__Counter__overflow', quals=[], storage=['static', 'inline'] (at pp.c:4565)
      FuncDecl: quals=None (at pp.c:4565)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__0__Counter__overflow', quals=[] (at pp.c:4565)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4565)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__1__Counter__overflow' (at pp.c:4567)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__Counter__overflow' (at pp.c:4569)
      FuncCall:  (at None)
        ID: name='CounterToLocalTimeC__0__Counter__overflow' (at pp.c:4571)
  FuncDef:  (at pp.c:4576)
    Decl: name='TransformCounterC__0__CounterFrom__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4576)
      FuncDecl: quals=None (at pp.c:4576)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__0__CounterFrom__overflow', quals=[] (at pp.c:4576)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4577)
      Compound:  (at pp.c:4579)
        UnaryOp: op='p++' (at pp.c:4580)
          ID: name='TransformCounterC__0__m_upper' (at pp.c:4580)
        If:  (at pp.c:4581)
          BinaryOp: op='==' (at pp.c:4581)
            BinaryOp: op='&' (at pp.c:4581)
              ID: name='TransformCounterC__0__m_upper' (at pp.c:4581)
              ID: name='TransformCounterC__0__OVERFLOW_MASK' (at pp.c:4581)
            Constant: type='int', value='0' (at pp.c:4581)
          Compound:  (at pp.c:4581)
            FuncCall:  (at None)
              ID: name='TransformCounterC__0__Counter__overflow' (at pp.c:4582)
  FuncDef:  (at pp.c:4588)
    Decl: name='Msp430CounterC__0__Counter__overflow', quals=[], storage=['static', 'inline'] (at pp.c:4588)
      FuncDecl: quals=None (at pp.c:4588)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Counter__overflow', quals=[] (at pp.c:4588)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4588)
      FuncCall:  (at None)
        ID: name='TransformCounterC__0__CounterFrom__overflow' (at pp.c:4590)
  FuncDef:  (at pp.c:4595)
    Decl: name='Msp430CounterC__0__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4595)
      FuncDecl: quals=None (at pp.c:4595)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Msp430Timer__overflow', quals=[] (at pp.c:4595)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4596)
      FuncCall:  (at None)
        ID: name='Msp430CounterC__0__Counter__overflow' (at pp.c:4597)
  FuncDef:  (at pp.c:4601)
    Decl: name='Msp430TimerP__1__Timer__overflow', quals=[], storage=['static', 'inline'] (at pp.c:4601)
      FuncDecl: quals=None (at pp.c:4601)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Timer__overflow', quals=[] (at pp.c:4601)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4601)
      FuncCall:  (at None)
        ID: name='Msp430CounterC__0__Msp430Timer__overflow' (at pp.c:4603)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430Timer__overflow' (at pp.c:4605)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Msp430Timer__overflow' (at pp.c:4607)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Timer__overflow' (at pp.c:4609)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__4__Timer__overflow' (at pp.c:4611)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Timer__overflow' (at pp.c:4613)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__6__Timer__overflow' (at pp.c:4615)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__7__Timer__overflow' (at pp.c:4617)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__8__Timer__overflow' (at pp.c:4619)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__9__Timer__overflow' (at pp.c:4621)
  FuncDef:  (at pp.c:4626)
    Decl: name='Msp430TimerP__1__Overflow__fired', quals=[], storage=['inline', 'static'] (at pp.c:4626)
      FuncDecl: quals=None (at pp.c:4626)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Overflow__fired', quals=[] (at pp.c:4626)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4627)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__1__Timer__overflow' (at pp.c:4628)
  FuncDef:  (at pp.c:4632)
    Decl: name='AlarmToTimerC__0__fired__postTask', quals=[], storage=['static', 'inline'] (at pp.c:4632)
      FuncDecl: quals=None (at pp.c:4632)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__fired__postTask', quals=[] (at pp.c:4632)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:4632)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:4634)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:4634)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:4638)
        ID: name='__nesc_result' (at pp.c:4638)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:4638)
          ExprList:  (at pp.c:4638)
            ID: name='AlarmToTimerC__0__fired' (at pp.c:4638)
      Return:  (at pp.c:4642)
        ID: name='__nesc_result' (at pp.c:4642)
  FuncDef:  (at pp.c:4647)
    Decl: name='AlarmToTimerC__0__Alarm__fired', quals=[], storage=['inline', 'static'] (at pp.c:4647)
      FuncDecl: quals=None (at pp.c:4647)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Alarm__fired', quals=[] (at pp.c:4647)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4648)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__fired__postTask' (at pp.c:4650)
  FuncDef:  (at pp.c:4654)
    Decl: name='TransformAlarmC__0__Alarm__fired', quals=[], storage=['static', 'inline'] (at pp.c:4654)
      FuncDecl: quals=None (at pp.c:4654)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Alarm__fired', quals=[] (at pp.c:4654)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4654)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Alarm__fired' (at pp.c:4656)
  FuncDef:  (at pp.c:4661)
    Decl: name='TransformAlarmC__0__AlarmFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:4661)
      FuncDecl: quals=None (at pp.c:4661)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__AlarmFrom__fired', quals=[] (at pp.c:4661)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4662)
      Compound:  (at pp.c:4664)
        If:  (at pp.c:4665)
          BinaryOp: op='==' (at pp.c:4665)
            ID: name='TransformAlarmC__0__m_dt' (at pp.c:4665)
            Constant: type='int', value='0' (at pp.c:4665)
          Compound:  (at pp.c:4666)
            FuncCall:  (at None)
              ID: name='TransformAlarmC__0__Alarm__fired' (at pp.c:4667)
          Compound:  (at pp.c:4670)
            FuncCall:  (at None)
              ID: name='TransformAlarmC__0__set_alarm' (at pp.c:4671)
  FuncDef:  (at pp.c:4677)
    Decl: name='Msp430AlarmC__0__Alarm__fired', quals=[], storage=['static', 'inline'] (at pp.c:4677)
      FuncDecl: quals=None (at pp.c:4677)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Alarm__fired', quals=[] (at pp.c:4677)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4677)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__AlarmFrom__fired' (at pp.c:4679)
  FuncDef:  (at pp.c:4684)
    Decl: name='Msp430TimerCapComP__3__Control__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:4684)
      FuncDecl: quals=None (at pp.c:4684)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Control__disableEvents', quals=[] (at pp.c:4684)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4685)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:4686)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='386U' (at pp.c:4686)
        UnaryOp: op='~' (at pp.c:4686)
          Constant: type='int', value='0x0010' (at pp.c:4686)
  FuncDef:  (at pp.c:4690)
    Decl: name='Msp430AlarmC__0__Msp430TimerControl__disableEvents', quals=[], storage=['static', 'inline'] (at pp.c:4690)
      FuncDecl: quals=None (at pp.c:4690)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__disableEvents', quals=[] (at pp.c:4690)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4690)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Control__disableEvents' (at pp.c:4692)
  FuncDef:  (at pp.c:4697)
    Decl: name='Msp430AlarmC__0__Msp430Compare__fired', quals=[], storage=['inline', 'static'] (at pp.c:4697)
      FuncDecl: quals=None (at pp.c:4697)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__fired', quals=[] (at pp.c:4697)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4698)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430TimerControl__disableEvents' (at pp.c:4699)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Alarm__fired' (at pp.c:4700)
  FuncDef:  (at pp.c:4704)
    Decl: name='Msp430TimerCapComP__3__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:4704)
      FuncDecl: quals=None (at pp.c:4704)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Compare__fired', quals=[] (at pp.c:4704)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4704)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430Compare__fired' (at pp.c:4706)
  FuncDef:  (at pp.c:4711)
    Decl: name='Msp430TimerCapComP__3__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:4711)
      FuncDecl: quals=None (at pp.c:4711)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Capture__getEvent', quals=[] (at pp.c:4711)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:4712)
      Return:  (at pp.c:4713)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:4713)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='402U' (at pp.c:4713)
  FuncDef:  (at pp.c:4717)
    Decl: name='Msp430TimerCapComP__3__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:4717)
      FuncDecl: quals=None (at pp.c:4717)
        ParamList:  (at pp.c:4717)
          Decl: name='n', quals=[], storage=[] (at pp.c:4717)
            TypeDecl: declname='n', quals=[] (at pp.c:4717)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Capture__default__captured', quals=[] (at pp.c:4717)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4718)
  FuncDef:  (at pp.c:4722)
    Decl: name='Msp430TimerCapComP__3__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:4722)
      FuncDecl: quals=None (at pp.c:4722)
        ParamList:  (at pp.c:4722)
          Decl: name='time', quals=[], storage=[] (at pp.c:4722)
            TypeDecl: declname='time', quals=[] (at pp.c:4722)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Capture__captured', quals=[] (at pp.c:4722)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4722)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Capture__default__captured' (at pp.c:4724)
        ExprList:  (at pp.c:4724)
          ID: name='time' (at pp.c:4724)
  FuncDef:  (at pp.c:4729)
    Decl: name='Msp430TimerCapComP__3__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:4729)
      FuncDecl: quals=None (at pp.c:4729)
        ParamList:  (at pp.c:4729)
          Decl: name='x', quals=[], storage=[] (at pp.c:4729)
            TypeDecl: declname='x', quals=[] (at pp.c:4729)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__int2CC', quals=[] (at pp.c:4729)
          IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
    Compound:  (at pp.c:4731)
      Decl: name='c', quals=[], storage=[] (at pp.c:4740)
        TypeDecl: declname='c', quals=[] (at pp.c:4740)
          Union: name='Msp430TimerCapComP__3____nesc_unnamed4303', packed=False (at pp.c:4733)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:4735)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:4737)
                IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
        ExprList:  (at pp.c:4740)
          Assignment: op='=' (at pp.c:4740)
            StructRef: type='.' (at pp.c:4740)
              ID: name='f' (at pp.c:4740)
            ID: name='x' (at pp.c:4740)
      Return:  (at pp.c:4743)
        StructRef: type='.' (at pp.c:4743)
          ID: name='c' (at pp.c:4743)
          ID: name='t' (at pp.c:4743)
  FuncDef:  (at pp.c:4747)
    Decl: name='Msp430TimerCapComP__3__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:4747)
      FuncDecl: quals=None (at pp.c:4747)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Control__getControl', quals=[] (at pp.c:4747)
          IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
    Compound:  (at pp.c:4748)
      Return:  (at pp.c:4749)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__3__int2CC' (at pp.c:4749)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:4749)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='386U' (at pp.c:4749)
  FuncDef:  (at pp.c:4753)
    Decl: name='Msp430TimerCapComP__3__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:4753)
      FuncDecl: quals=None (at pp.c:4753)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Event__fired', quals=[] (at pp.c:4753)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4754)
      If:  (at pp.c:4755)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__3__Control__getControl' (at pp.c:4755)
          ID: name='cap' (at pp.c:4755)
        Compound:  (at pp.c:4755)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__3__Capture__captured' (at pp.c:4756)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__3__Capture__getEvent' (at pp.c:4756)
        Compound:  (at pp.c:4758)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__3__Compare__fired' (at pp.c:4760)
  FuncDef:  (at pp.c:4765)
    Decl: name='SchedulerBasicP__isWaiting', quals=[], storage=['inline', 'static'] (at pp.c:4765)
      FuncDecl: quals=None (at pp.c:4765)
        ParamList:  (at pp.c:4765)
          Decl: name='id', quals=[], storage=[] (at pp.c:4765)
            TypeDecl: declname='id', quals=[] (at pp.c:4765)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SchedulerBasicP__isWaiting', quals=[] (at pp.c:4765)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:4766)
      Return:  (at pp.c:4767)
        BinaryOp: op='||' (at pp.c:4767)
          BinaryOp: op='!=' (at pp.c:4767)
            ArrayRef:  (at pp.c:4767)
              ID: name='SchedulerBasicP__m_next' (at pp.c:4767)
              ID: name='id' (at pp.c:4767)
            ID: name='SchedulerBasicP__NO_TASK' (at pp.c:4767)
          BinaryOp: op='==' (at pp.c:4767)
            ID: name='SchedulerBasicP__m_tail' (at pp.c:4767)
            ID: name='id' (at pp.c:4767)
  FuncDef:  (at pp.c:4770)
    Decl: name='SchedulerBasicP__pushTask', quals=[], storage=['inline', 'static'] (at pp.c:4770)
      FuncDecl: quals=None (at pp.c:4770)
        ParamList:  (at pp.c:4770)
          Decl: name='id', quals=[], storage=[] (at pp.c:4770)
            TypeDecl: declname='id', quals=[] (at pp.c:4770)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SchedulerBasicP__pushTask', quals=[] (at pp.c:4770)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:4771)
      If:  (at pp.c:4772)
        UnaryOp: op='!' (at None)
          FuncCall:  (at None)
            ID: name='SchedulerBasicP__isWaiting' (at pp.c:4772)
            ExprList:  (at pp.c:4772)
              ID: name='id' (at pp.c:4772)
        Compound:  (at pp.c:4773)
          If:  (at pp.c:4774)
            BinaryOp: op='==' (at pp.c:4774)
              ID: name='SchedulerBasicP__m_head' (at pp.c:4774)
              ID: name='SchedulerBasicP__NO_TASK' (at pp.c:4774)
            Compound:  (at pp.c:4775)
              Assignment: op='=' (at pp.c:4776)
                ID: name='SchedulerBasicP__m_head' (at pp.c:4776)
                ID: name='id' (at pp.c:4776)
              Assignment: op='=' (at pp.c:4777)
                ID: name='SchedulerBasicP__m_tail' (at pp.c:4777)
                ID: name='id' (at pp.c:4777)
            Compound:  (at pp.c:4780)
              Assignment: op='=' (at pp.c:4781)
                ArrayRef:  (at pp.c:4781)
                  ID: name='SchedulerBasicP__m_next' (at pp.c:4781)
                  ID: name='SchedulerBasicP__m_tail' (at pp.c:4781)
                ID: name='id' (at pp.c:4781)
              Assignment: op='=' (at pp.c:4782)
                ID: name='SchedulerBasicP__m_tail' (at pp.c:4782)
                ID: name='id' (at pp.c:4782)
          Return:  (at pp.c:4784)
            ID: name='TRUE' (at pp.c:4784)
        Compound:  (at pp.c:4787)
          Return:  (at pp.c:4788)
            ID: name='FALSE' (at pp.c:4788)
  FuncDef:  (at pp.c:4793)
    Decl: name='Msp430CounterC__0__Msp430Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:4793)
      FuncDecl: quals=None (at pp.c:4793)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Msp430Timer__get', quals=[] (at pp.c:4793)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:4793)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:4795)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:4795)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:4799)
        ID: name='__nesc_result' (at pp.c:4799)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__get' (at pp.c:4799)
      Return:  (at pp.c:4803)
        ID: name='__nesc_result' (at pp.c:4803)
  FuncDef:  (at pp.c:4808)
    Decl: name='Msp430CounterC__0__Counter__get', quals=[], storage=['inline', 'static'] (at pp.c:4808)
      FuncDecl: quals=None (at pp.c:4808)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Counter__get', quals=[] (at pp.c:4808)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:4809)
      Return:  (at pp.c:4810)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__0__Msp430Timer__get' (at pp.c:4810)
  FuncDef:  (at pp.c:4814)
    Decl: name='TransformCounterC__0__CounterFrom__get', quals=[], storage=['static', 'inline'] (at pp.c:4814)
      FuncDecl: quals=None (at pp.c:4814)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__0__CounterFrom__get', quals=[] (at pp.c:4814)
          IdentifierType: names=['TransformCounterC__0__CounterFrom__size_type'] (at None)
    Compound:  (at pp.c:4814)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:4816)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:4816)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:4820)
        ID: name='__nesc_result' (at pp.c:4820)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__0__Counter__get' (at pp.c:4820)
      Return:  (at pp.c:4824)
        ID: name='__nesc_result' (at pp.c:4824)
  FuncDef:  (at pp.c:4829)
    Decl: name='Msp430TimerP__1__Timer__isOverflowPending', quals=[], storage=['inline', 'static'] (at pp.c:4829)
      FuncDecl: quals=None (at pp.c:4829)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Timer__isOverflowPending', quals=[] (at pp.c:4829)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:4830)
      Return:  (at pp.c:4831)
        BinaryOp: op='&' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:4831)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint16_t'] (at None)
              Constant: type='int', value='384U' (at pp.c:4831)
          Constant: type='int', value='1U' (at pp.c:4831)
  FuncDef:  (at pp.c:4835)
    Decl: name='Msp430CounterC__0__Msp430Timer__isOverflowPending', quals=[], storage=['static', 'inline'] (at pp.c:4835)
      FuncDecl: quals=None (at pp.c:4835)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Msp430Timer__isOverflowPending', quals=[] (at pp.c:4835)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:4835)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:4837)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:4837)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:4841)
        ID: name='__nesc_result' (at pp.c:4841)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__isOverflowPending' (at pp.c:4841)
      Return:  (at pp.c:4845)
        ID: name='__nesc_result' (at pp.c:4845)
  FuncDef:  (at pp.c:4850)
    Decl: name='Msp430CounterC__0__Counter__isOverflowPending', quals=[], storage=['inline', 'static'] (at pp.c:4850)
      FuncDecl: quals=None (at pp.c:4850)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Counter__isOverflowPending', quals=[] (at pp.c:4850)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:4851)
      Return:  (at pp.c:4852)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__0__Msp430Timer__isOverflowPending' (at pp.c:4852)
  FuncDef:  (at pp.c:4856)
    Decl: name='TransformCounterC__0__CounterFrom__isOverflowPending', quals=[], storage=['static', 'inline'] (at pp.c:4856)
      FuncDecl: quals=None (at pp.c:4856)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__0__CounterFrom__isOverflowPending', quals=[] (at pp.c:4856)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:4856)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:4858)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:4858)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:4862)
        ID: name='__nesc_result' (at pp.c:4862)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__0__Counter__isOverflowPending' (at pp.c:4862)
      Return:  (at pp.c:4866)
        ID: name='__nesc_result' (at pp.c:4866)
  FuncDef:  (at pp.c:4871)
    Decl: name='Msp430TimerCapComP__3__Control__enableEvents', quals=[], storage=['inline', 'static'] (at pp.c:4871)
      FuncDecl: quals=None (at pp.c:4871)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Control__enableEvents', quals=[] (at pp.c:4871)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4872)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:4873)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='386U' (at pp.c:4873)
        Constant: type='int', value='0x0010' (at pp.c:4873)
  FuncDef:  (at pp.c:4877)
    Decl: name='Msp430AlarmC__0__Msp430TimerControl__enableEvents', quals=[], storage=['static', 'inline'] (at pp.c:4877)
      FuncDecl: quals=None (at pp.c:4877)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__enableEvents', quals=[] (at pp.c:4877)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4877)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Control__enableEvents' (at pp.c:4879)
  FuncDef:  (at pp.c:4884)
    Decl: name='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[], storage=['inline', 'static'] (at pp.c:4884)
      FuncDecl: quals=None (at pp.c:4884)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[] (at pp.c:4884)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4885)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:4886)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='386U' (at pp.c:4886)
        UnaryOp: op='~' (at pp.c:4886)
          Constant: type='int', value='0x0001' (at pp.c:4886)
  FuncDef:  (at pp.c:4890)
    Decl: name='Msp430AlarmC__0__Msp430TimerControl__clearPendingInterrupt', quals=[], storage=['static', 'inline'] (at pp.c:4890)
      FuncDecl: quals=None (at pp.c:4890)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__clearPendingInterrupt', quals=[] (at pp.c:4890)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4890)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Control__clearPendingInterrupt' (at pp.c:4892)
  FuncDef:  (at pp.c:4897)
    Decl: name='Msp430TimerCapComP__3__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:4897)
      FuncDecl: quals=None (at pp.c:4897)
        ParamList:  (at pp.c:4897)
          Decl: name='x', quals=[], storage=[] (at pp.c:4897)
            TypeDecl: declname='x', quals=[] (at pp.c:4897)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEvent', quals=[] (at pp.c:4897)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4898)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:4899)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='402U' (at pp.c:4899)
        ID: name='x' (at pp.c:4899)
  FuncDef:  (at pp.c:4903)
    Decl: name='Msp430AlarmC__0__Msp430Compare__setEvent', quals=[], storage=['static', 'inline'] (at pp.c:4903)
      FuncDecl: quals=None (at pp.c:4903)
        ParamList:  (at pp.c:4903)
          Decl: name='time', quals=[], storage=[] (at pp.c:4903)
            TypeDecl: declname='time', quals=[] (at pp.c:4903)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__setEvent', quals=[] (at pp.c:4903)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4903)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Compare__setEvent' (at pp.c:4905)
        ExprList:  (at pp.c:4905)
          ID: name='time' (at pp.c:4905)
  FuncDef:  (at pp.c:4910)
    Decl: name='Msp430TimerCapComP__3__Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:4910)
      FuncDecl: quals=None (at pp.c:4910)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Timer__get', quals=[] (at pp.c:4910)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:4910)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:4912)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:4912)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:4916)
        ID: name='__nesc_result' (at pp.c:4916)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__get' (at pp.c:4916)
      Return:  (at pp.c:4920)
        ID: name='__nesc_result' (at pp.c:4920)
  FuncDef:  (at pp.c:4925)
    Decl: name='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[], storage=['inline', 'static'] (at pp.c:4925)
      FuncDecl: quals=None (at pp.c:4925)
        ParamList:  (at pp.c:4925)
          Decl: name='x', quals=[], storage=[] (at pp.c:4925)
            TypeDecl: declname='x', quals=[] (at pp.c:4925)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[] (at pp.c:4925)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4926)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:4927)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='402U' (at pp.c:4927)
        BinaryOp: op='+' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__3__Timer__get' (at pp.c:4927)
          ID: name='x' (at pp.c:4927)
  FuncDef:  (at pp.c:4931)
    Decl: name='Msp430AlarmC__0__Msp430Compare__setEventFromNow', quals=[], storage=['static', 'inline'] (at pp.c:4931)
      FuncDecl: quals=None (at pp.c:4931)
        ParamList:  (at pp.c:4931)
          Decl: name='delta', quals=[], storage=[] (at pp.c:4931)
            TypeDecl: declname='delta', quals=[] (at pp.c:4931)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__setEventFromNow', quals=[] (at pp.c:4931)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4931)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Compare__setEventFromNow' (at pp.c:4933)
        ExprList:  (at pp.c:4933)
          ID: name='delta' (at pp.c:4933)
  FuncDef:  (at pp.c:4938)
    Decl: name='Msp430AlarmC__0__Msp430Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:4938)
      FuncDecl: quals=None (at pp.c:4938)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430Timer__get', quals=[] (at pp.c:4938)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:4938)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:4940)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:4940)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:4944)
        ID: name='__nesc_result' (at pp.c:4944)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__get' (at pp.c:4944)
      Return:  (at pp.c:4948)
        ID: name='__nesc_result' (at pp.c:4948)
  FuncDef:  (at pp.c:4953)
    Decl: name='Msp430AlarmC__0__Alarm__startAt', quals=[], storage=['inline', 'static'] (at pp.c:4953)
      FuncDecl: quals=None (at pp.c:4953)
        ParamList:  (at pp.c:4953)
          Decl: name='t0', quals=[], storage=[] (at pp.c:4953)
            TypeDecl: declname='t0', quals=[] (at pp.c:4953)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:4953)
            TypeDecl: declname='dt', quals=[] (at pp.c:4953)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Alarm__startAt', quals=[] (at pp.c:4953)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4954)
      Compound:  (at pp.c:4956)
        Decl: name='now', quals=[], storage=[] (at pp.c:4957)
          TypeDecl: declname='now', quals=[] (at pp.c:4957)
            IdentifierType: names=['uint16_t'] (at None)
          FuncCall:  (at None)
            ID: name='Msp430AlarmC__0__Msp430Timer__get' (at pp.c:4957)
        Decl: name='elapsed', quals=[], storage=[] (at pp.c:4958)
          TypeDecl: declname='elapsed', quals=[] (at pp.c:4958)
            IdentifierType: names=['uint16_t'] (at None)
          BinaryOp: op='-' (at pp.c:4958)
            ID: name='now' (at pp.c:4958)
            ID: name='t0' (at pp.c:4958)
        If:  (at pp.c:4961)
          BinaryOp: op='>=' (at pp.c:4961)
            ID: name='elapsed' (at pp.c:4961)
            ID: name='dt' (at pp.c:4961)
          Compound:  (at pp.c:4962)
            FuncCall:  (at None)
              ID: name='Msp430AlarmC__0__Msp430Compare__setEventFromNow' (at pp.c:4963)
              ExprList:  (at pp.c:4963)
                Constant: type='int', value='2' (at pp.c:4963)
          Compound:  (at pp.c:4966)
            Decl: name='remaining', quals=[], storage=[] (at pp.c:4967)
              TypeDecl: declname='remaining', quals=[] (at pp.c:4967)
                IdentifierType: names=['uint16_t'] (at None)
              BinaryOp: op='-' (at pp.c:4967)
                ID: name='dt' (at pp.c:4967)
                ID: name='elapsed' (at pp.c:4967)
            If:  (at pp.c:4970)
              BinaryOp: op='<=' (at pp.c:4970)
                ID: name='remaining' (at pp.c:4970)
                Constant: type='int', value='2' (at pp.c:4970)
              Compound:  (at pp.c:4970)
                FuncCall:  (at None)
                  ID: name='Msp430AlarmC__0__Msp430Compare__setEventFromNow' (at pp.c:4971)
                  ExprList:  (at pp.c:4971)
                    Constant: type='int', value='2' (at pp.c:4971)
              Compound:  (at pp.c:4973)
                FuncCall:  (at None)
                  ID: name='Msp430AlarmC__0__Msp430Compare__setEvent' (at pp.c:4975)
                  ExprList:  (at pp.c:4975)
                    BinaryOp: op='+' (at pp.c:4975)
                      ID: name='now' (at pp.c:4975)
                      ID: name='remaining' (at pp.c:4975)
        FuncCall:  (at None)
          ID: name='Msp430AlarmC__0__Msp430TimerControl__clearPendingInterrupt' (at pp.c:4979)
        FuncCall:  (at None)
          ID: name='Msp430AlarmC__0__Msp430TimerControl__enableEvents' (at pp.c:4980)
  FuncDef:  (at pp.c:4985)
    Decl: name='TransformAlarmC__0__AlarmFrom__startAt', quals=[], storage=['static', 'inline'] (at pp.c:4985)
      FuncDecl: quals=None (at pp.c:4985)
        ParamList:  (at pp.c:4985)
          Decl: name='t0', quals=[], storage=[] (at pp.c:4985)
            TypeDecl: declname='t0', quals=[] (at pp.c:4985)
              IdentifierType: names=['TransformAlarmC__0__AlarmFrom__size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:4985)
            TypeDecl: declname='dt', quals=[] (at pp.c:4985)
              IdentifierType: names=['TransformAlarmC__0__AlarmFrom__size_type'] (at None)
        TypeDecl: declname='TransformAlarmC__0__AlarmFrom__startAt', quals=[] (at pp.c:4985)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4985)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Alarm__startAt' (at pp.c:4987)
        ExprList:  (at pp.c:4987)
          ID: name='t0' (at pp.c:4987)
          ID: name='dt' (at pp.c:4987)
  FuncDef:  (at pp.c:4992)
    Decl: name='Msp430TimerCapComP__4__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:4992)
      FuncDecl: quals=None (at pp.c:4992)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Compare__default__fired', quals=[] (at pp.c:4992)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4993)
  FuncDef:  (at pp.c:4997)
    Decl: name='Msp430TimerCapComP__4__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:4997)
      FuncDecl: quals=None (at pp.c:4997)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Compare__fired', quals=[] (at pp.c:4997)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:4997)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__4__Compare__default__fired' (at pp.c:4999)
  FuncDef:  (at pp.c:5004)
    Decl: name='Msp430TimerCapComP__4__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:5004)
      FuncDecl: quals=None (at pp.c:5004)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Capture__getEvent', quals=[] (at pp.c:5004)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:5005)
      Return:  (at pp.c:5006)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5006)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='404U' (at pp.c:5006)
  FuncDef:  (at pp.c:5010)
    Decl: name='Msp430TimerCapComP__4__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:5010)
      FuncDecl: quals=None (at pp.c:5010)
        ParamList:  (at pp.c:5010)
          Decl: name='n', quals=[], storage=[] (at pp.c:5010)
            TypeDecl: declname='n', quals=[] (at pp.c:5010)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Capture__default__captured', quals=[] (at pp.c:5010)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5011)
  FuncDef:  (at pp.c:5015)
    Decl: name='Msp430TimerCapComP__4__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:5015)
      FuncDecl: quals=None (at pp.c:5015)
        ParamList:  (at pp.c:5015)
          Decl: name='time', quals=[], storage=[] (at pp.c:5015)
            TypeDecl: declname='time', quals=[] (at pp.c:5015)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Capture__captured', quals=[] (at pp.c:5015)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5015)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__4__Capture__default__captured' (at pp.c:5017)
        ExprList:  (at pp.c:5017)
          ID: name='time' (at pp.c:5017)
  FuncDef:  (at pp.c:5022)
    Decl: name='Msp430TimerCapComP__4__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:5022)
      FuncDecl: quals=None (at pp.c:5022)
        ParamList:  (at pp.c:5022)
          Decl: name='x', quals=[], storage=[] (at pp.c:5022)
            TypeDecl: declname='x', quals=[] (at pp.c:5022)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__int2CC', quals=[] (at pp.c:5022)
          IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
    Compound:  (at pp.c:5024)
      Decl: name='c', quals=[], storage=[] (at pp.c:5033)
        TypeDecl: declname='c', quals=[] (at pp.c:5033)
          Union: name='Msp430TimerCapComP__4____nesc_unnamed4304', packed=False (at pp.c:5026)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:5028)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:5030)
                IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
        ExprList:  (at pp.c:5033)
          Assignment: op='=' (at pp.c:5033)
            StructRef: type='.' (at pp.c:5033)
              ID: name='f' (at pp.c:5033)
            ID: name='x' (at pp.c:5033)
      Return:  (at pp.c:5036)
        StructRef: type='.' (at pp.c:5036)
          ID: name='c' (at pp.c:5036)
          ID: name='t' (at pp.c:5036)
  FuncDef:  (at pp.c:5040)
    Decl: name='Msp430TimerCapComP__4__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:5040)
      FuncDecl: quals=None (at pp.c:5040)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Control__getControl', quals=[] (at pp.c:5040)
          IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
    Compound:  (at pp.c:5041)
      Return:  (at pp.c:5042)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__4__int2CC' (at pp.c:5042)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:5042)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='388U' (at pp.c:5042)
  FuncDef:  (at pp.c:5046)
    Decl: name='Msp430TimerCapComP__4__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:5046)
      FuncDecl: quals=None (at pp.c:5046)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Event__fired', quals=[] (at pp.c:5046)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5047)
      If:  (at pp.c:5048)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__4__Control__getControl' (at pp.c:5048)
          ID: name='cap' (at pp.c:5048)
        Compound:  (at pp.c:5048)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__4__Capture__captured' (at pp.c:5049)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__4__Capture__getEvent' (at pp.c:5049)
        Compound:  (at pp.c:5051)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__4__Compare__fired' (at pp.c:5053)
  FuncDef:  (at pp.c:5058)
    Decl: name='AdcStreamP__SingleChannel__default__getData', quals=[], storage=['inline', 'static'] (at pp.c:5058)
      FuncDecl: quals=None (at pp.c:5058)
        ParamList:  (at pp.c:5058)
          Decl: name='c', quals=[], storage=[] (at pp.c:5058)
            TypeDecl: declname='c', quals=[] (at pp.c:5058)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcStreamP__SingleChannel__default__getData', quals=[] (at pp.c:5058)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:5059)
      Return:  (at pp.c:5060)
        ID: name='FAIL' (at pp.c:5060)
  FuncDef:  (at pp.c:5064)
    Decl: name='AdcStreamP__SingleChannel__getData', quals=[], storage=['static', 'inline'] (at pp.c:5064)
      FuncDecl: quals=None (at pp.c:5064)
        ParamList:  (at pp.c:5064)
          Decl: name='arg_0x101c4bb90', quals=[], storage=[] (at pp.c:5064)
            TypeDecl: declname='arg_0x101c4bb90', quals=[] (at pp.c:5064)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcStreamP__SingleChannel__getData', quals=[] (at pp.c:5064)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:5064)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:5066)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:5066)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:5070)
        ID: name='arg_0x101c4bb90' (at pp.c:5070)
        Compound:  (at pp.c:5070)
          Case:  (at pp.c:5072)
            ID: name='AdcReadStreamClientC__0__RSCLIENT' (at pp.c:5072)
            Assignment: op='=' (at pp.c:5074)
              ID: name='__nesc_result' (at pp.c:5074)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__SingleChannel__getData' (at pp.c:5074)
                ExprList:  (at pp.c:5074)
                  ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:5074)
          Break:  (at pp.c:5076)
          Default:  (at pp.c:5078)
            Assignment: op='=' (at pp.c:5080)
              ID: name='__nesc_result' (at pp.c:5080)
              FuncCall:  (at None)
                ID: name='AdcStreamP__SingleChannel__default__getData' (at pp.c:5080)
                ExprList:  (at pp.c:5080)
                  ID: name='arg_0x101c4bb90' (at pp.c:5080)
          Break:  (at pp.c:5082)
      Return:  (at pp.c:5088)
        ID: name='__nesc_result' (at pp.c:5088)
  FuncDef:  (at pp.c:5093)
    Decl: name='AdcStreamP__sampleSingle', quals=[], storage=['inline', 'static'] (at pp.c:5093)
      FuncDecl: quals=None (at pp.c:5093)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__sampleSingle', quals=[] (at pp.c:5093)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5095)
      FuncCall:  (at None)
        ID: name='AdcStreamP__SingleChannel__getData' (at pp.c:5096)
        ExprList:  (at pp.c:5096)
          ID: name='AdcStreamP__client' (at pp.c:5096)
  FuncDef:  (at pp.c:5100)
    Decl: name='AdcStreamP__Alarm__fired', quals=[], storage=['inline', 'static'] (at pp.c:5100)
      FuncDecl: quals=None (at pp.c:5100)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__Alarm__fired', quals=[] (at pp.c:5100)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5102)
      FuncCall:  (at None)
        ID: name='AdcStreamP__sampleSingle' (at pp.c:5103)
  FuncDef:  (at pp.c:5107)
    Decl: name='TransformAlarmC__1__Alarm__fired', quals=[], storage=['static', 'inline'] (at pp.c:5107)
      FuncDecl: quals=None (at pp.c:5107)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__Alarm__fired', quals=[] (at pp.c:5107)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5107)
      FuncCall:  (at None)
        ID: name='AdcStreamP__Alarm__fired' (at pp.c:5109)
  FuncDef:  (at pp.c:5114)
    Decl: name='TransformAlarmC__1__AlarmFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:5114)
      FuncDecl: quals=None (at pp.c:5114)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__AlarmFrom__fired', quals=[] (at pp.c:5114)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5115)
      Compound:  (at pp.c:5117)
        If:  (at pp.c:5118)
          BinaryOp: op='==' (at pp.c:5118)
            ID: name='TransformAlarmC__1__m_dt' (at pp.c:5118)
            Constant: type='int', value='0' (at pp.c:5118)
          Compound:  (at pp.c:5119)
            FuncCall:  (at None)
              ID: name='TransformAlarmC__1__Alarm__fired' (at pp.c:5120)
          Compound:  (at pp.c:5123)
            FuncCall:  (at None)
              ID: name='TransformAlarmC__1__set_alarm' (at pp.c:5124)
  FuncDef:  (at pp.c:5130)
    Decl: name='Msp430AlarmC__1__Alarm__fired', quals=[], storage=['static', 'inline'] (at pp.c:5130)
      FuncDecl: quals=None (at pp.c:5130)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Alarm__fired', quals=[] (at pp.c:5130)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5130)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__1__AlarmFrom__fired' (at pp.c:5132)
  FuncDef:  (at pp.c:5137)
    Decl: name='Msp430TimerCapComP__5__Control__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:5137)
      FuncDecl: quals=None (at pp.c:5137)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Control__disableEvents', quals=[] (at pp.c:5137)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5138)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5139)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='390U' (at pp.c:5139)
        UnaryOp: op='~' (at pp.c:5139)
          Constant: type='int', value='0x0010' (at pp.c:5139)
  FuncDef:  (at pp.c:5143)
    Decl: name='Msp430AlarmC__1__Msp430TimerControl__disableEvents', quals=[], storage=['static', 'inline'] (at pp.c:5143)
      FuncDecl: quals=None (at pp.c:5143)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__disableEvents', quals=[] (at pp.c:5143)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5143)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Control__disableEvents' (at pp.c:5145)
  FuncDef:  (at pp.c:5150)
    Decl: name='Msp430AlarmC__1__Msp430Compare__fired', quals=[], storage=['inline', 'static'] (at pp.c:5150)
      FuncDecl: quals=None (at pp.c:5150)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430Compare__fired', quals=[] (at pp.c:5150)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5151)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Msp430TimerControl__disableEvents' (at pp.c:5152)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Alarm__fired' (at pp.c:5153)
  FuncDef:  (at pp.c:5157)
    Decl: name='Msp430TimerCapComP__5__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:5157)
      FuncDecl: quals=None (at pp.c:5157)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Compare__fired', quals=[] (at pp.c:5157)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5157)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Msp430Compare__fired' (at pp.c:5159)
  FuncDef:  (at pp.c:5164)
    Decl: name='Msp430TimerCapComP__5__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:5164)
      FuncDecl: quals=None (at pp.c:5164)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Capture__getEvent', quals=[] (at pp.c:5164)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:5165)
      Return:  (at pp.c:5166)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5166)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='406U' (at pp.c:5166)
  FuncDef:  (at pp.c:5170)
    Decl: name='Msp430TimerCapComP__5__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:5170)
      FuncDecl: quals=None (at pp.c:5170)
        ParamList:  (at pp.c:5170)
          Decl: name='n', quals=[], storage=[] (at pp.c:5170)
            TypeDecl: declname='n', quals=[] (at pp.c:5170)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Capture__default__captured', quals=[] (at pp.c:5170)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5171)
  FuncDef:  (at pp.c:5175)
    Decl: name='Msp430TimerCapComP__5__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:5175)
      FuncDecl: quals=None (at pp.c:5175)
        ParamList:  (at pp.c:5175)
          Decl: name='time', quals=[], storage=[] (at pp.c:5175)
            TypeDecl: declname='time', quals=[] (at pp.c:5175)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Capture__captured', quals=[] (at pp.c:5175)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5175)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Capture__default__captured' (at pp.c:5177)
        ExprList:  (at pp.c:5177)
          ID: name='time' (at pp.c:5177)
  FuncDef:  (at pp.c:5182)
    Decl: name='Msp430TimerCapComP__5__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:5182)
      FuncDecl: quals=None (at pp.c:5182)
        ParamList:  (at pp.c:5182)
          Decl: name='x', quals=[], storage=[] (at pp.c:5182)
            TypeDecl: declname='x', quals=[] (at pp.c:5182)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__int2CC', quals=[] (at pp.c:5182)
          IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
    Compound:  (at pp.c:5184)
      Decl: name='c', quals=[], storage=[] (at pp.c:5193)
        TypeDecl: declname='c', quals=[] (at pp.c:5193)
          Union: name='Msp430TimerCapComP__5____nesc_unnamed4305', packed=False (at pp.c:5186)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:5188)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:5190)
                IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
        ExprList:  (at pp.c:5193)
          Assignment: op='=' (at pp.c:5193)
            StructRef: type='.' (at pp.c:5193)
              ID: name='f' (at pp.c:5193)
            ID: name='x' (at pp.c:5193)
      Return:  (at pp.c:5196)
        StructRef: type='.' (at pp.c:5196)
          ID: name='c' (at pp.c:5196)
          ID: name='t' (at pp.c:5196)
  FuncDef:  (at pp.c:5200)
    Decl: name='Msp430TimerCapComP__5__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:5200)
      FuncDecl: quals=None (at pp.c:5200)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Control__getControl', quals=[] (at pp.c:5200)
          IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
    Compound:  (at pp.c:5201)
      Return:  (at pp.c:5202)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__5__int2CC' (at pp.c:5202)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:5202)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='390U' (at pp.c:5202)
  FuncDef:  (at pp.c:5206)
    Decl: name='Msp430TimerCapComP__5__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:5206)
      FuncDecl: quals=None (at pp.c:5206)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Event__fired', quals=[] (at pp.c:5206)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5207)
      If:  (at pp.c:5208)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__5__Control__getControl' (at pp.c:5208)
          ID: name='cap' (at pp.c:5208)
        Compound:  (at pp.c:5208)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__5__Capture__captured' (at pp.c:5209)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__5__Capture__getEvent' (at pp.c:5209)
        Compound:  (at pp.c:5211)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__5__Compare__fired' (at pp.c:5213)
  FuncDef:  (at pp.c:5218)
    Decl: name='HplMsp430GeneralIOP__47__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:5218)
      FuncDecl: quals=None (at pp.c:5218)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__47__IO__makeInput', quals=[] (at pp.c:5218)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5220)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5223)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='54U' (at pp.c:5223)
        UnaryOp: op='~' (at pp.c:5223)
          BinaryOp: op='<<' (at pp.c:5223)
            Constant: type='int', value='0x01' (at pp.c:5223)
            Constant: type='int', value='7' (at pp.c:5223)
  FuncDef:  (at pp.c:5227)
    Decl: name='Msp430Adc12ImplP__Port67__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:5227)
      FuncDecl: quals=None (at pp.c:5227)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port67__makeInput', quals=[] (at pp.c:5227)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5227)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__47__IO__makeInput' (at pp.c:5229)
  FuncDef:  (at pp.c:5234)
    Decl: name='HplMsp430GeneralIOP__47__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5234)
      FuncDecl: quals=None (at pp.c:5234)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__47__IO__selectModuleFunc', quals=[] (at pp.c:5234)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5236)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5239)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:5239)
        BinaryOp: op='<<' (at pp.c:5239)
          Constant: type='int', value='0x01' (at pp.c:5239)
          Constant: type='int', value='7' (at pp.c:5239)
  FuncDef:  (at pp.c:5243)
    Decl: name='Msp430Adc12ImplP__Port67__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:5243)
      FuncDecl: quals=None (at pp.c:5243)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port67__selectModuleFunc', quals=[] (at pp.c:5243)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5243)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__47__IO__selectModuleFunc' (at pp.c:5245)
  FuncDef:  (at pp.c:5250)
    Decl: name='HplMsp430GeneralIOP__46__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:5250)
      FuncDecl: quals=None (at pp.c:5250)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__46__IO__makeInput', quals=[] (at pp.c:5250)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5252)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5255)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='54U' (at pp.c:5255)
        UnaryOp: op='~' (at pp.c:5255)
          BinaryOp: op='<<' (at pp.c:5255)
            Constant: type='int', value='0x01' (at pp.c:5255)
            Constant: type='int', value='6' (at pp.c:5255)
  FuncDef:  (at pp.c:5259)
    Decl: name='Msp430Adc12ImplP__Port66__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:5259)
      FuncDecl: quals=None (at pp.c:5259)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port66__makeInput', quals=[] (at pp.c:5259)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5259)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__46__IO__makeInput' (at pp.c:5261)
  FuncDef:  (at pp.c:5266)
    Decl: name='HplMsp430GeneralIOP__46__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5266)
      FuncDecl: quals=None (at pp.c:5266)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__46__IO__selectModuleFunc', quals=[] (at pp.c:5266)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5268)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5271)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:5271)
        BinaryOp: op='<<' (at pp.c:5271)
          Constant: type='int', value='0x01' (at pp.c:5271)
          Constant: type='int', value='6' (at pp.c:5271)
  FuncDef:  (at pp.c:5275)
    Decl: name='Msp430Adc12ImplP__Port66__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:5275)
      FuncDecl: quals=None (at pp.c:5275)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port66__selectModuleFunc', quals=[] (at pp.c:5275)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5275)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__46__IO__selectModuleFunc' (at pp.c:5277)
  FuncDef:  (at pp.c:5282)
    Decl: name='HplMsp430GeneralIOP__45__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:5282)
      FuncDecl: quals=None (at pp.c:5282)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__45__IO__makeInput', quals=[] (at pp.c:5282)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5284)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5287)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='54U' (at pp.c:5287)
        UnaryOp: op='~' (at pp.c:5287)
          BinaryOp: op='<<' (at pp.c:5287)
            Constant: type='int', value='0x01' (at pp.c:5287)
            Constant: type='int', value='5' (at pp.c:5287)
  FuncDef:  (at pp.c:5291)
    Decl: name='Msp430Adc12ImplP__Port65__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:5291)
      FuncDecl: quals=None (at pp.c:5291)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port65__makeInput', quals=[] (at pp.c:5291)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5291)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__45__IO__makeInput' (at pp.c:5293)
  FuncDef:  (at pp.c:5298)
    Decl: name='HplMsp430GeneralIOP__45__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5298)
      FuncDecl: quals=None (at pp.c:5298)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__45__IO__selectModuleFunc', quals=[] (at pp.c:5298)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5300)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5303)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:5303)
        BinaryOp: op='<<' (at pp.c:5303)
          Constant: type='int', value='0x01' (at pp.c:5303)
          Constant: type='int', value='5' (at pp.c:5303)
  FuncDef:  (at pp.c:5307)
    Decl: name='Msp430Adc12ImplP__Port65__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:5307)
      FuncDecl: quals=None (at pp.c:5307)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port65__selectModuleFunc', quals=[] (at pp.c:5307)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5307)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__45__IO__selectModuleFunc' (at pp.c:5309)
  FuncDef:  (at pp.c:5314)
    Decl: name='HplMsp430GeneralIOP__44__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:5314)
      FuncDecl: quals=None (at pp.c:5314)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__44__IO__makeInput', quals=[] (at pp.c:5314)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5316)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5319)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='54U' (at pp.c:5319)
        UnaryOp: op='~' (at pp.c:5319)
          BinaryOp: op='<<' (at pp.c:5319)
            Constant: type='int', value='0x01' (at pp.c:5319)
            Constant: type='int', value='4' (at pp.c:5319)
  FuncDef:  (at pp.c:5323)
    Decl: name='Msp430Adc12ImplP__Port64__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:5323)
      FuncDecl: quals=None (at pp.c:5323)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port64__makeInput', quals=[] (at pp.c:5323)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5323)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__44__IO__makeInput' (at pp.c:5325)
  FuncDef:  (at pp.c:5330)
    Decl: name='HplMsp430GeneralIOP__44__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5330)
      FuncDecl: quals=None (at pp.c:5330)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__44__IO__selectModuleFunc', quals=[] (at pp.c:5330)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5332)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5335)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:5335)
        BinaryOp: op='<<' (at pp.c:5335)
          Constant: type='int', value='0x01' (at pp.c:5335)
          Constant: type='int', value='4' (at pp.c:5335)
  FuncDef:  (at pp.c:5339)
    Decl: name='Msp430Adc12ImplP__Port64__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:5339)
      FuncDecl: quals=None (at pp.c:5339)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port64__selectModuleFunc', quals=[] (at pp.c:5339)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5339)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__44__IO__selectModuleFunc' (at pp.c:5341)
  FuncDef:  (at pp.c:5346)
    Decl: name='HplMsp430GeneralIOP__43__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:5346)
      FuncDecl: quals=None (at pp.c:5346)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__43__IO__makeInput', quals=[] (at pp.c:5346)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5348)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5351)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='54U' (at pp.c:5351)
        UnaryOp: op='~' (at pp.c:5351)
          BinaryOp: op='<<' (at pp.c:5351)
            Constant: type='int', value='0x01' (at pp.c:5351)
            Constant: type='int', value='3' (at pp.c:5351)
  FuncDef:  (at pp.c:5355)
    Decl: name='Msp430Adc12ImplP__Port63__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:5355)
      FuncDecl: quals=None (at pp.c:5355)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port63__makeInput', quals=[] (at pp.c:5355)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5355)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__43__IO__makeInput' (at pp.c:5357)
  FuncDef:  (at pp.c:5362)
    Decl: name='HplMsp430GeneralIOP__43__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5362)
      FuncDecl: quals=None (at pp.c:5362)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__43__IO__selectModuleFunc', quals=[] (at pp.c:5362)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5364)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5367)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:5367)
        BinaryOp: op='<<' (at pp.c:5367)
          Constant: type='int', value='0x01' (at pp.c:5367)
          Constant: type='int', value='3' (at pp.c:5367)
  FuncDef:  (at pp.c:5371)
    Decl: name='Msp430Adc12ImplP__Port63__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:5371)
      FuncDecl: quals=None (at pp.c:5371)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port63__selectModuleFunc', quals=[] (at pp.c:5371)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5371)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__43__IO__selectModuleFunc' (at pp.c:5373)
  FuncDef:  (at pp.c:5378)
    Decl: name='HplMsp430GeneralIOP__42__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:5378)
      FuncDecl: quals=None (at pp.c:5378)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__42__IO__makeInput', quals=[] (at pp.c:5378)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5380)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5383)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='54U' (at pp.c:5383)
        UnaryOp: op='~' (at pp.c:5383)
          BinaryOp: op='<<' (at pp.c:5383)
            Constant: type='int', value='0x01' (at pp.c:5383)
            Constant: type='int', value='2' (at pp.c:5383)
  FuncDef:  (at pp.c:5387)
    Decl: name='Msp430Adc12ImplP__Port62__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:5387)
      FuncDecl: quals=None (at pp.c:5387)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port62__makeInput', quals=[] (at pp.c:5387)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5387)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__42__IO__makeInput' (at pp.c:5389)
  FuncDef:  (at pp.c:5394)
    Decl: name='HplMsp430GeneralIOP__42__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5394)
      FuncDecl: quals=None (at pp.c:5394)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__42__IO__selectModuleFunc', quals=[] (at pp.c:5394)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5396)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5399)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:5399)
        BinaryOp: op='<<' (at pp.c:5399)
          Constant: type='int', value='0x01' (at pp.c:5399)
          Constant: type='int', value='2' (at pp.c:5399)
  FuncDef:  (at pp.c:5403)
    Decl: name='Msp430Adc12ImplP__Port62__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:5403)
      FuncDecl: quals=None (at pp.c:5403)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port62__selectModuleFunc', quals=[] (at pp.c:5403)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5403)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__42__IO__selectModuleFunc' (at pp.c:5405)
  FuncDef:  (at pp.c:5410)
    Decl: name='HplMsp430GeneralIOP__41__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:5410)
      FuncDecl: quals=None (at pp.c:5410)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__41__IO__makeInput', quals=[] (at pp.c:5410)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5412)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5415)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='54U' (at pp.c:5415)
        UnaryOp: op='~' (at pp.c:5415)
          BinaryOp: op='<<' (at pp.c:5415)
            Constant: type='int', value='0x01' (at pp.c:5415)
            Constant: type='int', value='1' (at pp.c:5415)
  FuncDef:  (at pp.c:5419)
    Decl: name='Msp430Adc12ImplP__Port61__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:5419)
      FuncDecl: quals=None (at pp.c:5419)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port61__makeInput', quals=[] (at pp.c:5419)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5419)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__41__IO__makeInput' (at pp.c:5421)
  FuncDef:  (at pp.c:5426)
    Decl: name='HplMsp430GeneralIOP__41__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5426)
      FuncDecl: quals=None (at pp.c:5426)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__41__IO__selectModuleFunc', quals=[] (at pp.c:5426)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5428)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5431)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:5431)
        BinaryOp: op='<<' (at pp.c:5431)
          Constant: type='int', value='0x01' (at pp.c:5431)
          Constant: type='int', value='1' (at pp.c:5431)
  FuncDef:  (at pp.c:5435)
    Decl: name='Msp430Adc12ImplP__Port61__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:5435)
      FuncDecl: quals=None (at pp.c:5435)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port61__selectModuleFunc', quals=[] (at pp.c:5435)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5435)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__41__IO__selectModuleFunc' (at pp.c:5437)
  FuncDef:  (at pp.c:5442)
    Decl: name='HplMsp430GeneralIOP__40__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:5442)
      FuncDecl: quals=None (at pp.c:5442)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__40__IO__makeInput', quals=[] (at pp.c:5442)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5444)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5447)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='54U' (at pp.c:5447)
        UnaryOp: op='~' (at pp.c:5447)
          BinaryOp: op='<<' (at pp.c:5447)
            Constant: type='int', value='0x01' (at pp.c:5447)
            Constant: type='int', value='0' (at pp.c:5447)
  FuncDef:  (at pp.c:5451)
    Decl: name='Msp430Adc12ImplP__Port60__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:5451)
      FuncDecl: quals=None (at pp.c:5451)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port60__makeInput', quals=[] (at pp.c:5451)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5451)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__40__IO__makeInput' (at pp.c:5453)
  FuncDef:  (at pp.c:5458)
    Decl: name='HplMsp430GeneralIOP__40__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5458)
      FuncDecl: quals=None (at pp.c:5458)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__40__IO__selectModuleFunc', quals=[] (at pp.c:5458)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5460)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5463)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:5463)
        BinaryOp: op='<<' (at pp.c:5463)
          Constant: type='int', value='0x01' (at pp.c:5463)
          Constant: type='int', value='0' (at pp.c:5463)
  FuncDef:  (at pp.c:5467)
    Decl: name='Msp430Adc12ImplP__Port60__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:5467)
      FuncDecl: quals=None (at pp.c:5467)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port60__selectModuleFunc', quals=[] (at pp.c:5467)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5467)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__40__IO__selectModuleFunc' (at pp.c:5469)
  FuncDef:  (at pp.c:5474)
    Decl: name='Msp430Adc12ImplP__configureAdcPin', quals=[], storage=['inline', 'static'] (at pp.c:5474)
      FuncDecl: quals=None (at pp.c:5474)
        ParamList:  (at pp.c:5474)
          Decl: name='inch', quals=[], storage=[] (at pp.c:5474)
            TypeDecl: declname='inch', quals=[] (at pp.c:5474)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__configureAdcPin', quals=[] (at pp.c:5474)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5475)
      Switch:  (at pp.c:5477)
        ID: name='inch' (at pp.c:5477)
        Compound:  (at pp.c:5478)
          Case:  (at pp.c:5479)
            Constant: type='int', value='0' (at pp.c:5479)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port60__selectModuleFunc' (at pp.c:5479)
          FuncCall:  (at None)
            ID: name='Msp430Adc12ImplP__Port60__makeInput' (at pp.c:5481)
          Break:  (at pp.c:5483)
          Case:  (at pp.c:5484)
            Constant: type='int', value='1' (at pp.c:5484)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port61__selectModuleFunc' (at pp.c:5484)
          FuncCall:  (at None)
            ID: name='Msp430Adc12ImplP__Port61__makeInput' (at pp.c:5486)
          Break:  (at pp.c:5488)
          Case:  (at pp.c:5489)
            Constant: type='int', value='2' (at pp.c:5489)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port62__selectModuleFunc' (at pp.c:5489)
          FuncCall:  (at None)
            ID: name='Msp430Adc12ImplP__Port62__makeInput' (at pp.c:5491)
          Break:  (at pp.c:5493)
          Case:  (at pp.c:5494)
            Constant: type='int', value='3' (at pp.c:5494)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port63__selectModuleFunc' (at pp.c:5494)
          FuncCall:  (at None)
            ID: name='Msp430Adc12ImplP__Port63__makeInput' (at pp.c:5496)
          Break:  (at pp.c:5498)
          Case:  (at pp.c:5499)
            Constant: type='int', value='4' (at pp.c:5499)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port64__selectModuleFunc' (at pp.c:5499)
          FuncCall:  (at None)
            ID: name='Msp430Adc12ImplP__Port64__makeInput' (at pp.c:5501)
          Break:  (at pp.c:5503)
          Case:  (at pp.c:5504)
            Constant: type='int', value='5' (at pp.c:5504)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port65__selectModuleFunc' (at pp.c:5504)
          FuncCall:  (at None)
            ID: name='Msp430Adc12ImplP__Port65__makeInput' (at pp.c:5506)
          Break:  (at pp.c:5508)
          Case:  (at pp.c:5509)
            Constant: type='int', value='6' (at pp.c:5509)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port66__selectModuleFunc' (at pp.c:5509)
          FuncCall:  (at None)
            ID: name='Msp430Adc12ImplP__Port66__makeInput' (at pp.c:5511)
          Break:  (at pp.c:5513)
          Case:  (at pp.c:5514)
            Constant: type='int', value='7' (at pp.c:5514)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port67__selectModuleFunc' (at pp.c:5514)
          FuncCall:  (at None)
            ID: name='Msp430Adc12ImplP__Port67__makeInput' (at pp.c:5516)
          Break:  (at pp.c:5518)
  FuncDef:  (at pp.c:5523)
    Decl: name='HplAdc12P__HplAdc12__startConversion', quals=[], storage=['inline', 'static'] (at pp.c:5523)
      FuncDecl: quals=None (at pp.c:5523)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__startConversion', quals=[] (at pp.c:5523)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5525)
      Assignment: op='|=' (at pp.c:5526)
        ID: name='HplAdc12P__ADC12CTL0' (at pp.c:5526)
        Constant: type='int', value='0x0010' (at pp.c:5526)
      Assignment: op='|=' (at pp.c:5527)
        ID: name='HplAdc12P__ADC12CTL0' (at pp.c:5527)
        BinaryOp: op='+' (at pp.c:5527)
          Constant: type='int', value='0x0001' (at pp.c:5527)
          Constant: type='int', value='0x0002' (at pp.c:5527)
  FuncDef:  (at pp.c:5531)
    Decl: name='Msp430Adc12ImplP__HplAdc12__startConversion', quals=[], storage=['static', 'inline'] (at pp.c:5531)
      FuncDecl: quals=None (at pp.c:5531)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__startConversion', quals=[] (at pp.c:5531)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5531)
      FuncCall:  (at None)
        ID: name='HplAdc12P__HplAdc12__startConversion' (at pp.c:5533)
  FuncDef:  (at pp.c:5538)
    Decl: name='Msp430Adc12ImplP__TimerA__setMode', quals=[], storage=['static', 'inline'] (at pp.c:5538)
      FuncDecl: quals=None (at pp.c:5538)
        ParamList:  (at pp.c:5538)
          Decl: name='mode', quals=[], storage=[] (at pp.c:5538)
            TypeDecl: declname='mode', quals=[] (at pp.c:5538)
              IdentifierType: names=['int'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__TimerA__setMode', quals=[] (at pp.c:5538)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5538)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Timer__setMode' (at pp.c:5540)
        ExprList:  (at pp.c:5540)
          ID: name='mode' (at pp.c:5540)
  FuncDef:  (at pp.c:5545)
    Decl: name='Msp430TimerCapComP__1__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:5545)
      FuncDecl: quals=None (at pp.c:5545)
        ParamList:  (at pp.c:5545)
          Decl: name='x', quals=[], storage=[] (at pp.c:5545)
            TypeDecl: declname='x', quals=[] (at pp.c:5545)
              IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__CC2int', quals=[] (at pp.c:5545)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:5547)
      Decl: name='c', quals=[], storage=[] (at pp.c:5556)
        TypeDecl: declname='c', quals=[] (at pp.c:5556)
          Union: name='Msp430TimerCapComP__1____nesc_unnamed4306', packed=False (at pp.c:5549)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:5551)
                IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:5553)
                IdentifierType: names=['uint16_t'] (at None)
        ExprList:  (at pp.c:5556)
          Assignment: op='=' (at pp.c:5556)
            StructRef: type='.' (at pp.c:5556)
              ID: name='f' (at pp.c:5556)
            ID: name='x' (at pp.c:5556)
      Return:  (at pp.c:5559)
        StructRef: type='.' (at pp.c:5559)
          ID: name='c' (at pp.c:5559)
          ID: name='t' (at pp.c:5559)
  FuncDef:  (at pp.c:5563)
    Decl: name='Msp430TimerCapComP__1__Control__setControl', quals=[], storage=['inline', 'static'] (at pp.c:5563)
      FuncDecl: quals=None (at pp.c:5563)
        ParamList:  (at pp.c:5563)
          Decl: name='x', quals=[], storage=[] (at pp.c:5563)
            TypeDecl: declname='x', quals=[] (at pp.c:5563)
              IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Control__setControl', quals=[] (at pp.c:5563)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5564)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5565)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='356U' (at pp.c:5565)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__1__CC2int' (at pp.c:5565)
          ExprList:  (at pp.c:5565)
            ID: name='x' (at pp.c:5565)
  FuncDef:  (at pp.c:5569)
    Decl: name='Msp430Adc12ImplP__ControlA1__setControl', quals=[], storage=['static', 'inline'] (at pp.c:5569)
      FuncDecl: quals=None (at pp.c:5569)
        ParamList:  (at pp.c:5569)
          Decl: name='control', quals=[], storage=[] (at pp.c:5569)
            TypeDecl: declname='control', quals=[] (at pp.c:5569)
              IdentifierType: names=['msp430_compare_control_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__ControlA1__setControl', quals=[] (at pp.c:5569)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5569)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__1__Control__setControl' (at pp.c:5571)
        ExprList:  (at pp.c:5571)
          ID: name='control' (at pp.c:5571)
  FuncDef:  (at pp.c:5576)
    Decl: name='Msp430Adc12ImplP__startTimerA', quals=[], storage=['inline', 'static'] (at pp.c:5576)
      FuncDecl: quals=None (at pp.c:5576)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__startTimerA', quals=[] (at pp.c:5576)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5577)
      Decl: name='ccSetSHI', quals=[], storage=[] (at pp.c:5579)
        TypeDecl: declname='ccSetSHI', quals=[] (at pp.c:5579)
          IdentifierType: names=['msp430_compare_control_t'] (at None)
        ExprList:  (at pp.c:5580)
          Assignment: op='=' (at pp.c:5580)
            StructRef: type='.' (at pp.c:5580)
              ID: name='ccifg' (at pp.c:5580)
            Constant: type='int', value='0' (at pp.c:5580)
          Assignment: op='=' (at pp.c:5580)
            StructRef: type='.' (at pp.c:5580)
              ID: name='cov' (at pp.c:5580)
            Constant: type='int', value='0' (at pp.c:5580)
          Assignment: op='=' (at pp.c:5580)
            StructRef: type='.' (at pp.c:5580)
              ID: name='out' (at pp.c:5580)
            Constant: type='int', value='1' (at pp.c:5580)
          Assignment: op='=' (at pp.c:5580)
            StructRef: type='.' (at pp.c:5580)
              ID: name='cci' (at pp.c:5580)
            Constant: type='int', value='0' (at pp.c:5580)
          Assignment: op='=' (at pp.c:5580)
            StructRef: type='.' (at pp.c:5580)
              ID: name='ccie' (at pp.c:5580)
            Constant: type='int', value='0' (at pp.c:5580)
          Assignment: op='=' (at pp.c:5581)
            StructRef: type='.' (at pp.c:5581)
              ID: name='outmod' (at pp.c:5581)
            Constant: type='int', value='0' (at pp.c:5581)
          Assignment: op='=' (at pp.c:5581)
            StructRef: type='.' (at pp.c:5581)
              ID: name='cap' (at pp.c:5581)
            Constant: type='int', value='0' (at pp.c:5581)
          Assignment: op='=' (at pp.c:5581)
            StructRef: type='.' (at pp.c:5581)
              ID: name='clld' (at pp.c:5581)
            Constant: type='int', value='0' (at pp.c:5581)
          Assignment: op='=' (at pp.c:5581)
            StructRef: type='.' (at pp.c:5581)
              ID: name='scs' (at pp.c:5581)
            Constant: type='int', value='0' (at pp.c:5581)
          Assignment: op='=' (at pp.c:5581)
            StructRef: type='.' (at pp.c:5581)
              ID: name='ccis' (at pp.c:5581)
            Constant: type='int', value='0' (at pp.c:5581)
          Assignment: op='=' (at pp.c:5581)
            StructRef: type='.' (at pp.c:5581)
              ID: name='cm' (at pp.c:5581)
            Constant: type='int', value='0' (at pp.c:5581)
      Decl: name='ccResetSHI', quals=[], storage=[] (at pp.c:5582)
        TypeDecl: declname='ccResetSHI', quals=[] (at pp.c:5582)
          IdentifierType: names=['msp430_compare_control_t'] (at None)
        ExprList:  (at pp.c:5583)
          Assignment: op='=' (at pp.c:5583)
            StructRef: type='.' (at pp.c:5583)
              ID: name='ccifg' (at pp.c:5583)
            Constant: type='int', value='0' (at pp.c:5583)
          Assignment: op='=' (at pp.c:5583)
            StructRef: type='.' (at pp.c:5583)
              ID: name='cov' (at pp.c:5583)
            Constant: type='int', value='0' (at pp.c:5583)
          Assignment: op='=' (at pp.c:5583)
            StructRef: type='.' (at pp.c:5583)
              ID: name='out' (at pp.c:5583)
            Constant: type='int', value='0' (at pp.c:5583)
          Assignment: op='=' (at pp.c:5583)
            StructRef: type='.' (at pp.c:5583)
              ID: name='cci' (at pp.c:5583)
            Constant: type='int', value='0' (at pp.c:5583)
          Assignment: op='=' (at pp.c:5583)
            StructRef: type='.' (at pp.c:5583)
              ID: name='ccie' (at pp.c:5583)
            Constant: type='int', value='0' (at pp.c:5583)
          Assignment: op='=' (at pp.c:5584)
            StructRef: type='.' (at pp.c:5584)
              ID: name='outmod' (at pp.c:5584)
            Constant: type='int', value='0' (at pp.c:5584)
          Assignment: op='=' (at pp.c:5584)
            StructRef: type='.' (at pp.c:5584)
              ID: name='cap' (at pp.c:5584)
            Constant: type='int', value='0' (at pp.c:5584)
          Assignment: op='=' (at pp.c:5584)
            StructRef: type='.' (at pp.c:5584)
              ID: name='clld' (at pp.c:5584)
            Constant: type='int', value='0' (at pp.c:5584)
          Assignment: op='=' (at pp.c:5584)
            StructRef: type='.' (at pp.c:5584)
              ID: name='scs' (at pp.c:5584)
            Constant: type='int', value='0' (at pp.c:5584)
          Assignment: op='=' (at pp.c:5584)
            StructRef: type='.' (at pp.c:5584)
              ID: name='ccis' (at pp.c:5584)
            Constant: type='int', value='0' (at pp.c:5584)
          Assignment: op='=' (at pp.c:5584)
            StructRef: type='.' (at pp.c:5584)
              ID: name='cm' (at pp.c:5584)
            Constant: type='int', value='0' (at pp.c:5584)
      Decl: name='ccRSOutmod', quals=[], storage=[] (at pp.c:5585)
        TypeDecl: declname='ccRSOutmod', quals=[] (at pp.c:5585)
          IdentifierType: names=['msp430_compare_control_t'] (at None)
        ExprList:  (at pp.c:5586)
          Assignment: op='=' (at pp.c:5586)
            StructRef: type='.' (at pp.c:5586)
              ID: name='ccifg' (at pp.c:5586)
            Constant: type='int', value='0' (at pp.c:5586)
          Assignment: op='=' (at pp.c:5586)
            StructRef: type='.' (at pp.c:5586)
              ID: name='cov' (at pp.c:5586)
            Constant: type='int', value='0' (at pp.c:5586)
          Assignment: op='=' (at pp.c:5586)
            StructRef: type='.' (at pp.c:5586)
              ID: name='out' (at pp.c:5586)
            Constant: type='int', value='0' (at pp.c:5586)
          Assignment: op='=' (at pp.c:5586)
            StructRef: type='.' (at pp.c:5586)
              ID: name='cci' (at pp.c:5586)
            Constant: type='int', value='0' (at pp.c:5586)
          Assignment: op='=' (at pp.c:5586)
            StructRef: type='.' (at pp.c:5586)
              ID: name='ccie' (at pp.c:5586)
            Constant: type='int', value='0' (at pp.c:5586)
          Assignment: op='=' (at pp.c:5587)
            StructRef: type='.' (at pp.c:5587)
              ID: name='outmod' (at pp.c:5587)
            Constant: type='int', value='7' (at pp.c:5587)
          Assignment: op='=' (at pp.c:5587)
            StructRef: type='.' (at pp.c:5587)
              ID: name='cap' (at pp.c:5587)
            Constant: type='int', value='0' (at pp.c:5587)
          Assignment: op='=' (at pp.c:5587)
            StructRef: type='.' (at pp.c:5587)
              ID: name='clld' (at pp.c:5587)
            Constant: type='int', value='0' (at pp.c:5587)
          Assignment: op='=' (at pp.c:5587)
            StructRef: type='.' (at pp.c:5587)
              ID: name='scs' (at pp.c:5587)
            Constant: type='int', value='0' (at pp.c:5587)
          Assignment: op='=' (at pp.c:5587)
            StructRef: type='.' (at pp.c:5587)
              ID: name='ccis' (at pp.c:5587)
            Constant: type='int', value='0' (at pp.c:5587)
          Assignment: op='=' (at pp.c:5587)
            StructRef: type='.' (at pp.c:5587)
              ID: name='cm' (at pp.c:5587)
            Constant: type='int', value='0' (at pp.c:5587)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__ControlA1__setControl' (at pp.c:5589)
        ExprList:  (at pp.c:5589)
          ID: name='ccResetSHI' (at pp.c:5589)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__ControlA1__setControl' (at pp.c:5590)
        ExprList:  (at pp.c:5590)
          ID: name='ccSetSHI' (at pp.c:5590)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__ControlA1__setControl' (at pp.c:5592)
        ExprList:  (at pp.c:5592)
          ID: name='ccRSOutmod' (at pp.c:5592)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__TimerA__setMode' (at pp.c:5593)
        ExprList:  (at pp.c:5593)
          ID: name='MSP430TIMER_UP_MODE' (at pp.c:5593)
  FuncDef:  (at pp.c:5597)
    Decl: name='Msp430TimerCapComP__5__Control__enableEvents', quals=[], storage=['inline', 'static'] (at pp.c:5597)
      FuncDecl: quals=None (at pp.c:5597)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Control__enableEvents', quals=[] (at pp.c:5597)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5598)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5599)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='390U' (at pp.c:5599)
        Constant: type='int', value='0x0010' (at pp.c:5599)
  FuncDef:  (at pp.c:5603)
    Decl: name='Msp430AlarmC__1__Msp430TimerControl__enableEvents', quals=[], storage=['static', 'inline'] (at pp.c:5603)
      FuncDecl: quals=None (at pp.c:5603)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__enableEvents', quals=[] (at pp.c:5603)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5603)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Control__enableEvents' (at pp.c:5605)
  FuncDef:  (at pp.c:5610)
    Decl: name='Msp430TimerCapComP__5__Control__clearPendingInterrupt', quals=[], storage=['inline', 'static'] (at pp.c:5610)
      FuncDecl: quals=None (at pp.c:5610)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Control__clearPendingInterrupt', quals=[] (at pp.c:5610)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5611)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5612)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='390U' (at pp.c:5612)
        UnaryOp: op='~' (at pp.c:5612)
          Constant: type='int', value='0x0001' (at pp.c:5612)
  FuncDef:  (at pp.c:5616)
    Decl: name='Msp430AlarmC__1__Msp430TimerControl__clearPendingInterrupt', quals=[], storage=['static', 'inline'] (at pp.c:5616)
      FuncDecl: quals=None (at pp.c:5616)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__clearPendingInterrupt', quals=[] (at pp.c:5616)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5616)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Control__clearPendingInterrupt' (at pp.c:5618)
  FuncDef:  (at pp.c:5623)
    Decl: name='Msp430TimerCapComP__5__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:5623)
      FuncDecl: quals=None (at pp.c:5623)
        ParamList:  (at pp.c:5623)
          Decl: name='x', quals=[], storage=[] (at pp.c:5623)
            TypeDecl: declname='x', quals=[] (at pp.c:5623)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Compare__setEvent', quals=[] (at pp.c:5623)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5624)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5625)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='406U' (at pp.c:5625)
        ID: name='x' (at pp.c:5625)
  FuncDef:  (at pp.c:5629)
    Decl: name='Msp430AlarmC__1__Msp430Compare__setEvent', quals=[], storage=['static', 'inline'] (at pp.c:5629)
      FuncDecl: quals=None (at pp.c:5629)
        ParamList:  (at pp.c:5629)
          Decl: name='time', quals=[], storage=[] (at pp.c:5629)
            TypeDecl: declname='time', quals=[] (at pp.c:5629)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430Compare__setEvent', quals=[] (at pp.c:5629)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5629)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Compare__setEvent' (at pp.c:5631)
        ExprList:  (at pp.c:5631)
          ID: name='time' (at pp.c:5631)
  FuncDef:  (at pp.c:5636)
    Decl: name='Msp430TimerCapComP__5__Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:5636)
      FuncDecl: quals=None (at pp.c:5636)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Timer__get', quals=[] (at pp.c:5636)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:5636)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:5638)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:5638)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:5642)
        ID: name='__nesc_result' (at pp.c:5642)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__get' (at pp.c:5642)
      Return:  (at pp.c:5646)
        ID: name='__nesc_result' (at pp.c:5646)
  FuncDef:  (at pp.c:5651)
    Decl: name='Msp430TimerCapComP__5__Compare__setEventFromNow', quals=[], storage=['inline', 'static'] (at pp.c:5651)
      FuncDecl: quals=None (at pp.c:5651)
        ParamList:  (at pp.c:5651)
          Decl: name='x', quals=[], storage=[] (at pp.c:5651)
            TypeDecl: declname='x', quals=[] (at pp.c:5651)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Compare__setEventFromNow', quals=[] (at pp.c:5651)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5652)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5653)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='406U' (at pp.c:5653)
        BinaryOp: op='+' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__5__Timer__get' (at pp.c:5653)
          ID: name='x' (at pp.c:5653)
  FuncDef:  (at pp.c:5657)
    Decl: name='Msp430AlarmC__1__Msp430Compare__setEventFromNow', quals=[], storage=['static', 'inline'] (at pp.c:5657)
      FuncDecl: quals=None (at pp.c:5657)
        ParamList:  (at pp.c:5657)
          Decl: name='delta', quals=[], storage=[] (at pp.c:5657)
            TypeDecl: declname='delta', quals=[] (at pp.c:5657)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430Compare__setEventFromNow', quals=[] (at pp.c:5657)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5657)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Compare__setEventFromNow' (at pp.c:5659)
        ExprList:  (at pp.c:5659)
          ID: name='delta' (at pp.c:5659)
  FuncDef:  (at pp.c:5664)
    Decl: name='Msp430AlarmC__1__Msp430Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:5664)
      FuncDecl: quals=None (at pp.c:5664)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430Timer__get', quals=[] (at pp.c:5664)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:5664)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:5666)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:5666)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:5670)
        ID: name='__nesc_result' (at pp.c:5670)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__get' (at pp.c:5670)
      Return:  (at pp.c:5674)
        ID: name='__nesc_result' (at pp.c:5674)
  FuncDef:  (at pp.c:5679)
    Decl: name='Msp430AlarmC__1__Alarm__startAt', quals=[], storage=['inline', 'static'] (at pp.c:5679)
      FuncDecl: quals=None (at pp.c:5679)
        ParamList:  (at pp.c:5679)
          Decl: name='t0', quals=[], storage=[] (at pp.c:5679)
            TypeDecl: declname='t0', quals=[] (at pp.c:5679)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:5679)
            TypeDecl: declname='dt', quals=[] (at pp.c:5679)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Alarm__startAt', quals=[] (at pp.c:5679)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5680)
      Compound:  (at pp.c:5682)
        Decl: name='now', quals=[], storage=[] (at pp.c:5683)
          TypeDecl: declname='now', quals=[] (at pp.c:5683)
            IdentifierType: names=['uint16_t'] (at None)
          FuncCall:  (at None)
            ID: name='Msp430AlarmC__1__Msp430Timer__get' (at pp.c:5683)
        Decl: name='elapsed', quals=[], storage=[] (at pp.c:5684)
          TypeDecl: declname='elapsed', quals=[] (at pp.c:5684)
            IdentifierType: names=['uint16_t'] (at None)
          BinaryOp: op='-' (at pp.c:5684)
            ID: name='now' (at pp.c:5684)
            ID: name='t0' (at pp.c:5684)
        If:  (at pp.c:5687)
          BinaryOp: op='>=' (at pp.c:5687)
            ID: name='elapsed' (at pp.c:5687)
            ID: name='dt' (at pp.c:5687)
          Compound:  (at pp.c:5688)
            FuncCall:  (at None)
              ID: name='Msp430AlarmC__1__Msp430Compare__setEventFromNow' (at pp.c:5689)
              ExprList:  (at pp.c:5689)
                Constant: type='int', value='2' (at pp.c:5689)
          Compound:  (at pp.c:5692)
            Decl: name='remaining', quals=[], storage=[] (at pp.c:5693)
              TypeDecl: declname='remaining', quals=[] (at pp.c:5693)
                IdentifierType: names=['uint16_t'] (at None)
              BinaryOp: op='-' (at pp.c:5693)
                ID: name='dt' (at pp.c:5693)
                ID: name='elapsed' (at pp.c:5693)
            If:  (at pp.c:5696)
              BinaryOp: op='<=' (at pp.c:5696)
                ID: name='remaining' (at pp.c:5696)
                Constant: type='int', value='2' (at pp.c:5696)
              Compound:  (at pp.c:5696)
                FuncCall:  (at None)
                  ID: name='Msp430AlarmC__1__Msp430Compare__setEventFromNow' (at pp.c:5697)
                  ExprList:  (at pp.c:5697)
                    Constant: type='int', value='2' (at pp.c:5697)
              Compound:  (at pp.c:5699)
                FuncCall:  (at None)
                  ID: name='Msp430AlarmC__1__Msp430Compare__setEvent' (at pp.c:5701)
                  ExprList:  (at pp.c:5701)
                    BinaryOp: op='+' (at pp.c:5701)
                      ID: name='now' (at pp.c:5701)
                      ID: name='remaining' (at pp.c:5701)
        FuncCall:  (at None)
          ID: name='Msp430AlarmC__1__Msp430TimerControl__clearPendingInterrupt' (at pp.c:5705)
        FuncCall:  (at None)
          ID: name='Msp430AlarmC__1__Msp430TimerControl__enableEvents' (at pp.c:5706)
  FuncDef:  (at pp.c:5711)
    Decl: name='TransformAlarmC__1__AlarmFrom__startAt', quals=[], storage=['static', 'inline'] (at pp.c:5711)
      FuncDecl: quals=None (at pp.c:5711)
        ParamList:  (at pp.c:5711)
          Decl: name='t0', quals=[], storage=[] (at pp.c:5711)
            TypeDecl: declname='t0', quals=[] (at pp.c:5711)
              IdentifierType: names=['TransformAlarmC__1__AlarmFrom__size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:5711)
            TypeDecl: declname='dt', quals=[] (at pp.c:5711)
              IdentifierType: names=['TransformAlarmC__1__AlarmFrom__size_type'] (at None)
        TypeDecl: declname='TransformAlarmC__1__AlarmFrom__startAt', quals=[] (at pp.c:5711)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5711)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Alarm__startAt' (at pp.c:5713)
        ExprList:  (at pp.c:5713)
          ID: name='t0' (at pp.c:5713)
          ID: name='dt' (at pp.c:5713)
  FuncDef:  (at pp.c:5718)
    Decl: name='Msp430TimerCapComP__6__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:5718)
      FuncDecl: quals=None (at pp.c:5718)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Compare__default__fired', quals=[] (at pp.c:5718)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5719)
  FuncDef:  (at pp.c:5723)
    Decl: name='Msp430TimerCapComP__6__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:5723)
      FuncDecl: quals=None (at pp.c:5723)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Compare__fired', quals=[] (at pp.c:5723)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5723)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__6__Compare__default__fired' (at pp.c:5725)
  FuncDef:  (at pp.c:5730)
    Decl: name='Msp430TimerCapComP__6__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:5730)
      FuncDecl: quals=None (at pp.c:5730)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Capture__getEvent', quals=[] (at pp.c:5730)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:5731)
      Return:  (at pp.c:5732)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5732)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='408U' (at pp.c:5732)
  FuncDef:  (at pp.c:5736)
    Decl: name='Msp430TimerCapComP__6__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:5736)
      FuncDecl: quals=None (at pp.c:5736)
        ParamList:  (at pp.c:5736)
          Decl: name='n', quals=[], storage=[] (at pp.c:5736)
            TypeDecl: declname='n', quals=[] (at pp.c:5736)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Capture__default__captured', quals=[] (at pp.c:5736)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5737)
  FuncDef:  (at pp.c:5741)
    Decl: name='Msp430TimerCapComP__6__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:5741)
      FuncDecl: quals=None (at pp.c:5741)
        ParamList:  (at pp.c:5741)
          Decl: name='time', quals=[], storage=[] (at pp.c:5741)
            TypeDecl: declname='time', quals=[] (at pp.c:5741)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Capture__captured', quals=[] (at pp.c:5741)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5741)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__6__Capture__default__captured' (at pp.c:5743)
        ExprList:  (at pp.c:5743)
          ID: name='time' (at pp.c:5743)
  FuncDef:  (at pp.c:5748)
    Decl: name='Msp430TimerCapComP__6__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:5748)
      FuncDecl: quals=None (at pp.c:5748)
        ParamList:  (at pp.c:5748)
          Decl: name='x', quals=[], storage=[] (at pp.c:5748)
            TypeDecl: declname='x', quals=[] (at pp.c:5748)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__int2CC', quals=[] (at pp.c:5748)
          IdentifierType: names=['Msp430TimerCapComP__6__cc_t'] (at None)
    Compound:  (at pp.c:5750)
      Decl: name='c', quals=[], storage=[] (at pp.c:5759)
        TypeDecl: declname='c', quals=[] (at pp.c:5759)
          Union: name='Msp430TimerCapComP__6____nesc_unnamed4307', packed=False (at pp.c:5752)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:5754)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:5756)
                IdentifierType: names=['Msp430TimerCapComP__6__cc_t'] (at None)
        ExprList:  (at pp.c:5759)
          Assignment: op='=' (at pp.c:5759)
            StructRef: type='.' (at pp.c:5759)
              ID: name='f' (at pp.c:5759)
            ID: name='x' (at pp.c:5759)
      Return:  (at pp.c:5762)
        StructRef: type='.' (at pp.c:5762)
          ID: name='c' (at pp.c:5762)
          ID: name='t' (at pp.c:5762)
  FuncDef:  (at pp.c:5766)
    Decl: name='Msp430TimerCapComP__6__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:5766)
      FuncDecl: quals=None (at pp.c:5766)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Control__getControl', quals=[] (at pp.c:5766)
          IdentifierType: names=['Msp430TimerCapComP__6__cc_t'] (at None)
    Compound:  (at pp.c:5767)
      Return:  (at pp.c:5768)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__6__int2CC' (at pp.c:5768)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:5768)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='392U' (at pp.c:5768)
  FuncDef:  (at pp.c:5772)
    Decl: name='Msp430TimerCapComP__6__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:5772)
      FuncDecl: quals=None (at pp.c:5772)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Event__fired', quals=[] (at pp.c:5772)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5773)
      If:  (at pp.c:5774)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__6__Control__getControl' (at pp.c:5774)
          ID: name='cap' (at pp.c:5774)
        Compound:  (at pp.c:5774)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__6__Capture__captured' (at pp.c:5775)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__6__Capture__getEvent' (at pp.c:5775)
        Compound:  (at pp.c:5777)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__6__Compare__fired' (at pp.c:5779)
  FuncDef:  (at pp.c:5786)
    Decl: name='Msp430TimerCapComP__7__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:5786)
      FuncDecl: quals=None (at pp.c:5786)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Compare__default__fired', quals=[] (at pp.c:5786)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5787)
  FuncDef:  (at pp.c:5791)
    Decl: name='Msp430TimerCapComP__7__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:5791)
      FuncDecl: quals=None (at pp.c:5791)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Compare__fired', quals=[] (at pp.c:5791)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5791)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__7__Compare__default__fired' (at pp.c:5793)
  FuncDef:  (at pp.c:5798)
    Decl: name='Msp430TimerCapComP__7__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:5798)
      FuncDecl: quals=None (at pp.c:5798)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Capture__getEvent', quals=[] (at pp.c:5798)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:5799)
      Return:  (at pp.c:5800)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5800)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='410U' (at pp.c:5800)
  FuncDef:  (at pp.c:5804)
    Decl: name='Msp430TimerCapComP__7__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:5804)
      FuncDecl: quals=None (at pp.c:5804)
        ParamList:  (at pp.c:5804)
          Decl: name='n', quals=[], storage=[] (at pp.c:5804)
            TypeDecl: declname='n', quals=[] (at pp.c:5804)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Capture__default__captured', quals=[] (at pp.c:5804)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5805)
  FuncDef:  (at pp.c:5809)
    Decl: name='Msp430TimerCapComP__7__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:5809)
      FuncDecl: quals=None (at pp.c:5809)
        ParamList:  (at pp.c:5809)
          Decl: name='time', quals=[], storage=[] (at pp.c:5809)
            TypeDecl: declname='time', quals=[] (at pp.c:5809)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Capture__captured', quals=[] (at pp.c:5809)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5809)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__7__Capture__default__captured' (at pp.c:5811)
        ExprList:  (at pp.c:5811)
          ID: name='time' (at pp.c:5811)
  FuncDef:  (at pp.c:5816)
    Decl: name='Msp430TimerCapComP__7__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:5816)
      FuncDecl: quals=None (at pp.c:5816)
        ParamList:  (at pp.c:5816)
          Decl: name='x', quals=[], storage=[] (at pp.c:5816)
            TypeDecl: declname='x', quals=[] (at pp.c:5816)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__int2CC', quals=[] (at pp.c:5816)
          IdentifierType: names=['Msp430TimerCapComP__7__cc_t'] (at None)
    Compound:  (at pp.c:5818)
      Decl: name='c', quals=[], storage=[] (at pp.c:5827)
        TypeDecl: declname='c', quals=[] (at pp.c:5827)
          Union: name='Msp430TimerCapComP__7____nesc_unnamed4308', packed=False (at pp.c:5820)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:5822)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:5824)
                IdentifierType: names=['Msp430TimerCapComP__7__cc_t'] (at None)
        ExprList:  (at pp.c:5827)
          Assignment: op='=' (at pp.c:5827)
            StructRef: type='.' (at pp.c:5827)
              ID: name='f' (at pp.c:5827)
            ID: name='x' (at pp.c:5827)
      Return:  (at pp.c:5830)
        StructRef: type='.' (at pp.c:5830)
          ID: name='c' (at pp.c:5830)
          ID: name='t' (at pp.c:5830)
  FuncDef:  (at pp.c:5834)
    Decl: name='Msp430TimerCapComP__7__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:5834)
      FuncDecl: quals=None (at pp.c:5834)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Control__getControl', quals=[] (at pp.c:5834)
          IdentifierType: names=['Msp430TimerCapComP__7__cc_t'] (at None)
    Compound:  (at pp.c:5835)
      Return:  (at pp.c:5836)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__7__int2CC' (at pp.c:5836)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:5836)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='394U' (at pp.c:5836)
  FuncDef:  (at pp.c:5840)
    Decl: name='Msp430TimerCapComP__7__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:5840)
      FuncDecl: quals=None (at pp.c:5840)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Event__fired', quals=[] (at pp.c:5840)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5841)
      If:  (at pp.c:5842)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__7__Control__getControl' (at pp.c:5842)
          ID: name='cap' (at pp.c:5842)
        Compound:  (at pp.c:5842)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__7__Capture__captured' (at pp.c:5843)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__7__Capture__getEvent' (at pp.c:5843)
        Compound:  (at pp.c:5845)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__7__Compare__fired' (at pp.c:5847)
  FuncDef:  (at pp.c:5854)
    Decl: name='Msp430TimerCapComP__8__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:5854)
      FuncDecl: quals=None (at pp.c:5854)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Compare__default__fired', quals=[] (at pp.c:5854)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5855)
  FuncDef:  (at pp.c:5859)
    Decl: name='Msp430TimerCapComP__8__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:5859)
      FuncDecl: quals=None (at pp.c:5859)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Compare__fired', quals=[] (at pp.c:5859)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5859)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__8__Compare__default__fired' (at pp.c:5861)
  FuncDef:  (at pp.c:5866)
    Decl: name='Msp430TimerCapComP__8__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:5866)
      FuncDecl: quals=None (at pp.c:5866)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Capture__getEvent', quals=[] (at pp.c:5866)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:5867)
      Return:  (at pp.c:5868)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5868)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='412U' (at pp.c:5868)
  FuncDef:  (at pp.c:5872)
    Decl: name='Msp430TimerCapComP__8__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:5872)
      FuncDecl: quals=None (at pp.c:5872)
        ParamList:  (at pp.c:5872)
          Decl: name='n', quals=[], storage=[] (at pp.c:5872)
            TypeDecl: declname='n', quals=[] (at pp.c:5872)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Capture__default__captured', quals=[] (at pp.c:5872)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5873)
  FuncDef:  (at pp.c:5877)
    Decl: name='Msp430TimerCapComP__8__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:5877)
      FuncDecl: quals=None (at pp.c:5877)
        ParamList:  (at pp.c:5877)
          Decl: name='time', quals=[], storage=[] (at pp.c:5877)
            TypeDecl: declname='time', quals=[] (at pp.c:5877)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Capture__captured', quals=[] (at pp.c:5877)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5877)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__8__Capture__default__captured' (at pp.c:5879)
        ExprList:  (at pp.c:5879)
          ID: name='time' (at pp.c:5879)
  FuncDef:  (at pp.c:5884)
    Decl: name='Msp430TimerCapComP__8__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:5884)
      FuncDecl: quals=None (at pp.c:5884)
        ParamList:  (at pp.c:5884)
          Decl: name='x', quals=[], storage=[] (at pp.c:5884)
            TypeDecl: declname='x', quals=[] (at pp.c:5884)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__int2CC', quals=[] (at pp.c:5884)
          IdentifierType: names=['Msp430TimerCapComP__8__cc_t'] (at None)
    Compound:  (at pp.c:5886)
      Decl: name='c', quals=[], storage=[] (at pp.c:5895)
        TypeDecl: declname='c', quals=[] (at pp.c:5895)
          Union: name='Msp430TimerCapComP__8____nesc_unnamed4309', packed=False (at pp.c:5888)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:5890)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:5892)
                IdentifierType: names=['Msp430TimerCapComP__8__cc_t'] (at None)
        ExprList:  (at pp.c:5895)
          Assignment: op='=' (at pp.c:5895)
            StructRef: type='.' (at pp.c:5895)
              ID: name='f' (at pp.c:5895)
            ID: name='x' (at pp.c:5895)
      Return:  (at pp.c:5898)
        StructRef: type='.' (at pp.c:5898)
          ID: name='c' (at pp.c:5898)
          ID: name='t' (at pp.c:5898)
  FuncDef:  (at pp.c:5902)
    Decl: name='Msp430TimerCapComP__8__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:5902)
      FuncDecl: quals=None (at pp.c:5902)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Control__getControl', quals=[] (at pp.c:5902)
          IdentifierType: names=['Msp430TimerCapComP__8__cc_t'] (at None)
    Compound:  (at pp.c:5903)
      Return:  (at pp.c:5904)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__8__int2CC' (at pp.c:5904)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:5904)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='396U' (at pp.c:5904)
  FuncDef:  (at pp.c:5908)
    Decl: name='Msp430TimerCapComP__8__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:5908)
      FuncDecl: quals=None (at pp.c:5908)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Event__fired', quals=[] (at pp.c:5908)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5909)
      If:  (at pp.c:5910)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__8__Control__getControl' (at pp.c:5910)
          ID: name='cap' (at pp.c:5910)
        Compound:  (at pp.c:5910)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__8__Capture__captured' (at pp.c:5911)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__8__Capture__getEvent' (at pp.c:5911)
        Compound:  (at pp.c:5913)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__8__Compare__fired' (at pp.c:5915)
  FuncDef:  (at pp.c:5922)
    Decl: name='Msp430TimerCapComP__9__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:5922)
      FuncDecl: quals=None (at pp.c:5922)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Compare__default__fired', quals=[] (at pp.c:5922)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5923)
  FuncDef:  (at pp.c:5927)
    Decl: name='Msp430TimerCapComP__9__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:5927)
      FuncDecl: quals=None (at pp.c:5927)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Compare__fired', quals=[] (at pp.c:5927)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5927)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__9__Compare__default__fired' (at pp.c:5929)
  FuncDef:  (at pp.c:5934)
    Decl: name='Msp430TimerCapComP__9__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:5934)
      FuncDecl: quals=None (at pp.c:5934)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Capture__getEvent', quals=[] (at pp.c:5934)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:5935)
      Return:  (at pp.c:5936)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5936)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='414U' (at pp.c:5936)
  FuncDef:  (at pp.c:5940)
    Decl: name='Msp430TimerCapComP__9__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:5940)
      FuncDecl: quals=None (at pp.c:5940)
        ParamList:  (at pp.c:5940)
          Decl: name='n', quals=[], storage=[] (at pp.c:5940)
            TypeDecl: declname='n', quals=[] (at pp.c:5940)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Capture__default__captured', quals=[] (at pp.c:5940)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5941)
  FuncDef:  (at pp.c:5945)
    Decl: name='Msp430TimerCapComP__9__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:5945)
      FuncDecl: quals=None (at pp.c:5945)
        ParamList:  (at pp.c:5945)
          Decl: name='time', quals=[], storage=[] (at pp.c:5945)
            TypeDecl: declname='time', quals=[] (at pp.c:5945)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Capture__captured', quals=[] (at pp.c:5945)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5945)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__9__Capture__default__captured' (at pp.c:5947)
        ExprList:  (at pp.c:5947)
          ID: name='time' (at pp.c:5947)
  FuncDef:  (at pp.c:5952)
    Decl: name='Msp430TimerCapComP__9__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:5952)
      FuncDecl: quals=None (at pp.c:5952)
        ParamList:  (at pp.c:5952)
          Decl: name='x', quals=[], storage=[] (at pp.c:5952)
            TypeDecl: declname='x', quals=[] (at pp.c:5952)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__int2CC', quals=[] (at pp.c:5952)
          IdentifierType: names=['Msp430TimerCapComP__9__cc_t'] (at None)
    Compound:  (at pp.c:5954)
      Decl: name='c', quals=[], storage=[] (at pp.c:5963)
        TypeDecl: declname='c', quals=[] (at pp.c:5963)
          Union: name='Msp430TimerCapComP__9____nesc_unnamed4310', packed=False (at pp.c:5956)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:5958)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:5960)
                IdentifierType: names=['Msp430TimerCapComP__9__cc_t'] (at None)
        ExprList:  (at pp.c:5963)
          Assignment: op='=' (at pp.c:5963)
            StructRef: type='.' (at pp.c:5963)
              ID: name='f' (at pp.c:5963)
            ID: name='x' (at pp.c:5963)
      Return:  (at pp.c:5966)
        StructRef: type='.' (at pp.c:5966)
          ID: name='c' (at pp.c:5966)
          ID: name='t' (at pp.c:5966)
  FuncDef:  (at pp.c:5970)
    Decl: name='Msp430TimerCapComP__9__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:5970)
      FuncDecl: quals=None (at pp.c:5970)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Control__getControl', quals=[] (at pp.c:5970)
          IdentifierType: names=['Msp430TimerCapComP__9__cc_t'] (at None)
    Compound:  (at pp.c:5971)
      Return:  (at pp.c:5972)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__9__int2CC' (at pp.c:5972)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:5972)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='398U' (at pp.c:5972)
  FuncDef:  (at pp.c:5976)
    Decl: name='Msp430TimerCapComP__9__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:5976)
      FuncDecl: quals=None (at pp.c:5976)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Event__fired', quals=[] (at pp.c:5976)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5977)
      If:  (at pp.c:5978)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__9__Control__getControl' (at pp.c:5978)
          ID: name='cap' (at pp.c:5978)
        Compound:  (at pp.c:5978)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__9__Capture__captured' (at pp.c:5979)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__9__Capture__getEvent' (at pp.c:5979)
        Compound:  (at pp.c:5981)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__9__Compare__fired' (at pp.c:5983)
  FuncDef:  (at pp.c:5988)
    Decl: name='Msp430TimerP__1__VectorTimerX1__fired', quals=[], storage=['inline', 'static'] (at pp.c:5988)
      FuncDecl: quals=None (at pp.c:5988)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__VectorTimerX1__fired', quals=[] (at pp.c:5988)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5989)
      Decl: name='n', quals=[], storage=[] (at pp.c:5990)
        TypeDecl: declname='n', quals=[] (at pp.c:5990)
          IdentifierType: names=['uint8_t'] (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:5990)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='286U' (at pp.c:5990)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__1__Event__fired' (at pp.c:5993)
        ExprList:  (at pp.c:5993)
          BinaryOp: op='>>' (at pp.c:5993)
            ID: name='n' (at pp.c:5993)
            Constant: type='int', value='1' (at pp.c:5993)
  FuncDef:  (at pp.c:5997)
    Decl: name='Msp430TimerCommonP__VectorTimerB1__fired', quals=[], storage=['static', 'inline'] (at pp.c:5997)
      FuncDecl: quals=None (at pp.c:5997)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCommonP__VectorTimerB1__fired', quals=[] (at pp.c:5997)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:5997)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__1__VectorTimerX1__fired' (at pp.c:5999)
  FuncDef:  (at pp.c:6004)
    Decl: name='SchedulerBasicP__Scheduler__init', quals=[], storage=['inline', 'static'] (at pp.c:6004)
      FuncDecl: quals=None (at pp.c:6004)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SchedulerBasicP__Scheduler__init', quals=[] (at pp.c:6004)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6005)
      Compound:  (at pp.c:6007)
        FuncCall:  (at None)
          ID: name='memset' (at pp.c:6008)
          ExprList:  (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                PtrDecl: quals=[] (at pp.c:6008)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['void'] (at None)
              ID: name='SchedulerBasicP__m_next' (at pp.c:6008)
            ID: name='SchedulerBasicP__NO_TASK' (at pp.c:6008)
            UnaryOp: op='sizeof' (at pp.c:6008)
              ID: name='SchedulerBasicP__m_next' (at pp.c:6008)
        Assignment: op='=' (at pp.c:6009)
          ID: name='SchedulerBasicP__m_head' (at pp.c:6009)
          ID: name='SchedulerBasicP__NO_TASK' (at pp.c:6009)
        Assignment: op='=' (at pp.c:6010)
          ID: name='SchedulerBasicP__m_tail' (at pp.c:6010)
          ID: name='SchedulerBasicP__NO_TASK' (at pp.c:6010)
  FuncDef:  (at pp.c:6015)
    Decl: name='RealMainP__Scheduler__init', quals=[], storage=['static', 'inline'] (at pp.c:6015)
      FuncDecl: quals=None (at pp.c:6015)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__Scheduler__init', quals=[] (at pp.c:6015)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6015)
      FuncCall:  (at None)
        ID: name='SchedulerBasicP__Scheduler__init' (at pp.c:6017)
  FuncDef:  (at pp.c:6022)
    Decl: name='Msp430GpioC__2__HplGeneralIO__set', quals=[], storage=['static', 'inline'] (at pp.c:6022)
      FuncDecl: quals=None (at pp.c:6022)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__2__HplGeneralIO__set', quals=[] (at pp.c:6022)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6022)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__31__IO__set' (at pp.c:6024)
  FuncDef:  (at pp.c:6029)
    Decl: name='Msp430GpioC__2__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:6029)
      FuncDecl: quals=None (at pp.c:6029)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__2__GeneralIO__set', quals=[] (at pp.c:6029)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6031)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__2__HplGeneralIO__set' (at pp.c:6033)
  FuncDef:  (at pp.c:6037)
    Decl: name='LedsP__Led2__set', quals=[], storage=['static', 'inline'] (at pp.c:6037)
      FuncDecl: quals=None (at pp.c:6037)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led2__set', quals=[] (at pp.c:6037)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6037)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__2__GeneralIO__set' (at pp.c:6039)
  FuncDef:  (at pp.c:6044)
    Decl: name='Msp430GpioC__1__HplGeneralIO__set', quals=[], storage=['static', 'inline'] (at pp.c:6044)
      FuncDecl: quals=None (at pp.c:6044)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__set', quals=[] (at pp.c:6044)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6044)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__27__IO__set' (at pp.c:6046)
  FuncDef:  (at pp.c:6051)
    Decl: name='Msp430GpioC__1__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:6051)
      FuncDecl: quals=None (at pp.c:6051)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__GeneralIO__set', quals=[] (at pp.c:6051)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6053)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__HplGeneralIO__set' (at pp.c:6055)
  FuncDef:  (at pp.c:6059)
    Decl: name='LedsP__Led1__set', quals=[], storage=['static', 'inline'] (at pp.c:6059)
      FuncDecl: quals=None (at pp.c:6059)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led1__set', quals=[] (at pp.c:6059)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6059)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__GeneralIO__set' (at pp.c:6061)
  FuncDef:  (at pp.c:6066)
    Decl: name='Msp430GpioC__0__HplGeneralIO__set', quals=[], storage=['static', 'inline'] (at pp.c:6066)
      FuncDecl: quals=None (at pp.c:6066)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__set', quals=[] (at pp.c:6066)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6066)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__24__IO__set' (at pp.c:6068)
  FuncDef:  (at pp.c:6073)
    Decl: name='Msp430GpioC__0__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:6073)
      FuncDecl: quals=None (at pp.c:6073)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__GeneralIO__set', quals=[] (at pp.c:6073)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6075)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__0__HplGeneralIO__set' (at pp.c:6077)
  FuncDef:  (at pp.c:6081)
    Decl: name='LedsP__Led0__set', quals=[], storage=['static', 'inline'] (at pp.c:6081)
      FuncDecl: quals=None (at pp.c:6081)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led0__set', quals=[] (at pp.c:6081)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6081)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__0__GeneralIO__set' (at pp.c:6083)
  FuncDef:  (at pp.c:6088)
    Decl: name='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:6088)
      FuncDecl: quals=None (at pp.c:6088)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[] (at pp.c:6088)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6090)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:6093)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='30U' (at pp.c:6093)
        BinaryOp: op='<<' (at pp.c:6093)
          Constant: type='int', value='0x01' (at pp.c:6093)
          Constant: type='int', value='7' (at pp.c:6093)
  FuncDef:  (at pp.c:6097)
    Decl: name='Msp430GpioC__2__HplGeneralIO__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:6097)
      FuncDecl: quals=None (at pp.c:6097)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__2__HplGeneralIO__makeOutput', quals=[] (at pp.c:6097)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6097)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__31__IO__makeOutput' (at pp.c:6099)
  FuncDef:  (at pp.c:6104)
    Decl: name='Msp430GpioC__2__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:6104)
      FuncDecl: quals=None (at pp.c:6104)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__2__GeneralIO__makeOutput', quals=[] (at pp.c:6104)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6106)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__2__HplGeneralIO__makeOutput' (at pp.c:6108)
  FuncDef:  (at pp.c:6112)
    Decl: name='LedsP__Led2__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:6112)
      FuncDecl: quals=None (at pp.c:6112)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led2__makeOutput', quals=[] (at pp.c:6112)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6112)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__2__GeneralIO__makeOutput' (at pp.c:6114)
  FuncDef:  (at pp.c:6119)
    Decl: name='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:6119)
      FuncDecl: quals=None (at pp.c:6119)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[] (at pp.c:6119)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6121)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:6124)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='30U' (at pp.c:6124)
        BinaryOp: op='<<' (at pp.c:6124)
          Constant: type='int', value='0x01' (at pp.c:6124)
          Constant: type='int', value='3' (at pp.c:6124)
  FuncDef:  (at pp.c:6128)
    Decl: name='Msp430GpioC__1__HplGeneralIO__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:6128)
      FuncDecl: quals=None (at pp.c:6128)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__makeOutput', quals=[] (at pp.c:6128)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6128)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__27__IO__makeOutput' (at pp.c:6130)
  FuncDef:  (at pp.c:6135)
    Decl: name='Msp430GpioC__1__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:6135)
      FuncDecl: quals=None (at pp.c:6135)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__GeneralIO__makeOutput', quals=[] (at pp.c:6135)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6137)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__HplGeneralIO__makeOutput' (at pp.c:6139)
  FuncDef:  (at pp.c:6143)
    Decl: name='LedsP__Led1__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:6143)
      FuncDecl: quals=None (at pp.c:6143)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led1__makeOutput', quals=[] (at pp.c:6143)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6143)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__GeneralIO__makeOutput' (at pp.c:6145)
  FuncDef:  (at pp.c:6150)
    Decl: name='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:6150)
      FuncDecl: quals=None (at pp.c:6150)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[] (at pp.c:6150)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6152)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:6155)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='30U' (at pp.c:6155)
        BinaryOp: op='<<' (at pp.c:6155)
          Constant: type='int', value='0x01' (at pp.c:6155)
          Constant: type='int', value='0' (at pp.c:6155)
  FuncDef:  (at pp.c:6159)
    Decl: name='Msp430GpioC__0__HplGeneralIO__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:6159)
      FuncDecl: quals=None (at pp.c:6159)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__makeOutput', quals=[] (at pp.c:6159)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6159)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__24__IO__makeOutput' (at pp.c:6161)
  FuncDef:  (at pp.c:6166)
    Decl: name='Msp430GpioC__0__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:6166)
      FuncDecl: quals=None (at pp.c:6166)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__GeneralIO__makeOutput', quals=[] (at pp.c:6166)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6168)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__0__HplGeneralIO__makeOutput' (at pp.c:6170)
  FuncDef:  (at pp.c:6174)
    Decl: name='LedsP__Led0__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:6174)
      FuncDecl: quals=None (at pp.c:6174)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led0__makeOutput', quals=[] (at pp.c:6174)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6174)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__0__GeneralIO__makeOutput' (at pp.c:6176)
  FuncDef:  (at pp.c:6181)
    Decl: name='LedsP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:6181)
      FuncDecl: quals=None (at pp.c:6181)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Init__init', quals=[] (at pp.c:6181)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:6183)
      Compound:  (at pp.c:6186)
        FuncCall:  (at None)
          ID: name='LedsP__Led0__makeOutput' (at pp.c:6188)
        FuncCall:  (at None)
          ID: name='LedsP__Led1__makeOutput' (at pp.c:6189)
        FuncCall:  (at None)
          ID: name='LedsP__Led2__makeOutput' (at pp.c:6190)
        FuncCall:  (at None)
          ID: name='LedsP__Led0__set' (at pp.c:6191)
        FuncCall:  (at None)
          ID: name='LedsP__Led1__set' (at pp.c:6192)
        FuncCall:  (at None)
          ID: name='LedsP__Led2__set' (at pp.c:6193)
      Return:  (at pp.c:6195)
        ID: name='SUCCESS' (at pp.c:6195)
  FuncDef:  (at pp.c:6199)
    Decl: name='PlatformP__LedsInit__init', quals=[], storage=['static', 'inline'] (at pp.c:6199)
      FuncDecl: quals=None (at pp.c:6199)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='PlatformP__LedsInit__init', quals=[] (at pp.c:6199)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:6199)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:6201)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:6201)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:6205)
        ID: name='__nesc_result' (at pp.c:6205)
        FuncCall:  (at None)
          ID: name='LedsP__Init__init' (at pp.c:6205)
      Return:  (at pp.c:6209)
        ID: name='__nesc_result' (at pp.c:6209)
  FuncDef:  (at pp.c:6214)
    Decl: name='MotePlatformC__SubInit__default__init', quals=[], storage=['inline', 'static'] (at pp.c:6214)
      FuncDecl: quals=None (at pp.c:6214)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='MotePlatformC__SubInit__default__init', quals=[] (at pp.c:6214)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:6216)
      Return:  (at pp.c:6218)
        ID: name='SUCCESS' (at pp.c:6218)
  FuncDef:  (at pp.c:6222)
    Decl: name='MotePlatformC__SubInit__init', quals=[], storage=['static', 'inline'] (at pp.c:6222)
      FuncDecl: quals=None (at pp.c:6222)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='MotePlatformC__SubInit__init', quals=[] (at pp.c:6222)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:6222)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:6224)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:6224)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:6228)
        ID: name='__nesc_result' (at pp.c:6228)
        FuncCall:  (at None)
          ID: name='MotePlatformC__SubInit__default__init' (at pp.c:6228)
      Return:  (at pp.c:6232)
        ID: name='__nesc_result' (at pp.c:6232)
  FuncDef:  (at pp.c:6237)
    Decl: name='MotePlatformC__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:6237)
      FuncDecl: quals=None (at pp.c:6237)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='MotePlatformC__Init__init', quals=[] (at pp.c:6237)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:6239)
      Compound:  (at pp.c:6242)
        Assignment: op='=' (at pp.c:6243)
          ID: name='P1SEL' (at pp.c:6243)
          Constant: type='int', value='0' (at pp.c:6243)
        Assignment: op='=' (at pp.c:6244)
          ID: name='P2SEL' (at pp.c:6244)
          Constant: type='int', value='0' (at pp.c:6244)
        Assignment: op='=' (at pp.c:6245)
          ID: name='P3SEL' (at pp.c:6245)
          Constant: type='int', value='0' (at pp.c:6245)
        Assignment: op='=' (at pp.c:6246)
          ID: name='P4SEL' (at pp.c:6246)
          Constant: type='int', value='0' (at pp.c:6246)
        Assignment: op='=' (at pp.c:6247)
          ID: name='P5SEL' (at pp.c:6247)
          Constant: type='int', value='0' (at pp.c:6247)
        Assignment: op='=' (at pp.c:6248)
          ID: name='P6SEL' (at pp.c:6248)
          Constant: type='int', value='0' (at pp.c:6248)
        Assignment: op='=' (at pp.c:6250)
          ID: name='P1OUT' (at pp.c:6250)
          Constant: type='int', value='0x00' (at pp.c:6250)
        Assignment: op='=' (at pp.c:6251)
          ID: name='P1DIR' (at pp.c:6251)
          Constant: type='int', value='0xe0' (at pp.c:6251)
        Assignment: op='=' (at pp.c:6253)
          ID: name='P2OUT' (at pp.c:6253)
          Constant: type='int', value='0x30' (at pp.c:6253)
        Assignment: op='=' (at pp.c:6254)
          ID: name='P2DIR' (at pp.c:6254)
          Constant: type='int', value='0x7b' (at pp.c:6254)
        Assignment: op='=' (at pp.c:6256)
          ID: name='P3OUT' (at pp.c:6256)
          Constant: type='int', value='0x00' (at pp.c:6256)
        Assignment: op='=' (at pp.c:6257)
          ID: name='P3DIR' (at pp.c:6257)
          Constant: type='int', value='0xf1' (at pp.c:6257)
        Assignment: op='=' (at pp.c:6259)
          ID: name='P4OUT' (at pp.c:6259)
          Constant: type='int', value='0xdd' (at pp.c:6259)
        Assignment: op='=' (at pp.c:6260)
          ID: name='P4DIR' (at pp.c:6260)
          Constant: type='int', value='0xfd' (at pp.c:6260)
        Assignment: op='=' (at pp.c:6262)
          ID: name='P5OUT' (at pp.c:6262)
          Constant: type='int', value='0xff' (at pp.c:6262)
        Assignment: op='=' (at pp.c:6263)
          ID: name='P5DIR' (at pp.c:6263)
          Constant: type='int', value='0xff' (at pp.c:6263)
        Assignment: op='=' (at pp.c:6265)
          ID: name='P6OUT' (at pp.c:6265)
          Constant: type='int', value='0x00' (at pp.c:6265)
        Assignment: op='=' (at pp.c:6266)
          ID: name='P6DIR' (at pp.c:6266)
          Constant: type='int', value='0xff' (at pp.c:6266)
        Assignment: op='=' (at pp.c:6268)
          ID: name='P1IE' (at pp.c:6268)
          Constant: type='int', value='0' (at pp.c:6268)
        Assignment: op='=' (at pp.c:6269)
          ID: name='P2IE' (at pp.c:6269)
          Constant: type='int', value='0' (at pp.c:6269)
      Return:  (at pp.c:6276)
        FuncCall:  (at None)
          ID: name='MotePlatformC__SubInit__init' (at pp.c:6276)
  FuncDef:  (at pp.c:6280)
    Decl: name='PlatformP__MoteInit__init', quals=[], storage=['static', 'inline'] (at pp.c:6280)
      FuncDecl: quals=None (at pp.c:6280)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='PlatformP__MoteInit__init', quals=[] (at pp.c:6280)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:6280)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:6282)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:6282)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:6286)
        ID: name='__nesc_result' (at pp.c:6286)
        FuncCall:  (at None)
          ID: name='MotePlatformC__Init__init' (at pp.c:6286)
      Return:  (at pp.c:6290)
        ID: name='__nesc_result' (at pp.c:6290)
  FuncDef:  (at pp.c:6295)
    Decl: name='Msp430ClockP__startTimerB', quals=[], storage=['inline', 'static'] (at pp.c:6295)
      FuncDecl: quals=None (at pp.c:6295)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__startTimerB', quals=[] (at pp.c:6295)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6296)
      Assignment: op='=' (at pp.c:6298)
        ID: name='Msp430ClockP__TBCTL' (at pp.c:6298)
        BinaryOp: op='|' (at pp.c:6298)
          Constant: type='int', value='0x0020' (at pp.c:6298)
          BinaryOp: op='&' (at pp.c:6298)
            ID: name='Msp430ClockP__TBCTL' (at pp.c:6298)
            UnaryOp: op='~' (at pp.c:6298)
              BinaryOp: op='|' (at pp.c:6298)
                Constant: type='int', value='0x0020' (at pp.c:6298)
                Constant: type='int', value='0x0010' (at pp.c:6298)
  FuncDef:  (at pp.c:6302)
    Decl: name='Msp430ClockP__startTimerA', quals=[], storage=['inline', 'static'] (at pp.c:6302)
      FuncDecl: quals=None (at pp.c:6302)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__startTimerA', quals=[] (at pp.c:6302)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6303)
      Assignment: op='=' (at pp.c:6305)
        ID: name='Msp430ClockP__TA0CTL' (at pp.c:6305)
        BinaryOp: op='|' (at pp.c:6305)
          Constant: type='int', value='0x0020' (at pp.c:6305)
          BinaryOp: op='&' (at pp.c:6305)
            ID: name='Msp430ClockP__TA0CTL' (at pp.c:6305)
            UnaryOp: op='~' (at pp.c:6305)
              BinaryOp: op='|' (at pp.c:6305)
                Constant: type='int', value='0x0020' (at pp.c:6305)
                Constant: type='int', value='0x0010' (at pp.c:6305)
  FuncDef:  (at pp.c:6309)
    Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[], storage=['inline', 'static'] (at pp.c:6309)
      FuncDecl: quals=None (at pp.c:6309)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[] (at pp.c:6309)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6310)
      Assignment: op='=' (at pp.c:6311)
        ID: name='TBR' (at pp.c:6311)
        Constant: type='int', value='0' (at pp.c:6311)
      Assignment: op='=' (at pp.c:6321)
        ID: name='Msp430ClockP__TBCTL' (at pp.c:6321)
        BinaryOp: op='|' (at pp.c:6321)
          Constant: type='int', value='0x0100' (at pp.c:6321)
          Constant: type='int', value='0x0002' (at pp.c:6321)
  FuncDef:  (at pp.c:6325)
    Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[], storage=['inline', 'static'] (at pp.c:6325)
      FuncDecl: quals=None (at pp.c:6325)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[] (at pp.c:6325)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6326)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerB' (at pp.c:6327)
  FuncDef:  (at pp.c:6331)
    Decl: name='Msp430ClockP__Msp430ClockInit__initTimerB', quals=[], storage=['static', 'inline'] (at pp.c:6331)
      FuncDecl: quals=None (at pp.c:6331)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initTimerB', quals=[] (at pp.c:6331)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6331)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__default__initTimerB' (at pp.c:6333)
  FuncDef:  (at pp.c:6338)
    Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[], storage=['inline', 'static'] (at pp.c:6338)
      FuncDecl: quals=None (at pp.c:6338)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[] (at pp.c:6338)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6339)
      Assignment: op='=' (at pp.c:6340)
        ID: name='TA0R' (at pp.c:6340)
        Constant: type='int', value='0' (at pp.c:6340)
      Assignment: op='=' (at pp.c:6350)
        ID: name='Msp430ClockP__TA0CTL' (at pp.c:6350)
        BinaryOp: op='|' (at pp.c:6350)
          Constant: type='int', value='0x0200' (at pp.c:6350)
          Constant: type='int', value='0x0002' (at pp.c:6350)
  FuncDef:  (at pp.c:6354)
    Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[], storage=['inline', 'static'] (at pp.c:6354)
      FuncDecl: quals=None (at pp.c:6354)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[] (at pp.c:6354)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6355)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerA' (at pp.c:6356)
  FuncDef:  (at pp.c:6360)
    Decl: name='Msp430ClockP__Msp430ClockInit__initTimerA', quals=[], storage=['static', 'inline'] (at pp.c:6360)
      FuncDecl: quals=None (at pp.c:6360)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initTimerA', quals=[] (at pp.c:6360)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6360)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__default__initTimerA' (at pp.c:6362)
  FuncDef:  (at pp.c:6367)
    Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[], storage=['inline', 'static'] (at pp.c:6367)
      FuncDecl: quals=None (at pp.c:6367)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[] (at pp.c:6367)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6368)
      Assignment: op='=' (at pp.c:6374)
        ID: name='BCSCTL1' (at pp.c:6374)
        BinaryOp: op='|' (at pp.c:6374)
          Constant: type='int', value='0x80' (at pp.c:6374)
          BinaryOp: op='&' (at pp.c:6374)
            ID: name='BCSCTL1' (at pp.c:6374)
            BinaryOp: op='|' (at pp.c:6374)
              BinaryOp: op='|' (at pp.c:6374)
                Constant: type='int', value='0x04' (at pp.c:6374)
                Constant: type='int', value='0x02' (at pp.c:6374)
              Constant: type='int', value='0x01' (at pp.c:6374)
      Assignment: op='=' (at pp.c:6382)
        ID: name='BCSCTL2' (at pp.c:6382)
        Constant: type='int', value='0x04' (at pp.c:6382)
      Assignment: op='&=' (at pp.c:6385)
        ID: name='Msp430ClockP__IE1' (at pp.c:6385)
        UnaryOp: op='~' (at pp.c:6385)
          BinaryOp: op='<<' (at pp.c:6385)
            Constant: type='int', value='1' (at pp.c:6385)
            Constant: type='int', value='1' (at pp.c:6385)
  FuncDef:  (at pp.c:6389)
    Decl: name='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[], storage=['inline', 'static'] (at pp.c:6389)
      FuncDecl: quals=None (at pp.c:6389)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[] (at pp.c:6389)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6390)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__defaultInitClocks' (at pp.c:6391)
  FuncDef:  (at pp.c:6395)
    Decl: name='Msp430ClockP__Msp430ClockInit__initClocks', quals=[], storage=['static', 'inline'] (at pp.c:6395)
      FuncDecl: quals=None (at pp.c:6395)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initClocks', quals=[] (at pp.c:6395)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6395)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__default__initClocks' (at pp.c:6397)
  FuncDef:  (at pp.c:6402)
    Decl: name='Msp430ClockP__test_calib_busywait_delta', quals=[], storage=['inline', 'static'] (at pp.c:6402)
      FuncDecl: quals=None (at pp.c:6402)
        ParamList:  (at pp.c:6402)
          Decl: name='calib', quals=[], storage=[] (at pp.c:6402)
            TypeDecl: declname='calib', quals=[] (at pp.c:6402)
              IdentifierType: names=['int'] (at None)
        TypeDecl: declname='Msp430ClockP__test_calib_busywait_delta', quals=[] (at pp.c:6402)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:6403)
      Decl: name='aclk_count', quals=[], storage=[] (at pp.c:6404)
        TypeDecl: declname='aclk_count', quals=[] (at pp.c:6404)
          IdentifierType: names=['int8_t'] (at None)
        Constant: type='int', value='2' (at pp.c:6404)
      Decl: name='dco_prev', quals=[], storage=[] (at pp.c:6405)
        TypeDecl: declname='dco_prev', quals=[] (at pp.c:6405)
          IdentifierType: names=['uint16_t'] (at None)
        Constant: type='int', value='0' (at pp.c:6405)
      Decl: name='dco_curr', quals=[], storage=[] (at pp.c:6406)
        TypeDecl: declname='dco_curr', quals=[] (at pp.c:6406)
          IdentifierType: names=['uint16_t'] (at None)
        Constant: type='int', value='0' (at pp.c:6406)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__set_dco_calib' (at pp.c:6408)
        ExprList:  (at pp.c:6408)
          ID: name='calib' (at pp.c:6408)
      While:  (at pp.c:6410)
        BinaryOp: op='>' (at pp.c:6410)
          UnaryOp: op='p--' (at pp.c:6410)
            ID: name='aclk_count' (at pp.c:6410)
          Constant: type='int', value='0' (at pp.c:6410)
        Compound:  (at pp.c:6411)
          Assignment: op='=' (at pp.c:6412)
            ID: name='TBCCR0' (at pp.c:6412)
            BinaryOp: op='+' (at pp.c:6412)
              ID: name='TBR' (at pp.c:6412)
              ID: name='Msp430ClockP__ACLK_CALIB_PERIOD' (at pp.c:6412)
          Assignment: op='&=' (at pp.c:6413)
            ID: name='TBCCTL0' (at pp.c:6413)
            UnaryOp: op='~' (at pp.c:6413)
              Constant: type='int', value='0x0001' (at pp.c:6413)
          While:  (at pp.c:6414)
            BinaryOp: op='==' (at pp.c:6414)
              BinaryOp: op='&' (at pp.c:6414)
                ID: name='TBCCTL0' (at pp.c:6414)
                Constant: type='int', value='0x0001' (at pp.c:6414)
              Constant: type='int', value='0' (at pp.c:6414)
          Assignment: op='=' (at pp.c:6415)
            ID: name='dco_prev' (at pp.c:6415)
            ID: name='dco_curr' (at pp.c:6415)
          Assignment: op='=' (at pp.c:6416)
            ID: name='dco_curr' (at pp.c:6416)
            ID: name='TA0R' (at pp.c:6416)
      Return:  (at pp.c:6419)
        BinaryOp: op='-' (at pp.c:6419)
          ID: name='dco_curr' (at pp.c:6419)
          ID: name='dco_prev' (at pp.c:6419)
  FuncDef:  (at pp.c:6425)
    Decl: name='Msp430ClockP__busyCalibrateDco', quals=[], storage=['inline', 'static'] (at pp.c:6425)
      FuncDecl: quals=None (at pp.c:6425)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__busyCalibrateDco', quals=[] (at pp.c:6425)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6426)
      Decl: name='calib', quals=[], storage=[] (at pp.c:6428)
        TypeDecl: declname='calib', quals=[] (at pp.c:6428)
          IdentifierType: names=['int'] (at None)
      Decl: name='step', quals=[], storage=[] (at pp.c:6429)
        TypeDecl: declname='step', quals=[] (at pp.c:6429)
          IdentifierType: names=['int'] (at None)
      For:  (at pp.c:6436)
        ExprList:  (at pp.c:6436)
          Assignment: op='=' (at pp.c:6436)
            ID: name='calib' (at pp.c:6436)
            Constant: type='int', value='0' (at pp.c:6436)
          Assignment: op='=' (at pp.c:6436)
            ID: name='step' (at pp.c:6436)
            Constant: type='int', value='0x800' (at pp.c:6436)
        BinaryOp: op='!=' (at pp.c:6436)
          ID: name='step' (at pp.c:6436)
          Constant: type='int', value='0' (at pp.c:6436)
        Assignment: op='>>=' (at pp.c:6436)
          ID: name='step' (at pp.c:6436)
          Constant: type='int', value='1' (at pp.c:6436)
        Compound:  (at pp.c:6437)
          If:  (at pp.c:6439)
            BinaryOp: op='<=' (at None)
              FuncCall:  (at None)
                ID: name='Msp430ClockP__test_calib_busywait_delta' (at pp.c:6439)
                ExprList:  (at pp.c:6439)
                  BinaryOp: op='|' (at pp.c:6439)
                    ID: name='calib' (at pp.c:6439)
                    ID: name='step' (at pp.c:6439)
              ID: name='Msp430ClockP__TARGET_DCO_DELTA' (at pp.c:6439)
            Compound:  (at pp.c:6439)
              Assignment: op='|=' (at pp.c:6440)
                ID: name='calib' (at pp.c:6440)
                ID: name='step' (at pp.c:6440)
      If:  (at pp.c:6444)
        BinaryOp: op='==' (at pp.c:6444)
          BinaryOp: op='&' (at pp.c:6444)
            ID: name='calib' (at pp.c:6444)
            Constant: type='int', value='0x0e0' (at pp.c:6444)
          Constant: type='int', value='0x0e0' (at pp.c:6444)
        Compound:  (at pp.c:6444)
          Assignment: op='&=' (at pp.c:6445)
            ID: name='calib' (at pp.c:6445)
            UnaryOp: op='~' (at pp.c:6445)
              Constant: type='int', value='0x01f' (at pp.c:6445)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__set_dco_calib' (at pp.c:6447)
        ExprList:  (at pp.c:6447)
          ID: name='calib' (at pp.c:6447)
  FuncDef:  (at pp.c:6451)
    Decl: name='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[], storage=['inline', 'static'] (at pp.c:6451)
      FuncDecl: quals=None (at pp.c:6451)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[] (at pp.c:6451)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6452)
      Assignment: op='=' (at pp.c:6456)
        ID: name='Msp430ClockP__TA0CTL' (at pp.c:6456)
        BinaryOp: op='|' (at pp.c:6456)
          Constant: type='int', value='0x0200' (at pp.c:6456)
          Constant: type='int', value='0x0020' (at pp.c:6456)
      Assignment: op='=' (at pp.c:6457)
        ID: name='Msp430ClockP__TBCTL' (at pp.c:6457)
        BinaryOp: op='|' (at pp.c:6457)
          Constant: type='int', value='0x0100' (at pp.c:6457)
          Constant: type='int', value='0x0020' (at pp.c:6457)
      Assignment: op='=' (at pp.c:6458)
        ID: name='BCSCTL1' (at pp.c:6458)
        BinaryOp: op='|' (at pp.c:6458)
          Constant: type='int', value='0x80' (at pp.c:6458)
          Constant: type='int', value='0x04' (at pp.c:6458)
      Assignment: op='=' (at pp.c:6459)
        ID: name='BCSCTL2' (at pp.c:6459)
        Constant: type='int', value='0' (at pp.c:6459)
      Assignment: op='=' (at pp.c:6460)
        ID: name='TBCCTL0' (at pp.c:6460)
        Constant: type='int', value='0x4000' (at pp.c:6460)
  FuncDef:  (at pp.c:6464)
    Decl: name='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[], storage=['inline', 'static'] (at pp.c:6464)
      FuncDecl: quals=None (at pp.c:6464)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[] (at pp.c:6464)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6465)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate' (at pp.c:6466)
  FuncDef:  (at pp.c:6470)
    Decl: name='Msp430ClockP__Msp430ClockInit__setupDcoCalibrate', quals=[], storage=['static', 'inline'] (at pp.c:6470)
      FuncDecl: quals=None (at pp.c:6470)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__setupDcoCalibrate', quals=[] (at pp.c:6470)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6470)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate' (at pp.c:6472)
  FuncDef:  (at pp.c:6477)
    Decl: name='Msp430ClockP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:6477)
      FuncDecl: quals=None (at pp.c:6477)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Init__init', quals=[] (at pp.c:6477)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:6478)
      Assignment: op='=' (at pp.c:6480)
        ID: name='Msp430ClockP__TA0CTL' (at pp.c:6480)
        Constant: type='int', value='0x0004' (at pp.c:6480)
      Assignment: op='=' (at pp.c:6481)
        ID: name='Msp430ClockP__TA0IV' (at pp.c:6481)
        Constant: type='int', value='0' (at pp.c:6481)
      Assignment: op='=' (at pp.c:6482)
        ID: name='Msp430ClockP__TBCTL' (at pp.c:6482)
        Constant: type='int', value='0x0004' (at pp.c:6482)
      Assignment: op='=' (at pp.c:6483)
        ID: name='Msp430ClockP__TBIV' (at pp.c:6483)
        Constant: type='int', value='0' (at pp.c:6483)
      Compound:  (at pp.c:6486)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__Msp430ClockInit__setupDcoCalibrate' (at pp.c:6487)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__busyCalibrateDco' (at pp.c:6488)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__Msp430ClockInit__initClocks' (at pp.c:6489)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__Msp430ClockInit__initTimerA' (at pp.c:6490)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__Msp430ClockInit__initTimerB' (at pp.c:6491)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__startTimerA' (at pp.c:6492)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__startTimerB' (at pp.c:6493)
      Return:  (at pp.c:6496)
        ID: name='SUCCESS' (at pp.c:6496)
  FuncDef:  (at pp.c:6500)
    Decl: name='PlatformP__MoteClockInit__init', quals=[], storage=['static', 'inline'] (at pp.c:6500)
      FuncDecl: quals=None (at pp.c:6500)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='PlatformP__MoteClockInit__init', quals=[] (at pp.c:6500)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:6500)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:6502)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:6502)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:6506)
        ID: name='__nesc_result' (at pp.c:6506)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__Init__init' (at pp.c:6506)
      Return:  (at pp.c:6510)
        ID: name='__nesc_result' (at pp.c:6510)
  FuncDef:  (at pp.c:6515)
    Decl: name='PlatformP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:6515)
      FuncDecl: quals=None (at pp.c:6515)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='PlatformP__Init__init', quals=[] (at pp.c:6515)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:6517)
      FuncCall:  (at None)
        ID: name='PlatformP__MoteClockInit__init' (at pp.c:6518)
      FuncCall:  (at None)
        ID: name='PlatformP__MoteInit__init' (at pp.c:6519)
      FuncCall:  (at None)
        ID: name='PlatformP__LedsInit__init' (at pp.c:6520)
      Return:  (at pp.c:6521)
        ID: name='SUCCESS' (at pp.c:6521)
  FuncDef:  (at pp.c:6525)
    Decl: name='RealMainP__PlatformInit__init', quals=[], storage=['static', 'inline'] (at pp.c:6525)
      FuncDecl: quals=None (at pp.c:6525)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__PlatformInit__init', quals=[] (at pp.c:6525)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:6525)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:6527)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:6527)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:6531)
        ID: name='__nesc_result' (at pp.c:6531)
        FuncCall:  (at None)
          ID: name='PlatformP__Init__init' (at pp.c:6531)
      Return:  (at pp.c:6535)
        ID: name='__nesc_result' (at pp.c:6535)
  FuncDef:  (at pp.c:6540)
    Decl: name='RealMainP__Scheduler__runNextTask', quals=[], storage=['static', 'inline'] (at pp.c:6540)
      FuncDecl: quals=None (at pp.c:6540)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__Scheduler__runNextTask', quals=[] (at pp.c:6540)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:6540)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:6542)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:6542)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:6546)
        ID: name='__nesc_result' (at pp.c:6546)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__Scheduler__runNextTask' (at pp.c:6546)
      Return:  (at pp.c:6550)
        ID: name='__nesc_result' (at pp.c:6550)
  FuncDef:  (at pp.c:6555)
    Decl: name='ArbitratedReadStreamC__0__ReadStream__default__bufferDone', quals=[], storage=['inline', 'static'] (at pp.c:6555)
      FuncDecl: quals=None (at pp.c:6555)
        ParamList:  (at pp.c:6555)
          Decl: name='client', quals=[], storage=[] (at pp.c:6555)
            TypeDecl: declname='client', quals=[] (at pp.c:6555)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:6555)
            TypeDecl: declname='result', quals=[] (at pp.c:6555)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:6555)
            PtrDecl: quals=[] (at pp.c:6555)
              TypeDecl: declname='buf', quals=[] (at pp.c:6555)
                IdentifierType: names=['ArbitratedReadStreamC__0__val_t'] (at None)
          Decl: name='count', quals=[], storage=[] (at pp.c:6555)
            TypeDecl: declname='count', quals=[] (at pp.c:6555)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__default__bufferDone', quals=[] (at pp.c:6555)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6556)
  FuncDef:  (at pp.c:6560)
    Decl: name='ArbitratedReadStreamC__0__ReadStream__bufferDone', quals=[], storage=['static', 'inline'] (at pp.c:6560)
      FuncDecl: quals=None (at pp.c:6560)
        ParamList:  (at pp.c:6560)
          Decl: name='arg_0x101ccb020', quals=[], storage=[] (at pp.c:6560)
            TypeDecl: declname='arg_0x101ccb020', quals=[] (at pp.c:6560)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:6560)
            TypeDecl: declname='result', quals=[] (at pp.c:6560)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:6560)
            PtrDecl: quals=[] (at pp.c:6560)
              TypeDecl: declname='buf', quals=[] (at pp.c:6560)
                IdentifierType: names=['ArbitratedReadStreamC__0__ReadStream__val_t'] (at None)
          Decl: name='count', quals=[], storage=[] (at pp.c:6560)
            TypeDecl: declname='count', quals=[] (at pp.c:6560)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__bufferDone', quals=[] (at pp.c:6560)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6560)
      FuncCall:  (at None)
        ID: name='ArbitratedReadStreamC__0__ReadStream__default__bufferDone' (at pp.c:6562)
        ExprList:  (at pp.c:6562)
          ID: name='arg_0x101ccb020' (at pp.c:6562)
          ID: name='result' (at pp.c:6562)
          ID: name='buf' (at pp.c:6562)
          ID: name='count' (at pp.c:6562)
  FuncDef:  (at pp.c:6567)
    Decl: name='ArbitratedReadStreamC__0__Service__bufferDone', quals=[], storage=['inline', 'static'] (at pp.c:6567)
      FuncDecl: quals=None (at pp.c:6567)
        ParamList:  (at pp.c:6567)
          Decl: name='client', quals=[], storage=[] (at pp.c:6567)
            TypeDecl: declname='client', quals=[] (at pp.c:6567)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:6567)
            TypeDecl: declname='result', quals=[] (at pp.c:6567)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:6567)
            PtrDecl: quals=[] (at pp.c:6567)
              TypeDecl: declname='buf', quals=[] (at pp.c:6567)
                IdentifierType: names=['ArbitratedReadStreamC__0__val_t'] (at None)
          Decl: name='count', quals=[], storage=[] (at pp.c:6567)
            TypeDecl: declname='count', quals=[] (at pp.c:6567)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='ArbitratedReadStreamC__0__Service__bufferDone', quals=[] (at pp.c:6567)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6568)
      FuncCall:  (at None)
        ID: name='ArbitratedReadStreamC__0__ReadStream__bufferDone' (at pp.c:6569)
        ExprList:  (at pp.c:6569)
          ID: name='client' (at pp.c:6569)
          ID: name='result' (at pp.c:6569)
          ID: name='buf' (at pp.c:6569)
          ID: name='count' (at pp.c:6569)
  FuncDef:  (at pp.c:6573)
    Decl: name='AdcStreamP__ReadStream__bufferDone', quals=[], storage=['static', 'inline'] (at pp.c:6573)
      FuncDecl: quals=None (at pp.c:6573)
        ParamList:  (at pp.c:6573)
          Decl: name='arg_0x101c4fb08', quals=[], storage=[] (at pp.c:6573)
            TypeDecl: declname='arg_0x101c4fb08', quals=[] (at pp.c:6573)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:6573)
            TypeDecl: declname='result', quals=[] (at pp.c:6573)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:6573)
            PtrDecl: quals=[] (at pp.c:6573)
              TypeDecl: declname='buf', quals=[] (at pp.c:6573)
                IdentifierType: names=['AdcStreamP__ReadStream__val_t'] (at None)
          Decl: name='count', quals=[], storage=[] (at pp.c:6573)
            TypeDecl: declname='count', quals=[] (at pp.c:6573)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='AdcStreamP__ReadStream__bufferDone', quals=[] (at pp.c:6573)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6573)
      FuncCall:  (at None)
        ID: name='ArbitratedReadStreamC__0__Service__bufferDone' (at pp.c:6575)
        ExprList:  (at pp.c:6575)
          ID: name='arg_0x101c4fb08' (at pp.c:6575)
          ID: name='result' (at pp.c:6575)
          ID: name='buf' (at pp.c:6575)
          ID: name='count' (at pp.c:6575)
  FuncDef:  (at pp.c:6580)
    Decl: name='AdcStreamP__bufferDone__runTask', quals=[], storage=['inline', 'static'] (at pp.c:6580)
      FuncDecl: quals=None (at pp.c:6580)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__bufferDone__runTask', quals=[] (at pp.c:6580)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6582)
      Decl: name='b', quals=[], storage=[] (at pp.c:6583)
        PtrDecl: quals=[] (at pp.c:6583)
          TypeDecl: declname='b', quals=[] (at pp.c:6583)
            IdentifierType: names=['uint16_t'] (at None)
      Decl: name='c', quals=[], storage=[] (at pp.c:6585)
        TypeDecl: declname='c', quals=[] (at pp.c:6585)
          IdentifierType: names=['uint16_t'] (at None)
      Compound:  (at pp.c:6588)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:6588)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:6588)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:6588)
        Compound:  (at pp.c:6589)
          Assignment: op='=' (at pp.c:6590)
            ID: name='b' (at pp.c:6590)
            ID: name='AdcStreamP__lastBuffer' (at pp.c:6590)
          Assignment: op='=' (at pp.c:6591)
            ID: name='c' (at pp.c:6591)
            ID: name='AdcStreamP__lastCount' (at pp.c:6591)
          Assignment: op='=' (at pp.c:6592)
            ID: name='AdcStreamP__lastBuffer' (at pp.c:6592)
            Cast:  (at None)
              Typename: quals=[] (at None)
                PtrDecl: quals=[] (at pp.c:6592)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['void'] (at None)
              Constant: type='int', value='0' (at pp.c:6592)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:6595)
          ExprList:  (at pp.c:6595)
            ID: name='__nesc_atomic' (at pp.c:6595)
      FuncCall:  (at None)
        ID: name='AdcStreamP__ReadStream__bufferDone' (at pp.c:6597)
        ExprList:  (at pp.c:6597)
          ID: name='AdcStreamP__client' (at pp.c:6597)
          ID: name='SUCCESS' (at pp.c:6597)
          ID: name='b' (at pp.c:6597)
          ID: name='c' (at pp.c:6597)
  FuncDef:  (at pp.c:6601)
    Decl: name='ArbitratedReadStreamC__0__ReadStream__default__readDone', quals=[], storage=['inline', 'static'] (at pp.c:6601)
      FuncDecl: quals=None (at pp.c:6601)
        ParamList:  (at pp.c:6601)
          Decl: name='client', quals=[], storage=[] (at pp.c:6601)
            TypeDecl: declname='client', quals=[] (at pp.c:6601)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:6601)
            TypeDecl: declname='result', quals=[] (at pp.c:6601)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='actualPeriod', quals=[], storage=[] (at pp.c:6601)
            TypeDecl: declname='actualPeriod', quals=[] (at pp.c:6601)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__default__readDone', quals=[] (at pp.c:6601)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6602)
  FuncDef:  (at pp.c:6606)
    Decl: name='ArbitratedReadStreamC__0__ReadStream__readDone', quals=[], storage=['static', 'inline'] (at pp.c:6606)
      FuncDecl: quals=None (at pp.c:6606)
        ParamList:  (at pp.c:6606)
          Decl: name='arg_0x101ccb020', quals=[], storage=[] (at pp.c:6606)
            TypeDecl: declname='arg_0x101ccb020', quals=[] (at pp.c:6606)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:6606)
            TypeDecl: declname='result', quals=[] (at pp.c:6606)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='usActualPeriod', quals=[], storage=[] (at pp.c:6606)
            TypeDecl: declname='usActualPeriod', quals=[] (at pp.c:6606)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__readDone', quals=[] (at pp.c:6606)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6606)
      FuncCall:  (at None)
        ID: name='ArbitratedReadStreamC__0__ReadStream__default__readDone' (at pp.c:6608)
        ExprList:  (at pp.c:6608)
          ID: name='arg_0x101ccb020' (at pp.c:6608)
          ID: name='result' (at pp.c:6608)
          ID: name='usActualPeriod' (at pp.c:6608)
  FuncDef:  (at pp.c:6613)
    Decl: name='ArbitratedReadStreamC__0__Resource__default__release', quals=[], storage=['inline', 'static'] (at pp.c:6613)
      FuncDecl: quals=None (at pp.c:6613)
        ParamList:  (at pp.c:6613)
          Decl: name='client', quals=[], storage=[] (at pp.c:6613)
            TypeDecl: declname='client', quals=[] (at pp.c:6613)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbitratedReadStreamC__0__Resource__default__release', quals=[] (at pp.c:6613)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:6615)
      Return:  (at pp.c:6617)
        ID: name='FAIL' (at pp.c:6617)
  FuncDef:  (at pp.c:6621)
    Decl: name='ArbitratedReadStreamC__0__Resource__release', quals=[], storage=['static', 'inline'] (at pp.c:6621)
      FuncDecl: quals=None (at pp.c:6621)
        ParamList:  (at pp.c:6621)
          Decl: name='arg_0x101cc3020', quals=[], storage=[] (at pp.c:6621)
            TypeDecl: declname='arg_0x101cc3020', quals=[] (at pp.c:6621)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbitratedReadStreamC__0__Resource__release', quals=[] (at pp.c:6621)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:6621)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:6623)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:6623)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:6627)
        ID: name='arg_0x101cc3020' (at pp.c:6627)
        Compound:  (at pp.c:6627)
          Case:  (at pp.c:6629)
            ID: name='AdcReadStreamClientC__0__RSCLIENT' (at pp.c:6629)
            Assignment: op='=' (at pp.c:6631)
              ID: name='__nesc_result' (at pp.c:6631)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__ClientResource__release' (at pp.c:6631)
                ExprList:  (at pp.c:6631)
                  ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:6631)
          Break:  (at pp.c:6633)
          Default:  (at pp.c:6635)
            Assignment: op='=' (at pp.c:6637)
              ID: name='__nesc_result' (at pp.c:6637)
              FuncCall:  (at None)
                ID: name='ArbitratedReadStreamC__0__Resource__default__release' (at pp.c:6637)
                ExprList:  (at pp.c:6637)
                  ID: name='arg_0x101cc3020' (at pp.c:6637)
          Break:  (at pp.c:6639)
      Return:  (at pp.c:6645)
        ID: name='__nesc_result' (at pp.c:6645)
  FuncDef:  (at pp.c:6650)
    Decl: name='ArbitratedReadStreamC__0__Service__readDone', quals=[], storage=['inline', 'static'] (at pp.c:6650)
      FuncDecl: quals=None (at pp.c:6650)
        ParamList:  (at pp.c:6650)
          Decl: name='client', quals=[], storage=[] (at pp.c:6650)
            TypeDecl: declname='client', quals=[] (at pp.c:6650)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:6650)
            TypeDecl: declname='result', quals=[] (at pp.c:6650)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='actualPeriod', quals=[], storage=[] (at pp.c:6650)
            TypeDecl: declname='actualPeriod', quals=[] (at pp.c:6650)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='ArbitratedReadStreamC__0__Service__readDone', quals=[] (at pp.c:6650)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6651)
      FuncCall:  (at None)
        ID: name='ArbitratedReadStreamC__0__Resource__release' (at pp.c:6652)
        ExprList:  (at pp.c:6652)
          ID: name='client' (at pp.c:6652)
      FuncCall:  (at None)
        ID: name='ArbitratedReadStreamC__0__ReadStream__readDone' (at pp.c:6653)
        ExprList:  (at pp.c:6653)
          ID: name='client' (at pp.c:6653)
          ID: name='result' (at pp.c:6653)
          ID: name='actualPeriod' (at pp.c:6653)
  FuncDef:  (at pp.c:6657)
    Decl: name='AdcStreamP__ReadStream__readDone', quals=[], storage=['static', 'inline'] (at pp.c:6657)
      FuncDecl: quals=None (at pp.c:6657)
        ParamList:  (at pp.c:6657)
          Decl: name='arg_0x101c4fb08', quals=[], storage=[] (at pp.c:6657)
            TypeDecl: declname='arg_0x101c4fb08', quals=[] (at pp.c:6657)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:6657)
            TypeDecl: declname='result', quals=[] (at pp.c:6657)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='usActualPeriod', quals=[], storage=[] (at pp.c:6657)
            TypeDecl: declname='usActualPeriod', quals=[] (at pp.c:6657)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='AdcStreamP__ReadStream__readDone', quals=[] (at pp.c:6657)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6657)
      FuncCall:  (at None)
        ID: name='ArbitratedReadStreamC__0__Service__readDone' (at pp.c:6659)
        ExprList:  (at pp.c:6659)
          ID: name='arg_0x101c4fb08' (at pp.c:6659)
          ID: name='result' (at pp.c:6659)
          ID: name='usActualPeriod' (at pp.c:6659)
  FuncDef:  (at pp.c:6664)
    Decl: name='AdcStreamP__readStreamFail__runTask', quals=[], storage=['inline', 'static'] (at pp.c:6664)
      FuncDecl: quals=None (at pp.c:6664)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__readStreamFail__runTask', quals=[] (at pp.c:6664)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6666)
      Decl: name='entry', quals=[], storage=[] (at pp.c:6668)
        PtrDecl: quals=[] (at pp.c:6668)
          TypeDecl: declname='entry', quals=[] (at pp.c:6668)
            Struct: name='AdcStreamP__list_entry_t', packed=False (at pp.c:6668)
      Decl: name='c', quals=[], storage=[] (at pp.c:6669)
        TypeDecl: declname='c', quals=[] (at pp.c:6669)
          IdentifierType: names=['uint8_t'] (at None)
        ID: name='AdcStreamP__client' (at pp.c:6669)
      Compound:  (at pp.c:6671)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:6671)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:6671)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:6671)
        Assignment: op='=' (at pp.c:6673)
          ID: name='entry' (at pp.c:6673)
          ArrayRef:  (at pp.c:6673)
            ID: name='AdcStreamP__bufferQueue' (at pp.c:6673)
            ID: name='c' (at pp.c:6673)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:6675)
          ExprList:  (at pp.c:6675)
            ID: name='__nesc_atomic' (at pp.c:6675)
      For:  (at pp.c:6676)
        ID: name='entry' (at pp.c:6676)
        Assignment: op='=' (at pp.c:6676)
          ID: name='entry' (at pp.c:6676)
          StructRef: type='->' (at pp.c:6676)
            ID: name='entry' (at pp.c:6676)
            ID: name='next' (at pp.c:6676)
        Compound:  (at pp.c:6676)
          Decl: name='tmp_count', quals=[], storage=[] (at pp.c:6677)
            TypeDecl: declname='tmp_count', quals=[] (at pp.c:6677)
              IdentifierType: names=['uint16_t'] (at None)
            StructRef: type='->' (at pp.c:6677)
              ID: name='entry' (at pp.c:6677)
              ID: name='count' (at pp.c:6677)
          FuncCall:  (at None)
            ID: name='AdcStreamP__ReadStream__bufferDone' (at pp.c:6680)
            ExprList:  (at pp.c:6680)
              ID: name='c' (at pp.c:6680)
              ID: name='FAIL' (at pp.c:6680)
              Cast:  (at None)
                Typename: quals=[] (at None)
                  PtrDecl: quals=[] (at pp.c:6680)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                ID: name='entry' (at pp.c:6680)
              StructRef: type='->' (at pp.c:6680)
                ID: name='entry' (at pp.c:6680)
                ID: name='count' (at pp.c:6680)
      Compound:  (at pp.c:6683)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:6683)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:6683)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:6683)
        Compound:  (at pp.c:6684)
          Assignment: op='=' (at pp.c:6685)
            ArrayRef:  (at pp.c:6685)
              ID: name='AdcStreamP__bufferQueue' (at pp.c:6685)
              ID: name='c' (at pp.c:6685)
            Cast:  (at None)
              Typename: quals=[] (at None)
                PtrDecl: quals=[] (at pp.c:6685)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['void'] (at None)
              Constant: type='int', value='0' (at pp.c:6685)
          Assignment: op='=' (at pp.c:6686)
            ArrayRef:  (at pp.c:6686)
              ID: name='AdcStreamP__bufferQueueEnd' (at pp.c:6686)
              ID: name='c' (at pp.c:6686)
            UnaryOp: op='&' (at pp.c:6686)
              ArrayRef:  (at pp.c:6686)
                ID: name='AdcStreamP__bufferQueue' (at pp.c:6686)
                ID: name='c' (at pp.c:6686)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:6689)
          ExprList:  (at pp.c:6689)
            ID: name='__nesc_atomic' (at pp.c:6689)
      Assignment: op='=' (at pp.c:6691)
        ID: name='AdcStreamP__client' (at pp.c:6691)
        ID: name='AdcStreamP__NSTREAM' (at pp.c:6691)
      FuncCall:  (at None)
        ID: name='AdcStreamP__ReadStream__readDone' (at pp.c:6692)
        ExprList:  (at pp.c:6692)
          ID: name='c' (at pp.c:6692)
          ID: name='FAIL' (at pp.c:6692)
          Constant: type='int', value='0' (at pp.c:6692)
  FuncDef:  (at pp.c:6696)
    Decl: name='Msp430RefVoltArbiterImplP__AdcResource__default__release', quals=[], storage=['inline', 'static'] (at pp.c:6696)
      FuncDecl: quals=None (at pp.c:6696)
        ParamList:  (at pp.c:6696)
          Decl: name='client', quals=[], storage=[] (at pp.c:6696)
            TypeDecl: declname='client', quals=[] (at pp.c:6696)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__default__release', quals=[] (at pp.c:6696)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:6698)
      Return:  (at pp.c:6700)
        ID: name='FAIL' (at pp.c:6700)
  FuncDef:  (at pp.c:6704)
    Decl: name='Msp430RefVoltArbiterImplP__AdcResource__release', quals=[], storage=['static', 'inline'] (at pp.c:6704)
      FuncDecl: quals=None (at pp.c:6704)
        ParamList:  (at pp.c:6704)
          Decl: name='arg_0x101bace18', quals=[], storage=[] (at pp.c:6704)
            TypeDecl: declname='arg_0x101bace18', quals=[] (at pp.c:6704)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__release', quals=[] (at pp.c:6704)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:6704)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:6706)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:6706)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:6710)
        ID: name='arg_0x101bace18' (at pp.c:6710)
        Compound:  (at pp.c:6710)
          Case:  (at pp.c:6712)
            ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:6712)
            Assignment: op='=' (at pp.c:6714)
              ID: name='__nesc_result' (at pp.c:6714)
              FuncCall:  (at None)
                ID: name='SimpleArbiterP__0__Resource__release' (at pp.c:6714)
                ExprList:  (at pp.c:6714)
                  ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:6714)
          Break:  (at pp.c:6716)
          Case:  (at pp.c:6718)
            ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:6718)
            Assignment: op='=' (at pp.c:6720)
              ID: name='__nesc_result' (at pp.c:6720)
              FuncCall:  (at None)
                ID: name='SimpleArbiterP__0__Resource__release' (at pp.c:6720)
                ExprList:  (at pp.c:6720)
                  ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:6720)
          Break:  (at pp.c:6722)
          Case:  (at pp.c:6724)
            ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:6724)
            Assignment: op='=' (at pp.c:6726)
              ID: name='__nesc_result' (at pp.c:6726)
              FuncCall:  (at None)
                ID: name='SimpleArbiterP__0__Resource__release' (at pp.c:6726)
                ExprList:  (at pp.c:6726)
                  ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:6726)
          Break:  (at pp.c:6728)
          Default:  (at pp.c:6730)
            Assignment: op='=' (at pp.c:6732)
              ID: name='__nesc_result' (at pp.c:6732)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__AdcResource__default__release' (at pp.c:6732)
                ExprList:  (at pp.c:6732)
                  ID: name='arg_0x101bace18' (at pp.c:6732)
          Break:  (at pp.c:6734)
      Return:  (at pp.c:6740)
        ID: name='__nesc_result' (at pp.c:6740)
  FuncDef:  (at pp.c:6745)
    Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__isEmpty', quals=[], storage=['inline', 'static'] (at pp.c:6745)
      FuncDecl: quals=None (at pp.c:6745)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__isEmpty', quals=[] (at pp.c:6745)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:6747)
      Decl: name='i', quals=[], storage=[] (at pp.c:6748)
        TypeDecl: declname='i', quals=[] (at pp.c:6748)
          IdentifierType: names=['int'] (at None)
      Compound:  (at pp.c:6752)
        For:  (at pp.c:6753)
          Assignment: op='=' (at pp.c:6753)
            ID: name='i' (at pp.c:6753)
            Constant: type='int', value='0' (at pp.c:6753)
          BinaryOp: op='<' (at pp.c:6753)
            ID: name='i' (at pp.c:6753)
            UnaryOp: op='sizeof' (at pp.c:6753)
              ID: name='RoundRobinResourceQueueC__0__resQ' (at pp.c:6753)
          UnaryOp: op='p++' (at pp.c:6753)
            ID: name='i' (at pp.c:6753)
          If:  (at pp.c:6754)
            BinaryOp: op='>' (at pp.c:6754)
              ArrayRef:  (at pp.c:6754)
                ID: name='RoundRobinResourceQueueC__0__resQ' (at pp.c:6754)
                ID: name='i' (at pp.c:6754)
              Constant: type='int', value='0' (at pp.c:6754)
            Compound:  (at pp.c:6754)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:6755)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:6755)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='FALSE' (at pp.c:6757)
              Return:  (at pp.c:6760)
                ID: name='__nesc_temp' (at pp.c:6760)
        Compound:  (at pp.c:6763)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:6764)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:6764)
              IdentifierType: names=['char', 'unsigned'] (at None)
            ID: name='TRUE' (at pp.c:6766)
          Return:  (at pp.c:6769)
            ID: name='__nesc_temp' (at pp.c:6769)
  FuncDef:  (at pp.c:6775)
    Decl: name='SimpleArbiterP__0__Queue__isEmpty', quals=[], storage=['static', 'inline'] (at pp.c:6775)
      FuncDecl: quals=None (at pp.c:6775)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__Queue__isEmpty', quals=[] (at pp.c:6775)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:6775)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:6777)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:6777)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:6781)
        ID: name='__nesc_result' (at pp.c:6781)
        FuncCall:  (at None)
          ID: name='RoundRobinResourceQueueC__0__RoundRobinQueue__isEmpty' (at pp.c:6781)
      Return:  (at pp.c:6785)
        ID: name='__nesc_result' (at pp.c:6785)
  FuncDef:  (at pp.c:6790)
    Decl: name='RoundRobinResourceQueueC__0__clearEntry', quals=[], storage=['inline', 'static'] (at pp.c:6790)
      FuncDecl: quals=None (at pp.c:6790)
        ParamList:  (at pp.c:6790)
          Decl: name='id', quals=[], storage=[] (at pp.c:6790)
            TypeDecl: declname='id', quals=[] (at pp.c:6790)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='RoundRobinResourceQueueC__0__clearEntry', quals=[] (at pp.c:6790)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6792)
      Assignment: op='&=' (at pp.c:6793)
        ArrayRef:  (at pp.c:6793)
          ID: name='RoundRobinResourceQueueC__0__resQ' (at pp.c:6793)
          BinaryOp: op='/' (at pp.c:6793)
            ID: name='id' (at pp.c:6793)
            Constant: type='int', value='8' (at pp.c:6793)
        UnaryOp: op='~' (at pp.c:6793)
          BinaryOp: op='<<' (at pp.c:6793)
            Constant: type='int', value='1' (at pp.c:6793)
            BinaryOp: op='%' (at pp.c:6793)
              ID: name='id' (at pp.c:6793)
              Constant: type='int', value='8' (at pp.c:6793)
  FuncDef:  (at pp.c:6797)
    Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__dequeue', quals=[], storage=['inline', 'static'] (at pp.c:6797)
      FuncDecl: quals=None (at pp.c:6797)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__dequeue', quals=[] (at pp.c:6797)
          IdentifierType: names=['resource_client_id_t'] (at None)
    Compound:  (at pp.c:6799)
      Decl: name='i', quals=[], storage=[] (at pp.c:6800)
        TypeDecl: declname='i', quals=[] (at pp.c:6800)
          IdentifierType: names=['int'] (at None)
      Compound:  (at pp.c:6804)
        For:  (at pp.c:6805)
          Assignment: op='=' (at pp.c:6805)
            ID: name='i' (at pp.c:6805)
            BinaryOp: op='+' (at pp.c:6805)
              ID: name='RoundRobinResourceQueueC__0__last' (at pp.c:6805)
              Constant: type='int', value='1' (at pp.c:6805)
          UnaryOp: op='p++' (at pp.c:6805)
            ID: name='i' (at pp.c:6805)
          Compound:  (at pp.c:6805)
            If:  (at pp.c:6806)
              BinaryOp: op='==' (at pp.c:6806)
                ID: name='i' (at pp.c:6806)
                Constant: type='int', value='3U' (at pp.c:6806)
              Compound:  (at pp.c:6806)
                Assignment: op='=' (at pp.c:6807)
                  ID: name='i' (at pp.c:6807)
                  Constant: type='int', value='0' (at pp.c:6807)
            If:  (at pp.c:6810)
              FuncCall:  (at None)
                ID: name='RoundRobinResourceQueueC__0__RoundRobinQueue__isEnqueued' (at pp.c:6810)
                ExprList:  (at pp.c:6810)
                  ID: name='i' (at pp.c:6810)
              Compound:  (at pp.c:6810)
                FuncCall:  (at None)
                  ID: name='RoundRobinResourceQueueC__0__clearEntry' (at pp.c:6811)
                  ExprList:  (at pp.c:6811)
                    ID: name='i' (at pp.c:6811)
                Assignment: op='=' (at pp.c:6812)
                  ID: name='RoundRobinResourceQueueC__0__last' (at pp.c:6812)
                  ID: name='i' (at pp.c:6812)
                Compound:  (at pp.c:6813)
                  Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:6814)
                    TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:6814)
                      IdentifierType: names=['char', 'unsigned'] (at None)
                    ID: name='i' (at pp.c:6816)
                  Return:  (at pp.c:6819)
                    ID: name='__nesc_temp' (at pp.c:6819)
            If:  (at pp.c:6823)
              BinaryOp: op='==' (at pp.c:6823)
                ID: name='i' (at pp.c:6823)
                ID: name='RoundRobinResourceQueueC__0__last' (at pp.c:6823)
              Compound:  (at pp.c:6823)
                Break:  (at pp.c:6824)
        Compound:  (at pp.c:6828)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:6829)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:6829)
              IdentifierType: names=['char', 'unsigned'] (at None)
            ID: name='RoundRobinResourceQueueC__0__NO_ENTRY' (at pp.c:6831)
          Return:  (at pp.c:6834)
            ID: name='__nesc_temp' (at pp.c:6834)
  FuncDef:  (at pp.c:6840)
    Decl: name='SimpleArbiterP__0__Queue__dequeue', quals=[], storage=['static', 'inline'] (at pp.c:6840)
      FuncDecl: quals=None (at pp.c:6840)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__Queue__dequeue', quals=[] (at pp.c:6840)
          IdentifierType: names=['resource_client_id_t'] (at None)
    Compound:  (at pp.c:6840)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:6842)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:6842)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:6846)
        ID: name='__nesc_result' (at pp.c:6846)
        FuncCall:  (at None)
          ID: name='RoundRobinResourceQueueC__0__RoundRobinQueue__dequeue' (at pp.c:6846)
      Return:  (at pp.c:6850)
        ID: name='__nesc_result' (at pp.c:6850)
  FuncDef:  (at pp.c:6855)
    Decl: name='SimpleArbiterP__0__grantedTask__postTask', quals=[], storage=['static', 'inline'] (at pp.c:6855)
      FuncDecl: quals=None (at pp.c:6855)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__grantedTask__postTask', quals=[] (at pp.c:6855)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:6855)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:6857)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:6857)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:6861)
        ID: name='__nesc_result' (at pp.c:6861)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:6861)
          ExprList:  (at pp.c:6861)
            ID: name='SimpleArbiterP__0__grantedTask' (at pp.c:6861)
      Return:  (at pp.c:6865)
        ID: name='__nesc_result' (at pp.c:6865)
  FuncDef:  (at pp.c:6870)
    Decl: name='SimpleArbiterP__0__ResourceConfigure__default__unconfigure', quals=[], storage=['inline', 'static'] (at pp.c:6870)
      FuncDecl: quals=None (at pp.c:6870)
        ParamList:  (at pp.c:6870)
          Decl: name='id', quals=[], storage=[] (at pp.c:6870)
            TypeDecl: declname='id', quals=[] (at pp.c:6870)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__ResourceConfigure__default__unconfigure', quals=[] (at pp.c:6870)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6872)
  FuncDef:  (at pp.c:6876)
    Decl: name='SimpleArbiterP__0__ResourceConfigure__unconfigure', quals=[], storage=['static', 'inline'] (at pp.c:6876)
      FuncDecl: quals=None (at pp.c:6876)
        ParamList:  (at pp.c:6876)
          Decl: name='arg_0x101b0c868', quals=[], storage=[] (at pp.c:6876)
            TypeDecl: declname='arg_0x101b0c868', quals=[] (at pp.c:6876)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__ResourceConfigure__unconfigure', quals=[] (at pp.c:6876)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6876)
      FuncCall:  (at None)
        ID: name='SimpleArbiterP__0__ResourceConfigure__default__unconfigure' (at pp.c:6878)
        ExprList:  (at pp.c:6878)
          ID: name='arg_0x101b0c868' (at pp.c:6878)
  FuncDef:  (at pp.c:6883)
    Decl: name='AdcStreamP__readStreamDone__runTask', quals=[], storage=['inline', 'static'] (at pp.c:6883)
      FuncDecl: quals=None (at pp.c:6883)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__readStreamDone__runTask', quals=[] (at pp.c:6883)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6885)
      Decl: name='c', quals=[], storage=[] (at pp.c:6886)
        TypeDecl: declname='c', quals=[] (at pp.c:6886)
          IdentifierType: names=['uint8_t'] (at None)
        ID: name='AdcStreamP__client' (at pp.c:6886)
      Decl: name='actualPeriod', quals=[], storage=[] (at pp.c:6887)
        TypeDecl: declname='actualPeriod', quals=[] (at pp.c:6887)
          IdentifierType: names=['uint32_t'] (at None)
        ID: name='AdcStreamP__period' (at pp.c:6887)
      If:  (at pp.c:6890)
        ID: name='AdcStreamP__periodModified' (at pp.c:6890)
        Compound:  (at pp.c:6890)
          Assignment: op='=' (at pp.c:6891)
            ID: name='actualPeriod' (at pp.c:6891)
            BinaryOp: op='-' (at pp.c:6891)
              ID: name='AdcStreamP__period' (at pp.c:6891)
              BinaryOp: op='%' (at pp.c:6891)
                ID: name='AdcStreamP__period' (at pp.c:6891)
                Constant: type='int', value='1000' (at pp.c:6891)
      Compound:  (at pp.c:6893)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:6893)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:6893)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:6893)
        Compound:  (at pp.c:6894)
          Assignment: op='=' (at pp.c:6895)
            ArrayRef:  (at pp.c:6895)
              ID: name='AdcStreamP__bufferQueue' (at pp.c:6895)
              ID: name='c' (at pp.c:6895)
            Cast:  (at None)
              Typename: quals=[] (at None)
                PtrDecl: quals=[] (at pp.c:6895)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['void'] (at None)
              Constant: type='int', value='0' (at pp.c:6895)
          Assignment: op='=' (at pp.c:6896)
            ArrayRef:  (at pp.c:6896)
              ID: name='AdcStreamP__bufferQueueEnd' (at pp.c:6896)
              ID: name='c' (at pp.c:6896)
            UnaryOp: op='&' (at pp.c:6896)
              ArrayRef:  (at pp.c:6896)
                ID: name='AdcStreamP__bufferQueue' (at pp.c:6896)
                ID: name='c' (at pp.c:6896)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:6899)
          ExprList:  (at pp.c:6899)
            ID: name='__nesc_atomic' (at pp.c:6899)
      Assignment: op='=' (at pp.c:6901)
        ID: name='AdcStreamP__client' (at pp.c:6901)
        ID: name='AdcStreamP__NSTREAM' (at pp.c:6901)
      FuncCall:  (at None)
        ID: name='AdcStreamP__ReadStream__readDone' (at pp.c:6902)
        ExprList:  (at pp.c:6902)
          ID: name='c' (at pp.c:6902)
          ID: name='SUCCESS' (at pp.c:6902)
          ID: name='actualPeriod' (at pp.c:6902)
  FuncDef:  (at pp.c:6906)
    Decl: name='Msp430RefVoltArbiterImplP__switchOff__postTask', quals=[], storage=['static', 'inline'] (at pp.c:6906)
      FuncDecl: quals=None (at pp.c:6906)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__switchOff__postTask', quals=[] (at pp.c:6906)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:6906)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:6908)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:6908)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:6912)
        ID: name='__nesc_result' (at pp.c:6912)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:6912)
          ExprList:  (at pp.c:6912)
            ID: name='Msp430RefVoltArbiterImplP__switchOff' (at pp.c:6912)
      Return:  (at pp.c:6916)
        ID: name='__nesc_result' (at pp.c:6916)
  FuncDef:  (at pp.c:6921)
    Decl: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__stop', quals=[], storage=['inline', 'static'] (at pp.c:6921)
      FuncDecl: quals=None (at pp.c:6921)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_1_5V__stop', quals=[] (at pp.c:6921)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:6923)
      Return:  (at pp.c:6924)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltGeneratorP__stop' (at pp.c:6924)
          ExprList:  (at pp.c:6924)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_OFF_PENDING' (at pp.c:6924)
  FuncDef:  (at pp.c:6928)
    Decl: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stop', quals=[], storage=['static', 'inline'] (at pp.c:6928)
      FuncDecl: quals=None (at pp.c:6928)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stop', quals=[] (at pp.c:6928)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:6928)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:6930)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:6930)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:6934)
        ID: name='__nesc_result' (at pp.c:6934)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__stop' (at pp.c:6934)
      Return:  (at pp.c:6938)
        ID: name='__nesc_result' (at pp.c:6938)
  FuncDef:  (at pp.c:6943)
    Decl: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__stop', quals=[], storage=['inline', 'static'] (at pp.c:6943)
      FuncDecl: quals=None (at pp.c:6943)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_2_5V__stop', quals=[] (at pp.c:6943)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:6945)
      Return:  (at pp.c:6946)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltGeneratorP__stop' (at pp.c:6946)
          ExprList:  (at pp.c:6946)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_OFF_PENDING' (at pp.c:6946)
  FuncDef:  (at pp.c:6950)
    Decl: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stop', quals=[], storage=['static', 'inline'] (at pp.c:6950)
      FuncDecl: quals=None (at pp.c:6950)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stop', quals=[] (at pp.c:6950)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:6950)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:6952)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:6952)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:6956)
        ID: name='__nesc_result' (at pp.c:6956)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__stop' (at pp.c:6956)
      Return:  (at pp.c:6960)
        ID: name='__nesc_result' (at pp.c:6960)
  FuncDef:  (at pp.c:6965)
    Decl: name='Msp430RefVoltArbiterImplP__switchOff__runTask', quals=[], storage=['inline', 'static'] (at pp.c:6965)
      FuncDecl: quals=None (at pp.c:6965)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__switchOff__runTask', quals=[] (at pp.c:6965)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:6966)
      Decl: name='stopped', quals=[], storage=[] (at pp.c:6967)
        TypeDecl: declname='stopped', quals=[] (at pp.c:6967)
          IdentifierType: names=['error_t'] (at None)
      If:  (at pp.c:6969)
        BinaryOp: op='!=' (at pp.c:6969)
          ID: name='Msp430RefVoltArbiterImplP__syncOwner' (at pp.c:6969)
          ID: name='Msp430RefVoltArbiterImplP__NO_OWNER' (at pp.c:6969)
        Compound:  (at pp.c:6969)
          If:  (at pp.c:6970)
            ID: name='Msp430RefVoltArbiterImplP__ref2_5v' (at pp.c:6970)
            Compound:  (at pp.c:6970)
              Assignment: op='=' (at pp.c:6971)
                ID: name='stopped' (at pp.c:6971)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stop' (at pp.c:6971)
            Compound:  (at pp.c:6973)
              Assignment: op='=' (at pp.c:6975)
                ID: name='stopped' (at pp.c:6975)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stop' (at pp.c:6975)
          If:  (at pp.c:6978)
            BinaryOp: op='==' (at pp.c:6978)
              ID: name='stopped' (at pp.c:6978)
              ID: name='SUCCESS' (at pp.c:6978)
            Compound:  (at pp.c:6978)
              Assignment: op='=' (at pp.c:6979)
                ID: name='Msp430RefVoltArbiterImplP__syncOwner' (at pp.c:6979)
                ID: name='Msp430RefVoltArbiterImplP__NO_OWNER' (at pp.c:6979)
            Compound:  (at pp.c:6981)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__switchOff__postTask' (at pp.c:6983)
  FuncDef:  (at pp.c:6989)
    Decl: name='VirtualizeTimerC__0__updateFromTimer__postTask', quals=[], storage=['static', 'inline'] (at pp.c:6989)
      FuncDecl: quals=None (at pp.c:6989)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__updateFromTimer__postTask', quals=[] (at pp.c:6989)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:6989)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:6991)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:6991)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:6995)
        ID: name='__nesc_result' (at pp.c:6995)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:6995)
          ExprList:  (at pp.c:6995)
            ID: name='VirtualizeTimerC__0__updateFromTimer' (at pp.c:6995)
      Return:  (at pp.c:6999)
        ID: name='__nesc_result' (at pp.c:6999)
  FuncDef:  (at pp.c:7004)
    Decl: name='HplAdc12P__HplAdc12__isBusy', quals=[], storage=['inline', 'static'] (at pp.c:7004)
      FuncDecl: quals=None (at pp.c:7004)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__isBusy', quals=[] (at pp.c:7004)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:7006)
      Return:  (at pp.c:7008)
        BinaryOp: op='&' (at pp.c:7008)
          ID: name='HplAdc12P__ADC12CTL1' (at pp.c:7008)
          Constant: type='int', value='0x0001' (at pp.c:7008)
  FuncDef:  (at pp.c:7012)
    Decl: name='Msp430RefVoltGeneratorP__HplAdc12__isBusy', quals=[], storage=['static', 'inline'] (at pp.c:7012)
      FuncDecl: quals=None (at pp.c:7012)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__HplAdc12__isBusy', quals=[] (at pp.c:7012)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:7012)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:7014)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:7014)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:7018)
        ID: name='__nesc_result' (at pp.c:7018)
        FuncCall:  (at None)
          ID: name='HplAdc12P__HplAdc12__isBusy' (at pp.c:7018)
      Return:  (at pp.c:7022)
        ID: name='__nesc_result' (at pp.c:7022)
  FuncDef:  (at pp.c:7027)
    Decl: name='HplAdc12P__int2adc12ctl0', quals=[], storage=['inline', 'static'] (at pp.c:7027)
      FuncDecl: quals=None (at pp.c:7027)
        ParamList:  (at pp.c:7027)
          Decl: name='x', quals=[], storage=[] (at pp.c:7027)
            TypeDecl: declname='x', quals=[] (at pp.c:7027)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='HplAdc12P__int2adc12ctl0', quals=[] (at pp.c:7027)
          IdentifierType: names=['adc12ctl0_t'] (at None)
    Compound:  (at pp.c:7029)
      Decl: name='c', quals=[], storage=[] (at pp.c:7038)
        TypeDecl: declname='c', quals=[] (at pp.c:7038)
          Union: name='__nesc_unnamed4311', packed=False (at pp.c:7031)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:7033)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:7035)
                IdentifierType: names=['adc12ctl0_t'] (at None)
        ExprList:  (at pp.c:7038)
          Assignment: op='=' (at pp.c:7038)
            StructRef: type='.' (at pp.c:7038)
              ID: name='f' (at pp.c:7038)
            ID: name='x' (at pp.c:7038)
      Return:  (at pp.c:7041)
        StructRef: type='.' (at pp.c:7041)
          ID: name='c' (at pp.c:7041)
          ID: name='t' (at pp.c:7041)
  FuncDef:  (at pp.c:7045)
    Decl: name='HplAdc12P__HplAdc12__getCtl0', quals=[], storage=['inline', 'static'] (at pp.c:7045)
      FuncDecl: quals=None (at pp.c:7045)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__getCtl0', quals=[] (at pp.c:7045)
          IdentifierType: names=['adc12ctl0_t'] (at None)
    Compound:  (at pp.c:7047)
      Return:  (at pp.c:7048)
        FuncCall:  (at None)
          ID: name='HplAdc12P__int2adc12ctl0' (at pp.c:7048)
          ExprList:  (at pp.c:7048)
            ID: name='HplAdc12P__ADC12CTL0' (at pp.c:7048)
  FuncDef:  (at pp.c:7052)
    Decl: name='Msp430RefVoltGeneratorP__HplAdc12__getCtl0', quals=[], storage=['static', 'inline'] (at pp.c:7052)
      FuncDecl: quals=None (at pp.c:7052)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__HplAdc12__getCtl0', quals=[] (at pp.c:7052)
          IdentifierType: names=['adc12ctl0_t'] (at None)
    Compound:  (at pp.c:7052)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:7054)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:7054)
          Struct: name='__nesc_unnamed4254', packed=False (at pp.c:7054)
      Assignment: op='=' (at pp.c:7058)
        ID: name='__nesc_result' (at pp.c:7058)
        FuncCall:  (at None)
          ID: name='HplAdc12P__HplAdc12__getCtl0' (at pp.c:7058)
      Return:  (at pp.c:7062)
        ID: name='__nesc_result' (at pp.c:7062)
  FuncDef:  (at pp.c:7067)
    Decl: name='HplAdc12P__adc12ctl0cast2int', quals=[], storage=['inline', 'static'] (at pp.c:7067)
      FuncDecl: quals=None (at pp.c:7067)
        ParamList:  (at pp.c:7067)
          Decl: name='x', quals=[], storage=[] (at pp.c:7067)
            TypeDecl: declname='x', quals=[] (at pp.c:7067)
              IdentifierType: names=['adc12ctl0_t'] (at None)
        TypeDecl: declname='HplAdc12P__adc12ctl0cast2int', quals=[] (at pp.c:7067)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:7069)
      Decl: name='c', quals=[], storage=[] (at pp.c:7078)
        TypeDecl: declname='c', quals=[] (at pp.c:7078)
          Union: name='__nesc_unnamed4312', packed=False (at pp.c:7071)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:7073)
                IdentifierType: names=['adc12ctl0_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:7075)
                IdentifierType: names=['uint16_t'] (at None)
        ExprList:  (at pp.c:7078)
          Assignment: op='=' (at pp.c:7078)
            StructRef: type='.' (at pp.c:7078)
              ID: name='f' (at pp.c:7078)
            ID: name='x' (at pp.c:7078)
      Return:  (at pp.c:7081)
        StructRef: type='.' (at pp.c:7081)
          ID: name='c' (at pp.c:7081)
          ID: name='t' (at pp.c:7081)
  FuncDef:  (at pp.c:7086)
    Decl: name='HplAdc12P__HplAdc12__setCtl0', quals=[], storage=['inline', 'static'] (at pp.c:7086)
      FuncDecl: quals=None (at pp.c:7086)
        ParamList:  (at pp.c:7086)
          Decl: name='control0', quals=[], storage=[] (at pp.c:7086)
            TypeDecl: declname='control0', quals=[] (at pp.c:7086)
              IdentifierType: names=['adc12ctl0_t'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__setCtl0', quals=[] (at pp.c:7086)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7088)
      Assignment: op='=' (at pp.c:7089)
        ID: name='HplAdc12P__ADC12CTL0' (at pp.c:7089)
        FuncCall:  (at None)
          ID: name='HplAdc12P__adc12ctl0cast2int' (at pp.c:7089)
          ExprList:  (at pp.c:7089)
            ID: name='control0' (at pp.c:7089)
  FuncDef:  (at pp.c:7093)
    Decl: name='Msp430RefVoltGeneratorP__HplAdc12__setCtl0', quals=[], storage=['static', 'inline'] (at pp.c:7093)
      FuncDecl: quals=None (at pp.c:7093)
        ParamList:  (at pp.c:7093)
          Decl: name='control0', quals=[], storage=[] (at pp.c:7093)
            TypeDecl: declname='control0', quals=[] (at pp.c:7093)
              IdentifierType: names=['adc12ctl0_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__HplAdc12__setCtl0', quals=[] (at pp.c:7093)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7093)
      FuncCall:  (at None)
        ID: name='HplAdc12P__HplAdc12__setCtl0' (at pp.c:7095)
        ExprList:  (at pp.c:7095)
          ID: name='control0' (at pp.c:7095)
  FuncDef:  (at pp.c:7100)
    Decl: name='VirtualizeTimerC__0__Timer__stop', quals=[], storage=['inline', 'static'] (at pp.c:7100)
      FuncDecl: quals=None (at pp.c:7100)
        ParamList:  (at pp.c:7100)
          Decl: name='num', quals=[], storage=[] (at pp.c:7100)
            TypeDecl: declname='num', quals=[] (at pp.c:7100)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__Timer__stop', quals=[] (at pp.c:7100)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7101)
      Assignment: op='=' (at pp.c:7102)
        StructRef: type='.' (at pp.c:7102)
          ArrayRef:  (at pp.c:7102)
            ID: name='VirtualizeTimerC__0__m_timers' (at pp.c:7102)
            ID: name='num' (at pp.c:7102)
          ID: name='isrunning' (at pp.c:7102)
        ID: name='FALSE' (at pp.c:7102)
  FuncDef:  (at pp.c:7106)
    Decl: name='Msp430RefVoltGeneratorP__SwitchOnTimer__stop', quals=[], storage=['static', 'inline'] (at pp.c:7106)
      FuncDecl: quals=None (at pp.c:7106)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOnTimer__stop', quals=[] (at pp.c:7106)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7106)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__Timer__stop' (at pp.c:7108)
        ExprList:  (at pp.c:7108)
          Constant: type='int', value='1U' (at pp.c:7108)
  FuncDef:  (at pp.c:7113)
    Decl: name='Msp430InternalVoltageP__AdcConfigure__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:7113)
      FuncDecl: quals=None (at pp.c:7113)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        PtrDecl: quals=[] (at pp.c:7113)
          TypeDecl: declname='Msp430InternalVoltageP__AdcConfigure__getConfiguration', quals=['const'] (at pp.c:7113)
            IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    Compound:  (at pp.c:7114)
      Return:  (at pp.c:7115)
        UnaryOp: op='&' (at pp.c:7115)
          ID: name='Msp430InternalVoltageP__config' (at pp.c:7115)
  FuncDef:  (at pp.c:7120)
    Decl: name='AdcP__Config__default__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:7120)
      FuncDecl: quals=None (at pp.c:7120)
        ParamList:  (at pp.c:7120)
          Decl: name='client', quals=[], storage=[] (at pp.c:7120)
            TypeDecl: declname='client', quals=[] (at pp.c:7120)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:7119)
          TypeDecl: declname='AdcP__Config__default__getConfiguration', quals=['const'] (at pp.c:7120)
            IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    Compound:  (at pp.c:7121)
      Return:  (at pp.c:7122)
        UnaryOp: op='&' (at pp.c:7122)
          ID: name='AdcP__defaultConfig' (at pp.c:7122)
  FuncDef:  (at pp.c:7126)
    Decl: name='AdcP__Config__getConfiguration', quals=[], storage=['static', 'inline'] (at pp.c:7126)
      FuncDecl: quals=None (at pp.c:7126)
        ParamList:  (at pp.c:7126)
          Decl: name='arg_0x101959350', quals=[], storage=[] (at pp.c:7126)
            TypeDecl: declname='arg_0x101959350', quals=[] (at pp.c:7126)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__Config__getConfiguration', quals=[] (at pp.c:7126)
          IdentifierType: names=['AdcP__Config__adc_config_t'] (at None)
    Compound:  (at pp.c:7126)
      Decl: name='__nesc_result', quals=['const'], storage=[] (at pp.c:7128)
        PtrDecl: quals=[] (at pp.c:7128)
          TypeDecl: declname='__nesc_result', quals=['const'] (at pp.c:7128)
            Struct: name='__nesc_unnamed4267', packed=False (at pp.c:7128)
      Switch:  (at pp.c:7132)
        ID: name='arg_0x101959350' (at pp.c:7132)
        Compound:  (at pp.c:7132)
          Case:  (at pp.c:7134)
            ID: name='AdcReadClientC__0__CLIENT' (at pp.c:7134)
            Assignment: op='=' (at pp.c:7136)
              ID: name='__nesc_result' (at pp.c:7136)
              FuncCall:  (at None)
                ID: name='Msp430InternalVoltageP__AdcConfigure__getConfiguration' (at pp.c:7136)
          Break:  (at pp.c:7138)
          Case:  (at pp.c:7140)
            ID: name='AdcReadNowClientC__0__CLIENT' (at pp.c:7140)
            Assignment: op='=' (at pp.c:7142)
              ID: name='__nesc_result' (at pp.c:7142)
              FuncCall:  (at None)
                ID: name='Msp430InternalVoltageP__AdcConfigure__getConfiguration' (at pp.c:7142)
          Break:  (at pp.c:7144)
          Default:  (at pp.c:7146)
            Assignment: op='=' (at pp.c:7148)
              ID: name='__nesc_result' (at pp.c:7148)
              FuncCall:  (at None)
                ID: name='AdcP__Config__default__getConfiguration' (at pp.c:7148)
                ExprList:  (at pp.c:7148)
                  ID: name='arg_0x101959350' (at pp.c:7148)
          Break:  (at pp.c:7150)
      Return:  (at pp.c:7156)
        ID: name='__nesc_result' (at pp.c:7156)
  FuncDef:  (at pp.c:7161)
    Decl: name='AdcP__SingleChannel__default__configureSingle', quals=[], storage=['inline', 'static'] (at pp.c:7161)
      FuncDecl: quals=None (at pp.c:7161)
        ParamList:  (at pp.c:7161)
          Decl: name='client', quals=[], storage=[] (at pp.c:7161)
            TypeDecl: declname='client', quals=[] (at pp.c:7161)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='config', quals=['const'], storage=[] (at pp.c:7162)
            PtrDecl: quals=[] (at pp.c:7162)
              TypeDecl: declname='config', quals=['const'] (at pp.c:7162)
                IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        TypeDecl: declname='AdcP__SingleChannel__default__configureSingle', quals=[] (at pp.c:7161)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:7164)
      Return:  (at pp.c:7166)
        ID: name='FAIL' (at pp.c:7166)
  FuncDef:  (at pp.c:7170)
    Decl: name='AdcP__SingleChannel__configureSingle', quals=[], storage=['static', 'inline'] (at pp.c:7170)
      FuncDecl: quals=None (at pp.c:7170)
        ParamList:  (at pp.c:7170)
          Decl: name='arg_0x101977910', quals=[], storage=[] (at pp.c:7170)
            TypeDecl: declname='arg_0x101977910', quals=[] (at pp.c:7170)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='config', quals=['const'], storage=[] (at pp.c:7170)
            PtrDecl: quals=[] (at pp.c:7170)
              TypeDecl: declname='config', quals=['const'] (at pp.c:7170)
                IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        TypeDecl: declname='AdcP__SingleChannel__configureSingle', quals=[] (at pp.c:7170)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:7170)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:7172)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:7172)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:7176)
        ID: name='arg_0x101977910' (at pp.c:7176)
        Compound:  (at pp.c:7176)
          Case:  (at pp.c:7178)
            ID: name='AdcReadClientC__0__CLIENT' (at pp.c:7178)
            Assignment: op='=' (at pp.c:7180)
              ID: name='__nesc_result' (at pp.c:7180)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__SingleChannel__configureSingle' (at pp.c:7180)
                ExprList:  (at pp.c:7180)
                  ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:7180)
                  ID: name='config' (at pp.c:7180)
          Break:  (at pp.c:7182)
          Case:  (at pp.c:7184)
            ID: name='AdcReadNowClientC__0__CLIENT' (at pp.c:7184)
            Assignment: op='=' (at pp.c:7186)
              ID: name='__nesc_result' (at pp.c:7186)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__SingleChannel__configureSingle' (at pp.c:7186)
                ExprList:  (at pp.c:7186)
                  ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:7186)
                  ID: name='config' (at pp.c:7186)
          Break:  (at pp.c:7188)
          Default:  (at pp.c:7190)
            Assignment: op='=' (at pp.c:7192)
              ID: name='__nesc_result' (at pp.c:7192)
              FuncCall:  (at None)
                ID: name='AdcP__SingleChannel__default__configureSingle' (at pp.c:7192)
                ExprList:  (at pp.c:7192)
                  ID: name='arg_0x101977910' (at pp.c:7192)
                  ID: name='config' (at pp.c:7192)
          Break:  (at pp.c:7194)
      Return:  (at pp.c:7200)
        ID: name='__nesc_result' (at pp.c:7200)
  FuncDef:  (at pp.c:7205)
    Decl: name='AdcP__ResourceReadNow__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:7205)
      FuncDecl: quals=None (at pp.c:7205)
        ParamList:  (at pp.c:7205)
          Decl: name='nowClient', quals=[], storage=[] (at pp.c:7205)
            TypeDecl: declname='nowClient', quals=[] (at pp.c:7205)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__ResourceReadNow__default__granted', quals=[] (at pp.c:7205)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7207)
  FuncDef:  (at pp.c:7211)
    Decl: name='AdcP__ResourceReadNow__granted', quals=[], storage=['static', 'inline'] (at pp.c:7211)
      FuncDecl: quals=None (at pp.c:7211)
        ParamList:  (at pp.c:7211)
          Decl: name='arg_0x10195e748', quals=[], storage=[] (at pp.c:7211)
            TypeDecl: declname='arg_0x10195e748', quals=[] (at pp.c:7211)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__ResourceReadNow__granted', quals=[] (at pp.c:7211)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7211)
      FuncCall:  (at None)
        ID: name='AdcP__ResourceReadNow__default__granted' (at pp.c:7213)
        ExprList:  (at pp.c:7213)
          ID: name='arg_0x10195e748' (at pp.c:7213)
  FuncDef:  (at pp.c:7218)
    Decl: name='TransformAlarmC__1__Counter__get', quals=[], storage=['static', 'inline'] (at pp.c:7218)
      FuncDecl: quals=None (at pp.c:7218)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__Counter__get', quals=[] (at pp.c:7218)
          IdentifierType: names=['TransformAlarmC__1__Counter__size_type'] (at None)
    Compound:  (at pp.c:7218)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:7220)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:7220)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:7224)
        ID: name='__nesc_result' (at pp.c:7224)
        FuncCall:  (at None)
          ID: name='TransformCounterC__0__Counter__get' (at pp.c:7224)
      Return:  (at pp.c:7228)
        ID: name='__nesc_result' (at pp.c:7228)
  FuncDef:  (at pp.c:7233)
    Decl: name='TransformAlarmC__1__Alarm__getNow', quals=[], storage=['inline', 'static'] (at pp.c:7233)
      FuncDecl: quals=None (at pp.c:7233)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__Alarm__getNow', quals=[] (at pp.c:7233)
          IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
    Compound:  (at pp.c:7234)
      Return:  (at pp.c:7235)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__1__Counter__get' (at pp.c:7235)
  FuncDef:  (at pp.c:7239)
    Decl: name='AdcStreamP__Alarm__getNow', quals=[], storage=['static', 'inline'] (at pp.c:7239)
      FuncDecl: quals=None (at pp.c:7239)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__Alarm__getNow', quals=[] (at pp.c:7239)
          IdentifierType: names=['AdcStreamP__Alarm__size_type'] (at None)
    Compound:  (at pp.c:7239)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:7241)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:7241)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:7245)
        ID: name='__nesc_result' (at pp.c:7245)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__1__Alarm__getNow' (at pp.c:7245)
      Return:  (at pp.c:7249)
        ID: name='__nesc_result' (at pp.c:7249)
  FuncDef:  (at pp.c:7254)
    Decl: name='AdcStreamP__SingleChannel__default__configureSingle', quals=[], storage=['inline', 'static'] (at pp.c:7254)
      FuncDecl: quals=None (at pp.c:7254)
        ParamList:  (at pp.c:7254)
          Decl: name='c', quals=[], storage=[] (at pp.c:7254)
            TypeDecl: declname='c', quals=[] (at pp.c:7254)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='config', quals=['const'], storage=[] (at pp.c:7255)
            PtrDecl: quals=[] (at pp.c:7255)
              TypeDecl: declname='config', quals=['const'] (at pp.c:7255)
                IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        TypeDecl: declname='AdcStreamP__SingleChannel__default__configureSingle', quals=[] (at pp.c:7254)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:7257)
      Return:  (at pp.c:7259)
        ID: name='FAIL' (at pp.c:7259)
  FuncDef:  (at pp.c:7263)
    Decl: name='AdcStreamP__SingleChannel__configureSingle', quals=[], storage=['static', 'inline'] (at pp.c:7263)
      FuncDecl: quals=None (at pp.c:7263)
        ParamList:  (at pp.c:7263)
          Decl: name='arg_0x101c4bb90', quals=[], storage=[] (at pp.c:7263)
            TypeDecl: declname='arg_0x101c4bb90', quals=[] (at pp.c:7263)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='config', quals=['const'], storage=[] (at pp.c:7263)
            PtrDecl: quals=[] (at pp.c:7263)
              TypeDecl: declname='config', quals=['const'] (at pp.c:7263)
                IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        TypeDecl: declname='AdcStreamP__SingleChannel__configureSingle', quals=[] (at pp.c:7263)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:7263)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:7265)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:7265)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:7269)
        ID: name='arg_0x101c4bb90' (at pp.c:7269)
        Compound:  (at pp.c:7269)
          Case:  (at pp.c:7271)
            ID: name='AdcReadStreamClientC__0__RSCLIENT' (at pp.c:7271)
            Assignment: op='=' (at pp.c:7273)
              ID: name='__nesc_result' (at pp.c:7273)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__SingleChannel__configureSingle' (at pp.c:7273)
                ExprList:  (at pp.c:7273)
                  ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:7273)
                  ID: name='config' (at pp.c:7273)
          Break:  (at pp.c:7275)
          Default:  (at pp.c:7277)
            Assignment: op='=' (at pp.c:7279)
              ID: name='__nesc_result' (at pp.c:7279)
              FuncCall:  (at None)
                ID: name='AdcStreamP__SingleChannel__default__configureSingle' (at pp.c:7279)
                ExprList:  (at pp.c:7279)
                  ID: name='arg_0x101c4bb90' (at pp.c:7279)
                  ID: name='config' (at pp.c:7279)
          Break:  (at pp.c:7281)
      Return:  (at pp.c:7287)
        ID: name='__nesc_result' (at pp.c:7287)
  FuncDef:  (at pp.c:7292)
    Decl: name='AdcStreamP__AdcConfigure__default__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:7292)
      FuncDecl: quals=None (at pp.c:7292)
        ParamList:  (at pp.c:7292)
          Decl: name='c', quals=[], storage=[] (at pp.c:7292)
            TypeDecl: declname='c', quals=[] (at pp.c:7292)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:7292)
          TypeDecl: declname='AdcStreamP__AdcConfigure__default__getConfiguration', quals=['const'] (at pp.c:7292)
            IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    Compound:  (at pp.c:7293)
      Return:  (at pp.c:7294)
        UnaryOp: op='&' (at pp.c:7294)
          ID: name='AdcStreamP__defaultConfig' (at pp.c:7294)
  FuncDef:  (at pp.c:7298)
    Decl: name='AdcStreamP__AdcConfigure__getConfiguration', quals=[], storage=['static', 'inline'] (at pp.c:7298)
      FuncDecl: quals=None (at pp.c:7298)
        ParamList:  (at pp.c:7298)
          Decl: name='arg_0x101c49318', quals=[], storage=[] (at pp.c:7298)
            TypeDecl: declname='arg_0x101c49318', quals=[] (at pp.c:7298)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcStreamP__AdcConfigure__getConfiguration', quals=[] (at pp.c:7298)
          IdentifierType: names=['AdcStreamP__AdcConfigure__adc_config_t'] (at None)
    Compound:  (at pp.c:7298)
      Decl: name='__nesc_result', quals=['const'], storage=[] (at pp.c:7300)
        PtrDecl: quals=[] (at pp.c:7300)
          TypeDecl: declname='__nesc_result', quals=['const'] (at pp.c:7300)
            Struct: name='__nesc_unnamed4267', packed=False (at pp.c:7300)
      Switch:  (at pp.c:7304)
        ID: name='arg_0x101c49318' (at pp.c:7304)
        Compound:  (at pp.c:7304)
          Case:  (at pp.c:7306)
            ID: name='AdcReadStreamClientC__0__RSCLIENT' (at pp.c:7306)
            Assignment: op='=' (at pp.c:7308)
              ID: name='__nesc_result' (at pp.c:7308)
              FuncCall:  (at None)
                ID: name='Msp430InternalVoltageP__AdcConfigure__getConfiguration' (at pp.c:7308)
          Break:  (at pp.c:7310)
          Default:  (at pp.c:7312)
            Assignment: op='=' (at pp.c:7314)
              ID: name='__nesc_result' (at pp.c:7314)
              FuncCall:  (at None)
                ID: name='AdcStreamP__AdcConfigure__default__getConfiguration' (at pp.c:7314)
                ExprList:  (at pp.c:7314)
                  ID: name='arg_0x101c49318' (at pp.c:7314)
          Break:  (at pp.c:7316)
      Return:  (at pp.c:7322)
        ID: name='__nesc_result' (at pp.c:7322)
  FuncDef:  (at pp.c:7327)
    Decl: name='AdcStreamP__readStreamDone__postTask', quals=[], storage=['static', 'inline'] (at pp.c:7327)
      FuncDecl: quals=None (at pp.c:7327)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__readStreamDone__postTask', quals=[] (at pp.c:7327)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:7327)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:7329)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:7329)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:7333)
        ID: name='__nesc_result' (at pp.c:7333)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:7333)
          ExprList:  (at pp.c:7333)
            ID: name='AdcStreamP__readStreamDone' (at pp.c:7333)
      Return:  (at pp.c:7337)
        ID: name='__nesc_result' (at pp.c:7337)
  FuncDef:  (at pp.c:7342)
    Decl: name='TransformAlarmC__1__Alarm__startAt', quals=[], storage=['inline', 'static'] (at pp.c:7342)
      FuncDecl: quals=None (at pp.c:7342)
        ParamList:  (at pp.c:7342)
          Decl: name='t0', quals=[], storage=[] (at pp.c:7342)
            TypeDecl: declname='t0', quals=[] (at pp.c:7342)
              IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:7342)
            TypeDecl: declname='dt', quals=[] (at pp.c:7342)
              IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
        TypeDecl: declname='TransformAlarmC__1__Alarm__startAt', quals=[] (at pp.c:7342)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7343)
      Compound:  (at pp.c:7345)
        Assignment: op='=' (at pp.c:7346)
          ID: name='TransformAlarmC__1__m_t0' (at pp.c:7346)
          ID: name='t0' (at pp.c:7346)
        Assignment: op='=' (at pp.c:7347)
          ID: name='TransformAlarmC__1__m_dt' (at pp.c:7347)
          ID: name='dt' (at pp.c:7347)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__1__set_alarm' (at pp.c:7348)
  FuncDef:  (at pp.c:7353)
    Decl: name='AdcStreamP__Alarm__startAt', quals=[], storage=['static', 'inline'] (at pp.c:7353)
      FuncDecl: quals=None (at pp.c:7353)
        ParamList:  (at pp.c:7353)
          Decl: name='t0', quals=[], storage=[] (at pp.c:7353)
            TypeDecl: declname='t0', quals=[] (at pp.c:7353)
              IdentifierType: names=['AdcStreamP__Alarm__size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:7353)
            TypeDecl: declname='dt', quals=[] (at pp.c:7353)
              IdentifierType: names=['AdcStreamP__Alarm__size_type'] (at None)
        TypeDecl: declname='AdcStreamP__Alarm__startAt', quals=[] (at pp.c:7353)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7353)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__1__Alarm__startAt' (at pp.c:7355)
        ExprList:  (at pp.c:7355)
          ID: name='t0' (at pp.c:7355)
          ID: name='dt' (at pp.c:7355)
  FuncDef:  (at pp.c:7360)
    Decl: name='AdcStreamP__nextAlarm', quals=[], storage=['inline', 'static'] (at pp.c:7360)
      FuncDecl: quals=None (at pp.c:7360)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__nextAlarm', quals=[] (at pp.c:7360)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7362)
      FuncCall:  (at None)
        ID: name='AdcStreamP__Alarm__startAt' (at pp.c:7363)
        ExprList:  (at pp.c:7363)
          ID: name='AdcStreamP__now' (at pp.c:7363)
          ID: name='AdcStreamP__period' (at pp.c:7363)
      Assignment: op='+=' (at pp.c:7364)
        ID: name='AdcStreamP__now' (at pp.c:7364)
        ID: name='AdcStreamP__period' (at pp.c:7364)
  FuncDef:  (at pp.c:7368)
    Decl: name='Msp430TimerCapComP__1__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:7368)
      FuncDecl: quals=None (at pp.c:7368)
        ParamList:  (at pp.c:7368)
          Decl: name='x', quals=[], storage=[] (at pp.c:7368)
            TypeDecl: declname='x', quals=[] (at pp.c:7368)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Compare__setEvent', quals=[] (at pp.c:7368)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7369)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:7370)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='372U' (at pp.c:7370)
        ID: name='x' (at pp.c:7370)
  FuncDef:  (at pp.c:7374)
    Decl: name='Msp430Adc12ImplP__CompareA1__setEvent', quals=[], storage=['static', 'inline'] (at pp.c:7374)
      FuncDecl: quals=None (at pp.c:7374)
        ParamList:  (at pp.c:7374)
          Decl: name='time', quals=[], storage=[] (at pp.c:7374)
            TypeDecl: declname='time', quals=[] (at pp.c:7374)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__CompareA1__setEvent', quals=[] (at pp.c:7374)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7374)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__1__Compare__setEvent' (at pp.c:7376)
        ExprList:  (at pp.c:7376)
          ID: name='time' (at pp.c:7376)
  FuncDef:  (at pp.c:7381)
    Decl: name='Msp430TimerCapComP__0__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:7381)
      FuncDecl: quals=None (at pp.c:7381)
        ParamList:  (at pp.c:7381)
          Decl: name='x', quals=[], storage=[] (at pp.c:7381)
            TypeDecl: declname='x', quals=[] (at pp.c:7381)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Compare__setEvent', quals=[] (at pp.c:7381)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7382)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:7383)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='370U' (at pp.c:7383)
        ID: name='x' (at pp.c:7383)
  FuncDef:  (at pp.c:7387)
    Decl: name='Msp430Adc12ImplP__CompareA0__setEvent', quals=[], storage=['static', 'inline'] (at pp.c:7387)
      FuncDecl: quals=None (at pp.c:7387)
        ParamList:  (at pp.c:7387)
          Decl: name='time', quals=[], storage=[] (at pp.c:7387)
            TypeDecl: declname='time', quals=[] (at pp.c:7387)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__CompareA0__setEvent', quals=[] (at pp.c:7387)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7387)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__0__Compare__setEvent' (at pp.c:7389)
        ExprList:  (at pp.c:7389)
          ID: name='time' (at pp.c:7389)
  FuncDef:  (at pp.c:7394)
    Decl: name='Msp430TimerCapComP__0__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:7394)
      FuncDecl: quals=None (at pp.c:7394)
        ParamList:  (at pp.c:7394)
          Decl: name='x', quals=[], storage=[] (at pp.c:7394)
            TypeDecl: declname='x', quals=[] (at pp.c:7394)
              IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__CC2int', quals=[] (at pp.c:7394)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:7396)
      Decl: name='c', quals=[], storage=[] (at pp.c:7405)
        TypeDecl: declname='c', quals=[] (at pp.c:7405)
          Union: name='Msp430TimerCapComP__0____nesc_unnamed4313', packed=False (at pp.c:7398)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:7400)
                IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:7402)
                IdentifierType: names=['uint16_t'] (at None)
        ExprList:  (at pp.c:7405)
          Assignment: op='=' (at pp.c:7405)
            StructRef: type='.' (at pp.c:7405)
              ID: name='f' (at pp.c:7405)
            ID: name='x' (at pp.c:7405)
      Return:  (at pp.c:7408)
        StructRef: type='.' (at pp.c:7408)
          ID: name='c' (at pp.c:7408)
          ID: name='t' (at pp.c:7408)
  FuncDef:  (at pp.c:7412)
    Decl: name='Msp430TimerCapComP__0__Control__setControl', quals=[], storage=['inline', 'static'] (at pp.c:7412)
      FuncDecl: quals=None (at pp.c:7412)
        ParamList:  (at pp.c:7412)
          Decl: name='x', quals=[], storage=[] (at pp.c:7412)
            TypeDecl: declname='x', quals=[] (at pp.c:7412)
              IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Control__setControl', quals=[] (at pp.c:7412)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7413)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:7414)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='354U' (at pp.c:7414)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__0__CC2int' (at pp.c:7414)
          ExprList:  (at pp.c:7414)
            ID: name='x' (at pp.c:7414)
  FuncDef:  (at pp.c:7418)
    Decl: name='Msp430Adc12ImplP__ControlA0__setControl', quals=[], storage=['static', 'inline'] (at pp.c:7418)
      FuncDecl: quals=None (at pp.c:7418)
        ParamList:  (at pp.c:7418)
          Decl: name='control', quals=[], storage=[] (at pp.c:7418)
            TypeDecl: declname='control', quals=[] (at pp.c:7418)
              IdentifierType: names=['msp430_compare_control_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__ControlA0__setControl', quals=[] (at pp.c:7418)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7418)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__0__Control__setControl' (at pp.c:7420)
        ExprList:  (at pp.c:7420)
          ID: name='control' (at pp.c:7420)
  FuncDef:  (at pp.c:7425)
    Decl: name='Msp430TimerP__0__Timer__setInputDivider', quals=[], storage=['inline', 'static'] (at pp.c:7425)
      FuncDecl: quals=None (at pp.c:7425)
        ParamList:  (at pp.c:7425)
          Decl: name='inputDivider', quals=[], storage=[] (at pp.c:7425)
            TypeDecl: declname='inputDivider', quals=[] (at pp.c:7425)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Timer__setInputDivider', quals=[] (at pp.c:7425)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7426)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:7427)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='352U' (at pp.c:7427)
        BinaryOp: op='|' (at None)
          BinaryOp: op='&' (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:7427)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='352U' (at pp.c:7427)
            UnaryOp: op='~' (at pp.c:7427)
              BinaryOp: op='|' (at pp.c:7427)
                Constant: type='int', value='0x0040' (at pp.c:7427)
                Constant: type='int', value='0x0080' (at pp.c:7427)
          BinaryOp: op='&' (at pp.c:7427)
            BinaryOp: op='<<' (at pp.c:7427)
              ID: name='inputDivider' (at pp.c:7427)
              Constant: type='int', value='6' (at pp.c:7427)
            BinaryOp: op='|' (at pp.c:7427)
              Constant: type='int', value='0x0040' (at pp.c:7427)
              Constant: type='int', value='0x0080' (at pp.c:7427)
  FuncDef:  (at pp.c:7431)
    Decl: name='Msp430Adc12ImplP__TimerA__setInputDivider', quals=[], storage=['static', 'inline'] (at pp.c:7431)
      FuncDecl: quals=None (at pp.c:7431)
        ParamList:  (at pp.c:7431)
          Decl: name='inputDivider', quals=[], storage=[] (at pp.c:7431)
            TypeDecl: declname='inputDivider', quals=[] (at pp.c:7431)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__TimerA__setInputDivider', quals=[] (at pp.c:7431)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7431)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Timer__setInputDivider' (at pp.c:7433)
        ExprList:  (at pp.c:7433)
          ID: name='inputDivider' (at pp.c:7433)
  FuncDef:  (at pp.c:7438)
    Decl: name='Msp430TimerP__0__Timer__setClockSource', quals=[], storage=['inline', 'static'] (at pp.c:7438)
      FuncDecl: quals=None (at pp.c:7438)
        ParamList:  (at pp.c:7438)
          Decl: name='clockSource', quals=[], storage=[] (at pp.c:7438)
            TypeDecl: declname='clockSource', quals=[] (at pp.c:7438)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Timer__setClockSource', quals=[] (at pp.c:7438)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7439)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:7440)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='352U' (at pp.c:7440)
        BinaryOp: op='|' (at None)
          BinaryOp: op='&' (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:7440)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='352U' (at pp.c:7440)
            UnaryOp: op='~' (at pp.c:7440)
              BinaryOp: op='|' (at pp.c:7440)
                Constant: type='int', value='256U' (at pp.c:7440)
                Constant: type='int', value='512U' (at pp.c:7440)
          BinaryOp: op='&' (at pp.c:7440)
            BinaryOp: op='<<' (at pp.c:7440)
              ID: name='clockSource' (at pp.c:7440)
              Constant: type='int', value='8' (at pp.c:7440)
            BinaryOp: op='|' (at pp.c:7440)
              Constant: type='int', value='256U' (at pp.c:7440)
              Constant: type='int', value='512U' (at pp.c:7440)
  FuncDef:  (at pp.c:7444)
    Decl: name='Msp430Adc12ImplP__TimerA__setClockSource', quals=[], storage=['static', 'inline'] (at pp.c:7444)
      FuncDecl: quals=None (at pp.c:7444)
        ParamList:  (at pp.c:7444)
          Decl: name='clockSource', quals=[], storage=[] (at pp.c:7444)
            TypeDecl: declname='clockSource', quals=[] (at pp.c:7444)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__TimerA__setClockSource', quals=[] (at pp.c:7444)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7444)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Timer__setClockSource' (at pp.c:7446)
        ExprList:  (at pp.c:7446)
          ID: name='clockSource' (at pp.c:7446)
  FuncDef:  (at pp.c:7451)
    Decl: name='Msp430TimerP__0__Timer__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:7451)
      FuncDecl: quals=None (at pp.c:7451)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Timer__disableEvents', quals=[] (at pp.c:7451)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7452)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:7453)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='352U' (at pp.c:7453)
        UnaryOp: op='~' (at pp.c:7453)
          Constant: type='int', value='2U' (at pp.c:7453)
  FuncDef:  (at pp.c:7457)
    Decl: name='Msp430Adc12ImplP__TimerA__disableEvents', quals=[], storage=['static', 'inline'] (at pp.c:7457)
      FuncDecl: quals=None (at pp.c:7457)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__TimerA__disableEvents', quals=[] (at pp.c:7457)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7457)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Timer__disableEvents' (at pp.c:7459)
  FuncDef:  (at pp.c:7464)
    Decl: name='Msp430TimerP__0__Timer__clear', quals=[], storage=['inline', 'static'] (at pp.c:7464)
      FuncDecl: quals=None (at pp.c:7464)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Timer__clear', quals=[] (at pp.c:7464)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7465)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:7466)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='352U' (at pp.c:7466)
        Constant: type='int', value='4U' (at pp.c:7466)
  FuncDef:  (at pp.c:7470)
    Decl: name='Msp430Adc12ImplP__TimerA__clear', quals=[], storage=['static', 'inline'] (at pp.c:7470)
      FuncDecl: quals=None (at pp.c:7470)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__TimerA__clear', quals=[] (at pp.c:7470)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7470)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Timer__clear' (at pp.c:7472)
  FuncDef:  (at pp.c:7477)
    Decl: name='Msp430Adc12ImplP__prepareTimerA', quals=[], storage=['inline', 'static'] (at pp.c:7477)
      FuncDecl: quals=None (at pp.c:7477)
        ParamList:  (at pp.c:7477)
          Decl: name='interval', quals=[], storage=[] (at pp.c:7477)
            TypeDecl: declname='interval', quals=[] (at pp.c:7477)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='csSAMPCON', quals=[], storage=[] (at pp.c:7477)
            TypeDecl: declname='csSAMPCON', quals=[] (at pp.c:7477)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='cdSAMPCON', quals=[], storage=[] (at pp.c:7477)
            TypeDecl: declname='cdSAMPCON', quals=[] (at pp.c:7477)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__prepareTimerA', quals=[] (at pp.c:7477)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7478)
      Decl: name='ccResetSHI', quals=[], storage=[] (at pp.c:7480)
        TypeDecl: declname='ccResetSHI', quals=[] (at pp.c:7480)
          IdentifierType: names=['msp430_compare_control_t'] (at None)
        ExprList:  (at pp.c:7481)
          Assignment: op='=' (at pp.c:7481)
            StructRef: type='.' (at pp.c:7481)
              ID: name='ccifg' (at pp.c:7481)
            Constant: type='int', value='0' (at pp.c:7481)
          Assignment: op='=' (at pp.c:7481)
            StructRef: type='.' (at pp.c:7481)
              ID: name='cov' (at pp.c:7481)
            Constant: type='int', value='0' (at pp.c:7481)
          Assignment: op='=' (at pp.c:7481)
            StructRef: type='.' (at pp.c:7481)
              ID: name='out' (at pp.c:7481)
            Constant: type='int', value='0' (at pp.c:7481)
          Assignment: op='=' (at pp.c:7481)
            StructRef: type='.' (at pp.c:7481)
              ID: name='cci' (at pp.c:7481)
            Constant: type='int', value='0' (at pp.c:7481)
          Assignment: op='=' (at pp.c:7481)
            StructRef: type='.' (at pp.c:7481)
              ID: name='ccie' (at pp.c:7481)
            Constant: type='int', value='0' (at pp.c:7481)
          Assignment: op='=' (at pp.c:7482)
            StructRef: type='.' (at pp.c:7482)
              ID: name='outmod' (at pp.c:7482)
            Constant: type='int', value='0' (at pp.c:7482)
          Assignment: op='=' (at pp.c:7482)
            StructRef: type='.' (at pp.c:7482)
              ID: name='cap' (at pp.c:7482)
            Constant: type='int', value='0' (at pp.c:7482)
          Assignment: op='=' (at pp.c:7482)
            StructRef: type='.' (at pp.c:7482)
              ID: name='clld' (at pp.c:7482)
            Constant: type='int', value='0' (at pp.c:7482)
          Assignment: op='=' (at pp.c:7482)
            StructRef: type='.' (at pp.c:7482)
              ID: name='scs' (at pp.c:7482)
            Constant: type='int', value='0' (at pp.c:7482)
          Assignment: op='=' (at pp.c:7482)
            StructRef: type='.' (at pp.c:7482)
              ID: name='ccis' (at pp.c:7482)
            Constant: type='int', value='0' (at pp.c:7482)
          Assignment: op='=' (at pp.c:7482)
            StructRef: type='.' (at pp.c:7482)
              ID: name='cm' (at pp.c:7482)
            Constant: type='int', value='0' (at pp.c:7482)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__TimerA__setMode' (at pp.c:7484)
        ExprList:  (at pp.c:7484)
          ID: name='MSP430TIMER_STOP_MODE' (at pp.c:7484)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__TimerA__clear' (at pp.c:7485)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__TimerA__disableEvents' (at pp.c:7486)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__TimerA__setClockSource' (at pp.c:7487)
        ExprList:  (at pp.c:7487)
          ID: name='csSAMPCON' (at pp.c:7487)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__TimerA__setInputDivider' (at pp.c:7488)
        ExprList:  (at pp.c:7488)
          ID: name='cdSAMPCON' (at pp.c:7488)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__ControlA0__setControl' (at pp.c:7489)
        ExprList:  (at pp.c:7489)
          ID: name='ccResetSHI' (at pp.c:7489)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__CompareA0__setEvent' (at pp.c:7490)
        ExprList:  (at pp.c:7490)
          BinaryOp: op='-' (at pp.c:7490)
            ID: name='interval' (at pp.c:7490)
            Constant: type='int', value='1' (at pp.c:7490)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__CompareA1__setEvent' (at pp.c:7491)
        ExprList:  (at pp.c:7491)
          BinaryOp: op='/' (at pp.c:7491)
            BinaryOp: op='-' (at pp.c:7491)
              ID: name='interval' (at pp.c:7491)
              Constant: type='int', value='1' (at pp.c:7491)
            Constant: type='int', value='2' (at pp.c:7491)
  FuncDef:  (at pp.c:7495)
    Decl: name='HplAdc12P__HplAdc12__setIEFlags', quals=[], storage=['inline', 'static'] (at pp.c:7495)
      FuncDecl: quals=None (at pp.c:7495)
        ParamList:  (at pp.c:7495)
          Decl: name='mask', quals=[], storage=[] (at pp.c:7495)
            TypeDecl: declname='mask', quals=[] (at pp.c:7495)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__setIEFlags', quals=[] (at pp.c:7495)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7497)
      Assignment: op='=' (at pp.c:7499)
        ID: name='HplAdc12P__ADC12IE' (at pp.c:7499)
        ID: name='mask' (at pp.c:7499)
  FuncDef:  (at pp.c:7503)
    Decl: name='Msp430Adc12ImplP__HplAdc12__setIEFlags', quals=[], storage=['static', 'inline'] (at pp.c:7503)
      FuncDecl: quals=None (at pp.c:7503)
        ParamList:  (at pp.c:7503)
          Decl: name='mask', quals=[], storage=[] (at pp.c:7503)
            TypeDecl: declname='mask', quals=[] (at pp.c:7503)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__setIEFlags', quals=[] (at pp.c:7503)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7503)
      FuncCall:  (at None)
        ID: name='HplAdc12P__HplAdc12__setIEFlags' (at pp.c:7505)
        ExprList:  (at pp.c:7505)
          ID: name='mask' (at pp.c:7505)
  FuncDef:  (at pp.c:7510)
    Decl: name='HplAdc12P__adc12memctl2int', quals=[], storage=['inline', 'static'] (at pp.c:7510)
      FuncDecl: quals=None (at pp.c:7510)
        ParamList:  (at pp.c:7510)
          Decl: name='x', quals=[], storage=[] (at pp.c:7510)
            TypeDecl: declname='x', quals=[] (at pp.c:7510)
              IdentifierType: names=['adc12memctl_t'] (at None)
        TypeDecl: declname='HplAdc12P__adc12memctl2int', quals=[] (at pp.c:7510)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:7512)
      Decl: name='c', quals=[], storage=[] (at pp.c:7521)
        TypeDecl: declname='c', quals=[] (at pp.c:7521)
          Union: name='__nesc_unnamed4314', packed=False (at pp.c:7514)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:7516)
                IdentifierType: names=['adc12memctl_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:7518)
                IdentifierType: names=['uint8_t'] (at None)
        ExprList:  (at pp.c:7521)
          Assignment: op='=' (at pp.c:7521)
            StructRef: type='.' (at pp.c:7521)
              ID: name='f' (at pp.c:7521)
            ID: name='x' (at pp.c:7521)
      Return:  (at pp.c:7524)
        StructRef: type='.' (at pp.c:7524)
          ID: name='c' (at pp.c:7524)
          ID: name='t' (at pp.c:7524)
  FuncDef:  (at pp.c:7528)
    Decl: name='HplAdc12P__HplAdc12__setMCtl', quals=[], storage=['inline', 'static'] (at pp.c:7528)
      FuncDecl: quals=None (at pp.c:7528)
        ParamList:  (at pp.c:7528)
          Decl: name='i', quals=[], storage=[] (at pp.c:7528)
            TypeDecl: declname='i', quals=[] (at pp.c:7528)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='memCtl', quals=[], storage=[] (at pp.c:7528)
            TypeDecl: declname='memCtl', quals=[] (at pp.c:7528)
              IdentifierType: names=['adc12memctl_t'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__setMCtl', quals=[] (at pp.c:7528)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7530)
      Assignment: op='=' (at None)
        ArrayRef:  (at None)
          Cast:  (at None)
            Typename: quals=[] (at None)
              PtrDecl: quals=[] (at pp.c:7531)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['char'] (at None)
            Constant: type='int', value='0x0080' (at pp.c:7531)
          ID: name='i' (at pp.c:7531)
        FuncCall:  (at None)
          ID: name='HplAdc12P__adc12memctl2int' (at pp.c:7531)
          ExprList:  (at pp.c:7531)
            ID: name='memCtl' (at pp.c:7531)
  FuncDef:  (at pp.c:7535)
    Decl: name='Msp430Adc12ImplP__HplAdc12__setMCtl', quals=[], storage=['static', 'inline'] (at pp.c:7535)
      FuncDecl: quals=None (at pp.c:7535)
        ParamList:  (at pp.c:7535)
          Decl: name='idx', quals=[], storage=[] (at pp.c:7535)
            TypeDecl: declname='idx', quals=[] (at pp.c:7535)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='memControl', quals=[], storage=[] (at pp.c:7535)
            TypeDecl: declname='memControl', quals=[] (at pp.c:7535)
              IdentifierType: names=['adc12memctl_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__setMCtl', quals=[] (at pp.c:7535)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7535)
      FuncCall:  (at None)
        ID: name='HplAdc12P__HplAdc12__setMCtl' (at pp.c:7537)
        ExprList:  (at pp.c:7537)
          ID: name='idx' (at pp.c:7537)
          ID: name='memControl' (at pp.c:7537)
  FuncDef:  (at pp.c:7542)
    Decl: name='HplAdc12P__adc12ctl1cast2int', quals=[], storage=['inline', 'static'] (at pp.c:7542)
      FuncDecl: quals=None (at pp.c:7542)
        ParamList:  (at pp.c:7542)
          Decl: name='x', quals=[], storage=[] (at pp.c:7542)
            TypeDecl: declname='x', quals=[] (at pp.c:7542)
              IdentifierType: names=['adc12ctl1_t'] (at None)
        TypeDecl: declname='HplAdc12P__adc12ctl1cast2int', quals=[] (at pp.c:7542)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:7544)
      Decl: name='c', quals=[], storage=[] (at pp.c:7553)
        TypeDecl: declname='c', quals=[] (at pp.c:7553)
          Union: name='__nesc_unnamed4315', packed=False (at pp.c:7546)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:7548)
                IdentifierType: names=['adc12ctl1_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:7550)
                IdentifierType: names=['uint16_t'] (at None)
        ExprList:  (at pp.c:7553)
          Assignment: op='=' (at pp.c:7553)
            StructRef: type='.' (at pp.c:7553)
              ID: name='f' (at pp.c:7553)
            ID: name='x' (at pp.c:7553)
      Return:  (at pp.c:7556)
        StructRef: type='.' (at pp.c:7556)
          ID: name='c' (at pp.c:7556)
          ID: name='t' (at pp.c:7556)
  FuncDef:  (at pp.c:7564)
    Decl: name='HplAdc12P__HplAdc12__setCtl1', quals=[], storage=['inline', 'static'] (at pp.c:7564)
      FuncDecl: quals=None (at pp.c:7564)
        ParamList:  (at pp.c:7564)
          Decl: name='control1', quals=[], storage=[] (at pp.c:7564)
            TypeDecl: declname='control1', quals=[] (at pp.c:7564)
              IdentifierType: names=['adc12ctl1_t'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__setCtl1', quals=[] (at pp.c:7564)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7566)
      Assignment: op='=' (at pp.c:7567)
        ID: name='HplAdc12P__ADC12CTL1' (at pp.c:7567)
        FuncCall:  (at None)
          ID: name='HplAdc12P__adc12ctl1cast2int' (at pp.c:7567)
          ExprList:  (at pp.c:7567)
            ID: name='control1' (at pp.c:7567)
  FuncDef:  (at pp.c:7571)
    Decl: name='Msp430Adc12ImplP__HplAdc12__setCtl1', quals=[], storage=['static', 'inline'] (at pp.c:7571)
      FuncDecl: quals=None (at pp.c:7571)
        ParamList:  (at pp.c:7571)
          Decl: name='control1', quals=[], storage=[] (at pp.c:7571)
            TypeDecl: declname='control1', quals=[] (at pp.c:7571)
              IdentifierType: names=['adc12ctl1_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__setCtl1', quals=[] (at pp.c:7571)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7571)
      FuncCall:  (at None)
        ID: name='HplAdc12P__HplAdc12__setCtl1' (at pp.c:7573)
        ExprList:  (at pp.c:7573)
          ID: name='control1' (at pp.c:7573)
  FuncDef:  (at pp.c:7578)
    Decl: name='Msp430Adc12ImplP__HplAdc12__setCtl0', quals=[], storage=['static', 'inline'] (at pp.c:7578)
      FuncDecl: quals=None (at pp.c:7578)
        ParamList:  (at pp.c:7578)
          Decl: name='control0', quals=[], storage=[] (at pp.c:7578)
            TypeDecl: declname='control0', quals=[] (at pp.c:7578)
              IdentifierType: names=['adc12ctl0_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__setCtl0', quals=[] (at pp.c:7578)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7578)
      FuncCall:  (at None)
        ID: name='HplAdc12P__HplAdc12__setCtl0' (at pp.c:7580)
        ExprList:  (at pp.c:7580)
          ID: name='control0' (at pp.c:7580)
  FuncDef:  (at pp.c:7585)
    Decl: name='Msp430Adc12ImplP__HplAdc12__getCtl0', quals=[], storage=['static', 'inline'] (at pp.c:7585)
      FuncDecl: quals=None (at pp.c:7585)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__getCtl0', quals=[] (at pp.c:7585)
          IdentifierType: names=['adc12ctl0_t'] (at None)
    Compound:  (at pp.c:7585)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:7587)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:7587)
          Struct: name='__nesc_unnamed4254', packed=False (at pp.c:7587)
      Assignment: op='=' (at pp.c:7591)
        ID: name='__nesc_result' (at pp.c:7591)
        FuncCall:  (at None)
          ID: name='HplAdc12P__HplAdc12__getCtl0' (at pp.c:7591)
      Return:  (at pp.c:7595)
        ID: name='__nesc_result' (at pp.c:7595)
  FuncDef:  (at pp.c:7600)
    Decl: name='Msp430Adc12ImplP__ADCArbiterInfo__userId', quals=[], storage=['static', 'inline'] (at pp.c:7600)
      FuncDecl: quals=None (at pp.c:7600)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__ADCArbiterInfo__userId', quals=[] (at pp.c:7600)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:7600)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:7602)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:7602)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:7606)
        ID: name='__nesc_result' (at pp.c:7606)
        FuncCall:  (at None)
          ID: name='SimpleArbiterP__0__ArbiterInfo__userId' (at pp.c:7606)
      Return:  (at pp.c:7610)
        ID: name='__nesc_result' (at pp.c:7610)
  FuncDef:  (at pp.c:7615)
    Decl: name='Msp430Adc12ImplP__SingleChannel__configureMultiple', quals=[], storage=['inline', 'static'] (at pp.c:7615)
      FuncDecl: quals=None (at pp.c:7615)
        ParamList:  (at pp.c:7615)
          Decl: name='id', quals=[], storage=[] (at pp.c:7615)
            TypeDecl: declname='id', quals=[] (at pp.c:7615)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='config', quals=['const'], storage=[] (at pp.c:7616)
            PtrDecl: quals=[] (at pp.c:7616)
              TypeDecl: declname='config', quals=['const'] (at pp.c:7616)
                IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:7617)
            PtrDecl: quals=[] (at pp.c:7617)
              TypeDecl: declname='buf', quals=[] (at pp.c:7617)
                IdentifierType: names=['uint16_t'] (at None)
          Decl: name='length', quals=[], storage=[] (at pp.c:7617)
            TypeDecl: declname='length', quals=[] (at pp.c:7617)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='jiffies', quals=[], storage=[] (at pp.c:7617)
            TypeDecl: declname='jiffies', quals=[] (at pp.c:7617)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__configureMultiple', quals=[] (at pp.c:7615)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:7618)
      Decl: name='result', quals=[], storage=[] (at pp.c:7619)
        TypeDecl: declname='result', quals=[] (at pp.c:7619)
          IdentifierType: names=['error_t'] (at None)
        ID: name='ERESERVE' (at pp.c:7619)
      If:  (at pp.c:7625)
        BinaryOp: op='||' (at pp.c:7625)
          BinaryOp: op='||' (at pp.c:7625)
            BinaryOp: op='||' (at pp.c:7625)
              BinaryOp: op='||' (at pp.c:7625)
                UnaryOp: op='!' (at pp.c:7625)
                  ID: name='config' (at pp.c:7625)
                UnaryOp: op='!' (at pp.c:7625)
                  ID: name='buf' (at pp.c:7625)
              UnaryOp: op='!' (at pp.c:7625)
                ID: name='length' (at pp.c:7625)
            BinaryOp: op='==' (at pp.c:7625)
              ID: name='jiffies' (at pp.c:7625)
              Constant: type='int', value='1' (at pp.c:7625)
          BinaryOp: op='==' (at pp.c:7625)
            ID: name='jiffies' (at pp.c:7625)
            Constant: type='int', value='2' (at pp.c:7625)
        Compound:  (at pp.c:7625)
          Return:  (at pp.c:7626)
            ID: name='EINVAL' (at pp.c:7626)
      Compound:  (at pp.c:7628)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:7628)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:7628)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:7628)
        Compound:  (at pp.c:7630)
          If:  (at pp.c:7631)
            BinaryOp: op='&' (at pp.c:7631)
              ID: name='Msp430Adc12ImplP__state' (at pp.c:7631)
              ID: name='Msp430Adc12ImplP__ADC_BUSY' (at pp.c:7631)
            Compound:  (at pp.c:7632)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:7633)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:7633)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='EBUSY' (at pp.c:7635)
              Compound:  (at pp.c:7637)
                FuncCall:  (at None)
                  ID: name='__nesc_atomic_end' (at pp.c:7639)
                  ExprList:  (at pp.c:7639)
                    ID: name='__nesc_atomic' (at pp.c:7639)
                Return:  (at pp.c:7641)
                  ID: name='__nesc_temp' (at pp.c:7641)
          If:  (at pp.c:7645)
            BinaryOp: op='==' (at None)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__ADCArbiterInfo__userId' (at pp.c:7645)
              ID: name='id' (at pp.c:7645)
            Compound:  (at pp.c:7645)
              Decl: name='ctl1', quals=[], storage=[] (at pp.c:7646)
                TypeDecl: declname='ctl1', quals=[] (at pp.c:7646)
                  IdentifierType: names=['adc12ctl1_t'] (at None)
                ExprList:  (at pp.c:7647)
                  Assignment: op='=' (at pp.c:7647)
                    StructRef: type='.' (at pp.c:7647)
                      ID: name='adc12busy' (at pp.c:7647)
                    Constant: type='int', value='0' (at pp.c:7647)
                  Assignment: op='=' (at pp.c:7648)
                    StructRef: type='.' (at pp.c:7648)
                      ID: name='conseq' (at pp.c:7648)
                    TernaryOp:  (at pp.c:7648)
                      BinaryOp: op='>' (at pp.c:7648)
                        ID: name='length' (at pp.c:7648)
                        Constant: type='int', value='16' (at pp.c:7648)
                      Constant: type='int', value='3' (at pp.c:7648)
                      Constant: type='int', value='1' (at pp.c:7648)
                  Assignment: op='=' (at pp.c:7649)
                    StructRef: type='.' (at pp.c:7649)
                      ID: name='adc12ssel' (at pp.c:7649)
                    StructRef: type='->' (at pp.c:7649)
                      ID: name='config' (at pp.c:7649)
                      ID: name='adc12ssel' (at pp.c:7649)
                  Assignment: op='=' (at pp.c:7650)
                    StructRef: type='.' (at pp.c:7650)
                      ID: name='adc12div' (at pp.c:7650)
                    StructRef: type='->' (at pp.c:7650)
                      ID: name='config' (at pp.c:7650)
                      ID: name='adc12div' (at pp.c:7650)
                  Assignment: op='=' (at pp.c:7651)
                    StructRef: type='.' (at pp.c:7651)
                      ID: name='issh' (at pp.c:7651)
                    Constant: type='int', value='0' (at pp.c:7651)
                  Assignment: op='=' (at pp.c:7652)
                    StructRef: type='.' (at pp.c:7652)
                      ID: name='shp' (at pp.c:7652)
                    Constant: type='int', value='1' (at pp.c:7652)
                  Assignment: op='=' (at pp.c:7653)
                    StructRef: type='.' (at pp.c:7653)
                      ID: name='shs' (at pp.c:7653)
                    TernaryOp:  (at pp.c:7653)
                      BinaryOp: op='==' (at pp.c:7653)
                        ID: name='jiffies' (at pp.c:7653)
                        Constant: type='int', value='0' (at pp.c:7653)
                      Constant: type='int', value='0' (at pp.c:7653)
                      Constant: type='int', value='1' (at pp.c:7653)
                  Assignment: op='=' (at pp.c:7654)
                    StructRef: type='.' (at pp.c:7654)
                      ID: name='cstartadd' (at pp.c:7654)
                    Constant: type='int', value='0' (at pp.c:7654)
              Decl: name='memctl', quals=[], storage=[] (at pp.c:7656)
                TypeDecl: declname='memctl', quals=[] (at pp.c:7656)
                  IdentifierType: names=['adc12memctl_t'] (at None)
                ExprList:  (at pp.c:7657)
                  Assignment: op='=' (at pp.c:7657)
                    StructRef: type='.' (at pp.c:7657)
                      ID: name='inch' (at pp.c:7657)
                    StructRef: type='->' (at pp.c:7657)
                      ID: name='config' (at pp.c:7657)
                      ID: name='inch' (at pp.c:7657)
                  Assignment: op='=' (at pp.c:7658)
                    StructRef: type='.' (at pp.c:7658)
                      ID: name='sref' (at pp.c:7658)
                    StructRef: type='->' (at pp.c:7658)
                      ID: name='config' (at pp.c:7658)
                      ID: name='sref' (at pp.c:7658)
                  Assignment: op='=' (at pp.c:7659)
                    StructRef: type='.' (at pp.c:7659)
                      ID: name='eos' (at pp.c:7659)
                    Constant: type='int', value='0' (at pp.c:7659)
              Decl: name='i', quals=[], storage=[] (at pp.c:7661)
                TypeDecl: declname='i', quals=[] (at pp.c:7661)
                  IdentifierType: names=['uint16_t'] (at None)
              Decl: name='mask', quals=[], storage=[] (at pp.c:7663)
                TypeDecl: declname='mask', quals=[] (at pp.c:7663)
                  IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='1' (at pp.c:7663)
              Decl: name='ctl0', quals=[], storage=[] (at pp.c:7664)
                TypeDecl: declname='ctl0', quals=[] (at pp.c:7664)
                  IdentifierType: names=['adc12ctl0_t'] (at None)
                FuncCall:  (at None)
                  ID: name='Msp430Adc12ImplP__HplAdc12__getCtl0' (at pp.c:7664)
              Assignment: op='=' (at pp.c:7667)
                StructRef: type='.' (at pp.c:7667)
                  ID: name='ctl0' (at pp.c:7667)
                  ID: name='msc' (at pp.c:7667)
                TernaryOp:  (at pp.c:7667)
                  BinaryOp: op='==' (at pp.c:7667)
                    ID: name='jiffies' (at pp.c:7667)
                    Constant: type='int', value='0' (at pp.c:7667)
                  Constant: type='int', value='1' (at pp.c:7667)
                  Constant: type='int', value='0' (at pp.c:7667)
              Assignment: op='=' (at pp.c:7668)
                StructRef: type='.' (at pp.c:7668)
                  ID: name='ctl0' (at pp.c:7668)
                  ID: name='sht0' (at pp.c:7668)
                StructRef: type='->' (at pp.c:7668)
                  ID: name='config' (at pp.c:7668)
                  ID: name='sht' (at pp.c:7668)
              Assignment: op='=' (at pp.c:7669)
                StructRef: type='.' (at pp.c:7669)
                  ID: name='ctl0' (at pp.c:7669)
                  ID: name='sht1' (at pp.c:7669)
                StructRef: type='->' (at pp.c:7669)
                  ID: name='config' (at pp.c:7669)
                  ID: name='sht' (at pp.c:7669)
              Assignment: op='=' (at pp.c:7671)
                ID: name='Msp430Adc12ImplP__state' (at pp.c:7671)
                ID: name='Msp430Adc12ImplP__MULTIPLE_DATA' (at pp.c:7671)
              Assignment: op='=' (at pp.c:7672)
                ID: name='Msp430Adc12ImplP__resultBufferStart' (at pp.c:7672)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    PtrDecl: quals=[] (at pp.c:7672)
                      TypeDecl: declname=None, quals=[] (at None)
                        IdentifierType: names=['void'] (at None)
                  Constant: type='int', value='0' (at pp.c:7672)
              Assignment: op='=' (at pp.c:7673)
                ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:7673)
                ID: name='length' (at pp.c:7673)
              Assignment: op='=' (at pp.c:7674)
                ID: name='Msp430Adc12ImplP__resultBufferStart' (at pp.c:7674)
                ID: name='buf' (at pp.c:7674)
              Assignment: op='=' (at pp.c:7675)
                ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:7675)
                Constant: type='int', value='0' (at pp.c:7675)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__HplAdc12__setCtl0' (at pp.c:7676)
                ExprList:  (at pp.c:7676)
                  ID: name='ctl0' (at pp.c:7676)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__HplAdc12__setCtl1' (at pp.c:7677)
                ExprList:  (at pp.c:7677)
                  ID: name='ctl1' (at pp.c:7677)
              For:  (at pp.c:7678)
                Assignment: op='=' (at pp.c:7678)
                  ID: name='i' (at pp.c:7678)
                  Constant: type='int', value='0' (at pp.c:7678)
                BinaryOp: op='&&' (at pp.c:7678)
                  BinaryOp: op='<' (at pp.c:7678)
                    ID: name='i' (at pp.c:7678)
                    BinaryOp: op='-' (at pp.c:7678)
                      ID: name='length' (at pp.c:7678)
                      Constant: type='int', value='1' (at pp.c:7678)
                  BinaryOp: op='<' (at pp.c:7678)
                    ID: name='i' (at pp.c:7678)
                    Constant: type='int', value='15' (at pp.c:7678)
                UnaryOp: op='p++' (at pp.c:7678)
                  ID: name='i' (at pp.c:7678)
                FuncCall:  (at None)
                  ID: name='Msp430Adc12ImplP__HplAdc12__setMCtl' (at pp.c:7679)
                  ExprList:  (at pp.c:7679)
                    ID: name='i' (at pp.c:7679)
                    ID: name='memctl' (at pp.c:7679)
              Assignment: op='=' (at pp.c:7680)
                StructRef: type='.' (at pp.c:7680)
                  ID: name='memctl' (at pp.c:7680)
                  ID: name='eos' (at pp.c:7680)
                Constant: type='int', value='1' (at pp.c:7680)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__HplAdc12__setMCtl' (at pp.c:7681)
                ExprList:  (at pp.c:7681)
                  ID: name='i' (at pp.c:7681)
                  ID: name='memctl' (at pp.c:7681)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__HplAdc12__setIEFlags' (at pp.c:7682)
                ExprList:  (at pp.c:7682)
                  BinaryOp: op='<<' (at pp.c:7682)
                    ID: name='mask' (at pp.c:7682)
                    ID: name='i' (at pp.c:7682)
              If:  (at pp.c:7684)
                ID: name='jiffies' (at pp.c:7684)
                Compound:  (at pp.c:7684)
                  Assignment: op='|=' (at pp.c:7685)
                    ID: name='Msp430Adc12ImplP__state' (at pp.c:7685)
                    ID: name='Msp430Adc12ImplP__USE_TIMERA' (at pp.c:7685)
                  FuncCall:  (at None)
                    ID: name='Msp430Adc12ImplP__prepareTimerA' (at pp.c:7686)
                    ExprList:  (at pp.c:7686)
                      ID: name='jiffies' (at pp.c:7686)
                      StructRef: type='->' (at pp.c:7686)
                        ID: name='config' (at pp.c:7686)
                        ID: name='sampcon_ssel' (at pp.c:7686)
                      StructRef: type='->' (at pp.c:7686)
                        ID: name='config' (at pp.c:7686)
                        ID: name='sampcon_id' (at pp.c:7686)
              Assignment: op='=' (at pp.c:7688)
                ID: name='result' (at pp.c:7688)
                ID: name='SUCCESS' (at pp.c:7688)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:7692)
          ExprList:  (at pp.c:7692)
            ID: name='__nesc_atomic' (at pp.c:7692)
      Return:  (at pp.c:7693)
        ID: name='result' (at pp.c:7693)
  FuncDef:  (at pp.c:7697)
    Decl: name='AdcStreamP__SingleChannel__default__configureMultiple', quals=[], storage=['inline', 'static'] (at pp.c:7697)
      FuncDecl: quals=None (at pp.c:7697)
        ParamList:  (at pp.c:7697)
          Decl: name='c', quals=[], storage=[] (at pp.c:7697)
            TypeDecl: declname='c', quals=[] (at pp.c:7697)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='config', quals=['const'], storage=[] (at pp.c:7698)
            PtrDecl: quals=[] (at pp.c:7698)
              TypeDecl: declname='config', quals=['const'] (at pp.c:7698)
                IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
          Decl: name='b', quals=[], storage=[] (at pp.c:7698)
            ArrayDecl:  (at pp.c:7698)
              TypeDecl: declname='b', quals=[] (at pp.c:7698)
                IdentifierType: names=['uint16_t'] (at None)
          Decl: name='numSamples', quals=[], storage=[] (at pp.c:7699)
            TypeDecl: declname='numSamples', quals=[] (at pp.c:7699)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='jiffies', quals=[], storage=[] (at pp.c:7699)
            TypeDecl: declname='jiffies', quals=[] (at pp.c:7699)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='AdcStreamP__SingleChannel__default__configureMultiple', quals=[] (at pp.c:7697)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:7700)
      Return:  (at pp.c:7701)
        ID: name='FAIL' (at pp.c:7701)
  FuncDef:  (at pp.c:7705)
    Decl: name='AdcStreamP__SingleChannel__configureMultiple', quals=[], storage=['static', 'inline'] (at pp.c:7705)
      FuncDecl: quals=None (at pp.c:7705)
        ParamList:  (at pp.c:7705)
          Decl: name='arg_0x101c4bb90', quals=[], storage=[] (at pp.c:7705)
            TypeDecl: declname='arg_0x101c4bb90', quals=[] (at pp.c:7705)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='config', quals=['const'], storage=[] (at pp.c:7705)
            PtrDecl: quals=[] (at pp.c:7705)
              TypeDecl: declname='config', quals=['const'] (at pp.c:7705)
                IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
          Decl: name='buffer', quals=[], storage=[] (at pp.c:7705)
            PtrDecl: quals=[] (at pp.c:7705)
              TypeDecl: declname='buffer', quals=[] (at pp.c:7705)
                IdentifierType: names=['uint16_t'] (at None)
          Decl: name='numSamples', quals=[], storage=[] (at pp.c:7705)
            TypeDecl: declname='numSamples', quals=[] (at pp.c:7705)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='jiffies', quals=[], storage=[] (at pp.c:7705)
            TypeDecl: declname='jiffies', quals=[] (at pp.c:7705)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='AdcStreamP__SingleChannel__configureMultiple', quals=[] (at pp.c:7705)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:7705)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:7707)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:7707)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:7711)
        ID: name='arg_0x101c4bb90' (at pp.c:7711)
        Compound:  (at pp.c:7711)
          Case:  (at pp.c:7713)
            ID: name='AdcReadStreamClientC__0__RSCLIENT' (at pp.c:7713)
            Assignment: op='=' (at pp.c:7715)
              ID: name='__nesc_result' (at pp.c:7715)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__SingleChannel__configureMultiple' (at pp.c:7715)
                ExprList:  (at pp.c:7715)
                  ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:7715)
                  ID: name='config' (at pp.c:7715)
                  ID: name='buffer' (at pp.c:7715)
                  ID: name='numSamples' (at pp.c:7715)
                  ID: name='jiffies' (at pp.c:7715)
          Break:  (at pp.c:7717)
          Default:  (at pp.c:7719)
            Assignment: op='=' (at pp.c:7721)
              ID: name='__nesc_result' (at pp.c:7721)
              FuncCall:  (at None)
                ID: name='AdcStreamP__SingleChannel__default__configureMultiple' (at pp.c:7721)
                ExprList:  (at pp.c:7721)
                  ID: name='arg_0x101c4bb90' (at pp.c:7721)
                  ID: name='config' (at pp.c:7721)
                  ID: name='buffer' (at pp.c:7721)
                  ID: name='numSamples' (at pp.c:7721)
                  ID: name='jiffies' (at pp.c:7721)
          Break:  (at pp.c:7723)
      Return:  (at pp.c:7729)
        ID: name='__nesc_result' (at pp.c:7729)
  FuncDef:  (at pp.c:7734)
    Decl: name='AdcStreamP__postBuffer', quals=[], storage=['inline', 'static'] (at pp.c:7734)
      FuncDecl: quals=None (at pp.c:7734)
        ParamList:  (at pp.c:7734)
          Decl: name='c', quals=[], storage=[] (at pp.c:7734)
            TypeDecl: declname='c', quals=[] (at pp.c:7734)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:7734)
            PtrDecl: quals=[] (at pp.c:7734)
              TypeDecl: declname='buf', quals=[] (at pp.c:7734)
                IdentifierType: names=['uint16_t'] (at None)
          Decl: name='n', quals=[], storage=[] (at pp.c:7734)
            TypeDecl: declname='n', quals=[] (at pp.c:7734)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='AdcStreamP__postBuffer', quals=[] (at pp.c:7734)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:7735)
      If:  (at pp.c:7736)
        BinaryOp: op='<' (at pp.c:7736)
          ID: name='n' (at pp.c:7736)
          UnaryOp: op='sizeof' (at pp.c:7736)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                Struct: name='AdcStreamP__list_entry_t', packed=False (at pp.c:7736)
        Compound:  (at pp.c:7736)
          Return:  (at pp.c:7737)
            ID: name='ESIZE' (at pp.c:7737)
      Compound:  (at pp.c:7740)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:7740)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:7740)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:7740)
        Compound:  (at pp.c:7741)
          Decl: name='newEntry', quals=[], storage=[] (at pp.c:7742)
            PtrDecl: quals=[] (at pp.c:7742)
              TypeDecl: declname='newEntry', quals=[] (at pp.c:7742)
                Struct: name='AdcStreamP__list_entry_t', packed=False (at pp.c:7742)
            Cast:  (at None)
              Typename: quals=[] (at None)
                PtrDecl: quals=[] (at pp.c:7742)
                  TypeDecl: declname=None, quals=[] (at None)
                    Struct: name='AdcStreamP__list_entry_t', packed=False (at pp.c:7742)
              ID: name='buf' (at pp.c:7742)
          If:  (at pp.c:7744)
            UnaryOp: op='!' (at pp.c:7744)
              ArrayRef:  (at pp.c:7744)
                ID: name='AdcStreamP__bufferQueueEnd' (at pp.c:7744)
                ID: name='c' (at pp.c:7744)
            Compound:  (at pp.c:7745)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:7746)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:7746)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='FAIL' (at pp.c:7748)
              Compound:  (at pp.c:7750)
                FuncCall:  (at None)
                  ID: name='__nesc_atomic_end' (at pp.c:7752)
                  ExprList:  (at pp.c:7752)
                    ID: name='__nesc_atomic' (at pp.c:7752)
                Return:  (at pp.c:7754)
                  ID: name='__nesc_temp' (at pp.c:7754)
          Assignment: op='=' (at pp.c:7758)
            StructRef: type='->' (at pp.c:7758)
              ID: name='newEntry' (at pp.c:7758)
              ID: name='count' (at pp.c:7758)
            ID: name='n' (at pp.c:7758)
          Assignment: op='=' (at pp.c:7759)
            StructRef: type='->' (at pp.c:7759)
              ID: name='newEntry' (at pp.c:7759)
              ID: name='next' (at pp.c:7759)
            Cast:  (at None)
              Typename: quals=[] (at None)
                PtrDecl: quals=[] (at pp.c:7759)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['void'] (at None)
              Constant: type='int', value='0' (at pp.c:7759)
          Assignment: op='=' (at pp.c:7760)
            UnaryOp: op='*' (at pp.c:7760)
              ArrayRef:  (at pp.c:7760)
                ID: name='AdcStreamP__bufferQueueEnd' (at pp.c:7760)
                ID: name='c' (at pp.c:7760)
            ID: name='newEntry' (at pp.c:7760)
          Assignment: op='=' (at pp.c:7761)
            ArrayRef:  (at pp.c:7761)
              ID: name='AdcStreamP__bufferQueueEnd' (at pp.c:7761)
              ID: name='c' (at pp.c:7761)
            UnaryOp: op='&' (at pp.c:7761)
              StructRef: type='->' (at pp.c:7761)
                ID: name='newEntry' (at pp.c:7761)
                ID: name='next' (at pp.c:7761)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:7764)
          ExprList:  (at pp.c:7764)
            ID: name='__nesc_atomic' (at pp.c:7764)
      Return:  (at pp.c:7765)
        ID: name='SUCCESS' (at pp.c:7765)
  FuncDef:  (at pp.c:7769)
    Decl: name='AdcStreamP__readStreamFail__postTask', quals=[], storage=['static', 'inline'] (at pp.c:7769)
      FuncDecl: quals=None (at pp.c:7769)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__readStreamFail__postTask', quals=[] (at pp.c:7769)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:7769)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:7771)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:7771)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:7775)
        ID: name='__nesc_result' (at pp.c:7775)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:7775)
          ExprList:  (at pp.c:7775)
            ID: name='AdcStreamP__readStreamFail' (at pp.c:7775)
      Return:  (at pp.c:7779)
        ID: name='__nesc_result' (at pp.c:7779)
  FuncDef:  (at pp.c:7784)
    Decl: name='AdcP__SingleChannel__default__getData', quals=[], storage=['inline', 'static'] (at pp.c:7784)
      FuncDecl: quals=None (at pp.c:7784)
        ParamList:  (at pp.c:7784)
          Decl: name='client', quals=[], storage=[] (at pp.c:7784)
            TypeDecl: declname='client', quals=[] (at pp.c:7784)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__SingleChannel__default__getData', quals=[] (at pp.c:7784)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:7785)
      Return:  (at pp.c:7786)
        ID: name='EINVAL' (at pp.c:7786)
  FuncDef:  (at pp.c:7790)
    Decl: name='AdcP__SingleChannel__getData', quals=[], storage=['static', 'inline'] (at pp.c:7790)
      FuncDecl: quals=None (at pp.c:7790)
        ParamList:  (at pp.c:7790)
          Decl: name='arg_0x101977910', quals=[], storage=[] (at pp.c:7790)
            TypeDecl: declname='arg_0x101977910', quals=[] (at pp.c:7790)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__SingleChannel__getData', quals=[] (at pp.c:7790)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:7790)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:7792)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:7792)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:7796)
        ID: name='arg_0x101977910' (at pp.c:7796)
        Compound:  (at pp.c:7796)
          Case:  (at pp.c:7798)
            ID: name='AdcReadClientC__0__CLIENT' (at pp.c:7798)
            Assignment: op='=' (at pp.c:7800)
              ID: name='__nesc_result' (at pp.c:7800)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__SingleChannel__getData' (at pp.c:7800)
                ExprList:  (at pp.c:7800)
                  ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:7800)
          Break:  (at pp.c:7802)
          Case:  (at pp.c:7804)
            ID: name='AdcReadNowClientC__0__CLIENT' (at pp.c:7804)
            Assignment: op='=' (at pp.c:7806)
              ID: name='__nesc_result' (at pp.c:7806)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__SingleChannel__getData' (at pp.c:7806)
                ExprList:  (at pp.c:7806)
                  ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:7806)
          Break:  (at pp.c:7808)
          Default:  (at pp.c:7810)
            Assignment: op='=' (at pp.c:7812)
              ID: name='__nesc_result' (at pp.c:7812)
              FuncCall:  (at None)
                ID: name='AdcP__SingleChannel__default__getData' (at pp.c:7812)
                ExprList:  (at pp.c:7812)
                  ID: name='arg_0x101977910' (at pp.c:7812)
          Break:  (at pp.c:7814)
      Return:  (at pp.c:7820)
        ID: name='__nesc_result' (at pp.c:7820)
  FuncDef:  (at pp.c:7825)
    Decl: name='HplMsp430GeneralIOP__31__IO__clr', quals=[], storage=['inline', 'static'] (at pp.c:7825)
      FuncDecl: quals=None (at pp.c:7825)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__31__IO__clr', quals=[] (at pp.c:7825)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7827)
      Compound:  (at pp.c:7829)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:7829)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:7829)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:7829)
        Assignment: op='&=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:7831)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:7831)
          UnaryOp: op='~' (at pp.c:7831)
            BinaryOp: op='<<' (at pp.c:7831)
              Constant: type='int', value='0x01' (at pp.c:7831)
              Constant: type='int', value='7' (at pp.c:7831)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:7833)
          ExprList:  (at pp.c:7833)
            ID: name='__nesc_atomic' (at pp.c:7833)
  FuncDef:  (at pp.c:7837)
    Decl: name='Msp430GpioC__2__HplGeneralIO__clr', quals=[], storage=['static', 'inline'] (at pp.c:7837)
      FuncDecl: quals=None (at pp.c:7837)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__2__HplGeneralIO__clr', quals=[] (at pp.c:7837)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7837)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__31__IO__clr' (at pp.c:7839)
  FuncDef:  (at pp.c:7844)
    Decl: name='Msp430GpioC__2__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:7844)
      FuncDecl: quals=None (at pp.c:7844)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__2__GeneralIO__clr', quals=[] (at pp.c:7844)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7846)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__2__HplGeneralIO__clr' (at pp.c:7848)
  FuncDef:  (at pp.c:7852)
    Decl: name='LedsP__Led2__clr', quals=[], storage=['static', 'inline'] (at pp.c:7852)
      FuncDecl: quals=None (at pp.c:7852)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led2__clr', quals=[] (at pp.c:7852)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7852)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__2__GeneralIO__clr' (at pp.c:7854)
  FuncDef:  (at pp.c:7859)
    Decl: name='LedsP__Leds__led2On', quals=[], storage=['inline', 'static'] (at pp.c:7859)
      FuncDecl: quals=None (at pp.c:7859)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Leds__led2On', quals=[] (at pp.c:7859)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7861)
      FuncCall:  (at None)
        ID: name='LedsP__Led2__clr' (at pp.c:7862)
  FuncDef:  (at pp.c:7869)
    Decl: name='SenseC__Leds__led2On', quals=[], storage=['static', 'inline'] (at pp.c:7869)
      FuncDecl: quals=None (at pp.c:7869)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SenseC__Leds__led2On', quals=[] (at pp.c:7869)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7869)
      FuncCall:  (at None)
        ID: name='LedsP__Leds__led2On' (at pp.c:7871)
  FuncDef:  (at pp.c:7876)
    Decl: name='LedsP__Leds__led2Off', quals=[], storage=['inline', 'static'] (at pp.c:7876)
      FuncDecl: quals=None (at pp.c:7876)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Leds__led2Off', quals=[] (at pp.c:7876)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7878)
      FuncCall:  (at None)
        ID: name='LedsP__Led2__set' (at pp.c:7879)
  FuncDef:  (at pp.c:7886)
    Decl: name='SenseC__Leds__led2Off', quals=[], storage=['static', 'inline'] (at pp.c:7886)
      FuncDecl: quals=None (at pp.c:7886)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SenseC__Leds__led2Off', quals=[] (at pp.c:7886)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7886)
      FuncCall:  (at None)
        ID: name='LedsP__Leds__led2Off' (at pp.c:7888)
  FuncDef:  (at pp.c:7893)
    Decl: name='HplMsp430GeneralIOP__27__IO__clr', quals=[], storage=['inline', 'static'] (at pp.c:7893)
      FuncDecl: quals=None (at pp.c:7893)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__27__IO__clr', quals=[] (at pp.c:7893)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7895)
      Compound:  (at pp.c:7897)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:7897)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:7897)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:7897)
        Assignment: op='&=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:7899)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:7899)
          UnaryOp: op='~' (at pp.c:7899)
            BinaryOp: op='<<' (at pp.c:7899)
              Constant: type='int', value='0x01' (at pp.c:7899)
              Constant: type='int', value='3' (at pp.c:7899)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:7901)
          ExprList:  (at pp.c:7901)
            ID: name='__nesc_atomic' (at pp.c:7901)
  FuncDef:  (at pp.c:7905)
    Decl: name='Msp430GpioC__1__HplGeneralIO__clr', quals=[], storage=['static', 'inline'] (at pp.c:7905)
      FuncDecl: quals=None (at pp.c:7905)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__clr', quals=[] (at pp.c:7905)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7905)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__27__IO__clr' (at pp.c:7907)
  FuncDef:  (at pp.c:7912)
    Decl: name='Msp430GpioC__1__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:7912)
      FuncDecl: quals=None (at pp.c:7912)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__GeneralIO__clr', quals=[] (at pp.c:7912)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7914)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__HplGeneralIO__clr' (at pp.c:7916)
  FuncDef:  (at pp.c:7920)
    Decl: name='LedsP__Led1__clr', quals=[], storage=['static', 'inline'] (at pp.c:7920)
      FuncDecl: quals=None (at pp.c:7920)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led1__clr', quals=[] (at pp.c:7920)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7920)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__GeneralIO__clr' (at pp.c:7922)
  FuncDef:  (at pp.c:7927)
    Decl: name='LedsP__Leds__led1On', quals=[], storage=['inline', 'static'] (at pp.c:7927)
      FuncDecl: quals=None (at pp.c:7927)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Leds__led1On', quals=[] (at pp.c:7927)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7929)
      FuncCall:  (at None)
        ID: name='LedsP__Led1__clr' (at pp.c:7930)
  FuncDef:  (at pp.c:7937)
    Decl: name='SenseC__Leds__led1On', quals=[], storage=['static', 'inline'] (at pp.c:7937)
      FuncDecl: quals=None (at pp.c:7937)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SenseC__Leds__led1On', quals=[] (at pp.c:7937)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7937)
      FuncCall:  (at None)
        ID: name='LedsP__Leds__led1On' (at pp.c:7939)
  FuncDef:  (at pp.c:7944)
    Decl: name='LedsP__Leds__led1Off', quals=[], storage=['inline', 'static'] (at pp.c:7944)
      FuncDecl: quals=None (at pp.c:7944)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Leds__led1Off', quals=[] (at pp.c:7944)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7946)
      FuncCall:  (at None)
        ID: name='LedsP__Led1__set' (at pp.c:7947)
  FuncDef:  (at pp.c:7954)
    Decl: name='SenseC__Leds__led1Off', quals=[], storage=['static', 'inline'] (at pp.c:7954)
      FuncDecl: quals=None (at pp.c:7954)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SenseC__Leds__led1Off', quals=[] (at pp.c:7954)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7954)
      FuncCall:  (at None)
        ID: name='LedsP__Leds__led1Off' (at pp.c:7956)
  FuncDef:  (at pp.c:7961)
    Decl: name='HplMsp430GeneralIOP__24__IO__clr', quals=[], storage=['inline', 'static'] (at pp.c:7961)
      FuncDecl: quals=None (at pp.c:7961)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__24__IO__clr', quals=[] (at pp.c:7961)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7963)
      Compound:  (at pp.c:7965)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:7965)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:7965)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:7965)
        Assignment: op='&=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:7967)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:7967)
          UnaryOp: op='~' (at pp.c:7967)
            BinaryOp: op='<<' (at pp.c:7967)
              Constant: type='int', value='0x01' (at pp.c:7967)
              Constant: type='int', value='0' (at pp.c:7967)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:7969)
          ExprList:  (at pp.c:7969)
            ID: name='__nesc_atomic' (at pp.c:7969)
  FuncDef:  (at pp.c:7973)
    Decl: name='Msp430GpioC__0__HplGeneralIO__clr', quals=[], storage=['static', 'inline'] (at pp.c:7973)
      FuncDecl: quals=None (at pp.c:7973)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__clr', quals=[] (at pp.c:7973)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7973)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__24__IO__clr' (at pp.c:7975)
  FuncDef:  (at pp.c:7980)
    Decl: name='Msp430GpioC__0__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:7980)
      FuncDecl: quals=None (at pp.c:7980)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__GeneralIO__clr', quals=[] (at pp.c:7980)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7982)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__0__HplGeneralIO__clr' (at pp.c:7984)
  FuncDef:  (at pp.c:7988)
    Decl: name='LedsP__Led0__clr', quals=[], storage=['static', 'inline'] (at pp.c:7988)
      FuncDecl: quals=None (at pp.c:7988)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led0__clr', quals=[] (at pp.c:7988)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7988)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__0__GeneralIO__clr' (at pp.c:7990)
  FuncDef:  (at pp.c:7995)
    Decl: name='LedsP__Leds__led0On', quals=[], storage=['inline', 'static'] (at pp.c:7995)
      FuncDecl: quals=None (at pp.c:7995)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Leds__led0On', quals=[] (at pp.c:7995)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:7997)
      FuncCall:  (at None)
        ID: name='LedsP__Led0__clr' (at pp.c:7998)
  FuncDef:  (at pp.c:8005)
    Decl: name='SenseC__Leds__led0On', quals=[], storage=['static', 'inline'] (at pp.c:8005)
      FuncDecl: quals=None (at pp.c:8005)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SenseC__Leds__led0On', quals=[] (at pp.c:8005)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8005)
      FuncCall:  (at None)
        ID: name='LedsP__Leds__led0On' (at pp.c:8007)
  FuncDef:  (at pp.c:8012)
    Decl: name='LedsP__Leds__led0Off', quals=[], storage=['inline', 'static'] (at pp.c:8012)
      FuncDecl: quals=None (at pp.c:8012)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Leds__led0Off', quals=[] (at pp.c:8012)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8014)
      FuncCall:  (at None)
        ID: name='LedsP__Led0__set' (at pp.c:8015)
  FuncDef:  (at pp.c:8022)
    Decl: name='SenseC__Leds__led0Off', quals=[], storage=['static', 'inline'] (at pp.c:8022)
      FuncDecl: quals=None (at pp.c:8022)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SenseC__Leds__led0Off', quals=[] (at pp.c:8022)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8022)
      FuncCall:  (at None)
        ID: name='LedsP__Leds__led0Off' (at pp.c:8024)
  FuncDef:  (at pp.c:8029)
    Decl: name='SimpleArbiterP__0__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:8029)
      FuncDecl: quals=None (at pp.c:8029)
        ParamList:  (at pp.c:8029)
          Decl: name='id', quals=[], storage=[] (at pp.c:8029)
            TypeDecl: declname='id', quals=[] (at pp.c:8029)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__Resource__default__granted', quals=[] (at pp.c:8029)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8031)
  FuncDef:  (at pp.c:8035)
    Decl: name='SimpleArbiterP__0__Resource__granted', quals=[], storage=['static', 'inline'] (at pp.c:8035)
      FuncDecl: quals=None (at pp.c:8035)
        ParamList:  (at pp.c:8035)
          Decl: name='arg_0x101b0e158', quals=[], storage=[] (at pp.c:8035)
            TypeDecl: declname='arg_0x101b0e158', quals=[] (at pp.c:8035)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__Resource__granted', quals=[] (at pp.c:8035)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8035)
      Switch:  (at pp.c:8037)
        ID: name='arg_0x101b0e158' (at pp.c:8037)
        Compound:  (at pp.c:8037)
          Case:  (at pp.c:8039)
            ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:8039)
            FuncCall:  (at None)
              ID: name='Msp430RefVoltArbiterImplP__AdcResource__granted' (at pp.c:8041)
              ExprList:  (at pp.c:8041)
                ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:8041)
          Break:  (at pp.c:8043)
          Case:  (at pp.c:8045)
            ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:8045)
            FuncCall:  (at None)
              ID: name='Msp430RefVoltArbiterImplP__AdcResource__granted' (at pp.c:8047)
              ExprList:  (at pp.c:8047)
                ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:8047)
          Break:  (at pp.c:8049)
          Case:  (at pp.c:8051)
            ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:8051)
            FuncCall:  (at None)
              ID: name='Msp430RefVoltArbiterImplP__AdcResource__granted' (at pp.c:8053)
              ExprList:  (at pp.c:8053)
                ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:8053)
          Break:  (at pp.c:8055)
          Default:  (at pp.c:8057)
            FuncCall:  (at None)
              ID: name='SimpleArbiterP__0__Resource__default__granted' (at pp.c:8059)
              ExprList:  (at pp.c:8059)
                ID: name='arg_0x101b0e158' (at pp.c:8059)
          Break:  (at pp.c:8061)
  FuncDef:  (at pp.c:8068)
    Decl: name='SimpleArbiterP__0__ResourceConfigure__default__configure', quals=[], storage=['inline', 'static'] (at pp.c:8068)
      FuncDecl: quals=None (at pp.c:8068)
        ParamList:  (at pp.c:8068)
          Decl: name='id', quals=[], storage=[] (at pp.c:8068)
            TypeDecl: declname='id', quals=[] (at pp.c:8068)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__ResourceConfigure__default__configure', quals=[] (at pp.c:8068)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8070)
  FuncDef:  (at pp.c:8074)
    Decl: name='SimpleArbiterP__0__ResourceConfigure__configure', quals=[], storage=['static', 'inline'] (at pp.c:8074)
      FuncDecl: quals=None (at pp.c:8074)
        ParamList:  (at pp.c:8074)
          Decl: name='arg_0x101b0c868', quals=[], storage=[] (at pp.c:8074)
            TypeDecl: declname='arg_0x101b0c868', quals=[] (at pp.c:8074)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__ResourceConfigure__configure', quals=[] (at pp.c:8074)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8074)
      FuncCall:  (at None)
        ID: name='SimpleArbiterP__0__ResourceConfigure__default__configure' (at pp.c:8076)
        ExprList:  (at pp.c:8076)
          ID: name='arg_0x101b0c868' (at pp.c:8076)
  FuncDef:  (at pp.c:8081)
    Decl: name='SimpleArbiterP__0__grantedTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:8081)
      FuncDecl: quals=None (at pp.c:8081)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__grantedTask__runTask', quals=[] (at pp.c:8081)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8083)
      Compound:  (at pp.c:8084)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:8084)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:8084)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:8084)
        Compound:  (at pp.c:8086)
          Assignment: op='=' (at pp.c:8087)
            ID: name='SimpleArbiterP__0__resId' (at pp.c:8087)
            ID: name='SimpleArbiterP__0__reqResId' (at pp.c:8087)
          Assignment: op='=' (at pp.c:8088)
            ID: name='SimpleArbiterP__0__state' (at pp.c:8088)
            ID: name='SimpleArbiterP__0__RES_BUSY' (at pp.c:8088)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:8091)
          ExprList:  (at pp.c:8091)
            ID: name='__nesc_atomic' (at pp.c:8091)
      FuncCall:  (at None)
        ID: name='SimpleArbiterP__0__ResourceConfigure__configure' (at pp.c:8092)
        ExprList:  (at pp.c:8092)
          ID: name='SimpleArbiterP__0__resId' (at pp.c:8092)
      FuncCall:  (at None)
        ID: name='SimpleArbiterP__0__Resource__granted' (at pp.c:8093)
        ExprList:  (at pp.c:8093)
          ID: name='SimpleArbiterP__0__resId' (at pp.c:8093)
  FuncDef:  (at pp.c:8097)
    Decl: name='Msp430Adc12ConfAlertC__0__ConfUp__getConfiguration', quals=[], storage=['static', 'inline'] (at pp.c:8097)
      FuncDecl: quals=None (at pp.c:8097)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ConfAlertC__0__ConfUp__getConfiguration', quals=[] (at pp.c:8097)
          IdentifierType: names=['Msp430Adc12ConfAlertC__0__ConfUp__adc_config_t'] (at None)
    Compound:  (at pp.c:8097)
      Decl: name='__nesc_result', quals=['const'], storage=[] (at pp.c:8099)
        PtrDecl: quals=[] (at pp.c:8099)
          TypeDecl: declname='__nesc_result', quals=['const'] (at pp.c:8099)
            Struct: name='__nesc_unnamed4267', packed=False (at pp.c:8099)
      Assignment: op='=' (at pp.c:8103)
        ID: name='__nesc_result' (at pp.c:8103)
        FuncCall:  (at None)
          ID: name='Msp430InternalVoltageP__AdcConfigure__getConfiguration' (at pp.c:8103)
      Return:  (at pp.c:8107)
        ID: name='__nesc_result' (at pp.c:8107)
  FuncDef:  (at pp.c:8112)
    Decl: name='Msp430Adc12ConfAlertC__0__ConfSub__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:8112)
      FuncDecl: quals=None (at pp.c:8112)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        PtrDecl: quals=[] (at pp.c:8112)
          TypeDecl: declname='Msp430Adc12ConfAlertC__0__ConfSub__getConfiguration', quals=['const'] (at pp.c:8112)
            IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    Compound:  (at pp.c:8113)
      Return:  (at pp.c:8114)
        FuncCall:  (at None)
          ID: name='Msp430Adc12ConfAlertC__0__ConfUp__getConfiguration' (at pp.c:8114)
  FuncDef:  (at pp.c:8118)
    Decl: name='Msp430Adc12ConfAlertC__1__ConfUp__getConfiguration', quals=[], storage=['static', 'inline'] (at pp.c:8118)
      FuncDecl: quals=None (at pp.c:8118)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ConfAlertC__1__ConfUp__getConfiguration', quals=[] (at pp.c:8118)
          IdentifierType: names=['Msp430Adc12ConfAlertC__1__ConfUp__adc_config_t'] (at None)
    Compound:  (at pp.c:8118)
      Decl: name='__nesc_result', quals=['const'], storage=[] (at pp.c:8120)
        PtrDecl: quals=[] (at pp.c:8120)
          TypeDecl: declname='__nesc_result', quals=['const'] (at pp.c:8120)
            Struct: name='__nesc_unnamed4267', packed=False (at pp.c:8120)
      Assignment: op='=' (at pp.c:8124)
        ID: name='__nesc_result' (at pp.c:8124)
        FuncCall:  (at None)
          ID: name='Msp430InternalVoltageP__AdcConfigure__getConfiguration' (at pp.c:8124)
      Return:  (at pp.c:8128)
        ID: name='__nesc_result' (at pp.c:8128)
  FuncDef:  (at pp.c:8133)
    Decl: name='Msp430Adc12ConfAlertC__1__ConfSub__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:8133)
      FuncDecl: quals=None (at pp.c:8133)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        PtrDecl: quals=[] (at pp.c:8133)
          TypeDecl: declname='Msp430Adc12ConfAlertC__1__ConfSub__getConfiguration', quals=['const'] (at pp.c:8133)
            IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    Compound:  (at pp.c:8134)
      Return:  (at pp.c:8135)
        FuncCall:  (at None)
          ID: name='Msp430Adc12ConfAlertC__1__ConfUp__getConfiguration' (at pp.c:8135)
  FuncDef:  (at pp.c:8139)
    Decl: name='Msp430Adc12ConfAlertC__2__ConfUp__getConfiguration', quals=[], storage=['static', 'inline'] (at pp.c:8139)
      FuncDecl: quals=None (at pp.c:8139)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ConfAlertC__2__ConfUp__getConfiguration', quals=[] (at pp.c:8139)
          IdentifierType: names=['Msp430Adc12ConfAlertC__2__ConfUp__adc_config_t'] (at None)
    Compound:  (at pp.c:8139)
      Decl: name='__nesc_result', quals=['const'], storage=[] (at pp.c:8141)
        PtrDecl: quals=[] (at pp.c:8141)
          TypeDecl: declname='__nesc_result', quals=['const'] (at pp.c:8141)
            Struct: name='__nesc_unnamed4267', packed=False (at pp.c:8141)
      Assignment: op='=' (at pp.c:8145)
        ID: name='__nesc_result' (at pp.c:8145)
        FuncCall:  (at None)
          ID: name='Msp430InternalVoltageP__AdcConfigure__getConfiguration' (at pp.c:8145)
      Return:  (at pp.c:8149)
        ID: name='__nesc_result' (at pp.c:8149)
  FuncDef:  (at pp.c:8154)
    Decl: name='Msp430Adc12ConfAlertC__2__ConfSub__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:8154)
      FuncDecl: quals=None (at pp.c:8154)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        PtrDecl: quals=[] (at pp.c:8154)
          TypeDecl: declname='Msp430Adc12ConfAlertC__2__ConfSub__getConfiguration', quals=['const'] (at pp.c:8154)
            IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    Compound:  (at pp.c:8155)
      Return:  (at pp.c:8156)
        FuncCall:  (at None)
          ID: name='Msp430Adc12ConfAlertC__2__ConfUp__getConfiguration' (at pp.c:8156)
  FuncDef:  (at pp.c:8161)
    Decl: name='Msp430RefVoltArbiterImplP__Config__default__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:8161)
      FuncDecl: quals=None (at pp.c:8161)
        ParamList:  (at pp.c:8161)
          Decl: name='client', quals=[], storage=[] (at pp.c:8161)
            TypeDecl: declname='client', quals=[] (at pp.c:8161)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:8160)
          TypeDecl: declname='Msp430RefVoltArbiterImplP__Config__default__getConfiguration', quals=['const'] (at pp.c:8161)
            IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    Compound:  (at pp.c:8162)
      Return:  (at pp.c:8163)
        UnaryOp: op='&' (at pp.c:8163)
          ID: name='Msp430RefVoltArbiterImplP__defaultConfig' (at pp.c:8163)
  FuncDef:  (at pp.c:8167)
    Decl: name='Msp430RefVoltArbiterImplP__Config__getConfiguration', quals=[], storage=['static', 'inline'] (at pp.c:8167)
      FuncDecl: quals=None (at pp.c:8167)
        ParamList:  (at pp.c:8167)
          Decl: name='arg_0x101ba9af8', quals=[], storage=[] (at pp.c:8167)
            TypeDecl: declname='arg_0x101ba9af8', quals=[] (at pp.c:8167)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__Config__getConfiguration', quals=[] (at pp.c:8167)
          IdentifierType: names=['Msp430RefVoltArbiterImplP__Config__adc_config_t'] (at None)
    Compound:  (at pp.c:8167)
      Decl: name='__nesc_result', quals=['const'], storage=[] (at pp.c:8169)
        PtrDecl: quals=[] (at pp.c:8169)
          TypeDecl: declname='__nesc_result', quals=['const'] (at pp.c:8169)
            Struct: name='__nesc_unnamed4267', packed=False (at pp.c:8169)
      Switch:  (at pp.c:8173)
        ID: name='arg_0x101ba9af8' (at pp.c:8173)
        Compound:  (at pp.c:8173)
          Case:  (at pp.c:8175)
            ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:8175)
            Assignment: op='=' (at pp.c:8177)
              ID: name='__nesc_result' (at pp.c:8177)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ConfAlertC__0__ConfSub__getConfiguration' (at pp.c:8177)
          Break:  (at pp.c:8179)
          Case:  (at pp.c:8181)
            ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:8181)
            Assignment: op='=' (at pp.c:8183)
              ID: name='__nesc_result' (at pp.c:8183)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ConfAlertC__1__ConfSub__getConfiguration' (at pp.c:8183)
          Break:  (at pp.c:8185)
          Case:  (at pp.c:8187)
            ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:8187)
            Assignment: op='=' (at pp.c:8189)
              ID: name='__nesc_result' (at pp.c:8189)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ConfAlertC__2__ConfSub__getConfiguration' (at pp.c:8189)
          Break:  (at pp.c:8191)
          Default:  (at pp.c:8193)
            Assignment: op='=' (at pp.c:8195)
              ID: name='__nesc_result' (at pp.c:8195)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__Config__default__getConfiguration' (at pp.c:8195)
                ExprList:  (at pp.c:8195)
                  ID: name='arg_0x101ba9af8' (at pp.c:8195)
          Break:  (at pp.c:8197)
      Return:  (at pp.c:8203)
        ID: name='__nesc_result' (at pp.c:8203)
  FuncDef:  (at pp.c:8208)
    Decl: name='SimpleArbiterP__0__ResourceRequested__default__requested', quals=[], storage=['inline', 'static'] (at pp.c:8208)
      FuncDecl: quals=None (at pp.c:8208)
        ParamList:  (at pp.c:8208)
          Decl: name='id', quals=[], storage=[] (at pp.c:8208)
            TypeDecl: declname='id', quals=[] (at pp.c:8208)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__ResourceRequested__default__requested', quals=[] (at pp.c:8208)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8210)
  FuncDef:  (at pp.c:8214)
    Decl: name='SimpleArbiterP__0__ResourceRequested__requested', quals=[], storage=['static', 'inline'] (at pp.c:8214)
      FuncDecl: quals=None (at pp.c:8214)
        ParamList:  (at pp.c:8214)
          Decl: name='arg_0x101b0d2f0', quals=[], storage=[] (at pp.c:8214)
            TypeDecl: declname='arg_0x101b0d2f0', quals=[] (at pp.c:8214)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__ResourceRequested__requested', quals=[] (at pp.c:8214)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8214)
      FuncCall:  (at None)
        ID: name='SimpleArbiterP__0__ResourceRequested__default__requested' (at pp.c:8216)
        ExprList:  (at pp.c:8216)
          ID: name='arg_0x101b0d2f0' (at pp.c:8216)
  FuncDef:  (at pp.c:8221)
    Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__enqueue', quals=[], storage=['inline', 'static'] (at pp.c:8221)
      FuncDecl: quals=None (at pp.c:8221)
        ParamList:  (at pp.c:8221)
          Decl: name='id', quals=[], storage=[] (at pp.c:8221)
            TypeDecl: declname='id', quals=[] (at pp.c:8221)
              IdentifierType: names=['resource_client_id_t'] (at None)
        TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__enqueue', quals=[] (at pp.c:8221)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:8223)
      Compound:  (at pp.c:8226)
        If:  (at pp.c:8227)
          UnaryOp: op='!' (at None)
            FuncCall:  (at None)
              ID: name='RoundRobinResourceQueueC__0__RoundRobinQueue__isEnqueued' (at pp.c:8227)
              ExprList:  (at pp.c:8227)
                ID: name='id' (at pp.c:8227)
          Compound:  (at pp.c:8227)
            Assignment: op='|=' (at pp.c:8228)
              ArrayRef:  (at pp.c:8228)
                ID: name='RoundRobinResourceQueueC__0__resQ' (at pp.c:8228)
                BinaryOp: op='/' (at pp.c:8228)
                  ID: name='id' (at pp.c:8228)
                  Constant: type='int', value='8' (at pp.c:8228)
              BinaryOp: op='<<' (at pp.c:8228)
                Constant: type='int', value='1' (at pp.c:8228)
                BinaryOp: op='%' (at pp.c:8228)
                  ID: name='id' (at pp.c:8228)
                  Constant: type='int', value='8' (at pp.c:8228)
            Compound:  (at pp.c:8229)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:8230)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:8230)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='SUCCESS' (at pp.c:8232)
              Return:  (at pp.c:8235)
                ID: name='__nesc_temp' (at pp.c:8235)
        Compound:  (at pp.c:8239)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:8240)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:8240)
              IdentifierType: names=['char', 'unsigned'] (at None)
            ID: name='EBUSY' (at pp.c:8242)
          Return:  (at pp.c:8245)
            ID: name='__nesc_temp' (at pp.c:8245)
  FuncDef:  (at pp.c:8251)
    Decl: name='SimpleArbiterP__0__Queue__enqueue', quals=[], storage=['static', 'inline'] (at pp.c:8251)
      FuncDecl: quals=None (at pp.c:8251)
        ParamList:  (at pp.c:8251)
          Decl: name='id', quals=[], storage=[] (at pp.c:8251)
            TypeDecl: declname='id', quals=[] (at pp.c:8251)
              IdentifierType: names=['resource_client_id_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__Queue__enqueue', quals=[] (at pp.c:8251)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:8251)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:8253)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:8253)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:8257)
        ID: name='__nesc_result' (at pp.c:8257)
        FuncCall:  (at None)
          ID: name='RoundRobinResourceQueueC__0__RoundRobinQueue__enqueue' (at pp.c:8257)
          ExprList:  (at pp.c:8257)
            ID: name='id' (at pp.c:8257)
      Return:  (at pp.c:8261)
        ID: name='__nesc_result' (at pp.c:8261)
  FuncDef:  (at pp.c:8266)
    Decl: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__start', quals=[], storage=['inline', 'static'] (at pp.c:8266)
      FuncDecl: quals=None (at pp.c:8266)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_1_5V__start', quals=[] (at pp.c:8266)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:8268)
      Return:  (at pp.c:8269)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltGeneratorP__start' (at pp.c:8269)
          ExprList:  (at pp.c:8269)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_STABLE' (at pp.c:8269)
  FuncDef:  (at pp.c:8273)
    Decl: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__start', quals=[], storage=['static', 'inline'] (at pp.c:8273)
      FuncDecl: quals=None (at pp.c:8273)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_1_5V__start', quals=[] (at pp.c:8273)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:8273)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:8275)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:8275)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:8279)
        ID: name='__nesc_result' (at pp.c:8279)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__start' (at pp.c:8279)
      Return:  (at pp.c:8283)
        ID: name='__nesc_result' (at pp.c:8283)
  FuncDef:  (at pp.c:8288)
    Decl: name='VirtualizeTimerC__0__Timer__isRunning', quals=[], storage=['inline', 'static'] (at pp.c:8288)
      FuncDecl: quals=None (at pp.c:8288)
        ParamList:  (at pp.c:8288)
          Decl: name='num', quals=[], storage=[] (at pp.c:8288)
            TypeDecl: declname='num', quals=[] (at pp.c:8288)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__Timer__isRunning', quals=[] (at pp.c:8288)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:8289)
      Return:  (at pp.c:8290)
        StructRef: type='.' (at pp.c:8290)
          ArrayRef:  (at pp.c:8290)
            ID: name='VirtualizeTimerC__0__m_timers' (at pp.c:8290)
            ID: name='num' (at pp.c:8290)
          ID: name='isrunning' (at pp.c:8290)
  FuncDef:  (at pp.c:8294)
    Decl: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__isRunning', quals=[], storage=['static', 'inline'] (at pp.c:8294)
      FuncDecl: quals=None (at pp.c:8294)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__isRunning', quals=[] (at pp.c:8294)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:8294)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:8296)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:8296)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:8300)
        ID: name='__nesc_result' (at pp.c:8300)
        FuncCall:  (at None)
          ID: name='VirtualizeTimerC__0__Timer__isRunning' (at pp.c:8300)
          ExprList:  (at pp.c:8300)
            Constant: type='int', value='3U' (at pp.c:8300)
      Return:  (at pp.c:8304)
        ID: name='__nesc_result' (at pp.c:8304)
  FuncDef:  (at pp.c:8309)
    Decl: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__stop', quals=[], storage=['static', 'inline'] (at pp.c:8309)
      FuncDecl: quals=None (at pp.c:8309)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__stop', quals=[] (at pp.c:8309)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8309)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__Timer__stop' (at pp.c:8311)
        ExprList:  (at pp.c:8311)
          Constant: type='int', value='3U' (at pp.c:8311)
  FuncDef:  (at pp.c:8315)
    Decl: name='Msp430RefVoltGeneratorP__SwitchOffTimer__stop', quals=[], storage=['static', 'inline'] (at pp.c:8315)
      FuncDecl: quals=None (at pp.c:8315)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffTimer__stop', quals=[] (at pp.c:8315)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8315)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__Timer__stop' (at pp.c:8317)
        ExprList:  (at pp.c:8317)
          Constant: type='int', value='2U' (at pp.c:8317)
  FuncDef:  (at pp.c:8322)
    Decl: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__start', quals=[], storage=['inline', 'static'] (at pp.c:8322)
      FuncDecl: quals=None (at pp.c:8322)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_2_5V__start', quals=[] (at pp.c:8322)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:8324)
      Return:  (at pp.c:8325)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltGeneratorP__start' (at pp.c:8325)
          ExprList:  (at pp.c:8325)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_STABLE' (at pp.c:8325)
  FuncDef:  (at pp.c:8329)
    Decl: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__start', quals=[], storage=['static', 'inline'] (at pp.c:8329)
      FuncDecl: quals=None (at pp.c:8329)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_2_5V__start', quals=[] (at pp.c:8329)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:8329)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:8331)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:8331)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:8335)
        ID: name='__nesc_result' (at pp.c:8335)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__start' (at pp.c:8335)
      Return:  (at pp.c:8339)
        ID: name='__nesc_result' (at pp.c:8339)
  FuncDef:  (at pp.c:8344)
    Decl: name='AdcP__Read__default__readDone', quals=[], storage=['inline', 'static'] (at pp.c:8344)
      FuncDecl: quals=None (at pp.c:8344)
        ParamList:  (at pp.c:8344)
          Decl: name='client', quals=[], storage=[] (at pp.c:8344)
            TypeDecl: declname='client', quals=[] (at pp.c:8344)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:8344)
            TypeDecl: declname='result', quals=[] (at pp.c:8344)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='val', quals=[], storage=[] (at pp.c:8344)
            TypeDecl: declname='val', quals=[] (at pp.c:8344)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='AdcP__Read__default__readDone', quals=[] (at pp.c:8344)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8346)
  FuncDef:  (at pp.c:8350)
    Decl: name='AdcP__Read__readDone', quals=[], storage=['static', 'inline'] (at pp.c:8350)
      FuncDecl: quals=None (at pp.c:8350)
        ParamList:  (at pp.c:8350)
          Decl: name='arg_0x101966db0', quals=[], storage=[] (at pp.c:8350)
            TypeDecl: declname='arg_0x101966db0', quals=[] (at pp.c:8350)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:8350)
            TypeDecl: declname='result', quals=[] (at pp.c:8350)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='val', quals=[], storage=[] (at pp.c:8350)
            TypeDecl: declname='val', quals=[] (at pp.c:8350)
              IdentifierType: names=['AdcP__Read__val_t'] (at None)
        TypeDecl: declname='AdcP__Read__readDone', quals=[] (at pp.c:8350)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8350)
      Switch:  (at pp.c:8352)
        ID: name='arg_0x101966db0' (at pp.c:8352)
        Compound:  (at pp.c:8352)
          Case:  (at pp.c:8354)
            ID: name='AdcReadClientC__0__CLIENT' (at pp.c:8354)
            FuncCall:  (at None)
              ID: name='SenseC__Read__readDone' (at pp.c:8356)
              ExprList:  (at pp.c:8356)
                ID: name='result' (at pp.c:8356)
                ID: name='val' (at pp.c:8356)
          Break:  (at pp.c:8358)
          Default:  (at pp.c:8360)
            FuncCall:  (at None)
              ID: name='AdcP__Read__default__readDone' (at pp.c:8362)
              ExprList:  (at pp.c:8362)
                ID: name='arg_0x101966db0' (at pp.c:8362)
                ID: name='result' (at pp.c:8362)
                ID: name='val' (at pp.c:8362)
          Break:  (at pp.c:8364)
  FuncDef:  (at pp.c:8371)
    Decl: name='AdcP__ResourceRead__default__release', quals=[], storage=['inline', 'static'] (at pp.c:8371)
      FuncDecl: quals=None (at pp.c:8371)
        ParamList:  (at pp.c:8371)
          Decl: name='client', quals=[], storage=[] (at pp.c:8371)
            TypeDecl: declname='client', quals=[] (at pp.c:8371)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__ResourceRead__default__release', quals=[] (at pp.c:8371)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:8373)
      Return:  (at pp.c:8375)
        ID: name='FAIL' (at pp.c:8375)
  FuncDef:  (at pp.c:8379)
    Decl: name='AdcP__ResourceRead__release', quals=[], storage=['static', 'inline'] (at pp.c:8379)
      FuncDecl: quals=None (at pp.c:8379)
        ParamList:  (at pp.c:8379)
          Decl: name='arg_0x10195daa0', quals=[], storage=[] (at pp.c:8379)
            TypeDecl: declname='arg_0x10195daa0', quals=[] (at pp.c:8379)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__ResourceRead__release', quals=[] (at pp.c:8379)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:8379)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:8381)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:8381)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:8385)
        ID: name='arg_0x10195daa0' (at pp.c:8385)
        Compound:  (at pp.c:8385)
          Case:  (at pp.c:8387)
            ID: name='AdcReadClientC__0__CLIENT' (at pp.c:8387)
            Assignment: op='=' (at pp.c:8389)
              ID: name='__nesc_result' (at pp.c:8389)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__ClientResource__release' (at pp.c:8389)
                ExprList:  (at pp.c:8389)
                  ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:8389)
          Break:  (at pp.c:8391)
          Default:  (at pp.c:8393)
            Assignment: op='=' (at pp.c:8395)
              ID: name='__nesc_result' (at pp.c:8395)
              FuncCall:  (at None)
                ID: name='AdcP__ResourceRead__default__release' (at pp.c:8395)
                ExprList:  (at pp.c:8395)
                  ID: name='arg_0x10195daa0' (at pp.c:8395)
          Break:  (at pp.c:8397)
      Return:  (at pp.c:8403)
        ID: name='__nesc_result' (at pp.c:8403)
  FuncDef:  (at pp.c:8408)
    Decl: name='AdcP__readDone__runTask', quals=[], storage=['inline', 'static'] (at pp.c:8408)
      FuncDecl: quals=None (at pp.c:8408)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcP__readDone__runTask', quals=[] (at pp.c:8408)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8409)
      FuncCall:  (at None)
        ID: name='AdcP__ResourceRead__release' (at pp.c:8410)
        ExprList:  (at pp.c:8410)
          ID: name='AdcP__owner' (at pp.c:8410)
      FuncCall:  (at None)
        ID: name='AdcP__Read__readDone' (at pp.c:8411)
        ExprList:  (at pp.c:8411)
          ID: name='AdcP__owner' (at pp.c:8411)
          ID: name='SUCCESS' (at pp.c:8411)
          ID: name='AdcP__value' (at pp.c:8411)
  FuncDef:  (at pp.c:8415)
    Decl: name='AlarmToTimerC__0__Alarm__startAt', quals=[], storage=['static', 'inline'] (at pp.c:8415)
      FuncDecl: quals=None (at pp.c:8415)
        ParamList:  (at pp.c:8415)
          Decl: name='t0', quals=[], storage=[] (at pp.c:8415)
            TypeDecl: declname='t0', quals=[] (at pp.c:8415)
              IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:8415)
            TypeDecl: declname='dt', quals=[] (at pp.c:8415)
              IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Alarm__startAt', quals=[] (at pp.c:8415)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8415)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__Alarm__startAt' (at pp.c:8417)
        ExprList:  (at pp.c:8417)
          ID: name='t0' (at pp.c:8417)
          ID: name='dt' (at pp.c:8417)
  FuncDef:  (at pp.c:8422)
    Decl: name='AlarmToTimerC__0__start', quals=[], storage=['inline', 'static'] (at pp.c:8422)
      FuncDecl: quals=None (at pp.c:8422)
        ParamList:  (at pp.c:8422)
          Decl: name='t0', quals=[], storage=[] (at pp.c:8422)
            TypeDecl: declname='t0', quals=[] (at pp.c:8422)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:8422)
            TypeDecl: declname='dt', quals=[] (at pp.c:8422)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='oneshot', quals=[], storage=[] (at pp.c:8422)
            TypeDecl: declname='oneshot', quals=[] (at pp.c:8422)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__start', quals=[] (at pp.c:8422)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8423)
      Assignment: op='=' (at pp.c:8424)
        ID: name='AlarmToTimerC__0__m_dt' (at pp.c:8424)
        ID: name='dt' (at pp.c:8424)
      Assignment: op='=' (at pp.c:8425)
        ID: name='AlarmToTimerC__0__m_oneshot' (at pp.c:8425)
        ID: name='oneshot' (at pp.c:8425)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Alarm__startAt' (at pp.c:8426)
        ExprList:  (at pp.c:8426)
          ID: name='t0' (at pp.c:8426)
          ID: name='dt' (at pp.c:8426)
  FuncDef:  (at pp.c:8430)
    Decl: name='AlarmToTimerC__0__Timer__startOneShotAt', quals=[], storage=['inline', 'static'] (at pp.c:8430)
      FuncDecl: quals=None (at pp.c:8430)
        ParamList:  (at pp.c:8430)
          Decl: name='t0', quals=[], storage=[] (at pp.c:8430)
            TypeDecl: declname='t0', quals=[] (at pp.c:8430)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:8430)
            TypeDecl: declname='dt', quals=[] (at pp.c:8430)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Timer__startOneShotAt', quals=[] (at pp.c:8430)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8431)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__start' (at pp.c:8433)
        ExprList:  (at pp.c:8433)
          ID: name='t0' (at pp.c:8433)
          ID: name='dt' (at pp.c:8433)
          ID: name='TRUE' (at pp.c:8433)
  FuncDef:  (at pp.c:8437)
    Decl: name='VirtualizeTimerC__0__TimerFrom__startOneShotAt', quals=[], storage=['static', 'inline'] (at pp.c:8437)
      FuncDecl: quals=None (at pp.c:8437)
        ParamList:  (at pp.c:8437)
          Decl: name='t0', quals=[], storage=[] (at pp.c:8437)
            TypeDecl: declname='t0', quals=[] (at pp.c:8437)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:8437)
            TypeDecl: declname='dt', quals=[] (at pp.c:8437)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__startOneShotAt', quals=[] (at pp.c:8437)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8437)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Timer__startOneShotAt' (at pp.c:8439)
        ExprList:  (at pp.c:8439)
          ID: name='t0' (at pp.c:8439)
          ID: name='dt' (at pp.c:8439)
  FuncDef:  (at pp.c:8444)
    Decl: name='Msp430AlarmC__0__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:8444)
      FuncDecl: quals=None (at pp.c:8444)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Alarm__stop', quals=[] (at pp.c:8444)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8445)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430TimerControl__disableEvents' (at pp.c:8446)
  FuncDef:  (at pp.c:8450)
    Decl: name='TransformAlarmC__0__AlarmFrom__stop', quals=[], storage=['static', 'inline'] (at pp.c:8450)
      FuncDecl: quals=None (at pp.c:8450)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__AlarmFrom__stop', quals=[] (at pp.c:8450)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8450)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Alarm__stop' (at pp.c:8452)
  FuncDef:  (at pp.c:8457)
    Decl: name='TransformAlarmC__0__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:8457)
      FuncDecl: quals=None (at pp.c:8457)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Alarm__stop', quals=[] (at pp.c:8457)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8458)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__AlarmFrom__stop' (at pp.c:8459)
  FuncDef:  (at pp.c:8463)
    Decl: name='AlarmToTimerC__0__Alarm__stop', quals=[], storage=['static', 'inline'] (at pp.c:8463)
      FuncDecl: quals=None (at pp.c:8463)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Alarm__stop', quals=[] (at pp.c:8463)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8463)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__Alarm__stop' (at pp.c:8465)
  FuncDef:  (at pp.c:8470)
    Decl: name='AlarmToTimerC__0__Timer__stop', quals=[], storage=['inline', 'static'] (at pp.c:8470)
      FuncDecl: quals=None (at pp.c:8470)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Timer__stop', quals=[] (at pp.c:8470)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8471)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Alarm__stop' (at pp.c:8473)
  FuncDef:  (at pp.c:8477)
    Decl: name='VirtualizeTimerC__0__TimerFrom__stop', quals=[], storage=['static', 'inline'] (at pp.c:8477)
      FuncDecl: quals=None (at pp.c:8477)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__stop', quals=[] (at pp.c:8477)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8477)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Timer__stop' (at pp.c:8479)
  FuncDef:  (at pp.c:8484)
    Decl: name='TransformAlarmC__0__Counter__get', quals=[], storage=['static', 'inline'] (at pp.c:8484)
      FuncDecl: quals=None (at pp.c:8484)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Counter__get', quals=[] (at pp.c:8484)
          IdentifierType: names=['TransformAlarmC__0__Counter__size_type'] (at None)
    Compound:  (at pp.c:8484)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:8486)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:8486)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:8490)
        ID: name='__nesc_result' (at pp.c:8490)
        FuncCall:  (at None)
          ID: name='TransformCounterC__0__Counter__get' (at pp.c:8490)
      Return:  (at pp.c:8494)
        ID: name='__nesc_result' (at pp.c:8494)
  FuncDef:  (at pp.c:8499)
    Decl: name='TransformAlarmC__0__Alarm__getNow', quals=[], storage=['inline', 'static'] (at pp.c:8499)
      FuncDecl: quals=None (at pp.c:8499)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Alarm__getNow', quals=[] (at pp.c:8499)
          IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
    Compound:  (at pp.c:8500)
      Return:  (at pp.c:8501)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__0__Counter__get' (at pp.c:8501)
  FuncDef:  (at pp.c:8505)
    Decl: name='AlarmToTimerC__0__Alarm__getNow', quals=[], storage=['static', 'inline'] (at pp.c:8505)
      FuncDecl: quals=None (at pp.c:8505)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Alarm__getNow', quals=[] (at pp.c:8505)
          IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
    Compound:  (at pp.c:8505)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:8507)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:8507)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:8511)
        ID: name='__nesc_result' (at pp.c:8511)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__0__Alarm__getNow' (at pp.c:8511)
      Return:  (at pp.c:8515)
        ID: name='__nesc_result' (at pp.c:8515)
  FuncDef:  (at pp.c:8520)
    Decl: name='AlarmToTimerC__0__Timer__getNow', quals=[], storage=['inline', 'static'] (at pp.c:8520)
      FuncDecl: quals=None (at pp.c:8520)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Timer__getNow', quals=[] (at pp.c:8520)
          IdentifierType: names=['uint32_t'] (at None)
    Compound:  (at pp.c:8521)
      Return:  (at pp.c:8523)
        FuncCall:  (at None)
          ID: name='AlarmToTimerC__0__Alarm__getNow' (at pp.c:8523)
  FuncDef:  (at pp.c:8527)
    Decl: name='VirtualizeTimerC__0__TimerFrom__getNow', quals=[], storage=['static', 'inline'] (at pp.c:8527)
      FuncDecl: quals=None (at pp.c:8527)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__getNow', quals=[] (at pp.c:8527)
          IdentifierType: names=['uint32_t'] (at None)
    Compound:  (at pp.c:8527)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:8529)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:8529)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:8533)
        ID: name='__nesc_result' (at pp.c:8533)
        FuncCall:  (at None)
          ID: name='AlarmToTimerC__0__Timer__getNow' (at pp.c:8533)
      Return:  (at pp.c:8537)
        ID: name='__nesc_result' (at pp.c:8537)
  FuncDef:  (at pp.c:8542)
    Decl: name='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[], storage=['inline', 'static'] (at pp.c:8542)
      FuncDecl: quals=None (at pp.c:8542)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[] (at pp.c:8542)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8543)
      Decl: name='now', quals=[], storage=[] (at pp.c:8548)
        TypeDecl: declname='now', quals=[] (at pp.c:8548)
          IdentifierType: names=['uint32_t'] (at None)
        FuncCall:  (at None)
          ID: name='VirtualizeTimerC__0__TimerFrom__getNow' (at pp.c:8548)
      Decl: name='min_remaining', quals=[], storage=[] (at pp.c:8549)
        TypeDecl: declname='min_remaining', quals=[] (at pp.c:8549)
          IdentifierType: names=['int32_t'] (at None)
        BinaryOp: op='-' (at pp.c:8549)
          BinaryOp: op='<<' (at pp.c:8549)
            Constant: type='int', value='1UL' (at pp.c:8549)
            Constant: type='int', value='31' (at pp.c:8549)
          Constant: type='int', value='1' (at pp.c:8549)
      Decl: name='min_remaining_isset', quals=[], storage=[] (at pp.c:8550)
        TypeDecl: declname='min_remaining_isset', quals=[] (at pp.c:8550)
          IdentifierType: names=['bool'] (at None)
        ID: name='FALSE' (at pp.c:8550)
      Decl: name='num', quals=[], storage=[] (at pp.c:8551)
        TypeDecl: declname='num', quals=[] (at pp.c:8551)
          IdentifierType: names=['uint8_t'] (at None)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__TimerFrom__stop' (at pp.c:8553)
      For:  (at pp.c:8555)
        Assignment: op='=' (at pp.c:8555)
          ID: name='num' (at pp.c:8555)
          Constant: type='int', value='0' (at pp.c:8555)
        BinaryOp: op='<' (at pp.c:8555)
          ID: name='num' (at pp.c:8555)
          ID: name='VirtualizeTimerC__0__NUM_TIMERS' (at pp.c:8555)
        UnaryOp: op='p++' (at pp.c:8555)
          ID: name='num' (at pp.c:8555)
        Compound:  (at pp.c:8556)
          Decl: name='timer', quals=[], storage=[] (at pp.c:8557)
            PtrDecl: quals=[] (at pp.c:8557)
              TypeDecl: declname='timer', quals=[] (at pp.c:8557)
                IdentifierType: names=['VirtualizeTimerC__0__Timer_t'] (at None)
            UnaryOp: op='&' (at pp.c:8557)
              ArrayRef:  (at pp.c:8557)
                ID: name='VirtualizeTimerC__0__m_timers' (at pp.c:8557)
                ID: name='num' (at pp.c:8557)
          If:  (at pp.c:8559)
            StructRef: type='->' (at pp.c:8559)
              ID: name='timer' (at pp.c:8559)
              ID: name='isrunning' (at pp.c:8559)
            Compound:  (at pp.c:8560)
              Decl: name='elapsed', quals=[], storage=[] (at pp.c:8561)
                TypeDecl: declname='elapsed', quals=[] (at pp.c:8561)
                  IdentifierType: names=['uint32_t'] (at None)
                BinaryOp: op='-' (at pp.c:8561)
                  ID: name='now' (at pp.c:8561)
                  StructRef: type='->' (at pp.c:8561)
                    ID: name='timer' (at pp.c:8561)
                    ID: name='t0' (at pp.c:8561)
              Decl: name='remaining', quals=[], storage=[] (at pp.c:8562)
                TypeDecl: declname='remaining', quals=[] (at pp.c:8562)
                  IdentifierType: names=['int32_t'] (at None)
                BinaryOp: op='-' (at pp.c:8562)
                  StructRef: type='->' (at pp.c:8562)
                    ID: name='timer' (at pp.c:8562)
                    ID: name='dt' (at pp.c:8562)
                  ID: name='elapsed' (at pp.c:8562)
              If:  (at pp.c:8564)
                BinaryOp: op='<' (at pp.c:8564)
                  ID: name='remaining' (at pp.c:8564)
                  ID: name='min_remaining' (at pp.c:8564)
                Compound:  (at pp.c:8565)
                  Assignment: op='=' (at pp.c:8566)
                    ID: name='min_remaining' (at pp.c:8566)
                    ID: name='remaining' (at pp.c:8566)
                  Assignment: op='=' (at pp.c:8567)
                    ID: name='min_remaining_isset' (at pp.c:8567)
                    ID: name='TRUE' (at pp.c:8567)
      If:  (at pp.c:8572)
        ID: name='min_remaining_isset' (at pp.c:8572)
        Compound:  (at pp.c:8573)
          If:  (at pp.c:8574)
            BinaryOp: op='<=' (at pp.c:8574)
              ID: name='min_remaining' (at pp.c:8574)
              Constant: type='int', value='0' (at pp.c:8574)
            Compound:  (at pp.c:8574)
              FuncCall:  (at None)
                ID: name='VirtualizeTimerC__0__fireTimers' (at pp.c:8575)
                ExprList:  (at pp.c:8575)
                  ID: name='now' (at pp.c:8575)
            Compound:  (at pp.c:8577)
              FuncCall:  (at None)
                ID: name='VirtualizeTimerC__0__TimerFrom__startOneShotAt' (at pp.c:8579)
                ExprList:  (at pp.c:8579)
                  ID: name='now' (at pp.c:8579)
                  ID: name='min_remaining' (at pp.c:8579)
  FuncDef:  (at pp.c:8585)
    Decl: name='Msp430RefVoltArbiterImplP__AdcResource__default__request', quals=[], storage=['inline', 'static'] (at pp.c:8585)
      FuncDecl: quals=None (at pp.c:8585)
        ParamList:  (at pp.c:8585)
          Decl: name='client', quals=[], storage=[] (at pp.c:8585)
            TypeDecl: declname='client', quals=[] (at pp.c:8585)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__default__request', quals=[] (at pp.c:8585)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:8586)
      Return:  (at pp.c:8587)
        ID: name='FAIL' (at pp.c:8587)
  FuncDef:  (at pp.c:8591)
    Decl: name='Msp430RefVoltArbiterImplP__AdcResource__request', quals=[], storage=['static', 'inline'] (at pp.c:8591)
      FuncDecl: quals=None (at pp.c:8591)
        ParamList:  (at pp.c:8591)
          Decl: name='arg_0x101bace18', quals=[], storage=[] (at pp.c:8591)
            TypeDecl: declname='arg_0x101bace18', quals=[] (at pp.c:8591)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__request', quals=[] (at pp.c:8591)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:8591)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:8593)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:8593)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:8597)
        ID: name='arg_0x101bace18' (at pp.c:8597)
        Compound:  (at pp.c:8597)
          Case:  (at pp.c:8599)
            ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:8599)
            Assignment: op='=' (at pp.c:8601)
              ID: name='__nesc_result' (at pp.c:8601)
              FuncCall:  (at None)
                ID: name='SimpleArbiterP__0__Resource__request' (at pp.c:8601)
                ExprList:  (at pp.c:8601)
                  ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:8601)
          Break:  (at pp.c:8603)
          Case:  (at pp.c:8605)
            ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:8605)
            Assignment: op='=' (at pp.c:8607)
              ID: name='__nesc_result' (at pp.c:8607)
              FuncCall:  (at None)
                ID: name='SimpleArbiterP__0__Resource__request' (at pp.c:8607)
                ExprList:  (at pp.c:8607)
                  ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:8607)
          Break:  (at pp.c:8609)
          Case:  (at pp.c:8611)
            ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:8611)
            Assignment: op='=' (at pp.c:8613)
              ID: name='__nesc_result' (at pp.c:8613)
              FuncCall:  (at None)
                ID: name='SimpleArbiterP__0__Resource__request' (at pp.c:8613)
                ExprList:  (at pp.c:8613)
                  ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:8613)
          Break:  (at pp.c:8615)
          Default:  (at pp.c:8617)
            Assignment: op='=' (at pp.c:8619)
              ID: name='__nesc_result' (at pp.c:8619)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__AdcResource__default__request' (at pp.c:8619)
                ExprList:  (at pp.c:8619)
                  ID: name='arg_0x101bace18' (at pp.c:8619)
          Break:  (at pp.c:8621)
      Return:  (at pp.c:8627)
        ID: name='__nesc_result' (at pp.c:8627)
  FuncDef:  (at pp.c:8632)
    Decl: name='Msp430RefVoltArbiterImplP__ClientResource__request', quals=[], storage=['inline', 'static'] (at pp.c:8632)
      FuncDecl: quals=None (at pp.c:8632)
        ParamList:  (at pp.c:8632)
          Decl: name='client', quals=[], storage=[] (at pp.c:8632)
            TypeDecl: declname='client', quals=[] (at pp.c:8632)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__request', quals=[] (at pp.c:8632)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:8633)
      Return:  (at pp.c:8634)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltArbiterImplP__AdcResource__request' (at pp.c:8634)
          ExprList:  (at pp.c:8634)
            ID: name='client' (at pp.c:8634)
  FuncDef:  (at pp.c:8638)
    Decl: name='AdcP__ResourceRead__default__request', quals=[], storage=['inline', 'static'] (at pp.c:8638)
      FuncDecl: quals=None (at pp.c:8638)
        ParamList:  (at pp.c:8638)
          Decl: name='client', quals=[], storage=[] (at pp.c:8638)
            TypeDecl: declname='client', quals=[] (at pp.c:8638)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__ResourceRead__default__request', quals=[] (at pp.c:8638)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:8640)
      Return:  (at pp.c:8642)
        ID: name='FAIL' (at pp.c:8642)
  FuncDef:  (at pp.c:8646)
    Decl: name='AdcP__ResourceRead__request', quals=[], storage=['static', 'inline'] (at pp.c:8646)
      FuncDecl: quals=None (at pp.c:8646)
        ParamList:  (at pp.c:8646)
          Decl: name='arg_0x10195daa0', quals=[], storage=[] (at pp.c:8646)
            TypeDecl: declname='arg_0x10195daa0', quals=[] (at pp.c:8646)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__ResourceRead__request', quals=[] (at pp.c:8646)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:8646)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:8648)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:8648)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:8652)
        ID: name='arg_0x10195daa0' (at pp.c:8652)
        Compound:  (at pp.c:8652)
          Case:  (at pp.c:8654)
            ID: name='AdcReadClientC__0__CLIENT' (at pp.c:8654)
            Assignment: op='=' (at pp.c:8656)
              ID: name='__nesc_result' (at pp.c:8656)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__ClientResource__request' (at pp.c:8656)
                ExprList:  (at pp.c:8656)
                  ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:8656)
          Break:  (at pp.c:8658)
          Default:  (at pp.c:8660)
            Assignment: op='=' (at pp.c:8662)
              ID: name='__nesc_result' (at pp.c:8662)
              FuncCall:  (at None)
                ID: name='AdcP__ResourceRead__default__request' (at pp.c:8662)
                ExprList:  (at pp.c:8662)
                  ID: name='arg_0x10195daa0' (at pp.c:8662)
          Break:  (at pp.c:8664)
      Return:  (at pp.c:8670)
        ID: name='__nesc_result' (at pp.c:8670)
  FuncDef:  (at pp.c:8675)
    Decl: name='AdcP__Read__read', quals=[], storage=['inline', 'static'] (at pp.c:8675)
      FuncDecl: quals=None (at pp.c:8675)
        ParamList:  (at pp.c:8675)
          Decl: name='client', quals=[], storage=[] (at pp.c:8675)
            TypeDecl: declname='client', quals=[] (at pp.c:8675)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__Read__read', quals=[] (at pp.c:8675)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:8676)
      Return:  (at pp.c:8677)
        FuncCall:  (at None)
          ID: name='AdcP__ResourceRead__request' (at pp.c:8677)
          ExprList:  (at pp.c:8677)
            ID: name='client' (at pp.c:8677)
  FuncDef:  (at pp.c:8681)
    Decl: name='SenseC__Read__read', quals=[], storage=['static', 'inline'] (at pp.c:8681)
      FuncDecl: quals=None (at pp.c:8681)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SenseC__Read__read', quals=[] (at pp.c:8681)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:8681)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:8683)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:8683)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:8687)
        ID: name='__nesc_result' (at pp.c:8687)
        FuncCall:  (at None)
          ID: name='AdcP__Read__read' (at pp.c:8687)
          ExprList:  (at pp.c:8687)
            ID: name='AdcReadClientC__0__CLIENT' (at pp.c:8687)
      Return:  (at pp.c:8691)
        ID: name='__nesc_result' (at pp.c:8691)
  FuncDef:  (at pp.c:8696)
    Decl: name='SenseC__Timer__fired', quals=[], storage=['inline', 'static'] (at pp.c:8696)
      FuncDecl: quals=None (at pp.c:8696)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SenseC__Timer__fired', quals=[] (at pp.c:8696)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8697)
      FuncCall:  (at None)
        ID: name='SenseC__Read__read' (at pp.c:8698)
  FuncDef:  (at pp.c:8702)
    Decl: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__startDone', quals=[], storage=['static', 'inline'] (at pp.c:8702)
      FuncDecl: quals=None (at pp.c:8702)
        ParamList:  (at pp.c:8702)
          Decl: name='error', quals=[], storage=[] (at pp.c:8702)
            TypeDecl: declname='error', quals=[] (at pp.c:8702)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_2_5V__startDone', quals=[] (at pp.c:8702)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8702)
      FuncCall:  (at None)
        ID: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__startDone' (at pp.c:8704)
        ExprList:  (at pp.c:8704)
          ID: name='error' (at pp.c:8704)
  FuncDef:  (at pp.c:8709)
    Decl: name='ArbitratedReadStreamC__0__Service__read', quals=[], storage=['static', 'inline'] (at pp.c:8709)
      FuncDecl: quals=None (at pp.c:8709)
        ParamList:  (at pp.c:8709)
          Decl: name='arg_0x101cc7148', quals=[], storage=[] (at pp.c:8709)
            TypeDecl: declname='arg_0x101cc7148', quals=[] (at pp.c:8709)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='usPeriod', quals=[], storage=[] (at pp.c:8709)
            TypeDecl: declname='usPeriod', quals=[] (at pp.c:8709)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='ArbitratedReadStreamC__0__Service__read', quals=[] (at pp.c:8709)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:8709)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:8711)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:8711)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:8715)
        ID: name='__nesc_result' (at pp.c:8715)
        FuncCall:  (at None)
          ID: name='AdcStreamP__ReadStream__read' (at pp.c:8715)
          ExprList:  (at pp.c:8715)
            ID: name='arg_0x101cc7148' (at pp.c:8715)
            ID: name='usPeriod' (at pp.c:8715)
      Return:  (at pp.c:8719)
        ID: name='__nesc_result' (at pp.c:8719)
  FuncDef:  (at pp.c:8724)
    Decl: name='ArbitratedReadStreamC__0__Resource__granted', quals=[], storage=['inline', 'static'] (at pp.c:8724)
      FuncDecl: quals=None (at pp.c:8724)
        ParamList:  (at pp.c:8724)
          Decl: name='client', quals=[], storage=[] (at pp.c:8724)
            TypeDecl: declname='client', quals=[] (at pp.c:8724)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbitratedReadStreamC__0__Resource__granted', quals=[] (at pp.c:8724)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8726)
      FuncCall:  (at None)
        ID: name='ArbitratedReadStreamC__0__Service__read' (at pp.c:8727)
        ExprList:  (at pp.c:8727)
          ID: name='client' (at pp.c:8727)
          ArrayRef:  (at pp.c:8727)
            ID: name='ArbitratedReadStreamC__0__period' (at pp.c:8727)
            ID: name='client' (at pp.c:8727)
  FuncDef:  (at pp.c:8731)
    Decl: name='Msp430RefVoltArbiterImplP__ClientResource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:8731)
      FuncDecl: quals=None (at pp.c:8731)
        ParamList:  (at pp.c:8731)
          Decl: name='client', quals=[], storage=[] (at pp.c:8731)
            TypeDecl: declname='client', quals=[] (at pp.c:8731)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__default__granted', quals=[] (at pp.c:8731)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8733)
  FuncDef:  (at pp.c:8737)
    Decl: name='Msp430RefVoltArbiterImplP__ClientResource__granted', quals=[], storage=['static', 'inline'] (at pp.c:8737)
      FuncDecl: quals=None (at pp.c:8737)
        ParamList:  (at pp.c:8737)
          Decl: name='arg_0x101bafb98', quals=[], storage=[] (at pp.c:8737)
            TypeDecl: declname='arg_0x101bafb98', quals=[] (at pp.c:8737)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__granted', quals=[] (at pp.c:8737)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8737)
      Switch:  (at pp.c:8739)
        ID: name='arg_0x101bafb98' (at pp.c:8739)
        Compound:  (at pp.c:8739)
          Case:  (at pp.c:8741)
            ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:8741)
            FuncCall:  (at None)
              ID: name='AdcP__ResourceRead__granted' (at pp.c:8743)
              ExprList:  (at pp.c:8743)
                ID: name='AdcReadClientC__0__CLIENT' (at pp.c:8743)
          Break:  (at pp.c:8745)
          Case:  (at pp.c:8747)
            ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:8747)
            FuncCall:  (at None)
              ID: name='ArbitratedReadStreamC__0__Resource__granted' (at pp.c:8749)
              ExprList:  (at pp.c:8749)
                ID: name='AdcReadStreamClientC__0__RSCLIENT' (at pp.c:8749)
          Break:  (at pp.c:8751)
          Case:  (at pp.c:8753)
            ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:8753)
            FuncCall:  (at None)
              ID: name='AdcP__SubResourceReadNow__granted' (at pp.c:8755)
              ExprList:  (at pp.c:8755)
                ID: name='AdcReadNowClientC__0__CLIENT' (at pp.c:8755)
          Break:  (at pp.c:8757)
          Default:  (at pp.c:8759)
            FuncCall:  (at None)
              ID: name='Msp430RefVoltArbiterImplP__ClientResource__default__granted' (at pp.c:8761)
              ExprList:  (at pp.c:8761)
                ID: name='arg_0x101bafb98' (at pp.c:8761)
          Break:  (at pp.c:8763)
  FuncDef:  (at pp.c:8770)
    Decl: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__startDone', quals=[], storage=['inline', 'static'] (at pp.c:8770)
      FuncDecl: quals=None (at pp.c:8770)
        ParamList:  (at pp.c:8770)
          Decl: name='error', quals=[], storage=[] (at pp.c:8770)
            TypeDecl: declname='error', quals=[] (at pp.c:8770)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_1_5V__startDone', quals=[] (at pp.c:8770)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8771)
      If:  (at pp.c:8772)
        BinaryOp: op='!=' (at pp.c:8772)
          ID: name='Msp430RefVoltArbiterImplP__syncOwner' (at pp.c:8772)
          ID: name='Msp430RefVoltArbiterImplP__NO_OWNER' (at pp.c:8772)
        Compound:  (at pp.c:8772)
          FuncCall:  (at None)
            ID: name='Msp430RefVoltArbiterImplP__ClientResource__granted' (at pp.c:8775)
            ExprList:  (at pp.c:8775)
              ID: name='Msp430RefVoltArbiterImplP__syncOwner' (at pp.c:8775)
  FuncDef:  (at pp.c:8780)
    Decl: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__startDone', quals=[], storage=['static', 'inline'] (at pp.c:8780)
      FuncDecl: quals=None (at pp.c:8780)
        ParamList:  (at pp.c:8780)
          Decl: name='error', quals=[], storage=[] (at pp.c:8780)
            TypeDecl: declname='error', quals=[] (at pp.c:8780)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_1_5V__startDone', quals=[] (at pp.c:8780)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8780)
      FuncCall:  (at None)
        ID: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__startDone' (at pp.c:8782)
        ExprList:  (at pp.c:8782)
          ID: name='error' (at pp.c:8782)
  FuncDef:  (at pp.c:8787)
    Decl: name='Msp430RefVoltGeneratorP__SwitchOnTimer__fired', quals=[], storage=['inline', 'static'] (at pp.c:8787)
      FuncDecl: quals=None (at pp.c:8787)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOnTimer__fired', quals=[] (at pp.c:8787)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8789)
      Switch:  (at pp.c:8790)
        ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:8790)
        Compound:  (at pp.c:8790)
          Case:  (at pp.c:8791)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_ON_PENDING' (at pp.c:8791)
            Assignment: op='=' (at pp.c:8792)
              ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:8792)
              ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_STABLE' (at pp.c:8792)
          FuncCall:  (at None)
            ID: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__startDone' (at pp.c:8793)
            ExprList:  (at pp.c:8793)
              ID: name='SUCCESS' (at pp.c:8793)
          Break:  (at pp.c:8794)
          Case:  (at pp.c:8796)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_ON_PENDING' (at pp.c:8796)
            Assignment: op='=' (at pp.c:8797)
              ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:8797)
              ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_STABLE' (at pp.c:8797)
          FuncCall:  (at None)
            ID: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__startDone' (at pp.c:8798)
            ExprList:  (at pp.c:8798)
              ID: name='SUCCESS' (at pp.c:8798)
          Break:  (at pp.c:8799)
          Default:  (at pp.c:8801)
            Return:  (at pp.c:8802)
  FuncDef:  (at pp.c:8807)
    Decl: name='VirtualizeTimerC__0__Timer__startOneShot', quals=[], storage=['inline', 'static'] (at pp.c:8807)
      FuncDecl: quals=None (at pp.c:8807)
        ParamList:  (at pp.c:8807)
          Decl: name='num', quals=[], storage=[] (at pp.c:8807)
            TypeDecl: declname='num', quals=[] (at pp.c:8807)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:8807)
            TypeDecl: declname='dt', quals=[] (at pp.c:8807)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__Timer__startOneShot', quals=[] (at pp.c:8807)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8808)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__startTimer' (at pp.c:8809)
        ExprList:  (at pp.c:8809)
          ID: name='num' (at pp.c:8809)
          FuncCall:  (at None)
            ID: name='VirtualizeTimerC__0__TimerFrom__getNow' (at pp.c:8809)
          ID: name='dt' (at pp.c:8809)
          ID: name='TRUE' (at pp.c:8809)
  FuncDef:  (at pp.c:8813)
    Decl: name='Msp430RefVoltGeneratorP__SwitchOffTimer__startOneShot', quals=[], storage=['static', 'inline'] (at pp.c:8813)
      FuncDecl: quals=None (at pp.c:8813)
        ParamList:  (at pp.c:8813)
          Decl: name='dt', quals=[], storage=[] (at pp.c:8813)
            TypeDecl: declname='dt', quals=[] (at pp.c:8813)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffTimer__startOneShot', quals=[] (at pp.c:8813)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8813)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__Timer__startOneShot' (at pp.c:8815)
        ExprList:  (at pp.c:8815)
          Constant: type='int', value='2U' (at pp.c:8815)
          ID: name='dt' (at pp.c:8815)
  FuncDef:  (at pp.c:8819)
    Decl: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__startOneShot', quals=[], storage=['static', 'inline'] (at pp.c:8819)
      FuncDecl: quals=None (at pp.c:8819)
        ParamList:  (at pp.c:8819)
          Decl: name='dt', quals=[], storage=[] (at pp.c:8819)
            TypeDecl: declname='dt', quals=[] (at pp.c:8819)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__startOneShot', quals=[] (at pp.c:8819)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8819)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__Timer__startOneShot' (at pp.c:8821)
        ExprList:  (at pp.c:8821)
          Constant: type='int', value='3U' (at pp.c:8821)
          ID: name='dt' (at pp.c:8821)
  FuncDef:  (at pp.c:8826)
    Decl: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stopDone', quals=[], storage=['inline', 'static'] (at pp.c:8826)
      FuncDecl: quals=None (at pp.c:8826)
        ParamList:  (at pp.c:8826)
          Decl: name='error', quals=[], storage=[] (at pp.c:8826)
            TypeDecl: declname='error', quals=[] (at pp.c:8826)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stopDone', quals=[] (at pp.c:8826)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8827)
  FuncDef:  (at pp.c:8831)
    Decl: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__stopDone', quals=[], storage=['static', 'inline'] (at pp.c:8831)
      FuncDecl: quals=None (at pp.c:8831)
        ParamList:  (at pp.c:8831)
          Decl: name='error', quals=[], storage=[] (at pp.c:8831)
            TypeDecl: declname='error', quals=[] (at pp.c:8831)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_2_5V__stopDone', quals=[] (at pp.c:8831)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8831)
      FuncCall:  (at None)
        ID: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stopDone' (at pp.c:8833)
        ExprList:  (at pp.c:8833)
          ID: name='error' (at pp.c:8833)
  FuncDef:  (at pp.c:8838)
    Decl: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stopDone', quals=[], storage=['inline', 'static'] (at pp.c:8838)
      FuncDecl: quals=None (at pp.c:8838)
        ParamList:  (at pp.c:8838)
          Decl: name='error', quals=[], storage=[] (at pp.c:8838)
            TypeDecl: declname='error', quals=[] (at pp.c:8838)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stopDone', quals=[] (at pp.c:8838)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8839)
  FuncDef:  (at pp.c:8843)
    Decl: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__stopDone', quals=[], storage=['static', 'inline'] (at pp.c:8843)
      FuncDecl: quals=None (at pp.c:8843)
        ParamList:  (at pp.c:8843)
          Decl: name='error', quals=[], storage=[] (at pp.c:8843)
            TypeDecl: declname='error', quals=[] (at pp.c:8843)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_1_5V__stopDone', quals=[] (at pp.c:8843)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8843)
      FuncCall:  (at None)
        ID: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stopDone' (at pp.c:8845)
        ExprList:  (at pp.c:8845)
          ID: name='error' (at pp.c:8845)
  FuncDef:  (at pp.c:8850)
    Decl: name='Msp430RefVoltGeneratorP__SwitchOffTimer__fired', quals=[], storage=['inline', 'static'] (at pp.c:8850)
      FuncDecl: quals=None (at pp.c:8850)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffTimer__fired', quals=[] (at pp.c:8850)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8852)
      Switch:  (at pp.c:8853)
        ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:8853)
        Compound:  (at pp.c:8853)
          Case:  (at pp.c:8854)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_OFF_PENDING' (at pp.c:8854)
            If:  (at pp.c:8855)
              BinaryOp: op='==' (at None)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltGeneratorP__switchOff' (at pp.c:8855)
                ID: name='SUCCESS' (at pp.c:8855)
              Compound:  (at pp.c:8855)
                Assignment: op='=' (at pp.c:8856)
                  ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:8856)
                  ID: name='Msp430RefVoltGeneratorP__GENERATOR_OFF' (at pp.c:8856)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__stopDone' (at pp.c:8857)
                  ExprList:  (at pp.c:8857)
                    ID: name='SUCCESS' (at pp.c:8857)
              Compound:  (at pp.c:8859)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltGeneratorP__SwitchOffTimer__startOneShot' (at pp.c:8860)
                  ExprList:  (at pp.c:8860)
                    Constant: type='int', value='20' (at pp.c:8860)
          Break:  (at pp.c:8862)
          Case:  (at pp.c:8864)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_OFF_PENDING' (at pp.c:8864)
            If:  (at pp.c:8865)
              BinaryOp: op='==' (at None)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltGeneratorP__switchOff' (at pp.c:8865)
                ID: name='SUCCESS' (at pp.c:8865)
              Compound:  (at pp.c:8865)
                Assignment: op='=' (at pp.c:8866)
                  ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:8866)
                  ID: name='Msp430RefVoltGeneratorP__GENERATOR_OFF' (at pp.c:8866)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__stopDone' (at pp.c:8867)
                  ExprList:  (at pp.c:8867)
                    ID: name='SUCCESS' (at pp.c:8867)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__startOneShot' (at pp.c:8869)
                  ExprList:  (at pp.c:8869)
                    Constant: type='int', value='2048' (at pp.c:8869)
              Compound:  (at pp.c:8873)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltGeneratorP__SwitchOffTimer__startOneShot' (at pp.c:8874)
                  ExprList:  (at pp.c:8874)
                    Constant: type='int', value='20' (at pp.c:8874)
          Break:  (at pp.c:8876)
          Default:  (at pp.c:8878)
            Break:  (at pp.c:8879)
  FuncDef:  (at pp.c:8883)
    Decl: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__fired', quals=[], storage=['inline', 'static'] (at pp.c:8883)
      FuncDecl: quals=None (at pp.c:8883)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__fired', quals=[] (at pp.c:8883)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8885)
  FuncDef:  (at pp.c:8889)
    Decl: name='VirtualizeTimerC__0__Timer__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:8889)
      FuncDecl: quals=None (at pp.c:8889)
        ParamList:  (at pp.c:8889)
          Decl: name='num', quals=[], storage=[] (at pp.c:8889)
            TypeDecl: declname='num', quals=[] (at pp.c:8889)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__Timer__default__fired', quals=[] (at pp.c:8889)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8890)
  FuncDef:  (at pp.c:8894)
    Decl: name='VirtualizeTimerC__0__Timer__fired', quals=[], storage=['static', 'inline'] (at pp.c:8894)
      FuncDecl: quals=None (at pp.c:8894)
        ParamList:  (at pp.c:8894)
          Decl: name='arg_0x1018be5d8', quals=[], storage=[] (at pp.c:8894)
            TypeDecl: declname='arg_0x1018be5d8', quals=[] (at pp.c:8894)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__Timer__fired', quals=[] (at pp.c:8894)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8894)
      Switch:  (at pp.c:8896)
        ID: name='arg_0x1018be5d8' (at pp.c:8896)
        Compound:  (at pp.c:8896)
          Case:  (at pp.c:8898)
            Constant: type='int', value='0U' (at pp.c:8898)
            FuncCall:  (at None)
              ID: name='SenseC__Timer__fired' (at pp.c:8900)
          Break:  (at pp.c:8902)
          Case:  (at pp.c:8904)
            Constant: type='int', value='1U' (at pp.c:8904)
            FuncCall:  (at None)
              ID: name='Msp430RefVoltGeneratorP__SwitchOnTimer__fired' (at pp.c:8906)
          Break:  (at pp.c:8908)
          Case:  (at pp.c:8910)
            Constant: type='int', value='2U' (at pp.c:8910)
            FuncCall:  (at None)
              ID: name='Msp430RefVoltGeneratorP__SwitchOffTimer__fired' (at pp.c:8912)
          Break:  (at pp.c:8914)
          Case:  (at pp.c:8916)
            Constant: type='int', value='3U' (at pp.c:8916)
            FuncCall:  (at None)
              ID: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__fired' (at pp.c:8918)
          Break:  (at pp.c:8920)
          Default:  (at pp.c:8922)
            FuncCall:  (at None)
              ID: name='VirtualizeTimerC__0__Timer__default__fired' (at pp.c:8924)
              ExprList:  (at pp.c:8924)
                ID: name='arg_0x1018be5d8' (at pp.c:8924)
          Break:  (at pp.c:8926)
  FuncDef:  (at pp.c:8933)
    Decl: name='VirtualizeTimerC__0__TimerFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:8933)
      FuncDecl: quals=None (at pp.c:8933)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__fired', quals=[] (at pp.c:8933)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8934)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__fireTimers' (at pp.c:8935)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='VirtualizeTimerC__0__TimerFrom__getNow' (at pp.c:8935)
  FuncDef:  (at pp.c:8939)
    Decl: name='AlarmToTimerC__0__Timer__fired', quals=[], storage=['static', 'inline'] (at pp.c:8939)
      FuncDecl: quals=None (at pp.c:8939)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Timer__fired', quals=[] (at pp.c:8939)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8939)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__TimerFrom__fired' (at pp.c:8941)
  FuncDef:  (at pp.c:8946)
    Decl: name='TransformAlarmC__0__Alarm__getAlarm', quals=[], storage=['inline', 'static'] (at pp.c:8946)
      FuncDecl: quals=None (at pp.c:8946)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Alarm__getAlarm', quals=[] (at pp.c:8946)
          IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
    Compound:  (at pp.c:8947)
      Compound:  (at pp.c:8948)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:8948)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:8948)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:8948)
        Compound:  (at pp.c:8950)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:8951)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:8951)
              IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
            BinaryOp: op='+' (at pp.c:8953)
              ID: name='TransformAlarmC__0__m_t0' (at pp.c:8953)
              ID: name='TransformAlarmC__0__m_dt' (at pp.c:8953)
          Compound:  (at pp.c:8955)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:8957)
              ExprList:  (at pp.c:8957)
                ID: name='__nesc_atomic' (at pp.c:8957)
            Return:  (at pp.c:8959)
              ID: name='__nesc_temp' (at pp.c:8959)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:8963)
          ExprList:  (at pp.c:8963)
            ID: name='__nesc_atomic' (at pp.c:8963)
  FuncDef:  (at pp.c:8967)
    Decl: name='AlarmToTimerC__0__Alarm__getAlarm', quals=[], storage=['static', 'inline'] (at pp.c:8967)
      FuncDecl: quals=None (at pp.c:8967)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Alarm__getAlarm', quals=[] (at pp.c:8967)
          IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
    Compound:  (at pp.c:8967)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:8969)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:8969)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:8973)
        ID: name='__nesc_result' (at pp.c:8973)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__0__Alarm__getAlarm' (at pp.c:8973)
      Return:  (at pp.c:8977)
        ID: name='__nesc_result' (at pp.c:8977)
  FuncDef:  (at pp.c:8982)
    Decl: name='AlarmToTimerC__0__fired__runTask', quals=[], storage=['inline', 'static'] (at pp.c:8982)
      FuncDecl: quals=None (at pp.c:8982)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__fired__runTask', quals=[] (at pp.c:8982)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:8983)
      If:  (at pp.c:8984)
        BinaryOp: op='==' (at pp.c:8984)
          ID: name='AlarmToTimerC__0__m_oneshot' (at pp.c:8984)
          ID: name='FALSE' (at pp.c:8984)
        Compound:  (at pp.c:8984)
          FuncCall:  (at None)
            ID: name='AlarmToTimerC__0__start' (at pp.c:8985)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='AlarmToTimerC__0__Alarm__getAlarm' (at pp.c:8985)
              ID: name='AlarmToTimerC__0__m_dt' (at pp.c:8985)
              ID: name='FALSE' (at pp.c:8985)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Timer__fired' (at pp.c:8988)
  FuncDef:  (at pp.c:8992)
    Decl: name='ecombine', quals=[], storage=['inline', 'static'] (at pp.c:8992)
      FuncDecl: quals=None (at pp.c:8992)
        ParamList:  (at pp.c:8992)
          Decl: name='r1', quals=[], storage=[] (at pp.c:8992)
            TypeDecl: declname='r1', quals=[] (at pp.c:8992)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='r2', quals=[], storage=[] (at pp.c:8992)
            TypeDecl: declname='r2', quals=[] (at pp.c:8992)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='ecombine', quals=[] (at pp.c:8992)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:8997)
      Return:  (at pp.c:8998)
        TernaryOp:  (at pp.c:8998)
          BinaryOp: op='==' (at pp.c:8998)
            ID: name='r1' (at pp.c:8998)
            ID: name='r2' (at pp.c:8998)
          ID: name='r1' (at pp.c:8998)
          ID: name='FAIL' (at pp.c:8998)
  FuncDef:  (at pp.c:9002)
    Decl: name='Msp430TimerCapComP__3__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:9002)
      FuncDecl: quals=None (at pp.c:9002)
        ParamList:  (at pp.c:9002)
          Decl: name='x', quals=[], storage=[] (at pp.c:9002)
            TypeDecl: declname='x', quals=[] (at pp.c:9002)
              IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__CC2int', quals=[] (at pp.c:9002)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:9004)
      Decl: name='c', quals=[], storage=[] (at pp.c:9013)
        TypeDecl: declname='c', quals=[] (at pp.c:9013)
          Union: name='Msp430TimerCapComP__3____nesc_unnamed4316', packed=False (at pp.c:9006)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:9008)
                IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:9010)
                IdentifierType: names=['uint16_t'] (at None)
        ExprList:  (at pp.c:9013)
          Assignment: op='=' (at pp.c:9013)
            StructRef: type='.' (at pp.c:9013)
              ID: name='f' (at pp.c:9013)
            ID: name='x' (at pp.c:9013)
      Return:  (at pp.c:9016)
        StructRef: type='.' (at pp.c:9016)
          ID: name='c' (at pp.c:9016)
          ID: name='t' (at pp.c:9016)
  FuncDef:  (at pp.c:9019)
    Decl: name='Msp430TimerCapComP__3__compareControl', quals=[], storage=['inline', 'static'] (at pp.c:9019)
      FuncDecl: quals=None (at pp.c:9019)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__compareControl', quals=[] (at pp.c:9019)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:9020)
      Decl: name='x', quals=[], storage=[] (at pp.c:9021)
        TypeDecl: declname='x', quals=[] (at pp.c:9021)
          IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
        ExprList:  (at pp.c:9022)
          Assignment: op='=' (at pp.c:9022)
            StructRef: type='.' (at pp.c:9022)
              ID: name='cm' (at pp.c:9022)
            Constant: type='int', value='1' (at pp.c:9022)
          Assignment: op='=' (at pp.c:9023)
            StructRef: type='.' (at pp.c:9023)
              ID: name='ccis' (at pp.c:9023)
            Constant: type='int', value='0' (at pp.c:9023)
          Assignment: op='=' (at pp.c:9024)
            StructRef: type='.' (at pp.c:9024)
              ID: name='clld' (at pp.c:9024)
            Constant: type='int', value='0' (at pp.c:9024)
          Assignment: op='=' (at pp.c:9025)
            StructRef: type='.' (at pp.c:9025)
              ID: name='cap' (at pp.c:9025)
            Constant: type='int', value='0' (at pp.c:9025)
          Assignment: op='=' (at pp.c:9026)
            StructRef: type='.' (at pp.c:9026)
              ID: name='ccie' (at pp.c:9026)
            Constant: type='int', value='0' (at pp.c:9026)
      Return:  (at pp.c:9028)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__3__CC2int' (at pp.c:9028)
          ExprList:  (at pp.c:9028)
            ID: name='x' (at pp.c:9028)
  FuncDef:  (at pp.c:9032)
    Decl: name='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[], storage=['inline', 'static'] (at pp.c:9032)
      FuncDecl: quals=None (at pp.c:9032)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[] (at pp.c:9032)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9033)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:9034)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='386U' (at pp.c:9034)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__3__compareControl' (at pp.c:9034)
  FuncDef:  (at pp.c:9038)
    Decl: name='Msp430AlarmC__0__Msp430TimerControl__setControlAsCompare', quals=[], storage=['static', 'inline'] (at pp.c:9038)
      FuncDecl: quals=None (at pp.c:9038)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__setControlAsCompare', quals=[] (at pp.c:9038)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9038)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Control__setControlAsCompare' (at pp.c:9040)
  FuncDef:  (at pp.c:9045)
    Decl: name='Msp430AlarmC__0__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:9045)
      FuncDecl: quals=None (at pp.c:9045)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Init__init', quals=[] (at pp.c:9045)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:9046)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430TimerControl__disableEvents' (at pp.c:9047)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430TimerControl__setControlAsCompare' (at pp.c:9048)
      Return:  (at pp.c:9049)
        ID: name='SUCCESS' (at pp.c:9049)
  FuncDef:  (at pp.c:9053)
    Decl: name='Msp430Adc12ImplP__HplAdc12__stopConversion', quals=[], storage=['static', 'inline'] (at pp.c:9053)
      FuncDecl: quals=None (at pp.c:9053)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__stopConversion', quals=[] (at pp.c:9053)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9053)
      FuncCall:  (at None)
        ID: name='HplAdc12P__HplAdc12__stopConversion' (at pp.c:9055)
  FuncDef:  (at pp.c:9060)
    Decl: name='Msp430Adc12ImplP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:9060)
      FuncDecl: quals=None (at pp.c:9060)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Init__init', quals=[] (at pp.c:9060)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:9061)
      Decl: name='ctl0', quals=[], storage=[] (at pp.c:9062)
        TypeDecl: declname='ctl0', quals=[] (at pp.c:9062)
          IdentifierType: names=['adc12ctl0_t'] (at None)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__HplAdc12__stopConversion' (at pp.c:9065)
      Assignment: op='=' (at pp.c:9066)
        ID: name='ctl0' (at pp.c:9066)
        FuncCall:  (at None)
          ID: name='Msp430Adc12ImplP__HplAdc12__getCtl0' (at pp.c:9066)
      Assignment: op='=' (at pp.c:9067)
        StructRef: type='.' (at pp.c:9067)
          ID: name='ctl0' (at pp.c:9067)
          ID: name='adc12tovie' (at pp.c:9067)
        Constant: type='int', value='1' (at pp.c:9067)
      Assignment: op='=' (at pp.c:9068)
        StructRef: type='.' (at pp.c:9068)
          ID: name='ctl0' (at pp.c:9068)
          ID: name='adc12ovie' (at pp.c:9068)
        Constant: type='int', value='1' (at pp.c:9068)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__HplAdc12__setCtl0' (at pp.c:9069)
        ExprList:  (at pp.c:9069)
          ID: name='ctl0' (at pp.c:9069)
      Return:  (at pp.c:9070)
        ID: name='SUCCESS' (at pp.c:9070)
  FuncDef:  (at pp.c:9074)
    Decl: name='RoundRobinResourceQueueC__0__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:9074)
      FuncDecl: quals=None (at pp.c:9074)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RoundRobinResourceQueueC__0__Init__init', quals=[] (at pp.c:9074)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:9076)
      FuncCall:  (at None)
        ID: name='memset' (at pp.c:9077)
        ExprList:  (at pp.c:9077)
          ID: name='RoundRobinResourceQueueC__0__resQ' (at pp.c:9077)
          Constant: type='int', value='0' (at pp.c:9077)
          UnaryOp: op='sizeof' (at pp.c:9077)
            ID: name='RoundRobinResourceQueueC__0__resQ' (at pp.c:9077)
      Return:  (at pp.c:9078)
        ID: name='SUCCESS' (at pp.c:9078)
  FuncDef:  (at pp.c:9082)
    Decl: name='AdcStreamP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:9082)
      FuncDecl: quals=None (at pp.c:9082)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__Init__init', quals=[] (at pp.c:9082)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:9084)
      Decl: name='i', quals=[], storage=[] (at pp.c:9085)
        TypeDecl: declname='i', quals=[] (at pp.c:9085)
          IdentifierType: names=['uint8_t'] (at None)
      For:  (at pp.c:9087)
        Assignment: op='=' (at pp.c:9087)
          ID: name='i' (at pp.c:9087)
          Constant: type='int', value='0' (at pp.c:9087)
        BinaryOp: op='!=' (at pp.c:9087)
          ID: name='i' (at pp.c:9087)
          ID: name='AdcStreamP__NSTREAM' (at pp.c:9087)
        UnaryOp: op='p++' (at pp.c:9087)
          ID: name='i' (at pp.c:9087)
        Assignment: op='=' (at pp.c:9088)
          ArrayRef:  (at pp.c:9088)
            ID: name='AdcStreamP__bufferQueueEnd' (at pp.c:9088)
            ID: name='i' (at pp.c:9088)
          UnaryOp: op='&' (at pp.c:9088)
            ArrayRef:  (at pp.c:9088)
              ID: name='AdcStreamP__bufferQueue' (at pp.c:9088)
              ID: name='i' (at pp.c:9088)
      Return:  (at pp.c:9090)
        ID: name='SUCCESS' (at pp.c:9090)
  FuncDef:  (at pp.c:9094)
    Decl: name='RealMainP__SoftwareInit__init', quals=[], storage=['static', 'inline'] (at pp.c:9094)
      FuncDecl: quals=None (at pp.c:9094)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__SoftwareInit__init', quals=[] (at pp.c:9094)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:9094)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:9096)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:9096)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:9100)
        ID: name='__nesc_result' (at pp.c:9100)
        FuncCall:  (at None)
          ID: name='AdcStreamP__Init__init' (at pp.c:9100)
      Assignment: op='=' (at pp.c:9102)
        ID: name='__nesc_result' (at pp.c:9102)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:9102)
          ExprList:  (at pp.c:9102)
            ID: name='__nesc_result' (at pp.c:9102)
            FuncCall:  (at None)
              ID: name='RoundRobinResourceQueueC__0__Init__init' (at pp.c:9102)
      Assignment: op='=' (at pp.c:9104)
        ID: name='__nesc_result' (at pp.c:9104)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:9104)
          ExprList:  (at pp.c:9104)
            ID: name='__nesc_result' (at pp.c:9104)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Init__init' (at pp.c:9104)
      Assignment: op='=' (at pp.c:9106)
        ID: name='__nesc_result' (at pp.c:9106)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:9106)
          ExprList:  (at pp.c:9106)
            ID: name='__nesc_result' (at pp.c:9106)
            FuncCall:  (at None)
              ID: name='Msp430AlarmC__0__Init__init' (at pp.c:9106)
      Return:  (at pp.c:9110)
        ID: name='__nesc_result' (at pp.c:9110)
  FuncDef:  (at pp.c:9115)
    Decl: name='VirtualizeTimerC__0__Timer__startPeriodic', quals=[], storage=['inline', 'static'] (at pp.c:9115)
      FuncDecl: quals=None (at pp.c:9115)
        ParamList:  (at pp.c:9115)
          Decl: name='num', quals=[], storage=[] (at pp.c:9115)
            TypeDecl: declname='num', quals=[] (at pp.c:9115)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:9115)
            TypeDecl: declname='dt', quals=[] (at pp.c:9115)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__Timer__startPeriodic', quals=[] (at pp.c:9115)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9116)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__startTimer' (at pp.c:9117)
        ExprList:  (at pp.c:9117)
          ID: name='num' (at pp.c:9117)
          FuncCall:  (at None)
            ID: name='VirtualizeTimerC__0__TimerFrom__getNow' (at pp.c:9117)
          ID: name='dt' (at pp.c:9117)
          ID: name='FALSE' (at pp.c:9117)
  FuncDef:  (at pp.c:9121)
    Decl: name='SenseC__Timer__startPeriodic', quals=[], storage=['static', 'inline'] (at pp.c:9121)
      FuncDecl: quals=None (at pp.c:9121)
        ParamList:  (at pp.c:9121)
          Decl: name='dt', quals=[], storage=[] (at pp.c:9121)
            TypeDecl: declname='dt', quals=[] (at pp.c:9121)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='SenseC__Timer__startPeriodic', quals=[] (at pp.c:9121)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9121)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__Timer__startPeriodic' (at pp.c:9123)
        ExprList:  (at pp.c:9123)
          Constant: type='int', value='0U' (at pp.c:9123)
          ID: name='dt' (at pp.c:9123)
  FuncDef:  (at pp.c:9128)
    Decl: name='SenseC__Boot__booted', quals=[], storage=['inline', 'static'] (at pp.c:9128)
      FuncDecl: quals=None (at pp.c:9128)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SenseC__Boot__booted', quals=[] (at pp.c:9128)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9130)
      FuncCall:  (at None)
        ID: name='SenseC__Timer__startPeriodic' (at pp.c:9131)
        ExprList:  (at pp.c:9131)
          Constant: type='int', value='100' (at pp.c:9131)
  FuncDef:  (at pp.c:9135)
    Decl: name='RealMainP__Boot__booted', quals=[], storage=['static', 'inline'] (at pp.c:9135)
      FuncDecl: quals=None (at pp.c:9135)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__Boot__booted', quals=[] (at pp.c:9135)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9135)
      FuncCall:  (at None)
        ID: name='SenseC__Boot__booted' (at pp.c:9137)
  FuncDef:  (at pp.c:9142)
    Decl: name='__nesc_disable_interrupt', quals=[], storage=['inline', 'static'] (at pp.c:9142)
      FuncDecl: quals=None (at pp.c:9142)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_disable_interrupt', quals=[] (at pp.c:9142)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9143)
      Assignment: op='&=' (at pp.c:9144)
        ID: name='_R2' (at pp.c:9144)
        Constant: type='int', value='0xfff7' (at pp.c:9144)
  FuncDef:  (at pp.c:9148)
    Decl: name='Msp430ClockP__McuPowerOverride__lowestState', quals=[], storage=['inline', 'static'] (at pp.c:9148)
      FuncDecl: quals=None (at pp.c:9148)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__McuPowerOverride__lowestState', quals=[] (at pp.c:9148)
          IdentifierType: names=['mcu_power_t'] (at None)
    Compound:  (at pp.c:9150)
      Return:  (at pp.c:9151)
        ID: name='MSP430_POWER_LPM3' (at pp.c:9151)
  FuncDef:  (at pp.c:9155)
    Decl: name='McuSleepC__McuPowerOverride__lowestState', quals=[], storage=['static', 'inline'] (at pp.c:9155)
      FuncDecl: quals=None (at pp.c:9155)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='McuSleepC__McuPowerOverride__lowestState', quals=[] (at pp.c:9155)
          IdentifierType: names=['mcu_power_t'] (at None)
    Compound:  (at pp.c:9155)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:9157)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:9157)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:9161)
        ID: name='__nesc_result' (at pp.c:9161)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__McuPowerOverride__lowestState' (at pp.c:9161)
      Return:  (at pp.c:9165)
        ID: name='__nesc_result' (at pp.c:9165)
  FuncDef:  (at pp.c:9170)
    Decl: name='McuSleepC__getPowerState', quals=[], storage=['inline', 'static'] (at pp.c:9170)
      FuncDecl: quals=None (at pp.c:9170)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='McuSleepC__getPowerState', quals=[] (at pp.c:9170)
          IdentifierType: names=['mcu_power_t'] (at None)
    Compound:  (at pp.c:9172)
      Decl: name='pState', quals=[], storage=[] (at pp.c:9173)
        TypeDecl: declname='pState', quals=[] (at pp.c:9173)
          IdentifierType: names=['mcu_power_t'] (at None)
        ID: name='MSP430_POWER_LPM4' (at pp.c:9173)
      If:  (at pp.c:9183)
        BinaryOp: op='||' (at pp.c:9185)
          BinaryOp: op='||' (at pp.c:9185)
            BinaryOp: op='||' (at pp.c:9185)
              BinaryOp: op='&&' (at pp.c:9185)
                BinaryOp: op='||' (at pp.c:9185)
                  BinaryOp: op='||' (at pp.c:9185)
                    BinaryOp: op='&' (at pp.c:9185)
                      ID: name='TA0CCTL0' (at pp.c:9185)
                      Constant: type='int', value='0x0010' (at pp.c:9185)
                    BinaryOp: op='&' (at pp.c:9186)
                      ID: name='TA0CCTL1' (at pp.c:9186)
                      Constant: type='int', value='0x0010' (at pp.c:9186)
                  BinaryOp: op='&' (at pp.c:9187)
                    ID: name='TA0CCTL2' (at pp.c:9187)
                    Constant: type='int', value='0x0010' (at pp.c:9187)
                BinaryOp: op='==' (at pp.c:9188)
                  BinaryOp: op='&' (at pp.c:9188)
                    ID: name='TA0CTL' (at pp.c:9188)
                    BinaryOp: op='<<' (at pp.c:9188)
                      Constant: type='int', value='3' (at pp.c:9188)
                      Constant: type='int', value='8' (at pp.c:9188)
                  BinaryOp: op='<<' (at pp.c:9188)
                    Constant: type='int', value='2' (at pp.c:9188)
                    Constant: type='int', value='8' (at pp.c:9188)
              BinaryOp: op='&&' (at pp.c:9189)
                BinaryOp: op='&' (at pp.c:9189)
                  ID: name='ME1' (at pp.c:9189)
                  BinaryOp: op='|' (at pp.c:9189)
                    BinaryOp: op='<<' (at pp.c:9189)
                      Constant: type='int', value='1' (at pp.c:9189)
                      Constant: type='int', value='7' (at pp.c:9189)
                    BinaryOp: op='<<' (at pp.c:9189)
                      Constant: type='int', value='1' (at pp.c:9189)
                      Constant: type='int', value='6' (at pp.c:9189)
                BinaryOp: op='&' (at pp.c:9189)
                  ID: name='U0TCTL' (at pp.c:9189)
                  Constant: type='int', value='0x20' (at pp.c:9189)
            BinaryOp: op='&&' (at pp.c:9190)
              BinaryOp: op='&' (at pp.c:9190)
                ID: name='ME2' (at pp.c:9190)
                BinaryOp: op='|' (at pp.c:9190)
                  BinaryOp: op='<<' (at pp.c:9190)
                    Constant: type='int', value='1' (at pp.c:9190)
                    Constant: type='int', value='5' (at pp.c:9190)
                  BinaryOp: op='<<' (at pp.c:9190)
                    Constant: type='int', value='1' (at pp.c:9190)
                    Constant: type='int', value='4' (at pp.c:9190)
              BinaryOp: op='&' (at pp.c:9190)
                ID: name='U1TCTL' (at pp.c:9190)
                Constant: type='int', value='0x20' (at pp.c:9190)
          BinaryOp: op='&&' (at pp.c:9193)
            BinaryOp: op='&&' (at pp.c:9193)
              BinaryOp: op='&&' (at pp.c:9193)
                BinaryOp: op='&&' (at pp.c:9193)
                  BinaryOp: op='&' (at pp.c:9193)
                    ID: name='U0CTLnr' (at pp.c:9193)
                    Constant: type='int', value='0x01' (at pp.c:9193)
                  BinaryOp: op='&' (at pp.c:9193)
                    ID: name='I2CTCTLnr' (at pp.c:9193)
                    Constant: type='int', value='0x20' (at pp.c:9193)
                BinaryOp: op='&' (at pp.c:9194)
                  ID: name='I2CDCTLnr' (at pp.c:9194)
                  Constant: type='int', value='0x20' (at pp.c:9194)
              BinaryOp: op='&' (at pp.c:9194)
                ID: name='U0CTLnr' (at pp.c:9194)
                Constant: type='int', value='0x04' (at pp.c:9194)
            BinaryOp: op='&' (at pp.c:9194)
              ID: name='U0CTLnr' (at pp.c:9194)
              Constant: type='int', value='0x20' (at pp.c:9194)
        Compound:  (at pp.c:9194)
          Assignment: op='=' (at pp.c:9197)
            ID: name='pState' (at pp.c:9197)
            ID: name='MSP430_POWER_LPM1' (at pp.c:9197)
      If:  (at pp.c:9201)
        BinaryOp: op='&' (at pp.c:9201)
          ID: name='ADC12CTL0' (at pp.c:9201)
          Constant: type='int', value='0x0010' (at pp.c:9201)
        Compound:  (at pp.c:9201)
          If:  (at pp.c:9202)
            BinaryOp: op='&' (at pp.c:9202)
              ID: name='ADC12CTL1' (at pp.c:9202)
              BinaryOp: op='<<' (at pp.c:9202)
                Constant: type='int', value='2' (at pp.c:9202)
                Constant: type='int', value='3' (at pp.c:9202)
            Compound:  (at pp.c:9202)
              If:  (at pp.c:9204)
                BinaryOp: op='&' (at pp.c:9204)
                  ID: name='ADC12CTL1' (at pp.c:9204)
                  BinaryOp: op='<<' (at pp.c:9204)
                    Constant: type='int', value='1' (at pp.c:9204)
                    Constant: type='int', value='3' (at pp.c:9204)
                Compound:  (at pp.c:9204)
                  Assignment: op='=' (at pp.c:9205)
                    ID: name='pState' (at pp.c:9205)
                    ID: name='MSP430_POWER_LPM1' (at pp.c:9205)
                Compound:  (at pp.c:9207)
                  Assignment: op='=' (at pp.c:9209)
                    ID: name='pState' (at pp.c:9209)
                    ID: name='MSP430_POWER_ACTIVE' (at pp.c:9209)
            Compound:  (at pp.c:9212)
              If:  (at pp.c:9214)
                BinaryOp: op='&&' (at pp.c:9214)
                  BinaryOp: op='&' (at pp.c:9214)
                    ID: name='ADC12CTL1' (at pp.c:9214)
                    Constant: type='int', value='0x0400' (at pp.c:9214)
                  BinaryOp: op='==' (at pp.c:9214)
                    BinaryOp: op='&' (at pp.c:9214)
                      ID: name='TA0CTL' (at pp.c:9214)
                      BinaryOp: op='<<' (at pp.c:9214)
                        Constant: type='int', value='3' (at pp.c:9214)
                        Constant: type='int', value='8' (at pp.c:9214)
                    BinaryOp: op='<<' (at pp.c:9214)
                      Constant: type='int', value='2' (at pp.c:9214)
                      Constant: type='int', value='8' (at pp.c:9214)
                Compound:  (at pp.c:9214)
                  Assignment: op='=' (at pp.c:9218)
                    ID: name='pState' (at pp.c:9218)
                    ID: name='MSP430_POWER_LPM1' (at pp.c:9218)
      Return:  (at pp.c:9223)
        ID: name='pState' (at pp.c:9223)
  FuncDef:  (at pp.c:9227)
    Decl: name='mcombine', quals=[], storage=['inline', 'static'] (at pp.c:9227)
      FuncDecl: quals=None (at pp.c:9227)
        ParamList:  (at pp.c:9227)
          Decl: name='m1', quals=[], storage=[] (at pp.c:9227)
            TypeDecl: declname='m1', quals=[] (at pp.c:9227)
              IdentifierType: names=['mcu_power_t'] (at None)
          Decl: name='m2', quals=[], storage=[] (at pp.c:9227)
            TypeDecl: declname='m2', quals=[] (at pp.c:9227)
              IdentifierType: names=['mcu_power_t'] (at None)
        TypeDecl: declname='mcombine', quals=[] (at pp.c:9227)
          IdentifierType: names=['mcu_power_t'] (at None)
    Compound:  (at pp.c:9229)
      Return:  (at pp.c:9230)
        TernaryOp:  (at pp.c:9230)
          BinaryOp: op='<' (at pp.c:9230)
            ID: name='m1' (at pp.c:9230)
            ID: name='m2' (at pp.c:9230)
          ID: name='m1' (at pp.c:9230)
          ID: name='m2' (at pp.c:9230)
  FuncDef:  (at pp.c:9234)
    Decl: name='McuSleepC__computePowerState', quals=[], storage=['inline', 'static'] (at pp.c:9234)
      FuncDecl: quals=None (at pp.c:9234)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='McuSleepC__computePowerState', quals=[] (at pp.c:9234)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9236)
      Assignment: op='=' (at pp.c:9237)
        ID: name='McuSleepC__powerState' (at pp.c:9237)
        FuncCall:  (at None)
          ID: name='mcombine' (at pp.c:9237)
          ExprList:  (at None)
            FuncCall:  (at None)
              ID: name='McuSleepC__getPowerState' (at pp.c:9237)
            FuncCall:  (at None)
              ID: name='McuSleepC__McuPowerOverride__lowestState' (at pp.c:9238)
  FuncDef:  (at pp.c:9241)
    Decl: name='McuSleepC__McuSleep__sleep', quals=[], storage=['inline', 'static'] (at pp.c:9241)
      FuncDecl: quals=None (at pp.c:9241)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='McuSleepC__McuSleep__sleep', quals=[] (at pp.c:9241)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9243)
      Decl: name='temp', quals=[], storage=[] (at pp.c:9244)
        TypeDecl: declname='temp', quals=[] (at pp.c:9244)
          IdentifierType: names=['uint16_t'] (at None)
      If:  (at pp.c:9247)
        ID: name='McuSleepC__dirty' (at pp.c:9247)
        Compound:  (at pp.c:9247)
          FuncCall:  (at None)
            ID: name='McuSleepC__computePowerState' (at pp.c:9248)
      Assignment: op='=' (at pp.c:9251)
        ID: name='temp' (at pp.c:9251)
        BinaryOp: op='|' (at pp.c:9251)
          ArrayRef:  (at pp.c:9251)
            ID: name='McuSleepC__msp430PowerBits' (at pp.c:9251)
            ID: name='McuSleepC__powerState' (at pp.c:9251)
          Constant: type='int', value='0x0008' (at pp.c:9251)
      Assignment: op='|=' (at pp.c:9252)
        ID: name='_R2' (at pp.c:9252)
        ID: name='temp' (at pp.c:9252)
      FuncCall:  (at None)
        ID: name='__nesc_disable_interrupt' (at pp.c:9255)
  FuncDef:  (at pp.c:9259)
    Decl: name='SchedulerBasicP__McuSleep__sleep', quals=[], storage=['static', 'inline'] (at pp.c:9259)
      FuncDecl: quals=None (at pp.c:9259)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SchedulerBasicP__McuSleep__sleep', quals=[] (at pp.c:9259)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9259)
      FuncCall:  (at None)
        ID: name='McuSleepC__McuSleep__sleep' (at pp.c:9261)
  FuncDef:  (at pp.c:9266)
    Decl: name='SchedulerBasicP__popTask', quals=[], storage=['__inline', 'static'] (at pp.c:9266)
      FuncDecl: quals=None (at pp.c:9266)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SchedulerBasicP__popTask', quals=[] (at pp.c:9266)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:9267)
      If:  (at pp.c:9268)
        BinaryOp: op='!=' (at pp.c:9268)
          ID: name='SchedulerBasicP__m_head' (at pp.c:9268)
          ID: name='SchedulerBasicP__NO_TASK' (at pp.c:9268)
        Compound:  (at pp.c:9269)
          Decl: name='id', quals=[], storage=[] (at pp.c:9270)
            TypeDecl: declname='id', quals=[] (at pp.c:9270)
              IdentifierType: names=['uint8_t'] (at None)
            ID: name='SchedulerBasicP__m_head' (at pp.c:9270)
          Assignment: op='=' (at pp.c:9273)
            ID: name='SchedulerBasicP__m_head' (at pp.c:9273)
            ArrayRef:  (at pp.c:9273)
              ID: name='SchedulerBasicP__m_next' (at pp.c:9273)
              ID: name='SchedulerBasicP__m_head' (at pp.c:9273)
          If:  (at pp.c:9274)
            BinaryOp: op='==' (at pp.c:9274)
              ID: name='SchedulerBasicP__m_head' (at pp.c:9274)
              ID: name='SchedulerBasicP__NO_TASK' (at pp.c:9274)
            Compound:  (at pp.c:9275)
              Assignment: op='=' (at pp.c:9276)
                ID: name='SchedulerBasicP__m_tail' (at pp.c:9276)
                ID: name='SchedulerBasicP__NO_TASK' (at pp.c:9276)
          Assignment: op='=' (at pp.c:9278)
            ArrayRef:  (at pp.c:9278)
              ID: name='SchedulerBasicP__m_next' (at pp.c:9278)
              ID: name='id' (at pp.c:9278)
            ID: name='SchedulerBasicP__NO_TASK' (at pp.c:9278)
          Return:  (at pp.c:9279)
            ID: name='id' (at pp.c:9279)
        Compound:  (at pp.c:9282)
          Return:  (at pp.c:9283)
            ID: name='SchedulerBasicP__NO_TASK' (at pp.c:9283)
  FuncDef:  (at pp.c:9288)
    Decl: name='SchedulerBasicP__Scheduler__taskLoop', quals=[], storage=['inline', 'static'] (at pp.c:9288)
      FuncDecl: quals=None (at pp.c:9288)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SchedulerBasicP__Scheduler__taskLoop', quals=[] (at pp.c:9288)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9289)
      For:  (at pp.c:9290)
        Compound:  (at pp.c:9291)
          Decl: name='nextTask', quals=[], storage=[] (at pp.c:9292)
            TypeDecl: declname='nextTask', quals=[] (at pp.c:9292)
              IdentifierType: names=['uint8_t'] (at None)
          Compound:  (at pp.c:9294)
            Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:9294)
              TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:9294)
                IdentifierType: names=['__nesc_atomic_t'] (at None)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_start' (at pp.c:9294)
            Compound:  (at pp.c:9295)
              While:  (at pp.c:9296)
                BinaryOp: op='==' (at pp.c:9296)
                  Assignment: op='=' (at pp.c:9296)
                    ID: name='nextTask' (at pp.c:9296)
                    FuncCall:  (at None)
                      ID: name='SchedulerBasicP__popTask' (at pp.c:9296)
                  ID: name='SchedulerBasicP__NO_TASK' (at pp.c:9296)
                Compound:  (at pp.c:9297)
                  FuncCall:  (at None)
                    ID: name='SchedulerBasicP__McuSleep__sleep' (at pp.c:9298)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:9302)
              ExprList:  (at pp.c:9302)
                ID: name='__nesc_atomic' (at pp.c:9302)
          FuncCall:  (at None)
            ID: name='SchedulerBasicP__TaskBasic__runTask' (at pp.c:9303)
            ExprList:  (at pp.c:9303)
              ID: name='nextTask' (at pp.c:9303)
  FuncDef:  (at pp.c:9308)
    Decl: name='RealMainP__Scheduler__taskLoop', quals=[], storage=['static', 'inline'] (at pp.c:9308)
      FuncDecl: quals=None (at pp.c:9308)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__Scheduler__taskLoop', quals=[] (at pp.c:9308)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9308)
      FuncCall:  (at None)
        ID: name='SchedulerBasicP__Scheduler__taskLoop' (at pp.c:9310)
  FuncDef:  (at pp.c:9315)
    Decl: name='AdcP__SingleChannel__multipleDataReady', quals=[], storage=['inline', 'static'] (at pp.c:9315)
      FuncDecl: quals=None (at pp.c:9315)
        ParamList:  (at pp.c:9315)
          Decl: name='client', quals=[], storage=[] (at pp.c:9315)
            TypeDecl: declname='client', quals=[] (at pp.c:9315)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:9316)
            PtrDecl: quals=[] (at pp.c:9316)
              TypeDecl: declname='buf', quals=[] (at pp.c:9316)
                IdentifierType: names=['uint16_t'] (at None)
          Decl: name='numSamples', quals=[], storage=[] (at pp.c:9316)
            TypeDecl: declname='numSamples', quals=[] (at pp.c:9316)
              IdentifierType: names=['uint16_t'] (at None)
        PtrDecl: quals=[] (at pp.c:9315)
          TypeDecl: declname='AdcP__SingleChannel__multipleDataReady', quals=[] (at pp.c:9315)
            IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:9317)
      Return:  (at pp.c:9319)
        Constant: type='int', value='0' (at pp.c:9319)
  FuncDef:  (at pp.c:9323)
    Decl: name='Msp430Adc12ImplP__SingleChannel__default__multipleDataReady', quals=[], storage=['inline', 'static'] (at pp.c:9323)
      FuncDecl: quals=None (at pp.c:9323)
        ParamList:  (at pp.c:9323)
          Decl: name='id', quals=[], storage=[] (at pp.c:9323)
            TypeDecl: declname='id', quals=[] (at pp.c:9323)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:9324)
            PtrDecl: quals=[] (at pp.c:9324)
              TypeDecl: declname='buf', quals=[] (at pp.c:9324)
                IdentifierType: names=['uint16_t'] (at None)
          Decl: name='numSamples', quals=[], storage=[] (at pp.c:9324)
            TypeDecl: declname='numSamples', quals=[] (at pp.c:9324)
              IdentifierType: names=['uint16_t'] (at None)
        PtrDecl: quals=[] (at pp.c:9323)
          TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__default__multipleDataReady', quals=[] (at pp.c:9323)
            IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:9325)
      Return:  (at pp.c:9326)
        Constant: type='int', value='0' (at pp.c:9326)
  FuncDef:  (at pp.c:9330)
    Decl: name='Msp430Adc12ImplP__SingleChannel__multipleDataReady', quals=[], storage=['static', 'inline'] (at pp.c:9330)
      FuncDecl: quals=None (at pp.c:9330)
        ParamList:  (at pp.c:9330)
          Decl: name='arg_0x1019dcac0', quals=[], storage=[] (at pp.c:9330)
            TypeDecl: declname='arg_0x1019dcac0', quals=[] (at pp.c:9330)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buffer', quals=[], storage=[] (at pp.c:9330)
            PtrDecl: quals=[] (at pp.c:9330)
              TypeDecl: declname='buffer', quals=[] (at pp.c:9330)
                IdentifierType: names=['uint16_t'] (at None)
          Decl: name='numSamples', quals=[], storage=[] (at pp.c:9330)
            TypeDecl: declname='numSamples', quals=[] (at pp.c:9330)
              IdentifierType: names=['uint16_t'] (at None)
        PtrDecl: quals=[] (at pp.c:9330)
          TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__multipleDataReady', quals=[] (at pp.c:9330)
            IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:9330)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:9332)
        PtrDecl: quals=[] (at pp.c:9332)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:9332)
            IdentifierType: names=['int', 'unsigned'] (at None)
      Switch:  (at pp.c:9336)
        ID: name='arg_0x1019dcac0' (at pp.c:9336)
        Compound:  (at pp.c:9336)
          Case:  (at pp.c:9338)
            ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:9338)
            Assignment: op='=' (at pp.c:9340)
              ID: name='__nesc_result' (at pp.c:9340)
              FuncCall:  (at None)
                ID: name='AdcP__SingleChannel__multipleDataReady' (at pp.c:9340)
                ExprList:  (at pp.c:9340)
                  ID: name='AdcReadClientC__0__CLIENT' (at pp.c:9340)
                  ID: name='buffer' (at pp.c:9340)
                  ID: name='numSamples' (at pp.c:9340)
          Break:  (at pp.c:9342)
          Case:  (at pp.c:9344)
            ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:9344)
            Assignment: op='=' (at pp.c:9346)
              ID: name='__nesc_result' (at pp.c:9346)
              FuncCall:  (at None)
                ID: name='AdcStreamP__SingleChannel__multipleDataReady' (at pp.c:9346)
                ExprList:  (at pp.c:9346)
                  ID: name='AdcReadStreamClientC__0__RSCLIENT' (at pp.c:9346)
                  ID: name='buffer' (at pp.c:9346)
                  ID: name='numSamples' (at pp.c:9346)
          Break:  (at pp.c:9348)
          Case:  (at pp.c:9350)
            ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:9350)
            Assignment: op='=' (at pp.c:9352)
              ID: name='__nesc_result' (at pp.c:9352)
              FuncCall:  (at None)
                ID: name='AdcP__SingleChannel__multipleDataReady' (at pp.c:9352)
                ExprList:  (at pp.c:9352)
                  ID: name='AdcReadNowClientC__0__CLIENT' (at pp.c:9352)
                  ID: name='buffer' (at pp.c:9352)
                  ID: name='numSamples' (at pp.c:9352)
          Break:  (at pp.c:9354)
          Default:  (at pp.c:9356)
            Assignment: op='=' (at pp.c:9358)
              ID: name='__nesc_result' (at pp.c:9358)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__SingleChannel__default__multipleDataReady' (at pp.c:9358)
                ExprList:  (at pp.c:9358)
                  ID: name='arg_0x1019dcac0' (at pp.c:9358)
                  ID: name='buffer' (at pp.c:9358)
                  ID: name='numSamples' (at pp.c:9358)
          Break:  (at pp.c:9360)
      Return:  (at pp.c:9366)
        ID: name='__nesc_result' (at pp.c:9366)
  FuncDef:  (at pp.c:9371)
    Decl: name='HplAdc12P__HplAdc12__getMem', quals=[], storage=['inline', 'static'] (at pp.c:9371)
      FuncDecl: quals=None (at pp.c:9371)
        ParamList:  (at pp.c:9371)
          Decl: name='i', quals=[], storage=[] (at pp.c:9371)
            TypeDecl: declname='i', quals=[] (at pp.c:9371)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__getMem', quals=[] (at pp.c:9371)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:9373)
      Return:  (at pp.c:9374)
        ArrayRef:  (at None)
          Cast:  (at None)
            Typename: quals=[] (at None)
              PtrDecl: quals=[] (at pp.c:9374)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['int'] (at None)
            Constant: type='int', value='0x0140' (at pp.c:9374)
          ID: name='i' (at pp.c:9374)
  FuncDef:  (at pp.c:9378)
    Decl: name='Msp430Adc12ImplP__HplAdc12__getMem', quals=[], storage=['static', 'inline'] (at pp.c:9378)
      FuncDecl: quals=None (at pp.c:9378)
        ParamList:  (at pp.c:9378)
          Decl: name='idx', quals=[], storage=[] (at pp.c:9378)
            TypeDecl: declname='idx', quals=[] (at pp.c:9378)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__getMem', quals=[] (at pp.c:9378)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:9378)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:9380)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:9380)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:9384)
        ID: name='__nesc_result' (at pp.c:9384)
        FuncCall:  (at None)
          ID: name='HplAdc12P__HplAdc12__getMem' (at pp.c:9384)
          ExprList:  (at pp.c:9384)
            ID: name='idx' (at pp.c:9384)
      Return:  (at pp.c:9388)
        ID: name='__nesc_result' (at pp.c:9388)
  FuncDef:  (at pp.c:9393)
    Decl: name='HplAdc12P__int2adc12memctl', quals=[], storage=['inline', 'static'] (at pp.c:9393)
      FuncDecl: quals=None (at pp.c:9393)
        ParamList:  (at pp.c:9393)
          Decl: name='x', quals=[], storage=[] (at pp.c:9393)
            TypeDecl: declname='x', quals=[] (at pp.c:9393)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='HplAdc12P__int2adc12memctl', quals=[] (at pp.c:9393)
          IdentifierType: names=['adc12memctl_t'] (at None)
    Compound:  (at pp.c:9395)
      Decl: name='c', quals=[], storage=[] (at pp.c:9404)
        TypeDecl: declname='c', quals=[] (at pp.c:9404)
          Union: name='__nesc_unnamed4317', packed=False (at pp.c:9397)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:9399)
                IdentifierType: names=['uint8_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:9401)
                IdentifierType: names=['adc12memctl_t'] (at None)
        ExprList:  (at pp.c:9404)
          Assignment: op='=' (at pp.c:9404)
            StructRef: type='.' (at pp.c:9404)
              ID: name='f' (at pp.c:9404)
            ID: name='x' (at pp.c:9404)
      Return:  (at pp.c:9407)
        StructRef: type='.' (at pp.c:9407)
          ID: name='c' (at pp.c:9407)
          ID: name='t' (at pp.c:9407)
  FuncDef:  (at pp.c:9411)
    Decl: name='HplAdc12P__HplAdc12__getMCtl', quals=[], storage=['inline', 'static'] (at pp.c:9411)
      FuncDecl: quals=None (at pp.c:9411)
        ParamList:  (at pp.c:9411)
          Decl: name='i', quals=[], storage=[] (at pp.c:9411)
            TypeDecl: declname='i', quals=[] (at pp.c:9411)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__getMCtl', quals=[] (at pp.c:9411)
          IdentifierType: names=['adc12memctl_t'] (at None)
    Compound:  (at pp.c:9413)
      Return:  (at pp.c:9414)
        FuncCall:  (at None)
          ID: name='HplAdc12P__int2adc12memctl' (at pp.c:9414)
          ExprList:  (at None)
            ArrayRef:  (at None)
              Cast:  (at None)
                Typename: quals=[] (at None)
                  PtrDecl: quals=[] (at pp.c:9414)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['char'] (at None)
                Constant: type='int', value='0x0080' (at pp.c:9414)
              ID: name='i' (at pp.c:9414)
  FuncDef:  (at pp.c:9418)
    Decl: name='Msp430Adc12ImplP__HplAdc12__getMCtl', quals=[], storage=['static', 'inline'] (at pp.c:9418)
      FuncDecl: quals=None (at pp.c:9418)
        ParamList:  (at pp.c:9418)
          Decl: name='idx', quals=[], storage=[] (at pp.c:9418)
            TypeDecl: declname='idx', quals=[] (at pp.c:9418)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__getMCtl', quals=[] (at pp.c:9418)
          IdentifierType: names=['adc12memctl_t'] (at None)
    Compound:  (at pp.c:9418)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:9420)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:9420)
          Struct: name='__nesc_unnamed4268', packed=False (at pp.c:9420)
      Assignment: op='=' (at pp.c:9424)
        ID: name='__nesc_result' (at pp.c:9424)
        FuncCall:  (at None)
          ID: name='HplAdc12P__HplAdc12__getMCtl' (at pp.c:9424)
          ExprList:  (at pp.c:9424)
            ID: name='idx' (at pp.c:9424)
      Return:  (at pp.c:9428)
        ID: name='__nesc_result' (at pp.c:9428)
  FuncDef:  (at pp.c:9433)
    Decl: name='Msp430Adc12ImplP__MultiChannel__default__dataReady', quals=[], storage=['inline', 'static'] (at pp.c:9433)
      FuncDecl: quals=None (at pp.c:9433)
        ParamList:  (at pp.c:9433)
          Decl: name='id', quals=[], storage=[] (at pp.c:9433)
            TypeDecl: declname='id', quals=[] (at pp.c:9433)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buffer', quals=[], storage=[] (at pp.c:9433)
            PtrDecl: quals=[] (at pp.c:9433)
              TypeDecl: declname='buffer', quals=[] (at pp.c:9433)
                IdentifierType: names=['uint16_t'] (at None)
          Decl: name='numSamples', quals=[], storage=[] (at pp.c:9433)
            TypeDecl: declname='numSamples', quals=[] (at pp.c:9433)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__MultiChannel__default__dataReady', quals=[] (at pp.c:9433)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9435)
  FuncDef:  (at pp.c:9439)
    Decl: name='Msp430Adc12ImplP__MultiChannel__dataReady', quals=[], storage=['static', 'inline'] (at pp.c:9439)
      FuncDecl: quals=None (at pp.c:9439)
        ParamList:  (at pp.c:9439)
          Decl: name='arg_0x1019da0c8', quals=[], storage=[] (at pp.c:9439)
            TypeDecl: declname='arg_0x1019da0c8', quals=[] (at pp.c:9439)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buffer', quals=[], storage=[] (at pp.c:9439)
            PtrDecl: quals=[] (at pp.c:9439)
              TypeDecl: declname='buffer', quals=[] (at pp.c:9439)
                IdentifierType: names=['uint16_t'] (at None)
          Decl: name='numSamples', quals=[], storage=[] (at pp.c:9439)
            TypeDecl: declname='numSamples', quals=[] (at pp.c:9439)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__MultiChannel__dataReady', quals=[] (at pp.c:9439)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9439)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__MultiChannel__default__dataReady' (at pp.c:9441)
        ExprList:  (at pp.c:9441)
          ID: name='arg_0x1019da0c8' (at pp.c:9441)
          ID: name='buffer' (at pp.c:9441)
          ID: name='numSamples' (at pp.c:9441)
  FuncDef:  (at pp.c:9446)
    Decl: name='Msp430Adc12ImplP__SingleChannel__default__singleDataReady', quals=[], storage=['inline', 'static'] (at pp.c:9446)
      FuncDecl: quals=None (at pp.c:9446)
        ParamList:  (at pp.c:9446)
          Decl: name='id', quals=[], storage=[] (at pp.c:9446)
            TypeDecl: declname='id', quals=[] (at pp.c:9446)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:9446)
            TypeDecl: declname='data', quals=[] (at pp.c:9446)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__default__singleDataReady', quals=[] (at pp.c:9446)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:9447)
      Return:  (at pp.c:9448)
        ID: name='FAIL' (at pp.c:9448)
  FuncDef:  (at pp.c:9452)
    Decl: name='Msp430Adc12ImplP__SingleChannel__singleDataReady', quals=[], storage=['static', 'inline'] (at pp.c:9452)
      FuncDecl: quals=None (at pp.c:9452)
        ParamList:  (at pp.c:9452)
          Decl: name='arg_0x1019dcac0', quals=[], storage=[] (at pp.c:9452)
            TypeDecl: declname='arg_0x1019dcac0', quals=[] (at pp.c:9452)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:9452)
            TypeDecl: declname='data', quals=[] (at pp.c:9452)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__singleDataReady', quals=[] (at pp.c:9452)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:9452)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:9454)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:9454)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:9458)
        ID: name='arg_0x1019dcac0' (at pp.c:9458)
        Compound:  (at pp.c:9458)
          Case:  (at pp.c:9460)
            ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:9460)
            Assignment: op='=' (at pp.c:9462)
              ID: name='__nesc_result' (at pp.c:9462)
              FuncCall:  (at None)
                ID: name='AdcP__SingleChannel__singleDataReady' (at pp.c:9462)
                ExprList:  (at pp.c:9462)
                  ID: name='AdcReadClientC__0__CLIENT' (at pp.c:9462)
                  ID: name='data' (at pp.c:9462)
          Break:  (at pp.c:9464)
          Case:  (at pp.c:9466)
            ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:9466)
            Assignment: op='=' (at pp.c:9468)
              ID: name='__nesc_result' (at pp.c:9468)
              FuncCall:  (at None)
                ID: name='AdcStreamP__SingleChannel__singleDataReady' (at pp.c:9468)
                ExprList:  (at pp.c:9468)
                  ID: name='AdcReadStreamClientC__0__RSCLIENT' (at pp.c:9468)
                  ID: name='data' (at pp.c:9468)
          Break:  (at pp.c:9470)
          Case:  (at pp.c:9472)
            ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:9472)
            Assignment: op='=' (at pp.c:9474)
              ID: name='__nesc_result' (at pp.c:9474)
              FuncCall:  (at None)
                ID: name='AdcP__SingleChannel__singleDataReady' (at pp.c:9474)
                ExprList:  (at pp.c:9474)
                  ID: name='AdcReadNowClientC__0__CLIENT' (at pp.c:9474)
                  ID: name='data' (at pp.c:9474)
          Break:  (at pp.c:9476)
          Default:  (at pp.c:9478)
            Assignment: op='=' (at pp.c:9480)
              ID: name='__nesc_result' (at pp.c:9480)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__SingleChannel__default__singleDataReady' (at pp.c:9480)
                ExprList:  (at pp.c:9480)
                  ID: name='arg_0x1019dcac0' (at pp.c:9480)
                  ID: name='data' (at pp.c:9480)
          Break:  (at pp.c:9482)
      Return:  (at pp.c:9488)
        ID: name='__nesc_result' (at pp.c:9488)
  FuncDef:  (at pp.c:9493)
    Decl: name='Msp430Adc12ImplP__Overflow__default__conversionTimeOverflow', quals=[], storage=['inline', 'static'] (at pp.c:9493)
      FuncDecl: quals=None (at pp.c:9493)
        ParamList:  (at pp.c:9493)
          Decl: name='id', quals=[], storage=[] (at pp.c:9493)
            TypeDecl: declname='id', quals=[] (at pp.c:9493)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Overflow__default__conversionTimeOverflow', quals=[] (at pp.c:9493)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9495)
  FuncDef:  (at pp.c:9499)
    Decl: name='Msp430Adc12ImplP__Overflow__conversionTimeOverflow', quals=[], storage=['static', 'inline'] (at pp.c:9499)
      FuncDecl: quals=None (at pp.c:9499)
        ParamList:  (at pp.c:9499)
          Decl: name='arg_0x1019d9020', quals=[], storage=[] (at pp.c:9499)
            TypeDecl: declname='arg_0x1019d9020', quals=[] (at pp.c:9499)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Overflow__conversionTimeOverflow', quals=[] (at pp.c:9499)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9499)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__Overflow__default__conversionTimeOverflow' (at pp.c:9501)
        ExprList:  (at pp.c:9501)
          ID: name='arg_0x1019d9020' (at pp.c:9501)
  FuncDef:  (at pp.c:9506)
    Decl: name='Msp430Adc12ImplP__Overflow__default__memOverflow', quals=[], storage=['inline', 'static'] (at pp.c:9506)
      FuncDecl: quals=None (at pp.c:9506)
        ParamList:  (at pp.c:9506)
          Decl: name='id', quals=[], storage=[] (at pp.c:9506)
            TypeDecl: declname='id', quals=[] (at pp.c:9506)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Overflow__default__memOverflow', quals=[] (at pp.c:9506)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9508)
  FuncDef:  (at pp.c:9512)
    Decl: name='Msp430Adc12ImplP__Overflow__memOverflow', quals=[], storage=['static', 'inline'] (at pp.c:9512)
      FuncDecl: quals=None (at pp.c:9512)
        ParamList:  (at pp.c:9512)
          Decl: name='arg_0x1019d9020', quals=[], storage=[] (at pp.c:9512)
            TypeDecl: declname='arg_0x1019d9020', quals=[] (at pp.c:9512)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Overflow__memOverflow', quals=[] (at pp.c:9512)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9512)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__Overflow__default__memOverflow' (at pp.c:9514)
        ExprList:  (at pp.c:9514)
          ID: name='arg_0x1019d9020' (at pp.c:9514)
  FuncDef:  (at pp.c:9519)
    Decl: name='Msp430Adc12ImplP__HplAdc12__conversionDone', quals=[], storage=['inline', 'static'] (at pp.c:9519)
      FuncDecl: quals=None (at pp.c:9519)
        ParamList:  (at pp.c:9519)
          Decl: name='iv', quals=[], storage=[] (at pp.c:9519)
            TypeDecl: declname='iv', quals=[] (at pp.c:9519)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__conversionDone', quals=[] (at pp.c:9519)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9520)
      Decl: name='overflow', quals=[], storage=[] (at pp.c:9521)
        TypeDecl: declname='overflow', quals=[] (at pp.c:9521)
          IdentifierType: names=['bool'] (at None)
        ID: name='FALSE' (at pp.c:9521)
      Decl: name='resultBuffer', quals=[], storage=[] (at pp.c:9522)
        PtrDecl: quals=[] (at pp.c:9522)
          TypeDecl: declname='resultBuffer', quals=[] (at pp.c:9522)
            IdentifierType: names=['uint16_t'] (at None)
      If:  (at pp.c:9524)
        BinaryOp: op='<=' (at pp.c:9524)
          ID: name='iv' (at pp.c:9524)
          Constant: type='int', value='4' (at pp.c:9524)
        Compound:  (at pp.c:9524)
          If:  (at pp.c:9525)
            BinaryOp: op='==' (at pp.c:9525)
              ID: name='iv' (at pp.c:9525)
              Constant: type='int', value='2' (at pp.c:9525)
            Compound:  (at pp.c:9525)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__Overflow__memOverflow' (at pp.c:9526)
                ExprList:  (at pp.c:9526)
                  ID: name='Msp430Adc12ImplP__clientID' (at pp.c:9526)
            Compound:  (at pp.c:9528)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__Overflow__conversionTimeOverflow' (at pp.c:9530)
                ExprList:  (at pp.c:9530)
                  ID: name='Msp430Adc12ImplP__clientID' (at pp.c:9530)
          If:  (at pp.c:9532)
            UnaryOp: op='!' (at None)
              StructRef: type='.' (at None)
                FuncCall:  (at None)
                  ID: name='Msp430Adc12ImplP__HplAdc12__getCtl0' (at pp.c:9532)
                ID: name='msc' (at pp.c:9532)
            Compound:  (at pp.c:9532)
              Assignment: op='=' (at pp.c:9533)
                ID: name='overflow' (at pp.c:9533)
                ID: name='TRUE' (at pp.c:9533)
      Switch:  (at pp.c:9537)
        BinaryOp: op='&' (at pp.c:9537)
          ID: name='Msp430Adc12ImplP__state' (at pp.c:9537)
          ID: name='Msp430Adc12ImplP__CONVERSION_MODE_MASK' (at pp.c:9537)
        Compound:  (at pp.c:9538)
          Case:  (at pp.c:9539)
            ID: name='Msp430Adc12ImplP__SINGLE_DATA' (at pp.c:9539)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__stopConversion' (at pp.c:9540)
          FuncCall:  (at None)
            ID: name='Msp430Adc12ImplP__SingleChannel__singleDataReady' (at pp.c:9541)
            ExprList:  (at pp.c:9541)
              ID: name='Msp430Adc12ImplP__clientID' (at pp.c:9541)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__HplAdc12__getMem' (at pp.c:9541)
                ExprList:  (at pp.c:9541)
                  Constant: type='int', value='0' (at pp.c:9541)
          Break:  (at pp.c:9542)
          Case:  (at pp.c:9543)
            ID: name='Msp430Adc12ImplP__SINGLE_DATA_REPEAT' (at pp.c:9543)
            Compound:  (at pp.c:9544)
              Decl: name='repeatContinue', quals=[], storage=[] (at pp.c:9545)
                TypeDecl: declname='repeatContinue', quals=[] (at pp.c:9545)
                  IdentifierType: names=['error_t'] (at None)
              Assignment: op='=' (at pp.c:9548)
                ID: name='repeatContinue' (at pp.c:9548)
                FuncCall:  (at None)
                  ID: name='Msp430Adc12ImplP__SingleChannel__singleDataReady' (at pp.c:9548)
                  ExprList:  (at pp.c:9548)
                    ID: name='Msp430Adc12ImplP__clientID' (at pp.c:9548)
                    FuncCall:  (at None)
                      ID: name='Msp430Adc12ImplP__HplAdc12__getMem' (at pp.c:9549)
                      ExprList:  (at pp.c:9549)
                        Constant: type='int', value='0' (at pp.c:9549)
              If:  (at pp.c:9550)
                BinaryOp: op='!=' (at pp.c:9550)
                  ID: name='repeatContinue' (at pp.c:9550)
                  ID: name='SUCCESS' (at pp.c:9550)
                Compound:  (at pp.c:9550)
                  FuncCall:  (at None)
                    ID: name='Msp430Adc12ImplP__stopConversion' (at pp.c:9551)
              Break:  (at pp.c:9554)
          Case:  (at pp.c:9557)
            ID: name='Msp430Adc12ImplP__MULTI_CHANNEL' (at pp.c:9557)
            Compound:  (at pp.c:9558)
              Decl: name='i', quals=[], storage=[] (at pp.c:9559)
                TypeDecl: declname='i', quals=[] (at pp.c:9559)
                  IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='0' (at pp.c:9559)
              Decl: name='k', quals=[], storage=[] (at pp.c:9561)
                TypeDecl: declname='k', quals=[] (at pp.c:9561)
                  IdentifierType: names=['uint16_t'] (at None)
              Assignment: op='=' (at pp.c:9564)
                ID: name='resultBuffer' (at pp.c:9564)
                BinaryOp: op='+' (at pp.c:9564)
                  ID: name='Msp430Adc12ImplP__resultBufferStart' (at pp.c:9564)
                  ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:9564)
              DoWhile:  (at pp.c:9565)
                BinaryOp: op='<' (at pp.c:9570)
                  UnaryOp: op='++' (at pp.c:9570)
                    ID: name='i' (at pp.c:9570)
                  ID: name='Msp430Adc12ImplP__numChannels' (at pp.c:9570)
                Compound:  (at pp.c:9565)
                  Assignment: op='=' (at pp.c:9566)
                    UnaryOp: op='*' (at pp.c:9566)
                      UnaryOp: op='p++' (at pp.c:9566)
                        ID: name='resultBuffer' (at pp.c:9566)
                    FuncCall:  (at None)
                      ID: name='Msp430Adc12ImplP__HplAdc12__getMem' (at pp.c:9566)
                      ExprList:  (at pp.c:9566)
                        ID: name='i' (at pp.c:9566)
              Assignment: op='+=' (at pp.c:9571)
                ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:9571)
                ID: name='Msp430Adc12ImplP__numChannels' (at pp.c:9571)
              If:  (at pp.c:9572)
                BinaryOp: op='||' (at pp.c:9572)
                  ID: name='overflow' (at pp.c:9572)
                  BinaryOp: op='==' (at pp.c:9572)
                    ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:9572)
                    ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:9572)
                Compound:  (at pp.c:9572)
                  FuncCall:  (at None)
                    ID: name='Msp430Adc12ImplP__stopConversion' (at pp.c:9573)
                  Assignment: op='-=' (at pp.c:9574)
                    ID: name='resultBuffer' (at pp.c:9574)
                    ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:9574)
                  Assignment: op='=' (at pp.c:9575)
                    ID: name='k' (at pp.c:9575)
                    BinaryOp: op='-' (at pp.c:9575)
                      ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:9575)
                      ID: name='Msp430Adc12ImplP__numChannels' (at pp.c:9575)
                  Assignment: op='=' (at pp.c:9576)
                    ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:9576)
                    Constant: type='int', value='0' (at pp.c:9576)
                  FuncCall:  (at None)
                    ID: name='Msp430Adc12ImplP__MultiChannel__dataReady' (at pp.c:9577)
                    ExprList:  (at pp.c:9577)
                      ID: name='Msp430Adc12ImplP__clientID' (at pp.c:9577)
                      ID: name='resultBuffer' (at pp.c:9577)
                      TernaryOp:  (at pp.c:9578)
                        ID: name='overflow' (at pp.c:9578)
                        ID: name='k' (at pp.c:9578)
                        ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:9578)
          Break:  (at pp.c:9581)
          Case:  (at pp.c:9582)
            ID: name='Msp430Adc12ImplP__MULTIPLE_DATA' (at pp.c:9582)
            Compound:  (at pp.c:9583)
              Decl: name='i', quals=[], storage=[] (at pp.c:9584)
                TypeDecl: declname='i', quals=[] (at pp.c:9584)
                  IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='0' (at pp.c:9584)
              Decl: name='length', quals=[], storage=[] (at pp.c:9586)
                TypeDecl: declname='length', quals=[] (at pp.c:9586)
                  IdentifierType: names=['uint16_t'] (at None)
              Decl: name='k', quals=[], storage=[] (at pp.c:9588)
                TypeDecl: declname='k', quals=[] (at pp.c:9588)
                  IdentifierType: names=['uint16_t'] (at None)
              Assignment: op='=' (at pp.c:9591)
                ID: name='resultBuffer' (at pp.c:9591)
                BinaryOp: op='+' (at pp.c:9591)
                  ID: name='Msp430Adc12ImplP__resultBufferStart' (at pp.c:9591)
                  ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:9591)
              If:  (at pp.c:9592)
                BinaryOp: op='>' (at pp.c:9592)
                  BinaryOp: op='-' (at pp.c:9592)
                    ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:9592)
                    ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:9592)
                  Constant: type='int', value='16' (at pp.c:9592)
                Compound:  (at pp.c:9592)
                  Assignment: op='=' (at pp.c:9593)
                    ID: name='length' (at pp.c:9593)
                    Constant: type='int', value='16' (at pp.c:9593)
                Compound:  (at pp.c:9595)
                  Assignment: op='=' (at pp.c:9597)
                    ID: name='length' (at pp.c:9597)
                    BinaryOp: op='-' (at pp.c:9597)
                      ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:9597)
                      ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:9597)
              DoWhile:  (at pp.c:9600)
                BinaryOp: op='<' (at pp.c:9605)
                  UnaryOp: op='++' (at pp.c:9605)
                    ID: name='i' (at pp.c:9605)
                  ID: name='length' (at pp.c:9605)
                Compound:  (at pp.c:9600)
                  Assignment: op='=' (at pp.c:9601)
                    UnaryOp: op='*' (at pp.c:9601)
                      UnaryOp: op='p++' (at pp.c:9601)
                        ID: name='resultBuffer' (at pp.c:9601)
                    FuncCall:  (at None)
                      ID: name='Msp430Adc12ImplP__HplAdc12__getMem' (at pp.c:9601)
                      ExprList:  (at pp.c:9601)
                        ID: name='i' (at pp.c:9601)
              Assignment: op='+=' (at pp.c:9606)
                ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:9606)
                ID: name='length' (at pp.c:9606)
              If:  (at pp.c:9607)
                BinaryOp: op='||' (at pp.c:9607)
                  ID: name='overflow' (at pp.c:9607)
                  BinaryOp: op='==' (at pp.c:9607)
                    ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:9607)
                    ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:9607)
                Compound:  (at pp.c:9607)
                  FuncCall:  (at None)
                    ID: name='Msp430Adc12ImplP__stopConversion' (at pp.c:9608)
                  Assignment: op='-=' (at pp.c:9609)
                    ID: name='resultBuffer' (at pp.c:9609)
                    ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:9609)
                  Assignment: op='=' (at pp.c:9610)
                    ID: name='k' (at pp.c:9610)
                    BinaryOp: op='-' (at pp.c:9610)
                      ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:9610)
                      ID: name='length' (at pp.c:9610)
                  Assignment: op='=' (at pp.c:9611)
                    ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:9611)
                    Constant: type='int', value='0' (at pp.c:9611)
                  FuncCall:  (at None)
                    ID: name='Msp430Adc12ImplP__SingleChannel__multipleDataReady' (at pp.c:9612)
                    ExprList:  (at pp.c:9612)
                      ID: name='Msp430Adc12ImplP__clientID' (at pp.c:9612)
                      ID: name='resultBuffer' (at pp.c:9612)
                      TernaryOp:  (at pp.c:9613)
                        ID: name='overflow' (at pp.c:9613)
                        ID: name='k' (at pp.c:9613)
                        ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:9613)
                Compound:  (at pp.c:9615)
                  If:  (at pp.c:9617)
                    BinaryOp: op='>' (at pp.c:9617)
                      BinaryOp: op='-' (at pp.c:9617)
                        ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:9617)
                        ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:9617)
                      Constant: type='int', value='15' (at pp.c:9617)
                    Compound:  (at pp.c:9617)
                      Return:  (at pp.c:9618)
                    Compound:  (at pp.c:9622)
                      Decl: name='memctl', quals=[], storage=[] (at pp.c:9624)
                        TypeDecl: declname='memctl', quals=[] (at pp.c:9624)
                          IdentifierType: names=['adc12memctl_t'] (at None)
                        FuncCall:  (at None)
                          ID: name='Msp430Adc12ImplP__HplAdc12__getMCtl' (at pp.c:9624)
                          ExprList:  (at pp.c:9624)
                            Constant: type='int', value='0' (at pp.c:9624)
                      Assignment: op='=' (at pp.c:9627)
                        StructRef: type='.' (at pp.c:9627)
                          ID: name='memctl' (at pp.c:9627)
                          ID: name='eos' (at pp.c:9627)
                        Constant: type='int', value='1' (at pp.c:9627)
                      FuncCall:  (at None)
                        ID: name='Msp430Adc12ImplP__HplAdc12__setMCtl' (at pp.c:9628)
                        ExprList:  (at pp.c:9628)
                          BinaryOp: op='-' (at pp.c:9628)
                            ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:9628)
                            ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:9628)
                          ID: name='memctl' (at pp.c:9628)
          Break:  (at pp.c:9633)
          Case:  (at pp.c:9634)
            ID: name='Msp430Adc12ImplP__MULTIPLE_DATA_REPEAT' (at pp.c:9634)
            Compound:  (at pp.c:9635)
              Decl: name='i', quals=[], storage=[] (at pp.c:9636)
                TypeDecl: declname='i', quals=[] (at pp.c:9636)
                  IdentifierType: names=['uint8_t'] (at None)
                Constant: type='int', value='0' (at pp.c:9636)
              Assignment: op='=' (at pp.c:9639)
                ID: name='resultBuffer' (at pp.c:9639)
                ID: name='Msp430Adc12ImplP__resultBufferStart' (at pp.c:9639)
              DoWhile:  (at pp.c:9640)
                BinaryOp: op='<' (at pp.c:9645)
                  UnaryOp: op='++' (at pp.c:9645)
                    ID: name='i' (at pp.c:9645)
                  ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:9645)
                Compound:  (at pp.c:9640)
                  Assignment: op='=' (at pp.c:9641)
                    UnaryOp: op='*' (at pp.c:9641)
                      UnaryOp: op='p++' (at pp.c:9641)
                        ID: name='resultBuffer' (at pp.c:9641)
                    FuncCall:  (at None)
                      ID: name='Msp430Adc12ImplP__HplAdc12__getMem' (at pp.c:9641)
                      ExprList:  (at pp.c:9641)
                        ID: name='i' (at pp.c:9641)
              Assignment: op='=' (at pp.c:9647)
                ID: name='Msp430Adc12ImplP__resultBufferStart' (at pp.c:9647)
                FuncCall:  (at None)
                  ID: name='Msp430Adc12ImplP__SingleChannel__multipleDataReady' (at pp.c:9647)
                  ExprList:  (at pp.c:9647)
                    ID: name='Msp430Adc12ImplP__clientID' (at pp.c:9647)
                    BinaryOp: op='-' (at pp.c:9648)
                      ID: name='resultBuffer' (at pp.c:9648)
                      ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:9648)
                    TernaryOp:  (at pp.c:9649)
                      ID: name='overflow' (at pp.c:9649)
                      Constant: type='int', value='0' (at pp.c:9649)
                      ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:9649)
              If:  (at pp.c:9650)
                UnaryOp: op='!' (at pp.c:9650)
                  ID: name='Msp430Adc12ImplP__resultBufferStart' (at pp.c:9650)
                Compound:  (at pp.c:9650)
                  FuncCall:  (at None)
                    ID: name='Msp430Adc12ImplP__stopConversion' (at pp.c:9651)
              Break:  (at pp.c:9654)
  FuncDef:  (at pp.c:9660)
    Decl: name='Msp430RefVoltGeneratorP__HplAdc12__conversionDone', quals=[], storage=['inline', 'static'] (at pp.c:9660)
      FuncDecl: quals=None (at pp.c:9660)
        ParamList:  (at pp.c:9660)
          Decl: name='iv', quals=[], storage=[] (at pp.c:9660)
            TypeDecl: declname='iv', quals=[] (at pp.c:9660)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__HplAdc12__conversionDone', quals=[] (at pp.c:9660)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9662)
  FuncDef:  (at pp.c:9666)
    Decl: name='HplAdc12P__HplAdc12__conversionDone', quals=[], storage=['static', 'inline'] (at pp.c:9666)
      FuncDecl: quals=None (at pp.c:9666)
        ParamList:  (at pp.c:9666)
          Decl: name='iv', quals=[], storage=[] (at pp.c:9666)
            TypeDecl: declname='iv', quals=[] (at pp.c:9666)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__conversionDone', quals=[] (at pp.c:9666)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9666)
      FuncCall:  (at None)
        ID: name='Msp430RefVoltGeneratorP__HplAdc12__conversionDone' (at pp.c:9668)
        ExprList:  (at pp.c:9668)
          ID: name='iv' (at pp.c:9668)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__HplAdc12__conversionDone' (at pp.c:9670)
        ExprList:  (at pp.c:9670)
          ID: name='iv' (at pp.c:9670)
  FuncDef:  (at pp.c:9675)
    Decl: name='HplMsp430GeneralIOP__40__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:9675)
      FuncDecl: quals=None (at pp.c:9675)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__40__IO__selectIOFunc', quals=[] (at pp.c:9675)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9677)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:9680)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:9680)
        UnaryOp: op='~' (at pp.c:9680)
          BinaryOp: op='<<' (at pp.c:9680)
            Constant: type='int', value='0x01' (at pp.c:9680)
            Constant: type='int', value='0' (at pp.c:9680)
  FuncDef:  (at pp.c:9684)
    Decl: name='Msp430Adc12ImplP__Port60__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:9684)
      FuncDecl: quals=None (at pp.c:9684)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port60__selectIOFunc', quals=[] (at pp.c:9684)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9684)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__40__IO__selectIOFunc' (at pp.c:9686)
  FuncDef:  (at pp.c:9691)
    Decl: name='HplMsp430GeneralIOP__41__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:9691)
      FuncDecl: quals=None (at pp.c:9691)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__41__IO__selectIOFunc', quals=[] (at pp.c:9691)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9693)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:9696)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:9696)
        UnaryOp: op='~' (at pp.c:9696)
          BinaryOp: op='<<' (at pp.c:9696)
            Constant: type='int', value='0x01' (at pp.c:9696)
            Constant: type='int', value='1' (at pp.c:9696)
  FuncDef:  (at pp.c:9700)
    Decl: name='Msp430Adc12ImplP__Port61__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:9700)
      FuncDecl: quals=None (at pp.c:9700)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port61__selectIOFunc', quals=[] (at pp.c:9700)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9700)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__41__IO__selectIOFunc' (at pp.c:9702)
  FuncDef:  (at pp.c:9707)
    Decl: name='HplMsp430GeneralIOP__42__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:9707)
      FuncDecl: quals=None (at pp.c:9707)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__42__IO__selectIOFunc', quals=[] (at pp.c:9707)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9709)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:9712)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:9712)
        UnaryOp: op='~' (at pp.c:9712)
          BinaryOp: op='<<' (at pp.c:9712)
            Constant: type='int', value='0x01' (at pp.c:9712)
            Constant: type='int', value='2' (at pp.c:9712)
  FuncDef:  (at pp.c:9716)
    Decl: name='Msp430Adc12ImplP__Port62__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:9716)
      FuncDecl: quals=None (at pp.c:9716)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port62__selectIOFunc', quals=[] (at pp.c:9716)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9716)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__42__IO__selectIOFunc' (at pp.c:9718)
  FuncDef:  (at pp.c:9723)
    Decl: name='HplMsp430GeneralIOP__43__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:9723)
      FuncDecl: quals=None (at pp.c:9723)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__43__IO__selectIOFunc', quals=[] (at pp.c:9723)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9725)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:9728)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:9728)
        UnaryOp: op='~' (at pp.c:9728)
          BinaryOp: op='<<' (at pp.c:9728)
            Constant: type='int', value='0x01' (at pp.c:9728)
            Constant: type='int', value='3' (at pp.c:9728)
  FuncDef:  (at pp.c:9732)
    Decl: name='Msp430Adc12ImplP__Port63__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:9732)
      FuncDecl: quals=None (at pp.c:9732)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port63__selectIOFunc', quals=[] (at pp.c:9732)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9732)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__43__IO__selectIOFunc' (at pp.c:9734)
  FuncDef:  (at pp.c:9739)
    Decl: name='HplMsp430GeneralIOP__44__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:9739)
      FuncDecl: quals=None (at pp.c:9739)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__44__IO__selectIOFunc', quals=[] (at pp.c:9739)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9741)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:9744)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:9744)
        UnaryOp: op='~' (at pp.c:9744)
          BinaryOp: op='<<' (at pp.c:9744)
            Constant: type='int', value='0x01' (at pp.c:9744)
            Constant: type='int', value='4' (at pp.c:9744)
  FuncDef:  (at pp.c:9748)
    Decl: name='Msp430Adc12ImplP__Port64__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:9748)
      FuncDecl: quals=None (at pp.c:9748)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port64__selectIOFunc', quals=[] (at pp.c:9748)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9748)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__44__IO__selectIOFunc' (at pp.c:9750)
  FuncDef:  (at pp.c:9755)
    Decl: name='HplMsp430GeneralIOP__45__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:9755)
      FuncDecl: quals=None (at pp.c:9755)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__45__IO__selectIOFunc', quals=[] (at pp.c:9755)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9757)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:9760)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:9760)
        UnaryOp: op='~' (at pp.c:9760)
          BinaryOp: op='<<' (at pp.c:9760)
            Constant: type='int', value='0x01' (at pp.c:9760)
            Constant: type='int', value='5' (at pp.c:9760)
  FuncDef:  (at pp.c:9764)
    Decl: name='Msp430Adc12ImplP__Port65__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:9764)
      FuncDecl: quals=None (at pp.c:9764)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port65__selectIOFunc', quals=[] (at pp.c:9764)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9764)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__45__IO__selectIOFunc' (at pp.c:9766)
  FuncDef:  (at pp.c:9771)
    Decl: name='HplMsp430GeneralIOP__46__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:9771)
      FuncDecl: quals=None (at pp.c:9771)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__46__IO__selectIOFunc', quals=[] (at pp.c:9771)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9773)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:9776)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:9776)
        UnaryOp: op='~' (at pp.c:9776)
          BinaryOp: op='<<' (at pp.c:9776)
            Constant: type='int', value='0x01' (at pp.c:9776)
            Constant: type='int', value='6' (at pp.c:9776)
  FuncDef:  (at pp.c:9780)
    Decl: name='Msp430Adc12ImplP__Port66__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:9780)
      FuncDecl: quals=None (at pp.c:9780)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port66__selectIOFunc', quals=[] (at pp.c:9780)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9780)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__46__IO__selectIOFunc' (at pp.c:9782)
  FuncDef:  (at pp.c:9787)
    Decl: name='HplMsp430GeneralIOP__47__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:9787)
      FuncDecl: quals=None (at pp.c:9787)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__47__IO__selectIOFunc', quals=[] (at pp.c:9787)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9789)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:9792)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:9792)
        UnaryOp: op='~' (at pp.c:9792)
          BinaryOp: op='<<' (at pp.c:9792)
            Constant: type='int', value='0x01' (at pp.c:9792)
            Constant: type='int', value='7' (at pp.c:9792)
  FuncDef:  (at pp.c:9796)
    Decl: name='Msp430Adc12ImplP__Port67__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:9796)
      FuncDecl: quals=None (at pp.c:9796)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port67__selectIOFunc', quals=[] (at pp.c:9796)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9796)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__47__IO__selectIOFunc' (at pp.c:9798)
  FuncDef:  (at pp.c:9803)
    Decl: name='HplAdc12P__HplAdc12__resetIFGs', quals=[], storage=['inline', 'static'] (at pp.c:9803)
      FuncDecl: quals=None (at pp.c:9803)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__resetIFGs', quals=[] (at pp.c:9803)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9805)
      Assignment: op='=' (at pp.c:9806)
        ID: name='HplAdc12P__ADC12IV' (at pp.c:9806)
        Constant: type='int', value='0' (at pp.c:9806)
      Assignment: op='=' (at pp.c:9807)
        ID: name='HplAdc12P__ADC12IFG' (at pp.c:9807)
        Constant: type='int', value='0' (at pp.c:9807)
  FuncDef:  (at pp.c:9811)
    Decl: name='Msp430Adc12ImplP__HplAdc12__resetIFGs', quals=[], storage=['static', 'inline'] (at pp.c:9811)
      FuncDecl: quals=None (at pp.c:9811)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__resetIFGs', quals=[] (at pp.c:9811)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9811)
      FuncCall:  (at None)
        ID: name='HplAdc12P__HplAdc12__resetIFGs' (at pp.c:9813)
  FuncDef:  (at pp.c:9818)
    Decl: name='AdcP__readDone__postTask', quals=[], storage=['static', 'inline'] (at pp.c:9818)
      FuncDecl: quals=None (at pp.c:9818)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcP__readDone__postTask', quals=[] (at pp.c:9818)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:9818)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:9820)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:9820)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:9824)
        ID: name='__nesc_result' (at pp.c:9824)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:9824)
          ExprList:  (at pp.c:9824)
            ID: name='AdcP__readDone' (at pp.c:9824)
      Return:  (at pp.c:9828)
        ID: name='__nesc_result' (at pp.c:9828)
  FuncDef:  (at pp.c:9833)
    Decl: name='AdcP__ReadNow__default__readDone', quals=[], storage=['inline', 'static'] (at pp.c:9833)
      FuncDecl: quals=None (at pp.c:9833)
        ParamList:  (at pp.c:9833)
          Decl: name='client', quals=[], storage=[] (at pp.c:9833)
            TypeDecl: declname='client', quals=[] (at pp.c:9833)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:9833)
            TypeDecl: declname='result', quals=[] (at pp.c:9833)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='val', quals=[], storage=[] (at pp.c:9833)
            TypeDecl: declname='val', quals=[] (at pp.c:9833)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='AdcP__ReadNow__default__readDone', quals=[] (at pp.c:9833)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9835)
  FuncDef:  (at pp.c:9839)
    Decl: name='AdcP__ReadNow__readDone', quals=[], storage=['static', 'inline'] (at pp.c:9839)
      FuncDecl: quals=None (at pp.c:9839)
        ParamList:  (at pp.c:9839)
          Decl: name='arg_0x101961b18', quals=[], storage=[] (at pp.c:9839)
            TypeDecl: declname='arg_0x101961b18', quals=[] (at pp.c:9839)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:9839)
            TypeDecl: declname='result', quals=[] (at pp.c:9839)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='val', quals=[], storage=[] (at pp.c:9839)
            TypeDecl: declname='val', quals=[] (at pp.c:9839)
              IdentifierType: names=['AdcP__ReadNow__val_t'] (at None)
        TypeDecl: declname='AdcP__ReadNow__readDone', quals=[] (at pp.c:9839)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9839)
      FuncCall:  (at None)
        ID: name='AdcP__ReadNow__default__readDone' (at pp.c:9841)
        ExprList:  (at pp.c:9841)
          ID: name='arg_0x101961b18' (at pp.c:9841)
          ID: name='result' (at pp.c:9841)
          ID: name='val' (at pp.c:9841)
  FuncDef:  (at pp.c:9846)
    Decl: name='AdcStreamP__bufferDone__postTask', quals=[], storage=['static', 'inline'] (at pp.c:9846)
      FuncDecl: quals=None (at pp.c:9846)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__bufferDone__postTask', quals=[] (at pp.c:9846)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:9846)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:9848)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:9848)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:9852)
        ID: name='__nesc_result' (at pp.c:9852)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:9852)
          ExprList:  (at pp.c:9852)
            ID: name='AdcStreamP__bufferDone' (at pp.c:9852)
      Return:  (at pp.c:9856)
        ID: name='__nesc_result' (at pp.c:9856)
  FuncDef:  (at pp.c:9861)
    Decl: name='__nesc_atomic_start', quals=[], storage=[] (at pp.c:9861)
      FuncDecl: quals=None (at pp.c:9861)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_atomic_start', quals=[] (at pp.c:9861)
          IdentifierType: names=['__nesc_atomic_t'] (at None)
    Compound:  (at pp.c:9862)
      Decl: name='result', quals=[], storage=[] (at pp.c:9863)
        TypeDecl: declname='result', quals=[] (at pp.c:9863)
          IdentifierType: names=['__nesc_atomic_t'] (at None)
        BinaryOp: op='!=' (at pp.c:9863)
          BinaryOp: op='&' (at pp.c:9863)
            Compound:  (at pp.c:9863)
              Decl: name='__x', quals=[], storage=[] (at pp.c:9865)
                TypeDecl: declname='__x', quals=[] (at pp.c:9865)
                  IdentifierType: names=['uint16_t'] (at None)
              Assignment: op='=' (at None)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                  ID: name='__x' (at pp.c:9868)
                ID: name='_R2' (at pp.c:9868)
              ID: name='__x' (at pp.c:9868)
            Constant: type='int', value='0x0008' (at pp.c:9872)
          Constant: type='int', value='0' (at pp.c:9872)
      FuncCall:  (at None)
        ID: name='__nesc_disable_interrupt' (at pp.c:9875)
      Return:  (at pp.c:9877)
        ID: name='result' (at pp.c:9877)
  FuncDef:  (at pp.c:9880)
    Decl: name='__nesc_atomic_end', quals=[], storage=[] (at pp.c:9880)
      FuncDecl: quals=None (at pp.c:9880)
        ParamList:  (at pp.c:9880)
          Decl: name='reenable_interrupts', quals=[], storage=[] (at pp.c:9880)
            TypeDecl: declname='reenable_interrupts', quals=[] (at pp.c:9880)
              IdentifierType: names=['__nesc_atomic_t'] (at None)
        TypeDecl: declname='__nesc_atomic_end', quals=[] (at pp.c:9880)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9881)
      If:  (at pp.c:9883)
        ID: name='reenable_interrupts' (at pp.c:9883)
        Compound:  (at pp.c:9883)
          FuncCall:  (at None)
            ID: name='__nesc_enable_interrupt' (at pp.c:9884)
  FuncDef:  (at pp.c:9889)
    Decl: name='sig_TIMERA0_VECTOR', quals=[], storage=[] (at pp.c:9889)
      FuncDecl: quals=None (at pp.c:9889)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_TIMERA0_VECTOR', quals=[] (at pp.c:9889)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9891)
      FuncCall:  (at None)
        ID: name='Msp430TimerCommonP__VectorTimerA0__fired' (at pp.c:9893)
  FuncDef:  (at pp.c:9897)
    Decl: name='Msp430TimerCapComP__0__Event__fired', quals=[], storage=['static'] (at pp.c:9897)
      FuncDecl: quals=None (at pp.c:9897)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Event__fired', quals=[] (at pp.c:9897)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9898)
      If:  (at pp.c:9899)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__0__Control__getControl' (at pp.c:9899)
          ID: name='cap' (at pp.c:9899)
        Compound:  (at pp.c:9899)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__0__Capture__captured' (at pp.c:9900)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__0__Capture__getEvent' (at pp.c:9900)
        Compound:  (at pp.c:9902)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__0__Compare__fired' (at pp.c:9904)
  FuncDef:  (at pp.c:9909)
    Decl: name='Msp430TimerCapComP__1__Event__fired', quals=[], storage=['static'] (at pp.c:9909)
      FuncDecl: quals=None (at pp.c:9909)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Event__fired', quals=[] (at pp.c:9909)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9910)
      If:  (at pp.c:9911)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__1__Control__getControl' (at pp.c:9911)
          ID: name='cap' (at pp.c:9911)
        Compound:  (at pp.c:9911)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__1__Capture__captured' (at pp.c:9912)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__1__Capture__getEvent' (at pp.c:9912)
        Compound:  (at pp.c:9914)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__1__Compare__fired' (at pp.c:9916)
  FuncDef:  (at pp.c:9921)
    Decl: name='Msp430TimerCapComP__2__Event__fired', quals=[], storage=['static'] (at pp.c:9921)
      FuncDecl: quals=None (at pp.c:9921)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Event__fired', quals=[] (at pp.c:9921)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9922)
      If:  (at pp.c:9923)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__2__Control__getControl' (at pp.c:9923)
          ID: name='cap' (at pp.c:9923)
        Compound:  (at pp.c:9923)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__2__Capture__captured' (at pp.c:9924)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__2__Capture__getEvent' (at pp.c:9924)
        Compound:  (at pp.c:9926)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__2__Compare__fired' (at pp.c:9928)
  FuncDef:  (at pp.c:9933)
    Decl: name='sig_TIMERA1_VECTOR', quals=[], storage=[] (at pp.c:9933)
      FuncDecl: quals=None (at pp.c:9933)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_TIMERA1_VECTOR', quals=[] (at pp.c:9933)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9935)
      FuncCall:  (at None)
        ID: name='Msp430TimerCommonP__VectorTimerA1__fired' (at pp.c:9937)
  FuncDef:  (at pp.c:9941)
    Decl: name='sig_TIMERB0_VECTOR', quals=[], storage=[] (at pp.c:9941)
      FuncDecl: quals=None (at pp.c:9941)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_TIMERB0_VECTOR', quals=[] (at pp.c:9941)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9943)
      FuncCall:  (at None)
        ID: name='Msp430TimerCommonP__VectorTimerB0__fired' (at pp.c:9945)
  FuncDef:  (at pp.c:9949)
    Decl: name='Msp430TimerP__1__Event__default__fired', quals=[], storage=['static'] (at pp.c:9949)
      FuncDecl: quals=None (at pp.c:9949)
        ParamList:  (at pp.c:9949)
          Decl: name='n', quals=[], storage=[] (at pp.c:9949)
            TypeDecl: declname='n', quals=[] (at pp.c:9949)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Event__default__fired', quals=[] (at pp.c:9949)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9950)
  FuncDef:  (at pp.c:9954)
    Decl: name='Msp430TimerP__1__Event__fired', quals=[], storage=['static'] (at pp.c:9954)
      FuncDecl: quals=None (at pp.c:9954)
        ParamList:  (at pp.c:9954)
          Decl: name='arg_0x10142ec98', quals=[], storage=[] (at pp.c:9954)
            TypeDecl: declname='arg_0x10142ec98', quals=[] (at pp.c:9954)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Event__fired', quals=[] (at pp.c:9954)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9954)
      Switch:  (at pp.c:9956)
        ID: name='arg_0x10142ec98' (at pp.c:9956)
        Compound:  (at pp.c:9956)
          Case:  (at pp.c:9958)
            Constant: type='int', value='0' (at pp.c:9958)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__3__Event__fired' (at pp.c:9960)
          Break:  (at pp.c:9962)
          Case:  (at pp.c:9964)
            Constant: type='int', value='1' (at pp.c:9964)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__4__Event__fired' (at pp.c:9966)
          Break:  (at pp.c:9968)
          Case:  (at pp.c:9970)
            Constant: type='int', value='2' (at pp.c:9970)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__5__Event__fired' (at pp.c:9972)
          Break:  (at pp.c:9974)
          Case:  (at pp.c:9976)
            Constant: type='int', value='3' (at pp.c:9976)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__6__Event__fired' (at pp.c:9978)
          Break:  (at pp.c:9980)
          Case:  (at pp.c:9982)
            Constant: type='int', value='4' (at pp.c:9982)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__7__Event__fired' (at pp.c:9984)
          Break:  (at pp.c:9986)
          Case:  (at pp.c:9988)
            Constant: type='int', value='5' (at pp.c:9988)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__8__Event__fired' (at pp.c:9990)
          Break:  (at pp.c:9992)
          Case:  (at pp.c:9994)
            Constant: type='int', value='6' (at pp.c:9994)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__9__Event__fired' (at pp.c:9996)
          Break:  (at pp.c:9998)
          Case:  (at pp.c:10000)
            Constant: type='int', value='7' (at pp.c:10000)
            FuncCall:  (at None)
              ID: name='Msp430TimerP__1__Overflow__fired' (at pp.c:10002)
          Break:  (at pp.c:10004)
          Default:  (at pp.c:10006)
            FuncCall:  (at None)
              ID: name='Msp430TimerP__1__Event__default__fired' (at pp.c:10008)
              ExprList:  (at pp.c:10008)
                ID: name='arg_0x10142ec98' (at pp.c:10008)
          Break:  (at pp.c:10010)
  FuncDef:  (at pp.c:10017)
    Decl: name='SchedulerBasicP__TaskBasic__postTask', quals=[], storage=['static'] (at pp.c:10017)
      FuncDecl: quals=None (at pp.c:10017)
        ParamList:  (at pp.c:10017)
          Decl: name='id', quals=[], storage=[] (at pp.c:10017)
            TypeDecl: declname='id', quals=[] (at pp.c:10017)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SchedulerBasicP__TaskBasic__postTask', quals=[] (at pp.c:10017)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10018)
      Compound:  (at pp.c:10019)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:10019)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:10019)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:10019)
        Compound:  (at pp.c:10021)
          Compound:  (at pp.c:10023)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:10024)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:10024)
                IdentifierType: names=['char', 'unsigned'] (at None)
              TernaryOp:  (at None)
                FuncCall:  (at None)
                  ID: name='SchedulerBasicP__pushTask' (at pp.c:10026)
                  ExprList:  (at pp.c:10026)
                    ID: name='id' (at pp.c:10026)
                ID: name='SUCCESS' (at pp.c:10026)
                ID: name='EBUSY' (at pp.c:10026)
            Compound:  (at pp.c:10028)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_end' (at pp.c:10030)
                ExprList:  (at pp.c:10030)
                  ID: name='__nesc_atomic' (at pp.c:10030)
              Return:  (at pp.c:10032)
                ID: name='__nesc_temp' (at pp.c:10032)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:10037)
          ExprList:  (at pp.c:10037)
            ID: name='__nesc_atomic' (at pp.c:10037)
  FuncDef:  (at pp.c:10041)
    Decl: name='TransformAlarmC__0__set_alarm', quals=[], storage=['static'] (at pp.c:10041)
      FuncDecl: quals=None (at pp.c:10041)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__set_alarm', quals=[] (at pp.c:10041)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10042)
      Decl: name='now', quals=[], storage=[] (at pp.c:10043)
        TypeDecl: declname='now', quals=[] (at pp.c:10043)
          IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__0__Counter__get' (at pp.c:10043)
      Decl: name='expires', quals=[], storage=[] (at pp.c:10045)
        TypeDecl: declname='expires', quals=[] (at pp.c:10045)
          IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
      Decl: name='remaining', quals=[], storage=[] (at pp.c:10047)
        TypeDecl: declname='remaining', quals=[] (at pp.c:10047)
          IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
      Assignment: op='=' (at pp.c:10052)
        ID: name='expires' (at pp.c:10052)
        BinaryOp: op='+' (at pp.c:10052)
          ID: name='TransformAlarmC__0__m_t0' (at pp.c:10052)
          ID: name='TransformAlarmC__0__m_dt' (at pp.c:10052)
      Assignment: op='=' (at pp.c:10055)
        ID: name='remaining' (at pp.c:10055)
        Cast:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
          BinaryOp: op='-' (at pp.c:10055)
            ID: name='expires' (at pp.c:10055)
            ID: name='now' (at pp.c:10055)
      If:  (at pp.c:10058)
        BinaryOp: op='<=' (at pp.c:10058)
          ID: name='TransformAlarmC__0__m_t0' (at pp.c:10058)
          ID: name='now' (at pp.c:10058)
        Compound:  (at pp.c:10059)
          If:  (at pp.c:10060)
            BinaryOp: op='&&' (at pp.c:10060)
              BinaryOp: op='>=' (at pp.c:10060)
                ID: name='expires' (at pp.c:10060)
                ID: name='TransformAlarmC__0__m_t0' (at pp.c:10060)
              BinaryOp: op='<=' (at pp.c:10061)
                ID: name='expires' (at pp.c:10061)
                ID: name='now' (at pp.c:10061)
            Compound:  (at pp.c:10061)
              Assignment: op='=' (at pp.c:10062)
                ID: name='remaining' (at pp.c:10062)
                Constant: type='int', value='0' (at pp.c:10062)
        Compound:  (at pp.c:10065)
          If:  (at pp.c:10066)
            BinaryOp: op='||' (at pp.c:10066)
              BinaryOp: op='>=' (at pp.c:10066)
                ID: name='expires' (at pp.c:10066)
                ID: name='TransformAlarmC__0__m_t0' (at pp.c:10066)
              BinaryOp: op='<=' (at pp.c:10067)
                ID: name='expires' (at pp.c:10067)
                ID: name='now' (at pp.c:10067)
            Compound:  (at pp.c:10067)
              Assignment: op='=' (at pp.c:10068)
                ID: name='remaining' (at pp.c:10068)
                Constant: type='int', value='0' (at pp.c:10068)
      If:  (at pp.c:10072)
        BinaryOp: op='>' (at pp.c:10072)
          ID: name='remaining' (at pp.c:10072)
          ID: name='TransformAlarmC__0__MAX_DELAY' (at pp.c:10072)
        Compound:  (at pp.c:10073)
          Assignment: op='=' (at pp.c:10074)
            ID: name='TransformAlarmC__0__m_t0' (at pp.c:10074)
            BinaryOp: op='+' (at pp.c:10074)
              ID: name='now' (at pp.c:10074)
              ID: name='TransformAlarmC__0__MAX_DELAY' (at pp.c:10074)
          Assignment: op='=' (at pp.c:10075)
            ID: name='TransformAlarmC__0__m_dt' (at pp.c:10075)
            BinaryOp: op='-' (at pp.c:10075)
              ID: name='remaining' (at pp.c:10075)
              ID: name='TransformAlarmC__0__MAX_DELAY' (at pp.c:10075)
          Assignment: op='=' (at pp.c:10076)
            ID: name='remaining' (at pp.c:10076)
            ID: name='TransformAlarmC__0__MAX_DELAY' (at pp.c:10076)
        Compound:  (at pp.c:10079)
          Assignment: op='+=' (at pp.c:10080)
            ID: name='TransformAlarmC__0__m_t0' (at pp.c:10080)
            ID: name='TransformAlarmC__0__m_dt' (at pp.c:10080)
          Assignment: op='=' (at pp.c:10081)
            ID: name='TransformAlarmC__0__m_dt' (at pp.c:10081)
            Constant: type='int', value='0' (at pp.c:10081)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__AlarmFrom__startAt' (at pp.c:10083)
        ExprList:  (at None)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__0__from_size_type'] (at None)
              ID: name='now' (at pp.c:10083)
            Constant: type='int', value='5' (at pp.c:10083)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__0__from_size_type'] (at None)
              ID: name='remaining' (at pp.c:10084)
            Constant: type='int', value='5' (at pp.c:10084)
  FuncDef:  (at pp.c:10088)
    Decl: name='TransformCounterC__0__Counter__get', quals=[], storage=['static'] (at pp.c:10088)
      FuncDecl: quals=None (at pp.c:10088)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__0__Counter__get', quals=[] (at pp.c:10088)
          IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
    Compound:  (at pp.c:10089)
      Decl: name='rv', quals=[], storage=[] (at pp.c:10090)
        TypeDecl: declname='rv', quals=[] (at pp.c:10090)
          IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
        Constant: type='int', value='0' (at pp.c:10090)
      Compound:  (at pp.c:10093)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:10093)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:10093)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:10093)
        Compound:  (at pp.c:10094)
          Decl: name='high', quals=[], storage=[] (at pp.c:10095)
            TypeDecl: declname='high', quals=[] (at pp.c:10095)
              IdentifierType: names=['TransformCounterC__0__upper_count_type'] (at None)
            ID: name='TransformCounterC__0__m_upper' (at pp.c:10095)
          Decl: name='low', quals=[], storage=[] (at pp.c:10096)
            TypeDecl: declname='low', quals=[] (at pp.c:10096)
              IdentifierType: names=['TransformCounterC__0__from_size_type'] (at None)
            FuncCall:  (at None)
              ID: name='TransformCounterC__0__CounterFrom__get' (at pp.c:10096)
          If:  (at pp.c:10099)
            FuncCall:  (at None)
              ID: name='TransformCounterC__0__CounterFrom__isOverflowPending' (at pp.c:10099)
            Compound:  (at pp.c:10100)
              UnaryOp: op='p++' (at pp.c:10107)
                ID: name='high' (at pp.c:10107)
              Assignment: op='=' (at pp.c:10108)
                ID: name='low' (at pp.c:10108)
                FuncCall:  (at None)
                  ID: name='TransformCounterC__0__CounterFrom__get' (at pp.c:10108)
          Compound:  (at pp.c:10110)
            Decl: name='high_to', quals=[], storage=[] (at pp.c:10111)
              TypeDecl: declname='high_to', quals=[] (at pp.c:10111)
                IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
              ID: name='high' (at pp.c:10111)
            Decl: name='low_to', quals=[], storage=[] (at pp.c:10112)
              TypeDecl: declname='low_to', quals=[] (at pp.c:10112)
                IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
              BinaryOp: op='>>' (at pp.c:10112)
                ID: name='low' (at pp.c:10112)
                ID: name='TransformCounterC__0__LOW_SHIFT_RIGHT' (at pp.c:10112)
            Assignment: op='=' (at pp.c:10115)
              ID: name='rv' (at pp.c:10115)
              BinaryOp: op='|' (at pp.c:10115)
                BinaryOp: op='<<' (at pp.c:10115)
                  ID: name='high_to' (at pp.c:10115)
                  ID: name='TransformCounterC__0__HIGH_SHIFT_LEFT' (at pp.c:10115)
                ID: name='low_to' (at pp.c:10115)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:10119)
          ExprList:  (at pp.c:10119)
            ID: name='__nesc_atomic' (at pp.c:10119)
      Return:  (at pp.c:10120)
        ID: name='rv' (at pp.c:10120)
  FuncDef:  (at pp.c:10124)
    Decl: name='Msp430TimerP__1__Timer__get', quals=[], storage=['static'] (at pp.c:10124)
      FuncDecl: quals=None (at pp.c:10124)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Timer__get', quals=[] (at pp.c:10124)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:10125)
      If:  (at pp.c:10130)
        Constant: type='int', value='1' (at pp.c:10130)
        Compound:  (at pp.c:10130)
          Compound:  (at pp.c:10133)
            Decl: name='t0', quals=[], storage=[] (at pp.c:10134)
              TypeDecl: declname='t0', quals=[] (at pp.c:10134)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t1', quals=[], storage=[] (at pp.c:10135)
              TypeDecl: declname='t1', quals=[] (at pp.c:10135)
                IdentifierType: names=['uint16_t'] (at None)
              UnaryOp: op='*' (at None)
                Cast:  (at None)
                  Typename: quals=['volatile'] (at None)
                    PtrDecl: quals=[] (at pp.c:10135)
                      TypeDecl: declname=None, quals=['volatile'] (at None)
                        IdentifierType: names=['uint16_t'] (at None)
                  Constant: type='int', value='400U' (at pp.c:10135)
            DoWhile:  (at pp.c:10138)
              BinaryOp: op='!=' (at pp.c:10146)
                ID: name='t0' (at pp.c:10146)
                ID: name='t1' (at pp.c:10146)
              Compound:  (at pp.c:10138)
                Assignment: op='=' (at pp.c:10140)
                  ID: name='t0' (at pp.c:10140)
                  ID: name='t1' (at pp.c:10140)
                Assignment: op='=' (at pp.c:10142)
                  ID: name='t1' (at pp.c:10142)
                  UnaryOp: op='*' (at None)
                    Cast:  (at None)
                      Typename: quals=['volatile'] (at None)
                        PtrDecl: quals=[] (at pp.c:10142)
                          TypeDecl: declname=None, quals=['volatile'] (at None)
                            IdentifierType: names=['uint16_t'] (at None)
                      Constant: type='int', value='400U' (at pp.c:10142)
            Compound:  (at pp.c:10147)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:10148)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:10148)
                  IdentifierType: names=['int', 'unsigned'] (at None)
                ID: name='t1' (at pp.c:10150)
              Return:  (at pp.c:10153)
                ID: name='__nesc_temp' (at pp.c:10153)
        Compound:  (at pp.c:10159)
          Return:  (at pp.c:10160)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:10160)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='400U' (at pp.c:10160)
  FuncDef:  (at pp.c:10165)
    Decl: name='Msp430Adc12ImplP__SingleChannel__getData', quals=[], storage=['static'] (at pp.c:10165)
      FuncDecl: quals=None (at pp.c:10165)
        ParamList:  (at pp.c:10165)
          Decl: name='id', quals=[], storage=[] (at pp.c:10165)
            TypeDecl: declname='id', quals=[] (at pp.c:10165)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__getData', quals=[] (at pp.c:10165)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10166)
      Compound:  (at pp.c:10167)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:10167)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:10167)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:10167)
        Compound:  (at pp.c:10169)
          If:  (at pp.c:10170)
            BinaryOp: op='==' (at None)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__ADCArbiterInfo__userId' (at pp.c:10170)
              ID: name='id' (at pp.c:10170)
            Compound:  (at pp.c:10170)
              If:  (at pp.c:10171)
                BinaryOp: op='&&' (at pp.c:10171)
                  BinaryOp: op='&' (at pp.c:10171)
                    ID: name='Msp430Adc12ImplP__state' (at pp.c:10171)
                    ID: name='Msp430Adc12ImplP__MULTIPLE_DATA_REPEAT' (at pp.c:10171)
                  UnaryOp: op='!' (at pp.c:10171)
                    ID: name='Msp430Adc12ImplP__resultBufferStart' (at pp.c:10171)
                Compound:  (at pp.c:10172)
                  Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:10173)
                    TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:10173)
                      IdentifierType: names=['char', 'unsigned'] (at None)
                    ID: name='EINVAL' (at pp.c:10175)
                  Compound:  (at pp.c:10177)
                    FuncCall:  (at None)
                      ID: name='__nesc_atomic_end' (at pp.c:10179)
                      ExprList:  (at pp.c:10179)
                        ID: name='__nesc_atomic' (at pp.c:10179)
                    Return:  (at pp.c:10181)
                      ID: name='__nesc_temp' (at pp.c:10181)
              If:  (at pp.c:10185)
                BinaryOp: op='&' (at pp.c:10185)
                  ID: name='Msp430Adc12ImplP__state' (at pp.c:10185)
                  ID: name='Msp430Adc12ImplP__ADC_BUSY' (at pp.c:10185)
                Compound:  (at pp.c:10186)
                  Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:10187)
                    TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:10187)
                      IdentifierType: names=['char', 'unsigned'] (at None)
                    ID: name='EBUSY' (at pp.c:10189)
                  Compound:  (at pp.c:10191)
                    FuncCall:  (at None)
                      ID: name='__nesc_atomic_end' (at pp.c:10193)
                      ExprList:  (at pp.c:10193)
                        ID: name='__nesc_atomic' (at pp.c:10193)
                    Return:  (at pp.c:10195)
                      ID: name='__nesc_temp' (at pp.c:10195)
              Assignment: op='|=' (at pp.c:10199)
                ID: name='Msp430Adc12ImplP__state' (at pp.c:10199)
                ID: name='Msp430Adc12ImplP__ADC_BUSY' (at pp.c:10199)
              Assignment: op='=' (at pp.c:10200)
                ID: name='Msp430Adc12ImplP__clientID' (at pp.c:10200)
                ID: name='id' (at pp.c:10200)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__configureAdcPin' (at pp.c:10201)
                ExprList:  (at None)
                  StructRef: type='.' (at None)
                    FuncCall:  (at None)
                      ID: name='Msp430Adc12ImplP__HplAdc12__getMCtl' (at pp.c:10201)
                      ExprList:  (at pp.c:10201)
                        Constant: type='int', value='0' (at pp.c:10201)
                    ID: name='inch' (at pp.c:10201)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__HplAdc12__startConversion' (at pp.c:10202)
              If:  (at pp.c:10203)
                BinaryOp: op='&' (at pp.c:10203)
                  ID: name='Msp430Adc12ImplP__state' (at pp.c:10203)
                  ID: name='Msp430Adc12ImplP__USE_TIMERA' (at pp.c:10203)
                Compound:  (at pp.c:10203)
                  FuncCall:  (at None)
                    ID: name='Msp430Adc12ImplP__startTimerA' (at pp.c:10204)
              Compound:  (at pp.c:10207)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:10208)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:10208)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='SUCCESS' (at pp.c:10210)
                Compound:  (at pp.c:10212)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:10214)
                    ExprList:  (at pp.c:10214)
                      ID: name='__nesc_atomic' (at pp.c:10214)
                  Return:  (at pp.c:10216)
                    ID: name='__nesc_temp' (at pp.c:10216)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:10222)
          ExprList:  (at pp.c:10222)
            ID: name='__nesc_atomic' (at pp.c:10222)
      Return:  (at pp.c:10224)
        ID: name='FAIL' (at pp.c:10224)
  FuncDef:  (at pp.c:10228)
    Decl: name='SimpleArbiterP__0__ArbiterInfo__userId', quals=[], storage=['static'] (at pp.c:10228)
      FuncDecl: quals=None (at pp.c:10228)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__ArbiterInfo__userId', quals=[] (at pp.c:10228)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:10230)
      Compound:  (at pp.c:10233)
        If:  (at pp.c:10234)
          BinaryOp: op='!=' (at pp.c:10234)
            ID: name='SimpleArbiterP__0__state' (at pp.c:10234)
            ID: name='SimpleArbiterP__0__RES_BUSY' (at pp.c:10234)
          Compound:  (at pp.c:10235)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:10236)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:10236)
                IdentifierType: names=['char', 'unsigned'] (at None)
              ID: name='SimpleArbiterP__0__NO_RES' (at pp.c:10238)
            Return:  (at pp.c:10241)
              ID: name='__nesc_temp' (at pp.c:10241)
        Compound:  (at pp.c:10244)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:10245)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:10245)
              IdentifierType: names=['char', 'unsigned'] (at None)
            ID: name='SimpleArbiterP__0__resId' (at pp.c:10247)
          Return:  (at pp.c:10250)
            ID: name='__nesc_temp' (at pp.c:10250)
  FuncDef:  (at pp.c:10256)
    Decl: name='Msp430TimerP__0__Timer__setMode', quals=[], storage=['static'] (at pp.c:10256)
      FuncDecl: quals=None (at pp.c:10256)
        ParamList:  (at pp.c:10256)
          Decl: name='mode', quals=[], storage=[] (at pp.c:10256)
            TypeDecl: declname='mode', quals=[] (at pp.c:10256)
              IdentifierType: names=['int'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Timer__setMode', quals=[] (at pp.c:10256)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10257)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:10258)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='352U' (at pp.c:10258)
        BinaryOp: op='|' (at None)
          BinaryOp: op='&' (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:10258)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='352U' (at pp.c:10258)
            UnaryOp: op='~' (at pp.c:10258)
              BinaryOp: op='|' (at pp.c:10258)
                Constant: type='int', value='0x0020' (at pp.c:10258)
                Constant: type='int', value='0x0010' (at pp.c:10258)
          BinaryOp: op='&' (at pp.c:10258)
            BinaryOp: op='<<' (at pp.c:10258)
              ID: name='mode' (at pp.c:10258)
              Constant: type='int', value='4' (at pp.c:10258)
            BinaryOp: op='|' (at pp.c:10258)
              Constant: type='int', value='0x0020' (at pp.c:10258)
              Constant: type='int', value='0x0010' (at pp.c:10258)
  FuncDef:  (at pp.c:10262)
    Decl: name='TransformAlarmC__1__set_alarm', quals=[], storage=['static'] (at pp.c:10262)
      FuncDecl: quals=None (at pp.c:10262)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__set_alarm', quals=[] (at pp.c:10262)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10263)
      Decl: name='now', quals=[], storage=[] (at pp.c:10264)
        TypeDecl: declname='now', quals=[] (at pp.c:10264)
          IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__1__Counter__get' (at pp.c:10264)
      Decl: name='expires', quals=[], storage=[] (at pp.c:10266)
        TypeDecl: declname='expires', quals=[] (at pp.c:10266)
          IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
      Decl: name='remaining', quals=[], storage=[] (at pp.c:10268)
        TypeDecl: declname='remaining', quals=[] (at pp.c:10268)
          IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
      Assignment: op='=' (at pp.c:10273)
        ID: name='expires' (at pp.c:10273)
        BinaryOp: op='+' (at pp.c:10273)
          ID: name='TransformAlarmC__1__m_t0' (at pp.c:10273)
          ID: name='TransformAlarmC__1__m_dt' (at pp.c:10273)
      Assignment: op='=' (at pp.c:10276)
        ID: name='remaining' (at pp.c:10276)
        Cast:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
          BinaryOp: op='-' (at pp.c:10276)
            ID: name='expires' (at pp.c:10276)
            ID: name='now' (at pp.c:10276)
      If:  (at pp.c:10279)
        BinaryOp: op='<=' (at pp.c:10279)
          ID: name='TransformAlarmC__1__m_t0' (at pp.c:10279)
          ID: name='now' (at pp.c:10279)
        Compound:  (at pp.c:10280)
          If:  (at pp.c:10281)
            BinaryOp: op='&&' (at pp.c:10281)
              BinaryOp: op='>=' (at pp.c:10281)
                ID: name='expires' (at pp.c:10281)
                ID: name='TransformAlarmC__1__m_t0' (at pp.c:10281)
              BinaryOp: op='<=' (at pp.c:10282)
                ID: name='expires' (at pp.c:10282)
                ID: name='now' (at pp.c:10282)
            Compound:  (at pp.c:10282)
              Assignment: op='=' (at pp.c:10283)
                ID: name='remaining' (at pp.c:10283)
                Constant: type='int', value='0' (at pp.c:10283)
        Compound:  (at pp.c:10286)
          If:  (at pp.c:10287)
            BinaryOp: op='||' (at pp.c:10287)
              BinaryOp: op='>=' (at pp.c:10287)
                ID: name='expires' (at pp.c:10287)
                ID: name='TransformAlarmC__1__m_t0' (at pp.c:10287)
              BinaryOp: op='<=' (at pp.c:10288)
                ID: name='expires' (at pp.c:10288)
                ID: name='now' (at pp.c:10288)
            Compound:  (at pp.c:10288)
              Assignment: op='=' (at pp.c:10289)
                ID: name='remaining' (at pp.c:10289)
                Constant: type='int', value='0' (at pp.c:10289)
      If:  (at pp.c:10293)
        BinaryOp: op='>' (at pp.c:10293)
          ID: name='remaining' (at pp.c:10293)
          ID: name='TransformAlarmC__1__MAX_DELAY' (at pp.c:10293)
        Compound:  (at pp.c:10294)
          Assignment: op='=' (at pp.c:10295)
            ID: name='TransformAlarmC__1__m_t0' (at pp.c:10295)
            BinaryOp: op='+' (at pp.c:10295)
              ID: name='now' (at pp.c:10295)
              ID: name='TransformAlarmC__1__MAX_DELAY' (at pp.c:10295)
          Assignment: op='=' (at pp.c:10296)
            ID: name='TransformAlarmC__1__m_dt' (at pp.c:10296)
            BinaryOp: op='-' (at pp.c:10296)
              ID: name='remaining' (at pp.c:10296)
              ID: name='TransformAlarmC__1__MAX_DELAY' (at pp.c:10296)
          Assignment: op='=' (at pp.c:10297)
            ID: name='remaining' (at pp.c:10297)
            ID: name='TransformAlarmC__1__MAX_DELAY' (at pp.c:10297)
        Compound:  (at pp.c:10300)
          Assignment: op='+=' (at pp.c:10301)
            ID: name='TransformAlarmC__1__m_t0' (at pp.c:10301)
            ID: name='TransformAlarmC__1__m_dt' (at pp.c:10301)
          Assignment: op='=' (at pp.c:10302)
            ID: name='TransformAlarmC__1__m_dt' (at pp.c:10302)
            Constant: type='int', value='0' (at pp.c:10302)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__1__AlarmFrom__startAt' (at pp.c:10304)
        ExprList:  (at None)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__1__from_size_type'] (at None)
              ID: name='now' (at pp.c:10304)
            Constant: type='int', value='5' (at pp.c:10304)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__1__from_size_type'] (at None)
              ID: name='remaining' (at pp.c:10305)
            Constant: type='int', value='5' (at pp.c:10305)
  FuncDef:  (at pp.c:10309)
    Decl: name='sig_TIMERB1_VECTOR', quals=[], storage=[] (at pp.c:10309)
      FuncDecl: quals=None (at pp.c:10309)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_TIMERB1_VECTOR', quals=[] (at pp.c:10309)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10311)
      FuncCall:  (at None)
        ID: name='Msp430TimerCommonP__VectorTimerB1__fired' (at pp.c:10313)
  FuncDef:  (at pp.c:10317)
    Decl: name='main', quals=[], storage=[] (at pp.c:10317)
      FuncDecl: quals=None (at pp.c:10317)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='main', quals=[] (at pp.c:10317)
          IdentifierType: names=['int'] (at None)
    Compound:  (at pp.c:10319)
      Compound:  (at pp.c:10320)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:10320)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:10320)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:10320)
        Compound:  (at pp.c:10321)
          Compound:  (at pp.c:10327)
          FuncCall:  (at None)
            ID: name='RealMainP__Scheduler__init' (at pp.c:10332)
          FuncCall:  (at None)
            ID: name='RealMainP__PlatformInit__init' (at pp.c:10338)
          While:  (at pp.c:10339)
            FuncCall:  (at None)
              ID: name='RealMainP__Scheduler__runNextTask' (at pp.c:10339)
          FuncCall:  (at None)
            ID: name='RealMainP__SoftwareInit__init' (at pp.c:10345)
          While:  (at pp.c:10346)
            FuncCall:  (at None)
              ID: name='RealMainP__Scheduler__runNextTask' (at pp.c:10346)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:10349)
          ExprList:  (at pp.c:10349)
            ID: name='__nesc_atomic' (at pp.c:10349)
      FuncCall:  (at None)
        ID: name='__nesc_enable_interrupt' (at pp.c:10352)
      FuncCall:  (at None)
        ID: name='RealMainP__Boot__booted' (at pp.c:10354)
      FuncCall:  (at None)
        ID: name='RealMainP__Scheduler__taskLoop' (at pp.c:10357)
      Return:  (at pp.c:10362)
        UnaryOp: op='-' (at pp.c:10362)
          Constant: type='int', value='1' (at pp.c:10362)
  FuncDef:  (at pp.c:10366)
    Decl: name='Msp430ClockP__set_dco_calib', quals=[], storage=['static'] (at pp.c:10366)
      FuncDecl: quals=None (at pp.c:10366)
        ParamList:  (at pp.c:10366)
          Decl: name='calib', quals=[], storage=[] (at pp.c:10366)
            TypeDecl: declname='calib', quals=[] (at pp.c:10366)
              IdentifierType: names=['int'] (at None)
        TypeDecl: declname='Msp430ClockP__set_dco_calib', quals=[] (at pp.c:10366)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10367)
      Assignment: op='=' (at pp.c:10368)
        ID: name='BCSCTL1' (at pp.c:10368)
        BinaryOp: op='|' (at pp.c:10368)
          BinaryOp: op='&' (at pp.c:10368)
            ID: name='BCSCTL1' (at pp.c:10368)
            UnaryOp: op='~' (at pp.c:10368)
              Constant: type='int', value='0x07' (at pp.c:10368)
          BinaryOp: op='&' (at pp.c:10368)
            BinaryOp: op='>>' (at pp.c:10368)
              ID: name='calib' (at pp.c:10368)
              Constant: type='int', value='8' (at pp.c:10368)
            Constant: type='int', value='0x07' (at pp.c:10368)
      Assignment: op='=' (at pp.c:10369)
        ID: name='DCOCTL' (at pp.c:10369)
        BinaryOp: op='&' (at pp.c:10369)
          ID: name='calib' (at pp.c:10369)
          Constant: type='int', value='0xff' (at pp.c:10369)
  FuncDef:  (at pp.c:10373)
    Decl: name='HplMsp430GeneralIOP__24__IO__set', quals=[], storage=['static'] (at pp.c:10373)
      FuncDecl: quals=None (at pp.c:10373)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__24__IO__set', quals=[] (at pp.c:10373)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10375)
      Compound:  (at pp.c:10377)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:10377)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:10377)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:10377)
        Assignment: op='|=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:10379)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:10379)
          BinaryOp: op='<<' (at pp.c:10379)
            Constant: type='int', value='0x01' (at pp.c:10379)
            Constant: type='int', value='0' (at pp.c:10379)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:10381)
          ExprList:  (at pp.c:10381)
            ID: name='__nesc_atomic' (at pp.c:10381)
  FuncDef:  (at pp.c:10385)
    Decl: name='HplMsp430GeneralIOP__27__IO__set', quals=[], storage=['static'] (at pp.c:10385)
      FuncDecl: quals=None (at pp.c:10385)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__27__IO__set', quals=[] (at pp.c:10385)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10387)
      Compound:  (at pp.c:10389)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:10389)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:10389)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:10389)
        Assignment: op='|=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:10391)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:10391)
          BinaryOp: op='<<' (at pp.c:10391)
            Constant: type='int', value='0x01' (at pp.c:10391)
            Constant: type='int', value='3' (at pp.c:10391)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:10393)
          ExprList:  (at pp.c:10393)
            ID: name='__nesc_atomic' (at pp.c:10393)
  FuncDef:  (at pp.c:10397)
    Decl: name='HplMsp430GeneralIOP__31__IO__set', quals=[], storage=['static'] (at pp.c:10397)
      FuncDecl: quals=None (at pp.c:10397)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__31__IO__set', quals=[] (at pp.c:10397)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10399)
      Compound:  (at pp.c:10401)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:10401)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:10401)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:10401)
        Assignment: op='|=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:10403)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:10403)
          BinaryOp: op='<<' (at pp.c:10403)
            Constant: type='int', value='0x01' (at pp.c:10403)
            Constant: type='int', value='7' (at pp.c:10403)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:10405)
          ExprList:  (at pp.c:10405)
            ID: name='__nesc_atomic' (at pp.c:10405)
  FuncDef:  (at pp.c:10409)
    Decl: name='SchedulerBasicP__Scheduler__runNextTask', quals=[], storage=['static'] (at pp.c:10409)
      FuncDecl: quals=None (at pp.c:10409)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SchedulerBasicP__Scheduler__runNextTask', quals=[] (at pp.c:10409)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10410)
      Decl: name='nextTask', quals=[], storage=[] (at pp.c:10411)
        TypeDecl: declname='nextTask', quals=[] (at pp.c:10411)
          IdentifierType: names=['uint8_t'] (at None)
      Compound:  (at pp.c:10415)
        Assignment: op='=' (at pp.c:10416)
          ID: name='nextTask' (at pp.c:10416)
          FuncCall:  (at None)
            ID: name='SchedulerBasicP__popTask' (at pp.c:10416)
        If:  (at pp.c:10417)
          BinaryOp: op='==' (at pp.c:10417)
            ID: name='nextTask' (at pp.c:10417)
            ID: name='SchedulerBasicP__NO_TASK' (at pp.c:10417)
          Compound:  (at pp.c:10418)
            Compound:  (at pp.c:10419)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:10420)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:10420)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='FALSE' (at pp.c:10422)
              Return:  (at pp.c:10425)
                ID: name='__nesc_temp' (at pp.c:10425)
      FuncCall:  (at None)
        ID: name='SchedulerBasicP__TaskBasic__runTask' (at pp.c:10430)
        ExprList:  (at pp.c:10430)
          ID: name='nextTask' (at pp.c:10430)
      Return:  (at pp.c:10431)
        ID: name='TRUE' (at pp.c:10431)
  FuncDef:  (at pp.c:10435)
    Decl: name='SchedulerBasicP__TaskBasic__default__runTask', quals=[], storage=['static'] (at pp.c:10435)
      FuncDecl: quals=None (at pp.c:10435)
        ParamList:  (at pp.c:10435)
          Decl: name='id', quals=[], storage=[] (at pp.c:10435)
            TypeDecl: declname='id', quals=[] (at pp.c:10435)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SchedulerBasicP__TaskBasic__default__runTask', quals=[] (at pp.c:10435)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10436)
  FuncDef:  (at pp.c:10440)
    Decl: name='SchedulerBasicP__TaskBasic__runTask', quals=[], storage=['static'] (at pp.c:10440)
      FuncDecl: quals=None (at pp.c:10440)
        ParamList:  (at pp.c:10440)
          Decl: name='arg_0x101333340', quals=[], storage=[] (at pp.c:10440)
            TypeDecl: declname='arg_0x101333340', quals=[] (at pp.c:10440)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SchedulerBasicP__TaskBasic__runTask', quals=[] (at pp.c:10440)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10440)
      Switch:  (at pp.c:10442)
        ID: name='arg_0x101333340' (at pp.c:10442)
        Compound:  (at pp.c:10442)
          Case:  (at pp.c:10444)
            ID: name='AlarmToTimerC__0__fired' (at pp.c:10444)
            FuncCall:  (at None)
              ID: name='AlarmToTimerC__0__fired__runTask' (at pp.c:10446)
          Break:  (at pp.c:10448)
          Case:  (at pp.c:10450)
            ID: name='VirtualizeTimerC__0__updateFromTimer' (at pp.c:10450)
            FuncCall:  (at None)
              ID: name='VirtualizeTimerC__0__updateFromTimer__runTask' (at pp.c:10452)
          Break:  (at pp.c:10454)
          Case:  (at pp.c:10456)
            ID: name='AdcP__readDone' (at pp.c:10456)
            FuncCall:  (at None)
              ID: name='AdcP__readDone__runTask' (at pp.c:10458)
          Break:  (at pp.c:10460)
          Case:  (at pp.c:10462)
            ID: name='SimpleArbiterP__0__grantedTask' (at pp.c:10462)
            FuncCall:  (at None)
              ID: name='SimpleArbiterP__0__grantedTask__runTask' (at pp.c:10464)
          Break:  (at pp.c:10466)
          Case:  (at pp.c:10468)
            ID: name='Msp430RefVoltArbiterImplP__switchOff' (at pp.c:10468)
            FuncCall:  (at None)
              ID: name='Msp430RefVoltArbiterImplP__switchOff__runTask' (at pp.c:10470)
          Break:  (at pp.c:10472)
          Case:  (at pp.c:10474)
            ID: name='AdcStreamP__readStreamDone' (at pp.c:10474)
            FuncCall:  (at None)
              ID: name='AdcStreamP__readStreamDone__runTask' (at pp.c:10476)
          Break:  (at pp.c:10478)
          Case:  (at pp.c:10480)
            ID: name='AdcStreamP__readStreamFail' (at pp.c:10480)
            FuncCall:  (at None)
              ID: name='AdcStreamP__readStreamFail__runTask' (at pp.c:10482)
          Break:  (at pp.c:10484)
          Case:  (at pp.c:10486)
            ID: name='AdcStreamP__bufferDone' (at pp.c:10486)
            FuncCall:  (at None)
              ID: name='AdcStreamP__bufferDone__runTask' (at pp.c:10488)
          Break:  (at pp.c:10490)
          Default:  (at pp.c:10492)
            FuncCall:  (at None)
              ID: name='SchedulerBasicP__TaskBasic__default__runTask' (at pp.c:10494)
              ExprList:  (at pp.c:10494)
                ID: name='arg_0x101333340' (at pp.c:10494)
          Break:  (at pp.c:10496)
  FuncDef:  (at pp.c:10503)
    Decl: name='Msp430RefVoltArbiterImplP__ClientResource__release', quals=[], storage=['static'] (at pp.c:10503)
      FuncDecl: quals=None (at pp.c:10503)
        ParamList:  (at pp.c:10503)
          Decl: name='client', quals=[], storage=[] (at pp.c:10503)
            TypeDecl: declname='client', quals=[] (at pp.c:10503)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__release', quals=[] (at pp.c:10503)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10504)
      Decl: name='error', quals=[], storage=[] (at pp.c:10505)
        TypeDecl: declname='error', quals=[] (at pp.c:10505)
          IdentifierType: names=['error_t'] (at None)
      If:  (at pp.c:10508)
        BinaryOp: op='==' (at pp.c:10508)
          ID: name='Msp430RefVoltArbiterImplP__syncOwner' (at pp.c:10508)
          ID: name='client' (at pp.c:10508)
        Compound:  (at pp.c:10508)
          FuncCall:  (at None)
            ID: name='Msp430RefVoltArbiterImplP__switchOff__postTask' (at pp.c:10509)
      Assignment: op='=' (at pp.c:10512)
        ID: name='error' (at pp.c:10512)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltArbiterImplP__AdcResource__release' (at pp.c:10512)
          ExprList:  (at pp.c:10512)
            ID: name='client' (at pp.c:10512)
      Return:  (at pp.c:10514)
        ID: name='error' (at pp.c:10514)
  FuncDef:  (at pp.c:10518)
    Decl: name='SimpleArbiterP__0__Resource__release', quals=[], storage=['static'] (at pp.c:10518)
      FuncDecl: quals=None (at pp.c:10518)
        ParamList:  (at pp.c:10518)
          Decl: name='id', quals=[], storage=[] (at pp.c:10518)
            TypeDecl: declname='id', quals=[] (at pp.c:10518)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__Resource__release', quals=[] (at pp.c:10518)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10520)
      Decl: name='released', quals=[], storage=[] (at pp.c:10521)
        TypeDecl: declname='released', quals=[] (at pp.c:10521)
          IdentifierType: names=['bool'] (at None)
        ID: name='FALSE' (at pp.c:10521)
      Compound:  (at pp.c:10524)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:10524)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:10524)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:10524)
        Compound:  (at pp.c:10526)
          If:  (at pp.c:10527)
            BinaryOp: op='&&' (at pp.c:10527)
              BinaryOp: op='==' (at pp.c:10527)
                ID: name='SimpleArbiterP__0__state' (at pp.c:10527)
                ID: name='SimpleArbiterP__0__RES_BUSY' (at pp.c:10527)
              BinaryOp: op='==' (at pp.c:10527)
                ID: name='SimpleArbiterP__0__resId' (at pp.c:10527)
                ID: name='id' (at pp.c:10527)
            Compound:  (at pp.c:10527)
              If:  (at pp.c:10528)
                BinaryOp: op='==' (at None)
                  FuncCall:  (at None)
                    ID: name='SimpleArbiterP__0__Queue__isEmpty' (at pp.c:10528)
                  ID: name='FALSE' (at pp.c:10528)
                Compound:  (at pp.c:10528)
                  Assignment: op='=' (at pp.c:10529)
                    ID: name='SimpleArbiterP__0__resId' (at pp.c:10529)
                    ID: name='SimpleArbiterP__0__NO_RES' (at pp.c:10529)
                  Assignment: op='=' (at pp.c:10530)
                    ID: name='SimpleArbiterP__0__reqResId' (at pp.c:10530)
                    FuncCall:  (at None)
                      ID: name='SimpleArbiterP__0__Queue__dequeue' (at pp.c:10530)
                  Assignment: op='=' (at pp.c:10531)
                    ID: name='SimpleArbiterP__0__state' (at pp.c:10531)
                    ID: name='SimpleArbiterP__0__RES_GRANTING' (at pp.c:10531)
                  FuncCall:  (at None)
                    ID: name='SimpleArbiterP__0__grantedTask__postTask' (at pp.c:10532)
                Compound:  (at pp.c:10534)
                  Assignment: op='=' (at pp.c:10535)
                    ID: name='SimpleArbiterP__0__resId' (at pp.c:10535)
                    ID: name='SimpleArbiterP__0__NO_RES' (at pp.c:10535)
                  Assignment: op='=' (at pp.c:10536)
                    ID: name='SimpleArbiterP__0__state' (at pp.c:10536)
                    ID: name='SimpleArbiterP__0__RES_IDLE' (at pp.c:10536)
              Assignment: op='=' (at pp.c:10538)
                ID: name='released' (at pp.c:10538)
                ID: name='TRUE' (at pp.c:10538)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:10542)
          ExprList:  (at pp.c:10542)
            ID: name='__nesc_atomic' (at pp.c:10542)
      If:  (at pp.c:10543)
        BinaryOp: op='==' (at pp.c:10543)
          ID: name='released' (at pp.c:10543)
          ID: name='TRUE' (at pp.c:10543)
        Compound:  (at pp.c:10543)
          FuncCall:  (at None)
            ID: name='SimpleArbiterP__0__ResourceConfigure__unconfigure' (at pp.c:10544)
            ExprList:  (at pp.c:10544)
              ID: name='id' (at pp.c:10544)
          Return:  (at pp.c:10545)
            ID: name='SUCCESS' (at pp.c:10545)
      Return:  (at pp.c:10547)
        ID: name='FAIL' (at pp.c:10547)
  FuncDef:  (at pp.c:10551)
    Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__isEnqueued', quals=[], storage=['static'] (at pp.c:10551)
      FuncDecl: quals=None (at pp.c:10551)
        ParamList:  (at pp.c:10551)
          Decl: name='id', quals=[], storage=[] (at pp.c:10551)
            TypeDecl: declname='id', quals=[] (at pp.c:10551)
              IdentifierType: names=['resource_client_id_t'] (at None)
        TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__isEnqueued', quals=[] (at pp.c:10551)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10553)
      Return:  (at pp.c:10554)
        BinaryOp: op='&' (at pp.c:10554)
          ArrayRef:  (at pp.c:10554)
            ID: name='RoundRobinResourceQueueC__0__resQ' (at pp.c:10554)
            BinaryOp: op='/' (at pp.c:10554)
              ID: name='id' (at pp.c:10554)
              Constant: type='int', value='8' (at pp.c:10554)
          BinaryOp: op='<<' (at pp.c:10554)
            Constant: type='int', value='1' (at pp.c:10554)
            BinaryOp: op='%' (at pp.c:10554)
              ID: name='id' (at pp.c:10554)
              Constant: type='int', value='8' (at pp.c:10554)
  FuncDef:  (at pp.c:10558)
    Decl: name='Msp430RefVoltGeneratorP__stop', quals=[], storage=['static'] (at pp.c:10558)
      FuncDecl: quals=None (at pp.c:10558)
        ParamList:  (at pp.c:10558)
          Decl: name='nextState', quals=[], storage=[] (at pp.c:10558)
            TypeDecl: declname='nextState', quals=[] (at pp.c:10558)
              IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__stop', quals=[] (at pp.c:10558)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10560)
      Decl: name='result', quals=[], storage=[] (at pp.c:10561)
        TypeDecl: declname='result', quals=[] (at pp.c:10561)
          IdentifierType: names=['error_t'] (at None)
      If:  (at pp.c:10563)
        BinaryOp: op='==' (at pp.c:10563)
          ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:10563)
          ID: name='Msp430RefVoltGeneratorP__GENERATOR_OFF' (at pp.c:10563)
        Compound:  (at pp.c:10563)
          Assignment: op='=' (at pp.c:10564)
            ID: name='result' (at pp.c:10564)
            ID: name='EALREADY' (at pp.c:10564)
        Compound:  (at pp.c:10566)
          If:  (at pp.c:10568)
            BinaryOp: op='||' (at pp.c:10568)
              BinaryOp: op='==' (at pp.c:10568)
                ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:10568)
                ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_STABLE' (at pp.c:10568)
              BinaryOp: op='==' (at pp.c:10568)
                ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:10568)
                ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_STABLE' (at pp.c:10568)
            Compound:  (at pp.c:10568)
              Assignment: op='=' (at pp.c:10569)
                ID: name='result' (at pp.c:10569)
                ID: name='SUCCESS' (at pp.c:10569)
              Assignment: op='=' (at pp.c:10570)
                ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:10570)
                ID: name='nextState' (at pp.c:10570)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltGeneratorP__SwitchOffTimer__startOneShot' (at pp.c:10571)
                ExprList:  (at pp.c:10571)
                  Constant: type='int', value='20' (at pp.c:10571)
            Compound:  (at pp.c:10573)
              If:  (at pp.c:10575)
                BinaryOp: op='||' (at pp.c:10575)
                  BinaryOp: op='==' (at pp.c:10575)
                    ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:10575)
                    ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_ON_PENDING' (at pp.c:10575)
                  BinaryOp: op='==' (at pp.c:10575)
                    ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:10575)
                    ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_ON_PENDING' (at pp.c:10575)
                Compound:  (at pp.c:10575)
                  If:  (at pp.c:10576)
                    BinaryOp: op='==' (at pp.c:10576)
                      Assignment: op='=' (at pp.c:10576)
                        ID: name='result' (at pp.c:10576)
                        FuncCall:  (at None)
                          ID: name='Msp430RefVoltGeneratorP__switchOff' (at pp.c:10576)
                      ID: name='SUCCESS' (at pp.c:10576)
                    Compound:  (at pp.c:10576)
                      Decl: name='oldState', quals=[], storage=[] (at pp.c:10578)
                        TypeDecl: declname='oldState', quals=[] (at pp.c:10578)
                          IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
                        ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:10578)
                      FuncCall:  (at None)
                        ID: name='Msp430RefVoltGeneratorP__SwitchOnTimer__stop' (at pp.c:10581)
                      Assignment: op='=' (at pp.c:10582)
                        ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:10582)
                        ID: name='Msp430RefVoltGeneratorP__GENERATOR_OFF' (at pp.c:10582)
                      FuncCall:  (at None)
                        ID: name='Msp430RefVoltGeneratorP__signalStartDone' (at pp.c:10583)
                        ExprList:  (at pp.c:10583)
                          ID: name='oldState' (at pp.c:10583)
                          ID: name='FAIL' (at pp.c:10583)
                      FuncCall:  (at None)
                        ID: name='Msp430RefVoltGeneratorP__signalStopDone' (at pp.c:10584)
                        ExprList:  (at pp.c:10584)
                          ID: name='nextState' (at pp.c:10584)
                          ID: name='SUCCESS' (at pp.c:10584)
                Compound:  (at pp.c:10587)
                  If:  (at pp.c:10589)
                    BinaryOp: op='==' (at pp.c:10589)
                      ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:10589)
                      ID: name='nextState' (at pp.c:10589)
                    Compound:  (at pp.c:10589)
                      Assignment: op='=' (at pp.c:10590)
                        ID: name='result' (at pp.c:10590)
                        ID: name='SUCCESS' (at pp.c:10590)
                    Compound:  (at pp.c:10592)
                      Assignment: op='=' (at pp.c:10594)
                        ID: name='result' (at pp.c:10594)
                        ID: name='EBUSY' (at pp.c:10594)
      Return:  (at pp.c:10600)
        ID: name='result' (at pp.c:10600)
  FuncDef:  (at pp.c:10604)
    Decl: name='VirtualizeTimerC__0__startTimer', quals=[], storage=['static'] (at pp.c:10604)
      FuncDecl: quals=None (at pp.c:10604)
        ParamList:  (at pp.c:10604)
          Decl: name='num', quals=[], storage=[] (at pp.c:10604)
            TypeDecl: declname='num', quals=[] (at pp.c:10604)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='t0', quals=[], storage=[] (at pp.c:10604)
            TypeDecl: declname='t0', quals=[] (at pp.c:10604)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:10604)
            TypeDecl: declname='dt', quals=[] (at pp.c:10604)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='isoneshot', quals=[], storage=[] (at pp.c:10604)
            TypeDecl: declname='isoneshot', quals=[] (at pp.c:10604)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__startTimer', quals=[] (at pp.c:10604)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10605)
      Decl: name='timer', quals=[], storage=[] (at pp.c:10606)
        PtrDecl: quals=[] (at pp.c:10606)
          TypeDecl: declname='timer', quals=[] (at pp.c:10606)
            IdentifierType: names=['VirtualizeTimerC__0__Timer_t'] (at None)
        UnaryOp: op='&' (at pp.c:10606)
          ArrayRef:  (at pp.c:10606)
            ID: name='VirtualizeTimerC__0__m_timers' (at pp.c:10606)
            ID: name='num' (at pp.c:10606)
      Assignment: op='=' (at pp.c:10609)
        StructRef: type='->' (at pp.c:10609)
          ID: name='timer' (at pp.c:10609)
          ID: name='t0' (at pp.c:10609)
        ID: name='t0' (at pp.c:10609)
      Assignment: op='=' (at pp.c:10610)
        StructRef: type='->' (at pp.c:10610)
          ID: name='timer' (at pp.c:10610)
          ID: name='dt' (at pp.c:10610)
        ID: name='dt' (at pp.c:10610)
      Assignment: op='=' (at pp.c:10611)
        StructRef: type='->' (at pp.c:10611)
          ID: name='timer' (at pp.c:10611)
          ID: name='isoneshot' (at pp.c:10611)
        ID: name='isoneshot' (at pp.c:10611)
      Assignment: op='=' (at pp.c:10612)
        StructRef: type='->' (at pp.c:10612)
          ID: name='timer' (at pp.c:10612)
          ID: name='isrunning' (at pp.c:10612)
        ID: name='TRUE' (at pp.c:10612)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__updateFromTimer__postTask' (at pp.c:10613)
  FuncDef:  (at pp.c:10617)
    Decl: name='Msp430RefVoltGeneratorP__switchOff', quals=[], storage=['static'] (at pp.c:10617)
      FuncDecl: quals=None (at pp.c:10617)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__switchOff', quals=[] (at pp.c:10617)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10619)
      Compound:  (at pp.c:10620)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:10620)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:10620)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:10620)
        Compound:  (at pp.c:10622)
          If:  (at pp.c:10623)
            FuncCall:  (at None)
              ID: name='Msp430RefVoltGeneratorP__HplAdc12__isBusy' (at pp.c:10623)
            Compound:  (at pp.c:10623)
              Compound:  (at pp.c:10624)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:10625)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:10625)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='EBUSY' (at pp.c:10627)
                Compound:  (at pp.c:10629)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:10631)
                    ExprList:  (at pp.c:10631)
                      ID: name='__nesc_atomic' (at pp.c:10631)
                  Return:  (at pp.c:10633)
                    ID: name='__nesc_temp' (at pp.c:10633)
            Compound:  (at pp.c:10639)
              Decl: name='ctl0', quals=[], storage=[] (at pp.c:10640)
                TypeDecl: declname='ctl0', quals=[] (at pp.c:10640)
                  IdentifierType: names=['adc12ctl0_t'] (at None)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltGeneratorP__HplAdc12__getCtl0' (at pp.c:10640)
              Assignment: op='=' (at pp.c:10643)
                StructRef: type='.' (at pp.c:10643)
                  ID: name='ctl0' (at pp.c:10643)
                  ID: name='enc' (at pp.c:10643)
                Constant: type='int', value='0' (at pp.c:10643)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltGeneratorP__HplAdc12__setCtl0' (at pp.c:10644)
                ExprList:  (at pp.c:10644)
                  ID: name='ctl0' (at pp.c:10644)
              Assignment: op='=' (at pp.c:10645)
                StructRef: type='.' (at pp.c:10645)
                  ID: name='ctl0' (at pp.c:10645)
                  ID: name='refon' (at pp.c:10645)
                Constant: type='int', value='0' (at pp.c:10645)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltGeneratorP__HplAdc12__setCtl0' (at pp.c:10646)
                ExprList:  (at pp.c:10646)
                  ID: name='ctl0' (at pp.c:10646)
              Compound:  (at pp.c:10647)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:10648)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:10648)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='SUCCESS' (at pp.c:10650)
                Compound:  (at pp.c:10652)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:10654)
                    ExprList:  (at pp.c:10654)
                      ID: name='__nesc_atomic' (at pp.c:10654)
                  Return:  (at pp.c:10656)
                    ID: name='__nesc_temp' (at pp.c:10656)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:10662)
          ExprList:  (at pp.c:10662)
            ID: name='__nesc_atomic' (at pp.c:10662)
  FuncDef:  (at pp.c:10666)
    Decl: name='Msp430RefVoltGeneratorP__signalStartDone', quals=[], storage=['static'] (at pp.c:10666)
      FuncDecl: quals=None (at pp.c:10666)
        ParamList:  (at pp.c:10666)
          Decl: name='state', quals=[], storage=[] (at pp.c:10666)
            TypeDecl: declname='state', quals=[] (at pp.c:10666)
              IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:10666)
            TypeDecl: declname='result', quals=[] (at pp.c:10666)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__signalStartDone', quals=[] (at pp.c:10666)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10668)
      If:  (at pp.c:10669)
        BinaryOp: op='||' (at pp.c:10669)
          BinaryOp: op='==' (at pp.c:10669)
            ID: name='state' (at pp.c:10669)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_STABLE' (at pp.c:10669)
          BinaryOp: op='==' (at pp.c:10669)
            ID: name='state' (at pp.c:10669)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_ON_PENDING' (at pp.c:10669)
        Compound:  (at pp.c:10669)
          FuncCall:  (at None)
            ID: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__startDone' (at pp.c:10670)
            ExprList:  (at pp.c:10670)
              ID: name='result' (at pp.c:10670)
        Compound:  (at pp.c:10672)
          FuncCall:  (at None)
            ID: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__startDone' (at pp.c:10674)
            ExprList:  (at pp.c:10674)
              ID: name='result' (at pp.c:10674)
  FuncDef:  (at pp.c:10679)
    Decl: name='AdcP__SubResourceReadNow__granted', quals=[], storage=['static'] (at pp.c:10679)
      FuncDecl: quals=None (at pp.c:10679)
        ParamList:  (at pp.c:10679)
          Decl: name='nowClient', quals=[], storage=[] (at pp.c:10679)
            TypeDecl: declname='nowClient', quals=[] (at pp.c:10679)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__SubResourceReadNow__granted', quals=[] (at pp.c:10679)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10680)
      If:  (at pp.c:10681)
        BinaryOp: op='==' (at None)
          FuncCall:  (at None)
            ID: name='AdcP__configure' (at pp.c:10681)
            ExprList:  (at pp.c:10681)
              ID: name='nowClient' (at pp.c:10681)
          ID: name='SUCCESS' (at pp.c:10681)
        Compound:  (at pp.c:10681)
          Assignment: op='=' (at pp.c:10682)
            ID: name='AdcP__state' (at pp.c:10682)
            ID: name='AdcP__STATE_READNOW' (at pp.c:10682)
        Compound:  (at pp.c:10684)
          Assignment: op='=' (at pp.c:10686)
            ID: name='AdcP__state' (at pp.c:10686)
            ID: name='AdcP__STATE_READNOW_INVALID_CONFIG' (at pp.c:10686)
      FuncCall:  (at None)
        ID: name='AdcP__ResourceReadNow__granted' (at pp.c:10689)
        ExprList:  (at pp.c:10689)
          ID: name='nowClient' (at pp.c:10689)
  FuncDef:  (at pp.c:10693)
    Decl: name='AdcP__configure', quals=[], storage=['static'] (at pp.c:10693)
      FuncDecl: quals=None (at pp.c:10693)
        ParamList:  (at pp.c:10693)
          Decl: name='client', quals=[], storage=[] (at pp.c:10693)
            TypeDecl: declname='client', quals=[] (at pp.c:10693)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__configure', quals=[] (at pp.c:10693)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10694)
      Decl: name='result', quals=[], storage=[] (at pp.c:10695)
        TypeDecl: declname='result', quals=[] (at pp.c:10695)
          IdentifierType: names=['error_t'] (at None)
        ID: name='EINVAL' (at pp.c:10695)
      Decl: name='config', quals=['const'], storage=[] (at pp.c:10696)
        PtrDecl: quals=[] (at pp.c:10696)
          TypeDecl: declname='config', quals=['const'] (at pp.c:10696)
            IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
      Assignment: op='=' (at pp.c:10699)
        ID: name='config' (at pp.c:10699)
        FuncCall:  (at None)
          ID: name='AdcP__Config__getConfiguration' (at pp.c:10699)
          ExprList:  (at pp.c:10699)
            ID: name='client' (at pp.c:10699)
      If:  (at pp.c:10700)
        BinaryOp: op='!=' (at pp.c:10700)
          StructRef: type='->' (at pp.c:10700)
            ID: name='config' (at pp.c:10700)
            ID: name='inch' (at pp.c:10700)
          ID: name='INPUT_CHANNEL_NONE' (at pp.c:10700)
        Compound:  (at pp.c:10700)
          Assignment: op='=' (at pp.c:10701)
            ID: name='result' (at pp.c:10701)
            FuncCall:  (at None)
              ID: name='AdcP__SingleChannel__configureSingle' (at pp.c:10701)
              ExprList:  (at pp.c:10701)
                ID: name='client' (at pp.c:10701)
                ID: name='config' (at pp.c:10701)
      Return:  (at pp.c:10704)
        ID: name='result' (at pp.c:10704)
  FuncDef:  (at pp.c:10708)
    Decl: name='Msp430Adc12ImplP__SingleChannel__configureSingle', quals=[], storage=['static'] (at pp.c:10708)
      FuncDecl: quals=None (at pp.c:10708)
        ParamList:  (at pp.c:10708)
          Decl: name='id', quals=[], storage=[] (at pp.c:10708)
            TypeDecl: declname='id', quals=[] (at pp.c:10708)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='config', quals=['const'], storage=[] (at pp.c:10709)
            PtrDecl: quals=[] (at pp.c:10709)
              TypeDecl: declname='config', quals=['const'] (at pp.c:10709)
                IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__configureSingle', quals=[] (at pp.c:10708)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10710)
      Decl: name='result', quals=[], storage=[] (at pp.c:10711)
        TypeDecl: declname='result', quals=[] (at pp.c:10711)
          IdentifierType: names=['error_t'] (at None)
        ID: name='ERESERVE' (at pp.c:10711)
      If:  (at pp.c:10713)
        UnaryOp: op='!' (at pp.c:10713)
          ID: name='config' (at pp.c:10713)
        Compound:  (at pp.c:10713)
          Return:  (at pp.c:10714)
            ID: name='EINVAL' (at pp.c:10714)
      Compound:  (at pp.c:10716)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:10716)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:10716)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:10716)
        Compound:  (at pp.c:10718)
          If:  (at pp.c:10719)
            BinaryOp: op='&' (at pp.c:10719)
              ID: name='Msp430Adc12ImplP__state' (at pp.c:10719)
              ID: name='Msp430Adc12ImplP__ADC_BUSY' (at pp.c:10719)
            Compound:  (at pp.c:10720)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:10721)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:10721)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='EBUSY' (at pp.c:10723)
              Compound:  (at pp.c:10725)
                FuncCall:  (at None)
                  ID: name='__nesc_atomic_end' (at pp.c:10727)
                  ExprList:  (at pp.c:10727)
                    ID: name='__nesc_atomic' (at pp.c:10727)
                Return:  (at pp.c:10729)
                  ID: name='__nesc_temp' (at pp.c:10729)
          If:  (at pp.c:10733)
            BinaryOp: op='==' (at None)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__ADCArbiterInfo__userId' (at pp.c:10733)
              ID: name='id' (at pp.c:10733)
            Compound:  (at pp.c:10733)
              Decl: name='ctl1', quals=[], storage=[] (at pp.c:10734)
                TypeDecl: declname='ctl1', quals=[] (at pp.c:10734)
                  IdentifierType: names=['adc12ctl1_t'] (at None)
                ExprList:  (at pp.c:10735)
                  Assignment: op='=' (at pp.c:10735)
                    StructRef: type='.' (at pp.c:10735)
                      ID: name='adc12busy' (at pp.c:10735)
                    Constant: type='int', value='0' (at pp.c:10735)
                  Assignment: op='=' (at pp.c:10736)
                    StructRef: type='.' (at pp.c:10736)
                      ID: name='conseq' (at pp.c:10736)
                    Constant: type='int', value='0' (at pp.c:10736)
                  Assignment: op='=' (at pp.c:10737)
                    StructRef: type='.' (at pp.c:10737)
                      ID: name='adc12ssel' (at pp.c:10737)
                    StructRef: type='->' (at pp.c:10737)
                      ID: name='config' (at pp.c:10737)
                      ID: name='adc12ssel' (at pp.c:10737)
                  Assignment: op='=' (at pp.c:10738)
                    StructRef: type='.' (at pp.c:10738)
                      ID: name='adc12div' (at pp.c:10738)
                    StructRef: type='->' (at pp.c:10738)
                      ID: name='config' (at pp.c:10738)
                      ID: name='adc12div' (at pp.c:10738)
                  Assignment: op='=' (at pp.c:10739)
                    StructRef: type='.' (at pp.c:10739)
                      ID: name='issh' (at pp.c:10739)
                    Constant: type='int', value='0' (at pp.c:10739)
                  Assignment: op='=' (at pp.c:10740)
                    StructRef: type='.' (at pp.c:10740)
                      ID: name='shp' (at pp.c:10740)
                    Constant: type='int', value='1' (at pp.c:10740)
                  Assignment: op='=' (at pp.c:10741)
                    StructRef: type='.' (at pp.c:10741)
                      ID: name='shs' (at pp.c:10741)
                    Constant: type='int', value='0' (at pp.c:10741)
                  Assignment: op='=' (at pp.c:10742)
                    StructRef: type='.' (at pp.c:10742)
                      ID: name='cstartadd' (at pp.c:10742)
                    Constant: type='int', value='0' (at pp.c:10742)
              Decl: name='memctl', quals=[], storage=[] (at pp.c:10744)
                TypeDecl: declname='memctl', quals=[] (at pp.c:10744)
                  IdentifierType: names=['adc12memctl_t'] (at None)
                ExprList:  (at pp.c:10745)
                  Assignment: op='=' (at pp.c:10745)
                    StructRef: type='.' (at pp.c:10745)
                      ID: name='inch' (at pp.c:10745)
                    StructRef: type='->' (at pp.c:10745)
                      ID: name='config' (at pp.c:10745)
                      ID: name='inch' (at pp.c:10745)
                  Assignment: op='=' (at pp.c:10746)
                    StructRef: type='.' (at pp.c:10746)
                      ID: name='sref' (at pp.c:10746)
                    StructRef: type='->' (at pp.c:10746)
                      ID: name='config' (at pp.c:10746)
                      ID: name='sref' (at pp.c:10746)
                  Assignment: op='=' (at pp.c:10747)
                    StructRef: type='.' (at pp.c:10747)
                      ID: name='eos' (at pp.c:10747)
                    Constant: type='int', value='1' (at pp.c:10747)
              Decl: name='ctl0', quals=[], storage=[] (at pp.c:10749)
                TypeDecl: declname='ctl0', quals=[] (at pp.c:10749)
                  IdentifierType: names=['adc12ctl0_t'] (at None)
                FuncCall:  (at None)
                  ID: name='Msp430Adc12ImplP__HplAdc12__getCtl0' (at pp.c:10749)
              Assignment: op='=' (at pp.c:10752)
                StructRef: type='.' (at pp.c:10752)
                  ID: name='ctl0' (at pp.c:10752)
                  ID: name='msc' (at pp.c:10752)
                Constant: type='int', value='1' (at pp.c:10752)
              Assignment: op='=' (at pp.c:10753)
                StructRef: type='.' (at pp.c:10753)
                  ID: name='ctl0' (at pp.c:10753)
                  ID: name='sht0' (at pp.c:10753)
                StructRef: type='->' (at pp.c:10753)
                  ID: name='config' (at pp.c:10753)
                  ID: name='sht' (at pp.c:10753)
              Assignment: op='=' (at pp.c:10754)
                StructRef: type='.' (at pp.c:10754)
                  ID: name='ctl0' (at pp.c:10754)
                  ID: name='sht1' (at pp.c:10754)
                StructRef: type='->' (at pp.c:10754)
                  ID: name='config' (at pp.c:10754)
                  ID: name='sht' (at pp.c:10754)
              Assignment: op='=' (at pp.c:10756)
                ID: name='Msp430Adc12ImplP__state' (at pp.c:10756)
                ID: name='Msp430Adc12ImplP__SINGLE_DATA' (at pp.c:10756)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__HplAdc12__setCtl0' (at pp.c:10757)
                ExprList:  (at pp.c:10757)
                  ID: name='ctl0' (at pp.c:10757)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__HplAdc12__setCtl1' (at pp.c:10758)
                ExprList:  (at pp.c:10758)
                  ID: name='ctl1' (at pp.c:10758)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__HplAdc12__setMCtl' (at pp.c:10759)
                ExprList:  (at pp.c:10759)
                  Constant: type='int', value='0' (at pp.c:10759)
                  ID: name='memctl' (at pp.c:10759)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__HplAdc12__setIEFlags' (at pp.c:10760)
                ExprList:  (at pp.c:10760)
                  Constant: type='int', value='0x01' (at pp.c:10760)
              Assignment: op='=' (at pp.c:10761)
                ID: name='result' (at pp.c:10761)
                ID: name='SUCCESS' (at pp.c:10761)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:10765)
          ExprList:  (at pp.c:10765)
            ID: name='__nesc_atomic' (at pp.c:10765)
      Return:  (at pp.c:10766)
        ID: name='result' (at pp.c:10766)
  FuncDef:  (at pp.c:10770)
    Decl: name='AdcStreamP__ReadStream__read', quals=[], storage=['static'] (at pp.c:10770)
      FuncDecl: quals=None (at pp.c:10770)
        ParamList:  (at pp.c:10770)
          Decl: name='c', quals=[], storage=[] (at pp.c:10770)
            TypeDecl: declname='c', quals=[] (at pp.c:10770)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='usPeriod', quals=[], storage=[] (at pp.c:10770)
            TypeDecl: declname='usPeriod', quals=[] (at pp.c:10770)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='AdcStreamP__ReadStream__read', quals=[] (at pp.c:10770)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10771)
      If:  (at pp.c:10772)
        BinaryOp: op='&' (at pp.c:10772)
          ID: name='usPeriod' (at pp.c:10772)
          Constant: type='int', value='0xFFFF0000' (at pp.c:10772)
        Compound:  (at pp.c:10772)
          Assignment: op='=' (at pp.c:10774)
            ID: name='AdcStreamP__period' (at pp.c:10774)
            BinaryOp: op='/' (at pp.c:10774)
              ID: name='usPeriod' (at pp.c:10774)
              Constant: type='int', value='1000' (at pp.c:10774)
          Assignment: op='=' (at pp.c:10775)
            ID: name='AdcStreamP__periodModified' (at pp.c:10775)
            ID: name='TRUE' (at pp.c:10775)
          Assignment: op='=' (at pp.c:10776)
            ID: name='AdcStreamP__client' (at pp.c:10776)
            ID: name='c' (at pp.c:10776)
          Assignment: op='=' (at pp.c:10777)
            ID: name='AdcStreamP__now' (at pp.c:10777)
            FuncCall:  (at None)
              ID: name='AdcStreamP__Alarm__getNow' (at pp.c:10777)
          FuncCall:  (at None)
            ID: name='AdcStreamP__SingleChannel__configureSingle' (at pp.c:10778)
            ExprList:  (at pp.c:10778)
              ID: name='c' (at pp.c:10778)
              FuncCall:  (at None)
                ID: name='AdcStreamP__AdcConfigure__getConfiguration' (at pp.c:10778)
                ExprList:  (at pp.c:10778)
                  ID: name='c' (at pp.c:10778)
          If:  (at pp.c:10779)
            BinaryOp: op='==' (at None)
              FuncCall:  (at None)
                ID: name='AdcStreamP__nextBuffer' (at pp.c:10779)
                ExprList:  (at pp.c:10779)
                  ID: name='FALSE' (at pp.c:10779)
              ID: name='SUCCESS' (at pp.c:10779)
            Compound:  (at pp.c:10779)
              FuncCall:  (at None)
                ID: name='AdcStreamP__sampleSingle' (at pp.c:10780)
        Compound:  (at pp.c:10785)
          Assignment: op='=' (at pp.c:10786)
            ID: name='AdcStreamP__period' (at pp.c:10786)
            ID: name='usPeriod' (at pp.c:10786)
          Assignment: op='=' (at pp.c:10787)
            ID: name='AdcStreamP__periodModified' (at pp.c:10787)
            ID: name='FALSE' (at pp.c:10787)
          Assignment: op='=' (at pp.c:10788)
            ID: name='AdcStreamP__client' (at pp.c:10788)
            ID: name='c' (at pp.c:10788)
          FuncCall:  (at None)
            ID: name='AdcStreamP__nextMultiple' (at pp.c:10789)
            ExprList:  (at pp.c:10789)
              ID: name='c' (at pp.c:10789)
      Return:  (at pp.c:10791)
        ID: name='SUCCESS' (at pp.c:10791)
  FuncDef:  (at pp.c:10795)
    Decl: name='AdcStreamP__nextBuffer', quals=[], storage=['static'] (at pp.c:10795)
      FuncDecl: quals=None (at pp.c:10795)
        ParamList:  (at pp.c:10795)
          Decl: name='startNextAlarm', quals=[], storage=[] (at pp.c:10795)
            TypeDecl: declname='startNextAlarm', quals=[] (at pp.c:10795)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='AdcStreamP__nextBuffer', quals=[] (at pp.c:10795)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10797)
      Compound:  (at pp.c:10798)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:10798)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:10798)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:10798)
        Compound:  (at pp.c:10799)
          Decl: name='entry', quals=[], storage=[] (at pp.c:10800)
            PtrDecl: quals=[] (at pp.c:10800)
              TypeDecl: declname='entry', quals=[] (at pp.c:10800)
                Struct: name='AdcStreamP__list_entry_t', packed=False (at pp.c:10800)
            ArrayRef:  (at pp.c:10800)
              ID: name='AdcStreamP__bufferQueue' (at pp.c:10800)
              ID: name='AdcStreamP__client' (at pp.c:10800)
          If:  (at pp.c:10802)
            UnaryOp: op='!' (at pp.c:10802)
              ID: name='entry' (at pp.c:10802)
            Compound:  (at pp.c:10803)
              Assignment: op='=' (at pp.c:10805)
                ArrayRef:  (at pp.c:10805)
                  ID: name='AdcStreamP__bufferQueueEnd' (at pp.c:10805)
                  ID: name='AdcStreamP__client' (at pp.c:10805)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    PtrDecl: quals=[] (at pp.c:10805)
                      TypeDecl: declname=None, quals=[] (at None)
                        IdentifierType: names=['void'] (at None)
                  Constant: type='int', value='0' (at pp.c:10805)
              FuncCall:  (at None)
                ID: name='AdcStreamP__readStreamDone__postTask' (at pp.c:10806)
              Compound:  (at pp.c:10807)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:10808)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:10808)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='FAIL' (at pp.c:10810)
                Compound:  (at pp.c:10812)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:10814)
                    ExprList:  (at pp.c:10814)
                      ID: name='__nesc_atomic' (at pp.c:10814)
                  Return:  (at pp.c:10816)
                    ID: name='__nesc_temp' (at pp.c:10816)
            Compound:  (at pp.c:10822)
              Decl: name='tmp_count', quals=[], storage=[] (at pp.c:10823)
                TypeDecl: declname='tmp_count', quals=[] (at pp.c:10823)
                  IdentifierType: names=['uint16_t'] (at None)
              Assignment: op='=' (at pp.c:10826)
                ArrayRef:  (at pp.c:10826)
                  ID: name='AdcStreamP__bufferQueue' (at pp.c:10826)
                  ID: name='AdcStreamP__client' (at pp.c:10826)
                StructRef: type='->' (at pp.c:10826)
                  ID: name='entry' (at pp.c:10826)
                  ID: name='next' (at pp.c:10826)
              If:  (at pp.c:10827)
                UnaryOp: op='!' (at pp.c:10827)
                  ArrayRef:  (at pp.c:10827)
                    ID: name='AdcStreamP__bufferQueue' (at pp.c:10827)
                    ID: name='AdcStreamP__client' (at pp.c:10827)
                Compound:  (at pp.c:10827)
                  Assignment: op='=' (at pp.c:10828)
                    ArrayRef:  (at pp.c:10828)
                      ID: name='AdcStreamP__bufferQueueEnd' (at pp.c:10828)
                      ID: name='AdcStreamP__client' (at pp.c:10828)
                    UnaryOp: op='&' (at pp.c:10828)
                      ArrayRef:  (at pp.c:10828)
                        ID: name='AdcStreamP__bufferQueue' (at pp.c:10828)
                        ID: name='AdcStreamP__client' (at pp.c:10828)
              Assignment: op='=' (at pp.c:10831)
                ID: name='AdcStreamP__pos' (at pp.c:10831)
                Assignment: op='=' (at pp.c:10831)
                  ID: name='AdcStreamP__buffer' (at pp.c:10831)
                  Cast:  (at None)
                    Typename: quals=[] (at None)
                      PtrDecl: quals=[] (at pp.c:10831)
                        TypeDecl: declname=None, quals=[] (at None)
                          IdentifierType: names=['void'] (at None)
                    Constant: type='int', value='0' (at pp.c:10831)
              Assignment: op='=' (at pp.c:10832)
                ID: name='AdcStreamP__count' (at pp.c:10832)
                StructRef: type='->' (at pp.c:10832)
                  ID: name='entry' (at pp.c:10832)
                  ID: name='count' (at pp.c:10832)
              Assignment: op='=' (at pp.c:10833)
                ID: name='tmp_count' (at pp.c:10833)
                ID: name='AdcStreamP__count' (at pp.c:10833)
              Assignment: op='=' (at pp.c:10834)
                ID: name='AdcStreamP__pos' (at pp.c:10834)
                Assignment: op='=' (at pp.c:10834)
                  ID: name='AdcStreamP__buffer' (at pp.c:10834)
                  Cast:  (at None)
                    Typename: quals=[] (at None)
                      PtrDecl: quals=[] (at pp.c:10834)
                        TypeDecl: declname=None, quals=[] (at None)
                          IdentifierType: names=['uint16_t'] (at None)
                    ID: name='entry' (at pp.c:10834)
              If:  (at pp.c:10835)
                ID: name='startNextAlarm' (at pp.c:10835)
                Compound:  (at pp.c:10835)
                  FuncCall:  (at None)
                    ID: name='AdcStreamP__nextAlarm' (at pp.c:10836)
              Compound:  (at pp.c:10839)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:10840)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:10840)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='SUCCESS' (at pp.c:10842)
                Compound:  (at pp.c:10844)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:10846)
                    ExprList:  (at pp.c:10846)
                      ID: name='__nesc_atomic' (at pp.c:10846)
                  Return:  (at pp.c:10848)
                    ID: name='__nesc_temp' (at pp.c:10848)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:10854)
          ExprList:  (at pp.c:10854)
            ID: name='__nesc_atomic' (at pp.c:10854)
  FuncDef:  (at pp.c:10858)
    Decl: name='AdcStreamP__nextMultiple', quals=[], storage=['static'] (at pp.c:10858)
      FuncDecl: quals=None (at pp.c:10858)
        ParamList:  (at pp.c:10858)
          Decl: name='c', quals=[], storage=[] (at pp.c:10858)
            TypeDecl: declname='c', quals=[] (at pp.c:10858)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcStreamP__nextMultiple', quals=[] (at pp.c:10858)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10859)
      If:  (at pp.c:10860)
        BinaryOp: op='==' (at None)
          FuncCall:  (at None)
            ID: name='AdcStreamP__nextBuffer' (at pp.c:10860)
            ExprList:  (at pp.c:10860)
              ID: name='FALSE' (at pp.c:10860)
          ID: name='SUCCESS' (at pp.c:10860)
        Compound:  (at pp.c:10860)
          Decl: name='config', quals=[], storage=[] (at pp.c:10861)
            TypeDecl: declname='config', quals=[] (at pp.c:10861)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
            UnaryOp: op='*' (at None)
              FuncCall:  (at None)
                ID: name='AdcStreamP__AdcConfigure__getConfiguration' (at pp.c:10861)
                ExprList:  (at pp.c:10861)
                  ID: name='c' (at pp.c:10861)
          Assignment: op='=' (at pp.c:10864)
            StructRef: type='.' (at pp.c:10864)
              ID: name='config' (at pp.c:10864)
              ID: name='sampcon_ssel' (at pp.c:10864)
            ID: name='SAMPCON_SOURCE_SMCLK' (at pp.c:10864)
          Assignment: op='=' (at pp.c:10865)
            StructRef: type='.' (at pp.c:10865)
              ID: name='config' (at pp.c:10865)
              ID: name='sampcon_id' (at pp.c:10865)
            ID: name='SAMPCON_CLOCK_DIV_1' (at pp.c:10865)
          If:  (at pp.c:10866)
            BinaryOp: op='==' (at None)
              FuncCall:  (at None)
                ID: name='AdcStreamP__SingleChannel__configureMultiple' (at pp.c:10866)
                ExprList:  (at pp.c:10866)
                  ID: name='c' (at pp.c:10866)
                  UnaryOp: op='&' (at pp.c:10866)
                    ID: name='config' (at pp.c:10866)
                  ID: name='AdcStreamP__pos' (at pp.c:10866)
                  ID: name='AdcStreamP__count' (at pp.c:10866)
                  ID: name='AdcStreamP__period' (at pp.c:10866)
              ID: name='SUCCESS' (at pp.c:10866)
            Compound:  (at pp.c:10866)
              FuncCall:  (at None)
                ID: name='AdcStreamP__SingleChannel__getData' (at pp.c:10867)
                ExprList:  (at pp.c:10867)
                  ID: name='c' (at pp.c:10867)
            Compound:  (at pp.c:10871)
              FuncCall:  (at None)
                ID: name='AdcStreamP__postBuffer' (at pp.c:10872)
                ExprList:  (at pp.c:10872)
                  ID: name='c' (at pp.c:10872)
                  ID: name='AdcStreamP__pos' (at pp.c:10872)
                  ID: name='AdcStreamP__count' (at pp.c:10872)
              FuncCall:  (at None)
                ID: name='AdcStreamP__readStreamFail__postTask' (at pp.c:10873)
  FuncDef:  (at pp.c:10879)
    Decl: name='AdcP__ResourceRead__granted', quals=[], storage=['static'] (at pp.c:10879)
      FuncDecl: quals=None (at pp.c:10879)
        ParamList:  (at pp.c:10879)
          Decl: name='client', quals=[], storage=[] (at pp.c:10879)
            TypeDecl: declname='client', quals=[] (at pp.c:10879)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__ResourceRead__granted', quals=[] (at pp.c:10879)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10880)
      Decl: name='result', quals=[], storage=[] (at pp.c:10882)
        TypeDecl: declname='result', quals=[] (at pp.c:10882)
          IdentifierType: names=['error_t'] (at None)
        FuncCall:  (at None)
          ID: name='AdcP__configure' (at pp.c:10882)
          ExprList:  (at pp.c:10882)
            ID: name='client' (at pp.c:10882)
      If:  (at pp.c:10885)
        BinaryOp: op='==' (at pp.c:10885)
          ID: name='result' (at pp.c:10885)
          ID: name='SUCCESS' (at pp.c:10885)
        Compound:  (at pp.c:10885)
          Assignment: op='=' (at pp.c:10886)
            ID: name='AdcP__state' (at pp.c:10886)
            ID: name='AdcP__STATE_READ' (at pp.c:10886)
          Assignment: op='=' (at pp.c:10887)
            ID: name='result' (at pp.c:10887)
            FuncCall:  (at None)
              ID: name='AdcP__SingleChannel__getData' (at pp.c:10887)
              ExprList:  (at pp.c:10887)
                ID: name='client' (at pp.c:10887)
        Compound:  (at pp.c:10891)
          FuncCall:  (at None)
            ID: name='AdcP__ResourceRead__release' (at pp.c:10892)
            ExprList:  (at pp.c:10892)
              ID: name='client' (at pp.c:10892)
          FuncCall:  (at None)
            ID: name='AdcP__Read__readDone' (at pp.c:10893)
            ExprList:  (at pp.c:10893)
              ID: name='client' (at pp.c:10893)
              ID: name='result' (at pp.c:10893)
              Constant: type='int', value='0' (at pp.c:10893)
  FuncDef:  (at pp.c:10898)
    Decl: name='SenseC__Read__readDone', quals=[], storage=['static'] (at pp.c:10898)
      FuncDecl: quals=None (at pp.c:10898)
        ParamList:  (at pp.c:10898)
          Decl: name='result', quals=[], storage=[] (at pp.c:10898)
            TypeDecl: declname='result', quals=[] (at pp.c:10898)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:10898)
            TypeDecl: declname='data', quals=[] (at pp.c:10898)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='SenseC__Read__readDone', quals=[] (at pp.c:10898)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10899)
      If:  (at pp.c:10900)
        BinaryOp: op='==' (at pp.c:10900)
          ID: name='result' (at pp.c:10900)
          ID: name='SUCCESS' (at pp.c:10900)
        Compound:  (at pp.c:10900)
          If:  (at pp.c:10901)
            BinaryOp: op='&' (at pp.c:10901)
              ID: name='data' (at pp.c:10901)
              Constant: type='int', value='0x0004' (at pp.c:10901)
            Compound:  (at pp.c:10901)
              FuncCall:  (at None)
                ID: name='SenseC__Leds__led2On' (at pp.c:10902)
            Compound:  (at pp.c:10904)
              FuncCall:  (at None)
                ID: name='SenseC__Leds__led2Off' (at pp.c:10906)
          If:  (at pp.c:10909)
            BinaryOp: op='&' (at pp.c:10909)
              ID: name='data' (at pp.c:10909)
              Constant: type='int', value='0x0002' (at pp.c:10909)
            Compound:  (at pp.c:10909)
              FuncCall:  (at None)
                ID: name='SenseC__Leds__led1On' (at pp.c:10910)
            Compound:  (at pp.c:10912)
              FuncCall:  (at None)
                ID: name='SenseC__Leds__led1Off' (at pp.c:10914)
          If:  (at pp.c:10917)
            BinaryOp: op='&' (at pp.c:10917)
              ID: name='data' (at pp.c:10917)
              Constant: type='int', value='0x0001' (at pp.c:10917)
            Compound:  (at pp.c:10917)
              FuncCall:  (at None)
                ID: name='SenseC__Leds__led0On' (at pp.c:10918)
            Compound:  (at pp.c:10920)
              FuncCall:  (at None)
                ID: name='SenseC__Leds__led0Off' (at pp.c:10922)
  FuncDef:  (at pp.c:10928)
    Decl: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__startDone', quals=[], storage=['static'] (at pp.c:10928)
      FuncDecl: quals=None (at pp.c:10928)
        ParamList:  (at pp.c:10928)
          Decl: name='error', quals=[], storage=[] (at pp.c:10928)
            TypeDecl: declname='error', quals=[] (at pp.c:10928)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_2_5V__startDone', quals=[] (at pp.c:10928)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10929)
      If:  (at pp.c:10930)
        BinaryOp: op='!=' (at pp.c:10930)
          ID: name='Msp430RefVoltArbiterImplP__syncOwner' (at pp.c:10930)
          ID: name='Msp430RefVoltArbiterImplP__NO_OWNER' (at pp.c:10930)
        Compound:  (at pp.c:10930)
          FuncCall:  (at None)
            ID: name='Msp430RefVoltArbiterImplP__ClientResource__granted' (at pp.c:10933)
            ExprList:  (at pp.c:10933)
              ID: name='Msp430RefVoltArbiterImplP__syncOwner' (at pp.c:10933)
  FuncDef:  (at pp.c:10938)
    Decl: name='Msp430RefVoltGeneratorP__signalStopDone', quals=[], storage=['static'] (at pp.c:10938)
      FuncDecl: quals=None (at pp.c:10938)
        ParamList:  (at pp.c:10938)
          Decl: name='state', quals=[], storage=[] (at pp.c:10938)
            TypeDecl: declname='state', quals=[] (at pp.c:10938)
              IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:10938)
            TypeDecl: declname='result', quals=[] (at pp.c:10938)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__signalStopDone', quals=[] (at pp.c:10938)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10940)
      If:  (at pp.c:10941)
        BinaryOp: op='||' (at pp.c:10941)
          BinaryOp: op='==' (at pp.c:10941)
            ID: name='state' (at pp.c:10941)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_STABLE' (at pp.c:10941)
          BinaryOp: op='==' (at pp.c:10941)
            ID: name='state' (at pp.c:10941)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_OFF_PENDING' (at pp.c:10941)
        Compound:  (at pp.c:10941)
          FuncCall:  (at None)
            ID: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__stopDone' (at pp.c:10942)
            ExprList:  (at pp.c:10942)
              ID: name='result' (at pp.c:10942)
        Compound:  (at pp.c:10944)
          FuncCall:  (at None)
            ID: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__stopDone' (at pp.c:10946)
            ExprList:  (at pp.c:10946)
              ID: name='result' (at pp.c:10946)
  FuncDef:  (at pp.c:10951)
    Decl: name='Msp430RefVoltArbiterImplP__AdcResource__granted', quals=[], storage=['static'] (at pp.c:10951)
      FuncDecl: quals=None (at pp.c:10951)
        ParamList:  (at pp.c:10951)
          Decl: name='client', quals=[], storage=[] (at pp.c:10951)
            TypeDecl: declname='client', quals=[] (at pp.c:10951)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__granted', quals=[] (at pp.c:10951)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10952)
      Decl: name='settings', quals=['const'], storage=[] (at pp.c:10953)
        PtrDecl: quals=[] (at pp.c:10953)
          TypeDecl: declname='settings', quals=['const'] (at pp.c:10953)
            IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltArbiterImplP__Config__getConfiguration' (at pp.c:10953)
          ExprList:  (at pp.c:10953)
            ID: name='client' (at pp.c:10953)
      If:  (at pp.c:10956)
        BinaryOp: op='||' (at pp.c:10956)
          BinaryOp: op='==' (at pp.c:10956)
            StructRef: type='->' (at pp.c:10956)
              ID: name='settings' (at pp.c:10956)
              ID: name='sref' (at pp.c:10956)
            ID: name='REFERENCE_VREFplus_AVss' (at pp.c:10956)
          BinaryOp: op='==' (at pp.c:10957)
            StructRef: type='->' (at pp.c:10957)
              ID: name='settings' (at pp.c:10957)
              ID: name='sref' (at pp.c:10957)
            ID: name='REFERENCE_VREFplus_VREFnegterm' (at pp.c:10957)
        Compound:  (at pp.c:10957)
          Decl: name='started', quals=[], storage=[] (at pp.c:10958)
            TypeDecl: declname='started', quals=[] (at pp.c:10958)
              IdentifierType: names=['error_t'] (at None)
          If:  (at pp.c:10961)
            BinaryOp: op='!=' (at pp.c:10961)
              ID: name='Msp430RefVoltArbiterImplP__syncOwner' (at pp.c:10961)
              ID: name='Msp430RefVoltArbiterImplP__NO_OWNER' (at pp.c:10961)
            Compound:  (at pp.c:10961)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__AdcResource__release' (at pp.c:10965)
                ExprList:  (at pp.c:10965)
                  ID: name='client' (at pp.c:10965)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__AdcResource__request' (at pp.c:10966)
                ExprList:  (at pp.c:10966)
                  ID: name='client' (at pp.c:10966)
              Return:  (at pp.c:10967)
          Assignment: op='=' (at pp.c:10969)
            ID: name='Msp430RefVoltArbiterImplP__syncOwner' (at pp.c:10969)
            ID: name='client' (at pp.c:10969)
          If:  (at pp.c:10970)
            BinaryOp: op='==' (at pp.c:10970)
              StructRef: type='->' (at pp.c:10970)
                ID: name='settings' (at pp.c:10970)
                ID: name='ref2_5v' (at pp.c:10970)
              ID: name='REFVOLT_LEVEL_1_5' (at pp.c:10970)
            Compound:  (at pp.c:10970)
              Assignment: op='=' (at pp.c:10971)
                ID: name='Msp430RefVoltArbiterImplP__ref2_5v' (at pp.c:10971)
                ID: name='FALSE' (at pp.c:10971)
              Assignment: op='=' (at pp.c:10972)
                ID: name='started' (at pp.c:10972)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__start' (at pp.c:10972)
            Compound:  (at pp.c:10974)
              Assignment: op='=' (at pp.c:10975)
                ID: name='Msp430RefVoltArbiterImplP__ref2_5v' (at pp.c:10975)
                ID: name='TRUE' (at pp.c:10975)
              Assignment: op='=' (at pp.c:10976)
                ID: name='started' (at pp.c:10976)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__start' (at pp.c:10976)
          If:  (at pp.c:10978)
            BinaryOp: op='!=' (at pp.c:10978)
              ID: name='started' (at pp.c:10978)
              ID: name='SUCCESS' (at pp.c:10978)
            Compound:  (at pp.c:10978)
              Assignment: op='=' (at pp.c:10979)
                ID: name='Msp430RefVoltArbiterImplP__syncOwner' (at pp.c:10979)
                ID: name='Msp430RefVoltArbiterImplP__NO_OWNER' (at pp.c:10979)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__AdcResource__release' (at pp.c:10980)
                ExprList:  (at pp.c:10980)
                  ID: name='client' (at pp.c:10980)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__AdcResource__request' (at pp.c:10981)
                ExprList:  (at pp.c:10981)
                  ID: name='client' (at pp.c:10981)
        Compound:  (at pp.c:10984)
          FuncCall:  (at None)
            ID: name='Msp430RefVoltArbiterImplP__ClientResource__granted' (at pp.c:10986)
            ExprList:  (at pp.c:10986)
              ID: name='client' (at pp.c:10986)
  FuncDef:  (at pp.c:10991)
    Decl: name='SimpleArbiterP__0__Resource__request', quals=[], storage=['static'] (at pp.c:10991)
      FuncDecl: quals=None (at pp.c:10991)
        ParamList:  (at pp.c:10991)
          Decl: name='id', quals=[], storage=[] (at pp.c:10991)
            TypeDecl: declname='id', quals=[] (at pp.c:10991)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__Resource__request', quals=[] (at pp.c:10991)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10993)
      FuncCall:  (at None)
        ID: name='SimpleArbiterP__0__ResourceRequested__requested' (at pp.c:10994)
        ExprList:  (at pp.c:10994)
          ID: name='SimpleArbiterP__0__resId' (at pp.c:10994)
      Compound:  (at pp.c:10995)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:10995)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:10995)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:10995)
        Compound:  (at pp.c:10997)
          If:  (at pp.c:10998)
            BinaryOp: op='==' (at pp.c:10998)
              ID: name='SimpleArbiterP__0__state' (at pp.c:10998)
              ID: name='SimpleArbiterP__0__RES_IDLE' (at pp.c:10998)
            Compound:  (at pp.c:10998)
              Assignment: op='=' (at pp.c:10999)
                ID: name='SimpleArbiterP__0__state' (at pp.c:10999)
                ID: name='SimpleArbiterP__0__RES_GRANTING' (at pp.c:10999)
              Assignment: op='=' (at pp.c:11000)
                ID: name='SimpleArbiterP__0__reqResId' (at pp.c:11000)
                ID: name='id' (at pp.c:11000)
              FuncCall:  (at None)
                ID: name='SimpleArbiterP__0__grantedTask__postTask' (at pp.c:11001)
              Compound:  (at pp.c:11002)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11003)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11003)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='SUCCESS' (at pp.c:11005)
                Compound:  (at pp.c:11007)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:11009)
                    ExprList:  (at pp.c:11009)
                      ID: name='__nesc_atomic' (at pp.c:11009)
                  Return:  (at pp.c:11011)
                    ID: name='__nesc_temp' (at pp.c:11011)
          Compound:  (at pp.c:11016)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11017)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11017)
                IdentifierType: names=['char', 'unsigned'] (at None)
              FuncCall:  (at None)
                ID: name='SimpleArbiterP__0__Queue__enqueue' (at pp.c:11019)
                ExprList:  (at pp.c:11019)
                  ID: name='id' (at pp.c:11019)
            Compound:  (at pp.c:11021)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_end' (at pp.c:11023)
                ExprList:  (at pp.c:11023)
                  ID: name='__nesc_atomic' (at pp.c:11023)
              Return:  (at pp.c:11025)
                ID: name='__nesc_temp' (at pp.c:11025)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:11030)
          ExprList:  (at pp.c:11030)
            ID: name='__nesc_atomic' (at pp.c:11030)
  FuncDef:  (at pp.c:11034)
    Decl: name='Msp430RefVoltGeneratorP__start', quals=[], storage=['static'] (at pp.c:11034)
      FuncDecl: quals=None (at pp.c:11034)
        ParamList:  (at pp.c:11034)
          Decl: name='targetState', quals=[], storage=[] (at pp.c:11034)
            TypeDecl: declname='targetState', quals=[] (at pp.c:11034)
              IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__start', quals=[] (at pp.c:11034)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11036)
      Decl: name='result', quals=[], storage=[] (at pp.c:11037)
        TypeDecl: declname='result', quals=[] (at pp.c:11037)
          IdentifierType: names=['error_t'] (at None)
      If:  (at pp.c:11039)
        BinaryOp: op='||' (at pp.c:11039)
          BinaryOp: op='==' (at pp.c:11039)
            ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:11039)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_STABLE' (at pp.c:11039)
          BinaryOp: op='==' (at pp.c:11039)
            ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:11039)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_STABLE' (at pp.c:11039)
        Compound:  (at pp.c:11039)
          If:  (at pp.c:11040)
            BinaryOp: op='==' (at pp.c:11040)
              ID: name='targetState' (at pp.c:11040)
              ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:11040)
            Compound:  (at pp.c:11040)
              Assignment: op='=' (at pp.c:11041)
                ID: name='result' (at pp.c:11041)
                ID: name='EALREADY' (at pp.c:11041)
            Compound:  (at pp.c:11043)
              If:  (at pp.c:11045)
                BinaryOp: op='==' (at pp.c:11045)
                  Assignment: op='=' (at pp.c:11045)
                    ID: name='result' (at pp.c:11045)
                    FuncCall:  (at None)
                      ID: name='Msp430RefVoltGeneratorP__switchOn' (at pp.c:11045)
                      ExprList:  (at pp.c:11045)
                        ID: name='targetState' (at pp.c:11045)
                  ID: name='SUCCESS' (at pp.c:11045)
                Compound:  (at pp.c:11045)
                  If:  (at pp.c:11046)
                    BinaryOp: op='==' (at pp.c:11046)
                      ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:11046)
                      ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_STABLE' (at pp.c:11046)
                    Compound:  (at pp.c:11046)
                      Assignment: op='=' (at pp.c:11047)
                        ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:11047)
                        ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_ON_PENDING' (at pp.c:11047)
                      FuncCall:  (at None)
                        ID: name='Msp430RefVoltGeneratorP__SwitchOnTimer__startOneShot' (at pp.c:11048)
                        ExprList:  (at pp.c:11048)
                          Constant: type='int', value='17' (at pp.c:11048)
                    Compound:  (at pp.c:11052)
                      Assignment: op='=' (at pp.c:11053)
                        ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:11053)
                        ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_ON_PENDING' (at pp.c:11053)
                      FuncCall:  (at None)
                        ID: name='Msp430RefVoltGeneratorP__SwitchOnTimer__startOneShot' (at pp.c:11054)
                        ExprList:  (at pp.c:11054)
                          Constant: type='int', value='70' (at pp.c:11054)
        Compound:  (at pp.c:11059)
          If:  (at pp.c:11061)
            BinaryOp: op='==' (at pp.c:11061)
              ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:11061)
              ID: name='Msp430RefVoltGeneratorP__GENERATOR_OFF' (at pp.c:11061)
            Compound:  (at pp.c:11061)
              If:  (at pp.c:11062)
                BinaryOp: op='==' (at pp.c:11062)
                  Assignment: op='=' (at pp.c:11062)
                    ID: name='result' (at pp.c:11062)
                    FuncCall:  (at None)
                      ID: name='Msp430RefVoltGeneratorP__switchOn' (at pp.c:11062)
                      ExprList:  (at pp.c:11062)
                        ID: name='targetState' (at pp.c:11062)
                  ID: name='SUCCESS' (at pp.c:11062)
                Compound:  (at pp.c:11062)
                  If:  (at pp.c:11063)
                    BinaryOp: op='&&' (at pp.c:11063)
                      BinaryOp: op='==' (at pp.c:11063)
                        ID: name='targetState' (at pp.c:11063)
                        ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_STABLE' (at pp.c:11063)
                      FuncCall:  (at None)
                        ID: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__isRunning' (at pp.c:11063)
                    Compound:  (at pp.c:11063)
                      FuncCall:  (at None)
                        ID: name='Msp430RefVoltGeneratorP__SwitchOnTimer__startOneShot' (at pp.c:11064)
                        ExprList:  (at pp.c:11064)
                          Constant: type='int', value='70' (at pp.c:11064)
                    Compound:  (at pp.c:11066)
                      FuncCall:  (at None)
                        ID: name='Msp430RefVoltGeneratorP__SwitchOnTimer__startOneShot' (at pp.c:11067)
                        ExprList:  (at pp.c:11067)
                          Constant: type='int', value='17' (at pp.c:11067)
                  FuncCall:  (at None)
                    ID: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__stop' (at pp.c:11070)
                  Assignment: op='=' (at pp.c:11071)
                    ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:11071)
                    BinaryOp: op='+' (at pp.c:11071)
                      ID: name='targetState' (at pp.c:11071)
                      Constant: type='int', value='2' (at pp.c:11071)
            Compound:  (at pp.c:11074)
              If:  (at pp.c:11076)
                BinaryOp: op='||' (at pp.c:11076)
                  BinaryOp: op='==' (at pp.c:11076)
                    ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:11076)
                    ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_OFF_PENDING' (at pp.c:11076)
                  BinaryOp: op='==' (at pp.c:11076)
                    ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:11076)
                    ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_OFF_PENDING' (at pp.c:11076)
                Compound:  (at pp.c:11076)
                  If:  (at pp.c:11077)
                    BinaryOp: op='==' (at pp.c:11077)
                      Assignment: op='=' (at pp.c:11077)
                        ID: name='result' (at pp.c:11077)
                        FuncCall:  (at None)
                          ID: name='Msp430RefVoltGeneratorP__switchOn' (at pp.c:11077)
                          ExprList:  (at pp.c:11077)
                            ID: name='targetState' (at pp.c:11077)
                      ID: name='SUCCESS' (at pp.c:11077)
                    Compound:  (at pp.c:11077)
                      Decl: name='oldState', quals=[], storage=[] (at pp.c:11079)
                        TypeDecl: declname='oldState', quals=[] (at pp.c:11079)
                          IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
                        ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:11079)
                      FuncCall:  (at None)
                        ID: name='Msp430RefVoltGeneratorP__SwitchOffTimer__stop' (at pp.c:11082)
                      FuncCall:  (at None)
                        ID: name='Msp430RefVoltGeneratorP__signalStopDone' (at pp.c:11083)
                        ExprList:  (at pp.c:11083)
                          ID: name='oldState' (at pp.c:11083)
                          ID: name='FAIL' (at pp.c:11083)
                      If:  (at pp.c:11084)
                        BinaryOp: op='==' (at pp.c:11084)
                          ID: name='targetState' (at pp.c:11084)
                          BinaryOp: op='-' (at pp.c:11084)
                            ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:11084)
                            Constant: type='int', value='4' (at pp.c:11084)
                        Compound:  (at pp.c:11084)
                          Assignment: op='=' (at pp.c:11085)
                            ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:11085)
                            ID: name='targetState' (at pp.c:11085)
                          FuncCall:  (at None)
                            ID: name='Msp430RefVoltGeneratorP__signalStartDone' (at pp.c:11086)
                            ExprList:  (at pp.c:11086)
                              ID: name='targetState' (at pp.c:11086)
                              ID: name='SUCCESS' (at pp.c:11086)
                        Compound:  (at pp.c:11088)
                          If:  (at pp.c:11090)
                            BinaryOp: op='==' (at pp.c:11090)
                              ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:11090)
                              ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_OFF_PENDING' (at pp.c:11090)
                            Compound:  (at pp.c:11090)
                              Assignment: op='=' (at pp.c:11091)
                                ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:11091)
                                ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_ON_PENDING' (at pp.c:11091)
                              FuncCall:  (at None)
                                ID: name='Msp430RefVoltGeneratorP__SwitchOnTimer__startOneShot' (at pp.c:11092)
                                ExprList:  (at pp.c:11092)
                                  Constant: type='int', value='17' (at pp.c:11092)
                            Compound:  (at pp.c:11094)
                              Assignment: op='=' (at pp.c:11095)
                                ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:11095)
                                ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_ON_PENDING' (at pp.c:11095)
                              FuncCall:  (at None)
                                ID: name='Msp430RefVoltGeneratorP__SwitchOnTimer__startOneShot' (at pp.c:11096)
                                ExprList:  (at pp.c:11096)
                                  Constant: type='int', value='70' (at pp.c:11096)
                Compound:  (at pp.c:11101)
                  If:  (at pp.c:11103)
                    BinaryOp: op='==' (at pp.c:11103)
                      ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:11103)
                      BinaryOp: op='+' (at pp.c:11103)
                        ID: name='targetState' (at pp.c:11103)
                        Constant: type='int', value='2' (at pp.c:11103)
                    Compound:  (at pp.c:11103)
                      Assignment: op='=' (at pp.c:11104)
                        ID: name='result' (at pp.c:11104)
                        ID: name='SUCCESS' (at pp.c:11104)
                    Compound:  (at pp.c:11106)
                      Assignment: op='=' (at pp.c:11108)
                        ID: name='result' (at pp.c:11108)
                        ID: name='EBUSY' (at pp.c:11108)
      Return:  (at pp.c:11114)
        ID: name='result' (at pp.c:11114)
  FuncDef:  (at pp.c:11118)
    Decl: name='Msp430RefVoltGeneratorP__switchOn', quals=[], storage=['static'] (at pp.c:11118)
      FuncDecl: quals=None (at pp.c:11118)
        ParamList:  (at pp.c:11118)
          Decl: name='level', quals=[], storage=[] (at pp.c:11118)
            TypeDecl: declname='level', quals=[] (at pp.c:11118)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__switchOn', quals=[] (at pp.c:11118)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11120)
      Compound:  (at pp.c:11121)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:11121)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:11121)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:11121)
        Compound:  (at pp.c:11123)
          If:  (at pp.c:11124)
            FuncCall:  (at None)
              ID: name='Msp430RefVoltGeneratorP__HplAdc12__isBusy' (at pp.c:11124)
            Compound:  (at pp.c:11124)
              Compound:  (at pp.c:11125)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11126)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11126)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='EBUSY' (at pp.c:11128)
                Compound:  (at pp.c:11130)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:11132)
                    ExprList:  (at pp.c:11132)
                      ID: name='__nesc_atomic' (at pp.c:11132)
                  Return:  (at pp.c:11134)
                    ID: name='__nesc_temp' (at pp.c:11134)
            Compound:  (at pp.c:11140)
              Decl: name='ctl0', quals=[], storage=[] (at pp.c:11141)
                TypeDecl: declname='ctl0', quals=[] (at pp.c:11141)
                  IdentifierType: names=['adc12ctl0_t'] (at None)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltGeneratorP__HplAdc12__getCtl0' (at pp.c:11141)
              Assignment: op='=' (at pp.c:11144)
                StructRef: type='.' (at pp.c:11144)
                  ID: name='ctl0' (at pp.c:11144)
                  ID: name='enc' (at pp.c:11144)
                Constant: type='int', value='0' (at pp.c:11144)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltGeneratorP__HplAdc12__setCtl0' (at pp.c:11145)
                ExprList:  (at pp.c:11145)
                  ID: name='ctl0' (at pp.c:11145)
              Assignment: op='=' (at pp.c:11146)
                StructRef: type='.' (at pp.c:11146)
                  ID: name='ctl0' (at pp.c:11146)
                  ID: name='refon' (at pp.c:11146)
                Constant: type='int', value='1' (at pp.c:11146)
              Assignment: op='=' (at pp.c:11149)
                StructRef: type='.' (at pp.c:11149)
                  ID: name='ctl0' (at pp.c:11149)
                  ID: name='r2_5v' (at pp.c:11149)
                BinaryOp: op='-' (at pp.c:11149)
                  ID: name='level' (at pp.c:11149)
                  Constant: type='int', value='1' (at pp.c:11149)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltGeneratorP__HplAdc12__setCtl0' (at pp.c:11150)
                ExprList:  (at pp.c:11150)
                  ID: name='ctl0' (at pp.c:11150)
              Compound:  (at pp.c:11151)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11152)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11152)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='SUCCESS' (at pp.c:11154)
                Compound:  (at pp.c:11156)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:11158)
                    ExprList:  (at pp.c:11158)
                      ID: name='__nesc_atomic' (at pp.c:11158)
                  Return:  (at pp.c:11160)
                    ID: name='__nesc_temp' (at pp.c:11160)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:11166)
          ExprList:  (at pp.c:11166)
            ID: name='__nesc_atomic' (at pp.c:11166)
  FuncDef:  (at pp.c:11170)
    Decl: name='Msp430RefVoltGeneratorP__SwitchOnTimer__startOneShot', quals=[], storage=['static'] (at pp.c:11170)
      FuncDecl: quals=None (at pp.c:11170)
        ParamList:  (at pp.c:11170)
          Decl: name='dt', quals=[], storage=[] (at pp.c:11170)
            TypeDecl: declname='dt', quals=[] (at pp.c:11170)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOnTimer__startOneShot', quals=[] (at pp.c:11170)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11170)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__Timer__startOneShot' (at pp.c:11172)
        ExprList:  (at pp.c:11172)
          Constant: type='int', value='1U' (at pp.c:11172)
          ID: name='dt' (at pp.c:11172)
  FuncDef:  (at pp.c:11177)
    Decl: name='VirtualizeTimerC__0__fireTimers', quals=[], storage=['static'] (at pp.c:11177)
      FuncDecl: quals=None (at pp.c:11177)
        ParamList:  (at pp.c:11177)
          Decl: name='now', quals=[], storage=[] (at pp.c:11177)
            TypeDecl: declname='now', quals=[] (at pp.c:11177)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__fireTimers', quals=[] (at pp.c:11177)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11178)
      Decl: name='num', quals=[], storage=[] (at pp.c:11179)
        TypeDecl: declname='num', quals=[] (at pp.c:11179)
          IdentifierType: names=['uint8_t'] (at None)
      For:  (at pp.c:11181)
        Assignment: op='=' (at pp.c:11181)
          ID: name='num' (at pp.c:11181)
          Constant: type='int', value='0' (at pp.c:11181)
        BinaryOp: op='<' (at pp.c:11181)
          ID: name='num' (at pp.c:11181)
          ID: name='VirtualizeTimerC__0__NUM_TIMERS' (at pp.c:11181)
        UnaryOp: op='p++' (at pp.c:11181)
          ID: name='num' (at pp.c:11181)
        Compound:  (at pp.c:11182)
          Decl: name='timer', quals=[], storage=[] (at pp.c:11183)
            PtrDecl: quals=[] (at pp.c:11183)
              TypeDecl: declname='timer', quals=[] (at pp.c:11183)
                IdentifierType: names=['VirtualizeTimerC__0__Timer_t'] (at None)
            UnaryOp: op='&' (at pp.c:11183)
              ArrayRef:  (at pp.c:11183)
                ID: name='VirtualizeTimerC__0__m_timers' (at pp.c:11183)
                ID: name='num' (at pp.c:11183)
          If:  (at pp.c:11185)
            StructRef: type='->' (at pp.c:11185)
              ID: name='timer' (at pp.c:11185)
              ID: name='isrunning' (at pp.c:11185)
            Compound:  (at pp.c:11186)
              Decl: name='elapsed', quals=[], storage=[] (at pp.c:11187)
                TypeDecl: declname='elapsed', quals=[] (at pp.c:11187)
                  IdentifierType: names=['uint32_t'] (at None)
                BinaryOp: op='-' (at pp.c:11187)
                  ID: name='now' (at pp.c:11187)
                  StructRef: type='->' (at pp.c:11187)
                    ID: name='timer' (at pp.c:11187)
                    ID: name='t0' (at pp.c:11187)
              If:  (at pp.c:11189)
                BinaryOp: op='>=' (at pp.c:11189)
                  ID: name='elapsed' (at pp.c:11189)
                  StructRef: type='->' (at pp.c:11189)
                    ID: name='timer' (at pp.c:11189)
                    ID: name='dt' (at pp.c:11189)
                Compound:  (at pp.c:11190)
                  If:  (at pp.c:11191)
                    StructRef: type='->' (at pp.c:11191)
                      ID: name='timer' (at pp.c:11191)
                      ID: name='isoneshot' (at pp.c:11191)
                    Compound:  (at pp.c:11191)
                      Assignment: op='=' (at pp.c:11192)
                        StructRef: type='->' (at pp.c:11192)
                          ID: name='timer' (at pp.c:11192)
                          ID: name='isrunning' (at pp.c:11192)
                        ID: name='FALSE' (at pp.c:11192)
                    Compound:  (at pp.c:11194)
                      Assignment: op='+=' (at pp.c:11196)
                        StructRef: type='->' (at pp.c:11196)
                          ID: name='timer' (at pp.c:11196)
                          ID: name='t0' (at pp.c:11196)
                        StructRef: type='->' (at pp.c:11196)
                          ID: name='timer' (at pp.c:11196)
                          ID: name='dt' (at pp.c:11196)
                  FuncCall:  (at None)
                    ID: name='VirtualizeTimerC__0__Timer__fired' (at pp.c:11198)
                    ExprList:  (at pp.c:11198)
                      ID: name='num' (at pp.c:11198)
                  Break:  (at pp.c:11199)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__updateFromTimer__postTask' (at pp.c:11203)
  FuncDef:  (at pp.c:11207)
    Decl: name='TransformAlarmC__0__Alarm__startAt', quals=[], storage=['static'] (at pp.c:11207)
      FuncDecl: quals=None (at pp.c:11207)
        ParamList:  (at pp.c:11207)
          Decl: name='t0', quals=[], storage=[] (at pp.c:11207)
            TypeDecl: declname='t0', quals=[] (at pp.c:11207)
              IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:11207)
            TypeDecl: declname='dt', quals=[] (at pp.c:11207)
              IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Alarm__startAt', quals=[] (at pp.c:11207)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11208)
      Compound:  (at pp.c:11209)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:11209)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:11209)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:11209)
        Compound:  (at pp.c:11210)
          Assignment: op='=' (at pp.c:11211)
            ID: name='TransformAlarmC__0__m_t0' (at pp.c:11211)
            ID: name='t0' (at pp.c:11211)
          Assignment: op='=' (at pp.c:11212)
            ID: name='TransformAlarmC__0__m_dt' (at pp.c:11212)
            ID: name='dt' (at pp.c:11212)
          FuncCall:  (at None)
            ID: name='TransformAlarmC__0__set_alarm' (at pp.c:11213)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:11216)
          ExprList:  (at pp.c:11216)
            ID: name='__nesc_atomic' (at pp.c:11216)
  FuncDef:  (at pp.c:11220)
    Decl: name='HplAdc12P__HplAdc12__stopConversion', quals=[], storage=['static'] (at pp.c:11220)
      FuncDecl: quals=None (at pp.c:11220)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__stopConversion', quals=[] (at pp.c:11220)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11222)
      Decl: name='ctl1', quals=[], storage=[] (at pp.c:11224)
        TypeDecl: declname='ctl1', quals=[] (at pp.c:11224)
          IdentifierType: names=['uint16_t'] (at None)
        ID: name='HplAdc12P__ADC12CTL1' (at pp.c:11224)
      Assignment: op='&=' (at pp.c:11227)
        ID: name='HplAdc12P__ADC12CTL1' (at pp.c:11227)
        UnaryOp: op='~' (at pp.c:11227)
          BinaryOp: op='|' (at pp.c:11227)
            Constant: type='int', value='0x0002' (at pp.c:11227)
            Constant: type='int', value='0x0004' (at pp.c:11227)
      Assignment: op='&=' (at pp.c:11228)
        ID: name='HplAdc12P__ADC12CTL0' (at pp.c:11228)
        UnaryOp: op='~' (at pp.c:11228)
          BinaryOp: op='+' (at pp.c:11228)
            Constant: type='int', value='0x0001' (at pp.c:11228)
            Constant: type='int', value='0x0002' (at pp.c:11228)
      Assignment: op='&=' (at pp.c:11229)
        ID: name='HplAdc12P__ADC12CTL0' (at pp.c:11229)
        UnaryOp: op='~' (at pp.c:11229)
          Constant: type='int', value='0x0010' (at pp.c:11229)
      Assignment: op='|=' (at pp.c:11230)
        ID: name='HplAdc12P__ADC12CTL1' (at pp.c:11230)
        BinaryOp: op='&' (at pp.c:11230)
          ID: name='ctl1' (at pp.c:11230)
          BinaryOp: op='|' (at pp.c:11230)
            Constant: type='int', value='0x0002' (at pp.c:11230)
            Constant: type='int', value='0x0004' (at pp.c:11230)
  FuncDef:  (at pp.c:11239)
    Decl: name='sig_ADC_VECTOR', quals=[], storage=[] (at pp.c:11239)
      FuncDecl: quals=None (at pp.c:11239)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_ADC_VECTOR', quals=[] (at pp.c:11239)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11241)
      FuncCall:  (at None)
        ID: name='HplAdc12P__HplAdc12__conversionDone' (at pp.c:11242)
        ExprList:  (at pp.c:11242)
          ID: name='HplAdc12P__ADC12IV' (at pp.c:11242)
  FuncDef:  (at pp.c:11246)
    Decl: name='Msp430Adc12ImplP__stopConversion', quals=[], storage=['static'] (at pp.c:11246)
      FuncDecl: quals=None (at pp.c:11246)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__stopConversion', quals=[] (at pp.c:11246)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11247)
      Decl: name='i', quals=[], storage=[] (at pp.c:11248)
        TypeDecl: declname='i', quals=[] (at pp.c:11248)
          IdentifierType: names=['uint8_t'] (at None)
      If:  (at pp.c:11250)
        BinaryOp: op='&' (at pp.c:11250)
          ID: name='Msp430Adc12ImplP__state' (at pp.c:11250)
          ID: name='Msp430Adc12ImplP__USE_TIMERA' (at pp.c:11250)
        Compound:  (at pp.c:11250)
          FuncCall:  (at None)
            ID: name='Msp430Adc12ImplP__TimerA__setMode' (at pp.c:11251)
            ExprList:  (at pp.c:11251)
              ID: name='MSP430TIMER_STOP_MODE' (at pp.c:11251)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__resetAdcPin' (at pp.c:11253)
        ExprList:  (at None)
          StructRef: type='.' (at None)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__HplAdc12__getMCtl' (at pp.c:11253)
              ExprList:  (at pp.c:11253)
                Constant: type='int', value='0' (at pp.c:11253)
            ID: name='inch' (at pp.c:11253)
      If:  (at pp.c:11254)
        BinaryOp: op='&' (at pp.c:11254)
          ID: name='Msp430Adc12ImplP__state' (at pp.c:11254)
          ID: name='Msp430Adc12ImplP__MULTI_CHANNEL' (at pp.c:11254)
        Compound:  (at pp.c:11254)
          For:  (at pp.c:11255)
            Assignment: op='=' (at pp.c:11255)
              ID: name='i' (at pp.c:11255)
              Constant: type='int', value='1' (at pp.c:11255)
            BinaryOp: op='<' (at pp.c:11255)
              ID: name='i' (at pp.c:11255)
              ID: name='Msp430Adc12ImplP__numChannels' (at pp.c:11255)
            UnaryOp: op='p++' (at pp.c:11255)
              ID: name='i' (at pp.c:11255)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__resetAdcPin' (at pp.c:11256)
              ExprList:  (at None)
                StructRef: type='.' (at None)
                  FuncCall:  (at None)
                    ID: name='Msp430Adc12ImplP__HplAdc12__getMCtl' (at pp.c:11256)
                    ExprList:  (at pp.c:11256)
                      ID: name='i' (at pp.c:11256)
                  ID: name='inch' (at pp.c:11256)
      Compound:  (at pp.c:11260)
        FuncCall:  (at None)
          ID: name='Msp430Adc12ImplP__HplAdc12__stopConversion' (at pp.c:11261)
        FuncCall:  (at None)
          ID: name='Msp430Adc12ImplP__HplAdc12__resetIFGs' (at pp.c:11262)
        Assignment: op='&=' (at pp.c:11263)
          ID: name='Msp430Adc12ImplP__state' (at pp.c:11263)
          UnaryOp: op='~' (at pp.c:11263)
            ID: name='Msp430Adc12ImplP__ADC_BUSY' (at pp.c:11263)
  FuncDef:  (at pp.c:11268)
    Decl: name='Msp430Adc12ImplP__resetAdcPin', quals=[], storage=['static'] (at pp.c:11268)
      FuncDecl: quals=None (at pp.c:11268)
        ParamList:  (at pp.c:11268)
          Decl: name='inch', quals=[], storage=[] (at pp.c:11268)
            TypeDecl: declname='inch', quals=[] (at pp.c:11268)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__resetAdcPin', quals=[] (at pp.c:11268)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11269)
      Switch:  (at pp.c:11271)
        ID: name='inch' (at pp.c:11271)
        Compound:  (at pp.c:11272)
          Case:  (at pp.c:11273)
            Constant: type='int', value='0' (at pp.c:11273)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port60__selectIOFunc' (at pp.c:11273)
          Break:  (at pp.c:11275)
          Case:  (at pp.c:11276)
            Constant: type='int', value='1' (at pp.c:11276)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port61__selectIOFunc' (at pp.c:11276)
          Break:  (at pp.c:11278)
          Case:  (at pp.c:11279)
            Constant: type='int', value='2' (at pp.c:11279)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port62__selectIOFunc' (at pp.c:11279)
          Break:  (at pp.c:11281)
          Case:  (at pp.c:11282)
            Constant: type='int', value='3' (at pp.c:11282)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port63__selectIOFunc' (at pp.c:11282)
          Break:  (at pp.c:11284)
          Case:  (at pp.c:11285)
            Constant: type='int', value='4' (at pp.c:11285)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port64__selectIOFunc' (at pp.c:11285)
          Break:  (at pp.c:11287)
          Case:  (at pp.c:11288)
            Constant: type='int', value='5' (at pp.c:11288)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port65__selectIOFunc' (at pp.c:11288)
          Break:  (at pp.c:11290)
          Case:  (at pp.c:11291)
            Constant: type='int', value='6' (at pp.c:11291)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port66__selectIOFunc' (at pp.c:11291)
          Break:  (at pp.c:11293)
          Case:  (at pp.c:11294)
            Constant: type='int', value='7' (at pp.c:11294)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port67__selectIOFunc' (at pp.c:11294)
          Break:  (at pp.c:11296)
  FuncDef:  (at pp.c:11301)
    Decl: name='AdcP__SingleChannel__singleDataReady', quals=[], storage=['static'] (at pp.c:11301)
      FuncDecl: quals=None (at pp.c:11301)
        ParamList:  (at pp.c:11301)
          Decl: name='client', quals=[], storage=[] (at pp.c:11301)
            TypeDecl: declname='client', quals=[] (at pp.c:11301)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:11301)
            TypeDecl: declname='data', quals=[] (at pp.c:11301)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='AdcP__SingleChannel__singleDataReady', quals=[] (at pp.c:11301)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11302)
      Switch:  (at pp.c:11303)
        ID: name='AdcP__state' (at pp.c:11303)
        Compound:  (at pp.c:11304)
          Case:  (at pp.c:11305)
            ID: name='AdcP__STATE_READ' (at pp.c:11305)
            Assignment: op='=' (at pp.c:11306)
              ID: name='AdcP__owner' (at pp.c:11306)
              ID: name='client' (at pp.c:11306)
          Assignment: op='=' (at pp.c:11307)
            ID: name='AdcP__value' (at pp.c:11307)
            ID: name='data' (at pp.c:11307)
          FuncCall:  (at None)
            ID: name='AdcP__readDone__postTask' (at pp.c:11308)
          Break:  (at pp.c:11309)
          Case:  (at pp.c:11310)
            ID: name='AdcP__STATE_READNOW' (at pp.c:11310)
            FuncCall:  (at None)
              ID: name='AdcP__ReadNow__readDone' (at pp.c:11311)
              ExprList:  (at pp.c:11311)
                ID: name='client' (at pp.c:11311)
                ID: name='SUCCESS' (at pp.c:11311)
                ID: name='data' (at pp.c:11311)
          Break:  (at pp.c:11312)
          Default:  (at pp.c:11313)
            Break:  (at pp.c:11315)
      Return:  (at pp.c:11317)
        ID: name='SUCCESS' (at pp.c:11317)
  FuncDef:  (at pp.c:11321)
    Decl: name='AdcStreamP__SingleChannel__singleDataReady', quals=[], storage=['static'] (at pp.c:11321)
      FuncDecl: quals=None (at pp.c:11321)
        ParamList:  (at pp.c:11321)
          Decl: name='streamClient', quals=[], storage=[] (at pp.c:11321)
            TypeDecl: declname='streamClient', quals=[] (at pp.c:11321)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:11321)
            TypeDecl: declname='data', quals=[] (at pp.c:11321)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='AdcStreamP__SingleChannel__singleDataReady', quals=[] (at pp.c:11321)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11322)
      If:  (at pp.c:11323)
        BinaryOp: op='==' (at pp.c:11323)
          ID: name='AdcStreamP__client' (at pp.c:11323)
          ID: name='AdcStreamP__NSTREAM' (at pp.c:11323)
        Compound:  (at pp.c:11323)
          Return:  (at pp.c:11324)
            ID: name='FAIL' (at pp.c:11324)
      If:  (at pp.c:11326)
        BinaryOp: op='==' (at pp.c:11326)
          ID: name='AdcStreamP__count' (at pp.c:11326)
          Constant: type='int', value='0' (at pp.c:11326)
        Compound:  (at pp.c:11327)
          Assignment: op='=' (at pp.c:11328)
            ID: name='AdcStreamP__now' (at pp.c:11328)
            FuncCall:  (at None)
              ID: name='AdcStreamP__Alarm__getNow' (at pp.c:11328)
          FuncCall:  (at None)
            ID: name='AdcStreamP__nextBuffer' (at pp.c:11329)
            ExprList:  (at pp.c:11329)
              ID: name='TRUE' (at pp.c:11329)
        Compound:  (at pp.c:11332)
          Assignment: op='=' (at pp.c:11333)
            UnaryOp: op='*' (at pp.c:11333)
              UnaryOp: op='p++' (at pp.c:11333)
                ID: name='AdcStreamP__pos' (at pp.c:11333)
            ID: name='data' (at pp.c:11333)
          If:  (at pp.c:11334)
            BinaryOp: op='==' (at pp.c:11334)
              ID: name='AdcStreamP__pos' (at pp.c:11334)
              BinaryOp: op='+' (at pp.c:11334)
                ID: name='AdcStreamP__buffer' (at pp.c:11334)
                ID: name='AdcStreamP__count' (at pp.c:11334)
            Compound:  (at pp.c:11335)
              Compound:  (at pp.c:11337)
                If:  (at pp.c:11338)
                  ID: name='AdcStreamP__lastBuffer' (at pp.c:11338)
                  Compound:  (at pp.c:11339)
                    Assignment: op='=' (at pp.c:11341)
                      ArrayRef:  (at pp.c:11341)
                        ID: name='AdcStreamP__bufferQueueEnd' (at pp.c:11341)
                        ID: name='AdcStreamP__client' (at pp.c:11341)
                      Cast:  (at None)
                        Typename: quals=[] (at None)
                          PtrDecl: quals=[] (at pp.c:11341)
                            TypeDecl: declname=None, quals=[] (at None)
                              IdentifierType: names=['void'] (at None)
                        Constant: type='int', value='0' (at pp.c:11341)
                    FuncCall:  (at None)
                      ID: name='AdcStreamP__readStreamFail__postTask' (at pp.c:11342)
                    Compound:  (at pp.c:11343)
                      Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11344)
                        TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11344)
                          IdentifierType: names=['char', 'unsigned'] (at None)
                        ID: name='FAIL' (at pp.c:11346)
                      Return:  (at pp.c:11349)
                        ID: name='__nesc_temp' (at pp.c:11349)
                  Compound:  (at pp.c:11352)
                    Assignment: op='=' (at pp.c:11353)
                      ID: name='AdcStreamP__lastCount' (at pp.c:11353)
                      ID: name='AdcStreamP__count' (at pp.c:11353)
                    Assignment: op='=' (at pp.c:11354)
                      ID: name='AdcStreamP__lastBuffer' (at pp.c:11354)
                      ID: name='AdcStreamP__buffer' (at pp.c:11354)
              FuncCall:  (at None)
                ID: name='AdcStreamP__bufferDone__postTask' (at pp.c:11357)
              FuncCall:  (at None)
                ID: name='AdcStreamP__nextBuffer' (at pp.c:11358)
                ExprList:  (at pp.c:11358)
                  ID: name='TRUE' (at pp.c:11358)
            Compound:  (at pp.c:11360)
              FuncCall:  (at None)
                ID: name='AdcStreamP__nextAlarm' (at pp.c:11361)
      Return:  (at pp.c:11365)
        ID: name='FAIL' (at pp.c:11365)
  FuncDef:  (at pp.c:11368)
    Decl: name='AdcStreamP__SingleChannel__multipleDataReady', quals=[], storage=['static'] (at pp.c:11368)
      FuncDecl: quals=None (at pp.c:11368)
        ParamList:  (at pp.c:11368)
          Decl: name='streamClient', quals=[], storage=[] (at pp.c:11368)
            TypeDecl: declname='streamClient', quals=[] (at pp.c:11368)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:11369)
            PtrDecl: quals=[] (at pp.c:11369)
              TypeDecl: declname='buf', quals=[] (at pp.c:11369)
                IdentifierType: names=['uint16_t'] (at None)
          Decl: name='length', quals=[], storage=[] (at pp.c:11369)
            TypeDecl: declname='length', quals=[] (at pp.c:11369)
              IdentifierType: names=['uint16_t'] (at None)
        PtrDecl: quals=[] (at pp.c:11368)
          TypeDecl: declname='AdcStreamP__SingleChannel__multipleDataReady', quals=[] (at pp.c:11368)
            IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:11370)
      Compound:  (at pp.c:11372)
        If:  (at pp.c:11373)
          ID: name='AdcStreamP__lastBuffer' (at pp.c:11373)
          Compound:  (at pp.c:11374)
            Assignment: op='=' (at pp.c:11376)
              ArrayRef:  (at pp.c:11376)
                ID: name='AdcStreamP__bufferQueueEnd' (at pp.c:11376)
                ID: name='AdcStreamP__client' (at pp.c:11376)
              Cast:  (at None)
                Typename: quals=[] (at None)
                  PtrDecl: quals=[] (at pp.c:11376)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['void'] (at None)
                Constant: type='int', value='0' (at pp.c:11376)
            FuncCall:  (at None)
              ID: name='AdcStreamP__readStreamFail__postTask' (at pp.c:11377)
            Compound:  (at pp.c:11378)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11379)
                PtrDecl: quals=[] (at pp.c:11379)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11379)
                    IdentifierType: names=['int', 'unsigned'] (at None)
                Constant: type='int', value='0' (at pp.c:11381)
              Return:  (at pp.c:11384)
                ID: name='__nesc_temp' (at pp.c:11384)
          Compound:  (at pp.c:11387)
            Assignment: op='=' (at pp.c:11388)
              ID: name='AdcStreamP__lastBuffer' (at pp.c:11388)
              ID: name='AdcStreamP__buffer' (at pp.c:11388)
            Assignment: op='=' (at pp.c:11389)
              ID: name='AdcStreamP__lastCount' (at pp.c:11389)
              BinaryOp: op='-' (at pp.c:11389)
                ID: name='AdcStreamP__pos' (at pp.c:11389)
                ID: name='AdcStreamP__buffer' (at pp.c:11389)
      FuncCall:  (at None)
        ID: name='AdcStreamP__bufferDone__postTask' (at pp.c:11392)
      FuncCall:  (at None)
        ID: name='AdcStreamP__nextMultiple' (at pp.c:11393)
        ExprList:  (at pp.c:11393)
          ID: name='streamClient' (at pp.c:11393)
      Return:  (at pp.c:11394)
        Constant: type='int', value='0' (at pp.c:11394)
[Log] Parsed preprocessed file into AST.
