[Log] Preprocessed input file.
FileAST:  (at None)
  Typedef: name='ptrdiff_t', quals=[], storage=['typedef'] (at pp.c:7)
    TypeDecl: declname='ptrdiff_t', quals=[] (at pp.c:7)
      IdentifierType: names=['int'] (at None)
  Typedef: name='size_t', quals=[], storage=['typedef'] (at pp.c:9)
    TypeDecl: declname='size_t', quals=[] (at pp.c:9)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='wchar_t', quals=[], storage=['typedef'] (at pp.c:11)
    TypeDecl: declname='wchar_t', quals=[] (at pp.c:11)
      IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:13)
    Struct: name='__nesc_attr_nonnull', packed=False (at pp.c:13)
      Decl: name='dummy', quals=[], storage=[] (at 0)
        TypeDecl: declname='dummy', quals=[] (at pp.c:15)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:18)
    Struct: name='__nesc_attr_bnd', packed=False (at pp.c:18)
      Decl: name='lo', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:20)
          TypeDecl: declname='lo', quals=[] (at pp.c:20)
            IdentifierType: names=['void'] (at None)
      Decl: name='hi', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:20)
          TypeDecl: declname='hi', quals=[] (at pp.c:20)
            IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:23)
    Struct: name='__nesc_attr_bnd_nok', packed=False (at pp.c:23)
      Decl: name='lo', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:25)
          TypeDecl: declname='lo', quals=[] (at pp.c:25)
            IdentifierType: names=['void'] (at None)
      Decl: name='hi', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:25)
          TypeDecl: declname='hi', quals=[] (at pp.c:25)
            IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:28)
    Struct: name='__nesc_attr_count', packed=False (at pp.c:28)
      Decl: name='n', quals=[], storage=[] (at 0)
        TypeDecl: declname='n', quals=[] (at pp.c:30)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:33)
    Struct: name='__nesc_attr_count_nok', packed=False (at pp.c:33)
      Decl: name='n', quals=[], storage=[] (at 0)
        TypeDecl: declname='n', quals=[] (at pp.c:35)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:38)
    Struct: name='__nesc_attr_one', packed=False (at pp.c:38)
      Decl: name='dummy', quals=[], storage=[] (at 0)
        TypeDecl: declname='dummy', quals=[] (at pp.c:40)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:43)
    Struct: name='__nesc_attr_one_nok', packed=False (at pp.c:43)
      Decl: name='dummy', quals=[], storage=[] (at 0)
        TypeDecl: declname='dummy', quals=[] (at pp.c:45)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:48)
    Struct: name='__nesc_attr_dmemset', packed=False (at pp.c:48)
      Decl: name='a1', quals=[], storage=[] (at 0)
        TypeDecl: declname='a1', quals=[] (at pp.c:50)
          IdentifierType: names=['int'] (at None)
      Decl: name='a2', quals=[], storage=[] (at 0)
        TypeDecl: declname='a2', quals=[] (at pp.c:50)
          IdentifierType: names=['int'] (at None)
      Decl: name='a3', quals=[], storage=[] (at 0)
        TypeDecl: declname='a3', quals=[] (at pp.c:50)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:53)
    Struct: name='__nesc_attr_dmemcpy', packed=False (at pp.c:53)
      Decl: name='a1', quals=[], storage=[] (at 0)
        TypeDecl: declname='a1', quals=[] (at pp.c:55)
          IdentifierType: names=['int'] (at None)
      Decl: name='a2', quals=[], storage=[] (at 0)
        TypeDecl: declname='a2', quals=[] (at pp.c:55)
          IdentifierType: names=['int'] (at None)
      Decl: name='a3', quals=[], storage=[] (at 0)
        TypeDecl: declname='a3', quals=[] (at pp.c:55)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:58)
    Struct: name='__nesc_attr_nts', packed=False (at pp.c:58)
      Decl: name='dummy', quals=[], storage=[] (at 0)
        TypeDecl: declname='dummy', quals=[] (at pp.c:60)
          IdentifierType: names=['int'] (at None)
  Typedef: name='int8_t', quals=[], storage=['typedef'] (at pp.c:63)
    TypeDecl: declname='int8_t', quals=[] (at pp.c:63)
      IdentifierType: names=['char', 'signed'] (at None)
  Typedef: name='uint8_t', quals=[], storage=['typedef'] (at pp.c:64)
    TypeDecl: declname='uint8_t', quals=[] (at pp.c:64)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Typedef: name='int16_t', quals=[], storage=['typedef'] (at pp.c:66)
    TypeDecl: declname='int16_t', quals=[] (at pp.c:66)
      IdentifierType: names=['int'] (at None)
  Typedef: name='uint16_t', quals=[], storage=['typedef'] (at pp.c:67)
    TypeDecl: declname='uint16_t', quals=[] (at pp.c:67)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='int32_t', quals=[], storage=['typedef'] (at pp.c:69)
    TypeDecl: declname='int32_t', quals=[] (at pp.c:69)
      IdentifierType: names=['long'] (at None)
  Typedef: name='uint32_t', quals=[], storage=['typedef'] (at pp.c:70)
    TypeDecl: declname='uint32_t', quals=[] (at pp.c:70)
      IdentifierType: names=['long', 'unsigned'] (at None)
  Typedef: name='int64_t', quals=[], storage=['typedef'] (at pp.c:72)
    TypeDecl: declname='int64_t', quals=[] (at pp.c:72)
      IdentifierType: names=['long', 'long'] (at None)
  Typedef: name='uint64_t', quals=[], storage=['typedef'] (at pp.c:73)
    TypeDecl: declname='uint64_t', quals=[] (at pp.c:73)
      IdentifierType: names=['long', 'long', 'unsigned'] (at None)
  Typedef: name='intptr_t', quals=[], storage=['typedef'] (at pp.c:78)
    TypeDecl: declname='intptr_t', quals=[] (at pp.c:78)
      IdentifierType: names=['int16_t'] (at None)
  Typedef: name='uintptr_t', quals=[], storage=['typedef'] (at pp.c:79)
    TypeDecl: declname='uintptr_t', quals=[] (at pp.c:79)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='__nesc_ntoh_uint8', quals=[], storage=['__inline', 'static'] (at pp.c:81)
    FuncDecl: quals=None (at pp.c:81)
      ParamList:  (at pp.c:81)
        Decl: name='source', quals=['const'], storage=[] (at pp.c:81)
          PtrDecl: quals=[] (at pp.c:81)
            TypeDecl: declname='source', quals=['const'] (at pp.c:81)
              IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_ntoh_uint8', quals=[] (at pp.c:81)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='__nesc_hton_uint8', quals=[], storage=['__inline', 'static'] (at pp.c:86)
    FuncDecl: quals=None (at pp.c:86)
      ParamList:  (at pp.c:86)
        Decl: name='target', quals=[], storage=[] (at pp.c:86)
          PtrDecl: quals=[] (at pp.c:86)
            TypeDecl: declname='target', quals=[] (at pp.c:86)
              IdentifierType: names=['void'] (at None)
        Decl: name='value', quals=[], storage=[] (at pp.c:86)
          TypeDecl: declname='value', quals=[] (at pp.c:86)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='__nesc_hton_uint8', quals=[] (at pp.c:86)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='__nesc_ntoh_leuint8', quals=[], storage=['__inline', 'static'] (at pp.c:92)
    FuncDecl: quals=None (at pp.c:92)
      ParamList:  (at pp.c:92)
        Decl: name='source', quals=['const'], storage=[] (at pp.c:92)
          PtrDecl: quals=[] (at pp.c:92)
            TypeDecl: declname='source', quals=['const'] (at pp.c:92)
              IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_ntoh_leuint8', quals=[] (at pp.c:92)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='__nesc_hton_leuint8', quals=[], storage=['__inline', 'static'] (at pp.c:97)
    FuncDecl: quals=None (at pp.c:97)
      ParamList:  (at pp.c:97)
        Decl: name='target', quals=[], storage=[] (at pp.c:97)
          PtrDecl: quals=[] (at pp.c:97)
            TypeDecl: declname='target', quals=[] (at pp.c:97)
              IdentifierType: names=['void'] (at None)
        Decl: name='value', quals=[], storage=[] (at pp.c:97)
          TypeDecl: declname='value', quals=[] (at pp.c:97)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='__nesc_hton_leuint8', quals=[] (at pp.c:97)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='__nesc_ntoh_int8', quals=[], storage=['__inline', 'static'] (at pp.c:103)
    FuncDecl: quals=None (at pp.c:103)
      ParamList:  (at pp.c:103)
        Decl: name='source', quals=['const'], storage=[] (at pp.c:103)
          PtrDecl: quals=[] (at pp.c:103)
            TypeDecl: declname='source', quals=['const'] (at pp.c:103)
              IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_ntoh_int8', quals=[] (at pp.c:103)
        IdentifierType: names=['int8_t'] (at None)
  Decl: name='__nesc_hton_int8', quals=[], storage=['__inline', 'static'] (at pp.c:105)
    FuncDecl: quals=None (at pp.c:105)
      ParamList:  (at pp.c:105)
        Decl: name='target', quals=[], storage=[] (at pp.c:105)
          PtrDecl: quals=[] (at pp.c:105)
            TypeDecl: declname='target', quals=[] (at pp.c:105)
              IdentifierType: names=['void'] (at None)
        Decl: name='value', quals=[], storage=[] (at pp.c:105)
          TypeDecl: declname='value', quals=[] (at pp.c:105)
            IdentifierType: names=['int8_t'] (at None)
      TypeDecl: declname='__nesc_hton_int8', quals=[] (at pp.c:105)
        IdentifierType: names=['int8_t'] (at None)
  Decl: name='__nesc_ntoh_uint16', quals=[], storage=['__inline', 'static'] (at pp.c:112)
    FuncDecl: quals=None (at pp.c:112)
      ParamList:  (at pp.c:112)
        Decl: name='source', quals=['const'], storage=[] (at pp.c:112)
          PtrDecl: quals=[] (at pp.c:112)
            TypeDecl: declname='source', quals=['const'] (at pp.c:112)
              IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_ntoh_uint16', quals=[] (at pp.c:112)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='__nesc_hton_uint16', quals=[], storage=['__inline', 'static'] (at pp.c:117)
    FuncDecl: quals=None (at pp.c:117)
      ParamList:  (at pp.c:117)
        Decl: name='target', quals=[], storage=[] (at pp.c:117)
          PtrDecl: quals=[] (at pp.c:117)
            TypeDecl: declname='target', quals=[] (at pp.c:117)
              IdentifierType: names=['void'] (at None)
        Decl: name='value', quals=[], storage=[] (at pp.c:117)
          TypeDecl: declname='value', quals=[] (at pp.c:117)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='__nesc_hton_uint16', quals=[] (at pp.c:117)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='__nesc_ntoh_leuint16', quals=[], storage=['__inline', 'static'] (at pp.c:124)
    FuncDecl: quals=None (at pp.c:124)
      ParamList:  (at pp.c:124)
        Decl: name='source', quals=['const'], storage=[] (at pp.c:124)
          PtrDecl: quals=[] (at pp.c:124)
            TypeDecl: declname='source', quals=['const'] (at pp.c:124)
              IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_ntoh_leuint16', quals=[] (at pp.c:124)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='__nesc_hton_leuint16', quals=[], storage=['__inline', 'static'] (at pp.c:129)
    FuncDecl: quals=None (at pp.c:129)
      ParamList:  (at pp.c:129)
        Decl: name='target', quals=[], storage=[] (at pp.c:129)
          PtrDecl: quals=[] (at pp.c:129)
            TypeDecl: declname='target', quals=[] (at pp.c:129)
              IdentifierType: names=['void'] (at None)
        Decl: name='value', quals=[], storage=[] (at pp.c:129)
          TypeDecl: declname='value', quals=[] (at pp.c:129)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='__nesc_hton_leuint16', quals=[] (at pp.c:129)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='__nesc_ntoh_uint32', quals=[], storage=['__inline', 'static'] (at pp.c:131)
    FuncDecl: quals=None (at pp.c:131)
      ParamList:  (at pp.c:131)
        Decl: name='source', quals=['const'], storage=[] (at pp.c:131)
          PtrDecl: quals=[] (at pp.c:131)
            TypeDecl: declname='source', quals=['const'] (at pp.c:131)
              IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_ntoh_uint32', quals=[] (at pp.c:131)
        IdentifierType: names=['uint32_t'] (at None)
  Decl: name='__nesc_hton_uint32', quals=[], storage=['__inline', 'static'] (at pp.c:138)
    FuncDecl: quals=None (at pp.c:138)
      ParamList:  (at pp.c:138)
        Decl: name='target', quals=[], storage=[] (at pp.c:138)
          PtrDecl: quals=[] (at pp.c:138)
            TypeDecl: declname='target', quals=[] (at pp.c:138)
              IdentifierType: names=['void'] (at None)
        Decl: name='value', quals=[], storage=[] (at pp.c:138)
          TypeDecl: declname='value', quals=[] (at pp.c:138)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='__nesc_hton_uint32', quals=[] (at pp.c:138)
        IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='nx_int8_t', quals=[], storage=['typedef'] (at pp.c:140)
    TypeDecl: declname='nx_int8_t', quals=[] (at pp.c:140)
      Struct: name=None, packed=False (at pp.c:140)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:140)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:140)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='1' (at pp.c:140)
  Typedef: name='__nesc_nxbase_nx_int8_t', quals=[], storage=['typedef'] (at pp.c:140)
    TypeDecl: declname='__nesc_nxbase_nx_int8_t', quals=[] (at pp.c:140)
      IdentifierType: names=['int8_t'] (at None)
  Typedef: name='nx_int16_t', quals=[], storage=['typedef'] (at pp.c:141)
    TypeDecl: declname='nx_int16_t', quals=[] (at pp.c:141)
      Struct: name=None, packed=False (at pp.c:141)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:141)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:141)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='2' (at pp.c:141)
  Typedef: name='__nesc_nxbase_nx_int16_t', quals=[], storage=['typedef'] (at pp.c:141)
    TypeDecl: declname='__nesc_nxbase_nx_int16_t', quals=[] (at pp.c:141)
      IdentifierType: names=['int16_t'] (at None)
  Typedef: name='nx_int32_t', quals=[], storage=['typedef'] (at pp.c:142)
    TypeDecl: declname='nx_int32_t', quals=[] (at pp.c:142)
      Struct: name=None, packed=False (at pp.c:142)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:142)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:142)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='4' (at pp.c:142)
  Typedef: name='__nesc_nxbase_nx_int32_t', quals=[], storage=['typedef'] (at pp.c:142)
    TypeDecl: declname='__nesc_nxbase_nx_int32_t', quals=[] (at pp.c:142)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='nx_int64_t', quals=[], storage=['typedef'] (at pp.c:143)
    TypeDecl: declname='nx_int64_t', quals=[] (at pp.c:143)
      Struct: name=None, packed=False (at pp.c:143)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:143)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:143)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='8' (at pp.c:143)
  Typedef: name='__nesc_nxbase_nx_int64_t', quals=[], storage=['typedef'] (at pp.c:143)
    TypeDecl: declname='__nesc_nxbase_nx_int64_t', quals=[] (at pp.c:143)
      IdentifierType: names=['int64_t'] (at None)
  Typedef: name='nx_uint8_t', quals=[], storage=['typedef'] (at pp.c:144)
    TypeDecl: declname='nx_uint8_t', quals=[] (at pp.c:144)
      Struct: name=None, packed=False (at pp.c:144)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:144)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:144)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='1' (at pp.c:144)
  Typedef: name='__nesc_nxbase_nx_uint8_t', quals=[], storage=['typedef'] (at pp.c:144)
    TypeDecl: declname='__nesc_nxbase_nx_uint8_t', quals=[] (at pp.c:144)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='nx_uint16_t', quals=[], storage=['typedef'] (at pp.c:145)
    TypeDecl: declname='nx_uint16_t', quals=[] (at pp.c:145)
      Struct: name=None, packed=False (at pp.c:145)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:145)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:145)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='2' (at pp.c:145)
  Typedef: name='__nesc_nxbase_nx_uint16_t', quals=[], storage=['typedef'] (at pp.c:145)
    TypeDecl: declname='__nesc_nxbase_nx_uint16_t', quals=[] (at pp.c:145)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='nx_uint32_t', quals=[], storage=['typedef'] (at pp.c:146)
    TypeDecl: declname='nx_uint32_t', quals=[] (at pp.c:146)
      Struct: name=None, packed=False (at pp.c:146)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:146)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:146)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='4' (at pp.c:146)
  Typedef: name='__nesc_nxbase_nx_uint32_t', quals=[], storage=['typedef'] (at pp.c:146)
    TypeDecl: declname='__nesc_nxbase_nx_uint32_t', quals=[] (at pp.c:146)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='nx_uint64_t', quals=[], storage=['typedef'] (at pp.c:147)
    TypeDecl: declname='nx_uint64_t', quals=[] (at pp.c:147)
      Struct: name=None, packed=False (at pp.c:147)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:147)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:147)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='8' (at pp.c:147)
  Typedef: name='__nesc_nxbase_nx_uint64_t', quals=[], storage=['typedef'] (at pp.c:147)
    TypeDecl: declname='__nesc_nxbase_nx_uint64_t', quals=[] (at pp.c:147)
      IdentifierType: names=['uint64_t'] (at None)
  Typedef: name='nxle_int8_t', quals=[], storage=['typedef'] (at pp.c:150)
    TypeDecl: declname='nxle_int8_t', quals=[] (at pp.c:150)
      Struct: name=None, packed=False (at pp.c:150)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:150)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:150)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='1' (at pp.c:150)
  Typedef: name='__nesc_nxbase_nxle_int8_t', quals=[], storage=['typedef'] (at pp.c:150)
    TypeDecl: declname='__nesc_nxbase_nxle_int8_t', quals=[] (at pp.c:150)
      IdentifierType: names=['int8_t'] (at None)
  Typedef: name='nxle_int16_t', quals=[], storage=['typedef'] (at pp.c:151)
    TypeDecl: declname='nxle_int16_t', quals=[] (at pp.c:151)
      Struct: name=None, packed=False (at pp.c:151)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:151)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:151)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='2' (at pp.c:151)
  Typedef: name='__nesc_nxbase_nxle_int16_t', quals=[], storage=['typedef'] (at pp.c:151)
    TypeDecl: declname='__nesc_nxbase_nxle_int16_t', quals=[] (at pp.c:151)
      IdentifierType: names=['int16_t'] (at None)
  Typedef: name='nxle_int32_t', quals=[], storage=['typedef'] (at pp.c:152)
    TypeDecl: declname='nxle_int32_t', quals=[] (at pp.c:152)
      Struct: name=None, packed=False (at pp.c:152)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:152)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:152)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='4' (at pp.c:152)
  Typedef: name='__nesc_nxbase_nxle_int32_t', quals=[], storage=['typedef'] (at pp.c:152)
    TypeDecl: declname='__nesc_nxbase_nxle_int32_t', quals=[] (at pp.c:152)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='nxle_int64_t', quals=[], storage=['typedef'] (at pp.c:153)
    TypeDecl: declname='nxle_int64_t', quals=[] (at pp.c:153)
      Struct: name=None, packed=False (at pp.c:153)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:153)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:153)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='8' (at pp.c:153)
  Typedef: name='__nesc_nxbase_nxle_int64_t', quals=[], storage=['typedef'] (at pp.c:153)
    TypeDecl: declname='__nesc_nxbase_nxle_int64_t', quals=[] (at pp.c:153)
      IdentifierType: names=['int64_t'] (at None)
  Typedef: name='nxle_uint8_t', quals=[], storage=['typedef'] (at pp.c:154)
    TypeDecl: declname='nxle_uint8_t', quals=[] (at pp.c:154)
      Struct: name=None, packed=False (at pp.c:154)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:154)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:154)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='1' (at pp.c:154)
  Typedef: name='__nesc_nxbase_nxle_uint8_t', quals=[], storage=['typedef'] (at pp.c:154)
    TypeDecl: declname='__nesc_nxbase_nxle_uint8_t', quals=[] (at pp.c:154)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='nxle_uint16_t', quals=[], storage=['typedef'] (at pp.c:155)
    TypeDecl: declname='nxle_uint16_t', quals=[] (at pp.c:155)
      Struct: name=None, packed=False (at pp.c:155)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:155)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:155)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='2' (at pp.c:155)
  Typedef: name='__nesc_nxbase_nxle_uint16_t', quals=[], storage=['typedef'] (at pp.c:155)
    TypeDecl: declname='__nesc_nxbase_nxle_uint16_t', quals=[] (at pp.c:155)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='nxle_uint32_t', quals=[], storage=['typedef'] (at pp.c:156)
    TypeDecl: declname='nxle_uint32_t', quals=[] (at pp.c:156)
      Struct: name=None, packed=False (at pp.c:156)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:156)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:156)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='4' (at pp.c:156)
  Typedef: name='__nesc_nxbase_nxle_uint32_t', quals=[], storage=['typedef'] (at pp.c:156)
    TypeDecl: declname='__nesc_nxbase_nxle_uint32_t', quals=[] (at pp.c:156)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='nxle_uint64_t', quals=[], storage=['typedef'] (at pp.c:157)
    TypeDecl: declname='nxle_uint64_t', quals=[] (at pp.c:157)
      Struct: name=None, packed=False (at pp.c:157)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:157)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:157)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='8' (at pp.c:157)
  Typedef: name='__nesc_nxbase_nxle_uint64_t', quals=[], storage=['typedef'] (at pp.c:157)
    TypeDecl: declname='__nesc_nxbase_nxle_uint64_t', quals=[] (at pp.c:157)
      IdentifierType: names=['uint64_t'] (at None)
  Typedef: name='u_char', quals=[], storage=['typedef'] (at pp.c:159)
    TypeDecl: declname='u_char', quals=[] (at pp.c:159)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Typedef: name='u_short', quals=[], storage=['typedef'] (at pp.c:160)
    TypeDecl: declname='u_short', quals=[] (at pp.c:160)
      IdentifierType: names=['short', 'unsigned'] (at None)
  Typedef: name='u_int', quals=[], storage=['typedef'] (at pp.c:161)
    TypeDecl: declname='u_int', quals=[] (at pp.c:161)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='u_long', quals=[], storage=['typedef'] (at pp.c:162)
    TypeDecl: declname='u_long', quals=[] (at pp.c:162)
      IdentifierType: names=['long', 'unsigned'] (at None)
  Typedef: name='ushort', quals=[], storage=['typedef'] (at pp.c:163)
    TypeDecl: declname='ushort', quals=[] (at pp.c:163)
      IdentifierType: names=['short', 'unsigned'] (at None)
  Typedef: name='uint', quals=[], storage=['typedef'] (at pp.c:164)
    TypeDecl: declname='uint', quals=[] (at pp.c:164)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='u_int8_t', quals=[], storage=['typedef'] (at pp.c:166)
    TypeDecl: declname='u_int8_t', quals=[] (at pp.c:166)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='u_int16_t', quals=[], storage=['typedef'] (at pp.c:167)
    TypeDecl: declname='u_int16_t', quals=[] (at pp.c:167)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='u_int32_t', quals=[], storage=['typedef'] (at pp.c:168)
    TypeDecl: declname='u_int32_t', quals=[] (at pp.c:168)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='u_int64_t', quals=[], storage=['typedef'] (at pp.c:169)
    TypeDecl: declname='u_int64_t', quals=[] (at pp.c:169)
      IdentifierType: names=['uint64_t'] (at None)
  Typedef: name='u_quad_t', quals=[], storage=['typedef'] (at pp.c:171)
    TypeDecl: declname='u_quad_t', quals=[] (at pp.c:171)
      IdentifierType: names=['u_int64_t'] (at None)
  Typedef: name='quad_t', quals=[], storage=['typedef'] (at pp.c:172)
    TypeDecl: declname='quad_t', quals=[] (at pp.c:172)
      IdentifierType: names=['int64_t'] (at None)
  Typedef: name='qaddr_t', quals=[], storage=['typedef'] (at pp.c:173)
    PtrDecl: quals=[] (at pp.c:173)
      TypeDecl: declname='qaddr_t', quals=[] (at pp.c:173)
        IdentifierType: names=['quad_t'] (at None)
  Typedef: name='caddr_t', quals=[], storage=['typedef'] (at pp.c:175)
    PtrDecl: quals=[] (at pp.c:175)
      TypeDecl: declname='caddr_t', quals=[] (at pp.c:175)
        IdentifierType: names=['char'] (at None)
  Typedef: name='c_caddr_t', quals=['const'], storage=['typedef'] (at pp.c:176)
    PtrDecl: quals=[] (at pp.c:176)
      TypeDecl: declname='c_caddr_t', quals=['const'] (at pp.c:176)
        IdentifierType: names=['char'] (at None)
  Typedef: name='v_caddr_t', quals=['volatile'], storage=['typedef'] (at pp.c:177)
    PtrDecl: quals=[] (at pp.c:177)
      TypeDecl: declname='v_caddr_t', quals=['volatile'] (at pp.c:177)
        IdentifierType: names=['char'] (at None)
  Typedef: name='fixpt_t', quals=[], storage=['typedef'] (at pp.c:178)
    TypeDecl: declname='fixpt_t', quals=[] (at pp.c:178)
      IdentifierType: names=['u_int32_t'] (at None)
  Typedef: name='gid_t', quals=[], storage=['typedef'] (at pp.c:179)
    TypeDecl: declname='gid_t', quals=[] (at pp.c:179)
      IdentifierType: names=['u_int32_t'] (at None)
  Typedef: name='in_addr_t', quals=[], storage=['typedef'] (at pp.c:180)
    TypeDecl: declname='in_addr_t', quals=[] (at pp.c:180)
      IdentifierType: names=['u_int32_t'] (at None)
  Typedef: name='in_port_t', quals=[], storage=['typedef'] (at pp.c:181)
    TypeDecl: declname='in_port_t', quals=[] (at pp.c:181)
      IdentifierType: names=['u_int16_t'] (at None)
  Typedef: name='ino_t', quals=[], storage=['typedef'] (at pp.c:182)
    TypeDecl: declname='ino_t', quals=[] (at pp.c:182)
      IdentifierType: names=['u_int32_t'] (at None)
  Typedef: name='key_t', quals=[], storage=['typedef'] (at pp.c:183)
    TypeDecl: declname='key_t', quals=[] (at pp.c:183)
      IdentifierType: names=['long'] (at None)
  Typedef: name='mode_t', quals=[], storage=['typedef'] (at pp.c:184)
    TypeDecl: declname='mode_t', quals=[] (at pp.c:184)
      IdentifierType: names=['u_int16_t'] (at None)
  Typedef: name='nlink_t', quals=[], storage=['typedef'] (at pp.c:185)
    TypeDecl: declname='nlink_t', quals=[] (at pp.c:185)
      IdentifierType: names=['u_int16_t'] (at None)
  Typedef: name='rlim_t', quals=[], storage=['typedef'] (at pp.c:186)
    TypeDecl: declname='rlim_t', quals=[] (at pp.c:186)
      IdentifierType: names=['quad_t'] (at None)
  Typedef: name='segsz_t', quals=[], storage=['typedef'] (at pp.c:187)
    TypeDecl: declname='segsz_t', quals=[] (at pp.c:187)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='swblk_t', quals=[], storage=['typedef'] (at pp.c:188)
    TypeDecl: declname='swblk_t', quals=[] (at pp.c:188)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='ufs_daddr_t', quals=[], storage=['typedef'] (at pp.c:189)
    TypeDecl: declname='ufs_daddr_t', quals=[] (at pp.c:189)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='ufs_time_t', quals=[], storage=['typedef'] (at pp.c:190)
    TypeDecl: declname='ufs_time_t', quals=[] (at pp.c:190)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='uid_t', quals=[], storage=['typedef'] (at pp.c:191)
    TypeDecl: declname='uid_t', quals=[] (at pp.c:191)
      IdentifierType: names=['u_int32_t'] (at None)
  Decl: name='memcmp', quals=[], storage=['extern'] (at pp.c:193)
    FuncDecl: quals=None (at pp.c:193)
      ParamList:  (at pp.c:193)
        Decl: name='arg_0x100744de8', quals=['const'], storage=[] (at pp.c:193)
          PtrDecl: quals=[] (at pp.c:193)
            TypeDecl: declname='arg_0x100744de8', quals=['const'] (at pp.c:193)
              IdentifierType: names=['void'] (at None)
        Decl: name='arg_0x10074a100', quals=['const'], storage=[] (at pp.c:193)
          PtrDecl: quals=[] (at pp.c:193)
            TypeDecl: declname='arg_0x10074a100', quals=['const'] (at pp.c:193)
              IdentifierType: names=['void'] (at None)
        Decl: name='arg_0x10074a3a8', quals=[], storage=[] (at pp.c:193)
          TypeDecl: declname='arg_0x10074a3a8', quals=[] (at pp.c:193)
            IdentifierType: names=['size_t'] (at None)
      TypeDecl: declname='memcmp', quals=[] (at pp.c:193)
        IdentifierType: names=['int'] (at None)
  Decl: name='memset', quals=[], storage=['extern'] (at pp.c:196)
    FuncDecl: quals=None (at pp.c:196)
      ParamList:  (at pp.c:196)
        Decl: name='arg_0x100748980', quals=[], storage=[] (at pp.c:196)
          PtrDecl: quals=[] (at pp.c:196)
            TypeDecl: declname='arg_0x100748980', quals=[] (at pp.c:196)
              IdentifierType: names=['void'] (at None)
        Decl: name='arg_0x100748be8', quals=[], storage=[] (at pp.c:196)
          TypeDecl: declname='arg_0x100748be8', quals=[] (at pp.c:196)
            IdentifierType: names=['int'] (at None)
        Decl: name='arg_0x10074e020', quals=[], storage=[] (at pp.c:196)
          TypeDecl: declname='arg_0x10074e020', quals=[] (at pp.c:196)
            IdentifierType: names=['size_t'] (at None)
      PtrDecl: quals=[] (at pp.c:196)
        TypeDecl: declname='memset', quals=[] (at pp.c:196)
          IdentifierType: names=['void'] (at None)
  Decl: name='memset', quals=[], storage=['extern'] (at pp.c:198)
    FuncDecl: quals=None (at pp.c:198)
      ParamList:  (at pp.c:198)
        Decl: name='arg_0x100761b10', quals=[], storage=[] (at pp.c:198)
          PtrDecl: quals=[] (at pp.c:198)
            TypeDecl: declname='arg_0x100761b10', quals=[] (at pp.c:198)
              IdentifierType: names=['void'] (at None)
        Decl: name='arg_0x100761d78', quals=[], storage=[] (at pp.c:198)
          TypeDecl: declname='arg_0x100761d78', quals=[] (at pp.c:198)
            IdentifierType: names=['int'] (at None)
        Decl: name='arg_0x100767060', quals=[], storage=[] (at pp.c:198)
          TypeDecl: declname='arg_0x100767060', quals=[] (at pp.c:198)
            IdentifierType: names=['size_t'] (at None)
      PtrDecl: quals=[] (at pp.c:198)
        TypeDecl: declname='memset', quals=[] (at pp.c:198)
          IdentifierType: names=['void'] (at None)
  Typedef: name='div_t', quals=[], storage=['typedef'] (at pp.c:204)
    TypeDecl: declname='div_t', quals=[] (at pp.c:204)
      Struct: name='__nesc_unnamed4242', packed=False (at pp.c:201)
        Decl: name='quot', quals=[], storage=[] (at 0)
          TypeDecl: declname='quot', quals=[] (at pp.c:202)
            IdentifierType: names=['int'] (at None)
        Decl: name='rem', quals=[], storage=[] (at 0)
          TypeDecl: declname='rem', quals=[] (at pp.c:203)
            IdentifierType: names=['int'] (at None)
  Typedef: name='ldiv_t', quals=[], storage=['typedef'] (at pp.c:216)
    TypeDecl: declname='ldiv_t', quals=[] (at pp.c:216)
      Struct: name='__nesc_unnamed4243', packed=False (at pp.c:213)
        Decl: name='quot', quals=[], storage=[] (at 0)
          TypeDecl: declname='quot', quals=[] (at pp.c:214)
            IdentifierType: names=['long'] (at None)
        Decl: name='rem', quals=[], storage=[] (at 0)
          TypeDecl: declname='rem', quals=[] (at pp.c:215)
            IdentifierType: names=['long'] (at None)
  Typedef: name='__int32_t', quals=[], storage=['typedef'] (at pp.c:218)
    TypeDecl: declname='__int32_t', quals=[] (at pp.c:218)
      IdentifierType: names=['int', 'long'] (at None)
  Typedef: name='__uint32_t', quals=[], storage=['typedef'] (at pp.c:219)
    TypeDecl: declname='__uint32_t', quals=[] (at pp.c:219)
      IdentifierType: names=['int', 'long', 'unsigned'] (at None)
  Typedef: name='_off_t', quals=[], storage=['typedef'] (at pp.c:221)
    TypeDecl: declname='_off_t', quals=[] (at pp.c:221)
      IdentifierType: names=['long'] (at None)
  Typedef: name='_ssize_t', quals=[], storage=['typedef'] (at pp.c:222)
    TypeDecl: declname='_ssize_t', quals=[] (at pp.c:222)
      IdentifierType: names=['long'] (at None)
  Typedef: name='__ULong', quals=[], storage=['typedef'] (at pp.c:224)
    TypeDecl: declname='__ULong', quals=[] (at pp.c:224)
      IdentifierType: names=['__uint32_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:227)
    Struct: name='_glue', packed=False (at pp.c:227)
      Decl: name='_next', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:229)
          TypeDecl: declname='_next', quals=[] (at pp.c:229)
            Struct: name='_glue', packed=False (at pp.c:229)
      Decl: name='_niobs', quals=[], storage=[] (at 0)
        TypeDecl: declname='_niobs', quals=[] (at pp.c:230)
          IdentifierType: names=['int'] (at None)
      Decl: name='_iobs', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:231)
          TypeDecl: declname='_iobs', quals=[] (at pp.c:231)
            Struct: name='__sFILE', packed=False (at pp.c:231)
  Decl: name=None, quals=[], storage=[] (at pp.c:234)
    Struct: name='_Bigint', packed=False (at pp.c:234)
      Decl: name='_next', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:236)
          TypeDecl: declname='_next', quals=[] (at pp.c:236)
            Struct: name='_Bigint', packed=False (at pp.c:236)
      Decl: name='_k', quals=[], storage=[] (at 0)
        TypeDecl: declname='_k', quals=[] (at pp.c:237)
          IdentifierType: names=['int'] (at None)
      Decl: name='_maxwds', quals=[], storage=[] (at 0)
        TypeDecl: declname='_maxwds', quals=[] (at pp.c:237)
          IdentifierType: names=['int'] (at None)
      Decl: name='_sign', quals=[], storage=[] (at 0)
        TypeDecl: declname='_sign', quals=[] (at pp.c:237)
          IdentifierType: names=['int'] (at None)
      Decl: name='_wds', quals=[], storage=[] (at 0)
        TypeDecl: declname='_wds', quals=[] (at pp.c:237)
          IdentifierType: names=['int'] (at None)
      Decl: name='_x', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:238)
          TypeDecl: declname='_x', quals=[] (at pp.c:238)
            IdentifierType: names=['__ULong'] (at None)
          Constant: type='int', value='1' (at pp.c:238)
  Decl: name=None, quals=[], storage=[] (at pp.c:242)
    Struct: name='__tm', packed=False (at pp.c:242)
      Decl: name='__tm_sec', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_sec', quals=[] (at pp.c:244)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_min', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_min', quals=[] (at pp.c:245)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_hour', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_hour', quals=[] (at pp.c:246)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_mday', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_mday', quals=[] (at pp.c:247)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_mon', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_mon', quals=[] (at pp.c:248)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_year', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_year', quals=[] (at pp.c:249)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_wday', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_wday', quals=[] (at pp.c:250)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_yday', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_yday', quals=[] (at pp.c:251)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_isdst', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_isdst', quals=[] (at pp.c:252)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:261)
    Struct: name='_atexit', packed=False (at pp.c:261)
      Decl: name='_next', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:262)
          TypeDecl: declname='_next', quals=[] (at pp.c:262)
            Struct: name='_atexit', packed=False (at pp.c:262)
      Decl: name='_ind', quals=[], storage=[] (at 0)
        TypeDecl: declname='_ind', quals=[] (at pp.c:263)
          IdentifierType: names=['int'] (at None)
      Decl: name='_fns', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:264)
          PtrDecl: quals=[] (at pp.c:264)
            FuncDecl: quals=None (at pp.c:264)
              ParamList:  (at None)
                Typename: quals=[] (at None)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['void'] (at None)
              TypeDecl: declname='_fns', quals=[] (at pp.c:264)
                IdentifierType: names=['void'] (at None)
          Constant: type='int', value='32' (at pp.c:264)
  Decl: name=None, quals=[], storage=[] (at pp.c:274)
    Struct: name='__sbuf', packed=False (at pp.c:274)
      Decl: name='_base', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:275)
          TypeDecl: declname='_base', quals=[] (at pp.c:275)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='_size', quals=[], storage=[] (at 0)
        TypeDecl: declname='_size', quals=[] (at pp.c:276)
          IdentifierType: names=['int'] (at None)
  Typedef: name='_fpos_t', quals=[], storage=['typedef'] (at pp.c:284)
    TypeDecl: declname='_fpos_t', quals=[] (at pp.c:284)
      IdentifierType: names=['long'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:286)
    Struct: name='__sFILE', packed=False (at pp.c:286)
      Decl: name='_p', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:287)
          TypeDecl: declname='_p', quals=[] (at pp.c:287)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='_r', quals=[], storage=[] (at 0)
        TypeDecl: declname='_r', quals=[] (at pp.c:288)
          IdentifierType: names=['int'] (at None)
      Decl: name='_w', quals=[], storage=[] (at 0)
        TypeDecl: declname='_w', quals=[] (at pp.c:289)
          IdentifierType: names=['int'] (at None)
      Decl: name='_flags', quals=[], storage=[] (at 0)
        TypeDecl: declname='_flags', quals=[] (at pp.c:290)
          IdentifierType: names=['short'] (at None)
      Decl: name='_file', quals=[], storage=[] (at 0)
        TypeDecl: declname='_file', quals=[] (at pp.c:291)
          IdentifierType: names=['short'] (at None)
      Decl: name='_bf', quals=[], storage=[] (at 0)
        TypeDecl: declname='_bf', quals=[] (at pp.c:292)
          Struct: name='__sbuf', packed=False (at pp.c:292)
      Decl: name='_lbfsize', quals=[], storage=[] (at 0)
        TypeDecl: declname='_lbfsize', quals=[] (at pp.c:293)
          IdentifierType: names=['int'] (at None)
      Decl: name='_cookie', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:296)
          TypeDecl: declname='_cookie', quals=[] (at pp.c:296)
            IdentifierType: names=['void'] (at None)
      Decl: name='_read', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:298)
          FuncDecl: quals=None (at pp.c:298)
            ParamList:  (at pp.c:298)
              Decl: name='_cookie', quals=[], storage=[] (at pp.c:298)
                PtrDecl: quals=[] (at pp.c:298)
                  TypeDecl: declname='_cookie', quals=[] (at pp.c:298)
                    IdentifierType: names=['void'] (at None)
              Decl: name='_buf', quals=[], storage=[] (at pp.c:298)
                PtrDecl: quals=[] (at pp.c:298)
                  TypeDecl: declname='_buf', quals=[] (at pp.c:298)
                    IdentifierType: names=['char'] (at None)
              Decl: name='_n', quals=[], storage=[] (at pp.c:298)
                TypeDecl: declname='_n', quals=[] (at pp.c:298)
                  IdentifierType: names=['int'] (at None)
            TypeDecl: declname='_read', quals=[] (at pp.c:298)
              IdentifierType: names=['int'] (at None)
      Decl: name='_write', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:299)
          FuncDecl: quals=None (at pp.c:299)
            ParamList:  (at pp.c:299)
              Decl: name='_cookie', quals=[], storage=[] (at pp.c:299)
                PtrDecl: quals=[] (at pp.c:299)
                  TypeDecl: declname='_cookie', quals=[] (at pp.c:299)
                    IdentifierType: names=['void'] (at None)
              Decl: name='_buf', quals=['const'], storage=[] (at pp.c:299)
                PtrDecl: quals=[] (at pp.c:299)
                  TypeDecl: declname='_buf', quals=['const'] (at pp.c:299)
                    IdentifierType: names=['char'] (at None)
              Decl: name='_n', quals=[], storage=[] (at pp.c:299)
                TypeDecl: declname='_n', quals=[] (at pp.c:299)
                  IdentifierType: names=['int'] (at None)
            TypeDecl: declname='_write', quals=[] (at pp.c:299)
              IdentifierType: names=['int'] (at None)
      Decl: name='_seek', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:301)
          FuncDecl: quals=None (at pp.c:301)
            ParamList:  (at pp.c:301)
              Decl: name='_cookie', quals=[], storage=[] (at pp.c:301)
                PtrDecl: quals=[] (at pp.c:301)
                  TypeDecl: declname='_cookie', quals=[] (at pp.c:301)
                    IdentifierType: names=['void'] (at None)
              Decl: name='_offset', quals=[], storage=[] (at pp.c:301)
                TypeDecl: declname='_offset', quals=[] (at pp.c:301)
                  IdentifierType: names=['_fpos_t'] (at None)
              Decl: name='_whence', quals=[], storage=[] (at pp.c:301)
                TypeDecl: declname='_whence', quals=[] (at pp.c:301)
                  IdentifierType: names=['int'] (at None)
            TypeDecl: declname='_seek', quals=[] (at pp.c:301)
              IdentifierType: names=['_fpos_t'] (at None)
      Decl: name='_close', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:302)
          FuncDecl: quals=None (at pp.c:302)
            ParamList:  (at pp.c:302)
              Decl: name='_cookie', quals=[], storage=[] (at pp.c:302)
                PtrDecl: quals=[] (at pp.c:302)
                  TypeDecl: declname='_cookie', quals=[] (at pp.c:302)
                    IdentifierType: names=['void'] (at None)
            TypeDecl: declname='_close', quals=[] (at pp.c:302)
              IdentifierType: names=['int'] (at None)
      Decl: name='_ub', quals=[], storage=[] (at 0)
        TypeDecl: declname='_ub', quals=[] (at pp.c:305)
          Struct: name='__sbuf', packed=False (at pp.c:305)
      Decl: name='_up', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:306)
          TypeDecl: declname='_up', quals=[] (at pp.c:306)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='_ur', quals=[], storage=[] (at 0)
        TypeDecl: declname='_ur', quals=[] (at pp.c:307)
          IdentifierType: names=['int'] (at None)
      Decl: name='_ubuf', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:310)
          TypeDecl: declname='_ubuf', quals=[] (at pp.c:310)
            IdentifierType: names=['char', 'unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:310)
      Decl: name='_nbuf', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:311)
          TypeDecl: declname='_nbuf', quals=[] (at pp.c:311)
            IdentifierType: names=['char', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:311)
      Decl: name='_lb', quals=[], storage=[] (at 0)
        TypeDecl: declname='_lb', quals=[] (at pp.c:314)
          Struct: name='__sbuf', packed=False (at pp.c:314)
      Decl: name='_blksize', quals=[], storage=[] (at 0)
        TypeDecl: declname='_blksize', quals=[] (at pp.c:317)
          IdentifierType: names=['int'] (at None)
      Decl: name='_offset', quals=[], storage=[] (at 0)
        TypeDecl: declname='_offset', quals=[] (at pp.c:318)
          IdentifierType: names=['int'] (at None)
      Decl: name='_data', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:320)
          TypeDecl: declname='_data', quals=[] (at pp.c:320)
            Struct: name='_reent', packed=False (at pp.c:320)
  Decl: name=None, quals=[], storage=[] (at pp.c:323)
    Struct: name='_rand48', packed=False (at pp.c:323)
      Decl: name='_seed', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:324)
          TypeDecl: declname='_seed', quals=[] (at pp.c:324)
            IdentifierType: names=['short', 'unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:324)
      Decl: name='_mult', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:325)
          TypeDecl: declname='_mult', quals=[] (at pp.c:325)
            IdentifierType: names=['short', 'unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:325)
      Decl: name='_add', quals=[], storage=[] (at 0)
        TypeDecl: declname='_add', quals=[] (at pp.c:326)
          IdentifierType: names=['short', 'unsigned'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:337)
    Struct: name='_reent', packed=False (at pp.c:337)
      Decl: name='_errno', quals=[], storage=[] (at 0)
        TypeDecl: declname='_errno', quals=[] (at pp.c:340)
          IdentifierType: names=['int'] (at None)
      Decl: name='_stdin', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:345)
          TypeDecl: declname='_stdin', quals=[] (at pp.c:345)
            Struct: name='__sFILE', packed=False (at pp.c:345)
      Decl: name='_stdout', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:345)
          TypeDecl: declname='_stdout', quals=[] (at pp.c:345)
            Struct: name='__sFILE', packed=False (at pp.c:345)
      Decl: name='_stderr', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:345)
          TypeDecl: declname='_stderr', quals=[] (at pp.c:345)
            Struct: name='__sFILE', packed=False (at pp.c:345)
      Decl: name='_inc', quals=[], storage=[] (at 0)
        TypeDecl: declname='_inc', quals=[] (at pp.c:347)
          IdentifierType: names=['int'] (at None)
      Decl: name='_emergency', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:348)
          TypeDecl: declname='_emergency', quals=[] (at pp.c:348)
            IdentifierType: names=['char'] (at None)
          Constant: type='int', value='25' (at pp.c:348)
      Decl: name='_current_category', quals=[], storage=[] (at 0)
        TypeDecl: declname='_current_category', quals=[] (at pp.c:350)
          IdentifierType: names=['int'] (at None)
      Decl: name='_current_locale', quals=['const'], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:351)
          TypeDecl: declname='_current_locale', quals=['const'] (at pp.c:351)
            IdentifierType: names=['char'] (at None)
      Decl: name='__sdidinit', quals=[], storage=[] (at 0)
        TypeDecl: declname='__sdidinit', quals=[] (at pp.c:353)
          IdentifierType: names=['int'] (at None)
      Decl: name='__cleanup', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:355)
          FuncDecl: quals=None (at pp.c:355)
            ParamList:  (at pp.c:355)
              Decl: name='arg_0x10079c0c8', quals=[], storage=[] (at pp.c:355)
                PtrDecl: quals=[] (at pp.c:355)
                  TypeDecl: declname='arg_0x10079c0c8', quals=[] (at pp.c:355)
                    Struct: name='_reent', packed=False (at pp.c:355)
            TypeDecl: declname='__cleanup', quals=[] (at pp.c:355)
              IdentifierType: names=['void'] (at None)
      Decl: name='_result', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:358)
          TypeDecl: declname='_result', quals=[] (at pp.c:358)
            Struct: name='_Bigint', packed=False (at pp.c:358)
      Decl: name='_result_k', quals=[], storage=[] (at 0)
        TypeDecl: declname='_result_k', quals=[] (at pp.c:359)
          IdentifierType: names=['int'] (at None)
      Decl: name='_p5s', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:360)
          TypeDecl: declname='_p5s', quals=[] (at pp.c:360)
            Struct: name='_Bigint', packed=False (at pp.c:360)
      Decl: name='_freelist', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:361)
          PtrDecl: quals=[] (at pp.c:361)
            TypeDecl: declname='_freelist', quals=[] (at pp.c:361)
              Struct: name='_Bigint', packed=False (at pp.c:361)
      Decl: name='_cvtlen', quals=[], storage=[] (at 0)
        TypeDecl: declname='_cvtlen', quals=[] (at pp.c:364)
          IdentifierType: names=['int'] (at None)
      Decl: name='_cvtbuf', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:365)
          TypeDecl: declname='_cvtbuf', quals=[] (at pp.c:365)
            IdentifierType: names=['char'] (at None)
      Decl: name='_new', quals=[], storage=[] (at 0)
        TypeDecl: declname='_new', quals=[] (at pp.c:388)
          Union: name='__nesc_unnamed4244', packed=False (at pp.c:367)
            Decl: name='_reent', quals=[], storage=[] (at 0)
              TypeDecl: declname='_reent', quals=[] (at pp.c:378)
                Struct: name='__nesc_unnamed4245', packed=False (at pp.c:369)
                  Decl: name='_unused_rand', quals=[], storage=[] (at 0)
                    TypeDecl: declname='_unused_rand', quals=[] (at pp.c:371)
                      IdentifierType: names=['int', 'unsigned'] (at None)
                  Decl: name='_strtok_last', quals=[], storage=[] (at 0)
                    PtrDecl: quals=[] (at pp.c:372)
                      TypeDecl: declname='_strtok_last', quals=[] (at pp.c:372)
                        IdentifierType: names=['char'] (at None)
                  Decl: name='_asctime_buf', quals=[], storage=[] (at 0)
                    ArrayDecl:  (at pp.c:373)
                      TypeDecl: declname='_asctime_buf', quals=[] (at pp.c:373)
                        IdentifierType: names=['char'] (at None)
                      Constant: type='int', value='26' (at pp.c:373)
                  Decl: name='_localtime_buf', quals=[], storage=[] (at 0)
                    TypeDecl: declname='_localtime_buf', quals=[] (at pp.c:374)
                      Struct: name='__tm', packed=False (at pp.c:374)
                  Decl: name='_gamma_signgam', quals=[], storage=[] (at 0)
                    TypeDecl: declname='_gamma_signgam', quals=[] (at pp.c:375)
                      IdentifierType: names=['int'] (at None)
                  Decl: name='_rand_next', quals=[], storage=[] (at 0)
                    TypeDecl: declname='_rand_next', quals=[] (at pp.c:376)
                      IdentifierType: names=['long', 'long', 'unsigned'] (at None)
                  Decl: name='_r48', quals=[], storage=[] (at 0)
                    TypeDecl: declname='_r48', quals=[] (at pp.c:377)
                      Struct: name='_rand48', packed=False (at pp.c:377)
            Decl: name='_unused', quals=[], storage=[] (at 0)
              TypeDecl: declname='_unused', quals=[] (at pp.c:387)
                Struct: name='__nesc_unnamed4246', packed=False (at pp.c:382)
                  Decl: name='_nextf', quals=[], storage=[] (at 0)
                    ArrayDecl:  (at pp.c:385)
                      PtrDecl: quals=[] (at pp.c:385)
                        TypeDecl: declname='_nextf', quals=[] (at pp.c:385)
                          IdentifierType: names=['char', 'unsigned'] (at None)
                      Constant: type='int', value='30' (at pp.c:385)
                  Decl: name='_nmalloc', quals=[], storage=[] (at 0)
                    ArrayDecl:  (at pp.c:386)
                      TypeDecl: declname='_nmalloc', quals=[] (at pp.c:386)
                        IdentifierType: names=['int', 'unsigned'] (at None)
                      Constant: type='int', value='30' (at pp.c:386)
      Decl: name='_atexit', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:391)
          TypeDecl: declname='_atexit', quals=[] (at pp.c:391)
            Struct: name='_atexit', packed=False (at pp.c:391)
      Decl: name='_atexit0', quals=[], storage=[] (at 0)
        TypeDecl: declname='_atexit0', quals=[] (at pp.c:392)
          Struct: name='_atexit', packed=False (at pp.c:392)
      Decl: name='_sig_func', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:395)
          PtrDecl: quals=[] (at pp.c:395)
            FuncDecl: quals=None (at pp.c:395)
              ParamList:  (at pp.c:395)
                Decl: name='arg_0x10079f180', quals=[], storage=[] (at pp.c:395)
                  TypeDecl: declname='arg_0x10079f180', quals=[] (at pp.c:395)
                    IdentifierType: names=['int'] (at None)
              TypeDecl: declname='_sig_func', quals=[] (at pp.c:395)
                IdentifierType: names=['void'] (at None)
      Decl: name='__sglue', quals=[], storage=[] (at 0)
        TypeDecl: declname='__sglue', quals=[] (at pp.c:400)
          Struct: name='_glue', packed=False (at pp.c:400)
      Decl: name='__sf', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:401)
          TypeDecl: declname='__sf', quals=[] (at pp.c:401)
            Struct: name='__sFILE', packed=False (at pp.c:401)
          Constant: type='int', value='3' (at pp.c:401)
  Decl: name=None, quals=[], storage=[] (at pp.c:404)
    Struct: name='_reent', packed=False (at pp.c:404)
  Decl: name=None, quals=[], storage=[] (at pp.c:406)
    Union: name='__dmath', packed=False (at pp.c:406)
      Decl: name='i', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:408)
          TypeDecl: declname='i', quals=[] (at pp.c:408)
            IdentifierType: names=['__uint32_t'] (at None)
          Constant: type='int', value='2' (at pp.c:408)
      Decl: name='d', quals=[], storage=[] (at 0)
        TypeDecl: declname='d', quals=[] (at pp.c:409)
          IdentifierType: names=['double'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:415)
    Union: name='__dmath', packed=False (at pp.c:415)
  Decl: name=None, quals=[], storage=[] (at pp.c:417)
    Struct: name='exception', packed=False (at pp.c:417)
      Decl: name='type', quals=[], storage=[] (at 0)
        TypeDecl: declname='type', quals=[] (at pp.c:420)
          IdentifierType: names=['int'] (at None)
      Decl: name='name', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:421)
          TypeDecl: declname='name', quals=[] (at pp.c:421)
            IdentifierType: names=['char'] (at None)
      Decl: name='arg1', quals=[], storage=[] (at 0)
        TypeDecl: declname='arg1', quals=[] (at pp.c:422)
          IdentifierType: names=['double'] (at None)
      Decl: name='arg2', quals=[], storage=[] (at 0)
        TypeDecl: declname='arg2', quals=[] (at pp.c:423)
          IdentifierType: names=['double'] (at None)
      Decl: name='retval', quals=[], storage=[] (at 0)
        TypeDecl: declname='retval', quals=[] (at pp.c:424)
          IdentifierType: names=['double'] (at None)
      Decl: name='err', quals=[], storage=[] (at 0)
        TypeDecl: declname='err', quals=[] (at pp.c:425)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:428)
    Enum: name='__fdlibm_version' (at pp.c:428)
      EnumeratorList:  (at pp.c:430)
        Enumerator: name='__fdlibm_ieee' (at pp.c:430)
          UnaryOp: op='-' (at pp.c:430)
            Constant: type='int', value='1' (at pp.c:430)
        Enumerator: name='__fdlibm_svid' (at pp.c:431)
        Enumerator: name='__fdlibm_xopen' (at pp.c:432)
        Enumerator: name='__fdlibm_posix' (at pp.c:433)
  Decl: name=None, quals=[], storage=[] (at pp.c:439)
    Enum: name='__fdlibm_version' (at pp.c:439)
  Typedef: name='bool', quals=[], storage=['typedef'] (at pp.c:441)
    TypeDecl: declname='bool', quals=[] (at pp.c:441)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:442)
    Enum: name='__nesc_unnamed4247' (at pp.c:442)
      EnumeratorList:  (at pp.c:444)
        Enumerator: name='FALSE' (at pp.c:444)
          Constant: type='int', value='0' (at pp.c:444)
        Enumerator: name='TRUE' (at pp.c:444)
          Constant: type='int', value='1' (at pp.c:444)
  Typedef: name='nx_bool', quals=[], storage=['typedef'] (at pp.c:446)
    TypeDecl: declname='nx_bool', quals=[] (at pp.c:446)
      IdentifierType: names=['nx_int8_t'] (at None)
  Decl: name='TOS_NODE_ID', quals=[], storage=[] (at pp.c:447)
    TypeDecl: declname='TOS_NODE_ID', quals=[] (at pp.c:447)
      IdentifierType: names=['uint16_t'] (at None)
    Constant: type='int', value='1' (at pp.c:447)
  Decl: name=None, quals=[], storage=[] (at pp.c:454)
    Struct: name='__nesc_attr_atmostonce', packed=False (at pp.c:454)
  Decl: name=None, quals=[], storage=[] (at pp.c:457)
    Struct: name='__nesc_attr_atleastonce', packed=False (at pp.c:457)
  Decl: name=None, quals=[], storage=[] (at pp.c:460)
    Struct: name='__nesc_attr_exactlyonce', packed=False (at pp.c:460)
  Decl: name=None, quals=[], storage=[] (at pp.c:463)
    Enum: name='__nesc_unnamed4248' (at pp.c:463)
      EnumeratorList:  (at pp.c:464)
        Enumerator: name='SUCCESS' (at pp.c:464)
          Constant: type='int', value='0' (at pp.c:464)
        Enumerator: name='FAIL' (at pp.c:465)
          Constant: type='int', value='1' (at pp.c:465)
        Enumerator: name='ESIZE' (at pp.c:466)
          Constant: type='int', value='2' (at pp.c:466)
        Enumerator: name='ECANCEL' (at pp.c:467)
          Constant: type='int', value='3' (at pp.c:467)
        Enumerator: name='EOFF' (at pp.c:468)
          Constant: type='int', value='4' (at pp.c:468)
        Enumerator: name='EBUSY' (at pp.c:469)
          Constant: type='int', value='5' (at pp.c:469)
        Enumerator: name='EINVAL' (at pp.c:470)
          Constant: type='int', value='6' (at pp.c:470)
        Enumerator: name='ERETRY' (at pp.c:471)
          Constant: type='int', value='7' (at pp.c:471)
        Enumerator: name='ERESERVE' (at pp.c:472)
          Constant: type='int', value='8' (at pp.c:472)
        Enumerator: name='EALREADY' (at pp.c:473)
          Constant: type='int', value='9' (at pp.c:473)
        Enumerator: name='ENOMEM' (at pp.c:474)
          Constant: type='int', value='10' (at pp.c:474)
        Enumerator: name='ENOACK' (at pp.c:475)
          Constant: type='int', value='11' (at pp.c:475)
        Enumerator: name='ELAST' (at pp.c:476)
          Constant: type='int', value='11' (at pp.c:476)
  Typedef: name='error_t', quals=[], storage=['typedef'] (at pp.c:479)
    TypeDecl: declname='error_t', quals=[] (at pp.c:479)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='ecombine', quals=[], storage=['inline', 'static'] (at pp.c:481)
    FuncDecl: quals=None (at pp.c:481)
      ParamList:  (at pp.c:481)
        Decl: name='r1', quals=[], storage=[] (at pp.c:481)
          TypeDecl: declname='r1', quals=[] (at pp.c:481)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='r2', quals=[], storage=[] (at pp.c:481)
          TypeDecl: declname='r2', quals=[] (at pp.c:481)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='ecombine', quals=[] (at pp.c:481)
        IdentifierType: names=['error_t'] (at None)
  Typedef: name='ioregister_t', quals=[], storage=['typedef'] (at pp.c:496)
    TypeDecl: declname='ioregister_t', quals=[] (at pp.c:496)
      Union: name='port', packed=True (at pp.c:484)
        Decl: name='reg_p', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='reg_p', quals=['volatile'] (at pp.c:485)
            IdentifierType: names=['char', 'unsigned'] (at None)
        Decl: name='__pin', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='__pin', quals=['volatile'] (at pp.c:495)
            Struct: name='__nesc_unnamed4249', packed=False (at pp.c:486)
              Decl: name='__p0', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p0', quals=[] (at pp.c:487)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:487)
              Decl: name='__p1', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p1', quals=[] (at pp.c:488)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:488)
              Decl: name='__p2', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p2', quals=[] (at pp.c:489)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:489)
              Decl: name='__p3', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p3', quals=[] (at pp.c:490)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:490)
              Decl: name='__p4', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p4', quals=[] (at pp.c:491)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:491)
              Decl: name='__p5', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p5', quals=[] (at pp.c:492)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:492)
              Decl: name='__p6', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p6', quals=[] (at pp.c:493)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:493)
              Decl: name='__p7', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p7', quals=[] (at pp.c:494)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:494)
  Decl: name=None, quals=[], storage=[] (at pp.c:498)
    Struct: name='port_full_t', packed=False (at pp.c:498)
      Decl: name='in', quals=[], storage=[] (at 0)
        TypeDecl: declname='in', quals=[] (at pp.c:499)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='out', quals=[], storage=[] (at 0)
        TypeDecl: declname='out', quals=[] (at pp.c:500)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='dir', quals=[], storage=[] (at 0)
        TypeDecl: declname='dir', quals=[] (at pp.c:501)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='ifg', quals=[], storage=[] (at 0)
        TypeDecl: declname='ifg', quals=[] (at pp.c:502)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='ies', quals=[], storage=[] (at 0)
        TypeDecl: declname='ies', quals=[] (at pp.c:503)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='ie', quals=[], storage=[] (at 0)
        TypeDecl: declname='ie', quals=[] (at pp.c:504)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='sel', quals=[], storage=[] (at 0)
        TypeDecl: declname='sel', quals=[] (at pp.c:505)
          IdentifierType: names=['ioregister_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:516)
    Struct: name='port_simple_t', packed=False (at pp.c:516)
      Decl: name='in', quals=[], storage=[] (at 0)
        TypeDecl: declname='in', quals=[] (at pp.c:517)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='out', quals=[], storage=[] (at 0)
        TypeDecl: declname='out', quals=[] (at pp.c:518)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='dir', quals=[], storage=[] (at 0)
        TypeDecl: declname='dir', quals=[] (at pp.c:519)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='sel', quals=[], storage=[] (at 0)
        TypeDecl: declname='sel', quals=[] (at pp.c:520)
          IdentifierType: names=['ioregister_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:526)
    Struct: name='port_full_t', packed=False (at pp.c:526)
  Decl: name=None, quals=[], storage=[] (at pp.c:530)
    Struct: name='port_full_t', packed=False (at pp.c:530)
  Decl: name=None, quals=[], storage=[] (at pp.c:534)
    Struct: name='port_simple_t', packed=False (at pp.c:534)
  Decl: name=None, quals=[], storage=[] (at pp.c:538)
    Struct: name='port_simple_t', packed=False (at pp.c:538)
  Decl: name=None, quals=[], storage=[] (at pp.c:542)
    Struct: name='port_simple_t', packed=False (at pp.c:542)
  Decl: name=None, quals=[], storage=[] (at pp.c:546)
    Struct: name='port_simple_t', packed=False (at pp.c:546)
  Decl: name='P1OUT@"0x0021"', quals=['volatile'], storage=[] (at pp.c:548)
    TypeDecl: declname='P1OUT@"0x0021"', quals=['volatile'] (at pp.c:548)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P1DIR@"0x0022"', quals=['volatile'], storage=[] (at pp.c:550)
    TypeDecl: declname='P1DIR@"0x0022"', quals=['volatile'] (at pp.c:550)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P1IFG@"0x0023"', quals=['volatile'], storage=[] (at pp.c:552)
    TypeDecl: declname='P1IFG@"0x0023"', quals=['volatile'] (at pp.c:552)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P1IES@"0x0024"', quals=['volatile'], storage=[] (at pp.c:554)
    TypeDecl: declname='P1IES@"0x0024"', quals=['volatile'] (at pp.c:554)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P1IE@"0x0025"', quals=['volatile'], storage=[] (at pp.c:556)
    TypeDecl: declname='P1IE@"0x0025"', quals=['volatile'] (at pp.c:556)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P1SEL@"0x0026"', quals=['volatile'], storage=[] (at pp.c:558)
    TypeDecl: declname='P1SEL@"0x0026"', quals=['volatile'] (at pp.c:558)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P2OUT@"0x0029"', quals=['volatile'], storage=[] (at pp.c:569)
    TypeDecl: declname='P2OUT@"0x0029"', quals=['volatile'] (at pp.c:569)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P2DIR@"0x002A"', quals=['volatile'], storage=[] (at pp.c:571)
    TypeDecl: declname='P2DIR@"0x002A"', quals=['volatile'] (at pp.c:571)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P2IFG@"0x002B"', quals=['volatile'], storage=[] (at pp.c:573)
    TypeDecl: declname='P2IFG@"0x002B"', quals=['volatile'] (at pp.c:573)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P2IE@"0x002D"', quals=['volatile'], storage=[] (at pp.c:577)
    TypeDecl: declname='P2IE@"0x002D"', quals=['volatile'] (at pp.c:577)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P2SEL@"0x002E"', quals=['volatile'], storage=[] (at pp.c:579)
    TypeDecl: declname='P2SEL@"0x002E"', quals=['volatile'] (at pp.c:579)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P3OUT@"0x0019"', quals=['volatile'], storage=[] (at pp.c:590)
    TypeDecl: declname='P3OUT@"0x0019"', quals=['volatile'] (at pp.c:590)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P3DIR@"0x001A"', quals=['volatile'], storage=[] (at pp.c:592)
    TypeDecl: declname='P3DIR@"0x001A"', quals=['volatile'] (at pp.c:592)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P3SEL@"0x001B"', quals=['volatile'], storage=[] (at pp.c:594)
    TypeDecl: declname='P3SEL@"0x001B"', quals=['volatile'] (at pp.c:594)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P4OUT@"0x001D"', quals=['volatile'], storage=[] (at pp.c:605)
    TypeDecl: declname='P4OUT@"0x001D"', quals=['volatile'] (at pp.c:605)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P4DIR@"0x001E"', quals=['volatile'], storage=[] (at pp.c:607)
    TypeDecl: declname='P4DIR@"0x001E"', quals=['volatile'] (at pp.c:607)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P4SEL@"0x001F"', quals=['volatile'], storage=[] (at pp.c:609)
    TypeDecl: declname='P4SEL@"0x001F"', quals=['volatile'] (at pp.c:609)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P5OUT@"0x0031"', quals=['volatile'], storage=[] (at pp.c:620)
    TypeDecl: declname='P5OUT@"0x0031"', quals=['volatile'] (at pp.c:620)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P5DIR@"0x0032"', quals=['volatile'], storage=[] (at pp.c:622)
    TypeDecl: declname='P5DIR@"0x0032"', quals=['volatile'] (at pp.c:622)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P5SEL@"0x0033"', quals=['volatile'], storage=[] (at pp.c:624)
    TypeDecl: declname='P5SEL@"0x0033"', quals=['volatile'] (at pp.c:624)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P6OUT@"0x0035"', quals=['volatile'], storage=[] (at pp.c:635)
    TypeDecl: declname='P6OUT@"0x0035"', quals=['volatile'] (at pp.c:635)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P6DIR@"0x0036"', quals=['volatile'], storage=[] (at pp.c:637)
    TypeDecl: declname='P6DIR@"0x0036"', quals=['volatile'] (at pp.c:637)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P6SEL@"0x0037"', quals=['volatile'], storage=[] (at pp.c:639)
    TypeDecl: declname='P6SEL@"0x0037"', quals=['volatile'] (at pp.c:639)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U0CTL@"0x0070"', quals=['volatile'], storage=[] (at pp.c:641)
    TypeDecl: declname='U0CTL@"0x0070"', quals=['volatile'] (at pp.c:641)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U0TCTL@"0x0071"', quals=['volatile'], storage=[] (at pp.c:643)
    TypeDecl: declname='U0TCTL@"0x0071"', quals=['volatile'] (at pp.c:643)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U0MCTL@"0x0073"', quals=['volatile'], storage=[] (at pp.c:647)
    TypeDecl: declname='U0MCTL@"0x0073"', quals=['volatile'] (at pp.c:647)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U0BR0@"0x0074"', quals=['volatile'], storage=[] (at pp.c:649)
    TypeDecl: declname='U0BR0@"0x0074"', quals=['volatile'] (at pp.c:649)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U0BR1@"0x0075"', quals=['volatile'], storage=[] (at pp.c:651)
    TypeDecl: declname='U0BR1@"0x0075"', quals=['volatile'] (at pp.c:651)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U0RXBUF@"0x0076"', quals=['volatile'], storage=[] (at pp.c:653)
    TypeDecl: declname='U0RXBUF@"0x0076"', quals=['volatile'] (at pp.c:653)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U1CTL@"0x0078"', quals=['volatile'], storage=[] (at pp.c:655)
    TypeDecl: declname='U1CTL@"0x0078"', quals=['volatile'] (at pp.c:655)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U1TCTL@"0x0079"', quals=['volatile'], storage=[] (at pp.c:657)
    TypeDecl: declname='U1TCTL@"0x0079"', quals=['volatile'] (at pp.c:657)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U1MCTL@"0x007B"', quals=['volatile'], storage=[] (at pp.c:661)
    TypeDecl: declname='U1MCTL@"0x007B"', quals=['volatile'] (at pp.c:661)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U1BR0@"0x007C"', quals=['volatile'], storage=[] (at pp.c:663)
    TypeDecl: declname='U1BR0@"0x007C"', quals=['volatile'] (at pp.c:663)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U1BR1@"0x007D"', quals=['volatile'], storage=[] (at pp.c:665)
    TypeDecl: declname='U1BR1@"0x007D"', quals=['volatile'] (at pp.c:665)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U1RXBUF@"0x007E"', quals=['volatile'], storage=[] (at pp.c:667)
    TypeDecl: declname='U1RXBUF@"0x007E"', quals=['volatile'] (at pp.c:667)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='TA0CTL@"0x0160"', quals=['volatile'], storage=[] (at pp.c:669)
    TypeDecl: declname='TA0CTL@"0x0160"', quals=['volatile'] (at pp.c:669)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TA0R@"0x0170"', quals=['volatile'], storage=[] (at pp.c:671)
    TypeDecl: declname='TA0R@"0x0170"', quals=['volatile'] (at pp.c:671)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TA0CCTL0@"0x0162"', quals=['volatile'], storage=[] (at pp.c:674)
    TypeDecl: declname='TA0CCTL0@"0x0162"', quals=['volatile'] (at pp.c:674)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TA0CCTL1@"0x0164"', quals=['volatile'], storage=[] (at pp.c:676)
    TypeDecl: declname='TA0CCTL1@"0x0164"', quals=['volatile'] (at pp.c:676)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TA0CCTL2@"0x0166"', quals=['volatile'], storage=[] (at pp.c:678)
    TypeDecl: declname='TA0CCTL2@"0x0166"', quals=['volatile'] (at pp.c:678)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='tactl_t', quals=[], storage=['typedef'] (at pp.c:690)
    TypeDecl: declname='tactl_t', quals=[] (at pp.c:690)
      Struct: name='__nesc_unnamed4250', packed=True (at pp.c:681)
        Decl: name='taifg', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='taifg', quals=['volatile'] (at pp.c:683)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:683)
        Decl: name='taie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='taie', quals=['volatile'] (at pp.c:684)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:684)
        Decl: name='taclr', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='taclr', quals=['volatile'] (at pp.c:685)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:685)
        Decl: name='dummy', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='dummy', quals=['volatile'] (at pp.c:686)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:686)
        Decl: name='tamc', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tamc', quals=['volatile'] (at pp.c:687)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:687)
        Decl: name='taid', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='taid', quals=['volatile'] (at pp.c:688)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:688)
        Decl: name='tassel', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tassel', quals=['volatile'] (at pp.c:689)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:689)
  Typedef: name='tacctl_t', quals=[], storage=['typedef'] (at pp.c:707)
    TypeDecl: declname='tacctl_t', quals=[] (at pp.c:707)
      Struct: name='__nesc_unnamed4251', packed=True (at pp.c:693)
        Decl: name='ccifg', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccifg', quals=['volatile'] (at pp.c:695)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:695)
        Decl: name='cov', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cov', quals=['volatile'] (at pp.c:696)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:696)
        Decl: name='out', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='out', quals=['volatile'] (at pp.c:697)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:697)
        Decl: name='cci', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cci', quals=['volatile'] (at pp.c:698)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:698)
        Decl: name='ccie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccie', quals=['volatile'] (at pp.c:699)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:699)
        Decl: name='outmod', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='outmod', quals=['volatile'] (at pp.c:700)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:700)
        Decl: name='cap', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cap', quals=['volatile'] (at pp.c:701)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:701)
        Decl: name='dummy', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='dummy', quals=['volatile'] (at pp.c:702)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:702)
        Decl: name='scci', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='scci', quals=['volatile'] (at pp.c:703)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:703)
        Decl: name='scs', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='scs', quals=['volatile'] (at pp.c:704)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:704)
        Decl: name='ccis', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccis', quals=['volatile'] (at pp.c:705)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:705)
        Decl: name='cm', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cm', quals=['volatile'] (at pp.c:706)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:706)
  Decl: name=None, quals=[], storage=[] (at pp.c:710)
    Struct: name='timera_t', packed=False (at pp.c:710)
      Decl: name='ctl', quals=[], storage=[] (at 0)
        TypeDecl: declname='ctl', quals=[] (at pp.c:711)
          IdentifierType: names=['tactl_t'] (at None)
      Decl: name='cctl0', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl0', quals=[] (at pp.c:712)
          IdentifierType: names=['tacctl_t'] (at None)
      Decl: name='cctl1', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl1', quals=[] (at pp.c:713)
          IdentifierType: names=['tacctl_t'] (at None)
      Decl: name='cctl2', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl2', quals=[] (at pp.c:714)
          IdentifierType: names=['tacctl_t'] (at None)
      Decl: name='dummy', quals=['volatile'], storage=[] (at 0)
        ArrayDecl:  (at pp.c:715)
          TypeDecl: declname='dummy', quals=['volatile'] (at pp.c:715)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:715)
      Decl: name='tar', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tar', quals=['volatile'] (at pp.c:716)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='taccr0', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='taccr0', quals=['volatile'] (at pp.c:717)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='taccr1', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='taccr1', quals=['volatile'] (at pp.c:718)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='taccr2', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='taccr2', quals=['volatile'] (at pp.c:719)
          IdentifierType: names=['unsigned'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:724)
    Struct: name='timera_t', packed=False (at pp.c:724)
  Decl: name='TBR@"0x0190"', quals=['volatile'], storage=[] (at pp.c:726)
    TypeDecl: declname='TBR@"0x0190"', quals=['volatile'] (at pp.c:726)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TBCCTL0@"0x0182"', quals=['volatile'], storage=[] (at pp.c:729)
    TypeDecl: declname='TBCCTL0@"0x0182"', quals=['volatile'] (at pp.c:729)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TBCCR0@"0x0192"', quals=['volatile'], storage=[] (at pp.c:735)
    TypeDecl: declname='TBCCR0@"0x0192"', quals=['volatile'] (at pp.c:735)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='tbctl_t', quals=[], storage=['typedef'] (at pp.c:750)
    TypeDecl: declname='tbctl_t', quals=[] (at pp.c:750)
      Struct: name='__nesc_unnamed4252', packed=True (at pp.c:738)
        Decl: name='tbifg', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbifg', quals=['volatile'] (at pp.c:740)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:740)
        Decl: name='tbie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbie', quals=['volatile'] (at pp.c:741)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:741)
        Decl: name='tbclr', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbclr', quals=['volatile'] (at pp.c:742)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:742)
        Decl: name='dummy1', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='dummy1', quals=['volatile'] (at pp.c:743)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:743)
        Decl: name='tbmc', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbmc', quals=['volatile'] (at pp.c:744)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:744)
        Decl: name='tbid', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbid', quals=['volatile'] (at pp.c:745)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:745)
        Decl: name='tbssel', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbssel', quals=['volatile'] (at pp.c:746)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:746)
        Decl: name='dummy2', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='dummy2', quals=['volatile'] (at pp.c:747)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:747)
        Decl: name='tbcntl', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbcntl', quals=['volatile'] (at pp.c:748)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:748)
        Decl: name='tbclgrp', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbclgrp', quals=['volatile'] (at pp.c:749)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:749)
  Typedef: name='tbcctl_t', quals=[], storage=['typedef'] (at pp.c:766)
    TypeDecl: declname='tbcctl_t', quals=[] (at pp.c:766)
      Struct: name='__nesc_unnamed4253', packed=True (at pp.c:753)
        Decl: name='ccifg', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccifg', quals=['volatile'] (at pp.c:755)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:755)
        Decl: name='cov', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cov', quals=['volatile'] (at pp.c:756)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:756)
        Decl: name='out', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='out', quals=['volatile'] (at pp.c:757)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:757)
        Decl: name='cci', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cci', quals=['volatile'] (at pp.c:758)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:758)
        Decl: name='ccie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccie', quals=['volatile'] (at pp.c:759)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:759)
        Decl: name='outmod', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='outmod', quals=['volatile'] (at pp.c:760)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:760)
        Decl: name='cap', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cap', quals=['volatile'] (at pp.c:761)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:761)
        Decl: name='clld', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='clld', quals=['volatile'] (at pp.c:762)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:762)
        Decl: name='scs', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='scs', quals=['volatile'] (at pp.c:763)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:763)
        Decl: name='ccis', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccis', quals=['volatile'] (at pp.c:764)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:764)
        Decl: name='cm', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cm', quals=['volatile'] (at pp.c:765)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:765)
  Decl: name=None, quals=[], storage=[] (at pp.c:769)
    Struct: name='timerb_t', packed=False (at pp.c:769)
      Decl: name='ctl', quals=[], storage=[] (at 0)
        TypeDecl: declname='ctl', quals=[] (at pp.c:770)
          IdentifierType: names=['tbctl_t'] (at None)
      Decl: name='cctl0', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl0', quals=[] (at pp.c:771)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl1', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl1', quals=[] (at pp.c:772)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl2', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl2', quals=[] (at pp.c:773)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl3', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl3', quals=[] (at pp.c:775)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl4', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl4', quals=[] (at pp.c:776)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl5', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl5', quals=[] (at pp.c:777)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl6', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl6', quals=[] (at pp.c:778)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='tbr', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbr', quals=['volatile'] (at pp.c:782)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr0', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr0', quals=['volatile'] (at pp.c:783)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr1', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr1', quals=['volatile'] (at pp.c:784)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr2', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr2', quals=['volatile'] (at pp.c:785)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr3', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr3', quals=['volatile'] (at pp.c:787)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr4', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr4', quals=['volatile'] (at pp.c:788)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr5', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr5', quals=['volatile'] (at pp.c:789)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr6', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr6', quals=['volatile'] (at pp.c:790)
          IdentifierType: names=['unsigned'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:797)
    Struct: name='timerb_t', packed=False (at pp.c:797)
  Decl: name='DCOCTL@"0x0056"', quals=['volatile'], storage=[] (at pp.c:799)
    TypeDecl: declname='DCOCTL@"0x0056"', quals=['volatile'] (at pp.c:799)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='BCSCTL1@"0x0057"', quals=['volatile'], storage=[] (at pp.c:801)
    TypeDecl: declname='BCSCTL1@"0x0057"', quals=['volatile'] (at pp.c:801)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='BCSCTL2@"0x0058"', quals=['volatile'], storage=[] (at pp.c:803)
    TypeDecl: declname='BCSCTL2@"0x0058"', quals=['volatile'] (at pp.c:803)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='ADC12CTL0@"0x01A0"', quals=['volatile'], storage=[] (at pp.c:805)
    TypeDecl: declname='ADC12CTL0@"0x01A0"', quals=['volatile'] (at pp.c:805)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='ADC12CTL1@"0x01A2"', quals=['volatile'], storage=[] (at pp.c:807)
    TypeDecl: declname='ADC12CTL1@"0x01A2"', quals=['volatile'] (at pp.c:807)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='adc12ctl0_t', quals=[], storage=['typedef'] (at pp.c:822)
    TypeDecl: declname='adc12ctl0_t', quals=[] (at pp.c:822)
      Struct: name='__nesc_unnamed4254', packed=True (at pp.c:810)
        Decl: name='adc12sc', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12sc', quals=['volatile'] (at pp.c:812)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:812)
        Decl: name='enc', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='enc', quals=['volatile'] (at pp.c:813)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:813)
        Decl: name='adc12tovie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12tovie', quals=['volatile'] (at pp.c:814)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:814)
        Decl: name='adc12ovie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12ovie', quals=['volatile'] (at pp.c:815)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:815)
        Decl: name='adc12on', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12on', quals=['volatile'] (at pp.c:816)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:816)
        Decl: name='refon', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='refon', quals=['volatile'] (at pp.c:817)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:817)
        Decl: name='r2_5v', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='r2_5v', quals=['volatile'] (at pp.c:818)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:818)
        Decl: name='msc', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='msc', quals=['volatile'] (at pp.c:819)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:819)
        Decl: name='sht0', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='sht0', quals=['volatile'] (at pp.c:820)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:820)
        Decl: name='sht1', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='sht1', quals=['volatile'] (at pp.c:821)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:821)
  Typedef: name='adc12ctl1_t', quals=[], storage=['typedef'] (at pp.c:835)
    TypeDecl: declname='adc12ctl1_t', quals=[] (at pp.c:835)
      Struct: name='__nesc_unnamed4255', packed=True (at pp.c:825)
        Decl: name='adc12busy', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12busy', quals=['volatile'] (at pp.c:827)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:827)
        Decl: name='conseq', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='conseq', quals=['volatile'] (at pp.c:828)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:828)
        Decl: name='adc12ssel', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12ssel', quals=['volatile'] (at pp.c:829)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:829)
        Decl: name='adc12div', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12div', quals=['volatile'] (at pp.c:830)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:830)
        Decl: name='issh', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='issh', quals=['volatile'] (at pp.c:831)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:831)
        Decl: name='shp', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='shp', quals=['volatile'] (at pp.c:832)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:832)
        Decl: name='shs', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='shs', quals=['volatile'] (at pp.c:833)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:833)
        Decl: name='cstartadd', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cstartadd', quals=['volatile'] (at pp.c:834)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:834)
  Typedef: name='adc12xflg_t', quals=[], storage=['typedef'] (at pp.c:856)
    TypeDecl: declname='adc12xflg_t', quals=[] (at pp.c:856)
      Struct: name='__nesc_unnamed4256', packed=True (at pp.c:838)
        Decl: name='bit0', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit0', quals=['volatile'] (at pp.c:840)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:840)
        Decl: name='bit1', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit1', quals=['volatile'] (at pp.c:841)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:841)
        Decl: name='bit2', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit2', quals=['volatile'] (at pp.c:842)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:842)
        Decl: name='bit3', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit3', quals=['volatile'] (at pp.c:843)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:843)
        Decl: name='bit4', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit4', quals=['volatile'] (at pp.c:844)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:844)
        Decl: name='bit5', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit5', quals=['volatile'] (at pp.c:845)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:845)
        Decl: name='bit6', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit6', quals=['volatile'] (at pp.c:846)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:846)
        Decl: name='bit7', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit7', quals=['volatile'] (at pp.c:847)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:847)
        Decl: name='bit8', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit8', quals=['volatile'] (at pp.c:848)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:848)
        Decl: name='bit9', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit9', quals=['volatile'] (at pp.c:849)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:849)
        Decl: name='bit10', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit10', quals=['volatile'] (at pp.c:850)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:850)
        Decl: name='bit11', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit11', quals=['volatile'] (at pp.c:851)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:851)
        Decl: name='bit12', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit12', quals=['volatile'] (at pp.c:852)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:852)
        Decl: name='bit13', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit13', quals=['volatile'] (at pp.c:853)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:853)
        Decl: name='bit14', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit14', quals=['volatile'] (at pp.c:854)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:854)
        Decl: name='bit15', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit15', quals=['volatile'] (at pp.c:855)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:855)
  Decl: name=None, quals=[], storage=[] (at pp.c:859)
    Struct: name='adc12_t', packed=False (at pp.c:859)
      Decl: name='ctl0', quals=[], storage=[] (at 0)
        TypeDecl: declname='ctl0', quals=[] (at pp.c:860)
          IdentifierType: names=['adc12ctl0_t'] (at None)
      Decl: name='ctl1', quals=[], storage=[] (at 0)
        TypeDecl: declname='ctl1', quals=[] (at pp.c:861)
          IdentifierType: names=['adc12ctl1_t'] (at None)
      Decl: name='ifg', quals=[], storage=[] (at 0)
        TypeDecl: declname='ifg', quals=[] (at pp.c:862)
          IdentifierType: names=['adc12xflg_t'] (at None)
      Decl: name='ie', quals=[], storage=[] (at 0)
        TypeDecl: declname='ie', quals=[] (at pp.c:863)
          IdentifierType: names=['adc12xflg_t'] (at None)
      Decl: name='iv', quals=[], storage=[] (at 0)
        TypeDecl: declname='iv', quals=[] (at pp.c:864)
          IdentifierType: names=['adc12xflg_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:870)
    Struct: name='adc12_t', packed=False (at pp.c:870)
  Decl: name='ME1@"0x0004"', quals=['volatile'], storage=[] (at pp.c:872)
    TypeDecl: declname='ME1@"0x0004"', quals=['volatile'] (at pp.c:872)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='ME2@"0x0005"', quals=['volatile'], storage=[] (at pp.c:878)
    TypeDecl: declname='ME2@"0x0005"', quals=['volatile'] (at pp.c:878)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U0CTLnr@"0x0070"', quals=['volatile'], storage=['static'] (at pp.c:880)
    TypeDecl: declname='U0CTLnr@"0x0070"', quals=['volatile'] (at pp.c:880)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='I2CTCTLnr@"0x0071"', quals=['volatile'], storage=['static'] (at pp.c:881)
    TypeDecl: declname='I2CTCTLnr@"0x0071"', quals=['volatile'] (at pp.c:881)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='I2CDCTLnr@"0x0072"', quals=['volatile'], storage=['static'] (at pp.c:882)
    TypeDecl: declname='I2CDCTLnr@"0x0072"', quals=['volatile'] (at pp.c:882)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='mcu_power_t', quals=[], storage=['typedef'] (at pp.c:884)
    TypeDecl: declname='mcu_power_t', quals=[] (at pp.c:884)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='mcombine', quals=[], storage=['inline', 'static'] (at pp.c:885)
    FuncDecl: quals=None (at pp.c:885)
      ParamList:  (at pp.c:885)
        Decl: name='m1', quals=[], storage=[] (at pp.c:885)
          TypeDecl: declname='m1', quals=[] (at pp.c:885)
            IdentifierType: names=['mcu_power_t'] (at None)
        Decl: name='m2', quals=[], storage=[] (at pp.c:885)
          TypeDecl: declname='m2', quals=[] (at pp.c:885)
            IdentifierType: names=['mcu_power_t'] (at None)
      TypeDecl: declname='mcombine', quals=[] (at pp.c:885)
        IdentifierType: names=['mcu_power_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:888)
    Enum: name='__nesc_unnamed4257' (at pp.c:888)
      EnumeratorList:  (at pp.c:889)
        Enumerator: name='MSP430_POWER_ACTIVE' (at pp.c:889)
          Constant: type='int', value='0' (at pp.c:889)
        Enumerator: name='MSP430_POWER_LPM0' (at pp.c:890)
          Constant: type='int', value='1' (at pp.c:890)
        Enumerator: name='MSP430_POWER_LPM1' (at pp.c:891)
          Constant: type='int', value='2' (at pp.c:891)
        Enumerator: name='MSP430_POWER_LPM2' (at pp.c:892)
          Constant: type='int', value='3' (at pp.c:892)
        Enumerator: name='MSP430_POWER_LPM3' (at pp.c:893)
          Constant: type='int', value='4' (at pp.c:893)
        Enumerator: name='MSP430_POWER_LPM4' (at pp.c:894)
          Constant: type='int', value='5' (at pp.c:894)
  Decl: name='__nesc_disable_interrupt', quals=[], storage=['inline', 'static'] (at pp.c:897)
    FuncDecl: quals=None (at pp.c:897)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_disable_interrupt', quals=[] (at pp.c:897)
        IdentifierType: names=['void'] (at None)
  Decl: name='__nesc_enable_interrupt', quals=[], storage=['inline', 'static'] (at pp.c:903)
    FuncDecl: quals=None (at pp.c:903)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_enable_interrupt', quals=[] (at pp.c:903)
        IdentifierType: names=['void'] (at None)
  Typedef: name='__nesc_atomic_t', quals=[], storage=['typedef'] (at pp.c:908)
    TypeDecl: declname='__nesc_atomic_t', quals=[] (at pp.c:908)
      IdentifierType: names=['bool'] (at None)
  Decl: name='__nesc_atomic_start', quals=[], storage=[] (at pp.c:909)
    FuncDecl: quals=None (at pp.c:909)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_atomic_start', quals=[] (at pp.c:909)
        IdentifierType: names=['__nesc_atomic_t'] (at None)
  Decl: name='__nesc_atomic_end', quals=[], storage=[] (at pp.c:910)
    FuncDecl: quals=None (at pp.c:910)
      ParamList:  (at pp.c:910)
        Decl: name='reenable_interrupts', quals=[], storage=[] (at pp.c:910)
          TypeDecl: declname='reenable_interrupts', quals=[] (at pp.c:910)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
      TypeDecl: declname='__nesc_atomic_end', quals=[] (at pp.c:910)
        IdentifierType: names=['void'] (at None)
  Decl: name='__nesc_atomic_start', quals=[], storage=[] (at pp.c:917)
    FuncDecl: quals=None (at pp.c:917)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_atomic_start', quals=[] (at pp.c:917)
        IdentifierType: names=['__nesc_atomic_t'] (at None)
  Decl: name='__nesc_atomic_end', quals=[], storage=[] (at pp.c:925)
    FuncDecl: quals=None (at pp.c:925)
      ParamList:  (at pp.c:925)
        Decl: name='reenable_interrupts', quals=[], storage=[] (at pp.c:925)
          TypeDecl: declname='reenable_interrupts', quals=[] (at pp.c:925)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
      TypeDecl: declname='__nesc_atomic_end', quals=[] (at pp.c:925)
        IdentifierType: names=['void'] (at None)
  Typedef: name='nx_float', quals=[], storage=['typedef'] (at pp.c:927)
    TypeDecl: declname='nx_float', quals=[] (at pp.c:927)
      Struct: name=None, packed=False (at pp.c:927)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:927)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:927)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='4' (at pp.c:927)
  Typedef: name='__nesc_nxbase_nx_float', quals=[], storage=['typedef'] (at pp.c:927)
    TypeDecl: declname='__nesc_nxbase_nx_float', quals=[] (at pp.c:927)
      IdentifierType: names=['float'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:929)
    Enum: name='__nesc_unnamed4258' (at pp.c:929)
      EnumeratorList:  (at pp.c:930)
        Enumerator: name='TOS_SLEEP_NONE' (at pp.c:930)
          ID: name='MSP430_POWER_ACTIVE' (at pp.c:930)
  Decl: name=None, quals=[], storage=[] (at pp.c:933)
    Enum: name='__nesc_unnamed4259' (at pp.c:933)
      EnumeratorList:  (at pp.c:934)
        Enumerator: name='MSP430TIMER_CM_NONE' (at pp.c:934)
          Constant: type='int', value='0' (at pp.c:934)
        Enumerator: name='MSP430TIMER_CM_RISING' (at pp.c:935)
          Constant: type='int', value='1' (at pp.c:935)
        Enumerator: name='MSP430TIMER_CM_FALLING' (at pp.c:936)
          Constant: type='int', value='2' (at pp.c:936)
        Enumerator: name='MSP430TIMER_CM_BOTH' (at pp.c:937)
          Constant: type='int', value='3' (at pp.c:937)
        Enumerator: name='MSP430TIMER_STOP_MODE' (at pp.c:939)
          Constant: type='int', value='0' (at pp.c:939)
        Enumerator: name='MSP430TIMER_UP_MODE' (at pp.c:940)
          Constant: type='int', value='1' (at pp.c:940)
        Enumerator: name='MSP430TIMER_CONTINUOUS_MODE' (at pp.c:941)
          Constant: type='int', value='2' (at pp.c:941)
        Enumerator: name='MSP430TIMER_UPDOWN_MODE' (at pp.c:942)
          Constant: type='int', value='3' (at pp.c:942)
        Enumerator: name='MSP430TIMER_TACLK' (at pp.c:944)
          Constant: type='int', value='0' (at pp.c:944)
        Enumerator: name='MSP430TIMER_TBCLK' (at pp.c:945)
          Constant: type='int', value='0' (at pp.c:945)
        Enumerator: name='MSP430TIMER_ACLK' (at pp.c:946)
          Constant: type='int', value='1' (at pp.c:946)
        Enumerator: name='MSP430TIMER_SMCLK' (at pp.c:947)
          Constant: type='int', value='2' (at pp.c:947)
        Enumerator: name='MSP430TIMER_INCLK' (at pp.c:948)
          Constant: type='int', value='3' (at pp.c:948)
        Enumerator: name='MSP430TIMER_CLOCKDIV_1' (at pp.c:950)
          Constant: type='int', value='0' (at pp.c:950)
        Enumerator: name='MSP430TIMER_CLOCKDIV_2' (at pp.c:951)
          Constant: type='int', value='1' (at pp.c:951)
        Enumerator: name='MSP430TIMER_CLOCKDIV_4' (at pp.c:952)
          Constant: type='int', value='2' (at pp.c:952)
        Enumerator: name='MSP430TIMER_CLOCKDIV_8' (at pp.c:953)
          Constant: type='int', value='3' (at pp.c:953)
  Typedef: name='msp430_compare_control_t', quals=[], storage=['typedef'] (at pp.c:970)
    TypeDecl: declname='msp430_compare_control_t', quals=[] (at pp.c:970)
      Struct: name='__nesc_unnamed4260', packed=False (at pp.c:957)
        Decl: name='ccifg', quals=[], storage=[] (at 0)
          TypeDecl: declname='ccifg', quals=[] (at pp.c:959)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:959)
        Decl: name='cov', quals=[], storage=[] (at 0)
          TypeDecl: declname='cov', quals=[] (at pp.c:960)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:960)
        Decl: name='out', quals=[], storage=[] (at 0)
          TypeDecl: declname='out', quals=[] (at pp.c:961)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:961)
        Decl: name='cci', quals=[], storage=[] (at 0)
          TypeDecl: declname='cci', quals=[] (at pp.c:962)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:962)
        Decl: name='ccie', quals=[], storage=[] (at 0)
          TypeDecl: declname='ccie', quals=[] (at pp.c:963)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:963)
        Decl: name='outmod', quals=[], storage=[] (at 0)
          TypeDecl: declname='outmod', quals=[] (at pp.c:964)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='3' (at pp.c:964)
        Decl: name='cap', quals=[], storage=[] (at 0)
          TypeDecl: declname='cap', quals=[] (at pp.c:965)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:965)
        Decl: name='clld', quals=[], storage=[] (at 0)
          TypeDecl: declname='clld', quals=[] (at pp.c:966)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:966)
        Decl: name='scs', quals=[], storage=[] (at 0)
          TypeDecl: declname='scs', quals=[] (at pp.c:967)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:967)
        Decl: name='ccis', quals=[], storage=[] (at 0)
          TypeDecl: declname='ccis', quals=[] (at pp.c:968)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:968)
        Decl: name='cm', quals=[], storage=[] (at 0)
          TypeDecl: declname='cm', quals=[] (at pp.c:969)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:969)
  Typedef: name='msp430_timer_a_control_t', quals=[], storage=['typedef'] (at pp.c:983)
    TypeDecl: declname='msp430_timer_a_control_t', quals=[] (at pp.c:983)
      Struct: name='__nesc_unnamed4261', packed=False (at pp.c:973)
        Decl: name='taifg', quals=[], storage=[] (at 0)
          TypeDecl: declname='taifg', quals=[] (at pp.c:975)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:975)
        Decl: name='taie', quals=[], storage=[] (at 0)
          TypeDecl: declname='taie', quals=[] (at pp.c:976)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:976)
        Decl: name='taclr', quals=[], storage=[] (at 0)
          TypeDecl: declname='taclr', quals=[] (at pp.c:977)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:977)
        Decl: name='_unused0', quals=[], storage=[] (at 0)
          TypeDecl: declname='_unused0', quals=[] (at pp.c:978)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:978)
        Decl: name='mc', quals=[], storage=[] (at 0)
          TypeDecl: declname='mc', quals=[] (at pp.c:979)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:979)
        Decl: name='id', quals=[], storage=[] (at 0)
          TypeDecl: declname='id', quals=[] (at pp.c:980)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:980)
        Decl: name='tassel', quals=[], storage=[] (at 0)
          TypeDecl: declname='tassel', quals=[] (at pp.c:981)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:981)
        Decl: name='_unused1', quals=[], storage=[] (at 0)
          TypeDecl: declname='_unused1', quals=[] (at pp.c:982)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='6' (at pp.c:982)
  Typedef: name='msp430_timer_b_control_t', quals=[], storage=['typedef'] (at pp.c:999)
    TypeDecl: declname='msp430_timer_b_control_t', quals=[] (at pp.c:999)
      Struct: name='__nesc_unnamed4262', packed=False (at pp.c:986)
        Decl: name='tbifg', quals=[], storage=[] (at 0)
          TypeDecl: declname='tbifg', quals=[] (at pp.c:988)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:988)
        Decl: name='tbie', quals=[], storage=[] (at 0)
          TypeDecl: declname='tbie', quals=[] (at pp.c:989)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:989)
        Decl: name='tbclr', quals=[], storage=[] (at 0)
          TypeDecl: declname='tbclr', quals=[] (at pp.c:990)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:990)
        Decl: name='_unused0', quals=[], storage=[] (at 0)
          TypeDecl: declname='_unused0', quals=[] (at pp.c:991)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:991)
        Decl: name='mc', quals=[], storage=[] (at 0)
          TypeDecl: declname='mc', quals=[] (at pp.c:992)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:992)
        Decl: name='id', quals=[], storage=[] (at 0)
          TypeDecl: declname='id', quals=[] (at pp.c:993)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:993)
        Decl: name='tbssel', quals=[], storage=[] (at 0)
          TypeDecl: declname='tbssel', quals=[] (at pp.c:994)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:994)
        Decl: name='_unused1', quals=[], storage=[] (at 0)
          TypeDecl: declname='_unused1', quals=[] (at pp.c:995)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:995)
        Decl: name='cntl', quals=[], storage=[] (at 0)
          TypeDecl: declname='cntl', quals=[] (at pp.c:996)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:996)
        Decl: name='tbclgrp', quals=[], storage=[] (at 0)
          TypeDecl: declname='tbclgrp', quals=[] (at pp.c:997)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:997)
        Decl: name='_unused2', quals=[], storage=[] (at 0)
          TypeDecl: declname='_unused2', quals=[] (at pp.c:998)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:998)
  Typedef: name='nx_am_id_t', quals=[], storage=['typedef'] (at pp.c:1001)
    TypeDecl: declname='nx_am_id_t', quals=[] (at pp.c:1001)
      IdentifierType: names=['nx_uint8_t'] (at None)
  Typedef: name='nx_am_group_t', quals=[], storage=['typedef'] (at pp.c:1002)
    TypeDecl: declname='nx_am_group_t', quals=[] (at pp.c:1002)
      IdentifierType: names=['nx_uint8_t'] (at None)
  Typedef: name='nx_am_addr_t', quals=[], storage=['typedef'] (at pp.c:1003)
    TypeDecl: declname='nx_am_addr_t', quals=[] (at pp.c:1003)
      IdentifierType: names=['nx_uint16_t'] (at None)
  Typedef: name='am_id_t', quals=[], storage=['typedef'] (at pp.c:1005)
    TypeDecl: declname='am_id_t', quals=[] (at pp.c:1005)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='am_group_t', quals=[], storage=['typedef'] (at pp.c:1006)
    TypeDecl: declname='am_group_t', quals=[] (at pp.c:1006)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='am_addr_t', quals=[], storage=['typedef'] (at pp.c:1007)
    TypeDecl: declname='am_addr_t', quals=[] (at pp.c:1007)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1009)
    Enum: name='__nesc_unnamed4263' (at pp.c:1009)
      EnumeratorList:  (at pp.c:1010)
        Enumerator: name='AM_BROADCAST_ADDR' (at pp.c:1010)
          Constant: type='int', value='0xffff' (at pp.c:1010)
  Decl: name=None, quals=[], storage=[] (at pp.c:1021)
    Enum: name='__nesc_unnamed4264' (at pp.c:1021)
      EnumeratorList:  (at pp.c:1022)
        Enumerator: name='TOS_AM_GROUP' (at pp.c:1022)
          Constant: type='int', value='0x22' (at pp.c:1022)
        Enumerator: name='TOS_AM_ADDRESS' (at pp.c:1023)
          Constant: type='int', value='1' (at pp.c:1023)
  Typedef: name='uart_id_t', quals=[], storage=['typedef'] (at pp.c:1026)
    TypeDecl: declname='uart_id_t', quals=[] (at pp.c:1026)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1030)
    Enum: name='__nesc_unnamed4265' (at pp.c:1030)
      EnumeratorList:  (at pp.c:1031)
        Enumerator: name='HDLC_FLAG_BYTE' (at pp.c:1031)
          Constant: type='int', value='0x7e' (at pp.c:1031)
        Enumerator: name='HDLC_CTLESC_BYTE' (at pp.c:1032)
          Constant: type='int', value='0x7d' (at pp.c:1032)
  Decl: name=None, quals=[], storage=[] (at pp.c:1037)
    Enum: name='__nesc_unnamed4266' (at pp.c:1037)
      EnumeratorList:  (at pp.c:1038)
        Enumerator: name='TOS_SERIAL_ACTIVE_MESSAGE_ID' (at pp.c:1038)
          Constant: type='int', value='0' (at pp.c:1038)
        Enumerator: name='TOS_SERIAL_CC1000_ID' (at pp.c:1039)
          Constant: type='int', value='1' (at pp.c:1039)
        Enumerator: name='TOS_SERIAL_802_15_4_ID' (at pp.c:1040)
          Constant: type='int', value='2' (at pp.c:1040)
        Enumerator: name='TOS_SERIAL_UNKNOWN_ID' (at pp.c:1041)
          Constant: type='int', value='255' (at pp.c:1041)
  Decl: name=None, quals=[], storage=[] (at pp.c:1045)
    Enum: name='__nesc_unnamed4267' (at pp.c:1045)
      EnumeratorList:  (at pp.c:1046)
        Enumerator: name='SERIAL_PROTO_ACK' (at pp.c:1046)
          Constant: type='int', value='67' (at pp.c:1046)
        Enumerator: name='SERIAL_PROTO_PACKET_ACK' (at pp.c:1047)
          Constant: type='int', value='68' (at pp.c:1047)
        Enumerator: name='SERIAL_PROTO_PACKET_NOACK' (at pp.c:1048)
          Constant: type='int', value='69' (at pp.c:1048)
        Enumerator: name='SERIAL_PROTO_PACKET_UNKNOWN' (at pp.c:1049)
          Constant: type='int', value='255' (at pp.c:1049)
  Typedef: name='radio_stats_t', quals=[], storage=['typedef'] (at pp.c:1065)
    TypeDecl: declname='radio_stats_t', quals=[] (at pp.c:1065)
      Struct: name='radio_stats', packed=False (at pp.c:1053)
        Decl: name='version', quals=[], storage=[] (at 0)
          TypeDecl: declname='version', quals=[] (at pp.c:1054)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='flags', quals=[], storage=[] (at 0)
          TypeDecl: declname='flags', quals=[] (at pp.c:1055)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='reserved', quals=[], storage=[] (at 0)
          TypeDecl: declname='reserved', quals=[] (at pp.c:1056)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='platform', quals=[], storage=[] (at 0)
          TypeDecl: declname='platform', quals=[] (at pp.c:1057)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='MTU', quals=[], storage=[] (at 0)
          TypeDecl: declname='MTU', quals=[] (at pp.c:1058)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='radio_crc_fail', quals=[], storage=[] (at 0)
          TypeDecl: declname='radio_crc_fail', quals=[] (at pp.c:1059)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='radio_queue_drops', quals=[], storage=[] (at 0)
          TypeDecl: declname='radio_queue_drops', quals=[] (at pp.c:1060)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='serial_crc_fail', quals=[], storage=[] (at 0)
          TypeDecl: declname='serial_crc_fail', quals=[] (at pp.c:1061)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='serial_tx_fail', quals=[], storage=[] (at 0)
          TypeDecl: declname='serial_tx_fail', quals=[] (at pp.c:1062)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='serial_short_packets', quals=[], storage=[] (at 0)
          TypeDecl: declname='serial_short_packets', quals=[] (at pp.c:1063)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='serial_proto_drops', quals=[], storage=[] (at 0)
          TypeDecl: declname='serial_proto_drops', quals=[] (at pp.c:1064)
            IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='serial_header_t', quals=[], storage=['typedef'] (at pp.c:1080)
    TypeDecl: declname='serial_header_t', quals=[] (at pp.c:1080)
      Struct: name='serial_header', packed=False (at pp.c:1074)
        Decl: name='dest', quals=[], storage=[] (at 0)
          TypeDecl: declname='dest', quals=[] (at pp.c:1075)
            IdentifierType: names=['nx_am_addr_t'] (at None)
        Decl: name='src', quals=[], storage=[] (at 0)
          TypeDecl: declname='src', quals=[] (at pp.c:1076)
            IdentifierType: names=['nx_am_addr_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at 0)
          TypeDecl: declname='length', quals=[] (at pp.c:1077)
            IdentifierType: names=['nx_uint8_t'] (at None)
        Decl: name='group', quals=[], storage=[] (at 0)
          TypeDecl: declname='group', quals=[] (at pp.c:1078)
            IdentifierType: names=['nx_am_group_t'] (at None)
        Decl: name='type', quals=[], storage=[] (at 0)
          TypeDecl: declname='type', quals=[] (at pp.c:1079)
            IdentifierType: names=['nx_am_id_t'] (at None)
  Typedef: name='serial_packet_t', quals=[], storage=['typedef'] (at pp.c:1089)
    TypeDecl: declname='serial_packet_t', quals=[] (at pp.c:1089)
      Struct: name='serial_packet', packed=False (at pp.c:1086)
        Decl: name='header', quals=[], storage=[] (at 0)
          TypeDecl: declname='header', quals=[] (at pp.c:1087)
            IdentifierType: names=['serial_header_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:1088)
            TypeDecl: declname='data', quals=[] (at pp.c:1088)
              IdentifierType: names=['nx_uint8_t'] (at None)
  Typedef: name='serial_metadata_t', quals=[], storage=['typedef'] (at pp.c:1096)
    TypeDecl: declname='serial_metadata_t', quals=[] (at pp.c:1096)
      Struct: name='serial_metadata', packed=False (at pp.c:1094)
        Decl: name='ack', quals=[], storage=[] (at 0)
          TypeDecl: declname='ack', quals=[] (at pp.c:1095)
            IdentifierType: names=['nx_uint8_t'] (at None)
  Typedef: name='cc2420_status_t', quals=[], storage=['typedef'] (at pp.c:1098)
    TypeDecl: declname='cc2420_status_t', quals=[] (at pp.c:1098)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='security_header_t', quals=[], storage=['typedef'] (at pp.c:1107)
    TypeDecl: declname='security_header_t', quals=[] (at pp.c:1107)
      Struct: name='security_header_t', packed=False (at pp.c:1101)
        Decl: name='__nesc_filler0', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:1102)
            TypeDecl: declname='__nesc_filler0', quals=[] (at pp.c:1102)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='1' (at pp.c:1102)
        Decl: name='frameCounter', quals=[], storage=[] (at 0)
          TypeDecl: declname='frameCounter', quals=[] (at pp.c:1105)
            IdentifierType: names=['nx_uint32_t'] (at None)
        Decl: name='keyID', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:1106)
            TypeDecl: declname='keyID', quals=[] (at pp.c:1106)
              IdentifierType: names=['nx_uint8_t'] (at None)
            Constant: type='int', value='1' (at pp.c:1106)
  Typedef: name='cc2420_header_t', quals=[], storage=['typedef'] (at pp.c:1128)
    TypeDecl: declname='cc2420_header_t', quals=[] (at pp.c:1128)
      Struct: name='cc2420_header_t', packed=False (at pp.c:1110)
        Decl: name='length', quals=[], storage=[] (at 0)
          TypeDecl: declname='length', quals=[] (at pp.c:1111)
            IdentifierType: names=['nxle_uint8_t'] (at None)
        Decl: name='fcf', quals=[], storage=[] (at 0)
          TypeDecl: declname='fcf', quals=[] (at pp.c:1112)
            IdentifierType: names=['nxle_uint16_t'] (at None)
        Decl: name='dsn', quals=[], storage=[] (at 0)
          TypeDecl: declname='dsn', quals=[] (at pp.c:1113)
            IdentifierType: names=['nxle_uint8_t'] (at None)
        Decl: name='destpan', quals=[], storage=[] (at 0)
          TypeDecl: declname='destpan', quals=[] (at pp.c:1114)
            IdentifierType: names=['nxle_uint16_t'] (at None)
        Decl: name='dest', quals=[], storage=[] (at 0)
          TypeDecl: declname='dest', quals=[] (at pp.c:1115)
            IdentifierType: names=['nxle_uint16_t'] (at None)
        Decl: name='src', quals=[], storage=[] (at 0)
          TypeDecl: declname='src', quals=[] (at pp.c:1116)
            IdentifierType: names=['nxle_uint16_t'] (at None)
        Decl: name='network', quals=[], storage=[] (at 0)
          TypeDecl: declname='network', quals=[] (at pp.c:1124)
            IdentifierType: names=['nxle_uint8_t'] (at None)
        Decl: name='type', quals=[], storage=[] (at 0)
          TypeDecl: declname='type', quals=[] (at pp.c:1127)
            IdentifierType: names=['nxle_uint8_t'] (at None)
  Typedef: name='cc2420_footer_t', quals=[], storage=['typedef'] (at pp.c:1136)
    TypeDecl: declname='cc2420_footer_t', quals=[] (at pp.c:1136)
      Struct: name='cc2420_footer_t', packed=False (at pp.c:1135)
  Typedef: name='cc2420_metadata_t', quals=[], storage=['typedef'] (at pp.c:1154)
    TypeDecl: declname='cc2420_metadata_t', quals=[] (at pp.c:1154)
      Struct: name='cc2420_metadata_t', packed=False (at pp.c:1139)
        Decl: name='rssi', quals=[], storage=[] (at 0)
          TypeDecl: declname='rssi', quals=[] (at pp.c:1140)
            IdentifierType: names=['nx_uint8_t'] (at None)
        Decl: name='lqi', quals=[], storage=[] (at 0)
          TypeDecl: declname='lqi', quals=[] (at pp.c:1141)
            IdentifierType: names=['nx_uint8_t'] (at None)
        Decl: name='tx_power', quals=[], storage=[] (at 0)
          TypeDecl: declname='tx_power', quals=[] (at pp.c:1142)
            IdentifierType: names=['nx_uint8_t'] (at None)
        Decl: name='crc', quals=[], storage=[] (at 0)
          TypeDecl: declname='crc', quals=[] (at pp.c:1143)
            IdentifierType: names=['nx_bool'] (at None)
        Decl: name='ack', quals=[], storage=[] (at 0)
          TypeDecl: declname='ack', quals=[] (at pp.c:1144)
            IdentifierType: names=['nx_bool'] (at None)
        Decl: name='timesync', quals=[], storage=[] (at 0)
          TypeDecl: declname='timesync', quals=[] (at pp.c:1145)
            IdentifierType: names=['nx_bool'] (at None)
        Decl: name='timestamp', quals=[], storage=[] (at 0)
          TypeDecl: declname='timestamp', quals=[] (at pp.c:1146)
            IdentifierType: names=['nx_uint32_t'] (at None)
        Decl: name='rxInterval', quals=[], storage=[] (at 0)
          TypeDecl: declname='rxInterval', quals=[] (at pp.c:1147)
            IdentifierType: names=['nx_uint16_t'] (at None)
  Typedef: name='cc2420_packet_t', quals=[], storage=['typedef'] (at pp.c:1164)
    TypeDecl: declname='cc2420_packet_t', quals=[] (at pp.c:1164)
      Struct: name='cc2420_packet_t', packed=False (at pp.c:1161)
        Decl: name='packet', quals=[], storage=[] (at 0)
          TypeDecl: declname='packet', quals=[] (at pp.c:1162)
            IdentifierType: names=['cc2420_header_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:1163)
            TypeDecl: declname='data', quals=[] (at pp.c:1163)
              IdentifierType: names=['nx_uint8_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1166)
    Enum: name='__nesc_unnamed4268' (at pp.c:1166)
      EnumeratorList:  (at pp.c:1168)
        Enumerator: name='MAC_HEADER_SIZE' (at pp.c:1168)
          BinaryOp: op='-' (at pp.c:1168)
            UnaryOp: op='sizeof' (at pp.c:1168)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['cc2420_header_t'] (at None)
            Constant: type='int', value='1' (at pp.c:1168)
        Enumerator: name='MAC_FOOTER_SIZE' (at pp.c:1170)
          UnaryOp: op='sizeof' (at pp.c:1170)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['uint16_t'] (at None)
        Enumerator: name='MAC_PACKET_SIZE' (at pp.c:1172)
          BinaryOp: op='+' (at pp.c:1172)
            BinaryOp: op='+' (at pp.c:1172)
              ID: name='MAC_HEADER_SIZE' (at pp.c:1172)
              Constant: type='int', value='28' (at pp.c:1172)
            ID: name='MAC_FOOTER_SIZE' (at pp.c:1172)
        Enumerator: name='CC2420_SIZE' (at pp.c:1174)
          BinaryOp: op='+' (at pp.c:1174)
            ID: name='MAC_HEADER_SIZE' (at pp.c:1174)
            ID: name='MAC_FOOTER_SIZE' (at pp.c:1174)
  Decl: name=None, quals=[], storage=[] (at pp.c:1177)
    Enum: name='cc2420_enums' (at pp.c:1177)
      EnumeratorList:  (at pp.c:1178)
        Enumerator: name='CC2420_TIME_ACK_TURNAROUND' (at pp.c:1178)
          Constant: type='int', value='7' (at pp.c:1178)
        Enumerator: name='CC2420_TIME_VREN' (at pp.c:1179)
          Constant: type='int', value='20' (at pp.c:1179)
        Enumerator: name='CC2420_TIME_SYMBOL' (at pp.c:1180)
          Constant: type='int', value='2' (at pp.c:1180)
        Enumerator: name='CC2420_BACKOFF_PERIOD' (at pp.c:1181)
          BinaryOp: op='/' (at pp.c:1181)
            Constant: type='int', value='20' (at pp.c:1181)
            ID: name='CC2420_TIME_SYMBOL' (at pp.c:1181)
        Enumerator: name='CC2420_MIN_BACKOFF' (at pp.c:1182)
          BinaryOp: op='/' (at pp.c:1182)
            Constant: type='int', value='20' (at pp.c:1182)
            ID: name='CC2420_TIME_SYMBOL' (at pp.c:1182)
        Enumerator: name='CC2420_ACK_WAIT_DELAY' (at pp.c:1183)
          Constant: type='int', value='256' (at pp.c:1183)
  Decl: name=None, quals=[], storage=[] (at pp.c:1186)
    Enum: name='cc2420_status_enums' (at pp.c:1186)
      EnumeratorList:  (at pp.c:1187)
        Enumerator: name='CC2420_STATUS_RSSI_VALID' (at pp.c:1187)
          BinaryOp: op='<<' (at pp.c:1187)
            Constant: type='int', value='1' (at pp.c:1187)
            Constant: type='int', value='1' (at pp.c:1187)
        Enumerator: name='CC2420_STATUS_LOCK' (at pp.c:1188)
          BinaryOp: op='<<' (at pp.c:1188)
            Constant: type='int', value='1' (at pp.c:1188)
            Constant: type='int', value='2' (at pp.c:1188)
        Enumerator: name='CC2420_STATUS_TX_ACTIVE' (at pp.c:1189)
          BinaryOp: op='<<' (at pp.c:1189)
            Constant: type='int', value='1' (at pp.c:1189)
            Constant: type='int', value='3' (at pp.c:1189)
        Enumerator: name='CC2420_STATUS_ENC_BUSY' (at pp.c:1190)
          BinaryOp: op='<<' (at pp.c:1190)
            Constant: type='int', value='1' (at pp.c:1190)
            Constant: type='int', value='4' (at pp.c:1190)
        Enumerator: name='CC2420_STATUS_TX_UNDERFLOW' (at pp.c:1191)
          BinaryOp: op='<<' (at pp.c:1191)
            Constant: type='int', value='1' (at pp.c:1191)
            Constant: type='int', value='5' (at pp.c:1191)
        Enumerator: name='CC2420_STATUS_XOSC16M_STABLE' (at pp.c:1192)
          BinaryOp: op='<<' (at pp.c:1192)
            Constant: type='int', value='1' (at pp.c:1192)
            Constant: type='int', value='6' (at pp.c:1192)
  Decl: name=None, quals=[], storage=[] (at pp.c:1195)
    Enum: name='cc2420_config_reg_enums' (at pp.c:1195)
      EnumeratorList:  (at pp.c:1196)
        Enumerator: name='CC2420_SNOP' (at pp.c:1196)
          Constant: type='int', value='0x00' (at pp.c:1196)
        Enumerator: name='CC2420_SXOSCON' (at pp.c:1197)
          Constant: type='int', value='0x01' (at pp.c:1197)
        Enumerator: name='CC2420_STXCAL' (at pp.c:1198)
          Constant: type='int', value='0x02' (at pp.c:1198)
        Enumerator: name='CC2420_SRXON' (at pp.c:1199)
          Constant: type='int', value='0x03' (at pp.c:1199)
        Enumerator: name='CC2420_STXON' (at pp.c:1200)
          Constant: type='int', value='0x04' (at pp.c:1200)
        Enumerator: name='CC2420_STXONCCA' (at pp.c:1201)
          Constant: type='int', value='0x05' (at pp.c:1201)
        Enumerator: name='CC2420_SRFOFF' (at pp.c:1202)
          Constant: type='int', value='0x06' (at pp.c:1202)
        Enumerator: name='CC2420_SXOSCOFF' (at pp.c:1203)
          Constant: type='int', value='0x07' (at pp.c:1203)
        Enumerator: name='CC2420_SFLUSHRX' (at pp.c:1204)
          Constant: type='int', value='0x08' (at pp.c:1204)
        Enumerator: name='CC2420_SFLUSHTX' (at pp.c:1205)
          Constant: type='int', value='0x09' (at pp.c:1205)
        Enumerator: name='CC2420_SACK' (at pp.c:1206)
          Constant: type='int', value='0x0a' (at pp.c:1206)
        Enumerator: name='CC2420_SACKPEND' (at pp.c:1207)
          Constant: type='int', value='0x0b' (at pp.c:1207)
        Enumerator: name='CC2420_SRXDEC' (at pp.c:1208)
          Constant: type='int', value='0x0c' (at pp.c:1208)
        Enumerator: name='CC2420_STXENC' (at pp.c:1209)
          Constant: type='int', value='0x0d' (at pp.c:1209)
        Enumerator: name='CC2420_SAES' (at pp.c:1210)
          Constant: type='int', value='0x0e' (at pp.c:1210)
        Enumerator: name='CC2420_MAIN' (at pp.c:1211)
          Constant: type='int', value='0x10' (at pp.c:1211)
        Enumerator: name='CC2420_MDMCTRL0' (at pp.c:1212)
          Constant: type='int', value='0x11' (at pp.c:1212)
        Enumerator: name='CC2420_MDMCTRL1' (at pp.c:1213)
          Constant: type='int', value='0x12' (at pp.c:1213)
        Enumerator: name='CC2420_RSSI' (at pp.c:1214)
          Constant: type='int', value='0x13' (at pp.c:1214)
        Enumerator: name='CC2420_SYNCWORD' (at pp.c:1215)
          Constant: type='int', value='0x14' (at pp.c:1215)
        Enumerator: name='CC2420_TXCTRL' (at pp.c:1216)
          Constant: type='int', value='0x15' (at pp.c:1216)
        Enumerator: name='CC2420_RXCTRL0' (at pp.c:1217)
          Constant: type='int', value='0x16' (at pp.c:1217)
        Enumerator: name='CC2420_RXCTRL1' (at pp.c:1218)
          Constant: type='int', value='0x17' (at pp.c:1218)
        Enumerator: name='CC2420_FSCTRL' (at pp.c:1219)
          Constant: type='int', value='0x18' (at pp.c:1219)
        Enumerator: name='CC2420_SECCTRL0' (at pp.c:1220)
          Constant: type='int', value='0x19' (at pp.c:1220)
        Enumerator: name='CC2420_SECCTRL1' (at pp.c:1221)
          Constant: type='int', value='0x1a' (at pp.c:1221)
        Enumerator: name='CC2420_BATTMON' (at pp.c:1222)
          Constant: type='int', value='0x1b' (at pp.c:1222)
        Enumerator: name='CC2420_IOCFG0' (at pp.c:1223)
          Constant: type='int', value='0x1c' (at pp.c:1223)
        Enumerator: name='CC2420_IOCFG1' (at pp.c:1224)
          Constant: type='int', value='0x1d' (at pp.c:1224)
        Enumerator: name='CC2420_MANFIDL' (at pp.c:1225)
          Constant: type='int', value='0x1e' (at pp.c:1225)
        Enumerator: name='CC2420_MANFIDH' (at pp.c:1226)
          Constant: type='int', value='0x1f' (at pp.c:1226)
        Enumerator: name='CC2420_FSMTC' (at pp.c:1227)
          Constant: type='int', value='0x20' (at pp.c:1227)
        Enumerator: name='CC2420_MANAND' (at pp.c:1228)
          Constant: type='int', value='0x21' (at pp.c:1228)
        Enumerator: name='CC2420_MANOR' (at pp.c:1229)
          Constant: type='int', value='0x22' (at pp.c:1229)
        Enumerator: name='CC2420_AGCCTRL' (at pp.c:1230)
          Constant: type='int', value='0x23' (at pp.c:1230)
        Enumerator: name='CC2420_AGCTST0' (at pp.c:1231)
          Constant: type='int', value='0x24' (at pp.c:1231)
        Enumerator: name='CC2420_AGCTST1' (at pp.c:1232)
          Constant: type='int', value='0x25' (at pp.c:1232)
        Enumerator: name='CC2420_AGCTST2' (at pp.c:1233)
          Constant: type='int', value='0x26' (at pp.c:1233)
        Enumerator: name='CC2420_FSTST0' (at pp.c:1234)
          Constant: type='int', value='0x27' (at pp.c:1234)
        Enumerator: name='CC2420_FSTST1' (at pp.c:1235)
          Constant: type='int', value='0x28' (at pp.c:1235)
        Enumerator: name='CC2420_FSTST2' (at pp.c:1236)
          Constant: type='int', value='0x29' (at pp.c:1236)
        Enumerator: name='CC2420_FSTST3' (at pp.c:1237)
          Constant: type='int', value='0x2a' (at pp.c:1237)
        Enumerator: name='CC2420_RXBPFTST' (at pp.c:1238)
          Constant: type='int', value='0x2b' (at pp.c:1238)
        Enumerator: name='CC2420_FMSTATE' (at pp.c:1239)
          Constant: type='int', value='0x2c' (at pp.c:1239)
        Enumerator: name='CC2420_ADCTST' (at pp.c:1240)
          Constant: type='int', value='0x2d' (at pp.c:1240)
        Enumerator: name='CC2420_DACTST' (at pp.c:1241)
          Constant: type='int', value='0x2e' (at pp.c:1241)
        Enumerator: name='CC2420_TOPTST' (at pp.c:1242)
          Constant: type='int', value='0x2f' (at pp.c:1242)
        Enumerator: name='CC2420_TXFIFO' (at pp.c:1243)
          Constant: type='int', value='0x3e' (at pp.c:1243)
        Enumerator: name='CC2420_RXFIFO' (at pp.c:1244)
          Constant: type='int', value='0x3f' (at pp.c:1244)
  Decl: name=None, quals=[], storage=[] (at pp.c:1247)
    Enum: name='cc2420_ram_addr_enums' (at pp.c:1247)
      EnumeratorList:  (at pp.c:1248)
        Enumerator: name='CC2420_RAM_TXFIFO' (at pp.c:1248)
          Constant: type='int', value='0x000' (at pp.c:1248)
        Enumerator: name='CC2420_RAM_RXFIFO' (at pp.c:1249)
          Constant: type='int', value='0x080' (at pp.c:1249)
        Enumerator: name='CC2420_RAM_KEY0' (at pp.c:1250)
          Constant: type='int', value='0x100' (at pp.c:1250)
        Enumerator: name='CC2420_RAM_RXNONCE' (at pp.c:1251)
          Constant: type='int', value='0x110' (at pp.c:1251)
        Enumerator: name='CC2420_RAM_SABUF' (at pp.c:1252)
          Constant: type='int', value='0x120' (at pp.c:1252)
        Enumerator: name='CC2420_RAM_KEY1' (at pp.c:1253)
          Constant: type='int', value='0x130' (at pp.c:1253)
        Enumerator: name='CC2420_RAM_TXNONCE' (at pp.c:1254)
          Constant: type='int', value='0x140' (at pp.c:1254)
        Enumerator: name='CC2420_RAM_CBCSTATE' (at pp.c:1255)
          Constant: type='int', value='0x150' (at pp.c:1255)
        Enumerator: name='CC2420_RAM_IEEEADR' (at pp.c:1256)
          Constant: type='int', value='0x160' (at pp.c:1256)
        Enumerator: name='CC2420_RAM_PANID' (at pp.c:1257)
          Constant: type='int', value='0x168' (at pp.c:1257)
        Enumerator: name='CC2420_RAM_SHORTADR' (at pp.c:1258)
          Constant: type='int', value='0x16a' (at pp.c:1258)
  Decl: name=None, quals=[], storage=[] (at pp.c:1261)
    Enum: name='cc2420_nonce_enums' (at pp.c:1261)
      EnumeratorList:  (at pp.c:1262)
        Enumerator: name='CC2420_NONCE_BLOCK_COUNTER' (at pp.c:1262)
          Constant: type='int', value='0' (at pp.c:1262)
        Enumerator: name='CC2420_NONCE_KEY_SEQ_COUNTER' (at pp.c:1263)
          Constant: type='int', value='2' (at pp.c:1263)
        Enumerator: name='CC2420_NONCE_FRAME_COUNTER' (at pp.c:1264)
          Constant: type='int', value='3' (at pp.c:1264)
        Enumerator: name='CC2420_NONCE_SOURCE_ADDRESS' (at pp.c:1265)
          Constant: type='int', value='7' (at pp.c:1265)
        Enumerator: name='CC2420_NONCE_FLAGS' (at pp.c:1266)
          Constant: type='int', value='15' (at pp.c:1266)
  Decl: name=None, quals=[], storage=[] (at pp.c:1269)
    Enum: name='cc2420_main_enums' (at pp.c:1269)
      EnumeratorList:  (at pp.c:1270)
        Enumerator: name='CC2420_MAIN_RESETn' (at pp.c:1270)
          Constant: type='int', value='15' (at pp.c:1270)
        Enumerator: name='CC2420_MAIN_ENC_RESETn' (at pp.c:1271)
          Constant: type='int', value='14' (at pp.c:1271)
        Enumerator: name='CC2420_MAIN_DEMOD_RESETn' (at pp.c:1272)
          Constant: type='int', value='13' (at pp.c:1272)
        Enumerator: name='CC2420_MAIN_MOD_RESETn' (at pp.c:1273)
          Constant: type='int', value='12' (at pp.c:1273)
        Enumerator: name='CC2420_MAIN_FS_RESETn' (at pp.c:1274)
          Constant: type='int', value='11' (at pp.c:1274)
        Enumerator: name='CC2420_MAIN_XOSC16M_BYPASS' (at pp.c:1275)
          Constant: type='int', value='0' (at pp.c:1275)
  Decl: name=None, quals=[], storage=[] (at pp.c:1278)
    Enum: name='cc2420_mdmctrl0_enums' (at pp.c:1278)
      EnumeratorList:  (at pp.c:1279)
        Enumerator: name='CC2420_MDMCTRL0_RESERVED_FRAME_MODE' (at pp.c:1279)
          Constant: type='int', value='13' (at pp.c:1279)
        Enumerator: name='CC2420_MDMCTRL0_PAN_COORDINATOR' (at pp.c:1280)
          Constant: type='int', value='12' (at pp.c:1280)
        Enumerator: name='CC2420_MDMCTRL0_ADR_DECODE' (at pp.c:1281)
          Constant: type='int', value='11' (at pp.c:1281)
        Enumerator: name='CC2420_MDMCTRL0_CCA_HYST' (at pp.c:1282)
          Constant: type='int', value='8' (at pp.c:1282)
        Enumerator: name='CC2420_MDMCTRL0_CCA_MOD' (at pp.c:1283)
          Constant: type='int', value='6' (at pp.c:1283)
        Enumerator: name='CC2420_MDMCTRL0_AUTOCRC' (at pp.c:1284)
          Constant: type='int', value='5' (at pp.c:1284)
        Enumerator: name='CC2420_MDMCTRL0_AUTOACK' (at pp.c:1285)
          Constant: type='int', value='4' (at pp.c:1285)
        Enumerator: name='CC2420_MDMCTRL0_PREAMBLE_LENGTH' (at pp.c:1286)
          Constant: type='int', value='0' (at pp.c:1286)
  Decl: name=None, quals=[], storage=[] (at pp.c:1289)
    Enum: name='cc2420_mdmctrl1_enums' (at pp.c:1289)
      EnumeratorList:  (at pp.c:1290)
        Enumerator: name='CC2420_MDMCTRL1_CORR_THR' (at pp.c:1290)
          Constant: type='int', value='6' (at pp.c:1290)
        Enumerator: name='CC2420_MDMCTRL1_DEMOD_AVG_MODE' (at pp.c:1291)
          Constant: type='int', value='5' (at pp.c:1291)
        Enumerator: name='CC2420_MDMCTRL1_MODULATION_MODE' (at pp.c:1292)
          Constant: type='int', value='4' (at pp.c:1292)
        Enumerator: name='CC2420_MDMCTRL1_TX_MODE' (at pp.c:1293)
          Constant: type='int', value='2' (at pp.c:1293)
        Enumerator: name='CC2420_MDMCTRL1_RX_MODE' (at pp.c:1294)
          Constant: type='int', value='0' (at pp.c:1294)
  Decl: name=None, quals=[], storage=[] (at pp.c:1297)
    Enum: name='cc2420_rssi_enums' (at pp.c:1297)
      EnumeratorList:  (at pp.c:1298)
        Enumerator: name='CC2420_RSSI_CCA_THR' (at pp.c:1298)
          Constant: type='int', value='8' (at pp.c:1298)
        Enumerator: name='CC2420_RSSI_RSSI_VAL' (at pp.c:1299)
          Constant: type='int', value='0' (at pp.c:1299)
  Decl: name=None, quals=[], storage=[] (at pp.c:1302)
    Enum: name='cc2420_syncword_enums' (at pp.c:1302)
      EnumeratorList:  (at pp.c:1303)
        Enumerator: name='CC2420_SYNCWORD_SYNCWORD' (at pp.c:1303)
          Constant: type='int', value='0' (at pp.c:1303)
  Decl: name=None, quals=[], storage=[] (at pp.c:1306)
    Enum: name='cc2420_txctrl_enums' (at pp.c:1306)
      EnumeratorList:  (at pp.c:1307)
        Enumerator: name='CC2420_TXCTRL_TXMIXBUF_CUR' (at pp.c:1307)
          Constant: type='int', value='14' (at pp.c:1307)
        Enumerator: name='CC2420_TXCTRL_TX_TURNAROUND' (at pp.c:1308)
          Constant: type='int', value='13' (at pp.c:1308)
        Enumerator: name='CC2420_TXCTRL_TXMIX_CAP_ARRAY' (at pp.c:1309)
          Constant: type='int', value='11' (at pp.c:1309)
        Enumerator: name='CC2420_TXCTRL_TXMIX_CURRENT' (at pp.c:1310)
          Constant: type='int', value='9' (at pp.c:1310)
        Enumerator: name='CC2420_TXCTRL_PA_CURRENT' (at pp.c:1311)
          Constant: type='int', value='6' (at pp.c:1311)
        Enumerator: name='CC2420_TXCTRL_RESERVED' (at pp.c:1312)
          Constant: type='int', value='5' (at pp.c:1312)
        Enumerator: name='CC2420_TXCTRL_PA_LEVEL' (at pp.c:1313)
          Constant: type='int', value='0' (at pp.c:1313)
  Decl: name=None, quals=[], storage=[] (at pp.c:1316)
    Enum: name='cc2420_rxctrl0_enums' (at pp.c:1316)
      EnumeratorList:  (at pp.c:1317)
        Enumerator: name='CC2420_RXCTRL0_RXMIXBUF_CUR' (at pp.c:1317)
          Constant: type='int', value='12' (at pp.c:1317)
        Enumerator: name='CC2420_RXCTRL0_HIGH_LNA_GAIN' (at pp.c:1318)
          Constant: type='int', value='10' (at pp.c:1318)
        Enumerator: name='CC2420_RXCTRL0_MED_LNA_GAIN' (at pp.c:1319)
          Constant: type='int', value='8' (at pp.c:1319)
        Enumerator: name='CC2420_RXCTRL0_LOW_LNA_GAIN' (at pp.c:1320)
          Constant: type='int', value='6' (at pp.c:1320)
        Enumerator: name='CC2420_RXCTRL0_HIGH_LNA_CURRENT' (at pp.c:1321)
          Constant: type='int', value='4' (at pp.c:1321)
        Enumerator: name='CC2420_RXCTRL0_MED_LNA_CURRENT' (at pp.c:1322)
          Constant: type='int', value='2' (at pp.c:1322)
        Enumerator: name='CC2420_RXCTRL0_LOW_LNA_CURRENT' (at pp.c:1323)
          Constant: type='int', value='0' (at pp.c:1323)
  Decl: name=None, quals=[], storage=[] (at pp.c:1326)
    Enum: name='cc2420_rxctrl1_enums' (at pp.c:1326)
      EnumeratorList:  (at pp.c:1327)
        Enumerator: name='CC2420_RXCTRL1_RXBPF_LOCUR' (at pp.c:1327)
          Constant: type='int', value='13' (at pp.c:1327)
        Enumerator: name='CC2420_RXCTRL1_RXBPF_MIDCUR' (at pp.c:1328)
          Constant: type='int', value='12' (at pp.c:1328)
        Enumerator: name='CC2420_RXCTRL1_LOW_LOWGAIN' (at pp.c:1329)
          Constant: type='int', value='11' (at pp.c:1329)
        Enumerator: name='CC2420_RXCTRL1_MED_LOWGAIN' (at pp.c:1330)
          Constant: type='int', value='10' (at pp.c:1330)
        Enumerator: name='CC2420_RXCTRL1_HIGH_HGM' (at pp.c:1331)
          Constant: type='int', value='9' (at pp.c:1331)
        Enumerator: name='CC2420_RXCTRL1_MED_HGM' (at pp.c:1332)
          Constant: type='int', value='8' (at pp.c:1332)
        Enumerator: name='CC2420_RXCTRL1_LNA_CAP_ARRAY' (at pp.c:1333)
          Constant: type='int', value='6' (at pp.c:1333)
        Enumerator: name='CC2420_RXCTRL1_RXMIX_TAIL' (at pp.c:1334)
          Constant: type='int', value='4' (at pp.c:1334)
        Enumerator: name='CC2420_RXCTRL1_RXMIX_VCM' (at pp.c:1335)
          Constant: type='int', value='2' (at pp.c:1335)
        Enumerator: name='CC2420_RXCTRL1_RXMIX_CURRENT' (at pp.c:1336)
          Constant: type='int', value='0' (at pp.c:1336)
  Decl: name=None, quals=[], storage=[] (at pp.c:1339)
    Enum: name='cc2420_rsctrl_enums' (at pp.c:1339)
      EnumeratorList:  (at pp.c:1340)
        Enumerator: name='CC2420_FSCTRL_LOCK_THR' (at pp.c:1340)
          Constant: type='int', value='14' (at pp.c:1340)
        Enumerator: name='CC2420_FSCTRL_CAL_DONE' (at pp.c:1341)
          Constant: type='int', value='13' (at pp.c:1341)
        Enumerator: name='CC2420_FSCTRL_CAL_RUNNING' (at pp.c:1342)
          Constant: type='int', value='12' (at pp.c:1342)
        Enumerator: name='CC2420_FSCTRL_LOCK_LENGTH' (at pp.c:1343)
          Constant: type='int', value='11' (at pp.c:1343)
        Enumerator: name='CC2420_FSCTRL_LOCK_STATUS' (at pp.c:1344)
          Constant: type='int', value='10' (at pp.c:1344)
        Enumerator: name='CC2420_FSCTRL_FREQ' (at pp.c:1345)
          Constant: type='int', value='0' (at pp.c:1345)
  Decl: name=None, quals=[], storage=[] (at pp.c:1348)
    Enum: name='cc2420_secctrl0_enums' (at pp.c:1348)
      EnumeratorList:  (at pp.c:1349)
        Enumerator: name='CC2420_SECCTRL0_RXFIFO_PROTECTION' (at pp.c:1349)
          Constant: type='int', value='9' (at pp.c:1349)
        Enumerator: name='CC2420_SECCTRL0_SEC_CBC_HEAD' (at pp.c:1350)
          Constant: type='int', value='8' (at pp.c:1350)
        Enumerator: name='CC2420_SECCTRL0_SEC_SAKEYSEL' (at pp.c:1351)
          Constant: type='int', value='7' (at pp.c:1351)
        Enumerator: name='CC2420_SECCTRL0_SEC_TXKEYSEL' (at pp.c:1352)
          Constant: type='int', value='6' (at pp.c:1352)
        Enumerator: name='CC2420_SECCTRL0_SEC_RXKEYSEL' (at pp.c:1353)
          Constant: type='int', value='5' (at pp.c:1353)
        Enumerator: name='CC2420_SECCTRL0_SEC_M' (at pp.c:1354)
          Constant: type='int', value='2' (at pp.c:1354)
        Enumerator: name='CC2420_SECCTRL0_SEC_MODE' (at pp.c:1355)
          Constant: type='int', value='0' (at pp.c:1355)
  Decl: name=None, quals=[], storage=[] (at pp.c:1358)
    Enum: name='cc2420_secctrl1_enums' (at pp.c:1358)
      EnumeratorList:  (at pp.c:1359)
        Enumerator: name='CC2420_SECCTRL1_SEC_TXL' (at pp.c:1359)
          Constant: type='int', value='8' (at pp.c:1359)
        Enumerator: name='CC2420_SECCTRL1_SEC_RXL' (at pp.c:1360)
          Constant: type='int', value='0' (at pp.c:1360)
  Decl: name=None, quals=[], storage=[] (at pp.c:1363)
    Enum: name='cc2420_battmon_enums' (at pp.c:1363)
      EnumeratorList:  (at pp.c:1364)
        Enumerator: name='CC2420_BATTMON_BATT_OK' (at pp.c:1364)
          Constant: type='int', value='6' (at pp.c:1364)
        Enumerator: name='CC2420_BATTMON_BATTMON_EN' (at pp.c:1365)
          Constant: type='int', value='5' (at pp.c:1365)
        Enumerator: name='CC2420_BATTMON_BATTMON_VOLTAGE' (at pp.c:1366)
          Constant: type='int', value='0' (at pp.c:1366)
  Decl: name=None, quals=[], storage=[] (at pp.c:1369)
    Enum: name='cc2420_iocfg0_enums' (at pp.c:1369)
      EnumeratorList:  (at pp.c:1370)
        Enumerator: name='CC2420_IOCFG0_BCN_ACCEPT' (at pp.c:1370)
          Constant: type='int', value='11' (at pp.c:1370)
        Enumerator: name='CC2420_IOCFG0_FIFO_POLARITY' (at pp.c:1371)
          Constant: type='int', value='10' (at pp.c:1371)
        Enumerator: name='CC2420_IOCFG0_FIFOP_POLARITY' (at pp.c:1372)
          Constant: type='int', value='9' (at pp.c:1372)
        Enumerator: name='CC2420_IOCFG0_SFD_POLARITY' (at pp.c:1373)
          Constant: type='int', value='8' (at pp.c:1373)
        Enumerator: name='CC2420_IOCFG0_CCA_POLARITY' (at pp.c:1374)
          Constant: type='int', value='7' (at pp.c:1374)
        Enumerator: name='CC2420_IOCFG0_FIFOP_THR' (at pp.c:1375)
          Constant: type='int', value='0' (at pp.c:1375)
  Decl: name=None, quals=[], storage=[] (at pp.c:1378)
    Enum: name='cc2420_iocfg1_enums' (at pp.c:1378)
      EnumeratorList:  (at pp.c:1379)
        Enumerator: name='CC2420_IOCFG1_HSSD_SRC' (at pp.c:1379)
          Constant: type='int', value='10' (at pp.c:1379)
        Enumerator: name='CC2420_IOCFG1_SFDMUX' (at pp.c:1380)
          Constant: type='int', value='5' (at pp.c:1380)
        Enumerator: name='CC2420_IOCFG1_CCAMUX' (at pp.c:1381)
          Constant: type='int', value='0' (at pp.c:1381)
  Decl: name=None, quals=[], storage=[] (at pp.c:1384)
    Enum: name='cc2420_manfidl_enums' (at pp.c:1384)
      EnumeratorList:  (at pp.c:1385)
        Enumerator: name='CC2420_MANFIDL_PARTNUM' (at pp.c:1385)
          Constant: type='int', value='12' (at pp.c:1385)
        Enumerator: name='CC2420_MANFIDL_MANFID' (at pp.c:1386)
          Constant: type='int', value='0' (at pp.c:1386)
  Decl: name=None, quals=[], storage=[] (at pp.c:1389)
    Enum: name='cc2420_manfidh_enums' (at pp.c:1389)
      EnumeratorList:  (at pp.c:1390)
        Enumerator: name='CC2420_MANFIDH_VERSION' (at pp.c:1390)
          Constant: type='int', value='12' (at pp.c:1390)
        Enumerator: name='CC2420_MANFIDH_PARTNUM' (at pp.c:1391)
          Constant: type='int', value='0' (at pp.c:1391)
  Decl: name=None, quals=[], storage=[] (at pp.c:1394)
    Enum: name='cc2420_fsmtc_enums' (at pp.c:1394)
      EnumeratorList:  (at pp.c:1395)
        Enumerator: name='CC2420_FSMTC_TC_RXCHAIN2RX' (at pp.c:1395)
          Constant: type='int', value='13' (at pp.c:1395)
        Enumerator: name='CC2420_FSMTC_TC_SWITCH2TX' (at pp.c:1396)
          Constant: type='int', value='10' (at pp.c:1396)
        Enumerator: name='CC2420_FSMTC_TC_PAON2TX' (at pp.c:1397)
          Constant: type='int', value='6' (at pp.c:1397)
        Enumerator: name='CC2420_FSMTC_TC_TXEND2SWITCH' (at pp.c:1398)
          Constant: type='int', value='3' (at pp.c:1398)
        Enumerator: name='CC2420_FSMTC_TC_TXEND2PAOFF' (at pp.c:1399)
          Constant: type='int', value='0' (at pp.c:1399)
  Decl: name=None, quals=[], storage=[] (at pp.c:1402)
    Enum: name='cc2420_sfdmux_enums' (at pp.c:1402)
      EnumeratorList:  (at pp.c:1403)
        Enumerator: name='CC2420_SFDMUX_SFD' (at pp.c:1403)
          Constant: type='int', value='0' (at pp.c:1403)
        Enumerator: name='CC2420_SFDMUX_XOSC16M_STABLE' (at pp.c:1404)
          Constant: type='int', value='24' (at pp.c:1404)
  Decl: name=None, quals=[], storage=[] (at pp.c:1407)
    Enum: name='cc2420_security_enums' (at pp.c:1407)
      EnumeratorList:  (at pp.c:1408)
        Enumerator: name='CC2420_NO_SEC' (at pp.c:1408)
          Constant: type='int', value='0' (at pp.c:1408)
        Enumerator: name='CC2420_CBC_MAC' (at pp.c:1409)
          Constant: type='int', value='1' (at pp.c:1409)
        Enumerator: name='CC2420_CTR' (at pp.c:1410)
          Constant: type='int', value='2' (at pp.c:1410)
        Enumerator: name='CC2420_CCM' (at pp.c:1411)
          Constant: type='int', value='3' (at pp.c:1411)
        Enumerator: name='NO_SEC' (at pp.c:1412)
          Constant: type='int', value='0' (at pp.c:1412)
        Enumerator: name='CBC_MAC_4' (at pp.c:1413)
          Constant: type='int', value='1' (at pp.c:1413)
        Enumerator: name='CBC_MAC_8' (at pp.c:1414)
          Constant: type='int', value='2' (at pp.c:1414)
        Enumerator: name='CBC_MAC_16' (at pp.c:1415)
          Constant: type='int', value='3' (at pp.c:1415)
        Enumerator: name='CTR' (at pp.c:1416)
          Constant: type='int', value='4' (at pp.c:1416)
        Enumerator: name='CCM_4' (at pp.c:1417)
          Constant: type='int', value='5' (at pp.c:1417)
        Enumerator: name='CCM_8' (at pp.c:1418)
          Constant: type='int', value='6' (at pp.c:1418)
        Enumerator: name='CCM_16' (at pp.c:1419)
          Constant: type='int', value='7' (at pp.c:1419)
  Decl: name=None, quals=[], storage=[] (at pp.c:1423)
    Enum: name='__nesc_unnamed4269' (at pp.c:1423)
      EnumeratorList:  (at pp.c:1425)
        Enumerator: name='CC2420_INVALID_TIMESTAMP' (at pp.c:1425)
          Constant: type='int', value='0x80000000L' (at pp.c:1425)
  Typedef: name='message_header_t', quals=[], storage=['typedef'] (at pp.c:1432)
    TypeDecl: declname='message_header_t', quals=[] (at pp.c:1432)
      Union: name='message_header', packed=False (at pp.c:1429)
        Decl: name='cc2420', quals=[], storage=[] (at 0)
          TypeDecl: declname='cc2420', quals=[] (at pp.c:1430)
            IdentifierType: names=['cc2420_header_t'] (at None)
        Decl: name='serial', quals=[], storage=[] (at 0)
          TypeDecl: declname='serial', quals=[] (at pp.c:1431)
            IdentifierType: names=['serial_header_t'] (at None)
  Typedef: name='message_footer_t', quals=[], storage=['typedef'] (at pp.c:1439)
    TypeDecl: declname='message_footer_t', quals=[] (at pp.c:1439)
      Union: name='TOSRadioFooter', packed=False (at pp.c:1437)
        Decl: name='cc2420', quals=[], storage=[] (at 0)
          TypeDecl: declname='cc2420', quals=[] (at pp.c:1438)
            IdentifierType: names=['cc2420_footer_t'] (at None)
  Typedef: name='message_metadata_t', quals=[], storage=['typedef'] (at pp.c:1446)
    TypeDecl: declname='message_metadata_t', quals=[] (at pp.c:1446)
      Union: name='TOSRadioMetadata', packed=False (at pp.c:1444)
        Decl: name='cc2420', quals=[], storage=[] (at 0)
          TypeDecl: declname='cc2420', quals=[] (at pp.c:1445)
            IdentifierType: names=['cc2420_metadata_t'] (at None)
  Typedef: name='message_t', quals=[], storage=['typedef'] (at pp.c:1454)
    TypeDecl: declname='message_t', quals=[] (at pp.c:1454)
      Struct: name='message_t', packed=False (at pp.c:1449)
        Decl: name='header', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:1450)
            TypeDecl: declname='header', quals=[] (at pp.c:1450)
              IdentifierType: names=['nx_uint8_t'] (at None)
            UnaryOp: op='sizeof' (at pp.c:1450)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['message_header_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:1451)
            TypeDecl: declname='data', quals=[] (at pp.c:1451)
              IdentifierType: names=['nx_uint8_t'] (at None)
            Constant: type='int', value='28' (at pp.c:1451)
        Decl: name='footer', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:1452)
            TypeDecl: declname='footer', quals=[] (at pp.c:1452)
              IdentifierType: names=['nx_uint8_t'] (at None)
            UnaryOp: op='sizeof' (at pp.c:1452)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['message_footer_t'] (at None)
        Decl: name='metadata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:1453)
            TypeDecl: declname='metadata', quals=[] (at pp.c:1453)
              IdentifierType: names=['nx_uint8_t'] (at None)
            UnaryOp: op='sizeof' (at pp.c:1453)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['message_metadata_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1456)
    Enum: name='__nesc_unnamed4270' (at pp.c:1456)
      EnumeratorList:  (at pp.c:1457)
        Enumerator: name='LEDS_LED0' (at pp.c:1457)
          BinaryOp: op='<<' (at pp.c:1457)
            Constant: type='int', value='1' (at pp.c:1457)
            Constant: type='int', value='0' (at pp.c:1457)
        Enumerator: name='LEDS_LED1' (at pp.c:1458)
          BinaryOp: op='<<' (at pp.c:1458)
            Constant: type='int', value='1' (at pp.c:1458)
            Constant: type='int', value='1' (at pp.c:1458)
        Enumerator: name='LEDS_LED2' (at pp.c:1459)
          BinaryOp: op='<<' (at pp.c:1459)
            Constant: type='int', value='1' (at pp.c:1459)
            Constant: type='int', value='2' (at pp.c:1459)
        Enumerator: name='LEDS_LED3' (at pp.c:1460)
          BinaryOp: op='<<' (at pp.c:1460)
            Constant: type='int', value='1' (at pp.c:1460)
            Constant: type='int', value='3' (at pp.c:1460)
        Enumerator: name='LEDS_LED4' (at pp.c:1461)
          BinaryOp: op='<<' (at pp.c:1461)
            Constant: type='int', value='1' (at pp.c:1461)
            Constant: type='int', value='4' (at pp.c:1461)
        Enumerator: name='LEDS_LED5' (at pp.c:1462)
          BinaryOp: op='<<' (at pp.c:1462)
            Constant: type='int', value='1' (at pp.c:1462)
            Constant: type='int', value='5' (at pp.c:1462)
        Enumerator: name='LEDS_LED6' (at pp.c:1463)
          BinaryOp: op='<<' (at pp.c:1463)
            Constant: type='int', value='1' (at pp.c:1463)
            Constant: type='int', value='6' (at pp.c:1463)
        Enumerator: name='LEDS_LED7' (at pp.c:1464)
          BinaryOp: op='<<' (at pp.c:1464)
            Constant: type='int', value='1' (at pp.c:1464)
            Constant: type='int', value='7' (at pp.c:1464)
  Typedef: name='TMilli', quals=[], storage=['typedef'] (at pp.c:1472)
    TypeDecl: declname='TMilli', quals=[] (at pp.c:1472)
      Struct: name='__nesc_unnamed4271', packed=False (at pp.c:1467)
        Decl: name='notUsed', quals=[], storage=[] (at 0)
          TypeDecl: declname='notUsed', quals=[] (at pp.c:1469)
            IdentifierType: names=['int'] (at None)
  Typedef: name='T32khz', quals=[], storage=['typedef'] (at pp.c:1478)
    TypeDecl: declname='T32khz', quals=[] (at pp.c:1478)
      Struct: name='__nesc_unnamed4272', packed=False (at pp.c:1473)
        Decl: name='notUsed', quals=[], storage=[] (at 0)
          TypeDecl: declname='notUsed', quals=[] (at pp.c:1475)
            IdentifierType: names=['int'] (at None)
  Typedef: name='TMicro', quals=[], storage=['typedef'] (at pp.c:1484)
    TypeDecl: declname='TMicro', quals=[] (at pp.c:1484)
      Struct: name='__nesc_unnamed4273', packed=False (at pp.c:1479)
        Decl: name='notUsed', quals=[], storage=[] (at 0)
          TypeDecl: declname='notUsed', quals=[] (at pp.c:1481)
            IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1486)
    Enum: name='__nesc_unnamed4274' (at pp.c:1486)
      EnumeratorList:  (at pp.c:1488)
        Enumerator: name='IEEE_EUI64_LENGTH' (at pp.c:1488)
          Constant: type='int', value='8' (at pp.c:1488)
  Typedef: name='ieee_eui64_t', quals=[], storage=['typedef'] (at pp.c:1495)
    TypeDecl: declname='ieee_eui64_t', quals=[] (at pp.c:1495)
      Struct: name='ieee_eui64', packed=False (at pp.c:1493)
        Decl: name='data', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:1494)
            TypeDecl: declname='data', quals=[] (at pp.c:1494)
              IdentifierType: names=['uint8_t'] (at None)
            ID: name='IEEE_EUI64_LENGTH' (at pp.c:1494)
  Typedef: name='ieee154_panid_t', quals=[], storage=['typedef'] (at pp.c:1497)
    TypeDecl: declname='ieee154_panid_t', quals=[] (at pp.c:1497)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='ieee154_saddr_t', quals=[], storage=['typedef'] (at pp.c:1498)
    TypeDecl: declname='ieee154_saddr_t', quals=[] (at pp.c:1498)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='ieee154_laddr_t', quals=[], storage=['typedef'] (at pp.c:1499)
    TypeDecl: declname='ieee154_laddr_t', quals=[] (at pp.c:1499)
      IdentifierType: names=['ieee_eui64_t'] (at None)
  Typedef: name='ieee154_addr_t', quals=[], storage=['typedef'] (at pp.c:1514)
    TypeDecl: declname='ieee154_addr_t', quals=[] (at pp.c:1514)
      Struct: name='__nesc_unnamed4275', packed=False (at pp.c:1508)
        Decl: name='ieee_mode', quals=[], storage=[] (at 0)
          TypeDecl: declname='ieee_mode', quals=[] (at pp.c:1509)
            IdentifierType: names=['uint8_t'] (at None)
          Constant: type='int', value='2' (at pp.c:1509)
        Decl: name='ieee_addr', quals=[], storage=[] (at 0)
          TypeDecl: declname='ieee_addr', quals=[] (at pp.c:1513)
            Union: name='__nesc_unnamed4276', packed=False (at pp.c:1510)
              Decl: name='saddr', quals=[], storage=[] (at 0)
                TypeDecl: declname='saddr', quals=[] (at pp.c:1511)
                  IdentifierType: names=['ieee154_saddr_t'] (at None)
              Decl: name='laddr', quals=[], storage=[] (at 0)
                TypeDecl: declname='laddr', quals=[] (at pp.c:1512)
                  IdentifierType: names=['ieee154_laddr_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1518)
    Enum: name='__nesc_unnamed4277' (at pp.c:1518)
      EnumeratorList:  (at pp.c:1519)
        Enumerator: name='IEEE154_BROADCAST_ADDR' (at pp.c:1519)
          Constant: type='int', value='0xffff' (at pp.c:1519)
        Enumerator: name='IEEE154_LINK_MTU' (at pp.c:1520)
          Constant: type='int', value='127' (at pp.c:1520)
  Decl: name=None, quals=[], storage=[] (at pp.c:1523)
    Struct: name='ieee154_frame_addr', packed=False (at pp.c:1523)
      Decl: name='ieee_src', quals=[], storage=[] (at 0)
        TypeDecl: declname='ieee_src', quals=[] (at pp.c:1524)
          IdentifierType: names=['ieee154_addr_t'] (at None)
      Decl: name='ieee_dst', quals=[], storage=[] (at 0)
        TypeDecl: declname='ieee_dst', quals=[] (at pp.c:1525)
          IdentifierType: names=['ieee154_addr_t'] (at None)
      Decl: name='ieee_dstpan', quals=[], storage=[] (at 0)
        TypeDecl: declname='ieee_dstpan', quals=[] (at pp.c:1526)
          IdentifierType: names=['ieee154_panid_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1529)
    Enum: name='__nesc_unnamed4278' (at pp.c:1529)
      EnumeratorList:  (at pp.c:1530)
        Enumerator: name='IEEE154_MIN_HDR_SZ' (at pp.c:1530)
          Constant: type='int', value='6' (at pp.c:1530)
  Decl: name=None, quals=[], storage=[] (at pp.c:1533)
    Enum: name='ieee154_fcf_enums' (at pp.c:1533)
      EnumeratorList:  (at pp.c:1534)
        Enumerator: name='IEEE154_FCF_FRAME_TYPE' (at pp.c:1534)
          Constant: type='int', value='0' (at pp.c:1534)
        Enumerator: name='IEEE154_FCF_SECURITY_ENABLED' (at pp.c:1535)
          Constant: type='int', value='3' (at pp.c:1535)
        Enumerator: name='IEEE154_FCF_FRAME_PENDING' (at pp.c:1536)
          Constant: type='int', value='4' (at pp.c:1536)
        Enumerator: name='IEEE154_FCF_ACK_REQ' (at pp.c:1537)
          Constant: type='int', value='5' (at pp.c:1537)
        Enumerator: name='IEEE154_FCF_INTRAPAN' (at pp.c:1538)
          Constant: type='int', value='6' (at pp.c:1538)
        Enumerator: name='IEEE154_FCF_DEST_ADDR_MODE' (at pp.c:1539)
          Constant: type='int', value='10' (at pp.c:1539)
        Enumerator: name='IEEE154_FCF_SRC_ADDR_MODE' (at pp.c:1540)
          Constant: type='int', value='14' (at pp.c:1540)
  Decl: name=None, quals=[], storage=[] (at pp.c:1543)
    Enum: name='ieee154_fcf_type_enums' (at pp.c:1543)
      EnumeratorList:  (at pp.c:1544)
        Enumerator: name='IEEE154_TYPE_BEACON' (at pp.c:1544)
          Constant: type='int', value='0' (at pp.c:1544)
        Enumerator: name='IEEE154_TYPE_DATA' (at pp.c:1545)
          Constant: type='int', value='1' (at pp.c:1545)
        Enumerator: name='IEEE154_TYPE_ACK' (at pp.c:1546)
          Constant: type='int', value='2' (at pp.c:1546)
        Enumerator: name='IEEE154_TYPE_MAC_CMD' (at pp.c:1547)
          Constant: type='int', value='3' (at pp.c:1547)
  Decl: name=None, quals=[], storage=[] (at pp.c:1550)
    Enum: name='iee154_fcf_addr_mode_enums' (at pp.c:1550)
      EnumeratorList:  (at pp.c:1551)
        Enumerator: name='IEEE154_ADDR_NONE' (at pp.c:1551)
          Constant: type='int', value='0' (at pp.c:1551)
        Enumerator: name='IEEE154_ADDR_SHORT' (at pp.c:1552)
          Constant: type='int', value='2' (at pp.c:1552)
        Enumerator: name='IEEE154_ADDR_EXT' (at pp.c:1553)
          Constant: type='int', value='3' (at pp.c:1553)
  Typedef: name='msp430_usartmode_t', quals=[], storage=['typedef'] (at pp.c:1565)
    TypeDecl: declname='msp430_usartmode_t', quals=[] (at pp.c:1565)
      Enum: name='__nesc_unnamed4279' (at pp.c:1557)
        EnumeratorList:  (at pp.c:1559)
          Enumerator: name='USART_NONE' (at pp.c:1559)
            Constant: type='int', value='0' (at pp.c:1559)
          Enumerator: name='USART_UART' (at pp.c:1560)
            Constant: type='int', value='1' (at pp.c:1560)
          Enumerator: name='USART_UART_TX' (at pp.c:1561)
            Constant: type='int', value='2' (at pp.c:1561)
          Enumerator: name='USART_UART_RX' (at pp.c:1562)
            Constant: type='int', value='3' (at pp.c:1562)
          Enumerator: name='USART_SPI' (at pp.c:1563)
            Constant: type='int', value='4' (at pp.c:1563)
          Enumerator: name='USART_I2C' (at pp.c:1564)
            Constant: type='int', value='5' (at pp.c:1564)
  Typedef: name='msp430_uctl_t', quals=[], storage=['typedef'] (at pp.c:1586)
    TypeDecl: declname='msp430_uctl_t', quals=[] (at pp.c:1586)
      Struct: name='__nesc_unnamed4280', packed=True (at pp.c:1577)
        Decl: name='swrst', quals=[], storage=[] (at 0)
          TypeDecl: declname='swrst', quals=[] (at pp.c:1578)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1578)
        Decl: name='mm', quals=[], storage=[] (at 0)
          TypeDecl: declname='mm', quals=[] (at pp.c:1579)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1579)
        Decl: name='sync', quals=[], storage=[] (at 0)
          TypeDecl: declname='sync', quals=[] (at pp.c:1580)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1580)
        Decl: name='listen', quals=[], storage=[] (at 0)
          TypeDecl: declname='listen', quals=[] (at pp.c:1581)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1581)
        Decl: name='clen', quals=[], storage=[] (at 0)
          TypeDecl: declname='clen', quals=[] (at pp.c:1582)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1582)
        Decl: name='spb', quals=[], storage=[] (at 0)
          TypeDecl: declname='spb', quals=[] (at pp.c:1583)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1583)
        Decl: name='pev', quals=[], storage=[] (at 0)
          TypeDecl: declname='pev', quals=[] (at pp.c:1584)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1584)
        Decl: name='pena', quals=[], storage=[] (at 0)
          TypeDecl: declname='pena', quals=[] (at pp.c:1585)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1585)
  Typedef: name='msp430_utctl_t', quals=[], storage=['typedef'] (at pp.c:1605)
    TypeDecl: declname='msp430_utctl_t', quals=[] (at pp.c:1605)
      Struct: name='__nesc_unnamed4281', packed=True (at pp.c:1597)
        Decl: name='txept', quals=[], storage=[] (at 0)
          TypeDecl: declname='txept', quals=[] (at pp.c:1598)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1598)
        Decl: name='stc', quals=[], storage=[] (at 0)
          TypeDecl: declname='stc', quals=[] (at pp.c:1599)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1599)
        Decl: name='txwake', quals=[], storage=[] (at 0)
          TypeDecl: declname='txwake', quals=[] (at pp.c:1600)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1600)
        Decl: name='urxse', quals=[], storage=[] (at 0)
          TypeDecl: declname='urxse', quals=[] (at pp.c:1601)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1601)
        Decl: name='ssel', quals=[], storage=[] (at 0)
          TypeDecl: declname='ssel', quals=[] (at pp.c:1602)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:1602)
        Decl: name='ckpl', quals=[], storage=[] (at 0)
          TypeDecl: declname='ckpl', quals=[] (at pp.c:1603)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1603)
        Decl: name='ckph', quals=[], storage=[] (at 0)
          TypeDecl: declname='ckph', quals=[] (at pp.c:1604)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1604)
  Typedef: name='msp430_urctl_t', quals=[], storage=['typedef'] (at pp.c:1626)
    TypeDecl: declname='msp430_urctl_t', quals=[] (at pp.c:1626)
      Struct: name='__nesc_unnamed4282', packed=True (at pp.c:1617)
        Decl: name='rxerr', quals=[], storage=[] (at 0)
          TypeDecl: declname='rxerr', quals=[] (at pp.c:1618)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1618)
        Decl: name='rxwake', quals=[], storage=[] (at 0)
          TypeDecl: declname='rxwake', quals=[] (at pp.c:1619)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1619)
        Decl: name='urxwie', quals=[], storage=[] (at 0)
          TypeDecl: declname='urxwie', quals=[] (at pp.c:1620)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1620)
        Decl: name='urxeie', quals=[], storage=[] (at 0)
          TypeDecl: declname='urxeie', quals=[] (at pp.c:1621)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1621)
        Decl: name='brk', quals=[], storage=[] (at 0)
          TypeDecl: declname='brk', quals=[] (at pp.c:1622)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1622)
        Decl: name='oe', quals=[], storage=[] (at 0)
          TypeDecl: declname='oe', quals=[] (at pp.c:1623)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1623)
        Decl: name='pe', quals=[], storage=[] (at 0)
          TypeDecl: declname='pe', quals=[] (at pp.c:1624)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1624)
        Decl: name='fe', quals=[], storage=[] (at 0)
          TypeDecl: declname='fe', quals=[] (at pp.c:1625)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1625)
  Typedef: name='msp430_spi_config_t', quals=[], storage=['typedef'] (at pp.c:1646)
    TypeDecl: declname='msp430_spi_config_t', quals=[] (at pp.c:1646)
      Struct: name='__nesc_unnamed4283', packed=False (at pp.c:1629)
        Decl: name='ubr', quals=[], storage=[] (at 0)
          TypeDecl: declname='ubr', quals=[] (at pp.c:1630)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='16' (at pp.c:1630)
        Decl: name='dupnx', quals=[], storage=[] (at 0)
          TypeDecl: declname='dupnx', quals=[] (at pp.c:1632)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1632)
        Decl: name='mm', quals=[], storage=[] (at 0)
          TypeDecl: declname='mm', quals=[] (at pp.c:1633)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1633)
        Decl: name='vgdci', quals=[], storage=[] (at 0)
          TypeDecl: declname='vgdci', quals=[] (at pp.c:1634)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1634)
        Decl: name='listen', quals=[], storage=[] (at 0)
          TypeDecl: declname='listen', quals=[] (at pp.c:1635)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1635)
        Decl: name='clen', quals=[], storage=[] (at 0)
          TypeDecl: declname='clen', quals=[] (at pp.c:1636)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1636)
        Decl: name='lbxjy', quals=[], storage=[] (at 0)
          TypeDecl: declname='lbxjy', quals=[] (at pp.c:1637)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:1637)
        Decl: name='mmbsa', quals=[], storage=[] (at 0)
          TypeDecl: declname='mmbsa', quals=[] (at pp.c:1639)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1639)
        Decl: name='stc', quals=[], storage=[] (at 0)
          TypeDecl: declname='stc', quals=[] (at pp.c:1640)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1640)
        Decl: name='tenzv', quals=[], storage=[] (at 0)
          TypeDecl: declname='tenzv', quals=[] (at pp.c:1641)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:1641)
        Decl: name='ssel', quals=[], storage=[] (at 0)
          TypeDecl: declname='ssel', quals=[] (at pp.c:1642)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:1642)
        Decl: name='ckpl', quals=[], storage=[] (at 0)
          TypeDecl: declname='ckpl', quals=[] (at pp.c:1643)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1643)
        Decl: name='ckph', quals=[], storage=[] (at 0)
          TypeDecl: declname='ckph', quals=[] (at pp.c:1644)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1644)
        Decl: name='kyzxy', quals=[], storage=[] (at 0)
          TypeDecl: declname='kyzxy', quals=[] (at pp.c:1645)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='0' (at pp.c:1645)
  Typedef: name='msp430_spi_registers_t', quals=[], storage=['typedef'] (at pp.c:1657)
    TypeDecl: declname='msp430_spi_registers_t', quals=[] (at pp.c:1657)
      Struct: name='__nesc_unnamed4284', packed=False (at pp.c:1653)
        Decl: name='ubr', quals=[], storage=[] (at 0)
          TypeDecl: declname='ubr', quals=[] (at pp.c:1654)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='uctl', quals=[], storage=[] (at 0)
          TypeDecl: declname='uctl', quals=[] (at pp.c:1655)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='utctl', quals=[], storage=[] (at 0)
          TypeDecl: declname='utctl', quals=[] (at pp.c:1656)
            IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='msp430_spi_union_config_t', quals=[], storage=['typedef'] (at pp.c:1666)
    TypeDecl: declname='msp430_spi_union_config_t', quals=[] (at pp.c:1666)
      Union: name='__nesc_unnamed4285', packed=False (at pp.c:1663)
        Decl: name='spiConfig', quals=[], storage=[] (at 0)
          TypeDecl: declname='spiConfig', quals=[] (at pp.c:1664)
            IdentifierType: names=['msp430_spi_config_t'] (at None)
        Decl: name='spiRegisters', quals=[], storage=[] (at 0)
          TypeDecl: declname='spiRegisters', quals=[] (at pp.c:1665)
            IdentifierType: names=['msp430_spi_registers_t'] (at None)
  Decl: name='msp430_spi_default_config', quals=[], storage=[] (at pp.c:1668)
    TypeDecl: declname='msp430_spi_default_config', quals=[] (at pp.c:1668)
      IdentifierType: names=['msp430_spi_union_config_t'] (at None)
    ExprList:  (at pp.c:1670)
      ExprList:  (at pp.c:1670)
        Assignment: op='=' (at pp.c:1670)
          StructRef: type='.' (at pp.c:1670)
            ID: name='ubr' (at pp.c:1670)
          Constant: type='int', value='0x0002' (at pp.c:1670)
        Assignment: op='=' (at pp.c:1671)
          StructRef: type='.' (at pp.c:1671)
            ID: name='ssel' (at pp.c:1671)
          Constant: type='int', value='0x02' (at pp.c:1671)
        Assignment: op='=' (at pp.c:1672)
          StructRef: type='.' (at pp.c:1672)
            ID: name='clen' (at pp.c:1672)
          Constant: type='int', value='1' (at pp.c:1672)
        Assignment: op='=' (at pp.c:1673)
          StructRef: type='.' (at pp.c:1673)
            ID: name='listen' (at pp.c:1673)
          Constant: type='int', value='0' (at pp.c:1673)
        Assignment: op='=' (at pp.c:1674)
          StructRef: type='.' (at pp.c:1674)
            ID: name='mm' (at pp.c:1674)
          Constant: type='int', value='1' (at pp.c:1674)
        Assignment: op='=' (at pp.c:1675)
          StructRef: type='.' (at pp.c:1675)
            ID: name='ckph' (at pp.c:1675)
          Constant: type='int', value='1' (at pp.c:1675)
        Assignment: op='=' (at pp.c:1676)
          StructRef: type='.' (at pp.c:1676)
            ID: name='ckpl' (at pp.c:1676)
          Constant: type='int', value='0' (at pp.c:1676)
        Assignment: op='=' (at pp.c:1677)
          StructRef: type='.' (at pp.c:1677)
            ID: name='stc' (at pp.c:1677)
          Constant: type='int', value='1' (at pp.c:1677)
  Typedef: name='msp430_uart_rate_t', quals=[], storage=['typedef'] (at pp.c:1699)
    TypeDecl: declname='msp430_uart_rate_t', quals=[] (at pp.c:1699)
      Enum: name='__nesc_unnamed4286' (at pp.c:1680)
        EnumeratorList:  (at pp.c:1682)
          Enumerator: name='UBR_32KHZ_1200' (at pp.c:1682)
            Constant: type='int', value='0x001B' (at pp.c:1682)
          Enumerator: name='UMCTL_32KHZ_1200' (at pp.c:1682)
            Constant: type='int', value='0x94' (at pp.c:1682)
          Enumerator: name='UBR_32KHZ_1800' (at pp.c:1683)
            Constant: type='int', value='0x0012' (at pp.c:1683)
          Enumerator: name='UMCTL_32KHZ_1800' (at pp.c:1683)
            Constant: type='int', value='0x84' (at pp.c:1683)
          Enumerator: name='UBR_32KHZ_2400' (at pp.c:1684)
            Constant: type='int', value='0x000D' (at pp.c:1684)
          Enumerator: name='UMCTL_32KHZ_2400' (at pp.c:1684)
            Constant: type='int', value='0x6D' (at pp.c:1684)
          Enumerator: name='UBR_32KHZ_4800' (at pp.c:1685)
            Constant: type='int', value='0x0006' (at pp.c:1685)
          Enumerator: name='UMCTL_32KHZ_4800' (at pp.c:1685)
            Constant: type='int', value='0x77' (at pp.c:1685)
          Enumerator: name='UBR_32KHZ_9600' (at pp.c:1686)
            Constant: type='int', value='0x0003' (at pp.c:1686)
          Enumerator: name='UMCTL_32KHZ_9600' (at pp.c:1686)
            Constant: type='int', value='0x29' (at pp.c:1686)
          Enumerator: name='UBR_1MHZ_1200' (at pp.c:1688)
            Constant: type='int', value='0x0369' (at pp.c:1688)
          Enumerator: name='UMCTL_1MHZ_1200' (at pp.c:1688)
            Constant: type='int', value='0x7B' (at pp.c:1688)
          Enumerator: name='UBR_1MHZ_1800' (at pp.c:1689)
            Constant: type='int', value='0x0246' (at pp.c:1689)
          Enumerator: name='UMCTL_1MHZ_1800' (at pp.c:1689)
            Constant: type='int', value='0x55' (at pp.c:1689)
          Enumerator: name='UBR_1MHZ_2400' (at pp.c:1690)
            Constant: type='int', value='0x01B4' (at pp.c:1690)
          Enumerator: name='UMCTL_1MHZ_2400' (at pp.c:1690)
            Constant: type='int', value='0xDF' (at pp.c:1690)
          Enumerator: name='UBR_1MHZ_4800' (at pp.c:1691)
            Constant: type='int', value='0x00DA' (at pp.c:1691)
          Enumerator: name='UMCTL_1MHZ_4800' (at pp.c:1691)
            Constant: type='int', value='0xAA' (at pp.c:1691)
          Enumerator: name='UBR_1MHZ_9600' (at pp.c:1692)
            Constant: type='int', value='0x006D' (at pp.c:1692)
          Enumerator: name='UMCTL_1MHZ_9600' (at pp.c:1692)
            Constant: type='int', value='0x44' (at pp.c:1692)
          Enumerator: name='UBR_1MHZ_19200' (at pp.c:1693)
            Constant: type='int', value='0x0036' (at pp.c:1693)
          Enumerator: name='UMCTL_1MHZ_19200' (at pp.c:1693)
            Constant: type='int', value='0xB5' (at pp.c:1693)
          Enumerator: name='UBR_1MHZ_38400' (at pp.c:1694)
            Constant: type='int', value='0x001B' (at pp.c:1694)
          Enumerator: name='UMCTL_1MHZ_38400' (at pp.c:1694)
            Constant: type='int', value='0x94' (at pp.c:1694)
          Enumerator: name='UBR_1MHZ_57600' (at pp.c:1695)
            Constant: type='int', value='0x0012' (at pp.c:1695)
          Enumerator: name='UMCTL_1MHZ_57600' (at pp.c:1695)
            Constant: type='int', value='0x84' (at pp.c:1695)
          Enumerator: name='UBR_1MHZ_76800' (at pp.c:1696)
            Constant: type='int', value='0x000D' (at pp.c:1696)
          Enumerator: name='UMCTL_1MHZ_76800' (at pp.c:1696)
            Constant: type='int', value='0x6D' (at pp.c:1696)
          Enumerator: name='UBR_1MHZ_115200' (at pp.c:1697)
            Constant: type='int', value='0x0009' (at pp.c:1697)
          Enumerator: name='UMCTL_1MHZ_115200' (at pp.c:1697)
            Constant: type='int', value='0x10' (at pp.c:1697)
          Enumerator: name='UBR_1MHZ_230400' (at pp.c:1698)
            Constant: type='int', value='0x0004' (at pp.c:1698)
          Enumerator: name='UMCTL_1MHZ_230400' (at pp.c:1698)
            Constant: type='int', value='0x55' (at pp.c:1698)
  Typedef: name='msp430_uart_config_t', quals=[], storage=['typedef'] (at pp.c:1731)
    TypeDecl: declname='msp430_uart_config_t', quals=[] (at pp.c:1731)
      Struct: name='__nesc_unnamed4287', packed=False (at pp.c:1702)
        Decl: name='ubr', quals=[], storage=[] (at 0)
          TypeDecl: declname='ubr', quals=[] (at pp.c:1703)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='16' (at pp.c:1703)
        Decl: name='umctl', quals=[], storage=[] (at 0)
          TypeDecl: declname='umctl', quals=[] (at pp.c:1705)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='8' (at pp.c:1705)
        Decl: name='otfkl', quals=[], storage=[] (at 0)
          TypeDecl: declname='otfkl', quals=[] (at pp.c:1707)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1707)
        Decl: name='mm', quals=[], storage=[] (at 0)
          TypeDecl: declname='mm', quals=[] (at pp.c:1708)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1708)
        Decl: name='ocejl', quals=[], storage=[] (at 0)
          TypeDecl: declname='ocejl', quals=[] (at pp.c:1709)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1709)
        Decl: name='listen', quals=[], storage=[] (at 0)
          TypeDecl: declname='listen', quals=[] (at pp.c:1710)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1710)
        Decl: name='clen', quals=[], storage=[] (at 0)
          TypeDecl: declname='clen', quals=[] (at pp.c:1711)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1711)
        Decl: name='spb', quals=[], storage=[] (at 0)
          TypeDecl: declname='spb', quals=[] (at pp.c:1712)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1712)
        Decl: name='pev', quals=[], storage=[] (at 0)
          TypeDecl: declname='pev', quals=[] (at pp.c:1713)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1713)
        Decl: name='pena', quals=[], storage=[] (at 0)
          TypeDecl: declname='pena', quals=[] (at pp.c:1714)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1714)
        Decl: name='vqmzy', quals=[], storage=[] (at 0)
          TypeDecl: declname='vqmzy', quals=[] (at pp.c:1715)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='0' (at pp.c:1715)
        Decl: name='lnbdn', quals=[], storage=[] (at 0)
          TypeDecl: declname='lnbdn', quals=[] (at pp.c:1717)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:1717)
        Decl: name='urxse', quals=[], storage=[] (at 0)
          TypeDecl: declname='urxse', quals=[] (at pp.c:1718)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1718)
        Decl: name='ssel', quals=[], storage=[] (at 0)
          TypeDecl: declname='ssel', quals=[] (at pp.c:1719)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:1719)
        Decl: name='ckpl', quals=[], storage=[] (at 0)
          TypeDecl: declname='ckpl', quals=[] (at pp.c:1720)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1720)
        Decl: name='jkpdm', quals=[], storage=[] (at 0)
          TypeDecl: declname='jkpdm', quals=[] (at pp.c:1721)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1721)
        Decl: name='ijzij', quals=[], storage=[] (at 0)
          TypeDecl: declname='ijzij', quals=[] (at pp.c:1723)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:1723)
        Decl: name='urxwie', quals=[], storage=[] (at 0)
          TypeDecl: declname='urxwie', quals=[] (at pp.c:1724)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1724)
        Decl: name='urxeie', quals=[], storage=[] (at 0)
          TypeDecl: declname='urxeie', quals=[] (at pp.c:1725)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1725)
        Decl: name='ujbgw', quals=[], storage=[] (at 0)
          TypeDecl: declname='ujbgw', quals=[] (at pp.c:1726)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:1726)
        Decl: name='ivsax', quals=[], storage=[] (at 0)
          TypeDecl: declname='ivsax', quals=[] (at pp.c:1727)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='0' (at pp.c:1727)
        Decl: name='utxe', quals=[], storage=[] (at 0)
          TypeDecl: declname='utxe', quals=[] (at pp.c:1729)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1729)
        Decl: name='urxe', quals=[], storage=[] (at 0)
          TypeDecl: declname='urxe', quals=[] (at pp.c:1730)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1730)
  Typedef: name='msp430_uart_registers_t', quals=[], storage=['typedef'] (at pp.c:1748)
    TypeDecl: declname='msp430_uart_registers_t', quals=[] (at pp.c:1748)
      Struct: name='__nesc_unnamed4288', packed=False (at pp.c:1741)
        Decl: name='ubr', quals=[], storage=[] (at 0)
          TypeDecl: declname='ubr', quals=[] (at pp.c:1742)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='umctl', quals=[], storage=[] (at 0)
          TypeDecl: declname='umctl', quals=[] (at pp.c:1743)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='uctl', quals=[], storage=[] (at 0)
          TypeDecl: declname='uctl', quals=[] (at pp.c:1744)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='utctl', quals=[], storage=[] (at 0)
          TypeDecl: declname='utctl', quals=[] (at pp.c:1745)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='urctl', quals=[], storage=[] (at 0)
          TypeDecl: declname='urctl', quals=[] (at pp.c:1746)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='ume', quals=[], storage=[] (at 0)
          TypeDecl: declname='ume', quals=[] (at pp.c:1747)
            IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='msp430_uart_union_config_t', quals=[], storage=['typedef'] (at pp.c:1757)
    TypeDecl: declname='msp430_uart_union_config_t', quals=[] (at pp.c:1757)
      Union: name='__nesc_unnamed4289', packed=False (at pp.c:1754)
        Decl: name='uartConfig', quals=[], storage=[] (at 0)
          TypeDecl: declname='uartConfig', quals=[] (at pp.c:1755)
            IdentifierType: names=['msp430_uart_config_t'] (at None)
        Decl: name='uartRegisters', quals=[], storage=[] (at 0)
          TypeDecl: declname='uartRegisters', quals=[] (at pp.c:1756)
            IdentifierType: names=['msp430_uart_registers_t'] (at None)
  Decl: name='msp430_uart_default_config', quals=[], storage=[] (at pp.c:1759)
    TypeDecl: declname='msp430_uart_default_config', quals=[] (at pp.c:1759)
      IdentifierType: names=['msp430_uart_union_config_t'] (at None)
    ExprList:  (at pp.c:1761)
      ExprList:  (at pp.c:1761)
        Assignment: op='=' (at pp.c:1761)
          StructRef: type='.' (at pp.c:1761)
            ID: name='utxe' (at pp.c:1761)
          Constant: type='int', value='1' (at pp.c:1761)
        Assignment: op='=' (at pp.c:1762)
          StructRef: type='.' (at pp.c:1762)
            ID: name='urxe' (at pp.c:1762)
          Constant: type='int', value='1' (at pp.c:1762)
        Assignment: op='=' (at pp.c:1763)
          StructRef: type='.' (at pp.c:1763)
            ID: name='ubr' (at pp.c:1763)
          ID: name='UBR_1MHZ_57600' (at pp.c:1763)
        Assignment: op='=' (at pp.c:1764)
          StructRef: type='.' (at pp.c:1764)
            ID: name='umctl' (at pp.c:1764)
          ID: name='UMCTL_1MHZ_57600' (at pp.c:1764)
        Assignment: op='=' (at pp.c:1765)
          StructRef: type='.' (at pp.c:1765)
            ID: name='ssel' (at pp.c:1765)
          Constant: type='int', value='0x02' (at pp.c:1765)
        Assignment: op='=' (at pp.c:1766)
          StructRef: type='.' (at pp.c:1766)
            ID: name='pena' (at pp.c:1766)
          Constant: type='int', value='0' (at pp.c:1766)
        Assignment: op='=' (at pp.c:1767)
          StructRef: type='.' (at pp.c:1767)
            ID: name='pev' (at pp.c:1767)
          Constant: type='int', value='0' (at pp.c:1767)
        Assignment: op='=' (at pp.c:1768)
          StructRef: type='.' (at pp.c:1768)
            ID: name='spb' (at pp.c:1768)
          Constant: type='int', value='0' (at pp.c:1768)
        Assignment: op='=' (at pp.c:1769)
          StructRef: type='.' (at pp.c:1769)
            ID: name='clen' (at pp.c:1769)
          Constant: type='int', value='1' (at pp.c:1769)
        Assignment: op='=' (at pp.c:1770)
          StructRef: type='.' (at pp.c:1770)
            ID: name='listen' (at pp.c:1770)
          Constant: type='int', value='0' (at pp.c:1770)
        Assignment: op='=' (at pp.c:1771)
          StructRef: type='.' (at pp.c:1771)
            ID: name='mm' (at pp.c:1771)
          Constant: type='int', value='0' (at pp.c:1771)
        Assignment: op='=' (at pp.c:1772)
          StructRef: type='.' (at pp.c:1772)
            ID: name='ckpl' (at pp.c:1772)
          Constant: type='int', value='0' (at pp.c:1772)
        Assignment: op='=' (at pp.c:1773)
          StructRef: type='.' (at pp.c:1773)
            ID: name='urxse' (at pp.c:1773)
          Constant: type='int', value='0' (at pp.c:1773)
        Assignment: op='=' (at pp.c:1774)
          StructRef: type='.' (at pp.c:1774)
            ID: name='urxeie' (at pp.c:1774)
          Constant: type='int', value='1' (at pp.c:1774)
        Assignment: op='=' (at pp.c:1775)
          StructRef: type='.' (at pp.c:1775)
            ID: name='urxwie' (at pp.c:1775)
          Constant: type='int', value='0' (at pp.c:1775)
        Assignment: op='=' (at pp.c:1776)
          StructRef: type='.' (at pp.c:1776)
            ID: name='utxe' (at pp.c:1776)
          Constant: type='int', value='1' (at pp.c:1776)
        Assignment: op='=' (at pp.c:1777)
          StructRef: type='.' (at pp.c:1777)
            ID: name='urxe' (at pp.c:1777)
          Constant: type='int', value='1' (at pp.c:1777)
  Typedef: name='msp430_i2ctctl_t', quals=[], storage=['typedef'] (at pp.c:1788)
    TypeDecl: declname='msp430_i2ctctl_t', quals=[] (at pp.c:1788)
      Struct: name='__nesc_unnamed4290', packed=True (at pp.c:1780)
        Decl: name='i2cstt', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cstt', quals=[] (at pp.c:1781)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1781)
        Decl: name='i2cstp', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cstp', quals=[] (at pp.c:1782)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1782)
        Decl: name='i2cstb', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cstb', quals=[] (at pp.c:1783)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1783)
        Decl: name='i2cctrx', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cctrx', quals=[] (at pp.c:1784)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1784)
        Decl: name='i2cssel', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cssel', quals=[] (at pp.c:1785)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:1785)
        Decl: name='i2ccrm', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2ccrm', quals=[] (at pp.c:1786)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1786)
        Decl: name='i2cword', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cword', quals=[] (at pp.c:1787)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1787)
  Typedef: name='msp430_i2c_config_t', quals=[], storage=['typedef'] (at pp.c:1814)
    TypeDecl: declname='msp430_i2c_config_t', quals=[] (at pp.c:1814)
      Struct: name='__nesc_unnamed4291', packed=False (at pp.c:1791)
        Decl: name='ejhwd', quals=[], storage=[] (at 0)
          TypeDecl: declname='ejhwd', quals=[] (at pp.c:1792)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1792)
        Decl: name='mst', quals=[], storage=[] (at 0)
          TypeDecl: declname='mst', quals=[] (at pp.c:1793)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1793)
        Decl: name='ivtno', quals=[], storage=[] (at 0)
          TypeDecl: declname='ivtno', quals=[] (at pp.c:1794)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1794)
        Decl: name='listen', quals=[], storage=[] (at 0)
          TypeDecl: declname='listen', quals=[] (at pp.c:1795)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1795)
        Decl: name='xa', quals=[], storage=[] (at 0)
          TypeDecl: declname='xa', quals=[] (at pp.c:1796)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1796)
        Decl: name='odvtk', quals=[], storage=[] (at 0)
          TypeDecl: declname='odvtk', quals=[] (at pp.c:1797)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1797)
        Decl: name='txdmaen', quals=[], storage=[] (at 0)
          TypeDecl: declname='txdmaen', quals=[] (at pp.c:1798)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1798)
        Decl: name='rxdmaen', quals=[], storage=[] (at 0)
          TypeDecl: declname='rxdmaen', quals=[] (at pp.c:1799)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1799)
        Decl: name='sxdqr', quals=[], storage=[] (at 0)
          TypeDecl: declname='sxdqr', quals=[] (at pp.c:1801)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:1801)
        Decl: name='i2cssel', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cssel', quals=[] (at pp.c:1802)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:1802)
        Decl: name='i2crm', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2crm', quals=[] (at pp.c:1803)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1803)
        Decl: name='i2cword', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cword', quals=[] (at pp.c:1804)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1804)
        Decl: name='i2cpsc', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cpsc', quals=[] (at pp.c:1806)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='8' (at pp.c:1806)
        Decl: name='i2csclh', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2csclh', quals=[] (at pp.c:1808)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='8' (at pp.c:1808)
        Decl: name='i2cscll', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cscll', quals=[] (at pp.c:1810)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='8' (at pp.c:1810)
        Decl: name='i2coa', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2coa', quals=[] (at pp.c:1812)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='10' (at pp.c:1812)
        Decl: name='yhron', quals=[], storage=[] (at 0)
          TypeDecl: declname='yhron', quals=[] (at pp.c:1813)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='6' (at pp.c:1813)
  Typedef: name='msp430_i2c_registers_t', quals=[], storage=['typedef'] (at pp.c:1831)
    TypeDecl: declname='msp430_i2c_registers_t', quals=[] (at pp.c:1831)
      Struct: name='__nesc_unnamed4292', packed=False (at pp.c:1824)
        Decl: name='uctl', quals=[], storage=[] (at 0)
          TypeDecl: declname='uctl', quals=[] (at pp.c:1825)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='i2ctctl', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2ctctl', quals=[] (at pp.c:1826)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='i2cpsc', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cpsc', quals=[] (at pp.c:1827)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='i2csclh', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2csclh', quals=[] (at pp.c:1828)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='i2cscll', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cscll', quals=[] (at pp.c:1829)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='i2coa', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2coa', quals=[] (at pp.c:1830)
            IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='msp430_i2c_union_config_t', quals=[], storage=['typedef'] (at pp.c:1840)
    TypeDecl: declname='msp430_i2c_union_config_t', quals=[] (at pp.c:1840)
      Union: name='__nesc_unnamed4293', packed=False (at pp.c:1837)
        Decl: name='i2cConfig', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cConfig', quals=[] (at pp.c:1838)
            IdentifierType: names=['msp430_i2c_config_t'] (at None)
        Decl: name='i2cRegisters', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cRegisters', quals=[] (at pp.c:1839)
            IdentifierType: names=['msp430_i2c_registers_t'] (at None)
  Typedef: name='uart_speed_t', quals=[], storage=['typedef'] (at pp.c:1842)
    TypeDecl: declname='uart_speed_t', quals=[] (at pp.c:1842)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='uart_parity_t', quals=[], storage=['typedef'] (at pp.c:1843)
    TypeDecl: declname='uart_parity_t', quals=[] (at pp.c:1843)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='uart_duplex_t', quals=[], storage=['typedef'] (at pp.c:1844)
    TypeDecl: declname='uart_duplex_t', quals=[] (at pp.c:1844)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1846)
    Enum: name='__nesc_unnamed4294' (at pp.c:1846)
      EnumeratorList:  (at pp.c:1847)
        Enumerator: name='TOS_UART_1200' (at pp.c:1847)
          Constant: type='int', value='0' (at pp.c:1847)
        Enumerator: name='TOS_UART_1800' (at pp.c:1848)
          Constant: type='int', value='1' (at pp.c:1848)
        Enumerator: name='TOS_UART_2400' (at pp.c:1849)
          Constant: type='int', value='2' (at pp.c:1849)
        Enumerator: name='TOS_UART_4800' (at pp.c:1850)
          Constant: type='int', value='3' (at pp.c:1850)
        Enumerator: name='TOS_UART_9600' (at pp.c:1851)
          Constant: type='int', value='4' (at pp.c:1851)
        Enumerator: name='TOS_UART_19200' (at pp.c:1852)
          Constant: type='int', value='5' (at pp.c:1852)
        Enumerator: name='TOS_UART_38400' (at pp.c:1853)
          Constant: type='int', value='6' (at pp.c:1853)
        Enumerator: name='TOS_UART_57600' (at pp.c:1854)
          Constant: type='int', value='7' (at pp.c:1854)
        Enumerator: name='TOS_UART_76800' (at pp.c:1855)
          Constant: type='int', value='8' (at pp.c:1855)
        Enumerator: name='TOS_UART_115200' (at pp.c:1856)
          Constant: type='int', value='9' (at pp.c:1856)
        Enumerator: name='TOS_UART_230400' (at pp.c:1857)
          Constant: type='int', value='10' (at pp.c:1857)
  Decl: name=None, quals=[], storage=[] (at pp.c:1860)
    Enum: name='__nesc_unnamed4295' (at pp.c:1860)
      EnumeratorList:  (at pp.c:1861)
        Enumerator: name='TOS_UART_OFF' (at pp.c:1861)
        Enumerator: name='TOS_UART_RONLY' (at pp.c:1862)
        Enumerator: name='TOS_UART_TONLY' (at pp.c:1863)
        Enumerator: name='TOS_UART_DUPLEX' (at pp.c:1864)
  Decl: name=None, quals=[], storage=[] (at pp.c:1867)
    Enum: name='__nesc_unnamed4296' (at pp.c:1867)
      EnumeratorList:  (at pp.c:1868)
        Enumerator: name='TOS_UART_PARITY_NONE' (at pp.c:1868)
        Enumerator: name='TOS_UART_PARITY_EVEN' (at pp.c:1869)
        Enumerator: name='TOS_UART_PARITY_ODD' (at pp.c:1870)
  Typedef: name='resource_client_id_t', quals=[], storage=['typedef'] (at pp.c:1873)
    TypeDecl: declname='resource_client_id_t', quals=[] (at pp.c:1873)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1875)
    Enum: name='__nesc_unnamed4297' (at pp.c:1875)
      EnumeratorList:  (at pp.c:1876)
        Enumerator: name='DALLASID48_SERIAL_LENGTH' (at pp.c:1876)
          Constant: type='int', value='6' (at pp.c:1876)
        Enumerator: name='DALLASID48_DATA_LENGTH' (at pp.c:1877)
          Constant: type='int', value='8' (at pp.c:1877)
  Typedef: name='dallasid48_serial_t', quals=[], storage=['typedef'] (at pp.c:1895)
    TypeDecl: declname='dallasid48_serial_t', quals=[] (at pp.c:1895)
      Union: name='dallasid48_serial_t', packed=False (at pp.c:1888)
        Decl: name='data', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:1889)
            TypeDecl: declname='data', quals=[] (at pp.c:1889)
              IdentifierType: names=['uint8_t'] (at None)
            ID: name='DALLASID48_DATA_LENGTH' (at pp.c:1889)
        Decl: name='temp', quals=[], storage=[] (at 0)
          TypeDecl: declname='temp', quals=[] (at pp.c:1894)
            Struct: name=None, packed=False (at pp.c:1890)
              Decl: name='family_code', quals=[], storage=[] (at 0)
                TypeDecl: declname='family_code', quals=[] (at pp.c:1891)
                  IdentifierType: names=['uint8_t'] (at None)
              Decl: name='serial', quals=[], storage=[] (at 0)
                ArrayDecl:  (at pp.c:1892)
                  TypeDecl: declname='serial', quals=[] (at pp.c:1892)
                    IdentifierType: names=['uint8_t'] (at None)
                  ID: name='DALLASID48_SERIAL_LENGTH' (at pp.c:1892)
              Decl: name='crc', quals=[], storage=[] (at 0)
                TypeDecl: declname='crc', quals=[] (at pp.c:1893)
                  IdentifierType: names=['uint8_t'] (at None)
  Decl: name='dallasid48checkCrc', quals=[], storage=['inline', 'static'] (at pp.c:1900)
    FuncDecl: quals=None (at pp.c:1900)
      ParamList:  (at pp.c:1900)
        Decl: name='id', quals=['const'], storage=[] (at pp.c:1900)
          PtrDecl: quals=[] (at pp.c:1900)
            TypeDecl: declname='id', quals=['const'] (at pp.c:1900)
              IdentifierType: names=['dallasid48_serial_t'] (at None)
      TypeDecl: declname='dallasid48checkCrc', quals=[] (at pp.c:1900)
        IdentifierType: names=['bool'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1902)
    Enum: name='__nesc_unnamed4298' (at pp.c:1902)
      EnumeratorList:  (at pp.c:1903)
        Enumerator: name='IEEE_EUI64_COMPANY_ID_0' (at pp.c:1903)
          Constant: type='int', value='0x00' (at pp.c:1903)
        Enumerator: name='IEEE_EUI64_COMPANY_ID_1' (at pp.c:1904)
          Constant: type='int', value='0x12' (at pp.c:1904)
        Enumerator: name='IEEE_EUI64_COMPANY_ID_2' (at pp.c:1905)
          Constant: type='int', value='0x6d' (at pp.c:1905)
        Enumerator: name='IEEE_EUI64_SERIAL_ID_0' (at pp.c:1906)
          Constant: type='char', value="'E'" (at pp.c:1906)
        Enumerator: name='IEEE_EUI64_SERIAL_ID_1' (at pp.c:1907)
          Constant: type='char', value="'P'" (at pp.c:1907)
  Typedef: name='timesync_radio_t', quals=[], storage=['typedef'] (at pp.c:1910)
    TypeDecl: declname='timesync_radio_t', quals=[] (at pp.c:1910)
      IdentifierType: names=['nx_uint32_t'] (at None)
  Typedef: name='timesync_footer_t', quals=[], storage=['typedef'] (at pp.c:1921)
    TypeDecl: declname='timesync_footer_t', quals=[] (at pp.c:1921)
      Struct: name='timesync_footer_t', packed=False (at pp.c:1917)
        Decl: name='type', quals=[], storage=[] (at 0)
          TypeDecl: declname='type', quals=[] (at pp.c:1919)
            IdentifierType: names=['nx_am_id_t'] (at None)
        Decl: name='timestamp', quals=[], storage=[] (at 0)
          TypeDecl: declname='timestamp', quals=[] (at pp.c:1920)
            IdentifierType: names=['timesync_radio_t'] (at None)
  Decl: name='crcByte', quals=[], storage=['static'] (at pp.c:1923)
    FuncDecl: quals=None (at pp.c:1923)
      ParamList:  (at pp.c:1923)
        Decl: name='crc', quals=[], storage=[] (at pp.c:1923)
          TypeDecl: declname='crc', quals=[] (at pp.c:1923)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='b', quals=[], storage=[] (at pp.c:1923)
          TypeDecl: declname='b', quals=[] (at pp.c:1923)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='crcByte', quals=[] (at pp.c:1923)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1924)
    Enum: name='CC2420ActiveMessageC____nesc_unnamed4299' (at pp.c:1924)
      EnumeratorList:  (at pp.c:1925)
        Enumerator: name='CC2420ActiveMessageC__CC2420_AM_SEND_ID' (at pp.c:1925)
          Constant: type='int', value='0U' (at pp.c:1925)
  Typedef: name='CC2420ControlP__StartupTimer__precision_tag', quals=[], storage=['typedef'] (at pp.c:1927)
    TypeDecl: declname='CC2420ControlP__StartupTimer__precision_tag', quals=[] (at pp.c:1927)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='CC2420ControlP__StartupTimer__size_type', quals=[], storage=['typedef'] (at pp.c:1928)
    TypeDecl: declname='CC2420ControlP__StartupTimer__size_type', quals=[] (at pp.c:1928)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='CC2420ControlP__ReadRssi__val_t', quals=[], storage=['typedef'] (at pp.c:1929)
    TypeDecl: declname='CC2420ControlP__ReadRssi__val_t', quals=[] (at pp.c:1929)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1930)
    Enum: name='Msp430Timer32khzC__0____nesc_unnamed4300' (at pp.c:1930)
      EnumeratorList:  (at pp.c:1931)
        Enumerator: name='Msp430Timer32khzC__0__ALARM_ID' (at pp.c:1931)
          Constant: type='int', value='0U' (at pp.c:1931)
  Typedef: name='Msp430AlarmC__0__frequency_tag', quals=[], storage=['typedef'] (at pp.c:1933)
    TypeDecl: declname='Msp430AlarmC__0__frequency_tag', quals=[] (at pp.c:1933)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='Msp430AlarmC__0__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:1934)
    TypeDecl: declname='Msp430AlarmC__0__Alarm__precision_tag', quals=[] (at pp.c:1934)
      IdentifierType: names=['Msp430AlarmC__0__frequency_tag'] (at None)
  Typedef: name='Msp430AlarmC__0__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:1935)
    TypeDecl: declname='Msp430AlarmC__0__Alarm__size_type', quals=[] (at pp.c:1935)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='Msp430CounterC__0__frequency_tag', quals=[], storage=['typedef'] (at pp.c:1936)
    TypeDecl: declname='Msp430CounterC__0__frequency_tag', quals=[] (at pp.c:1936)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='Msp430CounterC__0__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:1937)
    TypeDecl: declname='Msp430CounterC__0__Counter__precision_tag', quals=[] (at pp.c:1937)
      IdentifierType: names=['Msp430CounterC__0__frequency_tag'] (at None)
  Typedef: name='Msp430CounterC__0__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:1938)
    TypeDecl: declname='Msp430CounterC__0__Counter__size_type', quals=[] (at pp.c:1938)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformCounterC__0__to_precision_tag', quals=[], storage=['typedef'] (at pp.c:1939)
    TypeDecl: declname='TransformCounterC__0__to_precision_tag', quals=[] (at pp.c:1939)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='TransformCounterC__0__to_size_type', quals=[], storage=['typedef'] (at pp.c:1940)
    TypeDecl: declname='TransformCounterC__0__to_size_type', quals=[] (at pp.c:1940)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='TransformCounterC__0__from_precision_tag', quals=[], storage=['typedef'] (at pp.c:1941)
    TypeDecl: declname='TransformCounterC__0__from_precision_tag', quals=[] (at pp.c:1941)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='TransformCounterC__0__from_size_type', quals=[], storage=['typedef'] (at pp.c:1942)
    TypeDecl: declname='TransformCounterC__0__from_size_type', quals=[] (at pp.c:1942)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformCounterC__0__upper_count_type', quals=[], storage=['typedef'] (at pp.c:1943)
    TypeDecl: declname='TransformCounterC__0__upper_count_type', quals=[] (at pp.c:1943)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformCounterC__0__CounterFrom__precision_tag', quals=[], storage=['typedef'] (at pp.c:1944)
    TypeDecl: declname='TransformCounterC__0__CounterFrom__precision_tag', quals=[] (at pp.c:1944)
      IdentifierType: names=['TransformCounterC__0__from_precision_tag'] (at None)
  Typedef: name='TransformCounterC__0__CounterFrom__size_type', quals=[], storage=['typedef'] (at pp.c:1945)
    TypeDecl: declname='TransformCounterC__0__CounterFrom__size_type', quals=[] (at pp.c:1945)
      IdentifierType: names=['TransformCounterC__0__from_size_type'] (at None)
  Typedef: name='TransformCounterC__0__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:1946)
    TypeDecl: declname='TransformCounterC__0__Counter__precision_tag', quals=[] (at pp.c:1946)
      IdentifierType: names=['TransformCounterC__0__to_precision_tag'] (at None)
  Typedef: name='TransformCounterC__0__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:1947)
    TypeDecl: declname='TransformCounterC__0__Counter__size_type', quals=[] (at pp.c:1947)
      IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
  Typedef: name='TransformAlarmC__0__to_precision_tag', quals=[], storage=['typedef'] (at pp.c:1948)
    TypeDecl: declname='TransformAlarmC__0__to_precision_tag', quals=[] (at pp.c:1948)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='TransformAlarmC__0__to_size_type', quals=[], storage=['typedef'] (at pp.c:1949)
    TypeDecl: declname='TransformAlarmC__0__to_size_type', quals=[] (at pp.c:1949)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='TransformAlarmC__0__from_precision_tag', quals=[], storage=['typedef'] (at pp.c:1950)
    TypeDecl: declname='TransformAlarmC__0__from_precision_tag', quals=[] (at pp.c:1950)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='TransformAlarmC__0__from_size_type', quals=[], storage=['typedef'] (at pp.c:1951)
    TypeDecl: declname='TransformAlarmC__0__from_size_type', quals=[] (at pp.c:1951)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformAlarmC__0__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:1952)
    TypeDecl: declname='TransformAlarmC__0__Alarm__precision_tag', quals=[] (at pp.c:1952)
      IdentifierType: names=['TransformAlarmC__0__to_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__0__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:1953)
    TypeDecl: declname='TransformAlarmC__0__Alarm__size_type', quals=[] (at pp.c:1953)
      IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Typedef: name='TransformAlarmC__0__AlarmFrom__precision_tag', quals=[], storage=['typedef'] (at pp.c:1954)
    TypeDecl: declname='TransformAlarmC__0__AlarmFrom__precision_tag', quals=[] (at pp.c:1954)
      IdentifierType: names=['TransformAlarmC__0__from_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__0__AlarmFrom__size_type', quals=[], storage=['typedef'] (at pp.c:1955)
    TypeDecl: declname='TransformAlarmC__0__AlarmFrom__size_type', quals=[] (at pp.c:1955)
      IdentifierType: names=['TransformAlarmC__0__from_size_type'] (at None)
  Typedef: name='TransformAlarmC__0__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:1956)
    TypeDecl: declname='TransformAlarmC__0__Counter__precision_tag', quals=[] (at pp.c:1956)
      IdentifierType: names=['TransformAlarmC__0__to_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__0__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:1957)
    TypeDecl: declname='TransformAlarmC__0__Counter__size_type', quals=[] (at pp.c:1957)
      IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1958)
    Enum: name='CC2420SpiC__0____nesc_unnamed4301' (at pp.c:1958)
      EnumeratorList:  (at pp.c:1959)
        Enumerator: name='CC2420SpiC__0__CLIENT_ID' (at pp.c:1959)
          Constant: type='int', value='0U' (at pp.c:1959)
  Decl: name=None, quals=[], storage=[] (at pp.c:1961)
    Enum: name='Msp430Spi0C__0____nesc_unnamed4302' (at pp.c:1961)
      EnumeratorList:  (at pp.c:1962)
        Enumerator: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:1962)
          Constant: type='int', value='0U' (at pp.c:1962)
  Decl: name=None, quals=[], storage=[] (at pp.c:1964)
    Enum: name='Msp430Usart0C__0____nesc_unnamed4303' (at pp.c:1964)
      EnumeratorList:  (at pp.c:1965)
        Enumerator: name='Msp430Usart0C__0__CLIENT_ID' (at pp.c:1965)
          Constant: type='int', value='0U' (at pp.c:1965)
  Decl: name=None, quals=[], storage=[] (at pp.c:1967)
    Enum: name='CC2420SpiC__1____nesc_unnamed4304' (at pp.c:1967)
      EnumeratorList:  (at pp.c:1968)
        Enumerator: name='CC2420SpiC__1__CLIENT_ID' (at pp.c:1968)
          Constant: type='int', value='1U' (at pp.c:1968)
  Decl: name=None, quals=[], storage=[] (at pp.c:1970)
    Enum: name='CC2420SpiC__2____nesc_unnamed4305' (at pp.c:1970)
      EnumeratorList:  (at pp.c:1971)
        Enumerator: name='CC2420SpiC__2__CLIENT_ID' (at pp.c:1971)
          Constant: type='int', value='2U' (at pp.c:1971)
  Typedef: name='OneWireMasterC__BusyWait__precision_tag', quals=[], storage=['typedef'] (at pp.c:1973)
    TypeDecl: declname='OneWireMasterC__BusyWait__precision_tag', quals=[] (at pp.c:1973)
      IdentifierType: names=['TMicro'] (at None)
  Typedef: name='OneWireMasterC__BusyWait__size_type', quals=[], storage=['typedef'] (at pp.c:1974)
    TypeDecl: declname='OneWireMasterC__BusyWait__size_type', quals=[] (at pp.c:1974)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='BusyWaitCounterC__0__precision_tag', quals=[], storage=['typedef'] (at pp.c:1975)
    TypeDecl: declname='BusyWaitCounterC__0__precision_tag', quals=[] (at pp.c:1975)
      IdentifierType: names=['TMicro'] (at None)
  Typedef: name='BusyWaitCounterC__0__size_type', quals=[], storage=['typedef'] (at pp.c:1976)
    TypeDecl: declname='BusyWaitCounterC__0__size_type', quals=[] (at pp.c:1976)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='BusyWaitCounterC__0__BusyWait__precision_tag', quals=[], storage=['typedef'] (at pp.c:1977)
    TypeDecl: declname='BusyWaitCounterC__0__BusyWait__precision_tag', quals=[] (at pp.c:1977)
      IdentifierType: names=['BusyWaitCounterC__0__precision_tag'] (at None)
  Typedef: name='BusyWaitCounterC__0__BusyWait__size_type', quals=[], storage=['typedef'] (at pp.c:1978)
    TypeDecl: declname='BusyWaitCounterC__0__BusyWait__size_type', quals=[] (at pp.c:1978)
      IdentifierType: names=['BusyWaitCounterC__0__size_type'] (at None)
  Typedef: name='BusyWaitCounterC__0__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:1979)
    TypeDecl: declname='BusyWaitCounterC__0__Counter__precision_tag', quals=[] (at pp.c:1979)
      IdentifierType: names=['BusyWaitCounterC__0__precision_tag'] (at None)
  Typedef: name='BusyWaitCounterC__0__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:1980)
    TypeDecl: declname='BusyWaitCounterC__0__Counter__size_type', quals=[] (at pp.c:1980)
      IdentifierType: names=['BusyWaitCounterC__0__size_type'] (at None)
  Typedef: name='Msp430CounterC__1__frequency_tag', quals=[], storage=['typedef'] (at pp.c:1981)
    TypeDecl: declname='Msp430CounterC__1__frequency_tag', quals=[] (at pp.c:1981)
      IdentifierType: names=['TMicro'] (at None)
  Typedef: name='Msp430CounterC__1__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:1982)
    TypeDecl: declname='Msp430CounterC__1__Counter__precision_tag', quals=[] (at pp.c:1982)
      IdentifierType: names=['Msp430CounterC__1__frequency_tag'] (at None)
  Typedef: name='Msp430CounterC__1__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:1983)
    TypeDecl: declname='Msp430CounterC__1__Counter__size_type', quals=[] (at pp.c:1983)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='CC2420TransmitP__PacketTimeStamp__precision_tag', quals=[], storage=['typedef'] (at pp.c:1984)
    TypeDecl: declname='CC2420TransmitP__PacketTimeStamp__precision_tag', quals=[] (at pp.c:1984)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='CC2420TransmitP__PacketTimeStamp__size_type', quals=[], storage=['typedef'] (at pp.c:1985)
    TypeDecl: declname='CC2420TransmitP__PacketTimeStamp__size_type', quals=[] (at pp.c:1985)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='CC2420TransmitP__BackoffTimer__precision_tag', quals=[], storage=['typedef'] (at pp.c:1986)
    TypeDecl: declname='CC2420TransmitP__BackoffTimer__precision_tag', quals=[] (at pp.c:1986)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='CC2420TransmitP__BackoffTimer__size_type', quals=[], storage=['typedef'] (at pp.c:1987)
    TypeDecl: declname='CC2420TransmitP__BackoffTimer__size_type', quals=[] (at pp.c:1987)
      IdentifierType: names=['uint32_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1988)
    Enum: name='CC2420SpiC__3____nesc_unnamed4306' (at pp.c:1988)
      EnumeratorList:  (at pp.c:1989)
        Enumerator: name='CC2420SpiC__3__CLIENT_ID' (at pp.c:1989)
          Constant: type='int', value='3U' (at pp.c:1989)
  Typedef: name='CC2420ReceiveP__PacketTimeStamp__precision_tag', quals=[], storage=['typedef'] (at pp.c:1991)
    TypeDecl: declname='CC2420ReceiveP__PacketTimeStamp__precision_tag', quals=[] (at pp.c:1991)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='CC2420ReceiveP__PacketTimeStamp__size_type', quals=[], storage=['typedef'] (at pp.c:1992)
    TypeDecl: declname='CC2420ReceiveP__PacketTimeStamp__size_type', quals=[] (at pp.c:1992)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='CC2420PacketP__PacketTimeStamp32khz__precision_tag', quals=[], storage=['typedef'] (at pp.c:1993)
    TypeDecl: declname='CC2420PacketP__PacketTimeStamp32khz__precision_tag', quals=[] (at pp.c:1993)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='CC2420PacketP__PacketTimeStamp32khz__size_type', quals=[], storage=['typedef'] (at pp.c:1994)
    TypeDecl: declname='CC2420PacketP__PacketTimeStamp32khz__size_type', quals=[] (at pp.c:1994)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='CC2420PacketP__LocalTime32khz__precision_tag', quals=[], storage=['typedef'] (at pp.c:1995)
    TypeDecl: declname='CC2420PacketP__LocalTime32khz__precision_tag', quals=[] (at pp.c:1995)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='CC2420PacketP__LocalTimeMilli__precision_tag', quals=[], storage=['typedef'] (at pp.c:1996)
    TypeDecl: declname='CC2420PacketP__LocalTimeMilli__precision_tag', quals=[] (at pp.c:1996)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='CC2420PacketP__PacketTimeStampMilli__precision_tag', quals=[], storage=['typedef'] (at pp.c:1997)
    TypeDecl: declname='CC2420PacketP__PacketTimeStampMilli__precision_tag', quals=[] (at pp.c:1997)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='CC2420PacketP__PacketTimeStampMilli__size_type', quals=[], storage=['typedef'] (at pp.c:1998)
    TypeDecl: declname='CC2420PacketP__PacketTimeStampMilli__size_type', quals=[] (at pp.c:1998)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='CounterToLocalTimeC__0__precision_tag', quals=[], storage=['typedef'] (at pp.c:1999)
    TypeDecl: declname='CounterToLocalTimeC__0__precision_tag', quals=[] (at pp.c:1999)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='CounterToLocalTimeC__0__LocalTime__precision_tag', quals=[], storage=['typedef'] (at pp.c:2000)
    TypeDecl: declname='CounterToLocalTimeC__0__LocalTime__precision_tag', quals=[] (at pp.c:2000)
      IdentifierType: names=['CounterToLocalTimeC__0__precision_tag'] (at None)
  Typedef: name='CounterToLocalTimeC__0__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:2001)
    TypeDecl: declname='CounterToLocalTimeC__0__Counter__precision_tag', quals=[] (at pp.c:2001)
      IdentifierType: names=['CounterToLocalTimeC__0__precision_tag'] (at None)
  Typedef: name='CounterToLocalTimeC__0__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:2002)
    TypeDecl: declname='CounterToLocalTimeC__0__Counter__size_type', quals=[] (at pp.c:2002)
      IdentifierType: names=['uint32_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2003)
    Enum: name='Msp430Timer32khzC__1____nesc_unnamed4307' (at pp.c:2003)
      EnumeratorList:  (at pp.c:2004)
        Enumerator: name='Msp430Timer32khzC__1__ALARM_ID' (at pp.c:2004)
          Constant: type='int', value='1U' (at pp.c:2004)
  Typedef: name='Msp430AlarmC__1__frequency_tag', quals=[], storage=['typedef'] (at pp.c:2006)
    TypeDecl: declname='Msp430AlarmC__1__frequency_tag', quals=[] (at pp.c:2006)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='Msp430AlarmC__1__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:2007)
    TypeDecl: declname='Msp430AlarmC__1__Alarm__precision_tag', quals=[] (at pp.c:2007)
      IdentifierType: names=['Msp430AlarmC__1__frequency_tag'] (at None)
  Typedef: name='Msp430AlarmC__1__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:2008)
    TypeDecl: declname='Msp430AlarmC__1__Alarm__size_type', quals=[] (at pp.c:2008)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformCounterC__1__to_precision_tag', quals=[], storage=['typedef'] (at pp.c:2009)
    TypeDecl: declname='TransformCounterC__1__to_precision_tag', quals=[] (at pp.c:2009)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='TransformCounterC__1__to_size_type', quals=[], storage=['typedef'] (at pp.c:2010)
    TypeDecl: declname='TransformCounterC__1__to_size_type', quals=[] (at pp.c:2010)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='TransformCounterC__1__from_precision_tag', quals=[], storage=['typedef'] (at pp.c:2011)
    TypeDecl: declname='TransformCounterC__1__from_precision_tag', quals=[] (at pp.c:2011)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='TransformCounterC__1__from_size_type', quals=[], storage=['typedef'] (at pp.c:2012)
    TypeDecl: declname='TransformCounterC__1__from_size_type', quals=[] (at pp.c:2012)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformCounterC__1__upper_count_type', quals=[], storage=['typedef'] (at pp.c:2013)
    TypeDecl: declname='TransformCounterC__1__upper_count_type', quals=[] (at pp.c:2013)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='TransformCounterC__1__CounterFrom__precision_tag', quals=[], storage=['typedef'] (at pp.c:2014)
    TypeDecl: declname='TransformCounterC__1__CounterFrom__precision_tag', quals=[] (at pp.c:2014)
      IdentifierType: names=['TransformCounterC__1__from_precision_tag'] (at None)
  Typedef: name='TransformCounterC__1__CounterFrom__size_type', quals=[], storage=['typedef'] (at pp.c:2015)
    TypeDecl: declname='TransformCounterC__1__CounterFrom__size_type', quals=[] (at pp.c:2015)
      IdentifierType: names=['TransformCounterC__1__from_size_type'] (at None)
  Typedef: name='TransformCounterC__1__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:2016)
    TypeDecl: declname='TransformCounterC__1__Counter__precision_tag', quals=[] (at pp.c:2016)
      IdentifierType: names=['TransformCounterC__1__to_precision_tag'] (at None)
  Typedef: name='TransformCounterC__1__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:2017)
    TypeDecl: declname='TransformCounterC__1__Counter__size_type', quals=[] (at pp.c:2017)
      IdentifierType: names=['TransformCounterC__1__to_size_type'] (at None)
  Typedef: name='TransformAlarmC__1__to_precision_tag', quals=[], storage=['typedef'] (at pp.c:2018)
    TypeDecl: declname='TransformAlarmC__1__to_precision_tag', quals=[] (at pp.c:2018)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='TransformAlarmC__1__to_size_type', quals=[], storage=['typedef'] (at pp.c:2019)
    TypeDecl: declname='TransformAlarmC__1__to_size_type', quals=[] (at pp.c:2019)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='TransformAlarmC__1__from_precision_tag', quals=[], storage=['typedef'] (at pp.c:2020)
    TypeDecl: declname='TransformAlarmC__1__from_precision_tag', quals=[] (at pp.c:2020)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='TransformAlarmC__1__from_size_type', quals=[], storage=['typedef'] (at pp.c:2021)
    TypeDecl: declname='TransformAlarmC__1__from_size_type', quals=[] (at pp.c:2021)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformAlarmC__1__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:2022)
    TypeDecl: declname='TransformAlarmC__1__Alarm__precision_tag', quals=[] (at pp.c:2022)
      IdentifierType: names=['TransformAlarmC__1__to_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__1__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:2023)
    TypeDecl: declname='TransformAlarmC__1__Alarm__size_type', quals=[] (at pp.c:2023)
      IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
  Typedef: name='TransformAlarmC__1__AlarmFrom__precision_tag', quals=[], storage=['typedef'] (at pp.c:2024)
    TypeDecl: declname='TransformAlarmC__1__AlarmFrom__precision_tag', quals=[] (at pp.c:2024)
      IdentifierType: names=['TransformAlarmC__1__from_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__1__AlarmFrom__size_type', quals=[], storage=['typedef'] (at pp.c:2025)
    TypeDecl: declname='TransformAlarmC__1__AlarmFrom__size_type', quals=[] (at pp.c:2025)
      IdentifierType: names=['TransformAlarmC__1__from_size_type'] (at None)
  Typedef: name='TransformAlarmC__1__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:2026)
    TypeDecl: declname='TransformAlarmC__1__Counter__precision_tag', quals=[] (at pp.c:2026)
      IdentifierType: names=['TransformAlarmC__1__to_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__1__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:2027)
    TypeDecl: declname='TransformAlarmC__1__Counter__size_type', quals=[] (at pp.c:2027)
      IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
  Typedef: name='AlarmToTimerC__0__precision_tag', quals=[], storage=['typedef'] (at pp.c:2028)
    TypeDecl: declname='AlarmToTimerC__0__precision_tag', quals=[] (at pp.c:2028)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='AlarmToTimerC__0__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:2029)
    TypeDecl: declname='AlarmToTimerC__0__Alarm__precision_tag', quals=[] (at pp.c:2029)
      IdentifierType: names=['AlarmToTimerC__0__precision_tag'] (at None)
  Typedef: name='AlarmToTimerC__0__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:2030)
    TypeDecl: declname='AlarmToTimerC__0__Alarm__size_type', quals=[] (at pp.c:2030)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='AlarmToTimerC__0__Timer__precision_tag', quals=[], storage=['typedef'] (at pp.c:2031)
    TypeDecl: declname='AlarmToTimerC__0__Timer__precision_tag', quals=[] (at pp.c:2031)
      IdentifierType: names=['AlarmToTimerC__0__precision_tag'] (at None)
  Typedef: name='VirtualizeTimerC__0__precision_tag', quals=[], storage=['typedef'] (at pp.c:2032)
    TypeDecl: declname='VirtualizeTimerC__0__precision_tag', quals=[] (at pp.c:2032)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='VirtualizeTimerC__0__TimerFrom__precision_tag', quals=[], storage=['typedef'] (at pp.c:2033)
    TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__precision_tag', quals=[] (at pp.c:2033)
      IdentifierType: names=['VirtualizeTimerC__0__precision_tag'] (at None)
  Typedef: name='VirtualizeTimerC__0__Timer__precision_tag', quals=[], storage=['typedef'] (at pp.c:2034)
    TypeDecl: declname='VirtualizeTimerC__0__Timer__precision_tag', quals=[] (at pp.c:2034)
      IdentifierType: names=['VirtualizeTimerC__0__precision_tag'] (at None)
  Typedef: name='CounterToLocalTimeC__1__precision_tag', quals=[], storage=['typedef'] (at pp.c:2035)
    TypeDecl: declname='CounterToLocalTimeC__1__precision_tag', quals=[] (at pp.c:2035)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='CounterToLocalTimeC__1__LocalTime__precision_tag', quals=[], storage=['typedef'] (at pp.c:2036)
    TypeDecl: declname='CounterToLocalTimeC__1__LocalTime__precision_tag', quals=[] (at pp.c:2036)
      IdentifierType: names=['CounterToLocalTimeC__1__precision_tag'] (at None)
  Typedef: name='CounterToLocalTimeC__1__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:2037)
    TypeDecl: declname='CounterToLocalTimeC__1__Counter__precision_tag', quals=[] (at pp.c:2037)
      IdentifierType: names=['CounterToLocalTimeC__1__precision_tag'] (at None)
  Typedef: name='CounterToLocalTimeC__1__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:2038)
    TypeDecl: declname='CounterToLocalTimeC__1__Counter__size_type', quals=[] (at pp.c:2038)
      IdentifierType: names=['uint32_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2039)
    Enum: name='CC2420SpiC__4____nesc_unnamed4308' (at pp.c:2039)
      EnumeratorList:  (at pp.c:2040)
        Enumerator: name='CC2420SpiC__4__CLIENT_ID' (at pp.c:2040)
          Constant: type='int', value='4U' (at pp.c:2040)
  Typedef: name='RandomMlcgC__SeedInit__parameter', quals=[], storage=['typedef'] (at pp.c:2042)
    TypeDecl: declname='RandomMlcgC__SeedInit__parameter', quals=[] (at pp.c:2042)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2043)
    Enum: name='CC2420TinyosNetworkC____nesc_unnamed4309' (at pp.c:2043)
      EnumeratorList:  (at pp.c:2044)
        Enumerator: name='CC2420TinyosNetworkC__TINYOS_N_NETWORKS' (at pp.c:2044)
          Constant: type='int', value='1U' (at pp.c:2044)
  Decl: name=None, quals=[], storage=[] (at pp.c:2046)
    Enum: name='Msp430Uart1C__0____nesc_unnamed4310' (at pp.c:2046)
      EnumeratorList:  (at pp.c:2047)
        Enumerator: name='Msp430Uart1C__0__CLIENT_ID' (at pp.c:2047)
          Constant: type='int', value='0U' (at pp.c:2047)
  Typedef: name='Msp430UartP__0__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:2049)
    TypeDecl: declname='Msp430UartP__0__Counter__precision_tag', quals=[] (at pp.c:2049)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='Msp430UartP__0__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:2050)
    TypeDecl: declname='Msp430UartP__0__Counter__size_type', quals=[] (at pp.c:2050)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2051)
    Enum: name='Msp430Usart1C__0____nesc_unnamed4311' (at pp.c:2051)
      EnumeratorList:  (at pp.c:2052)
        Enumerator: name='Msp430Usart1C__0__CLIENT_ID' (at pp.c:2052)
          Constant: type='int', value='0U' (at pp.c:2052)
  Decl: name='PlatformP__Init__init', quals=[], storage=['static'] (at pp.c:2055)
    FuncDecl: quals=None (at pp.c:2055)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='PlatformP__Init__init', quals=[] (at pp.c:2055)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[], storage=['static'] (at pp.c:2057)
    FuncDecl: quals=None (at pp.c:2057)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[] (at pp.c:2057)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[], storage=['static'] (at pp.c:2059)
    FuncDecl: quals=None (at pp.c:2059)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[] (at pp.c:2059)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[], storage=['static'] (at pp.c:2063)
    FuncDecl: quals=None (at pp.c:2063)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[] (at pp.c:2063)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[], storage=['static'] (at pp.c:2065)
    FuncDecl: quals=None (at pp.c:2065)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[] (at pp.c:2065)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[], storage=['static'] (at pp.c:2071)
    FuncDecl: quals=None (at pp.c:2071)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[] (at pp.c:2071)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[], storage=['static'] (at pp.c:2073)
    FuncDecl: quals=None (at pp.c:2073)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[] (at pp.c:2073)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[], storage=['static'] (at pp.c:2075)
    FuncDecl: quals=None (at pp.c:2075)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[] (at pp.c:2075)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[], storage=['static'] (at pp.c:2076)
    FuncDecl: quals=None (at pp.c:2076)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[] (at pp.c:2076)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__McuPowerOverride__lowestState', quals=[], storage=['static'] (at pp.c:2078)
    FuncDecl: quals=None (at pp.c:2078)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__McuPowerOverride__lowestState', quals=[] (at pp.c:2078)
        IdentifierType: names=['mcu_power_t'] (at None)
  Decl: name='Msp430ClockP__Init__init', quals=[], storage=['static'] (at pp.c:2080)
    FuncDecl: quals=None (at pp.c:2080)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Init__init', quals=[] (at pp.c:2080)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430TimerP__0__VectorTimerX0__fired', quals=[], storage=['static'] (at pp.c:2082)
    FuncDecl: quals=None (at pp.c:2082)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__VectorTimerX0__fired', quals=[] (at pp.c:2082)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Overflow__fired', quals=[], storage=['static'] (at pp.c:2084)
    FuncDecl: quals=None (at pp.c:2084)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Overflow__fired', quals=[] (at pp.c:2084)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__VectorTimerX1__fired', quals=[], storage=['static'] (at pp.c:2086)
    FuncDecl: quals=None (at pp.c:2086)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__VectorTimerX1__fired', quals=[] (at pp.c:2086)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Event__default__fired', quals=[], storage=['static'] (at pp.c:2088)
    FuncDecl: quals=None (at pp.c:2088)
      ParamList:  (at pp.c:2090)
        Decl: name='arg_0x101409020', quals=[], storage=[] (at pp.c:2090)
          TypeDecl: declname='arg_0x101409020', quals=[] (at pp.c:2090)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Event__default__fired', quals=[] (at pp.c:2088)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__get', quals=[], storage=['static'] (at pp.c:2092)
    FuncDecl: quals=None (at pp.c:2092)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__get', quals=[] (at pp.c:2092)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerP__1__VectorTimerX0__fired', quals=[], storage=['static'] (at pp.c:2094)
    FuncDecl: quals=None (at pp.c:2094)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__VectorTimerX0__fired', quals=[] (at pp.c:2094)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Overflow__fired', quals=[], storage=['static'] (at pp.c:2096)
    FuncDecl: quals=None (at pp.c:2096)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Overflow__fired', quals=[] (at pp.c:2096)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__VectorTimerX1__fired', quals=[], storage=['static'] (at pp.c:2098)
    FuncDecl: quals=None (at pp.c:2098)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__VectorTimerX1__fired', quals=[] (at pp.c:2098)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Event__default__fired', quals=[], storage=['static'] (at pp.c:2100)
    FuncDecl: quals=None (at pp.c:2100)
      ParamList:  (at pp.c:2102)
        Decl: name='arg_0x101409020', quals=[], storage=[] (at pp.c:2102)
          TypeDecl: declname='arg_0x101409020', quals=[] (at pp.c:2102)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Event__default__fired', quals=[] (at pp.c:2100)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Timer__get', quals=[], storage=['static'] (at pp.c:2104)
    FuncDecl: quals=None (at pp.c:2104)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Timer__get', quals=[] (at pp.c:2104)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerP__1__Timer__isOverflowPending', quals=[], storage=['static'] (at pp.c:2105)
    FuncDecl: quals=None (at pp.c:2105)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Timer__isOverflowPending', quals=[] (at pp.c:2105)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430TimerCapComP__0__Capture__getEvent', quals=[], storage=['static'] (at pp.c:2107)
    FuncDecl: quals=None (at pp.c:2107)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Capture__getEvent', quals=[] (at pp.c:2107)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__Capture__default__captured', quals=[], storage=['static'] (at pp.c:2109)
    FuncDecl: quals=None (at pp.c:2109)
      ParamList:  (at pp.c:2109)
        Decl: name='time', quals=[], storage=[] (at pp.c:2109)
          TypeDecl: declname='time', quals=[] (at pp.c:2109)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Capture__default__captured', quals=[] (at pp.c:2109)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Control__getControl', quals=[], storage=['static'] (at pp.c:2111)
    FuncDecl: quals=None (at pp.c:2111)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Control__getControl', quals=[] (at pp.c:2111)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__Event__fired', quals=[], storage=['static'] (at pp.c:2113)
    FuncDecl: quals=None (at pp.c:2113)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Event__fired', quals=[] (at pp.c:2113)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Compare__default__fired', quals=[], storage=['static'] (at pp.c:2115)
    FuncDecl: quals=None (at pp.c:2115)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Compare__default__fired', quals=[] (at pp.c:2115)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Timer__overflow', quals=[], storage=['static'] (at pp.c:2117)
    FuncDecl: quals=None (at pp.c:2117)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Timer__overflow', quals=[] (at pp.c:2117)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Capture__getEvent', quals=[], storage=['static'] (at pp.c:2119)
    FuncDecl: quals=None (at pp.c:2119)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Capture__getEvent', quals=[] (at pp.c:2119)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__Capture__default__captured', quals=[], storage=['static'] (at pp.c:2121)
    FuncDecl: quals=None (at pp.c:2121)
      ParamList:  (at pp.c:2121)
        Decl: name='time', quals=[], storage=[] (at pp.c:2121)
          TypeDecl: declname='time', quals=[] (at pp.c:2121)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Capture__default__captured', quals=[] (at pp.c:2121)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Control__getControl', quals=[], storage=['static'] (at pp.c:2123)
    FuncDecl: quals=None (at pp.c:2123)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Control__getControl', quals=[] (at pp.c:2123)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__Event__fired', quals=[], storage=['static'] (at pp.c:2125)
    FuncDecl: quals=None (at pp.c:2125)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Event__fired', quals=[] (at pp.c:2125)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Compare__default__fired', quals=[], storage=['static'] (at pp.c:2127)
    FuncDecl: quals=None (at pp.c:2127)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Compare__default__fired', quals=[] (at pp.c:2127)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Timer__overflow', quals=[], storage=['static'] (at pp.c:2129)
    FuncDecl: quals=None (at pp.c:2129)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Timer__overflow', quals=[] (at pp.c:2129)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Capture__getEvent', quals=[], storage=['static'] (at pp.c:2131)
    FuncDecl: quals=None (at pp.c:2131)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Capture__getEvent', quals=[] (at pp.c:2131)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__Capture__default__captured', quals=[], storage=['static'] (at pp.c:2133)
    FuncDecl: quals=None (at pp.c:2133)
      ParamList:  (at pp.c:2133)
        Decl: name='time', quals=[], storage=[] (at pp.c:2133)
          TypeDecl: declname='time', quals=[] (at pp.c:2133)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Capture__default__captured', quals=[] (at pp.c:2133)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Control__getControl', quals=[], storage=['static'] (at pp.c:2135)
    FuncDecl: quals=None (at pp.c:2135)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Control__getControl', quals=[] (at pp.c:2135)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__Event__fired', quals=[], storage=['static'] (at pp.c:2137)
    FuncDecl: quals=None (at pp.c:2137)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Event__fired', quals=[] (at pp.c:2137)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Compare__default__fired', quals=[], storage=['static'] (at pp.c:2139)
    FuncDecl: quals=None (at pp.c:2139)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Compare__default__fired', quals=[] (at pp.c:2139)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Timer__overflow', quals=[], storage=['static'] (at pp.c:2141)
    FuncDecl: quals=None (at pp.c:2141)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Timer__overflow', quals=[] (at pp.c:2141)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Capture__getEvent', quals=[], storage=['static'] (at pp.c:2143)
    FuncDecl: quals=None (at pp.c:2143)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Capture__getEvent', quals=[] (at pp.c:2143)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__Capture__default__captured', quals=[], storage=['static'] (at pp.c:2145)
    FuncDecl: quals=None (at pp.c:2145)
      ParamList:  (at pp.c:2145)
        Decl: name='time', quals=[], storage=[] (at pp.c:2145)
          TypeDecl: declname='time', quals=[] (at pp.c:2145)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Capture__default__captured', quals=[] (at pp.c:2145)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__getControl', quals=[], storage=['static'] (at pp.c:2147)
    FuncDecl: quals=None (at pp.c:2147)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__getControl', quals=[] (at pp.c:2147)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__enableEvents', quals=[], storage=['static'] (at pp.c:2149)
    FuncDecl: quals=None (at pp.c:2149)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__enableEvents', quals=[] (at pp.c:2149)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[], storage=['static'] (at pp.c:2151)
    FuncDecl: quals=None (at pp.c:2151)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[] (at pp.c:2151)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__disableEvents', quals=[], storage=['static'] (at pp.c:2162)
    FuncDecl: quals=None (at pp.c:2162)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__disableEvents', quals=[] (at pp.c:2162)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[], storage=['static'] (at pp.c:2164)
    FuncDecl: quals=None (at pp.c:2164)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[] (at pp.c:2164)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Event__fired', quals=[], storage=['static'] (at pp.c:2166)
    FuncDecl: quals=None (at pp.c:2166)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Event__fired', quals=[] (at pp.c:2166)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Compare__setEvent', quals=[], storage=['static'] (at pp.c:2168)
    FuncDecl: quals=None (at pp.c:2168)
      ParamList:  (at pp.c:2168)
        Decl: name='time', quals=[], storage=[] (at pp.c:2168)
          TypeDecl: declname='time', quals=[] (at pp.c:2168)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEvent', quals=[] (at pp.c:2168)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[], storage=['static'] (at pp.c:2170)
    FuncDecl: quals=None (at pp.c:2170)
      ParamList:  (at pp.c:2170)
        Decl: name='delta', quals=[], storage=[] (at pp.c:2170)
          TypeDecl: declname='delta', quals=[] (at pp.c:2170)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[] (at pp.c:2170)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Timer__overflow', quals=[], storage=['static'] (at pp.c:2172)
    FuncDecl: quals=None (at pp.c:2172)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Timer__overflow', quals=[] (at pp.c:2172)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Capture__getEvent', quals=[], storage=['static'] (at pp.c:2174)
    FuncDecl: quals=None (at pp.c:2174)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Capture__getEvent', quals=[] (at pp.c:2174)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__Capture__clearOverflow', quals=[], storage=['static'] (at pp.c:2176)
    FuncDecl: quals=None (at pp.c:2176)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Capture__clearOverflow', quals=[] (at pp.c:2176)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__setControlAsCapture', quals=[], storage=['static'] (at pp.c:2178)
    FuncDecl: quals=None (at pp.c:2178)
      ParamList:  (at pp.c:2178)
        Decl: name='cm', quals=[], storage=[] (at pp.c:2178)
          TypeDecl: declname='cm', quals=[] (at pp.c:2178)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__setControlAsCapture', quals=[] (at pp.c:2178)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__getControl', quals=[], storage=['static'] (at pp.c:2180)
    FuncDecl: quals=None (at pp.c:2180)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__getControl', quals=[] (at pp.c:2180)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__enableEvents', quals=[], storage=['static'] (at pp.c:2182)
    FuncDecl: quals=None (at pp.c:2182)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__enableEvents', quals=[] (at pp.c:2182)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__disableEvents', quals=[], storage=['static'] (at pp.c:2183)
    FuncDecl: quals=None (at pp.c:2183)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__disableEvents', quals=[] (at pp.c:2183)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__clearPendingInterrupt', quals=[], storage=['static'] (at pp.c:2185)
    FuncDecl: quals=None (at pp.c:2185)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__clearPendingInterrupt', quals=[] (at pp.c:2185)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Event__fired', quals=[], storage=['static'] (at pp.c:2187)
    FuncDecl: quals=None (at pp.c:2187)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Event__fired', quals=[] (at pp.c:2187)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Compare__default__fired', quals=[], storage=['static'] (at pp.c:2189)
    FuncDecl: quals=None (at pp.c:2189)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Compare__default__fired', quals=[] (at pp.c:2189)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Timer__overflow', quals=[], storage=['static'] (at pp.c:2191)
    FuncDecl: quals=None (at pp.c:2191)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Timer__overflow', quals=[] (at pp.c:2191)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Capture__getEvent', quals=[], storage=['static'] (at pp.c:2193)
    FuncDecl: quals=None (at pp.c:2193)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Capture__getEvent', quals=[] (at pp.c:2193)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__Capture__default__captured', quals=[], storage=['static'] (at pp.c:2195)
    FuncDecl: quals=None (at pp.c:2195)
      ParamList:  (at pp.c:2195)
        Decl: name='time', quals=[], storage=[] (at pp.c:2195)
          TypeDecl: declname='time', quals=[] (at pp.c:2195)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Capture__default__captured', quals=[] (at pp.c:2195)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__getControl', quals=[], storage=['static'] (at pp.c:2197)
    FuncDecl: quals=None (at pp.c:2197)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__getControl', quals=[] (at pp.c:2197)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__enableEvents', quals=[], storage=['static'] (at pp.c:2199)
    FuncDecl: quals=None (at pp.c:2199)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__enableEvents', quals=[] (at pp.c:2199)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__setControlAsCompare', quals=[], storage=['static'] (at pp.c:2201)
    FuncDecl: quals=None (at pp.c:2201)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__setControlAsCompare', quals=[] (at pp.c:2201)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__disableEvents', quals=[], storage=['static'] (at pp.c:2212)
    FuncDecl: quals=None (at pp.c:2212)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__disableEvents', quals=[] (at pp.c:2212)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__clearPendingInterrupt', quals=[], storage=['static'] (at pp.c:2214)
    FuncDecl: quals=None (at pp.c:2214)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__clearPendingInterrupt', quals=[] (at pp.c:2214)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Event__fired', quals=[], storage=['static'] (at pp.c:2216)
    FuncDecl: quals=None (at pp.c:2216)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Event__fired', quals=[] (at pp.c:2216)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Compare__setEvent', quals=[], storage=['static'] (at pp.c:2218)
    FuncDecl: quals=None (at pp.c:2218)
      ParamList:  (at pp.c:2218)
        Decl: name='time', quals=[], storage=[] (at pp.c:2218)
          TypeDecl: declname='time', quals=[] (at pp.c:2218)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Compare__setEvent', quals=[] (at pp.c:2218)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Compare__setEventFromNow', quals=[], storage=['static'] (at pp.c:2220)
    FuncDecl: quals=None (at pp.c:2220)
      ParamList:  (at pp.c:2220)
        Decl: name='delta', quals=[], storage=[] (at pp.c:2220)
          TypeDecl: declname='delta', quals=[] (at pp.c:2220)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Compare__setEventFromNow', quals=[] (at pp.c:2220)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Timer__overflow', quals=[], storage=['static'] (at pp.c:2222)
    FuncDecl: quals=None (at pp.c:2222)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Timer__overflow', quals=[] (at pp.c:2222)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Capture__getEvent', quals=[], storage=['static'] (at pp.c:2224)
    FuncDecl: quals=None (at pp.c:2224)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Capture__getEvent', quals=[] (at pp.c:2224)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__Capture__default__captured', quals=[], storage=['static'] (at pp.c:2226)
    FuncDecl: quals=None (at pp.c:2226)
      ParamList:  (at pp.c:2226)
        Decl: name='time', quals=[], storage=[] (at pp.c:2226)
          TypeDecl: declname='time', quals=[] (at pp.c:2226)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Capture__default__captured', quals=[] (at pp.c:2226)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Control__getControl', quals=[], storage=['static'] (at pp.c:2228)
    FuncDecl: quals=None (at pp.c:2228)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Control__getControl', quals=[] (at pp.c:2228)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__Event__fired', quals=[], storage=['static'] (at pp.c:2230)
    FuncDecl: quals=None (at pp.c:2230)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Event__fired', quals=[] (at pp.c:2230)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Compare__default__fired', quals=[], storage=['static'] (at pp.c:2232)
    FuncDecl: quals=None (at pp.c:2232)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Compare__default__fired', quals=[] (at pp.c:2232)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Timer__overflow', quals=[], storage=['static'] (at pp.c:2234)
    FuncDecl: quals=None (at pp.c:2234)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Timer__overflow', quals=[] (at pp.c:2234)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Capture__getEvent', quals=[], storage=['static'] (at pp.c:2236)
    FuncDecl: quals=None (at pp.c:2236)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Capture__getEvent', quals=[] (at pp.c:2236)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__Capture__default__captured', quals=[], storage=['static'] (at pp.c:2238)
    FuncDecl: quals=None (at pp.c:2238)
      ParamList:  (at pp.c:2238)
        Decl: name='time', quals=[], storage=[] (at pp.c:2238)
          TypeDecl: declname='time', quals=[] (at pp.c:2238)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Capture__default__captured', quals=[] (at pp.c:2238)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Control__getControl', quals=[], storage=['static'] (at pp.c:2240)
    FuncDecl: quals=None (at pp.c:2240)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Control__getControl', quals=[] (at pp.c:2240)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__Event__fired', quals=[], storage=['static'] (at pp.c:2242)
    FuncDecl: quals=None (at pp.c:2242)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Event__fired', quals=[] (at pp.c:2242)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Compare__default__fired', quals=[], storage=['static'] (at pp.c:2244)
    FuncDecl: quals=None (at pp.c:2244)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Compare__default__fired', quals=[] (at pp.c:2244)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Timer__overflow', quals=[], storage=['static'] (at pp.c:2246)
    FuncDecl: quals=None (at pp.c:2246)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Timer__overflow', quals=[] (at pp.c:2246)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Capture__getEvent', quals=[], storage=['static'] (at pp.c:2248)
    FuncDecl: quals=None (at pp.c:2248)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Capture__getEvent', quals=[] (at pp.c:2248)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__Capture__default__captured', quals=[], storage=['static'] (at pp.c:2250)
    FuncDecl: quals=None (at pp.c:2250)
      ParamList:  (at pp.c:2250)
        Decl: name='time', quals=[], storage=[] (at pp.c:2250)
          TypeDecl: declname='time', quals=[] (at pp.c:2250)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Capture__default__captured', quals=[] (at pp.c:2250)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Control__getControl', quals=[], storage=['static'] (at pp.c:2252)
    FuncDecl: quals=None (at pp.c:2252)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Control__getControl', quals=[] (at pp.c:2252)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__Event__fired', quals=[], storage=['static'] (at pp.c:2254)
    FuncDecl: quals=None (at pp.c:2254)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Event__fired', quals=[] (at pp.c:2254)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Compare__default__fired', quals=[], storage=['static'] (at pp.c:2256)
    FuncDecl: quals=None (at pp.c:2256)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Compare__default__fired', quals=[] (at pp.c:2256)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Timer__overflow', quals=[], storage=['static'] (at pp.c:2258)
    FuncDecl: quals=None (at pp.c:2258)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Timer__overflow', quals=[] (at pp.c:2258)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Capture__getEvent', quals=[], storage=['static'] (at pp.c:2260)
    FuncDecl: quals=None (at pp.c:2260)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Capture__getEvent', quals=[] (at pp.c:2260)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__Capture__default__captured', quals=[], storage=['static'] (at pp.c:2262)
    FuncDecl: quals=None (at pp.c:2262)
      ParamList:  (at pp.c:2262)
        Decl: name='time', quals=[], storage=[] (at pp.c:2262)
          TypeDecl: declname='time', quals=[] (at pp.c:2262)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Capture__default__captured', quals=[] (at pp.c:2262)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Control__getControl', quals=[], storage=['static'] (at pp.c:2264)
    FuncDecl: quals=None (at pp.c:2264)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Control__getControl', quals=[] (at pp.c:2264)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__Event__fired', quals=[], storage=['static'] (at pp.c:2266)
    FuncDecl: quals=None (at pp.c:2266)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Event__fired', quals=[] (at pp.c:2266)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Compare__default__fired', quals=[], storage=['static'] (at pp.c:2268)
    FuncDecl: quals=None (at pp.c:2268)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Compare__default__fired', quals=[] (at pp.c:2268)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Timer__overflow', quals=[], storage=['static'] (at pp.c:2270)
    FuncDecl: quals=None (at pp.c:2270)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Timer__overflow', quals=[] (at pp.c:2270)
        IdentifierType: names=['void'] (at None)
  Decl: name='McuSleepC__McuSleep__sleep', quals=[], storage=['static'] (at pp.c:2272)
    FuncDecl: quals=None (at pp.c:2272)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='McuSleepC__McuSleep__sleep', quals=[] (at pp.c:2272)
        IdentifierType: names=['void'] (at None)
  Decl: name='MotePlatformC__SubInit__default__init', quals=[], storage=['static'] (at pp.c:2274)
    FuncDecl: quals=None (at pp.c:2274)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='MotePlatformC__SubInit__default__init', quals=[] (at pp.c:2274)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='MotePlatformC__Init__init', quals=[], storage=['static'] (at pp.c:2276)
    FuncDecl: quals=None (at pp.c:2276)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='MotePlatformC__Init__init', quals=[] (at pp.c:2276)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SchedulerBasicP__TaskBasic__postTask', quals=[], storage=['static'] (at pp.c:2278)
    FuncDecl: quals=None (at pp.c:2278)
      ParamList:  (at pp.c:2280)
        Decl: name='arg_0x101333340', quals=[], storage=[] (at pp.c:2280)
          TypeDecl: declname='arg_0x101333340', quals=[] (at pp.c:2280)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__TaskBasic__postTask', quals=[] (at pp.c:2278)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SchedulerBasicP__TaskBasic__default__runTask', quals=[], storage=['static'] (at pp.c:2282)
    FuncDecl: quals=None (at pp.c:2282)
      ParamList:  (at pp.c:2284)
        Decl: name='arg_0x101333340', quals=[], storage=[] (at pp.c:2284)
          TypeDecl: declname='arg_0x101333340', quals=[] (at pp.c:2284)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__TaskBasic__default__runTask', quals=[] (at pp.c:2282)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__init', quals=[], storage=['static'] (at pp.c:2286)
    FuncDecl: quals=None (at pp.c:2286)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__init', quals=[] (at pp.c:2286)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__taskLoop', quals=[], storage=['static'] (at pp.c:2288)
    FuncDecl: quals=None (at pp.c:2288)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__taskLoop', quals=[] (at pp.c:2288)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__runNextTask', quals=[], storage=['static'] (at pp.c:2290)
    FuncDecl: quals=None (at pp.c:2290)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__runNextTask', quals=[] (at pp.c:2290)
        IdentifierType: names=['bool'] (at None)
  Decl: name='BaseStationP__Boot__booted', quals=[], storage=['static'] (at pp.c:2292)
    FuncDecl: quals=None (at pp.c:2292)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BaseStationP__Boot__booted', quals=[] (at pp.c:2292)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__SerialControl__startDone', quals=[], storage=['static'] (at pp.c:2294)
    FuncDecl: quals=None (at pp.c:2294)
      ParamList:  (at pp.c:2294)
        Decl: name='error', quals=[], storage=[] (at pp.c:2294)
          TypeDecl: declname='error', quals=[] (at pp.c:2294)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='BaseStationP__SerialControl__startDone', quals=[] (at pp.c:2294)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__SerialControl__stopDone', quals=[], storage=['static'] (at pp.c:2296)
    FuncDecl: quals=None (at pp.c:2296)
      ParamList:  (at pp.c:2296)
        Decl: name='error', quals=[], storage=[] (at pp.c:2296)
          TypeDecl: declname='error', quals=[] (at pp.c:2296)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='BaseStationP__SerialControl__stopDone', quals=[] (at pp.c:2296)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__UartReceive__receive', quals=[], storage=['static'] (at pp.c:2304)
    FuncDecl: quals=None (at pp.c:2304)
      ParamList:  (at pp.c:2306)
        Decl: name='arg_0x101595220', quals=[], storage=[] (at pp.c:2306)
          TypeDecl: declname='arg_0x101595220', quals=[] (at pp.c:2306)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:2308)
          PtrDecl: quals=[] (at pp.c:2308)
            TypeDecl: declname='msg', quals=[] (at pp.c:2308)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:2309)
          PtrDecl: quals=[] (at pp.c:2309)
            TypeDecl: declname='payload', quals=[] (at pp.c:2309)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:2315)
          TypeDecl: declname='len', quals=[] (at pp.c:2315)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:2300)
        TypeDecl: declname='BaseStationP__UartReceive__receive', quals=[] (at pp.c:2304)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='BaseStationP__uartSendTask__runTask', quals=[], storage=['static'] (at pp.c:2317)
    FuncDecl: quals=None (at pp.c:2317)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BaseStationP__uartSendTask__runTask', quals=[] (at pp.c:2317)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__RadioControl__startDone', quals=[], storage=['static'] (at pp.c:2319)
    FuncDecl: quals=None (at pp.c:2319)
      ParamList:  (at pp.c:2319)
        Decl: name='error', quals=[], storage=[] (at pp.c:2319)
          TypeDecl: declname='error', quals=[] (at pp.c:2319)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='BaseStationP__RadioControl__startDone', quals=[] (at pp.c:2319)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__RadioControl__stopDone', quals=[], storage=['static'] (at pp.c:2321)
    FuncDecl: quals=None (at pp.c:2321)
      ParamList:  (at pp.c:2321)
        Decl: name='error', quals=[], storage=[] (at pp.c:2321)
          TypeDecl: declname='error', quals=[] (at pp.c:2321)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='BaseStationP__RadioControl__stopDone', quals=[] (at pp.c:2321)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__RadioReceive__receive', quals=[], storage=['static'] (at pp.c:2329)
    FuncDecl: quals=None (at pp.c:2329)
      ParamList:  (at pp.c:2331)
        Decl: name='arg_0x101588d58', quals=[], storage=[] (at pp.c:2331)
          TypeDecl: declname='arg_0x101588d58', quals=[] (at pp.c:2331)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:2333)
          PtrDecl: quals=[] (at pp.c:2333)
            TypeDecl: declname='msg', quals=[] (at pp.c:2333)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:2334)
          PtrDecl: quals=[] (at pp.c:2334)
            TypeDecl: declname='payload', quals=[] (at pp.c:2334)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:2340)
          TypeDecl: declname='len', quals=[] (at pp.c:2340)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:2325)
        TypeDecl: declname='BaseStationP__RadioReceive__receive', quals=[] (at pp.c:2329)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='BaseStationP__radioSendTask__runTask', quals=[], storage=['static'] (at pp.c:2342)
    FuncDecl: quals=None (at pp.c:2342)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BaseStationP__radioSendTask__runTask', quals=[] (at pp.c:2342)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__RadioSend__sendDone', quals=[], storage=['static'] (at pp.c:2344)
    FuncDecl: quals=None (at pp.c:2344)
      ParamList:  (at pp.c:2346)
        Decl: name='arg_0x101591b28', quals=[], storage=[] (at pp.c:2346)
          TypeDecl: declname='arg_0x101591b28', quals=[] (at pp.c:2346)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:2348)
          PtrDecl: quals=[] (at pp.c:2348)
            TypeDecl: declname='msg', quals=[] (at pp.c:2348)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:2355)
          TypeDecl: declname='error', quals=[] (at pp.c:2355)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='BaseStationP__RadioSend__sendDone', quals=[] (at pp.c:2344)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__UartSend__sendDone', quals=[], storage=['static'] (at pp.c:2357)
    FuncDecl: quals=None (at pp.c:2357)
      ParamList:  (at pp.c:2359)
        Decl: name='arg_0x101594578', quals=[], storage=[] (at pp.c:2359)
          TypeDecl: declname='arg_0x101594578', quals=[] (at pp.c:2359)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:2361)
          PtrDecl: quals=[] (at pp.c:2361)
            TypeDecl: declname='msg', quals=[] (at pp.c:2361)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:2368)
          TypeDecl: declname='error', quals=[] (at pp.c:2368)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='BaseStationP__UartSend__sendDone', quals=[] (at pp.c:2357)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__RadioSnoop__receive', quals=[], storage=['static'] (at pp.c:2376)
    FuncDecl: quals=None (at pp.c:2376)
      ParamList:  (at pp.c:2378)
        Decl: name='arg_0x1015b69f0', quals=[], storage=[] (at pp.c:2378)
          TypeDecl: declname='arg_0x1015b69f0', quals=[] (at pp.c:2378)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:2380)
          PtrDecl: quals=[] (at pp.c:2380)
            TypeDecl: declname='msg', quals=[] (at pp.c:2380)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:2381)
          PtrDecl: quals=[] (at pp.c:2381)
            TypeDecl: declname='payload', quals=[] (at pp.c:2381)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:2387)
          TypeDecl: declname='len', quals=[] (at pp.c:2387)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:2372)
        TypeDecl: declname='BaseStationP__RadioSnoop__receive', quals=[] (at pp.c:2376)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='LedsP__Init__init', quals=[], storage=['static'] (at pp.c:2389)
    FuncDecl: quals=None (at pp.c:2389)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Init__init', quals=[] (at pp.c:2389)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='LedsP__Leds__led0Toggle', quals=[], storage=['static'] (at pp.c:2391)
    FuncDecl: quals=None (at pp.c:2391)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led0Toggle', quals=[] (at pp.c:2391)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led1Toggle', quals=[], storage=['static'] (at pp.c:2393)
    FuncDecl: quals=None (at pp.c:2393)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led1Toggle', quals=[] (at pp.c:2393)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led2Toggle', quals=[], storage=['static'] (at pp.c:2395)
    FuncDecl: quals=None (at pp.c:2395)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led2Toggle', quals=[] (at pp.c:2395)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__0__IO__get', quals=[], storage=['static'] (at pp.c:2397)
    FuncDecl: quals=None (at pp.c:2397)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__0__IO__get', quals=[] (at pp.c:2397)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430GeneralIOP__0__IO__getRaw', quals=[], storage=['static'] (at pp.c:2399)
    FuncDecl: quals=None (at pp.c:2399)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__0__IO__getRaw', quals=[] (at pp.c:2399)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430GeneralIOP__3__IO__get', quals=[], storage=['static'] (at pp.c:2406)
    FuncDecl: quals=None (at pp.c:2406)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__3__IO__get', quals=[] (at pp.c:2406)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430GeneralIOP__3__IO__getRaw', quals=[], storage=['static'] (at pp.c:2408)
    FuncDecl: quals=None (at pp.c:2408)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__3__IO__getRaw', quals=[] (at pp.c:2408)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430GeneralIOP__4__IO__makeInput', quals=[], storage=['static'] (at pp.c:2410)
    FuncDecl: quals=None (at pp.c:2410)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__4__IO__makeInput', quals=[] (at pp.c:2410)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__4__IO__get', quals=[], storage=['static'] (at pp.c:2412)
    FuncDecl: quals=None (at pp.c:2412)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__4__IO__get', quals=[] (at pp.c:2412)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430GeneralIOP__4__IO__getRaw', quals=[], storage=['static'] (at pp.c:2414)
    FuncDecl: quals=None (at pp.c:2414)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__4__IO__getRaw', quals=[] (at pp.c:2414)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430GeneralIOP__12__IO__makeInput', quals=[], storage=['static'] (at pp.c:2416)
    FuncDecl: quals=None (at pp.c:2416)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__12__IO__makeInput', quals=[] (at pp.c:2416)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__12__IO__makeOutput', quals=[], storage=['static'] (at pp.c:2423)
    FuncDecl: quals=None (at pp.c:2423)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__12__IO__makeOutput', quals=[] (at pp.c:2423)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__12__IO__get', quals=[], storage=['static'] (at pp.c:2425)
    FuncDecl: quals=None (at pp.c:2425)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__12__IO__get', quals=[] (at pp.c:2425)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430GeneralIOP__12__IO__getRaw', quals=[], storage=['static'] (at pp.c:2427)
    FuncDecl: quals=None (at pp.c:2427)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__12__IO__getRaw', quals=[] (at pp.c:2427)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430GeneralIOP__12__IO__clr', quals=[], storage=['static'] (at pp.c:2429)
    FuncDecl: quals=None (at pp.c:2429)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__12__IO__clr', quals=[] (at pp.c:2429)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__17__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2431)
    FuncDecl: quals=None (at pp.c:2431)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__17__IO__selectIOFunc', quals=[] (at pp.c:2431)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__17__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:2433)
    FuncDecl: quals=None (at pp.c:2433)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__17__IO__selectModuleFunc', quals=[] (at pp.c:2433)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__18__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2440)
    FuncDecl: quals=None (at pp.c:2440)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__18__IO__selectIOFunc', quals=[] (at pp.c:2440)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__18__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:2442)
    FuncDecl: quals=None (at pp.c:2442)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__18__IO__selectModuleFunc', quals=[] (at pp.c:2442)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__19__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2449)
    FuncDecl: quals=None (at pp.c:2449)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__19__IO__selectIOFunc', quals=[] (at pp.c:2449)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__19__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:2451)
    FuncDecl: quals=None (at pp.c:2451)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__19__IO__selectModuleFunc', quals=[] (at pp.c:2451)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__20__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2458)
    FuncDecl: quals=None (at pp.c:2458)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__20__IO__selectIOFunc', quals=[] (at pp.c:2458)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__21__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2460)
    FuncDecl: quals=None (at pp.c:2460)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__21__IO__selectIOFunc', quals=[] (at pp.c:2460)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__22__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2462)
    FuncDecl: quals=None (at pp.c:2462)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__22__IO__selectIOFunc', quals=[] (at pp.c:2462)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__22__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:2464)
    FuncDecl: quals=None (at pp.c:2464)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__22__IO__selectModuleFunc', quals=[] (at pp.c:2464)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__23__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2471)
    FuncDecl: quals=None (at pp.c:2471)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__23__IO__selectIOFunc', quals=[] (at pp.c:2471)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__23__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:2473)
    FuncDecl: quals=None (at pp.c:2473)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__23__IO__selectModuleFunc', quals=[] (at pp.c:2473)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__toggle', quals=[], storage=['static'] (at pp.c:2475)
    FuncDecl: quals=None (at pp.c:2475)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__toggle', quals=[] (at pp.c:2475)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[], storage=['static'] (at pp.c:2477)
    FuncDecl: quals=None (at pp.c:2477)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[] (at pp.c:2477)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__set', quals=[], storage=['static'] (at pp.c:2479)
    FuncDecl: quals=None (at pp.c:2479)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__set', quals=[] (at pp.c:2479)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__25__IO__makeInput', quals=[], storage=['static'] (at pp.c:2481)
    FuncDecl: quals=None (at pp.c:2481)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__25__IO__makeInput', quals=[] (at pp.c:2481)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__25__IO__get', quals=[], storage=['static'] (at pp.c:2483)
    FuncDecl: quals=None (at pp.c:2483)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__25__IO__get', quals=[] (at pp.c:2483)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430GeneralIOP__25__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2485)
    FuncDecl: quals=None (at pp.c:2485)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__25__IO__selectIOFunc', quals=[] (at pp.c:2485)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__25__IO__getRaw', quals=[], storage=['static'] (at pp.c:2487)
    FuncDecl: quals=None (at pp.c:2487)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__25__IO__getRaw', quals=[] (at pp.c:2487)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430GeneralIOP__25__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:2489)
    FuncDecl: quals=None (at pp.c:2489)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__25__IO__selectModuleFunc', quals=[] (at pp.c:2489)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__26__IO__makeOutput', quals=[], storage=['static'] (at pp.c:2491)
    FuncDecl: quals=None (at pp.c:2491)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__26__IO__makeOutput', quals=[] (at pp.c:2491)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__26__IO__set', quals=[], storage=['static'] (at pp.c:2493)
    FuncDecl: quals=None (at pp.c:2493)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__26__IO__set', quals=[] (at pp.c:2493)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__26__IO__clr', quals=[], storage=['static'] (at pp.c:2498)
    FuncDecl: quals=None (at pp.c:2498)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__26__IO__clr', quals=[] (at pp.c:2498)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__toggle', quals=[], storage=['static'] (at pp.c:2503)
    FuncDecl: quals=None (at pp.c:2503)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__toggle', quals=[] (at pp.c:2503)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[], storage=['static'] (at pp.c:2505)
    FuncDecl: quals=None (at pp.c:2505)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[] (at pp.c:2505)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__set', quals=[], storage=['static'] (at pp.c:2507)
    FuncDecl: quals=None (at pp.c:2507)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__set', quals=[] (at pp.c:2507)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__29__IO__makeOutput', quals=[], storage=['static'] (at pp.c:2509)
    FuncDecl: quals=None (at pp.c:2509)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__29__IO__makeOutput', quals=[] (at pp.c:2509)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__29__IO__set', quals=[], storage=['static'] (at pp.c:2511)
    FuncDecl: quals=None (at pp.c:2511)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__29__IO__set', quals=[] (at pp.c:2511)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__29__IO__clr', quals=[], storage=['static'] (at pp.c:2516)
    FuncDecl: quals=None (at pp.c:2516)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__29__IO__clr', quals=[] (at pp.c:2516)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__30__IO__makeOutput', quals=[], storage=['static'] (at pp.c:2518)
    FuncDecl: quals=None (at pp.c:2518)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__30__IO__makeOutput', quals=[] (at pp.c:2518)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__30__IO__set', quals=[], storage=['static'] (at pp.c:2520)
    FuncDecl: quals=None (at pp.c:2520)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__30__IO__set', quals=[] (at pp.c:2520)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__30__IO__clr', quals=[], storage=['static'] (at pp.c:2525)
    FuncDecl: quals=None (at pp.c:2525)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__30__IO__clr', quals=[] (at pp.c:2525)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__toggle', quals=[], storage=['static'] (at pp.c:2530)
    FuncDecl: quals=None (at pp.c:2530)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__toggle', quals=[] (at pp.c:2530)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[], storage=['static'] (at pp.c:2532)
    FuncDecl: quals=None (at pp.c:2532)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[] (at pp.c:2532)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__set', quals=[], storage=['static'] (at pp.c:2534)
    FuncDecl: quals=None (at pp.c:2534)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__set', quals=[] (at pp.c:2534)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__33__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2536)
    FuncDecl: quals=None (at pp.c:2536)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__33__IO__selectIOFunc', quals=[] (at pp.c:2536)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__34__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2538)
    FuncDecl: quals=None (at pp.c:2538)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__34__IO__selectIOFunc', quals=[] (at pp.c:2538)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__35__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2540)
    FuncDecl: quals=None (at pp.c:2540)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__35__IO__selectIOFunc', quals=[] (at pp.c:2540)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__toggle', quals=[], storage=['static'] (at pp.c:2542)
    FuncDecl: quals=None (at pp.c:2542)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__toggle', quals=[] (at pp.c:2542)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:2546)
    FuncDecl: quals=None (at pp.c:2546)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__makeOutput', quals=[] (at pp.c:2546)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__set', quals=[], storage=['static'] (at pp.c:2548)
    FuncDecl: quals=None (at pp.c:2548)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__set', quals=[] (at pp.c:2548)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__toggle', quals=[], storage=['static'] (at pp.c:2550)
    FuncDecl: quals=None (at pp.c:2550)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__toggle', quals=[] (at pp.c:2550)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:2554)
    FuncDecl: quals=None (at pp.c:2554)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__makeOutput', quals=[] (at pp.c:2554)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__set', quals=[], storage=['static'] (at pp.c:2556)
    FuncDecl: quals=None (at pp.c:2556)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__set', quals=[] (at pp.c:2556)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__GeneralIO__toggle', quals=[], storage=['static'] (at pp.c:2558)
    FuncDecl: quals=None (at pp.c:2558)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__GeneralIO__toggle', quals=[] (at pp.c:2558)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__GeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:2562)
    FuncDecl: quals=None (at pp.c:2562)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__GeneralIO__makeOutput', quals=[] (at pp.c:2562)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__GeneralIO__set', quals=[], storage=['static'] (at pp.c:2564)
    FuncDecl: quals=None (at pp.c:2564)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__GeneralIO__set', quals=[] (at pp.c:2564)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__SplitControl__start', quals=[], storage=['static'] (at pp.c:2566)
    FuncDecl: quals=None (at pp.c:2566)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__SplitControl__start', quals=[] (at pp.c:2566)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__SubBackoff__requestInitialBackoff', quals=[], storage=['static'] (at pp.c:2568)
    FuncDecl: quals=None (at pp.c:2568)
      ParamList:  (at pp.c:2568)
        Decl: name='msg', quals=[], storage=[] (at pp.c:2568)
          PtrDecl: quals=[] (at pp.c:2568)
            TypeDecl: declname='msg', quals=[] (at pp.c:2568)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SubBackoff__requestInitialBackoff', quals=[] (at pp.c:2568)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__SubBackoff__requestCongestionBackoff', quals=[], storage=['static'] (at pp.c:2575)
    FuncDecl: quals=None (at pp.c:2575)
      ParamList:  (at pp.c:2575)
        Decl: name='msg', quals=[], storage=[] (at pp.c:2575)
          PtrDecl: quals=[] (at pp.c:2575)
            TypeDecl: declname='msg', quals=[] (at pp.c:2575)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SubBackoff__requestCongestionBackoff', quals=[] (at pp.c:2575)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__CC2420Transmit__sendDone', quals=[], storage=['static'] (at pp.c:2577)
    FuncDecl: quals=None (at pp.c:2577)
      ParamList:  (at pp.c:2577)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:2577)
          PtrDecl: quals=[] (at pp.c:2577)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:2577)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:2577)
          TypeDecl: declname='error', quals=[] (at pp.c:2577)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Transmit__sendDone', quals=[] (at pp.c:2577)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__Send__send', quals=[], storage=['static'] (at pp.c:2579)
    FuncDecl: quals=None (at pp.c:2579)
      ParamList:  (at pp.c:2581)
        Decl: name='msg', quals=[], storage=[] (at pp.c:2581)
          PtrDecl: quals=[] (at pp.c:2581)
            TypeDecl: declname='msg', quals=[] (at pp.c:2581)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:2589)
          TypeDecl: declname='len', quals=[] (at pp.c:2589)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__Send__send', quals=[] (at pp.c:2579)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__Send__maxPayloadLength', quals=[], storage=['static'] (at pp.c:2591)
    FuncDecl: quals=None (at pp.c:2591)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__Send__maxPayloadLength', quals=[] (at pp.c:2591)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420CsmaP__CC2420Power__startOscillatorDone', quals=[], storage=['static'] (at pp.c:2593)
    FuncDecl: quals=None (at pp.c:2593)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Power__startOscillatorDone', quals=[] (at pp.c:2593)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__CC2420Power__startVRegDone', quals=[], storage=['static'] (at pp.c:2595)
    FuncDecl: quals=None (at pp.c:2595)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Power__startVRegDone', quals=[] (at pp.c:2595)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__Resource__granted', quals=[], storage=['static'] (at pp.c:2597)
    FuncDecl: quals=None (at pp.c:2597)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__Resource__granted', quals=[] (at pp.c:2597)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__sendDone_task__runTask', quals=[], storage=['static'] (at pp.c:2599)
    FuncDecl: quals=None (at pp.c:2599)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__sendDone_task__runTask', quals=[] (at pp.c:2599)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__stopDone_task__runTask', quals=[], storage=['static'] (at pp.c:2601)
    FuncDecl: quals=None (at pp.c:2601)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__stopDone_task__runTask', quals=[] (at pp.c:2601)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__startDone_task__runTask', quals=[], storage=['static'] (at pp.c:2603)
    FuncDecl: quals=None (at pp.c:2603)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__startDone_task__runTask', quals=[] (at pp.c:2603)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__isAddressRecognitionEnabled', quals=[], storage=['static'] (at pp.c:2605)
    FuncDecl: quals=None (at pp.c:2605)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__isAddressRecognitionEnabled', quals=[] (at pp.c:2605)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__isAutoAckEnabled', quals=[], storage=['static'] (at pp.c:2607)
    FuncDecl: quals=None (at pp.c:2607)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__isAutoAckEnabled', quals=[] (at pp.c:2607)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__isHwAutoAckDefault', quals=[], storage=['static'] (at pp.c:2609)
    FuncDecl: quals=None (at pp.c:2609)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__isHwAutoAckDefault', quals=[] (at pp.c:2609)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__getExtAddr', quals=[], storage=['static'] (at pp.c:2611)
    FuncDecl: quals=None (at pp.c:2611)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__getExtAddr', quals=[] (at pp.c:2611)
        IdentifierType: names=['ieee_eui64_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__getShortAddr', quals=[], storage=['static'] (at pp.c:2616)
    FuncDecl: quals=None (at pp.c:2616)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__getShortAddr', quals=[] (at pp.c:2616)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__sync', quals=[], storage=['static'] (at pp.c:2618)
    FuncDecl: quals=None (at pp.c:2618)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__sync', quals=[] (at pp.c:2618)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__getPanAddr', quals=[], storage=['static'] (at pp.c:2620)
    FuncDecl: quals=None (at pp.c:2620)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__getPanAddr', quals=[] (at pp.c:2620)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420ControlP__StartupTimer__fired', quals=[], storage=['static'] (at pp.c:2622)
    FuncDecl: quals=None (at pp.c:2622)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__StartupTimer__fired', quals=[] (at pp.c:2622)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__ReadRssi__default__readDone', quals=[], storage=['static'] (at pp.c:2624)
    FuncDecl: quals=None (at pp.c:2624)
      ParamList:  (at pp.c:2624)
        Decl: name='result', quals=[], storage=[] (at pp.c:2624)
          TypeDecl: declname='result', quals=[] (at pp.c:2624)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='val', quals=[], storage=[] (at pp.c:2624)
          TypeDecl: declname='val', quals=[] (at pp.c:2624)
            IdentifierType: names=['CC2420ControlP__ReadRssi__val_t'] (at None)
      TypeDecl: declname='CC2420ControlP__ReadRssi__default__readDone', quals=[] (at pp.c:2624)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__syncDone__runTask', quals=[], storage=['static'] (at pp.c:2626)
    FuncDecl: quals=None (at pp.c:2626)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__syncDone__runTask', quals=[] (at pp.c:2626)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__Init__init', quals=[], storage=['static'] (at pp.c:2628)
    FuncDecl: quals=None (at pp.c:2628)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__Init__init', quals=[] (at pp.c:2628)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__SpiResource__granted', quals=[], storage=['static'] (at pp.c:2630)
    FuncDecl: quals=None (at pp.c:2630)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SpiResource__granted', quals=[] (at pp.c:2630)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__SyncResource__granted', quals=[], storage=['static'] (at pp.c:2632)
    FuncDecl: quals=None (at pp.c:2632)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SyncResource__granted', quals=[] (at pp.c:2632)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__CC2420Power__startOscillator', quals=[], storage=['static'] (at pp.c:2634)
    FuncDecl: quals=None (at pp.c:2634)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Power__startOscillator', quals=[] (at pp.c:2634)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Power__rxOn', quals=[], storage=['static'] (at pp.c:2636)
    FuncDecl: quals=None (at pp.c:2636)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Power__rxOn', quals=[] (at pp.c:2636)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Power__startVReg', quals=[], storage=['static'] (at pp.c:2638)
    FuncDecl: quals=None (at pp.c:2638)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Power__startVReg', quals=[] (at pp.c:2638)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Power__stopVReg', quals=[], storage=['static'] (at pp.c:2640)
    FuncDecl: quals=None (at pp.c:2640)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Power__stopVReg', quals=[] (at pp.c:2640)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__sync__runTask', quals=[], storage=['static'] (at pp.c:2642)
    FuncDecl: quals=None (at pp.c:2642)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__sync__runTask', quals=[] (at pp.c:2642)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__Resource__release', quals=[], storage=['static'] (at pp.c:2644)
    FuncDecl: quals=None (at pp.c:2644)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__Resource__release', quals=[] (at pp.c:2644)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__Resource__request', quals=[], storage=['static'] (at pp.c:2646)
    FuncDecl: quals=None (at pp.c:2646)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__Resource__request', quals=[] (at pp.c:2646)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__InterruptCCA__fired', quals=[], storage=['static'] (at pp.c:2648)
    FuncDecl: quals=None (at pp.c:2648)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__InterruptCCA__fired', quals=[] (at pp.c:2648)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__RssiResource__granted', quals=[], storage=['static'] (at pp.c:2650)
    FuncDecl: quals=None (at pp.c:2650)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__RssiResource__granted', quals=[] (at pp.c:2650)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Compare__fired', quals=[], storage=['static'] (at pp.c:2652)
    FuncDecl: quals=None (at pp.c:2652)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__fired', quals=[] (at pp.c:2652)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Timer__overflow', quals=[], storage=['static'] (at pp.c:2654)
    FuncDecl: quals=None (at pp.c:2654)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Timer__overflow', quals=[] (at pp.c:2654)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Alarm__startAt', quals=[], storage=['static'] (at pp.c:2656)
    FuncDecl: quals=None (at pp.c:2656)
      ParamList:  (at pp.c:2656)
        Decl: name='t0', quals=[], storage=[] (at pp.c:2656)
          TypeDecl: declname='t0', quals=[] (at pp.c:2656)
            IdentifierType: names=['Msp430AlarmC__0__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:2656)
          TypeDecl: declname='dt', quals=[] (at pp.c:2656)
            IdentifierType: names=['Msp430AlarmC__0__Alarm__size_type'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Alarm__startAt', quals=[] (at pp.c:2656)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Alarm__stop', quals=[], storage=['static'] (at pp.c:2658)
    FuncDecl: quals=None (at pp.c:2658)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Alarm__stop', quals=[] (at pp.c:2658)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Init__init', quals=[], storage=['static'] (at pp.c:2660)
    FuncDecl: quals=None (at pp.c:2660)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Init__init', quals=[] (at pp.c:2660)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430CounterC__0__Msp430Timer__overflow', quals=[], storage=['static'] (at pp.c:2662)
    FuncDecl: quals=None (at pp.c:2662)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Msp430Timer__overflow', quals=[] (at pp.c:2662)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430CounterC__0__Counter__get', quals=[], storage=['static'] (at pp.c:2664)
    FuncDecl: quals=None (at pp.c:2664)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Counter__get', quals=[] (at pp.c:2664)
        IdentifierType: names=['Msp430CounterC__0__Counter__size_type'] (at None)
  Decl: name='Msp430CounterC__0__Counter__isOverflowPending', quals=[], storage=['static'] (at pp.c:2671)
    FuncDecl: quals=None (at pp.c:2671)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Counter__isOverflowPending', quals=[] (at pp.c:2671)
        IdentifierType: names=['bool'] (at None)
  Decl: name='TransformCounterC__0__CounterFrom__overflow', quals=[], storage=['static'] (at pp.c:2682)
    FuncDecl: quals=None (at pp.c:2682)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__CounterFrom__overflow', quals=[] (at pp.c:2682)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformCounterC__0__Counter__get', quals=[], storage=['static'] (at pp.c:2684)
    FuncDecl: quals=None (at pp.c:2684)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__Counter__get', quals=[] (at pp.c:2684)
        IdentifierType: names=['TransformCounterC__0__Counter__size_type'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__getNow', quals=[], storage=['static'] (at pp.c:2686)
    FuncDecl: quals=None (at pp.c:2686)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__getNow', quals=[] (at pp.c:2686)
        IdentifierType: names=['TransformAlarmC__0__Alarm__size_type'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__startAt', quals=[], storage=['static'] (at pp.c:2688)
    FuncDecl: quals=None (at pp.c:2688)
      ParamList:  (at pp.c:2688)
        Decl: name='t0', quals=[], storage=[] (at pp.c:2688)
          TypeDecl: declname='t0', quals=[] (at pp.c:2688)
            IdentifierType: names=['TransformAlarmC__0__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:2688)
          TypeDecl: declname='dt', quals=[] (at pp.c:2688)
            IdentifierType: names=['TransformAlarmC__0__Alarm__size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__startAt', quals=[] (at pp.c:2688)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__start', quals=[], storage=['static'] (at pp.c:2690)
    FuncDecl: quals=None (at pp.c:2690)
      ParamList:  (at pp.c:2690)
        Decl: name='dt', quals=[], storage=[] (at pp.c:2690)
          TypeDecl: declname='dt', quals=[] (at pp.c:2690)
            IdentifierType: names=['TransformAlarmC__0__Alarm__size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__start', quals=[] (at pp.c:2690)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__stop', quals=[], storage=['static'] (at pp.c:2697)
    FuncDecl: quals=None (at pp.c:2697)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__stop', quals=[] (at pp.c:2697)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__AlarmFrom__fired', quals=[], storage=['static'] (at pp.c:2702)
    FuncDecl: quals=None (at pp.c:2702)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__AlarmFrom__fired', quals=[] (at pp.c:2702)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Counter__overflow', quals=[], storage=['static'] (at pp.c:2704)
    FuncDecl: quals=None (at pp.c:2704)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Counter__overflow', quals=[] (at pp.c:2704)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__3__GeneralIO__makeInput', quals=[], storage=['static'] (at pp.c:2706)
    FuncDecl: quals=None (at pp.c:2706)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__3__GeneralIO__makeInput', quals=[] (at pp.c:2706)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__3__GeneralIO__get', quals=[], storage=['static'] (at pp.c:2708)
    FuncDecl: quals=None (at pp.c:2708)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__3__GeneralIO__get', quals=[] (at pp.c:2708)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__4__GeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:2711)
    FuncDecl: quals=None (at pp.c:2711)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__4__GeneralIO__makeOutput', quals=[] (at pp.c:2711)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__4__GeneralIO__set', quals=[], storage=['static'] (at pp.c:2713)
    FuncDecl: quals=None (at pp.c:2713)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__4__GeneralIO__set', quals=[] (at pp.c:2713)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__4__GeneralIO__clr', quals=[], storage=['static'] (at pp.c:2714)
    FuncDecl: quals=None (at pp.c:2714)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__4__GeneralIO__clr', quals=[] (at pp.c:2714)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__5__GeneralIO__get', quals=[], storage=['static'] (at pp.c:2716)
    FuncDecl: quals=None (at pp.c:2716)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__5__GeneralIO__get', quals=[] (at pp.c:2716)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__6__GeneralIO__get', quals=[], storage=['static'] (at pp.c:2718)
    FuncDecl: quals=None (at pp.c:2718)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__6__GeneralIO__get', quals=[] (at pp.c:2718)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__7__GeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:2721)
    FuncDecl: quals=None (at pp.c:2721)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__7__GeneralIO__makeOutput', quals=[] (at pp.c:2721)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__7__GeneralIO__set', quals=[], storage=['static'] (at pp.c:2723)
    FuncDecl: quals=None (at pp.c:2723)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__7__GeneralIO__set', quals=[] (at pp.c:2723)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__7__GeneralIO__clr', quals=[], storage=['static'] (at pp.c:2724)
    FuncDecl: quals=None (at pp.c:2724)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__7__GeneralIO__clr', quals=[] (at pp.c:2724)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__8__GeneralIO__makeInput', quals=[], storage=['static'] (at pp.c:2727)
    FuncDecl: quals=None (at pp.c:2727)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__8__GeneralIO__makeInput', quals=[] (at pp.c:2727)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__8__GeneralIO__get', quals=[], storage=['static'] (at pp.c:2729)
    FuncDecl: quals=None (at pp.c:2729)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__8__GeneralIO__get', quals=[] (at pp.c:2729)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__9__GeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:2732)
    FuncDecl: quals=None (at pp.c:2732)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__9__GeneralIO__makeOutput', quals=[] (at pp.c:2732)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__9__GeneralIO__set', quals=[], storage=['static'] (at pp.c:2734)
    FuncDecl: quals=None (at pp.c:2734)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__9__GeneralIO__set', quals=[] (at pp.c:2734)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__9__GeneralIO__clr', quals=[], storage=['static'] (at pp.c:2735)
    FuncDecl: quals=None (at pp.c:2735)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__9__GeneralIO__clr', quals=[] (at pp.c:2735)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__Msp430Capture__captured', quals=[], storage=['static'] (at pp.c:2737)
    FuncDecl: quals=None (at pp.c:2737)
      ParamList:  (at pp.c:2737)
        Decl: name='time', quals=[], storage=[] (at pp.c:2737)
          TypeDecl: declname='time', quals=[] (at pp.c:2737)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Msp430Capture__captured', quals=[] (at pp.c:2737)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__Capture__captureFallingEdge', quals=[], storage=['static'] (at pp.c:2739)
    FuncDecl: quals=None (at pp.c:2739)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Capture__captureFallingEdge', quals=[] (at pp.c:2739)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='GpioCaptureC__0__Capture__disable', quals=[], storage=['static'] (at pp.c:2741)
    FuncDecl: quals=None (at pp.c:2741)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Capture__disable', quals=[] (at pp.c:2741)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__Capture__captureRisingEdge', quals=[], storage=['static'] (at pp.c:2743)
    FuncDecl: quals=None (at pp.c:2743)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Capture__captureRisingEdge', quals=[] (at pp.c:2743)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='HplMsp430InterruptP__Port14__clear', quals=[], storage=['static'] (at pp.c:2745)
    FuncDecl: quals=None (at pp.c:2745)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port14__clear', quals=[] (at pp.c:2745)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port14__disable', quals=[], storage=['static'] (at pp.c:2747)
    FuncDecl: quals=None (at pp.c:2747)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port14__disable', quals=[] (at pp.c:2747)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port14__edge', quals=[], storage=['static'] (at pp.c:2749)
    FuncDecl: quals=None (at pp.c:2749)
      ParamList:  (at pp.c:2749)
        Decl: name='low_to_high', quals=[], storage=[] (at pp.c:2749)
          TypeDecl: declname='low_to_high', quals=[] (at pp.c:2749)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port14__edge', quals=[] (at pp.c:2749)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port14__enable', quals=[], storage=['static'] (at pp.c:2751)
    FuncDecl: quals=None (at pp.c:2751)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port14__enable', quals=[] (at pp.c:2751)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port26__clear', quals=[], storage=['static'] (at pp.c:2761)
    FuncDecl: quals=None (at pp.c:2761)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port26__clear', quals=[] (at pp.c:2761)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port26__default__fired', quals=[], storage=['static'] (at pp.c:2763)
    FuncDecl: quals=None (at pp.c:2763)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port26__default__fired', quals=[] (at pp.c:2763)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port17__clear', quals=[], storage=['static'] (at pp.c:2765)
    FuncDecl: quals=None (at pp.c:2765)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port17__clear', quals=[] (at pp.c:2765)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port17__default__fired', quals=[], storage=['static'] (at pp.c:2767)
    FuncDecl: quals=None (at pp.c:2767)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port17__default__fired', quals=[] (at pp.c:2767)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port21__clear', quals=[], storage=['static'] (at pp.c:2769)
    FuncDecl: quals=None (at pp.c:2769)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port21__clear', quals=[] (at pp.c:2769)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port21__default__fired', quals=[], storage=['static'] (at pp.c:2771)
    FuncDecl: quals=None (at pp.c:2771)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port21__default__fired', quals=[] (at pp.c:2771)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port12__clear', quals=[], storage=['static'] (at pp.c:2773)
    FuncDecl: quals=None (at pp.c:2773)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port12__clear', quals=[] (at pp.c:2773)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port12__default__fired', quals=[], storage=['static'] (at pp.c:2775)
    FuncDecl: quals=None (at pp.c:2775)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port12__default__fired', quals=[] (at pp.c:2775)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port24__clear', quals=[], storage=['static'] (at pp.c:2777)
    FuncDecl: quals=None (at pp.c:2777)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port24__clear', quals=[] (at pp.c:2777)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port24__default__fired', quals=[], storage=['static'] (at pp.c:2779)
    FuncDecl: quals=None (at pp.c:2779)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port24__default__fired', quals=[] (at pp.c:2779)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port15__clear', quals=[], storage=['static'] (at pp.c:2781)
    FuncDecl: quals=None (at pp.c:2781)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port15__clear', quals=[] (at pp.c:2781)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port15__default__fired', quals=[], storage=['static'] (at pp.c:2783)
    FuncDecl: quals=None (at pp.c:2783)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port15__default__fired', quals=[] (at pp.c:2783)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port27__clear', quals=[], storage=['static'] (at pp.c:2785)
    FuncDecl: quals=None (at pp.c:2785)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port27__clear', quals=[] (at pp.c:2785)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port27__default__fired', quals=[], storage=['static'] (at pp.c:2787)
    FuncDecl: quals=None (at pp.c:2787)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port27__default__fired', quals=[] (at pp.c:2787)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port10__clear', quals=[], storage=['static'] (at pp.c:2789)
    FuncDecl: quals=None (at pp.c:2789)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port10__clear', quals=[] (at pp.c:2789)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port10__disable', quals=[], storage=['static'] (at pp.c:2791)
    FuncDecl: quals=None (at pp.c:2791)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port10__disable', quals=[] (at pp.c:2791)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port10__edge', quals=[], storage=['static'] (at pp.c:2793)
    FuncDecl: quals=None (at pp.c:2793)
      ParamList:  (at pp.c:2793)
        Decl: name='low_to_high', quals=[], storage=[] (at pp.c:2793)
          TypeDecl: declname='low_to_high', quals=[] (at pp.c:2793)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port10__edge', quals=[] (at pp.c:2793)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port10__enable', quals=[], storage=['static'] (at pp.c:2795)
    FuncDecl: quals=None (at pp.c:2795)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port10__enable', quals=[] (at pp.c:2795)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port22__clear', quals=[], storage=['static'] (at pp.c:2805)
    FuncDecl: quals=None (at pp.c:2805)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port22__clear', quals=[] (at pp.c:2805)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port22__default__fired', quals=[], storage=['static'] (at pp.c:2807)
    FuncDecl: quals=None (at pp.c:2807)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port22__default__fired', quals=[] (at pp.c:2807)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port13__clear', quals=[], storage=['static'] (at pp.c:2809)
    FuncDecl: quals=None (at pp.c:2809)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port13__clear', quals=[] (at pp.c:2809)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port13__default__fired', quals=[], storage=['static'] (at pp.c:2811)
    FuncDecl: quals=None (at pp.c:2811)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port13__default__fired', quals=[] (at pp.c:2811)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port25__clear', quals=[], storage=['static'] (at pp.c:2813)
    FuncDecl: quals=None (at pp.c:2813)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port25__clear', quals=[] (at pp.c:2813)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port25__default__fired', quals=[], storage=['static'] (at pp.c:2815)
    FuncDecl: quals=None (at pp.c:2815)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port25__default__fired', quals=[] (at pp.c:2815)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port16__clear', quals=[], storage=['static'] (at pp.c:2817)
    FuncDecl: quals=None (at pp.c:2817)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port16__clear', quals=[] (at pp.c:2817)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port16__default__fired', quals=[], storage=['static'] (at pp.c:2819)
    FuncDecl: quals=None (at pp.c:2819)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port16__default__fired', quals=[] (at pp.c:2819)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port20__clear', quals=[], storage=['static'] (at pp.c:2821)
    FuncDecl: quals=None (at pp.c:2821)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port20__clear', quals=[] (at pp.c:2821)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port20__default__fired', quals=[], storage=['static'] (at pp.c:2823)
    FuncDecl: quals=None (at pp.c:2823)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port20__default__fired', quals=[] (at pp.c:2823)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port11__clear', quals=[], storage=['static'] (at pp.c:2825)
    FuncDecl: quals=None (at pp.c:2825)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port11__clear', quals=[] (at pp.c:2825)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port11__default__fired', quals=[], storage=['static'] (at pp.c:2827)
    FuncDecl: quals=None (at pp.c:2827)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port11__default__fired', quals=[] (at pp.c:2827)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port23__clear', quals=[], storage=['static'] (at pp.c:2829)
    FuncDecl: quals=None (at pp.c:2829)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port23__clear', quals=[] (at pp.c:2829)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port23__default__fired', quals=[], storage=['static'] (at pp.c:2831)
    FuncDecl: quals=None (at pp.c:2831)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port23__default__fired', quals=[] (at pp.c:2831)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__0__HplInterrupt__fired', quals=[], storage=['static'] (at pp.c:2833)
    FuncDecl: quals=None (at pp.c:2833)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__fired', quals=[] (at pp.c:2833)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__0__Interrupt__disable', quals=[], storage=['static'] (at pp.c:2835)
    FuncDecl: quals=None (at pp.c:2835)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__Interrupt__disable', quals=[] (at pp.c:2835)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430InterruptC__0__Interrupt__enableRisingEdge', quals=[], storage=['static'] (at pp.c:2837)
    FuncDecl: quals=None (at pp.c:2837)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__Interrupt__enableRisingEdge', quals=[] (at pp.c:2837)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430InterruptC__1__HplInterrupt__fired', quals=[], storage=['static'] (at pp.c:2839)
    FuncDecl: quals=None (at pp.c:2839)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__fired', quals=[] (at pp.c:2839)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__1__Interrupt__disable', quals=[], storage=['static'] (at pp.c:2841)
    FuncDecl: quals=None (at pp.c:2841)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__Interrupt__disable', quals=[] (at pp.c:2841)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430InterruptC__1__Interrupt__enableFallingEdge', quals=[], storage=['static'] (at pp.c:2843)
    FuncDecl: quals=None (at pp.c:2843)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__Interrupt__enableFallingEdge', quals=[] (at pp.c:2843)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__SpiPacket__sendDone', quals=[], storage=['static'] (at pp.c:2845)
    FuncDecl: quals=None (at pp.c:2845)
      ParamList:  (at pp.c:2847)
        Decl: name='txBuf', quals=[], storage=[] (at pp.c:2847)
          PtrDecl: quals=[] (at pp.c:2847)
            TypeDecl: declname='txBuf', quals=[] (at pp.c:2847)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rxBuf', quals=[], storage=[] (at pp.c:2848)
          PtrDecl: quals=[] (at pp.c:2848)
            TypeDecl: declname='rxBuf', quals=[] (at pp.c:2848)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:2854)
          TypeDecl: declname='len', quals=[] (at pp.c:2854)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:2855)
          TypeDecl: declname='error', quals=[] (at pp.c:2855)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420SpiP__SpiPacket__sendDone', quals=[] (at pp.c:2845)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__Fifo__continueRead', quals=[], storage=['static'] (at pp.c:2857)
    FuncDecl: quals=None (at pp.c:2857)
      ParamList:  (at pp.c:2859)
        Decl: name='arg_0x101c66328', quals=[], storage=[] (at pp.c:2859)
          TypeDecl: declname='arg_0x101c66328', quals=[] (at pp.c:2859)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:2861)
          PtrDecl: quals=[] (at pp.c:2861)
            TypeDecl: declname='data', quals=[] (at pp.c:2861)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:2861)
          TypeDecl: declname='length', quals=[] (at pp.c:2861)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__continueRead', quals=[] (at pp.c:2857)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__Fifo__default__writeDone', quals=[], storage=['static'] (at pp.c:2863)
    FuncDecl: quals=None (at pp.c:2863)
      ParamList:  (at pp.c:2865)
        Decl: name='arg_0x101c66328', quals=[], storage=[] (at pp.c:2865)
          TypeDecl: declname='arg_0x101c66328', quals=[] (at pp.c:2865)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:2867)
          PtrDecl: quals=[] (at pp.c:2867)
            TypeDecl: declname='data', quals=[] (at pp.c:2867)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:2867)
          TypeDecl: declname='length', quals=[] (at pp.c:2867)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:2867)
          TypeDecl: declname='error', quals=[] (at pp.c:2867)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__default__writeDone', quals=[] (at pp.c:2863)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__Fifo__write', quals=[], storage=['static'] (at pp.c:2869)
    FuncDecl: quals=None (at pp.c:2869)
      ParamList:  (at pp.c:2871)
        Decl: name='arg_0x101c66328', quals=[], storage=[] (at pp.c:2871)
          TypeDecl: declname='arg_0x101c66328', quals=[] (at pp.c:2871)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:2873)
          PtrDecl: quals=[] (at pp.c:2873)
            TypeDecl: declname='data', quals=[] (at pp.c:2873)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:2873)
          TypeDecl: declname='length', quals=[] (at pp.c:2873)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__write', quals=[] (at pp.c:2869)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__Fifo__beginRead', quals=[], storage=['static'] (at pp.c:2875)
    FuncDecl: quals=None (at pp.c:2875)
      ParamList:  (at pp.c:2877)
        Decl: name='arg_0x101c66328', quals=[], storage=[] (at pp.c:2877)
          TypeDecl: declname='arg_0x101c66328', quals=[] (at pp.c:2877)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:2879)
          PtrDecl: quals=[] (at pp.c:2879)
            TypeDecl: declname='data', quals=[] (at pp.c:2879)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:2879)
          TypeDecl: declname='length', quals=[] (at pp.c:2879)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__beginRead', quals=[] (at pp.c:2875)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__Fifo__default__readDone', quals=[], storage=['static'] (at pp.c:2881)
    FuncDecl: quals=None (at pp.c:2881)
      ParamList:  (at pp.c:2883)
        Decl: name='arg_0x101c66328', quals=[], storage=[] (at pp.c:2883)
          TypeDecl: declname='arg_0x101c66328', quals=[] (at pp.c:2883)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:2885)
          PtrDecl: quals=[] (at pp.c:2885)
            TypeDecl: declname='data', quals=[] (at pp.c:2885)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:2885)
          TypeDecl: declname='length', quals=[] (at pp.c:2885)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:2885)
          TypeDecl: declname='error', quals=[] (at pp.c:2885)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__default__readDone', quals=[] (at pp.c:2881)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__ChipSpiResource__abortRelease', quals=[], storage=['static'] (at pp.c:2887)
    FuncDecl: quals=None (at pp.c:2887)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__ChipSpiResource__abortRelease', quals=[] (at pp.c:2887)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__ChipSpiResource__attemptRelease', quals=[], storage=['static'] (at pp.c:2895)
    FuncDecl: quals=None (at pp.c:2895)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__ChipSpiResource__attemptRelease', quals=[] (at pp.c:2895)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__SpiResource__granted', quals=[], storage=['static'] (at pp.c:2897)
    FuncDecl: quals=None (at pp.c:2897)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__SpiResource__granted', quals=[] (at pp.c:2897)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__Ram__write', quals=[], storage=['static'] (at pp.c:2899)
    FuncDecl: quals=None (at pp.c:2899)
      ParamList:  (at pp.c:2901)
        Decl: name='arg_0x101c654d8', quals=[], storage=[] (at pp.c:2901)
          TypeDecl: declname='arg_0x101c654d8', quals=[] (at pp.c:2901)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='offset', quals=[], storage=[] (at pp.c:2903)
          TypeDecl: declname='offset', quals=[] (at pp.c:2903)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:2903)
          PtrDecl: quals=[] (at pp.c:2903)
            TypeDecl: declname='data', quals=[] (at pp.c:2903)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:2903)
          TypeDecl: declname='length', quals=[] (at pp.c:2903)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Ram__write', quals=[] (at pp.c:2899)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__Reg__read', quals=[], storage=['static'] (at pp.c:2905)
    FuncDecl: quals=None (at pp.c:2905)
      ParamList:  (at pp.c:2907)
        Decl: name='arg_0x101c63220', quals=[], storage=[] (at pp.c:2907)
          TypeDecl: declname='arg_0x101c63220', quals=[] (at pp.c:2907)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:2909)
          PtrDecl: quals=[] (at pp.c:2909)
            TypeDecl: declname='data', quals=[] (at pp.c:2909)
              IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Reg__read', quals=[] (at pp.c:2905)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__Reg__write', quals=[], storage=['static'] (at pp.c:2917)
    FuncDecl: quals=None (at pp.c:2917)
      ParamList:  (at pp.c:2919)
        Decl: name='arg_0x101c63220', quals=[], storage=[] (at pp.c:2919)
          TypeDecl: declname='arg_0x101c63220', quals=[] (at pp.c:2919)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:2921)
          TypeDecl: declname='data', quals=[] (at pp.c:2921)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Reg__write', quals=[] (at pp.c:2917)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__Resource__release', quals=[], storage=['static'] (at pp.c:2923)
    FuncDecl: quals=None (at pp.c:2923)
      ParamList:  (at pp.c:2925)
        Decl: name='arg_0x101c67158', quals=[], storage=[] (at pp.c:2925)
          TypeDecl: declname='arg_0x101c67158', quals=[] (at pp.c:2925)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__release', quals=[] (at pp.c:2923)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__Resource__immediateRequest', quals=[], storage=['static'] (at pp.c:2927)
    FuncDecl: quals=None (at pp.c:2927)
      ParamList:  (at pp.c:2929)
        Decl: name='arg_0x101c67158', quals=[], storage=[] (at pp.c:2929)
          TypeDecl: declname='arg_0x101c67158', quals=[] (at pp.c:2929)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__immediateRequest', quals=[] (at pp.c:2927)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__Resource__request', quals=[], storage=['static'] (at pp.c:2931)
    FuncDecl: quals=None (at pp.c:2931)
      ParamList:  (at pp.c:2933)
        Decl: name='arg_0x101c67158', quals=[], storage=[] (at pp.c:2933)
          TypeDecl: declname='arg_0x101c67158', quals=[] (at pp.c:2933)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__request', quals=[] (at pp.c:2931)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__Resource__default__granted', quals=[], storage=['static'] (at pp.c:2935)
    FuncDecl: quals=None (at pp.c:2935)
      ParamList:  (at pp.c:2937)
        Decl: name='arg_0x101c67158', quals=[], storage=[] (at pp.c:2937)
          TypeDecl: declname='arg_0x101c67158', quals=[] (at pp.c:2937)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__default__granted', quals=[] (at pp.c:2935)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__Resource__isOwner', quals=[], storage=['static'] (at pp.c:2939)
    FuncDecl: quals=None (at pp.c:2939)
      ParamList:  (at pp.c:2941)
        Decl: name='arg_0x101c67158', quals=[], storage=[] (at pp.c:2941)
          TypeDecl: declname='arg_0x101c67158', quals=[] (at pp.c:2941)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__isOwner', quals=[] (at pp.c:2939)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420SpiP__grant__runTask', quals=[], storage=['static'] (at pp.c:2943)
    FuncDecl: quals=None (at pp.c:2943)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__grant__runTask', quals=[] (at pp.c:2943)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__Strobe__strobe', quals=[], storage=['static'] (at pp.c:2945)
    FuncDecl: quals=None (at pp.c:2945)
      ParamList:  (at pp.c:2947)
        Decl: name='arg_0x101c62020', quals=[], storage=[] (at pp.c:2947)
          TypeDecl: declname='arg_0x101c62020', quals=[] (at pp.c:2947)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Strobe__strobe', quals=[] (at pp.c:2945)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='StateImplP__Init__init', quals=[], storage=['static'] (at pp.c:2949)
    FuncDecl: quals=None (at pp.c:2949)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='StateImplP__Init__init', quals=[] (at pp.c:2949)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='StateImplP__State__toIdle', quals=[], storage=['static'] (at pp.c:2951)
    FuncDecl: quals=None (at pp.c:2951)
      ParamList:  (at pp.c:2953)
        Decl: name='arg_0x101ce5020', quals=[], storage=[] (at pp.c:2953)
          TypeDecl: declname='arg_0x101ce5020', quals=[] (at pp.c:2953)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='StateImplP__State__toIdle', quals=[] (at pp.c:2951)
        IdentifierType: names=['void'] (at None)
  Decl: name='StateImplP__State__isState', quals=[], storage=['static'] (at pp.c:2955)
    FuncDecl: quals=None (at pp.c:2955)
      ParamList:  (at pp.c:2957)
        Decl: name='arg_0x101ce5020', quals=[], storage=[] (at pp.c:2957)
          TypeDecl: declname='arg_0x101ce5020', quals=[] (at pp.c:2957)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='myState', quals=[], storage=[] (at pp.c:2959)
          TypeDecl: declname='myState', quals=[] (at pp.c:2959)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='StateImplP__State__isState', quals=[] (at pp.c:2955)
        IdentifierType: names=['bool'] (at None)
  Decl: name='StateImplP__State__isIdle', quals=[], storage=['static'] (at pp.c:2961)
    FuncDecl: quals=None (at pp.c:2961)
      ParamList:  (at pp.c:2963)
        Decl: name='arg_0x101ce5020', quals=[], storage=[] (at pp.c:2963)
          TypeDecl: declname='arg_0x101ce5020', quals=[] (at pp.c:2963)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='StateImplP__State__isIdle', quals=[] (at pp.c:2961)
        IdentifierType: names=['bool'] (at None)
  Decl: name='StateImplP__State__requestState', quals=[], storage=['static'] (at pp.c:2965)
    FuncDecl: quals=None (at pp.c:2965)
      ParamList:  (at pp.c:2967)
        Decl: name='arg_0x101ce5020', quals=[], storage=[] (at pp.c:2967)
          TypeDecl: declname='arg_0x101ce5020', quals=[] (at pp.c:2967)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='reqState', quals=[], storage=[] (at pp.c:2969)
          TypeDecl: declname='reqState', quals=[] (at pp.c:2969)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='StateImplP__State__requestState', quals=[] (at pp.c:2965)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='StateImplP__State__forceState', quals=[], storage=['static'] (at pp.c:2975)
    FuncDecl: quals=None (at pp.c:2975)
      ParamList:  (at pp.c:2977)
        Decl: name='arg_0x101ce5020', quals=[], storage=[] (at pp.c:2977)
          TypeDecl: declname='arg_0x101ce5020', quals=[] (at pp.c:2977)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='reqState', quals=[], storage=[] (at pp.c:2979)
          TypeDecl: declname='reqState', quals=[] (at pp.c:2979)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='StateImplP__State__forceState', quals=[] (at pp.c:2975)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__ResourceConfigure__unconfigure', quals=[], storage=['static'] (at pp.c:2981)
    FuncDecl: quals=None (at pp.c:2981)
      ParamList:  (at pp.c:2983)
        Decl: name='arg_0x101d584b8', quals=[], storage=[] (at pp.c:2983)
          TypeDecl: declname='arg_0x101d584b8', quals=[] (at pp.c:2983)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__ResourceConfigure__unconfigure', quals=[] (at pp.c:2981)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__ResourceConfigure__configure', quals=[], storage=['static'] (at pp.c:2985)
    FuncDecl: quals=None (at pp.c:2985)
      ParamList:  (at pp.c:2987)
        Decl: name='arg_0x101d584b8', quals=[], storage=[] (at pp.c:2987)
          TypeDecl: declname='arg_0x101d584b8', quals=[] (at pp.c:2987)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__ResourceConfigure__configure', quals=[] (at pp.c:2985)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__SpiPacket__send', quals=[], storage=['static'] (at pp.c:2989)
    FuncDecl: quals=None (at pp.c:2989)
      ParamList:  (at pp.c:2991)
        Decl: name='arg_0x101d562f0', quals=[], storage=[] (at pp.c:2991)
          TypeDecl: declname='arg_0x101d562f0', quals=[] (at pp.c:2991)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='txBuf', quals=[], storage=[] (at pp.c:2993)
          PtrDecl: quals=[] (at pp.c:2993)
            TypeDecl: declname='txBuf', quals=[] (at pp.c:2993)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rxBuf', quals=[], storage=[] (at pp.c:2995)
          PtrDecl: quals=[] (at pp.c:2995)
            TypeDecl: declname='rxBuf', quals=[] (at pp.c:2995)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3004)
          TypeDecl: declname='len', quals=[] (at pp.c:3004)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__SpiPacket__send', quals=[] (at pp.c:2989)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__SpiPacket__default__sendDone', quals=[], storage=['static'] (at pp.c:3006)
    FuncDecl: quals=None (at pp.c:3006)
      ParamList:  (at pp.c:3008)
        Decl: name='arg_0x101d562f0', quals=[], storage=[] (at pp.c:3008)
          TypeDecl: declname='arg_0x101d562f0', quals=[] (at pp.c:3008)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='txBuf', quals=[], storage=[] (at pp.c:3010)
          PtrDecl: quals=[] (at pp.c:3010)
            TypeDecl: declname='txBuf', quals=[] (at pp.c:3010)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rxBuf', quals=[], storage=[] (at pp.c:3011)
          PtrDecl: quals=[] (at pp.c:3011)
            TypeDecl: declname='rxBuf', quals=[] (at pp.c:3011)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3017)
          TypeDecl: declname='len', quals=[] (at pp.c:3017)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3018)
          TypeDecl: declname='error', quals=[] (at pp.c:3018)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__SpiPacket__default__sendDone', quals=[] (at pp.c:3006)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Msp430SpiConfigure__default__getConfig', quals=[], storage=['static'] (at pp.c:3020)
    FuncDecl: quals=None (at pp.c:3020)
      ParamList:  (at pp.c:3022)
        Decl: name='arg_0x101d532f0', quals=[], storage=[] (at pp.c:3022)
          TypeDecl: declname='arg_0x101d532f0', quals=[] (at pp.c:3022)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3020)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Msp430SpiConfigure__default__getConfig', quals=[] (at pp.c:3020)
          IdentifierType: names=['msp430_spi_union_config_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__SpiByte__write', quals=[], storage=['static'] (at pp.c:3024)
    FuncDecl: quals=None (at pp.c:3024)
      ParamList:  (at pp.c:3024)
        Decl: name='tx', quals=[], storage=[] (at pp.c:3024)
          TypeDecl: declname='tx', quals=[] (at pp.c:3024)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__SpiByte__write', quals=[] (at pp.c:3024)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__release', quals=[], storage=['static'] (at pp.c:3026)
    FuncDecl: quals=None (at pp.c:3026)
      ParamList:  (at pp.c:3028)
        Decl: name='arg_0x101d550c8', quals=[], storage=[] (at pp.c:3028)
          TypeDecl: declname='arg_0x101d550c8', quals=[] (at pp.c:3028)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__release', quals=[] (at pp.c:3026)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__immediateRequest', quals=[], storage=['static'] (at pp.c:3030)
    FuncDecl: quals=None (at pp.c:3030)
      ParamList:  (at pp.c:3032)
        Decl: name='arg_0x101d550c8', quals=[], storage=[] (at pp.c:3032)
          TypeDecl: declname='arg_0x101d550c8', quals=[] (at pp.c:3032)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__immediateRequest', quals=[] (at pp.c:3030)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__request', quals=[], storage=['static'] (at pp.c:3034)
    FuncDecl: quals=None (at pp.c:3034)
      ParamList:  (at pp.c:3036)
        Decl: name='arg_0x101d550c8', quals=[], storage=[] (at pp.c:3036)
          TypeDecl: declname='arg_0x101d550c8', quals=[] (at pp.c:3036)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__request', quals=[] (at pp.c:3034)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__granted', quals=[], storage=['static'] (at pp.c:3038)
    FuncDecl: quals=None (at pp.c:3038)
      ParamList:  (at pp.c:3040)
        Decl: name='arg_0x101d550c8', quals=[], storage=[] (at pp.c:3040)
          TypeDecl: declname='arg_0x101d550c8', quals=[] (at pp.c:3040)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__granted', quals=[] (at pp.c:3038)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__isOwner', quals=[], storage=['static'] (at pp.c:3042)
    FuncDecl: quals=None (at pp.c:3042)
      ParamList:  (at pp.c:3044)
        Decl: name='arg_0x101d550c8', quals=[], storage=[] (at pp.c:3044)
          TypeDecl: declname='arg_0x101d550c8', quals=[] (at pp.c:3044)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__isOwner', quals=[] (at pp.c:3042)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__release', quals=[], storage=['static'] (at pp.c:3046)
    FuncDecl: quals=None (at pp.c:3046)
      ParamList:  (at pp.c:3048)
        Decl: name='arg_0x101d592f0', quals=[], storage=[] (at pp.c:3048)
          TypeDecl: declname='arg_0x101d592f0', quals=[] (at pp.c:3048)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__release', quals=[] (at pp.c:3046)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__immediateRequest', quals=[], storage=['static'] (at pp.c:3050)
    FuncDecl: quals=None (at pp.c:3050)
      ParamList:  (at pp.c:3052)
        Decl: name='arg_0x101d592f0', quals=[], storage=[] (at pp.c:3052)
          TypeDecl: declname='arg_0x101d592f0', quals=[] (at pp.c:3052)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__immediateRequest', quals=[] (at pp.c:3050)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__request', quals=[], storage=['static'] (at pp.c:3054)
    FuncDecl: quals=None (at pp.c:3054)
      ParamList:  (at pp.c:3056)
        Decl: name='arg_0x101d592f0', quals=[], storage=[] (at pp.c:3056)
          TypeDecl: declname='arg_0x101d592f0', quals=[] (at pp.c:3056)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__request', quals=[] (at pp.c:3054)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__default__granted', quals=[], storage=['static'] (at pp.c:3058)
    FuncDecl: quals=None (at pp.c:3058)
      ParamList:  (at pp.c:3060)
        Decl: name='arg_0x101d592f0', quals=[], storage=[] (at pp.c:3060)
          TypeDecl: declname='arg_0x101d592f0', quals=[] (at pp.c:3060)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__default__granted', quals=[] (at pp.c:3058)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__isOwner', quals=[], storage=['static'] (at pp.c:3062)
    FuncDecl: quals=None (at pp.c:3062)
      ParamList:  (at pp.c:3064)
        Decl: name='arg_0x101d592f0', quals=[], storage=[] (at pp.c:3064)
          TypeDecl: declname='arg_0x101d592f0', quals=[] (at pp.c:3064)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__isOwner', quals=[] (at pp.c:3062)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartInterrupts__rxDone', quals=[], storage=['static'] (at pp.c:3066)
    FuncDecl: quals=None (at pp.c:3066)
      ParamList:  (at pp.c:3066)
        Decl: name='data', quals=[], storage=[] (at pp.c:3066)
          TypeDecl: declname='data', quals=[] (at pp.c:3066)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartInterrupts__rxDone', quals=[] (at pp.c:3066)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartInterrupts__txDone', quals=[], storage=['static'] (at pp.c:3068)
    FuncDecl: quals=None (at pp.c:3068)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartInterrupts__txDone', quals=[] (at pp.c:3068)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__signalDone_task__runTask', quals=[], storage=['static'] (at pp.c:3070)
    FuncDecl: quals=None (at pp.c:3070)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__signalDone_task__runTask', quals=[] (at pp.c:3070)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__enableRxIntr', quals=[], storage=['static'] (at pp.c:3072)
    FuncDecl: quals=None (at pp.c:3072)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__enableRxIntr', quals=[] (at pp.c:3072)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__clrRxIntr', quals=[], storage=['static'] (at pp.c:3074)
    FuncDecl: quals=None (at pp.c:3074)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__clrRxIntr', quals=[] (at pp.c:3074)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__resetUsart', quals=[], storage=['static'] (at pp.c:3076)
    FuncDecl: quals=None (at pp.c:3076)
      ParamList:  (at pp.c:3076)
        Decl: name='reset', quals=[], storage=[] (at pp.c:3076)
          TypeDecl: declname='reset', quals=[] (at pp.c:3076)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__resetUsart', quals=[] (at pp.c:3076)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__disableIntr', quals=[], storage=['static'] (at pp.c:3078)
    FuncDecl: quals=None (at pp.c:3078)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__disableIntr', quals=[] (at pp.c:3078)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__setUmctl', quals=[], storage=['static'] (at pp.c:3080)
    FuncDecl: quals=None (at pp.c:3080)
      ParamList:  (at pp.c:3080)
        Decl: name='umctl', quals=[], storage=[] (at pp.c:3080)
          TypeDecl: declname='umctl', quals=[] (at pp.c:3080)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__setUmctl', quals=[] (at pp.c:3080)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__disableRxIntr', quals=[], storage=['static'] (at pp.c:3082)
    FuncDecl: quals=None (at pp.c:3082)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__disableRxIntr', quals=[] (at pp.c:3082)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__clrIntr', quals=[], storage=['static'] (at pp.c:3084)
    FuncDecl: quals=None (at pp.c:3084)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__clrIntr', quals=[] (at pp.c:3084)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__setUbr', quals=[], storage=['static'] (at pp.c:3086)
    FuncDecl: quals=None (at pp.c:3086)
      ParamList:  (at pp.c:3086)
        Decl: name='ubr', quals=[], storage=[] (at pp.c:3086)
          TypeDecl: declname='ubr', quals=[] (at pp.c:3086)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__setUbr', quals=[] (at pp.c:3086)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__tx', quals=[], storage=['static'] (at pp.c:3088)
    FuncDecl: quals=None (at pp.c:3088)
      ParamList:  (at pp.c:3088)
        Decl: name='data', quals=[], storage=[] (at pp.c:3088)
          TypeDecl: declname='data', quals=[] (at pp.c:3088)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__tx', quals=[] (at pp.c:3088)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__disableUart', quals=[], storage=['static'] (at pp.c:3090)
    FuncDecl: quals=None (at pp.c:3090)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__disableUart', quals=[] (at pp.c:3090)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__enableSpi', quals=[], storage=['static'] (at pp.c:3092)
    FuncDecl: quals=None (at pp.c:3092)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__enableSpi', quals=[] (at pp.c:3092)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__setModeSpi', quals=[], storage=['static'] (at pp.c:3094)
    FuncDecl: quals=None (at pp.c:3094)
      ParamList:  (at pp.c:3094)
        Decl: name='config', quals=[], storage=[] (at pp.c:3094)
          PtrDecl: quals=[] (at pp.c:3094)
            TypeDecl: declname='config', quals=[] (at pp.c:3094)
              IdentifierType: names=['msp430_spi_union_config_t'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__setModeSpi', quals=[] (at pp.c:3094)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__rx', quals=[], storage=['static'] (at pp.c:3096)
    FuncDecl: quals=None (at pp.c:3096)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__rx', quals=[] (at pp.c:3096)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__isRxIntrPending', quals=[], storage=['static'] (at pp.c:3098)
    FuncDecl: quals=None (at pp.c:3098)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__isRxIntrPending', quals=[] (at pp.c:3098)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__disableSpi', quals=[], storage=['static'] (at pp.c:3100)
    FuncDecl: quals=None (at pp.c:3100)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__disableSpi', quals=[] (at pp.c:3100)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__Interrupts__default__rxDone', quals=[], storage=['static'] (at pp.c:3102)
    FuncDecl: quals=None (at pp.c:3102)
      ParamList:  (at pp.c:3104)
        Decl: name='arg_0x101ed5800', quals=[], storage=[] (at pp.c:3104)
          TypeDecl: declname='arg_0x101ed5800', quals=[] (at pp.c:3104)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:3106)
          TypeDecl: declname='data', quals=[] (at pp.c:3106)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__Interrupts__default__rxDone', quals=[] (at pp.c:3102)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__Interrupts__default__txDone', quals=[], storage=['static'] (at pp.c:3108)
    FuncDecl: quals=None (at pp.c:3108)
      ParamList:  (at pp.c:3110)
        Decl: name='arg_0x101ed5800', quals=[], storage=[] (at pp.c:3110)
          TypeDecl: declname='arg_0x101ed5800', quals=[] (at pp.c:3110)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__Interrupts__default__txDone', quals=[] (at pp.c:3108)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__RawI2CInterrupts__fired', quals=[], storage=['static'] (at pp.c:3112)
    FuncDecl: quals=None (at pp.c:3112)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__RawI2CInterrupts__fired', quals=[] (at pp.c:3112)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__I2CInterrupts__default__fired', quals=[], storage=['static'] (at pp.c:3114)
    FuncDecl: quals=None (at pp.c:3114)
      ParamList:  (at pp.c:3116)
        Decl: name='arg_0x101ed4620', quals=[], storage=[] (at pp.c:3116)
          TypeDecl: declname='arg_0x101ed4620', quals=[] (at pp.c:3116)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__I2CInterrupts__default__fired', quals=[] (at pp.c:3114)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__RawInterrupts__rxDone', quals=[], storage=['static'] (at pp.c:3118)
    FuncDecl: quals=None (at pp.c:3118)
      ParamList:  (at pp.c:3118)
        Decl: name='data', quals=[], storage=[] (at pp.c:3118)
          TypeDecl: declname='data', quals=[] (at pp.c:3118)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__RawInterrupts__rxDone', quals=[] (at pp.c:3118)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__RawInterrupts__txDone', quals=[], storage=['static'] (at pp.c:3120)
    FuncDecl: quals=None (at pp.c:3120)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__RawInterrupts__txDone', quals=[] (at pp.c:3120)
        IdentifierType: names=['void'] (at None)
  Decl: name='FcfsResourceQueueC__1__Init__init', quals=[], storage=['static'] (at pp.c:3122)
    FuncDecl: quals=None (at pp.c:3122)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__1__Init__init', quals=[] (at pp.c:3122)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='FcfsResourceQueueC__1__FcfsQueue__enqueue', quals=[], storage=['static'] (at pp.c:3124)
    FuncDecl: quals=None (at pp.c:3124)
      ParamList:  (at pp.c:3124)
        Decl: name='id', quals=[], storage=[] (at pp.c:3124)
          TypeDecl: declname='id', quals=[] (at pp.c:3124)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__enqueue', quals=[] (at pp.c:3124)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='FcfsResourceQueueC__1__FcfsQueue__isEmpty', quals=[], storage=['static'] (at pp.c:3126)
    FuncDecl: quals=None (at pp.c:3126)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__isEmpty', quals=[] (at pp.c:3126)
        IdentifierType: names=['bool'] (at None)
  Decl: name='FcfsResourceQueueC__1__FcfsQueue__isEnqueued', quals=[], storage=['static'] (at pp.c:3135)
    FuncDecl: quals=None (at pp.c:3135)
      ParamList:  (at pp.c:3135)
        Decl: name='id', quals=[], storage=[] (at pp.c:3135)
          TypeDecl: declname='id', quals=[] (at pp.c:3135)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__isEnqueued', quals=[] (at pp.c:3135)
        IdentifierType: names=['bool'] (at None)
  Decl: name='FcfsResourceQueueC__1__FcfsQueue__dequeue', quals=[], storage=['static'] (at pp.c:3143)
    FuncDecl: quals=None (at pp.c:3143)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__dequeue', quals=[] (at pp.c:3143)
        IdentifierType: names=['resource_client_id_t'] (at None)
  Decl: name='ArbiterP__0__ResourceRequested__default__requested', quals=[], storage=['static'] (at pp.c:3145)
    FuncDecl: quals=None (at pp.c:3145)
      ParamList:  (at pp.c:3147)
        Decl: name='arg_0x101edd7e8', quals=[], storage=[] (at pp.c:3147)
          TypeDecl: declname='arg_0x101edd7e8', quals=[] (at pp.c:3147)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceRequested__default__requested', quals=[] (at pp.c:3145)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceRequested__default__immediateRequested', quals=[], storage=['static'] (at pp.c:3149)
    FuncDecl: quals=None (at pp.c:3149)
      ParamList:  (at pp.c:3151)
        Decl: name='arg_0x101edd7e8', quals=[], storage=[] (at pp.c:3151)
          TypeDecl: declname='arg_0x101edd7e8', quals=[] (at pp.c:3151)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceRequested__default__immediateRequested', quals=[] (at pp.c:3149)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceConfigure__default__unconfigure', quals=[], storage=['static'] (at pp.c:3153)
    FuncDecl: quals=None (at pp.c:3153)
      ParamList:  (at pp.c:3155)
        Decl: name='arg_0x101f209b8', quals=[], storage=[] (at pp.c:3155)
          TypeDecl: declname='arg_0x101f209b8', quals=[] (at pp.c:3155)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceConfigure__default__unconfigure', quals=[] (at pp.c:3153)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceConfigure__default__configure', quals=[], storage=['static'] (at pp.c:3157)
    FuncDecl: quals=None (at pp.c:3157)
      ParamList:  (at pp.c:3159)
        Decl: name='arg_0x101f209b8', quals=[], storage=[] (at pp.c:3159)
          TypeDecl: declname='arg_0x101f209b8', quals=[] (at pp.c:3159)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceConfigure__default__configure', quals=[] (at pp.c:3157)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__release', quals=[], storage=['static'] (at pp.c:3161)
    FuncDecl: quals=None (at pp.c:3161)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__release', quals=[] (at pp.c:3161)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__default__requested', quals=[], storage=['static'] (at pp.c:3163)
    FuncDecl: quals=None (at pp.c:3163)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__default__requested', quals=[] (at pp.c:3163)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__default__granted', quals=[], storage=['static'] (at pp.c:3165)
    FuncDecl: quals=None (at pp.c:3165)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__default__granted', quals=[] (at pp.c:3165)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__default__immediateRequested', quals=[], storage=['static'] (at pp.c:3167)
    FuncDecl: quals=None (at pp.c:3167)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__default__immediateRequested', quals=[] (at pp.c:3167)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__Resource__release', quals=[], storage=['static'] (at pp.c:3169)
    FuncDecl: quals=None (at pp.c:3169)
      ParamList:  (at pp.c:3171)
        Decl: name='arg_0x101ede658', quals=[], storage=[] (at pp.c:3171)
          TypeDecl: declname='arg_0x101ede658', quals=[] (at pp.c:3171)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__release', quals=[] (at pp.c:3169)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__0__Resource__immediateRequest', quals=[], storage=['static'] (at pp.c:3173)
    FuncDecl: quals=None (at pp.c:3173)
      ParamList:  (at pp.c:3175)
        Decl: name='arg_0x101ede658', quals=[], storage=[] (at pp.c:3175)
          TypeDecl: declname='arg_0x101ede658', quals=[] (at pp.c:3175)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__immediateRequest', quals=[] (at pp.c:3173)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__0__Resource__request', quals=[], storage=['static'] (at pp.c:3177)
    FuncDecl: quals=None (at pp.c:3177)
      ParamList:  (at pp.c:3179)
        Decl: name='arg_0x101ede658', quals=[], storage=[] (at pp.c:3179)
          TypeDecl: declname='arg_0x101ede658', quals=[] (at pp.c:3179)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__request', quals=[] (at pp.c:3177)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__0__Resource__default__granted', quals=[], storage=['static'] (at pp.c:3181)
    FuncDecl: quals=None (at pp.c:3181)
      ParamList:  (at pp.c:3183)
        Decl: name='arg_0x101ede658', quals=[], storage=[] (at pp.c:3183)
          TypeDecl: declname='arg_0x101ede658', quals=[] (at pp.c:3183)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__default__granted', quals=[] (at pp.c:3181)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__Resource__isOwner', quals=[], storage=['static'] (at pp.c:3185)
    FuncDecl: quals=None (at pp.c:3185)
      ParamList:  (at pp.c:3187)
        Decl: name='arg_0x101ede658', quals=[], storage=[] (at pp.c:3187)
          TypeDecl: declname='arg_0x101ede658', quals=[] (at pp.c:3187)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__isOwner', quals=[] (at pp.c:3185)
        IdentifierType: names=['bool'] (at None)
  Decl: name='ArbiterP__0__ArbiterInfo__inUse', quals=[], storage=['static'] (at pp.c:3189)
    FuncDecl: quals=None (at pp.c:3189)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ArbiterInfo__inUse', quals=[] (at pp.c:3189)
        IdentifierType: names=['bool'] (at None)
  Decl: name='ArbiterP__0__ArbiterInfo__userId', quals=[], storage=['static'] (at pp.c:3197)
    FuncDecl: quals=None (at pp.c:3197)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ArbiterInfo__userId', quals=[] (at pp.c:3197)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='ArbiterP__0__grantedTask__runTask', quals=[], storage=['static'] (at pp.c:3199)
    FuncDecl: quals=None (at pp.c:3199)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__grantedTask__runTask', quals=[] (at pp.c:3199)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430I2C0P__HplI2C__clearModeI2C', quals=[], storage=['static'] (at pp.c:3201)
    FuncDecl: quals=None (at pp.c:3201)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430I2C0P__HplI2C__clearModeI2C', quals=[] (at pp.c:3201)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430I2C0P__HplI2C__isI2C', quals=[], storage=['static'] (at pp.c:3203)
    FuncDecl: quals=None (at pp.c:3203)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430I2C0P__HplI2C__isI2C', quals=[] (at pp.c:3203)
        IdentifierType: names=['bool'] (at None)
  Decl: name='ActiveMessageAddressC__amAddress', quals=[], storage=['static'] (at pp.c:3205)
    FuncDecl: quals=None (at pp.c:3205)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ActiveMessageAddressC__amAddress', quals=[] (at pp.c:3205)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='ActiveMessageAddressC__ActiveMessageAddress__amAddress', quals=[], storage=['static'] (at pp.c:3207)
    FuncDecl: quals=None (at pp.c:3207)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ActiveMessageAddressC__ActiveMessageAddress__amAddress', quals=[] (at pp.c:3207)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='ActiveMessageAddressC__ActiveMessageAddress__amGroup', quals=[], storage=['static'] (at pp.c:3212)
    FuncDecl: quals=None (at pp.c:3212)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ActiveMessageAddressC__ActiveMessageAddress__amGroup', quals=[] (at pp.c:3212)
        IdentifierType: names=['am_group_t'] (at None)
  Decl: name='Ds2411P__ReadId48__read', quals=[], storage=['static'] (at pp.c:3214)
    FuncDecl: quals=None (at pp.c:3214)
      ParamList:  (at pp.c:3214)
        Decl: name='id', quals=[], storage=[] (at pp.c:3214)
          PtrDecl: quals=[] (at pp.c:3214)
            TypeDecl: declname='id', quals=[] (at pp.c:3214)
              IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Ds2411P__ReadId48__read', quals=[] (at pp.c:3214)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='OneWireMasterC__OneWire__read', quals=[], storage=['static'] (at pp.c:3216)
    FuncDecl: quals=None (at pp.c:3216)
      ParamList:  (at pp.c:3216)
        Decl: name='cmd', quals=[], storage=[] (at pp.c:3216)
          TypeDecl: declname='cmd', quals=[] (at pp.c:3216)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:3216)
          PtrDecl: quals=[] (at pp.c:3216)
            TypeDecl: declname='buf', quals=[] (at pp.c:3216)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3216)
          TypeDecl: declname='len', quals=[] (at pp.c:3216)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='OneWireMasterC__OneWire__read', quals=[] (at pp.c:3216)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='BusyWaitCounterC__0__BusyWait__wait', quals=[], storage=['static'] (at pp.c:3218)
    FuncDecl: quals=None (at pp.c:3218)
      ParamList:  (at pp.c:3218)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3218)
          TypeDecl: declname='dt', quals=[] (at pp.c:3218)
            IdentifierType: names=['BusyWaitCounterC__0__BusyWait__size_type'] (at None)
      TypeDecl: declname='BusyWaitCounterC__0__BusyWait__wait', quals=[] (at pp.c:3218)
        IdentifierType: names=['void'] (at None)
  Decl: name='BusyWaitCounterC__0__Counter__overflow', quals=[], storage=['static'] (at pp.c:3220)
    FuncDecl: quals=None (at pp.c:3220)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BusyWaitCounterC__0__Counter__overflow', quals=[] (at pp.c:3220)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430CounterC__1__Msp430Timer__overflow', quals=[], storage=['static'] (at pp.c:3222)
    FuncDecl: quals=None (at pp.c:3222)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__1__Msp430Timer__overflow', quals=[] (at pp.c:3222)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430CounterC__1__Counter__get', quals=[], storage=['static'] (at pp.c:3224)
    FuncDecl: quals=None (at pp.c:3224)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__1__Counter__get', quals=[] (at pp.c:3224)
        IdentifierType: names=['Msp430CounterC__1__Counter__size_type'] (at None)
  Decl: name='Msp430GpioC__11__GeneralIO__makeInput', quals=[], storage=['static'] (at pp.c:3226)
    FuncDecl: quals=None (at pp.c:3226)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__GeneralIO__makeInput', quals=[] (at pp.c:3226)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__11__GeneralIO__get', quals=[], storage=['static'] (at pp.c:3228)
    FuncDecl: quals=None (at pp.c:3228)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__GeneralIO__get', quals=[] (at pp.c:3228)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__11__GeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:3231)
    FuncDecl: quals=None (at pp.c:3231)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__GeneralIO__makeOutput', quals=[] (at pp.c:3231)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__11__GeneralIO__clr', quals=[], storage=['static'] (at pp.c:3233)
    FuncDecl: quals=None (at pp.c:3233)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__GeneralIO__clr', quals=[] (at pp.c:3233)
        IdentifierType: names=['void'] (at None)
  Decl: name='DallasId48ToIeeeEui64C__LocalIeeeEui64__getId', quals=[], storage=['static'] (at pp.c:3235)
    FuncDecl: quals=None (at pp.c:3235)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='DallasId48ToIeeeEui64C__LocalIeeeEui64__getId', quals=[] (at pp.c:3235)
        IdentifierType: names=['ieee_eui64_t'] (at None)
  Decl: name='CC2420TransmitP__RadioBackoff__setCongestionBackoff', quals=[], storage=['static'] (at pp.c:3237)
    FuncDecl: quals=None (at pp.c:3237)
      ParamList:  (at pp.c:3237)
        Decl: name='backoffTime', quals=[], storage=[] (at pp.c:3237)
          TypeDecl: declname='backoffTime', quals=[] (at pp.c:3237)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__RadioBackoff__setCongestionBackoff', quals=[] (at pp.c:3237)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__RadioBackoff__setInitialBackoff', quals=[], storage=['static'] (at pp.c:3239)
    FuncDecl: quals=None (at pp.c:3239)
      ParamList:  (at pp.c:3239)
        Decl: name='backoffTime', quals=[], storage=[] (at pp.c:3239)
          TypeDecl: declname='backoffTime', quals=[] (at pp.c:3239)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__RadioBackoff__setInitialBackoff', quals=[] (at pp.c:3239)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__CaptureSFD__captured', quals=[], storage=['static'] (at pp.c:3241)
    FuncDecl: quals=None (at pp.c:3241)
      ParamList:  (at pp.c:3241)
        Decl: name='time', quals=[], storage=[] (at pp.c:3241)
          TypeDecl: declname='time', quals=[] (at pp.c:3241)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__CaptureSFD__captured', quals=[] (at pp.c:3241)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__BackoffTimer__fired', quals=[], storage=['static'] (at pp.c:3243)
    FuncDecl: quals=None (at pp.c:3243)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__BackoffTimer__fired', quals=[] (at pp.c:3243)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__CC2420Receive__receive', quals=[], storage=['static'] (at pp.c:3245)
    FuncDecl: quals=None (at pp.c:3245)
      ParamList:  (at pp.c:3245)
        Decl: name='type', quals=[], storage=[] (at pp.c:3245)
          TypeDecl: declname='type', quals=[] (at pp.c:3245)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='message', quals=[], storage=[] (at pp.c:3245)
          PtrDecl: quals=[] (at pp.c:3245)
            TypeDecl: declname='message', quals=[] (at pp.c:3245)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__CC2420Receive__receive', quals=[] (at pp.c:3245)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__Send__send', quals=[], storage=['static'] (at pp.c:3247)
    FuncDecl: quals=None (at pp.c:3247)
      ParamList:  (at pp.c:3247)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:3247)
          PtrDecl: quals=[] (at pp.c:3247)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:3247)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='useCca', quals=[], storage=[] (at pp.c:3247)
          TypeDecl: declname='useCca', quals=[] (at pp.c:3247)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='CC2420TransmitP__Send__send', quals=[] (at pp.c:3247)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__ChipSpiResource__releasing', quals=[], storage=['static'] (at pp.c:3249)
    FuncDecl: quals=None (at pp.c:3249)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__ChipSpiResource__releasing', quals=[] (at pp.c:3249)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__Init__init', quals=[], storage=['static'] (at pp.c:3251)
    FuncDecl: quals=None (at pp.c:3251)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__Init__init', quals=[] (at pp.c:3251)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__SpiResource__granted', quals=[], storage=['static'] (at pp.c:3253)
    FuncDecl: quals=None (at pp.c:3253)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__SpiResource__granted', quals=[] (at pp.c:3253)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__StdControl__start', quals=[], storage=['static'] (at pp.c:3255)
    FuncDecl: quals=None (at pp.c:3255)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__StdControl__start', quals=[] (at pp.c:3255)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__StdControl__stop', quals=[], storage=['static'] (at pp.c:3265)
    FuncDecl: quals=None (at pp.c:3265)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__StdControl__stop', quals=[] (at pp.c:3265)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__TXFIFO__writeDone', quals=[], storage=['static'] (at pp.c:3267)
    FuncDecl: quals=None (at pp.c:3267)
      ParamList:  (at pp.c:3267)
        Decl: name='data', quals=[], storage=[] (at pp.c:3267)
          PtrDecl: quals=[] (at pp.c:3267)
            TypeDecl: declname='data', quals=[] (at pp.c:3267)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:3267)
          TypeDecl: declname='length', quals=[] (at pp.c:3267)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3267)
          TypeDecl: declname='error', quals=[] (at pp.c:3267)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__TXFIFO__writeDone', quals=[] (at pp.c:3267)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__TXFIFO__readDone', quals=[], storage=['static'] (at pp.c:3269)
    FuncDecl: quals=None (at pp.c:3269)
      ParamList:  (at pp.c:3269)
        Decl: name='data', quals=[], storage=[] (at pp.c:3269)
          PtrDecl: quals=[] (at pp.c:3269)
            TypeDecl: declname='data', quals=[] (at pp.c:3269)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:3269)
          TypeDecl: declname='length', quals=[] (at pp.c:3269)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3269)
          TypeDecl: declname='error', quals=[] (at pp.c:3269)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__TXFIFO__readDone', quals=[] (at pp.c:3269)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Config__syncDone', quals=[], storage=['static'] (at pp.c:3271)
    FuncDecl: quals=None (at pp.c:3271)
      ParamList:  (at pp.c:3271)
        Decl: name='error', quals=[], storage=[] (at pp.c:3271)
          TypeDecl: declname='error', quals=[] (at pp.c:3271)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Config__syncDone', quals=[] (at pp.c:3271)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__receiveDone_task__runTask', quals=[], storage=['static'] (at pp.c:3273)
    FuncDecl: quals=None (at pp.c:3273)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__receiveDone_task__runTask', quals=[] (at pp.c:3273)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Receive__sfd_dropped', quals=[], storage=['static'] (at pp.c:3275)
    FuncDecl: quals=None (at pp.c:3275)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Receive__sfd_dropped', quals=[] (at pp.c:3275)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Receive__sfd', quals=[], storage=['static'] (at pp.c:3277)
    FuncDecl: quals=None (at pp.c:3277)
      ParamList:  (at pp.c:3277)
        Decl: name='time', quals=[], storage=[] (at pp.c:3277)
          TypeDecl: declname='time', quals=[] (at pp.c:3277)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Receive__sfd', quals=[] (at pp.c:3277)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__Init__init', quals=[], storage=['static'] (at pp.c:3279)
    FuncDecl: quals=None (at pp.c:3279)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__Init__init', quals=[] (at pp.c:3279)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__SpiResource__granted', quals=[], storage=['static'] (at pp.c:3281)
    FuncDecl: quals=None (at pp.c:3281)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__SpiResource__granted', quals=[] (at pp.c:3281)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__RXFIFO__writeDone', quals=[], storage=['static'] (at pp.c:3283)
    FuncDecl: quals=None (at pp.c:3283)
      ParamList:  (at pp.c:3283)
        Decl: name='data', quals=[], storage=[] (at pp.c:3283)
          PtrDecl: quals=[] (at pp.c:3283)
            TypeDecl: declname='data', quals=[] (at pp.c:3283)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:3283)
          TypeDecl: declname='length', quals=[] (at pp.c:3283)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3283)
          TypeDecl: declname='error', quals=[] (at pp.c:3283)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__RXFIFO__writeDone', quals=[] (at pp.c:3283)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__RXFIFO__readDone', quals=[], storage=['static'] (at pp.c:3285)
    FuncDecl: quals=None (at pp.c:3285)
      ParamList:  (at pp.c:3285)
        Decl: name='data', quals=[], storage=[] (at pp.c:3285)
          PtrDecl: quals=[] (at pp.c:3285)
            TypeDecl: declname='data', quals=[] (at pp.c:3285)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:3285)
          TypeDecl: declname='length', quals=[] (at pp.c:3285)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3285)
          TypeDecl: declname='error', quals=[] (at pp.c:3285)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__RXFIFO__readDone', quals=[] (at pp.c:3285)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__InterruptFIFOP__fired', quals=[], storage=['static'] (at pp.c:3287)
    FuncDecl: quals=None (at pp.c:3287)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__InterruptFIFOP__fired', quals=[] (at pp.c:3287)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__StdControl__start', quals=[], storage=['static'] (at pp.c:3289)
    FuncDecl: quals=None (at pp.c:3289)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__StdControl__start', quals=[] (at pp.c:3289)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__StdControl__stop', quals=[], storage=['static'] (at pp.c:3299)
    FuncDecl: quals=None (at pp.c:3299)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__StdControl__stop', quals=[] (at pp.c:3299)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420PacketP__CC2420Packet__setNetwork', quals=[], storage=['static'] (at pp.c:3301)
    FuncDecl: quals=None (at pp.c:3301)
      ParamList:  (at pp.c:3301)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:3301)
          PtrDecl: quals=[] (at pp.c:3301)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:3301)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='networkId', quals=[], storage=[] (at pp.c:3301)
          TypeDecl: declname='networkId', quals=[] (at pp.c:3301)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420PacketP__CC2420Packet__setNetwork', quals=[] (at pp.c:3301)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420PacketP__CC2420Packet__getNetwork', quals=[], storage=['static'] (at pp.c:3303)
    FuncDecl: quals=None (at pp.c:3303)
      ParamList:  (at pp.c:3303)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:3303)
          PtrDecl: quals=[] (at pp.c:3303)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:3303)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420PacketP__CC2420Packet__getNetwork', quals=[] (at pp.c:3303)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420PacketP__PacketTimeStamp32khz__clear', quals=[], storage=['static'] (at pp.c:3305)
    FuncDecl: quals=None (at pp.c:3305)
      ParamList:  (at pp.c:3307)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3307)
          PtrDecl: quals=[] (at pp.c:3307)
            TypeDecl: declname='msg', quals=[] (at pp.c:3307)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420PacketP__PacketTimeStamp32khz__clear', quals=[] (at pp.c:3305)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420PacketP__PacketTimeStamp32khz__set', quals=[], storage=['static'] (at pp.c:3309)
    FuncDecl: quals=None (at pp.c:3309)
      ParamList:  (at pp.c:3311)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3311)
          PtrDecl: quals=[] (at pp.c:3311)
            TypeDecl: declname='msg', quals=[] (at pp.c:3311)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='value', quals=[], storage=[] (at pp.c:3316)
          TypeDecl: declname='value', quals=[] (at pp.c:3316)
            IdentifierType: names=['CC2420PacketP__PacketTimeStamp32khz__size_type'] (at None)
      TypeDecl: declname='CC2420PacketP__PacketTimeStamp32khz__set', quals=[] (at pp.c:3309)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420PacketP__CC2420PacketBody__getHeader', quals=[], storage=['static'] (at pp.c:3318)
    FuncDecl: quals=None (at pp.c:3318)
      ParamList:  (at pp.c:3318)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3318)
          PtrDecl: quals=[] (at pp.c:3318)
            TypeDecl: declname='msg', quals=[] (at pp.c:3318)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3318)
        TypeDecl: declname='CC2420PacketP__CC2420PacketBody__getHeader', quals=[] (at pp.c:3318)
          IdentifierType: names=['cc2420_header_t'] (at None)
  Decl: name='CC2420PacketP__CC2420PacketBody__getMetadata', quals=[], storage=['static'] (at pp.c:3329)
    FuncDecl: quals=None (at pp.c:3329)
      ParamList:  (at pp.c:3329)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3329)
          PtrDecl: quals=[] (at pp.c:3329)
            TypeDecl: declname='msg', quals=[] (at pp.c:3329)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3329)
        TypeDecl: declname='CC2420PacketP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:3329)
          IdentifierType: names=['cc2420_metadata_t'] (at None)
  Decl: name='CC2420PacketP__PacketTimeSyncOffset__get', quals=[], storage=['static'] (at pp.c:3331)
    FuncDecl: quals=None (at pp.c:3331)
      ParamList:  (at pp.c:3333)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3333)
          PtrDecl: quals=[] (at pp.c:3333)
            TypeDecl: declname='msg', quals=[] (at pp.c:3333)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420PacketP__PacketTimeSyncOffset__get', quals=[] (at pp.c:3331)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420PacketP__PacketTimeSyncOffset__isSet', quals=[], storage=['static'] (at pp.c:3335)
    FuncDecl: quals=None (at pp.c:3335)
      ParamList:  (at pp.c:3337)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3337)
          PtrDecl: quals=[] (at pp.c:3337)
            TypeDecl: declname='msg', quals=[] (at pp.c:3337)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420PacketP__PacketTimeSyncOffset__isSet', quals=[] (at pp.c:3335)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CounterToLocalTimeC__0__Counter__overflow', quals=[], storage=['static'] (at pp.c:3339)
    FuncDecl: quals=None (at pp.c:3339)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CounterToLocalTimeC__0__Counter__overflow', quals=[] (at pp.c:3339)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430Compare__fired', quals=[], storage=['static'] (at pp.c:3341)
    FuncDecl: quals=None (at pp.c:3341)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430Compare__fired', quals=[] (at pp.c:3341)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430Timer__overflow', quals=[], storage=['static'] (at pp.c:3343)
    FuncDecl: quals=None (at pp.c:3343)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430Timer__overflow', quals=[] (at pp.c:3343)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Alarm__startAt', quals=[], storage=['static'] (at pp.c:3345)
    FuncDecl: quals=None (at pp.c:3345)
      ParamList:  (at pp.c:3345)
        Decl: name='t0', quals=[], storage=[] (at pp.c:3345)
          TypeDecl: declname='t0', quals=[] (at pp.c:3345)
            IdentifierType: names=['Msp430AlarmC__1__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3345)
          TypeDecl: declname='dt', quals=[] (at pp.c:3345)
            IdentifierType: names=['Msp430AlarmC__1__Alarm__size_type'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Alarm__startAt', quals=[] (at pp.c:3345)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Alarm__stop', quals=[], storage=['static'] (at pp.c:3347)
    FuncDecl: quals=None (at pp.c:3347)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Alarm__stop', quals=[] (at pp.c:3347)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Init__init', quals=[], storage=['static'] (at pp.c:3349)
    FuncDecl: quals=None (at pp.c:3349)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Init__init', quals=[] (at pp.c:3349)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='TransformCounterC__1__CounterFrom__overflow', quals=[], storage=['static'] (at pp.c:3351)
    FuncDecl: quals=None (at pp.c:3351)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__1__CounterFrom__overflow', quals=[] (at pp.c:3351)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformCounterC__1__Counter__get', quals=[], storage=['static'] (at pp.c:3353)
    FuncDecl: quals=None (at pp.c:3353)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__1__Counter__get', quals=[] (at pp.c:3353)
        IdentifierType: names=['TransformCounterC__1__Counter__size_type'] (at None)
  Decl: name='TransformAlarmC__1__Alarm__getNow', quals=[], storage=['static'] (at pp.c:3355)
    FuncDecl: quals=None (at pp.c:3355)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__getNow', quals=[] (at pp.c:3355)
        IdentifierType: names=['TransformAlarmC__1__Alarm__size_type'] (at None)
  Decl: name='TransformAlarmC__1__Alarm__startAt', quals=[], storage=['static'] (at pp.c:3357)
    FuncDecl: quals=None (at pp.c:3357)
      ParamList:  (at pp.c:3357)
        Decl: name='t0', quals=[], storage=[] (at pp.c:3357)
          TypeDecl: declname='t0', quals=[] (at pp.c:3357)
            IdentifierType: names=['TransformAlarmC__1__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3357)
          TypeDecl: declname='dt', quals=[] (at pp.c:3357)
            IdentifierType: names=['TransformAlarmC__1__Alarm__size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__startAt', quals=[] (at pp.c:3357)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__Alarm__getAlarm', quals=[], storage=['static'] (at pp.c:3359)
    FuncDecl: quals=None (at pp.c:3359)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__getAlarm', quals=[] (at pp.c:3359)
        IdentifierType: names=['TransformAlarmC__1__Alarm__size_type'] (at None)
  Decl: name='TransformAlarmC__1__Alarm__stop', quals=[], storage=['static'] (at pp.c:3361)
    FuncDecl: quals=None (at pp.c:3361)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__stop', quals=[] (at pp.c:3361)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__AlarmFrom__fired', quals=[], storage=['static'] (at pp.c:3366)
    FuncDecl: quals=None (at pp.c:3366)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__AlarmFrom__fired', quals=[] (at pp.c:3366)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__Counter__overflow', quals=[], storage=['static'] (at pp.c:3368)
    FuncDecl: quals=None (at pp.c:3368)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Counter__overflow', quals=[] (at pp.c:3368)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__fired__runTask', quals=[], storage=['static'] (at pp.c:3370)
    FuncDecl: quals=None (at pp.c:3370)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__fired__runTask', quals=[] (at pp.c:3370)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__fired', quals=[], storage=['static'] (at pp.c:3372)
    FuncDecl: quals=None (at pp.c:3372)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__fired', quals=[] (at pp.c:3372)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__getNow', quals=[], storage=['static'] (at pp.c:3374)
    FuncDecl: quals=None (at pp.c:3374)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__getNow', quals=[] (at pp.c:3374)
        IdentifierType: names=['uint32_t'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__startOneShotAt', quals=[], storage=['static'] (at pp.c:3376)
    FuncDecl: quals=None (at pp.c:3376)
      ParamList:  (at pp.c:3376)
        Decl: name='t0', quals=[], storage=[] (at pp.c:3376)
          TypeDecl: declname='t0', quals=[] (at pp.c:3376)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3376)
          TypeDecl: declname='dt', quals=[] (at pp.c:3376)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__startOneShotAt', quals=[] (at pp.c:3376)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__stop', quals=[], storage=['static'] (at pp.c:3378)
    FuncDecl: quals=None (at pp.c:3378)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__stop', quals=[] (at pp.c:3378)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[], storage=['static'] (at pp.c:3380)
    FuncDecl: quals=None (at pp.c:3380)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[] (at pp.c:3380)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__TimerFrom__fired', quals=[], storage=['static'] (at pp.c:3382)
    FuncDecl: quals=None (at pp.c:3382)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__fired', quals=[] (at pp.c:3382)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__default__fired', quals=[], storage=['static'] (at pp.c:3384)
    FuncDecl: quals=None (at pp.c:3384)
      ParamList:  (at pp.c:3386)
        Decl: name='arg_0x1023a62f8', quals=[], storage=[] (at pp.c:3386)
          TypeDecl: declname='arg_0x1023a62f8', quals=[] (at pp.c:3386)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__default__fired', quals=[] (at pp.c:3384)
        IdentifierType: names=['void'] (at None)
  Decl: name='CounterToLocalTimeC__1__Counter__overflow', quals=[], storage=['static'] (at pp.c:3388)
    FuncDecl: quals=None (at pp.c:3388)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CounterToLocalTimeC__1__Counter__overflow', quals=[] (at pp.c:3388)
        IdentifierType: names=['void'] (at None)
  Decl: name='RandomMlcgC__Random__rand16', quals=[], storage=['static'] (at pp.c:3390)
    FuncDecl: quals=None (at pp.c:3390)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RandomMlcgC__Random__rand16', quals=[] (at pp.c:3390)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='RandomMlcgC__Random__rand32', quals=[], storage=['static'] (at pp.c:3392)
    FuncDecl: quals=None (at pp.c:3392)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RandomMlcgC__Random__rand32', quals=[] (at pp.c:3392)
        IdentifierType: names=['uint32_t'] (at None)
  Decl: name='RandomMlcgC__Init__init', quals=[], storage=['static'] (at pp.c:3394)
    FuncDecl: quals=None (at pp.c:3394)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RandomMlcgC__Init__init', quals=[] (at pp.c:3394)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='UniqueSendP__SubSend__sendDone', quals=[], storage=['static'] (at pp.c:3396)
    FuncDecl: quals=None (at pp.c:3396)
      ParamList:  (at pp.c:3398)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3398)
          PtrDecl: quals=[] (at pp.c:3398)
            TypeDecl: declname='msg', quals=[] (at pp.c:3398)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3402)
          TypeDecl: declname='error', quals=[] (at pp.c:3402)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='UniqueSendP__SubSend__sendDone', quals=[] (at pp.c:3396)
        IdentifierType: names=['void'] (at None)
  Decl: name='UniqueSendP__Send__send', quals=[], storage=['static'] (at pp.c:3404)
    FuncDecl: quals=None (at pp.c:3404)
      ParamList:  (at pp.c:3406)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3406)
          PtrDecl: quals=[] (at pp.c:3406)
            TypeDecl: declname='msg', quals=[] (at pp.c:3406)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3414)
          TypeDecl: declname='len', quals=[] (at pp.c:3414)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='UniqueSendP__Send__send', quals=[] (at pp.c:3404)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='UniqueSendP__Send__maxPayloadLength', quals=[], storage=['static'] (at pp.c:3416)
    FuncDecl: quals=None (at pp.c:3416)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='UniqueSendP__Send__maxPayloadLength', quals=[] (at pp.c:3416)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='UniqueSendP__Init__init', quals=[], storage=['static'] (at pp.c:3418)
    FuncDecl: quals=None (at pp.c:3418)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='UniqueSendP__Init__init', quals=[] (at pp.c:3418)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='UniqueReceiveP__SubReceive__receive', quals=[], storage=['static'] (at pp.c:3426)
    FuncDecl: quals=None (at pp.c:3426)
      ParamList:  (at pp.c:3428)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3428)
          PtrDecl: quals=[] (at pp.c:3428)
            TypeDecl: declname='msg', quals=[] (at pp.c:3428)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:3429)
          PtrDecl: quals=[] (at pp.c:3429)
            TypeDecl: declname='payload', quals=[] (at pp.c:3429)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3435)
          TypeDecl: declname='len', quals=[] (at pp.c:3435)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3422)
        TypeDecl: declname='UniqueReceiveP__SubReceive__receive', quals=[] (at pp.c:3426)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='UniqueReceiveP__Init__init', quals=[], storage=['static'] (at pp.c:3437)
    FuncDecl: quals=None (at pp.c:3437)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='UniqueReceiveP__Init__init', quals=[] (at pp.c:3437)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='UniqueReceiveP__DuplicateReceive__default__receive', quals=[], storage=['static'] (at pp.c:3445)
    FuncDecl: quals=None (at pp.c:3445)
      ParamList:  (at pp.c:3447)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3447)
          PtrDecl: quals=[] (at pp.c:3447)
            TypeDecl: declname='msg', quals=[] (at pp.c:3447)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:3448)
          PtrDecl: quals=[] (at pp.c:3448)
            TypeDecl: declname='payload', quals=[] (at pp.c:3448)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3454)
          TypeDecl: declname='len', quals=[] (at pp.c:3454)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3441)
        TypeDecl: declname='UniqueReceiveP__DuplicateReceive__default__receive', quals=[] (at pp.c:3445)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__SubSend__sendDone', quals=[], storage=['static'] (at pp.c:3456)
    FuncDecl: quals=None (at pp.c:3456)
      ParamList:  (at pp.c:3458)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3458)
          PtrDecl: quals=[] (at pp.c:3458)
            TypeDecl: declname='msg', quals=[] (at pp.c:3458)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3462)
          TypeDecl: declname='error', quals=[] (at pp.c:3462)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__SubSend__sendDone', quals=[] (at pp.c:3456)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__SubReceive__receive', quals=[], storage=['static'] (at pp.c:3470)
    FuncDecl: quals=None (at pp.c:3470)
      ParamList:  (at pp.c:3472)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3472)
          PtrDecl: quals=[] (at pp.c:3472)
            TypeDecl: declname='msg', quals=[] (at pp.c:3472)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:3473)
          PtrDecl: quals=[] (at pp.c:3473)
            TypeDecl: declname='payload', quals=[] (at pp.c:3473)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3479)
          TypeDecl: declname='len', quals=[] (at pp.c:3479)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3466)
        TypeDecl: declname='CC2420TinyosNetworkP__SubReceive__receive', quals=[] (at pp.c:3470)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__grantTask__runTask', quals=[], storage=['static'] (at pp.c:3481)
    FuncDecl: quals=None (at pp.c:3481)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__grantTask__runTask', quals=[] (at pp.c:3481)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__ActiveSend__send', quals=[], storage=['static'] (at pp.c:3483)
    FuncDecl: quals=None (at pp.c:3483)
      ParamList:  (at pp.c:3485)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3485)
          PtrDecl: quals=[] (at pp.c:3485)
            TypeDecl: declname='msg', quals=[] (at pp.c:3485)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3493)
          TypeDecl: declname='len', quals=[] (at pp.c:3493)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__ActiveSend__send', quals=[] (at pp.c:3483)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__ActiveSend__maxPayloadLength', quals=[], storage=['static'] (at pp.c:3495)
    FuncDecl: quals=None (at pp.c:3495)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__ActiveSend__maxPayloadLength', quals=[] (at pp.c:3495)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__BareReceive__default__receive', quals=[], storage=['static'] (at pp.c:3503)
    FuncDecl: quals=None (at pp.c:3503)
      ParamList:  (at pp.c:3505)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3505)
          PtrDecl: quals=[] (at pp.c:3505)
            TypeDecl: declname='msg', quals=[] (at pp.c:3505)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:3506)
          PtrDecl: quals=[] (at pp.c:3506)
            TypeDecl: declname='payload', quals=[] (at pp.c:3506)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3512)
          TypeDecl: declname='len', quals=[] (at pp.c:3512)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3499)
        TypeDecl: declname='CC2420TinyosNetworkP__BareReceive__default__receive', quals=[] (at pp.c:3503)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__Resource__release', quals=[], storage=['static'] (at pp.c:3514)
    FuncDecl: quals=None (at pp.c:3514)
      ParamList:  (at pp.c:3516)
        Decl: name='arg_0x1024aa060', quals=[], storage=[] (at pp.c:3516)
          TypeDecl: declname='arg_0x1024aa060', quals=[] (at pp.c:3516)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Resource__release', quals=[] (at pp.c:3514)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__Resource__immediateRequest', quals=[], storage=['static'] (at pp.c:3518)
    FuncDecl: quals=None (at pp.c:3518)
      ParamList:  (at pp.c:3520)
        Decl: name='arg_0x1024aa060', quals=[], storage=[] (at pp.c:3520)
          TypeDecl: declname='arg_0x1024aa060', quals=[] (at pp.c:3520)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Resource__immediateRequest', quals=[] (at pp.c:3518)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__Resource__request', quals=[], storage=['static'] (at pp.c:3522)
    FuncDecl: quals=None (at pp.c:3522)
      ParamList:  (at pp.c:3524)
        Decl: name='arg_0x1024aa060', quals=[], storage=[] (at pp.c:3524)
          TypeDecl: declname='arg_0x1024aa060', quals=[] (at pp.c:3524)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Resource__request', quals=[] (at pp.c:3522)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__Resource__default__granted', quals=[], storage=['static'] (at pp.c:3526)
    FuncDecl: quals=None (at pp.c:3526)
      ParamList:  (at pp.c:3528)
        Decl: name='arg_0x1024aa060', quals=[], storage=[] (at pp.c:3528)
          TypeDecl: declname='arg_0x1024aa060', quals=[] (at pp.c:3528)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Resource__default__granted', quals=[] (at pp.c:3526)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__BareSend__getPayload', quals=[], storage=['static'] (at pp.c:3534)
    FuncDecl: quals=None (at pp.c:3534)
      ParamList:  (at pp.c:3536)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3536)
          PtrDecl: quals=[] (at pp.c:3536)
            TypeDecl: declname='msg', quals=[] (at pp.c:3536)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3539)
          TypeDecl: declname='len', quals=[] (at pp.c:3539)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3532)
        TypeDecl: declname='CC2420TinyosNetworkP__BareSend__getPayload', quals=[] (at pp.c:3534)
          IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__BareSend__default__sendDone', quals=[], storage=['static'] (at pp.c:3541)
    FuncDecl: quals=None (at pp.c:3541)
      ParamList:  (at pp.c:3543)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3543)
          PtrDecl: quals=[] (at pp.c:3543)
            TypeDecl: declname='msg', quals=[] (at pp.c:3543)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3547)
          TypeDecl: declname='error', quals=[] (at pp.c:3547)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__BareSend__default__sendDone', quals=[] (at pp.c:3541)
        IdentifierType: names=['void'] (at None)
  Decl: name='FcfsResourceQueueC__0__Init__init', quals=[], storage=['static'] (at pp.c:3549)
    FuncDecl: quals=None (at pp.c:3549)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__0__Init__init', quals=[] (at pp.c:3549)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='FcfsResourceQueueC__0__FcfsQueue__enqueue', quals=[], storage=['static'] (at pp.c:3551)
    FuncDecl: quals=None (at pp.c:3551)
      ParamList:  (at pp.c:3551)
        Decl: name='id', quals=[], storage=[] (at pp.c:3551)
          TypeDecl: declname='id', quals=[] (at pp.c:3551)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__enqueue', quals=[] (at pp.c:3551)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='FcfsResourceQueueC__0__FcfsQueue__isEmpty', quals=[], storage=['static'] (at pp.c:3553)
    FuncDecl: quals=None (at pp.c:3553)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__isEmpty', quals=[] (at pp.c:3553)
        IdentifierType: names=['bool'] (at None)
  Decl: name='FcfsResourceQueueC__0__FcfsQueue__isEnqueued', quals=[], storage=['static'] (at pp.c:3562)
    FuncDecl: quals=None (at pp.c:3562)
      ParamList:  (at pp.c:3562)
        Decl: name='id', quals=[], storage=[] (at pp.c:3562)
          TypeDecl: declname='id', quals=[] (at pp.c:3562)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__isEnqueued', quals=[] (at pp.c:3562)
        IdentifierType: names=['bool'] (at None)
  Decl: name='FcfsResourceQueueC__0__FcfsQueue__dequeue', quals=[], storage=['static'] (at pp.c:3570)
    FuncDecl: quals=None (at pp.c:3570)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__dequeue', quals=[] (at pp.c:3570)
        IdentifierType: names=['resource_client_id_t'] (at None)
  Decl: name='CC2420ActiveMessageP__SubReceive__receive', quals=[], storage=['static'] (at pp.c:3578)
    FuncDecl: quals=None (at pp.c:3578)
      ParamList:  (at pp.c:3580)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3580)
          PtrDecl: quals=[] (at pp.c:3580)
            TypeDecl: declname='msg', quals=[] (at pp.c:3580)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:3581)
          PtrDecl: quals=[] (at pp.c:3581)
            TypeDecl: declname='payload', quals=[] (at pp.c:3581)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3587)
          TypeDecl: declname='len', quals=[] (at pp.c:3587)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3574)
        TypeDecl: declname='CC2420ActiveMessageP__SubReceive__receive', quals=[] (at pp.c:3578)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420ActiveMessageP__SubSend__sendDone', quals=[], storage=['static'] (at pp.c:3589)
    FuncDecl: quals=None (at pp.c:3589)
      ParamList:  (at pp.c:3591)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3591)
          PtrDecl: quals=[] (at pp.c:3591)
            TypeDecl: declname='msg', quals=[] (at pp.c:3591)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3595)
          TypeDecl: declname='error', quals=[] (at pp.c:3595)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SubSend__sendDone', quals=[] (at pp.c:3589)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__CC2420Config__syncDone', quals=[], storage=['static'] (at pp.c:3597)
    FuncDecl: quals=None (at pp.c:3597)
      ParamList:  (at pp.c:3597)
        Decl: name='error', quals=[], storage=[] (at pp.c:3597)
          TypeDecl: declname='error', quals=[] (at pp.c:3597)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__CC2420Config__syncDone', quals=[] (at pp.c:3597)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioBackoff__default__requestCca', quals=[], storage=['static'] (at pp.c:3599)
    FuncDecl: quals=None (at pp.c:3599)
      ParamList:  (at pp.c:3601)
        Decl: name='arg_0x102533d60', quals=[], storage=[] (at pp.c:3601)
          TypeDecl: declname='arg_0x102533d60', quals=[] (at pp.c:3601)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3603)
          PtrDecl: quals=[] (at pp.c:3603)
            TypeDecl: declname='msg', quals=[] (at pp.c:3603)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__default__requestCca', quals=[] (at pp.c:3599)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioBackoff__default__requestInitialBackoff', quals=[], storage=['static'] (at pp.c:3605)
    FuncDecl: quals=None (at pp.c:3605)
      ParamList:  (at pp.c:3607)
        Decl: name='arg_0x102533d60', quals=[], storage=[] (at pp.c:3607)
          TypeDecl: declname='arg_0x102533d60', quals=[] (at pp.c:3607)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3609)
          PtrDecl: quals=[] (at pp.c:3609)
            TypeDecl: declname='msg', quals=[] (at pp.c:3609)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__default__requestInitialBackoff', quals=[] (at pp.c:3605)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioBackoff__default__requestCongestionBackoff', quals=[], storage=['static'] (at pp.c:3616)
    FuncDecl: quals=None (at pp.c:3616)
      ParamList:  (at pp.c:3618)
        Decl: name='arg_0x102533d60', quals=[], storage=[] (at pp.c:3618)
          TypeDecl: declname='arg_0x102533d60', quals=[] (at pp.c:3618)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3620)
          PtrDecl: quals=[] (at pp.c:3620)
            TypeDecl: declname='msg', quals=[] (at pp.c:3620)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__default__requestCongestionBackoff', quals=[] (at pp.c:3616)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__SendNotifier__default__aboutToSend', quals=[], storage=['static'] (at pp.c:3622)
    FuncDecl: quals=None (at pp.c:3622)
      ParamList:  (at pp.c:3624)
        Decl: name='arg_0x102533258', quals=[], storage=[] (at pp.c:3624)
          TypeDecl: declname='arg_0x102533258', quals=[] (at pp.c:3624)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='dest', quals=[], storage=[] (at pp.c:3626)
          TypeDecl: declname='dest', quals=[] (at pp.c:3626)
            IdentifierType: names=['am_addr_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3628)
          PtrDecl: quals=[] (at pp.c:3628)
            TypeDecl: declname='msg', quals=[] (at pp.c:3628)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SendNotifier__default__aboutToSend', quals=[] (at pp.c:3622)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__SubBackoff__requestCca', quals=[], storage=['static'] (at pp.c:3630)
    FuncDecl: quals=None (at pp.c:3630)
      ParamList:  (at pp.c:3630)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3630)
          PtrDecl: quals=[] (at pp.c:3630)
            TypeDecl: declname='msg', quals=[] (at pp.c:3630)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SubBackoff__requestCca', quals=[] (at pp.c:3630)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__SubBackoff__requestInitialBackoff', quals=[], storage=['static'] (at pp.c:3632)
    FuncDecl: quals=None (at pp.c:3632)
      ParamList:  (at pp.c:3632)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3632)
          PtrDecl: quals=[] (at pp.c:3632)
            TypeDecl: declname='msg', quals=[] (at pp.c:3632)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SubBackoff__requestInitialBackoff', quals=[] (at pp.c:3632)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__SubBackoff__requestCongestionBackoff', quals=[], storage=['static'] (at pp.c:3639)
    FuncDecl: quals=None (at pp.c:3639)
      ParamList:  (at pp.c:3639)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3639)
          PtrDecl: quals=[] (at pp.c:3639)
            TypeDecl: declname='msg', quals=[] (at pp.c:3639)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SubBackoff__requestCongestionBackoff', quals=[] (at pp.c:3639)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__Packet__clear', quals=[], storage=['static'] (at pp.c:3641)
    FuncDecl: quals=None (at pp.c:3641)
      ParamList:  (at pp.c:3643)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3643)
          PtrDecl: quals=[] (at pp.c:3643)
            TypeDecl: declname='msg', quals=[] (at pp.c:3643)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__Packet__clear', quals=[] (at pp.c:3641)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__Packet__payloadLength', quals=[], storage=['static'] (at pp.c:3645)
    FuncDecl: quals=None (at pp.c:3645)
      ParamList:  (at pp.c:3647)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3647)
          PtrDecl: quals=[] (at pp.c:3647)
            TypeDecl: declname='msg', quals=[] (at pp.c:3647)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__Packet__payloadLength', quals=[] (at pp.c:3645)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ActiveMessageP__Packet__maxPayloadLength', quals=[], storage=['static'] (at pp.c:3649)
    FuncDecl: quals=None (at pp.c:3649)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__Packet__maxPayloadLength', quals=[] (at pp.c:3649)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMSend__send', quals=[], storage=['static'] (at pp.c:3651)
    FuncDecl: quals=None (at pp.c:3651)
      ParamList:  (at pp.c:3653)
        Decl: name='arg_0x1025397d8', quals=[], storage=[] (at pp.c:3653)
          TypeDecl: declname='arg_0x1025397d8', quals=[] (at pp.c:3653)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='addr', quals=[], storage=[] (at pp.c:3655)
          TypeDecl: declname='addr', quals=[] (at pp.c:3655)
            IdentifierType: names=['am_addr_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3657)
          PtrDecl: quals=[] (at pp.c:3657)
            TypeDecl: declname='msg', quals=[] (at pp.c:3657)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3666)
          TypeDecl: declname='len', quals=[] (at pp.c:3666)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMSend__send', quals=[] (at pp.c:3651)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__group', quals=[], storage=['static'] (at pp.c:3668)
    FuncDecl: quals=None (at pp.c:3668)
      ParamList:  (at pp.c:3670)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:3670)
          PtrDecl: quals=[] (at pp.c:3670)
            TypeDecl: declname='amsg', quals=[] (at pp.c:3670)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__group', quals=[] (at pp.c:3668)
        IdentifierType: names=['am_group_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__source', quals=[], storage=['static'] (at pp.c:3672)
    FuncDecl: quals=None (at pp.c:3672)
      ParamList:  (at pp.c:3674)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:3674)
          PtrDecl: quals=[] (at pp.c:3674)
            TypeDecl: declname='amsg', quals=[] (at pp.c:3674)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__source', quals=[] (at pp.c:3672)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__address', quals=[], storage=['static'] (at pp.c:3676)
    FuncDecl: quals=None (at pp.c:3676)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__address', quals=[] (at pp.c:3676)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__destination', quals=[], storage=['static'] (at pp.c:3686)
    FuncDecl: quals=None (at pp.c:3686)
      ParamList:  (at pp.c:3688)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:3688)
          PtrDecl: quals=[] (at pp.c:3688)
            TypeDecl: declname='amsg', quals=[] (at pp.c:3688)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__destination', quals=[] (at pp.c:3686)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__setSource', quals=[], storage=['static'] (at pp.c:3690)
    FuncDecl: quals=None (at pp.c:3690)
      ParamList:  (at pp.c:3692)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:3692)
          PtrDecl: quals=[] (at pp.c:3692)
            TypeDecl: declname='amsg', quals=[] (at pp.c:3692)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='addr', quals=[], storage=[] (at pp.c:3696)
          TypeDecl: declname='addr', quals=[] (at pp.c:3696)
            IdentifierType: names=['am_addr_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__setSource', quals=[] (at pp.c:3690)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__type', quals=[], storage=['static'] (at pp.c:3698)
    FuncDecl: quals=None (at pp.c:3698)
      ParamList:  (at pp.c:3700)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:3700)
          PtrDecl: quals=[] (at pp.c:3700)
            TypeDecl: declname='amsg', quals=[] (at pp.c:3700)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__type', quals=[] (at pp.c:3698)
        IdentifierType: names=['am_id_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__isForMe', quals=[], storage=['static'] (at pp.c:3702)
    FuncDecl: quals=None (at pp.c:3702)
      ParamList:  (at pp.c:3704)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:3704)
          PtrDecl: quals=[] (at pp.c:3704)
            TypeDecl: declname='amsg', quals=[] (at pp.c:3704)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__isForMe', quals=[] (at pp.c:3702)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioResource__granted', quals=[], storage=['static'] (at pp.c:3706)
    FuncDecl: quals=None (at pp.c:3706)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioResource__granted', quals=[] (at pp.c:3706)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialActiveMessageP__0__SubSend__sendDone', quals=[], storage=['static'] (at pp.c:3708)
    FuncDecl: quals=None (at pp.c:3708)
      ParamList:  (at pp.c:3710)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3710)
          PtrDecl: quals=[] (at pp.c:3710)
            TypeDecl: declname='msg', quals=[] (at pp.c:3710)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3714)
          TypeDecl: declname='error', quals=[] (at pp.c:3714)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__SubSend__sendDone', quals=[] (at pp.c:3708)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialActiveMessageP__0__SubReceive__receive', quals=[], storage=['static'] (at pp.c:3722)
    FuncDecl: quals=None (at pp.c:3722)
      ParamList:  (at pp.c:3724)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3724)
          PtrDecl: quals=[] (at pp.c:3724)
            TypeDecl: declname='msg', quals=[] (at pp.c:3724)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:3725)
          PtrDecl: quals=[] (at pp.c:3725)
            TypeDecl: declname='payload', quals=[] (at pp.c:3725)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3731)
          TypeDecl: declname='len', quals=[] (at pp.c:3731)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3718)
        TypeDecl: declname='SerialActiveMessageP__0__SubReceive__receive', quals=[] (at pp.c:3722)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='SerialActiveMessageP__0__AMSend__send', quals=[], storage=['static'] (at pp.c:3733)
    FuncDecl: quals=None (at pp.c:3733)
      ParamList:  (at pp.c:3735)
        Decl: name='arg_0x1025ba220', quals=[], storage=[] (at pp.c:3735)
          TypeDecl: declname='arg_0x1025ba220', quals=[] (at pp.c:3735)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='addr', quals=[], storage=[] (at pp.c:3737)
          TypeDecl: declname='addr', quals=[] (at pp.c:3737)
            IdentifierType: names=['am_addr_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3739)
          PtrDecl: quals=[] (at pp.c:3739)
            TypeDecl: declname='msg', quals=[] (at pp.c:3739)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3748)
          TypeDecl: declname='len', quals=[] (at pp.c:3748)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__AMSend__send', quals=[] (at pp.c:3733)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialActiveMessageP__0__Packet__clear', quals=[], storage=['static'] (at pp.c:3750)
    FuncDecl: quals=None (at pp.c:3750)
      ParamList:  (at pp.c:3752)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3752)
          PtrDecl: quals=[] (at pp.c:3752)
            TypeDecl: declname='msg', quals=[] (at pp.c:3752)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__Packet__clear', quals=[] (at pp.c:3750)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialActiveMessageP__0__Packet__payloadLength', quals=[], storage=['static'] (at pp.c:3754)
    FuncDecl: quals=None (at pp.c:3754)
      ParamList:  (at pp.c:3756)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3756)
          PtrDecl: quals=[] (at pp.c:3756)
            TypeDecl: declname='msg', quals=[] (at pp.c:3756)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__Packet__payloadLength', quals=[] (at pp.c:3754)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialActiveMessageP__0__Packet__maxPayloadLength', quals=[], storage=['static'] (at pp.c:3758)
    FuncDecl: quals=None (at pp.c:3758)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__Packet__maxPayloadLength', quals=[] (at pp.c:3758)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialActiveMessageP__0__AMPacket__source', quals=[], storage=['static'] (at pp.c:3760)
    FuncDecl: quals=None (at pp.c:3760)
      ParamList:  (at pp.c:3762)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:3762)
          PtrDecl: quals=[] (at pp.c:3762)
            TypeDecl: declname='amsg', quals=[] (at pp.c:3762)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__AMPacket__source', quals=[] (at pp.c:3760)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='SerialActiveMessageP__0__AMPacket__destination', quals=[], storage=['static'] (at pp.c:3764)
    FuncDecl: quals=None (at pp.c:3764)
      ParamList:  (at pp.c:3766)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:3766)
          PtrDecl: quals=[] (at pp.c:3766)
            TypeDecl: declname='amsg', quals=[] (at pp.c:3766)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__AMPacket__destination', quals=[] (at pp.c:3764)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='SerialActiveMessageP__0__AMPacket__setSource', quals=[], storage=['static'] (at pp.c:3768)
    FuncDecl: quals=None (at pp.c:3768)
      ParamList:  (at pp.c:3770)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:3770)
          PtrDecl: quals=[] (at pp.c:3770)
            TypeDecl: declname='amsg', quals=[] (at pp.c:3770)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='addr', quals=[], storage=[] (at pp.c:3774)
          TypeDecl: declname='addr', quals=[] (at pp.c:3774)
            IdentifierType: names=['am_addr_t'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__AMPacket__setSource', quals=[] (at pp.c:3768)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialActiveMessageP__0__AMPacket__type', quals=[], storage=['static'] (at pp.c:3776)
    FuncDecl: quals=None (at pp.c:3776)
      ParamList:  (at pp.c:3778)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:3778)
          PtrDecl: quals=[] (at pp.c:3778)
            TypeDecl: declname='amsg', quals=[] (at pp.c:3778)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__AMPacket__type', quals=[] (at pp.c:3776)
        IdentifierType: names=['am_id_t'] (at None)
  Decl: name='SerialActiveMessageP__0__AMPacket__setGroup', quals=[], storage=['static'] (at pp.c:3780)
    FuncDecl: quals=None (at pp.c:3780)
      ParamList:  (at pp.c:3782)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:3782)
          PtrDecl: quals=[] (at pp.c:3782)
            TypeDecl: declname='amsg', quals=[] (at pp.c:3782)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='grp', quals=[], storage=[] (at pp.c:3785)
          TypeDecl: declname='grp', quals=[] (at pp.c:3785)
            IdentifierType: names=['am_group_t'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__AMPacket__setGroup', quals=[] (at pp.c:3780)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__SplitControl__start', quals=[], storage=['static'] (at pp.c:3787)
    FuncDecl: quals=None (at pp.c:3787)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__SplitControl__start', quals=[] (at pp.c:3787)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialP__stopDoneTask__runTask', quals=[], storage=['static'] (at pp.c:3789)
    FuncDecl: quals=None (at pp.c:3789)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__stopDoneTask__runTask', quals=[] (at pp.c:3789)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__RunTx__runTask', quals=[], storage=['static'] (at pp.c:3791)
    FuncDecl: quals=None (at pp.c:3791)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__RunTx__runTask', quals=[] (at pp.c:3791)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__Init__init', quals=[], storage=['static'] (at pp.c:3793)
    FuncDecl: quals=None (at pp.c:3793)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__Init__init', quals=[] (at pp.c:3793)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialP__SerialFlush__flushDone', quals=[], storage=['static'] (at pp.c:3795)
    FuncDecl: quals=None (at pp.c:3795)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__SerialFlush__flushDone', quals=[] (at pp.c:3795)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__SerialFlush__default__flush', quals=[], storage=['static'] (at pp.c:3797)
    FuncDecl: quals=None (at pp.c:3797)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__SerialFlush__default__flush', quals=[] (at pp.c:3797)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__startDoneTask__runTask', quals=[], storage=['static'] (at pp.c:3799)
    FuncDecl: quals=None (at pp.c:3799)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__startDoneTask__runTask', quals=[] (at pp.c:3799)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__SerialFrameComm__dataReceived', quals=[], storage=['static'] (at pp.c:3801)
    FuncDecl: quals=None (at pp.c:3801)
      ParamList:  (at pp.c:3801)
        Decl: name='data', quals=[], storage=[] (at pp.c:3801)
          TypeDecl: declname='data', quals=[] (at pp.c:3801)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialP__SerialFrameComm__dataReceived', quals=[] (at pp.c:3801)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__SerialFrameComm__putDone', quals=[], storage=['static'] (at pp.c:3807)
    FuncDecl: quals=None (at pp.c:3807)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__SerialFrameComm__putDone', quals=[] (at pp.c:3807)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__SerialFrameComm__delimiterReceived', quals=[], storage=['static'] (at pp.c:3809)
    FuncDecl: quals=None (at pp.c:3809)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__SerialFrameComm__delimiterReceived', quals=[] (at pp.c:3809)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__defaultSerialFlushTask__runTask', quals=[], storage=['static'] (at pp.c:3811)
    FuncDecl: quals=None (at pp.c:3811)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__defaultSerialFlushTask__runTask', quals=[] (at pp.c:3811)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__SendBytePacket__completeSend', quals=[], storage=['static'] (at pp.c:3813)
    FuncDecl: quals=None (at pp.c:3813)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__SendBytePacket__completeSend', quals=[] (at pp.c:3813)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialP__SendBytePacket__startSend', quals=[], storage=['static'] (at pp.c:3815)
    FuncDecl: quals=None (at pp.c:3815)
      ParamList:  (at pp.c:3815)
        Decl: name='first_byte', quals=[], storage=[] (at pp.c:3815)
          TypeDecl: declname='first_byte', quals=[] (at pp.c:3815)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialP__SendBytePacket__startSend', quals=[] (at pp.c:3815)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialDispatcherP__0__receiveTask__runTask', quals=[], storage=['static'] (at pp.c:3817)
    FuncDecl: quals=None (at pp.c:3817)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__receiveTask__runTask', quals=[] (at pp.c:3817)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialDispatcherP__0__Send__send', quals=[], storage=['static'] (at pp.c:3819)
    FuncDecl: quals=None (at pp.c:3819)
      ParamList:  (at pp.c:3821)
        Decl: name='arg_0x1026e9748', quals=[], storage=[] (at pp.c:3821)
          TypeDecl: declname='arg_0x1026e9748', quals=[] (at pp.c:3821)
            IdentifierType: names=['uart_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3823)
          PtrDecl: quals=[] (at pp.c:3823)
            TypeDecl: declname='msg', quals=[] (at pp.c:3823)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3831)
          TypeDecl: declname='len', quals=[] (at pp.c:3831)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__Send__send', quals=[] (at pp.c:3819)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialDispatcherP__0__Send__default__sendDone', quals=[], storage=['static'] (at pp.c:3833)
    FuncDecl: quals=None (at pp.c:3833)
      ParamList:  (at pp.c:3835)
        Decl: name='arg_0x1026e9748', quals=[], storage=[] (at pp.c:3835)
          TypeDecl: declname='arg_0x1026e9748', quals=[] (at pp.c:3835)
            IdentifierType: names=['uart_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3837)
          PtrDecl: quals=[] (at pp.c:3837)
            TypeDecl: declname='msg', quals=[] (at pp.c:3837)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3841)
          TypeDecl: declname='error', quals=[] (at pp.c:3841)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__Send__default__sendDone', quals=[] (at pp.c:3833)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialDispatcherP__0__signalSendDone__runTask', quals=[], storage=['static'] (at pp.c:3843)
    FuncDecl: quals=None (at pp.c:3843)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__signalSendDone__runTask', quals=[] (at pp.c:3843)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialDispatcherP__0__Receive__default__receive', quals=[], storage=['static'] (at pp.c:3851)
    FuncDecl: quals=None (at pp.c:3851)
      ParamList:  (at pp.c:3853)
        Decl: name='arg_0x1026edc50', quals=[], storage=[] (at pp.c:3853)
          TypeDecl: declname='arg_0x1026edc50', quals=[] (at pp.c:3853)
            IdentifierType: names=['uart_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3855)
          PtrDecl: quals=[] (at pp.c:3855)
            TypeDecl: declname='msg', quals=[] (at pp.c:3855)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:3856)
          PtrDecl: quals=[] (at pp.c:3856)
            TypeDecl: declname='payload', quals=[] (at pp.c:3856)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3862)
          TypeDecl: declname='len', quals=[] (at pp.c:3862)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3847)
        TypeDecl: declname='SerialDispatcherP__0__Receive__default__receive', quals=[] (at pp.c:3851)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='SerialDispatcherP__0__PacketInfo__default__upperLength', quals=[], storage=['static'] (at pp.c:3864)
    FuncDecl: quals=None (at pp.c:3864)
      ParamList:  (at pp.c:3866)
        Decl: name='arg_0x1026e8aa8', quals=[], storage=[] (at pp.c:3866)
          TypeDecl: declname='arg_0x1026e8aa8', quals=[] (at pp.c:3866)
            IdentifierType: names=['uart_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3868)
          PtrDecl: quals=[] (at pp.c:3868)
            TypeDecl: declname='msg', quals=[] (at pp.c:3868)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='dataLinkLen', quals=[], storage=[] (at pp.c:3868)
          TypeDecl: declname='dataLinkLen', quals=[] (at pp.c:3868)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__PacketInfo__default__upperLength', quals=[] (at pp.c:3864)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialDispatcherP__0__PacketInfo__default__offset', quals=[], storage=['static'] (at pp.c:3870)
    FuncDecl: quals=None (at pp.c:3870)
      ParamList:  (at pp.c:3872)
        Decl: name='arg_0x1026e8aa8', quals=[], storage=[] (at pp.c:3872)
          TypeDecl: declname='arg_0x1026e8aa8', quals=[] (at pp.c:3872)
            IdentifierType: names=['uart_id_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__PacketInfo__default__offset', quals=[] (at pp.c:3870)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialDispatcherP__0__PacketInfo__default__dataLinkLength', quals=[], storage=['static'] (at pp.c:3874)
    FuncDecl: quals=None (at pp.c:3874)
      ParamList:  (at pp.c:3876)
        Decl: name='arg_0x1026e8aa8', quals=[], storage=[] (at pp.c:3876)
          TypeDecl: declname='arg_0x1026e8aa8', quals=[] (at pp.c:3876)
            IdentifierType: names=['uart_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3878)
          PtrDecl: quals=[] (at pp.c:3878)
            TypeDecl: declname='msg', quals=[] (at pp.c:3878)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='upperLen', quals=[], storage=[] (at pp.c:3878)
          TypeDecl: declname='upperLen', quals=[] (at pp.c:3878)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__PacketInfo__default__dataLinkLength', quals=[] (at pp.c:3874)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialDispatcherP__0__SendBytePacket__nextByte', quals=[], storage=['static'] (at pp.c:3880)
    FuncDecl: quals=None (at pp.c:3880)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__SendBytePacket__nextByte', quals=[] (at pp.c:3880)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialDispatcherP__0__SendBytePacket__sendCompleted', quals=[], storage=['static'] (at pp.c:3890)
    FuncDecl: quals=None (at pp.c:3890)
      ParamList:  (at pp.c:3890)
        Decl: name='error', quals=[], storage=[] (at pp.c:3890)
          TypeDecl: declname='error', quals=[] (at pp.c:3890)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__SendBytePacket__sendCompleted', quals=[] (at pp.c:3890)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialDispatcherP__0__ReceiveBytePacket__startPacket', quals=[], storage=['static'] (at pp.c:3892)
    FuncDecl: quals=None (at pp.c:3892)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__ReceiveBytePacket__startPacket', quals=[] (at pp.c:3892)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialDispatcherP__0__ReceiveBytePacket__byteReceived', quals=[], storage=['static'] (at pp.c:3899)
    FuncDecl: quals=None (at pp.c:3899)
      ParamList:  (at pp.c:3899)
        Decl: name='data', quals=[], storage=[] (at pp.c:3899)
          TypeDecl: declname='data', quals=[] (at pp.c:3899)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__ReceiveBytePacket__byteReceived', quals=[] (at pp.c:3899)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialDispatcherP__0__ReceiveBytePacket__endPacket', quals=[], storage=['static'] (at pp.c:3910)
    FuncDecl: quals=None (at pp.c:3910)
      ParamList:  (at pp.c:3910)
        Decl: name='result', quals=[], storage=[] (at pp.c:3910)
          TypeDecl: declname='result', quals=[] (at pp.c:3910)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__ReceiveBytePacket__endPacket', quals=[] (at pp.c:3910)
        IdentifierType: names=['void'] (at None)
  Decl: name='HdlcTranslateC__UartStream__receivedByte', quals=[], storage=['static'] (at pp.c:3912)
    FuncDecl: quals=None (at pp.c:3912)
      ParamList:  (at pp.c:3912)
        Decl: name='byte', quals=[], storage=[] (at pp.c:3912)
          TypeDecl: declname='byte', quals=[] (at pp.c:3912)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HdlcTranslateC__UartStream__receivedByte', quals=[] (at pp.c:3912)
        IdentifierType: names=['void'] (at None)
  Decl: name='HdlcTranslateC__UartStream__receiveDone', quals=[], storage=['static'] (at pp.c:3914)
    FuncDecl: quals=None (at pp.c:3914)
      ParamList:  (at pp.c:3916)
        Decl: name='buf', quals=[], storage=[] (at pp.c:3916)
          PtrDecl: quals=[] (at pp.c:3916)
            TypeDecl: declname='buf', quals=[] (at pp.c:3916)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3920)
          TypeDecl: declname='len', quals=[] (at pp.c:3920)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3920)
          TypeDecl: declname='error', quals=[] (at pp.c:3920)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='HdlcTranslateC__UartStream__receiveDone', quals=[] (at pp.c:3914)
        IdentifierType: names=['void'] (at None)
  Decl: name='HdlcTranslateC__UartStream__sendDone', quals=[], storage=['static'] (at pp.c:3922)
    FuncDecl: quals=None (at pp.c:3922)
      ParamList:  (at pp.c:3924)
        Decl: name='buf', quals=[], storage=[] (at pp.c:3924)
          PtrDecl: quals=[] (at pp.c:3924)
            TypeDecl: declname='buf', quals=[] (at pp.c:3924)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3928)
          TypeDecl: declname='len', quals=[] (at pp.c:3928)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3928)
          TypeDecl: declname='error', quals=[] (at pp.c:3928)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='HdlcTranslateC__UartStream__sendDone', quals=[] (at pp.c:3922)
        IdentifierType: names=['void'] (at None)
  Decl: name='HdlcTranslateC__SerialFrameComm__putDelimiter', quals=[], storage=['static'] (at pp.c:3930)
    FuncDecl: quals=None (at pp.c:3930)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HdlcTranslateC__SerialFrameComm__putDelimiter', quals=[] (at pp.c:3930)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='HdlcTranslateC__SerialFrameComm__resetReceive', quals=[], storage=['static'] (at pp.c:3932)
    FuncDecl: quals=None (at pp.c:3932)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HdlcTranslateC__SerialFrameComm__resetReceive', quals=[] (at pp.c:3932)
        IdentifierType: names=['void'] (at None)
  Decl: name='HdlcTranslateC__SerialFrameComm__putData', quals=[], storage=['static'] (at pp.c:3934)
    FuncDecl: quals=None (at pp.c:3934)
      ParamList:  (at pp.c:3934)
        Decl: name='data', quals=[], storage=[] (at pp.c:3934)
          TypeDecl: declname='data', quals=[] (at pp.c:3934)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HdlcTranslateC__SerialFrameComm__putData', quals=[] (at pp.c:3934)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430UartP__0__ResourceConfigure__unconfigure', quals=[], storage=['static'] (at pp.c:3936)
    FuncDecl: quals=None (at pp.c:3936)
      ParamList:  (at pp.c:3938)
        Decl: name='arg_0x1027dd9b0', quals=[], storage=[] (at pp.c:3938)
          TypeDecl: declname='arg_0x1027dd9b0', quals=[] (at pp.c:3938)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__ResourceConfigure__unconfigure', quals=[] (at pp.c:3936)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__ResourceConfigure__configure', quals=[], storage=['static'] (at pp.c:3940)
    FuncDecl: quals=None (at pp.c:3940)
      ParamList:  (at pp.c:3942)
        Decl: name='arg_0x1027dd9b0', quals=[], storage=[] (at pp.c:3942)
          TypeDecl: declname='arg_0x1027dd9b0', quals=[] (at pp.c:3942)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__ResourceConfigure__configure', quals=[] (at pp.c:3940)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__Msp430UartConfigure__default__getConfig', quals=[], storage=['static'] (at pp.c:3944)
    FuncDecl: quals=None (at pp.c:3944)
      ParamList:  (at pp.c:3946)
        Decl: name='arg_0x1027d8cd0', quals=[], storage=[] (at pp.c:3946)
          TypeDecl: declname='arg_0x1027d8cd0', quals=[] (at pp.c:3946)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3944)
        TypeDecl: declname='Msp430UartP__0__Msp430UartConfigure__default__getConfig', quals=[] (at pp.c:3944)
          IdentifierType: names=['msp430_uart_union_config_t'] (at None)
  Decl: name='Msp430UartP__0__UartStream__send', quals=[], storage=['static'] (at pp.c:3948)
    FuncDecl: quals=None (at pp.c:3948)
      ParamList:  (at pp.c:3950)
        Decl: name='arg_0x1027dc7e0', quals=[], storage=[] (at pp.c:3950)
          TypeDecl: declname='arg_0x1027dc7e0', quals=[] (at pp.c:3950)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:3952)
          PtrDecl: quals=[] (at pp.c:3952)
            TypeDecl: declname='buf', quals=[] (at pp.c:3952)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3956)
          TypeDecl: declname='len', quals=[] (at pp.c:3956)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UartStream__send', quals=[] (at pp.c:3948)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430UartP__0__UartStream__default__receivedByte', quals=[], storage=['static'] (at pp.c:3958)
    FuncDecl: quals=None (at pp.c:3958)
      ParamList:  (at pp.c:3960)
        Decl: name='arg_0x1027dc7e0', quals=[], storage=[] (at pp.c:3960)
          TypeDecl: declname='arg_0x1027dc7e0', quals=[] (at pp.c:3960)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='byte', quals=[], storage=[] (at pp.c:3962)
          TypeDecl: declname='byte', quals=[] (at pp.c:3962)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UartStream__default__receivedByte', quals=[] (at pp.c:3958)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__UartStream__default__receiveDone', quals=[], storage=['static'] (at pp.c:3964)
    FuncDecl: quals=None (at pp.c:3964)
      ParamList:  (at pp.c:3966)
        Decl: name='arg_0x1027dc7e0', quals=[], storage=[] (at pp.c:3966)
          TypeDecl: declname='arg_0x1027dc7e0', quals=[] (at pp.c:3966)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:3968)
          PtrDecl: quals=[] (at pp.c:3968)
            TypeDecl: declname='buf', quals=[] (at pp.c:3968)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3972)
          TypeDecl: declname='len', quals=[] (at pp.c:3972)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3972)
          TypeDecl: declname='error', quals=[] (at pp.c:3972)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UartStream__default__receiveDone', quals=[] (at pp.c:3964)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__UartStream__default__sendDone', quals=[], storage=['static'] (at pp.c:3974)
    FuncDecl: quals=None (at pp.c:3974)
      ParamList:  (at pp.c:3976)
        Decl: name='arg_0x1027dc7e0', quals=[], storage=[] (at pp.c:3976)
          TypeDecl: declname='arg_0x1027dc7e0', quals=[] (at pp.c:3976)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:3978)
          PtrDecl: quals=[] (at pp.c:3978)
            TypeDecl: declname='buf', quals=[] (at pp.c:3978)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3982)
          TypeDecl: declname='len', quals=[] (at pp.c:3982)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3982)
          TypeDecl: declname='error', quals=[] (at pp.c:3982)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UartStream__default__sendDone', quals=[] (at pp.c:3974)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__Counter__overflow', quals=[], storage=['static'] (at pp.c:3984)
    FuncDecl: quals=None (at pp.c:3984)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430UartP__0__Counter__overflow', quals=[] (at pp.c:3984)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__UsartResource__default__release', quals=[], storage=['static'] (at pp.c:3986)
    FuncDecl: quals=None (at pp.c:3986)
      ParamList:  (at pp.c:3988)
        Decl: name='arg_0x1027daa20', quals=[], storage=[] (at pp.c:3988)
          TypeDecl: declname='arg_0x1027daa20', quals=[] (at pp.c:3988)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UsartResource__default__release', quals=[] (at pp.c:3986)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430UartP__0__UsartResource__default__immediateRequest', quals=[], storage=['static'] (at pp.c:3990)
    FuncDecl: quals=None (at pp.c:3990)
      ParamList:  (at pp.c:3992)
        Decl: name='arg_0x1027daa20', quals=[], storage=[] (at pp.c:3992)
          TypeDecl: declname='arg_0x1027daa20', quals=[] (at pp.c:3992)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UsartResource__default__immediateRequest', quals=[] (at pp.c:3990)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430UartP__0__UsartResource__granted', quals=[], storage=['static'] (at pp.c:3994)
    FuncDecl: quals=None (at pp.c:3994)
      ParamList:  (at pp.c:3996)
        Decl: name='arg_0x1027daa20', quals=[], storage=[] (at pp.c:3996)
          TypeDecl: declname='arg_0x1027daa20', quals=[] (at pp.c:3996)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UsartResource__granted', quals=[] (at pp.c:3994)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__UsartResource__default__isOwner', quals=[], storage=['static'] (at pp.c:3998)
    FuncDecl: quals=None (at pp.c:3998)
      ParamList:  (at pp.c:4000)
        Decl: name='arg_0x1027daa20', quals=[], storage=[] (at pp.c:4000)
          TypeDecl: declname='arg_0x1027daa20', quals=[] (at pp.c:4000)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UsartResource__default__isOwner', quals=[] (at pp.c:3998)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430UartP__0__Resource__release', quals=[], storage=['static'] (at pp.c:4002)
    FuncDecl: quals=None (at pp.c:4002)
      ParamList:  (at pp.c:4004)
        Decl: name='arg_0x1027de710', quals=[], storage=[] (at pp.c:4004)
          TypeDecl: declname='arg_0x1027de710', quals=[] (at pp.c:4004)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__Resource__release', quals=[] (at pp.c:4002)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430UartP__0__Resource__immediateRequest', quals=[], storage=['static'] (at pp.c:4006)
    FuncDecl: quals=None (at pp.c:4006)
      ParamList:  (at pp.c:4008)
        Decl: name='arg_0x1027de710', quals=[], storage=[] (at pp.c:4008)
          TypeDecl: declname='arg_0x1027de710', quals=[] (at pp.c:4008)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__Resource__immediateRequest', quals=[] (at pp.c:4006)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430UartP__0__Resource__default__granted', quals=[], storage=['static'] (at pp.c:4010)
    FuncDecl: quals=None (at pp.c:4010)
      ParamList:  (at pp.c:4012)
        Decl: name='arg_0x1027de710', quals=[], storage=[] (at pp.c:4012)
          TypeDecl: declname='arg_0x1027de710', quals=[] (at pp.c:4012)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__Resource__default__granted', quals=[] (at pp.c:4010)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__UsartInterrupts__rxDone', quals=[], storage=['static'] (at pp.c:4014)
    FuncDecl: quals=None (at pp.c:4014)
      ParamList:  (at pp.c:4016)
        Decl: name='arg_0x1027d22f0', quals=[], storage=[] (at pp.c:4016)
          TypeDecl: declname='arg_0x1027d22f0', quals=[] (at pp.c:4016)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:4018)
          TypeDecl: declname='data', quals=[] (at pp.c:4018)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UsartInterrupts__rxDone', quals=[] (at pp.c:4014)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__UsartInterrupts__txDone', quals=[], storage=['static'] (at pp.c:4020)
    FuncDecl: quals=None (at pp.c:4020)
      ParamList:  (at pp.c:4022)
        Decl: name='arg_0x1027d22f0', quals=[], storage=[] (at pp.c:4022)
          TypeDecl: declname='arg_0x1027d22f0', quals=[] (at pp.c:4022)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UsartInterrupts__txDone', quals=[] (at pp.c:4020)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__enableUartRx', quals=[], storage=['static'] (at pp.c:4024)
    FuncDecl: quals=None (at pp.c:4024)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__enableUartRx', quals=[] (at pp.c:4024)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__enableUart', quals=[], storage=['static'] (at pp.c:4026)
    FuncDecl: quals=None (at pp.c:4026)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__enableUart', quals=[] (at pp.c:4026)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__resetUsart', quals=[], storage=['static'] (at pp.c:4028)
    FuncDecl: quals=None (at pp.c:4028)
      ParamList:  (at pp.c:4028)
        Decl: name='reset', quals=[], storage=[] (at pp.c:4028)
          TypeDecl: declname='reset', quals=[] (at pp.c:4028)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__resetUsart', quals=[] (at pp.c:4028)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__disableIntr', quals=[], storage=['static'] (at pp.c:4030)
    FuncDecl: quals=None (at pp.c:4030)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__disableIntr', quals=[] (at pp.c:4030)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__setUmctl', quals=[], storage=['static'] (at pp.c:4032)
    FuncDecl: quals=None (at pp.c:4032)
      ParamList:  (at pp.c:4032)
        Decl: name='umctl', quals=[], storage=[] (at pp.c:4032)
          TypeDecl: declname='umctl', quals=[] (at pp.c:4032)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__setUmctl', quals=[] (at pp.c:4032)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__enableUartTx', quals=[], storage=['static'] (at pp.c:4034)
    FuncDecl: quals=None (at pp.c:4034)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__enableUartTx', quals=[] (at pp.c:4034)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__disableUartRx', quals=[], storage=['static'] (at pp.c:4036)
    FuncDecl: quals=None (at pp.c:4036)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__disableUartRx', quals=[] (at pp.c:4036)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__enableIntr', quals=[], storage=['static'] (at pp.c:4038)
    FuncDecl: quals=None (at pp.c:4038)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__enableIntr', quals=[] (at pp.c:4038)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__clrIntr', quals=[], storage=['static'] (at pp.c:4040)
    FuncDecl: quals=None (at pp.c:4040)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__clrIntr', quals=[] (at pp.c:4040)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__setUbr', quals=[], storage=['static'] (at pp.c:4042)
    FuncDecl: quals=None (at pp.c:4042)
      ParamList:  (at pp.c:4042)
        Decl: name='ubr', quals=[], storage=[] (at pp.c:4042)
          TypeDecl: declname='ubr', quals=[] (at pp.c:4042)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__setUbr', quals=[] (at pp.c:4042)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__tx', quals=[], storage=['static'] (at pp.c:4044)
    FuncDecl: quals=None (at pp.c:4044)
      ParamList:  (at pp.c:4044)
        Decl: name='data', quals=[], storage=[] (at pp.c:4044)
          TypeDecl: declname='data', quals=[] (at pp.c:4044)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__tx', quals=[] (at pp.c:4044)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__disableUart', quals=[], storage=['static'] (at pp.c:4046)
    FuncDecl: quals=None (at pp.c:4046)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__disableUart', quals=[] (at pp.c:4046)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__setModeUart', quals=[], storage=['static'] (at pp.c:4048)
    FuncDecl: quals=None (at pp.c:4048)
      ParamList:  (at pp.c:4048)
        Decl: name='config', quals=[], storage=[] (at pp.c:4048)
          PtrDecl: quals=[] (at pp.c:4048)
            TypeDecl: declname='config', quals=[] (at pp.c:4048)
              IdentifierType: names=['msp430_uart_union_config_t'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__setModeUart', quals=[] (at pp.c:4048)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__disableSpi', quals=[], storage=['static'] (at pp.c:4050)
    FuncDecl: quals=None (at pp.c:4050)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__disableSpi', quals=[] (at pp.c:4050)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__disableUartTx', quals=[], storage=['static'] (at pp.c:4052)
    FuncDecl: quals=None (at pp.c:4052)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__disableUartTx', quals=[] (at pp.c:4052)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__AsyncStdControl__start', quals=[], storage=['static'] (at pp.c:4054)
    FuncDecl: quals=None (at pp.c:4054)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__AsyncStdControl__start', quals=[] (at pp.c:4054)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='HplMsp430Usart1P__AsyncStdControl__stop', quals=[], storage=['static'] (at pp.c:4064)
    FuncDecl: quals=None (at pp.c:4064)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__AsyncStdControl__stop', quals=[] (at pp.c:4064)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430UsartShareP__1__Interrupts__default__rxDone', quals=[], storage=['static'] (at pp.c:4066)
    FuncDecl: quals=None (at pp.c:4066)
      ParamList:  (at pp.c:4068)
        Decl: name='arg_0x101ed5800', quals=[], storage=[] (at pp.c:4068)
          TypeDecl: declname='arg_0x101ed5800', quals=[] (at pp.c:4068)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:4070)
          TypeDecl: declname='data', quals=[] (at pp.c:4070)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__1__Interrupts__default__rxDone', quals=[] (at pp.c:4066)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__1__Interrupts__default__txDone', quals=[], storage=['static'] (at pp.c:4072)
    FuncDecl: quals=None (at pp.c:4072)
      ParamList:  (at pp.c:4074)
        Decl: name='arg_0x101ed5800', quals=[], storage=[] (at pp.c:4074)
          TypeDecl: declname='arg_0x101ed5800', quals=[] (at pp.c:4074)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__1__Interrupts__default__txDone', quals=[] (at pp.c:4072)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__1__RawInterrupts__rxDone', quals=[], storage=['static'] (at pp.c:4076)
    FuncDecl: quals=None (at pp.c:4076)
      ParamList:  (at pp.c:4076)
        Decl: name='data', quals=[], storage=[] (at pp.c:4076)
          TypeDecl: declname='data', quals=[] (at pp.c:4076)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__1__RawInterrupts__rxDone', quals=[] (at pp.c:4076)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__1__RawInterrupts__txDone', quals=[], storage=['static'] (at pp.c:4078)
    FuncDecl: quals=None (at pp.c:4078)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430UsartShareP__1__RawInterrupts__txDone', quals=[] (at pp.c:4078)
        IdentifierType: names=['void'] (at None)
  Decl: name='FcfsResourceQueueC__2__Init__init', quals=[], storage=['static'] (at pp.c:4080)
    FuncDecl: quals=None (at pp.c:4080)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__2__Init__init', quals=[] (at pp.c:4080)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='FcfsResourceQueueC__2__FcfsQueue__isEmpty', quals=[], storage=['static'] (at pp.c:4082)
    FuncDecl: quals=None (at pp.c:4082)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__2__FcfsQueue__isEmpty', quals=[] (at pp.c:4082)
        IdentifierType: names=['bool'] (at None)
  Decl: name='FcfsResourceQueueC__2__FcfsQueue__dequeue', quals=[], storage=['static'] (at pp.c:4084)
    FuncDecl: quals=None (at pp.c:4084)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__2__FcfsQueue__dequeue', quals=[] (at pp.c:4084)
        IdentifierType: names=['resource_client_id_t'] (at None)
  Decl: name='ArbiterP__1__ResourceRequested__default__immediateRequested', quals=[], storage=['static'] (at pp.c:4086)
    FuncDecl: quals=None (at pp.c:4086)
      ParamList:  (at pp.c:4088)
        Decl: name='arg_0x101edd7e8', quals=[], storage=[] (at pp.c:4088)
          TypeDecl: declname='arg_0x101edd7e8', quals=[] (at pp.c:4088)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__1__ResourceRequested__default__immediateRequested', quals=[] (at pp.c:4086)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__1__ResourceConfigure__default__unconfigure', quals=[], storage=['static'] (at pp.c:4090)
    FuncDecl: quals=None (at pp.c:4090)
      ParamList:  (at pp.c:4092)
        Decl: name='arg_0x101f209b8', quals=[], storage=[] (at pp.c:4092)
          TypeDecl: declname='arg_0x101f209b8', quals=[] (at pp.c:4092)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__1__ResourceConfigure__default__unconfigure', quals=[] (at pp.c:4090)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__1__ResourceConfigure__default__configure', quals=[], storage=['static'] (at pp.c:4094)
    FuncDecl: quals=None (at pp.c:4094)
      ParamList:  (at pp.c:4096)
        Decl: name='arg_0x101f209b8', quals=[], storage=[] (at pp.c:4096)
          TypeDecl: declname='arg_0x101f209b8', quals=[] (at pp.c:4096)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__1__ResourceConfigure__default__configure', quals=[] (at pp.c:4094)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__1__ResourceDefaultOwner__release', quals=[], storage=['static'] (at pp.c:4098)
    FuncDecl: quals=None (at pp.c:4098)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__1__ResourceDefaultOwner__release', quals=[] (at pp.c:4098)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__1__Resource__release', quals=[], storage=['static'] (at pp.c:4100)
    FuncDecl: quals=None (at pp.c:4100)
      ParamList:  (at pp.c:4102)
        Decl: name='arg_0x101ede658', quals=[], storage=[] (at pp.c:4102)
          TypeDecl: declname='arg_0x101ede658', quals=[] (at pp.c:4102)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__1__Resource__release', quals=[] (at pp.c:4100)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__1__Resource__immediateRequest', quals=[], storage=['static'] (at pp.c:4104)
    FuncDecl: quals=None (at pp.c:4104)
      ParamList:  (at pp.c:4106)
        Decl: name='arg_0x101ede658', quals=[], storage=[] (at pp.c:4106)
          TypeDecl: declname='arg_0x101ede658', quals=[] (at pp.c:4106)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__1__Resource__immediateRequest', quals=[] (at pp.c:4104)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__1__Resource__default__granted', quals=[], storage=['static'] (at pp.c:4108)
    FuncDecl: quals=None (at pp.c:4108)
      ParamList:  (at pp.c:4110)
        Decl: name='arg_0x101ede658', quals=[], storage=[] (at pp.c:4110)
          TypeDecl: declname='arg_0x101ede658', quals=[] (at pp.c:4110)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__1__Resource__default__granted', quals=[] (at pp.c:4108)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__1__Resource__isOwner', quals=[], storage=['static'] (at pp.c:4112)
    FuncDecl: quals=None (at pp.c:4112)
      ParamList:  (at pp.c:4114)
        Decl: name='arg_0x101ede658', quals=[], storage=[] (at pp.c:4114)
          TypeDecl: declname='arg_0x101ede658', quals=[] (at pp.c:4114)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__1__Resource__isOwner', quals=[] (at pp.c:4112)
        IdentifierType: names=['bool'] (at None)
  Decl: name='ArbiterP__1__ArbiterInfo__inUse', quals=[], storage=['static'] (at pp.c:4116)
    FuncDecl: quals=None (at pp.c:4116)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__1__ArbiterInfo__inUse', quals=[] (at pp.c:4116)
        IdentifierType: names=['bool'] (at None)
  Decl: name='ArbiterP__1__ArbiterInfo__userId', quals=[], storage=['static'] (at pp.c:4124)
    FuncDecl: quals=None (at pp.c:4124)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__1__ArbiterInfo__userId', quals=[] (at pp.c:4124)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='ArbiterP__1__grantedTask__runTask', quals=[], storage=['static'] (at pp.c:4126)
    FuncDecl: quals=None (at pp.c:4126)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__1__grantedTask__runTask', quals=[] (at pp.c:4126)
        IdentifierType: names=['void'] (at None)
  Decl: name='AsyncPowerManagerP__0__PowerDownCleanup__default__cleanup', quals=[], storage=['static'] (at pp.c:4128)
    FuncDecl: quals=None (at pp.c:4128)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AsyncPowerManagerP__0__PowerDownCleanup__default__cleanup', quals=[] (at pp.c:4128)
        IdentifierType: names=['void'] (at None)
  Decl: name='AsyncPowerManagerP__0__ResourceDefaultOwner__granted', quals=[], storage=['static'] (at pp.c:4130)
    FuncDecl: quals=None (at pp.c:4130)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AsyncPowerManagerP__0__ResourceDefaultOwner__granted', quals=[] (at pp.c:4130)
        IdentifierType: names=['void'] (at None)
  Decl: name='AsyncPowerManagerP__0__ResourceDefaultOwner__immediateRequested', quals=[], storage=['static'] (at pp.c:4132)
    FuncDecl: quals=None (at pp.c:4132)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AsyncPowerManagerP__0__ResourceDefaultOwner__immediateRequested', quals=[] (at pp.c:4132)
        IdentifierType: names=['void'] (at None)
  Decl: name='TelosSerialP__Msp430UartConfigure__getConfig', quals=[], storage=['static'] (at pp.c:4134)
    FuncDecl: quals=None (at pp.c:4134)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      PtrDecl: quals=[] (at pp.c:4134)
        TypeDecl: declname='TelosSerialP__Msp430UartConfigure__getConfig', quals=[] (at pp.c:4134)
          IdentifierType: names=['msp430_uart_union_config_t'] (at None)
  Decl: name='TelosSerialP__Resource__granted', quals=[], storage=['static'] (at pp.c:4136)
    FuncDecl: quals=None (at pp.c:4136)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TelosSerialP__Resource__granted', quals=[] (at pp.c:4136)
        IdentifierType: names=['void'] (at None)
  Decl: name='TelosSerialP__StdControl__start', quals=[], storage=['static'] (at pp.c:4138)
    FuncDecl: quals=None (at pp.c:4138)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TelosSerialP__StdControl__start', quals=[] (at pp.c:4138)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='TelosSerialP__StdControl__stop', quals=[], storage=['static'] (at pp.c:4148)
    FuncDecl: quals=None (at pp.c:4148)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TelosSerialP__StdControl__stop', quals=[] (at pp.c:4148)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialPacketInfoActiveMessageP__Info__upperLength', quals=[], storage=['static'] (at pp.c:4150)
    FuncDecl: quals=None (at pp.c:4150)
      ParamList:  (at pp.c:4150)
        Decl: name='msg', quals=[], storage=[] (at pp.c:4150)
          PtrDecl: quals=[] (at pp.c:4150)
            TypeDecl: declname='msg', quals=[] (at pp.c:4150)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='dataLinkLen', quals=[], storage=[] (at pp.c:4150)
          TypeDecl: declname='dataLinkLen', quals=[] (at pp.c:4150)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialPacketInfoActiveMessageP__Info__upperLength', quals=[] (at pp.c:4150)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialPacketInfoActiveMessageP__Info__offset', quals=[], storage=['static'] (at pp.c:4152)
    FuncDecl: quals=None (at pp.c:4152)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialPacketInfoActiveMessageP__Info__offset', quals=[] (at pp.c:4152)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialPacketInfoActiveMessageP__Info__dataLinkLength', quals=[], storage=['static'] (at pp.c:4160)
    FuncDecl: quals=None (at pp.c:4160)
      ParamList:  (at pp.c:4160)
        Decl: name='msg', quals=[], storage=[] (at pp.c:4160)
          PtrDecl: quals=[] (at pp.c:4160)
            TypeDecl: declname='msg', quals=[] (at pp.c:4160)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='upperLen', quals=[], storage=[] (at pp.c:4160)
          TypeDecl: declname='upperLen', quals=[] (at pp.c:4160)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialPacketInfoActiveMessageP__Info__dataLinkLength', quals=[] (at pp.c:4160)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='PlatformP__MoteInit__init', quals=[], storage=['static'] (at pp.c:4162)
    FuncDecl: quals=None (at pp.c:4162)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='PlatformP__MoteInit__init', quals=[] (at pp.c:4162)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='PlatformP__MoteClockInit__init', quals=[], storage=['static'] (at pp.c:4164)
    FuncDecl: quals=None (at pp.c:4164)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='PlatformP__MoteClockInit__init', quals=[] (at pp.c:4164)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='PlatformP__LedsInit__init', quals=[], storage=['static'] (at pp.c:4166)
    FuncDecl: quals=None (at pp.c:4166)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='PlatformP__LedsInit__init', quals=[] (at pp.c:4166)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='PlatformP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:4168)
    FuncDecl: quals=None (at pp.c:4168)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='PlatformP__Init__init', quals=[] (at pp.c:4168)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__initTimerB', quals=[], storage=['static'] (at pp.c:4170)
    FuncDecl: quals=None (at pp.c:4170)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initTimerB', quals=[] (at pp.c:4170)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__initTimerA', quals=[], storage=['static'] (at pp.c:4172)
    FuncDecl: quals=None (at pp.c:4172)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initTimerA', quals=[] (at pp.c:4172)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__setupDcoCalibrate', quals=[], storage=['static'] (at pp.c:4174)
    FuncDecl: quals=None (at pp.c:4174)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__setupDcoCalibrate', quals=[] (at pp.c:4174)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__initClocks', quals=[], storage=['static'] (at pp.c:4175)
    FuncDecl: quals=None (at pp.c:4175)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initClocks', quals=[] (at pp.c:4175)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__IE1@"0x0000"', quals=['volatile'], storage=['static'] (at pp.c:4177)
    TypeDecl: declname='Msp430ClockP__IE1@"0x0000"', quals=['volatile'] (at pp.c:4177)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430ClockP__TA0CTL@"0x0160"', quals=['volatile'], storage=['static'] (at pp.c:4178)
    TypeDecl: declname='Msp430ClockP__TA0CTL@"0x0160"', quals=['volatile'] (at pp.c:4178)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430ClockP__TA0IV@"0x012E"', quals=['volatile'], storage=['static'] (at pp.c:4179)
    TypeDecl: declname='Msp430ClockP__TA0IV@"0x012E"', quals=['volatile'] (at pp.c:4179)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430ClockP__TBCTL@"0x0180"', quals=['volatile'], storage=['static'] (at pp.c:4180)
    TypeDecl: declname='Msp430ClockP__TBCTL@"0x0180"', quals=['volatile'] (at pp.c:4180)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430ClockP__TBIV@"0x011E"', quals=['volatile'], storage=['static'] (at pp.c:4181)
    TypeDecl: declname='Msp430ClockP__TBIV@"0x011E"', quals=['volatile'] (at pp.c:4181)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:4183)
    Enum: name='Msp430ClockP____nesc_unnamed4312' (at pp.c:4183)
      EnumeratorList:  (at pp.c:4185)
        Enumerator: name='Msp430ClockP__ACLK_CALIB_PERIOD' (at pp.c:4185)
          Constant: type='int', value='8' (at pp.c:4185)
        Enumerator: name='Msp430ClockP__TARGET_DCO_DELTA' (at pp.c:4186)
          BinaryOp: op='*' (at pp.c:4186)
            BinaryOp: op='/' (at pp.c:4186)
              Constant: type='int', value='4096' (at pp.c:4186)
              Constant: type='int', value='32' (at pp.c:4186)
            ID: name='Msp430ClockP__ACLK_CALIB_PERIOD' (at pp.c:4186)
  Decl: name='Msp430ClockP__McuPowerOverride__lowestState', quals=[], storage=['inline', 'static'] (at pp.c:4189)
    FuncDecl: quals=None (at pp.c:4189)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__McuPowerOverride__lowestState', quals=[] (at pp.c:4189)
        IdentifierType: names=['mcu_power_t'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[], storage=['inline', 'static'] (at pp.c:4193)
    FuncDecl: quals=None (at pp.c:4193)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[] (at pp.c:4193)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[], storage=['inline', 'static'] (at pp.c:4195)
    FuncDecl: quals=None (at pp.c:4195)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[] (at pp.c:4195)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[], storage=['inline', 'static'] (at pp.c:4197)
    FuncDecl: quals=None (at pp.c:4197)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[] (at pp.c:4197)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[], storage=['inline', 'static'] (at pp.c:4199)
    FuncDecl: quals=None (at pp.c:4199)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[] (at pp.c:4199)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[], storage=['inline', 'static'] (at pp.c:4201)
    FuncDecl: quals=None (at pp.c:4201)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[] (at pp.c:4201)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[], storage=['inline', 'static'] (at pp.c:4206)
    FuncDecl: quals=None (at pp.c:4206)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[] (at pp.c:4206)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[], storage=['inline', 'static'] (at pp.c:4211)
    FuncDecl: quals=None (at pp.c:4211)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[] (at pp.c:4211)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[], storage=['inline', 'static'] (at pp.c:4216)
    FuncDecl: quals=None (at pp.c:4216)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[] (at pp.c:4216)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__startTimerA', quals=[], storage=['inline', 'static'] (at pp.c:4222)
    FuncDecl: quals=None (at pp.c:4222)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__startTimerA', quals=[] (at pp.c:4222)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__startTimerB', quals=[], storage=['inline', 'static'] (at pp.c:4224)
    FuncDecl: quals=None (at pp.c:4224)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__startTimerB', quals=[] (at pp.c:4224)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__set_dco_calib', quals=[], storage=['static'] (at pp.c:4226)
    FuncDecl: quals=None (at pp.c:4226)
      ParamList:  (at pp.c:4226)
        Decl: name='calib', quals=[], storage=[] (at pp.c:4226)
          TypeDecl: declname='calib', quals=[] (at pp.c:4226)
            IdentifierType: names=['int'] (at None)
      TypeDecl: declname='Msp430ClockP__set_dco_calib', quals=[] (at pp.c:4226)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__test_calib_busywait_delta', quals=[], storage=['inline', 'static'] (at pp.c:4232)
    FuncDecl: quals=None (at pp.c:4232)
      ParamList:  (at pp.c:4232)
        Decl: name='calib', quals=[], storage=[] (at pp.c:4232)
          TypeDecl: declname='calib', quals=[] (at pp.c:4232)
            IdentifierType: names=['int'] (at None)
      TypeDecl: declname='Msp430ClockP__test_calib_busywait_delta', quals=[] (at pp.c:4232)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430ClockP__busyCalibrateDco', quals=[], storage=['inline', 'static'] (at pp.c:4234)
    FuncDecl: quals=None (at pp.c:4234)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__busyCalibrateDco', quals=[] (at pp.c:4234)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:4236)
    FuncDecl: quals=None (at pp.c:4236)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Init__init', quals=[] (at pp.c:4236)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430TimerP__0__Event__fired', quals=[], storage=['static'] (at pp.c:4238)
    FuncDecl: quals=None (at pp.c:4238)
      ParamList:  (at pp.c:4240)
        Decl: name='arg_0x101409020', quals=[], storage=[] (at pp.c:4240)
          TypeDecl: declname='arg_0x101409020', quals=[] (at pp.c:4240)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Event__fired', quals=[] (at pp.c:4238)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__overflow', quals=[], storage=['static'] (at pp.c:4242)
    FuncDecl: quals=None (at pp.c:4242)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__overflow', quals=[] (at pp.c:4242)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__get', quals=[], storage=['inline', 'static'] (at pp.c:4244)
    FuncDecl: quals=None (at pp.c:4244)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__get', quals=[] (at pp.c:4244)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerP__0__VectorTimerX0__fired', quals=[], storage=['inline', 'static'] (at pp.c:4246)
    FuncDecl: quals=None (at pp.c:4246)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__VectorTimerX0__fired', quals=[] (at pp.c:4246)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__VectorTimerX1__fired', quals=[], storage=['inline', 'static'] (at pp.c:4251)
    FuncDecl: quals=None (at pp.c:4251)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__VectorTimerX1__fired', quals=[] (at pp.c:4251)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Overflow__fired', quals=[], storage=['inline', 'static'] (at pp.c:4257)
    FuncDecl: quals=None (at pp.c:4257)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Overflow__fired', quals=[] (at pp.c:4257)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Event__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:4266)
    FuncDecl: quals=None (at pp.c:4266)
      ParamList:  (at pp.c:4266)
        Decl: name='n', quals=[], storage=[] (at pp.c:4266)
          TypeDecl: declname='n', quals=[] (at pp.c:4266)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Event__default__fired', quals=[] (at pp.c:4266)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Event__fired', quals=[], storage=['static'] (at pp.c:4268)
    FuncDecl: quals=None (at pp.c:4268)
      ParamList:  (at pp.c:4270)
        Decl: name='arg_0x101409020', quals=[], storage=[] (at pp.c:4270)
          TypeDecl: declname='arg_0x101409020', quals=[] (at pp.c:4270)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Event__fired', quals=[] (at pp.c:4268)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Timer__overflow', quals=[], storage=['static'] (at pp.c:4272)
    FuncDecl: quals=None (at pp.c:4272)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Timer__overflow', quals=[] (at pp.c:4272)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Timer__get', quals=[], storage=['static'] (at pp.c:4274)
    FuncDecl: quals=None (at pp.c:4274)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Timer__get', quals=[] (at pp.c:4274)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerP__1__Timer__isOverflowPending', quals=[], storage=['inline', 'static'] (at pp.c:4276)
    FuncDecl: quals=None (at pp.c:4276)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Timer__isOverflowPending', quals=[] (at pp.c:4276)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430TimerP__1__VectorTimerX0__fired', quals=[], storage=['inline', 'static'] (at pp.c:4278)
    FuncDecl: quals=None (at pp.c:4278)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__VectorTimerX0__fired', quals=[] (at pp.c:4278)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__VectorTimerX1__fired', quals=[], storage=['inline', 'static'] (at pp.c:4283)
    FuncDecl: quals=None (at pp.c:4283)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__VectorTimerX1__fired', quals=[] (at pp.c:4283)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Overflow__fired', quals=[], storage=['inline', 'static'] (at pp.c:4289)
    FuncDecl: quals=None (at pp.c:4289)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Overflow__fired', quals=[] (at pp.c:4289)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Event__default__fired', quals=[], storage=['static'] (at pp.c:4298)
    FuncDecl: quals=None (at pp.c:4298)
      ParamList:  (at pp.c:4298)
        Decl: name='n', quals=[], storage=[] (at pp.c:4298)
          TypeDecl: declname='n', quals=[] (at pp.c:4298)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Event__default__fired', quals=[] (at pp.c:4298)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Capture__captured', quals=[], storage=['static'] (at pp.c:4300)
    FuncDecl: quals=None (at pp.c:4300)
      ParamList:  (at pp.c:4300)
        Decl: name='time', quals=[], storage=[] (at pp.c:4300)
          TypeDecl: declname='time', quals=[] (at pp.c:4300)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Capture__captured', quals=[] (at pp.c:4300)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Compare__fired', quals=[], storage=['static'] (at pp.c:4302)
    FuncDecl: quals=None (at pp.c:4302)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Compare__fired', quals=[] (at pp.c:4302)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__0__cc_t', quals=[], storage=['typedef'] (at pp.c:4304)
    TypeDecl: declname='Msp430TimerCapComP__0__cc_t', quals=[] (at pp.c:4304)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:4307)
    FuncDecl: quals=None (at pp.c:4307)
      ParamList:  (at pp.c:4307)
        Decl: name='x', quals=[], storage=[] (at pp.c:4307)
          TypeDecl: declname='x', quals=[] (at pp.c:4307)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__int2CC', quals=[] (at pp.c:4307)
        IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:4309)
    FuncDecl: quals=None (at pp.c:4309)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Control__getControl', quals=[] (at pp.c:4309)
        IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:4311)
    FuncDecl: quals=None (at pp.c:4311)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Capture__getEvent', quals=[] (at pp.c:4311)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__Event__fired', quals=[], storage=['static'] (at pp.c:4313)
    FuncDecl: quals=None (at pp.c:4313)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Event__fired', quals=[] (at pp.c:4313)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:4321)
    FuncDecl: quals=None (at pp.c:4321)
      ParamList:  (at pp.c:4321)
        Decl: name='n', quals=[], storage=[] (at pp.c:4321)
          TypeDecl: declname='n', quals=[] (at pp.c:4321)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Capture__default__captured', quals=[] (at pp.c:4321)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:4325)
    FuncDecl: quals=None (at pp.c:4325)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Compare__default__fired', quals=[] (at pp.c:4325)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4329)
    FuncDecl: quals=None (at pp.c:4329)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Timer__overflow', quals=[] (at pp.c:4329)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Capture__captured', quals=[], storage=['static'] (at pp.c:4331)
    FuncDecl: quals=None (at pp.c:4331)
      ParamList:  (at pp.c:4331)
        Decl: name='time', quals=[], storage=[] (at pp.c:4331)
          TypeDecl: declname='time', quals=[] (at pp.c:4331)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Capture__captured', quals=[] (at pp.c:4331)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Compare__fired', quals=[], storage=['static'] (at pp.c:4333)
    FuncDecl: quals=None (at pp.c:4333)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Compare__fired', quals=[] (at pp.c:4333)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__1__cc_t', quals=[], storage=['typedef'] (at pp.c:4335)
    TypeDecl: declname='Msp430TimerCapComP__1__cc_t', quals=[] (at pp.c:4335)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:4338)
    FuncDecl: quals=None (at pp.c:4338)
      ParamList:  (at pp.c:4338)
        Decl: name='x', quals=[], storage=[] (at pp.c:4338)
          TypeDecl: declname='x', quals=[] (at pp.c:4338)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__int2CC', quals=[] (at pp.c:4338)
        IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:4340)
    FuncDecl: quals=None (at pp.c:4340)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Control__getControl', quals=[] (at pp.c:4340)
        IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:4342)
    FuncDecl: quals=None (at pp.c:4342)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Capture__getEvent', quals=[] (at pp.c:4342)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__Event__fired', quals=[], storage=['static'] (at pp.c:4344)
    FuncDecl: quals=None (at pp.c:4344)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Event__fired', quals=[] (at pp.c:4344)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:4352)
    FuncDecl: quals=None (at pp.c:4352)
      ParamList:  (at pp.c:4352)
        Decl: name='n', quals=[], storage=[] (at pp.c:4352)
          TypeDecl: declname='n', quals=[] (at pp.c:4352)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Capture__default__captured', quals=[] (at pp.c:4352)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:4356)
    FuncDecl: quals=None (at pp.c:4356)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Compare__default__fired', quals=[] (at pp.c:4356)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4360)
    FuncDecl: quals=None (at pp.c:4360)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Timer__overflow', quals=[] (at pp.c:4360)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Capture__captured', quals=[], storage=['static'] (at pp.c:4362)
    FuncDecl: quals=None (at pp.c:4362)
      ParamList:  (at pp.c:4362)
        Decl: name='time', quals=[], storage=[] (at pp.c:4362)
          TypeDecl: declname='time', quals=[] (at pp.c:4362)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Capture__captured', quals=[] (at pp.c:4362)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Compare__fired', quals=[], storage=['static'] (at pp.c:4364)
    FuncDecl: quals=None (at pp.c:4364)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Compare__fired', quals=[] (at pp.c:4364)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__2__cc_t', quals=[], storage=['typedef'] (at pp.c:4366)
    TypeDecl: declname='Msp430TimerCapComP__2__cc_t', quals=[] (at pp.c:4366)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:4369)
    FuncDecl: quals=None (at pp.c:4369)
      ParamList:  (at pp.c:4369)
        Decl: name='x', quals=[], storage=[] (at pp.c:4369)
          TypeDecl: declname='x', quals=[] (at pp.c:4369)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__int2CC', quals=[] (at pp.c:4369)
        IdentifierType: names=['Msp430TimerCapComP__2__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:4371)
    FuncDecl: quals=None (at pp.c:4371)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Control__getControl', quals=[] (at pp.c:4371)
        IdentifierType: names=['Msp430TimerCapComP__2__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:4373)
    FuncDecl: quals=None (at pp.c:4373)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Capture__getEvent', quals=[] (at pp.c:4373)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__Event__fired', quals=[], storage=['static'] (at pp.c:4375)
    FuncDecl: quals=None (at pp.c:4375)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Event__fired', quals=[] (at pp.c:4375)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:4383)
    FuncDecl: quals=None (at pp.c:4383)
      ParamList:  (at pp.c:4383)
        Decl: name='n', quals=[], storage=[] (at pp.c:4383)
          TypeDecl: declname='n', quals=[] (at pp.c:4383)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Capture__default__captured', quals=[] (at pp.c:4383)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:4387)
    FuncDecl: quals=None (at pp.c:4387)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Compare__default__fired', quals=[] (at pp.c:4387)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4391)
    FuncDecl: quals=None (at pp.c:4391)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Timer__overflow', quals=[] (at pp.c:4391)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Capture__captured', quals=[], storage=['static'] (at pp.c:4393)
    FuncDecl: quals=None (at pp.c:4393)
      ParamList:  (at pp.c:4393)
        Decl: name='time', quals=[], storage=[] (at pp.c:4393)
          TypeDecl: declname='time', quals=[] (at pp.c:4393)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Capture__captured', quals=[] (at pp.c:4393)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Compare__fired', quals=[], storage=['static'] (at pp.c:4395)
    FuncDecl: quals=None (at pp.c:4395)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Compare__fired', quals=[] (at pp.c:4395)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Timer__get', quals=[], storage=['static'] (at pp.c:4397)
    FuncDecl: quals=None (at pp.c:4397)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Timer__get', quals=[] (at pp.c:4397)
        IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='Msp430TimerCapComP__3__cc_t', quals=[], storage=['typedef'] (at pp.c:4399)
    TypeDecl: declname='Msp430TimerCapComP__3__cc_t', quals=[] (at pp.c:4399)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:4401)
    FuncDecl: quals=None (at pp.c:4401)
      ParamList:  (at pp.c:4401)
        Decl: name='x', quals=[], storage=[] (at pp.c:4401)
          TypeDecl: declname='x', quals=[] (at pp.c:4401)
            IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__CC2int', quals=[] (at pp.c:4401)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:4402)
    FuncDecl: quals=None (at pp.c:4402)
      ParamList:  (at pp.c:4402)
        Decl: name='x', quals=[], storage=[] (at pp.c:4402)
          TypeDecl: declname='x', quals=[] (at pp.c:4402)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__int2CC', quals=[] (at pp.c:4402)
        IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__compareControl', quals=[], storage=['inline', 'static'] (at pp.c:4404)
    FuncDecl: quals=None (at pp.c:4404)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__compareControl', quals=[] (at pp.c:4404)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:4406)
    FuncDecl: quals=None (at pp.c:4406)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__getControl', quals=[] (at pp.c:4406)
        IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[], storage=['inline', 'static'] (at pp.c:4416)
    FuncDecl: quals=None (at pp.c:4416)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[] (at pp.c:4416)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[], storage=['inline', 'static'] (at pp.c:4426)
    FuncDecl: quals=None (at pp.c:4426)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[] (at pp.c:4426)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__enableEvents', quals=[], storage=['inline', 'static'] (at pp.c:4428)
    FuncDecl: quals=None (at pp.c:4428)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__enableEvents', quals=[] (at pp.c:4428)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:4433)
    FuncDecl: quals=None (at pp.c:4433)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__disableEvents', quals=[] (at pp.c:4433)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:4435)
    FuncDecl: quals=None (at pp.c:4435)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Capture__getEvent', quals=[] (at pp.c:4435)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:4440)
    FuncDecl: quals=None (at pp.c:4440)
      ParamList:  (at pp.c:4440)
        Decl: name='x', quals=[], storage=[] (at pp.c:4440)
          TypeDecl: declname='x', quals=[] (at pp.c:4440)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEvent', quals=[] (at pp.c:4440)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[], storage=['inline', 'static'] (at pp.c:4450)
    FuncDecl: quals=None (at pp.c:4450)
      ParamList:  (at pp.c:4450)
        Decl: name='x', quals=[], storage=[] (at pp.c:4450)
          TypeDecl: declname='x', quals=[] (at pp.c:4450)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[] (at pp.c:4450)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:4452)
    FuncDecl: quals=None (at pp.c:4452)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Event__fired', quals=[] (at pp.c:4452)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:4460)
    FuncDecl: quals=None (at pp.c:4460)
      ParamList:  (at pp.c:4460)
        Decl: name='n', quals=[], storage=[] (at pp.c:4460)
          TypeDecl: declname='n', quals=[] (at pp.c:4460)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Capture__default__captured', quals=[] (at pp.c:4460)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4468)
    FuncDecl: quals=None (at pp.c:4468)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Timer__overflow', quals=[] (at pp.c:4468)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Capture__captured', quals=[], storage=['static'] (at pp.c:4470)
    FuncDecl: quals=None (at pp.c:4470)
      ParamList:  (at pp.c:4470)
        Decl: name='time', quals=[], storage=[] (at pp.c:4470)
          TypeDecl: declname='time', quals=[] (at pp.c:4470)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Capture__captured', quals=[] (at pp.c:4470)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Compare__fired', quals=[], storage=['static'] (at pp.c:4472)
    FuncDecl: quals=None (at pp.c:4472)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Compare__fired', quals=[] (at pp.c:4472)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__4__cc_t', quals=[], storage=['typedef'] (at pp.c:4474)
    TypeDecl: declname='Msp430TimerCapComP__4__cc_t', quals=[] (at pp.c:4474)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:4476)
    FuncDecl: quals=None (at pp.c:4476)
      ParamList:  (at pp.c:4476)
        Decl: name='x', quals=[], storage=[] (at pp.c:4476)
          TypeDecl: declname='x', quals=[] (at pp.c:4476)
            IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__CC2int', quals=[] (at pp.c:4476)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:4477)
    FuncDecl: quals=None (at pp.c:4477)
      ParamList:  (at pp.c:4477)
        Decl: name='x', quals=[], storage=[] (at pp.c:4477)
          TypeDecl: declname='x', quals=[] (at pp.c:4477)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__int2CC', quals=[] (at pp.c:4477)
        IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__captureControl', quals=[], storage=['inline', 'static'] (at pp.c:4479)
    FuncDecl: quals=None (at pp.c:4479)
      ParamList:  (at pp.c:4479)
        Decl: name='l_cm', quals=[], storage=[] (at pp.c:4479)
          TypeDecl: declname='l_cm', quals=[] (at pp.c:4479)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__captureControl', quals=[] (at pp.c:4479)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:4481)
    FuncDecl: quals=None (at pp.c:4481)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__getControl', quals=[] (at pp.c:4481)
        IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__clearPendingInterrupt', quals=[], storage=['inline', 'static'] (at pp.c:4491)
    FuncDecl: quals=None (at pp.c:4491)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__clearPendingInterrupt', quals=[] (at pp.c:4491)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__setControlAsCapture', quals=[], storage=['inline', 'static'] (at pp.c:4493)
    FuncDecl: quals=None (at pp.c:4493)
      ParamList:  (at pp.c:4493)
        Decl: name='cm', quals=[], storage=[] (at pp.c:4493)
          TypeDecl: declname='cm', quals=[] (at pp.c:4493)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__setControlAsCapture', quals=[] (at pp.c:4493)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__enableEvents', quals=[], storage=['inline', 'static'] (at pp.c:4495)
    FuncDecl: quals=None (at pp.c:4495)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__enableEvents', quals=[] (at pp.c:4495)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:4500)
    FuncDecl: quals=None (at pp.c:4500)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__disableEvents', quals=[] (at pp.c:4500)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:4502)
    FuncDecl: quals=None (at pp.c:4502)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Capture__getEvent', quals=[] (at pp.c:4502)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__Capture__clearOverflow', quals=[], storage=['inline', 'static'] (at pp.c:4504)
    FuncDecl: quals=None (at pp.c:4504)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Capture__clearOverflow', quals=[] (at pp.c:4504)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:4509)
    FuncDecl: quals=None (at pp.c:4509)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Event__fired', quals=[] (at pp.c:4509)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:4511)
    FuncDecl: quals=None (at pp.c:4511)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Compare__default__fired', quals=[] (at pp.c:4511)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4515)
    FuncDecl: quals=None (at pp.c:4515)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Timer__overflow', quals=[] (at pp.c:4515)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Capture__captured', quals=[], storage=['static'] (at pp.c:4517)
    FuncDecl: quals=None (at pp.c:4517)
      ParamList:  (at pp.c:4517)
        Decl: name='time', quals=[], storage=[] (at pp.c:4517)
          TypeDecl: declname='time', quals=[] (at pp.c:4517)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Capture__captured', quals=[] (at pp.c:4517)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Compare__fired', quals=[], storage=['static'] (at pp.c:4519)
    FuncDecl: quals=None (at pp.c:4519)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Compare__fired', quals=[] (at pp.c:4519)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Timer__get', quals=[], storage=['static'] (at pp.c:4521)
    FuncDecl: quals=None (at pp.c:4521)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Timer__get', quals=[] (at pp.c:4521)
        IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='Msp430TimerCapComP__5__cc_t', quals=[], storage=['typedef'] (at pp.c:4523)
    TypeDecl: declname='Msp430TimerCapComP__5__cc_t', quals=[] (at pp.c:4523)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:4525)
    FuncDecl: quals=None (at pp.c:4525)
      ParamList:  (at pp.c:4525)
        Decl: name='x', quals=[], storage=[] (at pp.c:4525)
          TypeDecl: declname='x', quals=[] (at pp.c:4525)
            IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__CC2int', quals=[] (at pp.c:4525)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:4526)
    FuncDecl: quals=None (at pp.c:4526)
      ParamList:  (at pp.c:4526)
        Decl: name='x', quals=[], storage=[] (at pp.c:4526)
          TypeDecl: declname='x', quals=[] (at pp.c:4526)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__int2CC', quals=[] (at pp.c:4526)
        IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__compareControl', quals=[], storage=['inline', 'static'] (at pp.c:4528)
    FuncDecl: quals=None (at pp.c:4528)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__compareControl', quals=[] (at pp.c:4528)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:4530)
    FuncDecl: quals=None (at pp.c:4530)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__getControl', quals=[] (at pp.c:4530)
        IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__clearPendingInterrupt', quals=[], storage=['inline', 'static'] (at pp.c:4540)
    FuncDecl: quals=None (at pp.c:4540)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__clearPendingInterrupt', quals=[] (at pp.c:4540)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__setControlAsCompare', quals=[], storage=['inline', 'static'] (at pp.c:4550)
    FuncDecl: quals=None (at pp.c:4550)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__setControlAsCompare', quals=[] (at pp.c:4550)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__enableEvents', quals=[], storage=['inline', 'static'] (at pp.c:4552)
    FuncDecl: quals=None (at pp.c:4552)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__enableEvents', quals=[] (at pp.c:4552)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:4557)
    FuncDecl: quals=None (at pp.c:4557)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__disableEvents', quals=[] (at pp.c:4557)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:4559)
    FuncDecl: quals=None (at pp.c:4559)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Capture__getEvent', quals=[] (at pp.c:4559)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:4564)
    FuncDecl: quals=None (at pp.c:4564)
      ParamList:  (at pp.c:4564)
        Decl: name='x', quals=[], storage=[] (at pp.c:4564)
          TypeDecl: declname='x', quals=[] (at pp.c:4564)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Compare__setEvent', quals=[] (at pp.c:4564)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Compare__setEventFromNow', quals=[], storage=['inline', 'static'] (at pp.c:4574)
    FuncDecl: quals=None (at pp.c:4574)
      ParamList:  (at pp.c:4574)
        Decl: name='x', quals=[], storage=[] (at pp.c:4574)
          TypeDecl: declname='x', quals=[] (at pp.c:4574)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Compare__setEventFromNow', quals=[] (at pp.c:4574)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:4576)
    FuncDecl: quals=None (at pp.c:4576)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Event__fired', quals=[] (at pp.c:4576)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:4584)
    FuncDecl: quals=None (at pp.c:4584)
      ParamList:  (at pp.c:4584)
        Decl: name='n', quals=[], storage=[] (at pp.c:4584)
          TypeDecl: declname='n', quals=[] (at pp.c:4584)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Capture__default__captured', quals=[] (at pp.c:4584)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4592)
    FuncDecl: quals=None (at pp.c:4592)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Timer__overflow', quals=[] (at pp.c:4592)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Capture__captured', quals=[], storage=['static'] (at pp.c:4594)
    FuncDecl: quals=None (at pp.c:4594)
      ParamList:  (at pp.c:4594)
        Decl: name='time', quals=[], storage=[] (at pp.c:4594)
          TypeDecl: declname='time', quals=[] (at pp.c:4594)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Capture__captured', quals=[] (at pp.c:4594)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Compare__fired', quals=[], storage=['static'] (at pp.c:4596)
    FuncDecl: quals=None (at pp.c:4596)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Compare__fired', quals=[] (at pp.c:4596)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__6__cc_t', quals=[], storage=['typedef'] (at pp.c:4598)
    TypeDecl: declname='Msp430TimerCapComP__6__cc_t', quals=[] (at pp.c:4598)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:4601)
    FuncDecl: quals=None (at pp.c:4601)
      ParamList:  (at pp.c:4601)
        Decl: name='x', quals=[], storage=[] (at pp.c:4601)
          TypeDecl: declname='x', quals=[] (at pp.c:4601)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__int2CC', quals=[] (at pp.c:4601)
        IdentifierType: names=['Msp430TimerCapComP__6__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:4603)
    FuncDecl: quals=None (at pp.c:4603)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Control__getControl', quals=[] (at pp.c:4603)
        IdentifierType: names=['Msp430TimerCapComP__6__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:4605)
    FuncDecl: quals=None (at pp.c:4605)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Capture__getEvent', quals=[] (at pp.c:4605)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:4607)
    FuncDecl: quals=None (at pp.c:4607)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Event__fired', quals=[] (at pp.c:4607)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:4615)
    FuncDecl: quals=None (at pp.c:4615)
      ParamList:  (at pp.c:4615)
        Decl: name='n', quals=[], storage=[] (at pp.c:4615)
          TypeDecl: declname='n', quals=[] (at pp.c:4615)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Capture__default__captured', quals=[] (at pp.c:4615)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:4619)
    FuncDecl: quals=None (at pp.c:4619)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Compare__default__fired', quals=[] (at pp.c:4619)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4623)
    FuncDecl: quals=None (at pp.c:4623)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Timer__overflow', quals=[] (at pp.c:4623)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Capture__captured', quals=[], storage=['static'] (at pp.c:4625)
    FuncDecl: quals=None (at pp.c:4625)
      ParamList:  (at pp.c:4625)
        Decl: name='time', quals=[], storage=[] (at pp.c:4625)
          TypeDecl: declname='time', quals=[] (at pp.c:4625)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Capture__captured', quals=[] (at pp.c:4625)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Compare__fired', quals=[], storage=['static'] (at pp.c:4627)
    FuncDecl: quals=None (at pp.c:4627)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Compare__fired', quals=[] (at pp.c:4627)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__7__cc_t', quals=[], storage=['typedef'] (at pp.c:4629)
    TypeDecl: declname='Msp430TimerCapComP__7__cc_t', quals=[] (at pp.c:4629)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:4632)
    FuncDecl: quals=None (at pp.c:4632)
      ParamList:  (at pp.c:4632)
        Decl: name='x', quals=[], storage=[] (at pp.c:4632)
          TypeDecl: declname='x', quals=[] (at pp.c:4632)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__int2CC', quals=[] (at pp.c:4632)
        IdentifierType: names=['Msp430TimerCapComP__7__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:4634)
    FuncDecl: quals=None (at pp.c:4634)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Control__getControl', quals=[] (at pp.c:4634)
        IdentifierType: names=['Msp430TimerCapComP__7__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:4636)
    FuncDecl: quals=None (at pp.c:4636)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Capture__getEvent', quals=[] (at pp.c:4636)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:4638)
    FuncDecl: quals=None (at pp.c:4638)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Event__fired', quals=[] (at pp.c:4638)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:4646)
    FuncDecl: quals=None (at pp.c:4646)
      ParamList:  (at pp.c:4646)
        Decl: name='n', quals=[], storage=[] (at pp.c:4646)
          TypeDecl: declname='n', quals=[] (at pp.c:4646)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Capture__default__captured', quals=[] (at pp.c:4646)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:4650)
    FuncDecl: quals=None (at pp.c:4650)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Compare__default__fired', quals=[] (at pp.c:4650)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4654)
    FuncDecl: quals=None (at pp.c:4654)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Timer__overflow', quals=[] (at pp.c:4654)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Capture__captured', quals=[], storage=['static'] (at pp.c:4656)
    FuncDecl: quals=None (at pp.c:4656)
      ParamList:  (at pp.c:4656)
        Decl: name='time', quals=[], storage=[] (at pp.c:4656)
          TypeDecl: declname='time', quals=[] (at pp.c:4656)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Capture__captured', quals=[] (at pp.c:4656)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Compare__fired', quals=[], storage=['static'] (at pp.c:4658)
    FuncDecl: quals=None (at pp.c:4658)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Compare__fired', quals=[] (at pp.c:4658)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__8__cc_t', quals=[], storage=['typedef'] (at pp.c:4660)
    TypeDecl: declname='Msp430TimerCapComP__8__cc_t', quals=[] (at pp.c:4660)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:4663)
    FuncDecl: quals=None (at pp.c:4663)
      ParamList:  (at pp.c:4663)
        Decl: name='x', quals=[], storage=[] (at pp.c:4663)
          TypeDecl: declname='x', quals=[] (at pp.c:4663)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__int2CC', quals=[] (at pp.c:4663)
        IdentifierType: names=['Msp430TimerCapComP__8__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:4665)
    FuncDecl: quals=None (at pp.c:4665)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Control__getControl', quals=[] (at pp.c:4665)
        IdentifierType: names=['Msp430TimerCapComP__8__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:4667)
    FuncDecl: quals=None (at pp.c:4667)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Capture__getEvent', quals=[] (at pp.c:4667)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:4669)
    FuncDecl: quals=None (at pp.c:4669)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Event__fired', quals=[] (at pp.c:4669)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:4677)
    FuncDecl: quals=None (at pp.c:4677)
      ParamList:  (at pp.c:4677)
        Decl: name='n', quals=[], storage=[] (at pp.c:4677)
          TypeDecl: declname='n', quals=[] (at pp.c:4677)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Capture__default__captured', quals=[] (at pp.c:4677)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:4681)
    FuncDecl: quals=None (at pp.c:4681)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Compare__default__fired', quals=[] (at pp.c:4681)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4685)
    FuncDecl: quals=None (at pp.c:4685)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Timer__overflow', quals=[] (at pp.c:4685)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Capture__captured', quals=[], storage=['static'] (at pp.c:4687)
    FuncDecl: quals=None (at pp.c:4687)
      ParamList:  (at pp.c:4687)
        Decl: name='time', quals=[], storage=[] (at pp.c:4687)
          TypeDecl: declname='time', quals=[] (at pp.c:4687)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Capture__captured', quals=[] (at pp.c:4687)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Compare__fired', quals=[], storage=['static'] (at pp.c:4689)
    FuncDecl: quals=None (at pp.c:4689)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Compare__fired', quals=[] (at pp.c:4689)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__9__cc_t', quals=[], storage=['typedef'] (at pp.c:4691)
    TypeDecl: declname='Msp430TimerCapComP__9__cc_t', quals=[] (at pp.c:4691)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:4694)
    FuncDecl: quals=None (at pp.c:4694)
      ParamList:  (at pp.c:4694)
        Decl: name='x', quals=[], storage=[] (at pp.c:4694)
          TypeDecl: declname='x', quals=[] (at pp.c:4694)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__int2CC', quals=[] (at pp.c:4694)
        IdentifierType: names=['Msp430TimerCapComP__9__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:4696)
    FuncDecl: quals=None (at pp.c:4696)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Control__getControl', quals=[] (at pp.c:4696)
        IdentifierType: names=['Msp430TimerCapComP__9__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:4698)
    FuncDecl: quals=None (at pp.c:4698)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Capture__getEvent', quals=[] (at pp.c:4698)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:4700)
    FuncDecl: quals=None (at pp.c:4700)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Event__fired', quals=[] (at pp.c:4700)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:4708)
    FuncDecl: quals=None (at pp.c:4708)
      ParamList:  (at pp.c:4708)
        Decl: name='n', quals=[], storage=[] (at pp.c:4708)
          TypeDecl: declname='n', quals=[] (at pp.c:4708)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Capture__default__captured', quals=[] (at pp.c:4708)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:4712)
    FuncDecl: quals=None (at pp.c:4712)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Compare__default__fired', quals=[] (at pp.c:4712)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4716)
    FuncDecl: quals=None (at pp.c:4716)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Timer__overflow', quals=[] (at pp.c:4716)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCommonP__VectorTimerB1__fired', quals=[], storage=['static'] (at pp.c:4718)
    FuncDecl: quals=None (at pp.c:4718)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCommonP__VectorTimerB1__fired', quals=[] (at pp.c:4718)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCommonP__VectorTimerA0__fired', quals=[], storage=['static'] (at pp.c:4720)
    FuncDecl: quals=None (at pp.c:4720)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCommonP__VectorTimerA0__fired', quals=[] (at pp.c:4720)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCommonP__VectorTimerA1__fired', quals=[], storage=['static'] (at pp.c:4722)
    FuncDecl: quals=None (at pp.c:4722)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCommonP__VectorTimerA1__fired', quals=[] (at pp.c:4722)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCommonP__VectorTimerB0__fired', quals=[], storage=['static'] (at pp.c:4724)
    FuncDecl: quals=None (at pp.c:4724)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCommonP__VectorTimerB0__fired', quals=[] (at pp.c:4724)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_TIMERA0_VECTOR', quals=[], storage=[] (at pp.c:4726)
    FuncDecl: quals=None (at pp.c:4726)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_TIMERA0_VECTOR', quals=[] (at pp.c:4726)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_TIMERA1_VECTOR', quals=[], storage=[] (at pp.c:4727)
    FuncDecl: quals=None (at pp.c:4727)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_TIMERA1_VECTOR', quals=[] (at pp.c:4727)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_TIMERB0_VECTOR', quals=[], storage=[] (at pp.c:4728)
    FuncDecl: quals=None (at pp.c:4728)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_TIMERB0_VECTOR', quals=[] (at pp.c:4728)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_TIMERB1_VECTOR', quals=[], storage=[] (at pp.c:4729)
    FuncDecl: quals=None (at pp.c:4729)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_TIMERB1_VECTOR', quals=[] (at pp.c:4729)
        IdentifierType: names=['void'] (at None)
  Decl: name='McuSleepC__McuPowerOverride__lowestState', quals=[], storage=['static'] (at pp.c:4731)
    FuncDecl: quals=None (at pp.c:4731)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='McuSleepC__McuPowerOverride__lowestState', quals=[] (at pp.c:4731)
        IdentifierType: names=['mcu_power_t'] (at None)
  Decl: name='McuSleepC__dirty', quals=[], storage=[] (at pp.c:4733)
    TypeDecl: declname='McuSleepC__dirty', quals=[] (at pp.c:4733)
      IdentifierType: names=['bool'] (at None)
    ID: name='TRUE' (at pp.c:4733)
  Decl: name='McuSleepC__powerState', quals=[], storage=[] (at pp.c:4734)
    TypeDecl: declname='McuSleepC__powerState', quals=[] (at pp.c:4734)
      IdentifierType: names=['mcu_power_t'] (at None)
    ID: name='MSP430_POWER_ACTIVE' (at pp.c:4734)
  Decl: name='McuSleepC__msp430PowerBits', quals=['const'], storage=[] (at pp.c:4739)
    ArrayDecl:  (at pp.c:4739)
      TypeDecl: declname='McuSleepC__msp430PowerBits', quals=['const'] (at pp.c:4739)
        IdentifierType: names=['uint16_t'] (at None)
      BinaryOp: op='+' (at pp.c:4739)
        ID: name='MSP430_POWER_LPM4' (at pp.c:4739)
        Constant: type='int', value='1' (at pp.c:4739)
    ExprList:  (at pp.c:4740)
      Constant: type='int', value='0' (at pp.c:4740)
      Constant: type='int', value='0x0010' (at pp.c:4741)
      BinaryOp: op='+' (at pp.c:4742)
        Constant: type='int', value='0x0040' (at pp.c:4742)
        Constant: type='int', value='0x0010' (at pp.c:4742)
      BinaryOp: op='+' (at pp.c:4743)
        Constant: type='int', value='0x0080' (at pp.c:4743)
        Constant: type='int', value='0x0010' (at pp.c:4743)
      BinaryOp: op='+' (at pp.c:4744)
        BinaryOp: op='+' (at pp.c:4744)
          Constant: type='int', value='0x0080' (at pp.c:4744)
          Constant: type='int', value='0x0040' (at pp.c:4744)
        Constant: type='int', value='0x0010' (at pp.c:4744)
      BinaryOp: op='+' (at pp.c:4745)
        BinaryOp: op='+' (at pp.c:4745)
          BinaryOp: op='+' (at pp.c:4745)
            Constant: type='int', value='0x0080' (at pp.c:4745)
            Constant: type='int', value='0x0040' (at pp.c:4745)
          Constant: type='int', value='0x0020' (at pp.c:4745)
        Constant: type='int', value='0x0010' (at pp.c:4745)
  Decl: name='McuSleepC__getPowerState', quals=[], storage=['inline', 'static'] (at pp.c:4748)
    FuncDecl: quals=None (at pp.c:4748)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='McuSleepC__getPowerState', quals=[] (at pp.c:4748)
        IdentifierType: names=['mcu_power_t'] (at None)
  Decl: name='McuSleepC__computePowerState', quals=[], storage=['inline', 'static'] (at pp.c:4750)
    FuncDecl: quals=None (at pp.c:4750)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='McuSleepC__computePowerState', quals=[] (at pp.c:4750)
        IdentifierType: names=['void'] (at None)
  Decl: name='McuSleepC__McuSleep__sleep', quals=[], storage=['inline', 'static'] (at pp.c:4755)
    FuncDecl: quals=None (at pp.c:4755)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='McuSleepC__McuSleep__sleep', quals=[] (at pp.c:4755)
        IdentifierType: names=['void'] (at None)
  Decl: name='MotePlatformC__SubInit__init', quals=[], storage=['static'] (at pp.c:4757)
    FuncDecl: quals=None (at pp.c:4757)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='MotePlatformC__SubInit__init', quals=[] (at pp.c:4757)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='MotePlatformC__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:4759)
    FuncDecl: quals=None (at pp.c:4759)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='MotePlatformC__Init__init', quals=[] (at pp.c:4759)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='MotePlatformC__SubInit__default__init', quals=[], storage=['inline', 'static'] (at pp.c:4761)
    FuncDecl: quals=None (at pp.c:4761)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='MotePlatformC__SubInit__default__init', quals=[] (at pp.c:4761)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='RealMainP__SoftwareInit__init', quals=[], storage=['static'] (at pp.c:4763)
    FuncDecl: quals=None (at pp.c:4763)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__SoftwareInit__init', quals=[] (at pp.c:4763)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='RealMainP__Boot__booted', quals=[], storage=['static'] (at pp.c:4765)
    FuncDecl: quals=None (at pp.c:4765)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__Boot__booted', quals=[] (at pp.c:4765)
        IdentifierType: names=['void'] (at None)
  Decl: name='RealMainP__PlatformInit__init', quals=[], storage=['static'] (at pp.c:4767)
    FuncDecl: quals=None (at pp.c:4767)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__PlatformInit__init', quals=[] (at pp.c:4767)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='RealMainP__Scheduler__init', quals=[], storage=['static'] (at pp.c:4769)
    FuncDecl: quals=None (at pp.c:4769)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__Scheduler__init', quals=[] (at pp.c:4769)
        IdentifierType: names=['void'] (at None)
  Decl: name='RealMainP__Scheduler__taskLoop', quals=[], storage=['static'] (at pp.c:4771)
    FuncDecl: quals=None (at pp.c:4771)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__Scheduler__taskLoop', quals=[] (at pp.c:4771)
        IdentifierType: names=['void'] (at None)
  Decl: name='RealMainP__Scheduler__runNextTask', quals=[], storage=['static'] (at pp.c:4773)
    FuncDecl: quals=None (at pp.c:4773)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__Scheduler__runNextTask', quals=[] (at pp.c:4773)
        IdentifierType: names=['bool'] (at None)
  Decl: name='main', quals=[], storage=[] (at pp.c:4775)
    FuncDecl: quals=None (at pp.c:4775)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='main', quals=[] (at pp.c:4775)
        IdentifierType: names=['int'] (at None)
  Decl: name='SchedulerBasicP__TaskBasic__runTask', quals=[], storage=['static'] (at pp.c:4777)
    FuncDecl: quals=None (at pp.c:4777)
      ParamList:  (at pp.c:4779)
        Decl: name='arg_0x101333340', quals=[], storage=[] (at pp.c:4779)
          TypeDecl: declname='arg_0x101333340', quals=[] (at pp.c:4779)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__TaskBasic__runTask', quals=[] (at pp.c:4777)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__McuSleep__sleep', quals=[], storage=['static'] (at pp.c:4781)
    FuncDecl: quals=None (at pp.c:4781)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__McuSleep__sleep', quals=[] (at pp.c:4781)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:4783)
    Enum: name='SchedulerBasicP____nesc_unnamed4313' (at pp.c:4783)
      EnumeratorList:  (at pp.c:4785)
        Enumerator: name='SchedulerBasicP__NUM_TASKS' (at pp.c:4785)
          Constant: type='int', value='21U' (at pp.c:4785)
        Enumerator: name='SchedulerBasicP__NO_TASK' (at pp.c:4786)
          Constant: type='int', value='255' (at pp.c:4786)
  Decl: name='SchedulerBasicP__m_head', quals=[], storage=[] (at pp.c:4789)
    TypeDecl: declname='SchedulerBasicP__m_head', quals=[] (at pp.c:4789)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SchedulerBasicP__m_tail', quals=[], storage=[] (at pp.c:4790)
    TypeDecl: declname='SchedulerBasicP__m_tail', quals=[] (at pp.c:4790)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SchedulerBasicP__m_next', quals=[], storage=[] (at pp.c:4791)
    ArrayDecl:  (at pp.c:4791)
      TypeDecl: declname='SchedulerBasicP__m_next', quals=[] (at pp.c:4791)
        IdentifierType: names=['uint8_t'] (at None)
      ID: name='SchedulerBasicP__NUM_TASKS' (at pp.c:4791)
  Decl: name='SchedulerBasicP__popTask', quals=[], storage=['__inline', 'static'] (at pp.c:4800)
    FuncDecl: quals=None (at pp.c:4800)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__popTask', quals=[] (at pp.c:4800)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SchedulerBasicP__isWaiting', quals=[], storage=['inline', 'static'] (at pp.c:4802)
    FuncDecl: quals=None (at pp.c:4802)
      ParamList:  (at pp.c:4802)
        Decl: name='id', quals=[], storage=[] (at pp.c:4802)
          TypeDecl: declname='id', quals=[] (at pp.c:4802)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__isWaiting', quals=[] (at pp.c:4802)
        IdentifierType: names=['bool'] (at None)
  Decl: name='SchedulerBasicP__pushTask', quals=[], storage=['inline', 'static'] (at pp.c:4807)
    FuncDecl: quals=None (at pp.c:4807)
      ParamList:  (at pp.c:4807)
        Decl: name='id', quals=[], storage=[] (at pp.c:4807)
          TypeDecl: declname='id', quals=[] (at pp.c:4807)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__pushTask', quals=[] (at pp.c:4807)
        IdentifierType: names=['bool'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__init', quals=[], storage=['inline', 'static'] (at pp.c:4809)
    FuncDecl: quals=None (at pp.c:4809)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__init', quals=[] (at pp.c:4809)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__runNextTask', quals=[], storage=['static'] (at pp.c:4819)
    FuncDecl: quals=None (at pp.c:4819)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__runNextTask', quals=[] (at pp.c:4819)
        IdentifierType: names=['bool'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__taskLoop', quals=[], storage=['inline', 'static'] (at pp.c:4821)
    FuncDecl: quals=None (at pp.c:4821)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__taskLoop', quals=[] (at pp.c:4821)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__TaskBasic__postTask', quals=[], storage=['static'] (at pp.c:4823)
    FuncDecl: quals=None (at pp.c:4823)
      ParamList:  (at pp.c:4823)
        Decl: name='id', quals=[], storage=[] (at pp.c:4823)
          TypeDecl: declname='id', quals=[] (at pp.c:4823)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__TaskBasic__postTask', quals=[] (at pp.c:4823)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SchedulerBasicP__TaskBasic__default__runTask', quals=[], storage=['static'] (at pp.c:4828)
    FuncDecl: quals=None (at pp.c:4828)
      ParamList:  (at pp.c:4828)
        Decl: name='id', quals=[], storage=[] (at pp.c:4828)
          TypeDecl: declname='id', quals=[] (at pp.c:4828)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__TaskBasic__default__runTask', quals=[] (at pp.c:4828)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__SerialControl__start', quals=[], storage=['static'] (at pp.c:4830)
    FuncDecl: quals=None (at pp.c:4830)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BaseStationP__SerialControl__start', quals=[] (at pp.c:4830)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='BaseStationP__RadioAMPacket__group', quals=[], storage=['static'] (at pp.c:4832)
    FuncDecl: quals=None (at pp.c:4832)
      ParamList:  (at pp.c:4834)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:4834)
          PtrDecl: quals=[] (at pp.c:4834)
            TypeDecl: declname='amsg', quals=[] (at pp.c:4834)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='BaseStationP__RadioAMPacket__group', quals=[] (at pp.c:4832)
        IdentifierType: names=['am_group_t'] (at None)
  Decl: name='BaseStationP__RadioAMPacket__source', quals=[], storage=['static'] (at pp.c:4836)
    FuncDecl: quals=None (at pp.c:4836)
      ParamList:  (at pp.c:4838)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:4838)
          PtrDecl: quals=[] (at pp.c:4838)
            TypeDecl: declname='amsg', quals=[] (at pp.c:4838)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='BaseStationP__RadioAMPacket__source', quals=[] (at pp.c:4836)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='BaseStationP__RadioAMPacket__destination', quals=[], storage=['static'] (at pp.c:4840)
    FuncDecl: quals=None (at pp.c:4840)
      ParamList:  (at pp.c:4842)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:4842)
          PtrDecl: quals=[] (at pp.c:4842)
            TypeDecl: declname='amsg', quals=[] (at pp.c:4842)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='BaseStationP__RadioAMPacket__destination', quals=[] (at pp.c:4840)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='BaseStationP__RadioAMPacket__setSource', quals=[], storage=['static'] (at pp.c:4844)
    FuncDecl: quals=None (at pp.c:4844)
      ParamList:  (at pp.c:4846)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:4846)
          PtrDecl: quals=[] (at pp.c:4846)
            TypeDecl: declname='amsg', quals=[] (at pp.c:4846)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='addr', quals=[], storage=[] (at pp.c:4850)
          TypeDecl: declname='addr', quals=[] (at pp.c:4850)
            IdentifierType: names=['am_addr_t'] (at None)
      TypeDecl: declname='BaseStationP__RadioAMPacket__setSource', quals=[] (at pp.c:4844)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__RadioAMPacket__type', quals=[], storage=['static'] (at pp.c:4852)
    FuncDecl: quals=None (at pp.c:4852)
      ParamList:  (at pp.c:4854)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:4854)
          PtrDecl: quals=[] (at pp.c:4854)
            TypeDecl: declname='amsg', quals=[] (at pp.c:4854)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='BaseStationP__RadioAMPacket__type', quals=[] (at pp.c:4852)
        IdentifierType: names=['am_id_t'] (at None)
  Decl: name='BaseStationP__uartSendTask__postTask', quals=[], storage=['static'] (at pp.c:4856)
    FuncDecl: quals=None (at pp.c:4856)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BaseStationP__uartSendTask__postTask', quals=[] (at pp.c:4856)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='BaseStationP__RadioControl__start', quals=[], storage=['static'] (at pp.c:4858)
    FuncDecl: quals=None (at pp.c:4858)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BaseStationP__RadioControl__start', quals=[] (at pp.c:4858)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='BaseStationP__RadioPacket__clear', quals=[], storage=['static'] (at pp.c:4860)
    FuncDecl: quals=None (at pp.c:4860)
      ParamList:  (at pp.c:4862)
        Decl: name='msg', quals=[], storage=[] (at pp.c:4862)
          PtrDecl: quals=[] (at pp.c:4862)
            TypeDecl: declname='msg', quals=[] (at pp.c:4862)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='BaseStationP__RadioPacket__clear', quals=[] (at pp.c:4860)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__RadioPacket__payloadLength', quals=[], storage=['static'] (at pp.c:4864)
    FuncDecl: quals=None (at pp.c:4864)
      ParamList:  (at pp.c:4866)
        Decl: name='msg', quals=[], storage=[] (at pp.c:4866)
          PtrDecl: quals=[] (at pp.c:4866)
            TypeDecl: declname='msg', quals=[] (at pp.c:4866)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='BaseStationP__RadioPacket__payloadLength', quals=[] (at pp.c:4864)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='BaseStationP__radioSendTask__postTask', quals=[], storage=['static'] (at pp.c:4868)
    FuncDecl: quals=None (at pp.c:4868)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BaseStationP__radioSendTask__postTask', quals=[] (at pp.c:4868)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='BaseStationP__Leds__led0Toggle', quals=[], storage=['static'] (at pp.c:4870)
    FuncDecl: quals=None (at pp.c:4870)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BaseStationP__Leds__led0Toggle', quals=[] (at pp.c:4870)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__Leds__led1Toggle', quals=[], storage=['static'] (at pp.c:4872)
    FuncDecl: quals=None (at pp.c:4872)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BaseStationP__Leds__led1Toggle', quals=[] (at pp.c:4872)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__Leds__led2Toggle', quals=[], storage=['static'] (at pp.c:4874)
    FuncDecl: quals=None (at pp.c:4874)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BaseStationP__Leds__led2Toggle', quals=[] (at pp.c:4874)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__UartPacket__clear', quals=[], storage=['static'] (at pp.c:4876)
    FuncDecl: quals=None (at pp.c:4876)
      ParamList:  (at pp.c:4878)
        Decl: name='msg', quals=[], storage=[] (at pp.c:4878)
          PtrDecl: quals=[] (at pp.c:4878)
            TypeDecl: declname='msg', quals=[] (at pp.c:4878)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='BaseStationP__UartPacket__clear', quals=[] (at pp.c:4876)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__UartPacket__payloadLength', quals=[], storage=['static'] (at pp.c:4880)
    FuncDecl: quals=None (at pp.c:4880)
      ParamList:  (at pp.c:4882)
        Decl: name='msg', quals=[], storage=[] (at pp.c:4882)
          PtrDecl: quals=[] (at pp.c:4882)
            TypeDecl: declname='msg', quals=[] (at pp.c:4882)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='BaseStationP__UartPacket__payloadLength', quals=[] (at pp.c:4880)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='BaseStationP__RadioSend__send', quals=[], storage=['static'] (at pp.c:4884)
    FuncDecl: quals=None (at pp.c:4884)
      ParamList:  (at pp.c:4886)
        Decl: name='arg_0x101591b28', quals=[], storage=[] (at pp.c:4886)
          TypeDecl: declname='arg_0x101591b28', quals=[] (at pp.c:4886)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='addr', quals=[], storage=[] (at pp.c:4888)
          TypeDecl: declname='addr', quals=[] (at pp.c:4888)
            IdentifierType: names=['am_addr_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:4890)
          PtrDecl: quals=[] (at pp.c:4890)
            TypeDecl: declname='msg', quals=[] (at pp.c:4890)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:4899)
          TypeDecl: declname='len', quals=[] (at pp.c:4899)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='BaseStationP__RadioSend__send', quals=[] (at pp.c:4884)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='BaseStationP__UartSend__send', quals=[], storage=['static'] (at pp.c:4901)
    FuncDecl: quals=None (at pp.c:4901)
      ParamList:  (at pp.c:4903)
        Decl: name='arg_0x101594578', quals=[], storage=[] (at pp.c:4903)
          TypeDecl: declname='arg_0x101594578', quals=[] (at pp.c:4903)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='addr', quals=[], storage=[] (at pp.c:4905)
          TypeDecl: declname='addr', quals=[] (at pp.c:4905)
            IdentifierType: names=['am_addr_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:4907)
          PtrDecl: quals=[] (at pp.c:4907)
            TypeDecl: declname='msg', quals=[] (at pp.c:4907)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:4916)
          TypeDecl: declname='len', quals=[] (at pp.c:4916)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='BaseStationP__UartSend__send', quals=[] (at pp.c:4901)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='BaseStationP__UartAMPacket__source', quals=[], storage=['static'] (at pp.c:4918)
    FuncDecl: quals=None (at pp.c:4918)
      ParamList:  (at pp.c:4920)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:4920)
          PtrDecl: quals=[] (at pp.c:4920)
            TypeDecl: declname='amsg', quals=[] (at pp.c:4920)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='BaseStationP__UartAMPacket__source', quals=[] (at pp.c:4918)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='BaseStationP__UartAMPacket__destination', quals=[], storage=['static'] (at pp.c:4922)
    FuncDecl: quals=None (at pp.c:4922)
      ParamList:  (at pp.c:4924)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:4924)
          PtrDecl: quals=[] (at pp.c:4924)
            TypeDecl: declname='amsg', quals=[] (at pp.c:4924)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='BaseStationP__UartAMPacket__destination', quals=[] (at pp.c:4922)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='BaseStationP__UartAMPacket__setSource', quals=[], storage=['static'] (at pp.c:4926)
    FuncDecl: quals=None (at pp.c:4926)
      ParamList:  (at pp.c:4928)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:4928)
          PtrDecl: quals=[] (at pp.c:4928)
            TypeDecl: declname='amsg', quals=[] (at pp.c:4928)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='addr', quals=[], storage=[] (at pp.c:4932)
          TypeDecl: declname='addr', quals=[] (at pp.c:4932)
            IdentifierType: names=['am_addr_t'] (at None)
      TypeDecl: declname='BaseStationP__UartAMPacket__setSource', quals=[] (at pp.c:4926)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__UartAMPacket__type', quals=[], storage=['static'] (at pp.c:4934)
    FuncDecl: quals=None (at pp.c:4934)
      ParamList:  (at pp.c:4936)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:4936)
          PtrDecl: quals=[] (at pp.c:4936)
            TypeDecl: declname='amsg', quals=[] (at pp.c:4936)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='BaseStationP__UartAMPacket__type', quals=[] (at pp.c:4934)
        IdentifierType: names=['am_id_t'] (at None)
  Decl: name='BaseStationP__UartAMPacket__setGroup', quals=[], storage=['static'] (at pp.c:4938)
    FuncDecl: quals=None (at pp.c:4938)
      ParamList:  (at pp.c:4940)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:4940)
          PtrDecl: quals=[] (at pp.c:4940)
            TypeDecl: declname='amsg', quals=[] (at pp.c:4940)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='grp', quals=[], storage=[] (at pp.c:4943)
          TypeDecl: declname='grp', quals=[] (at pp.c:4943)
            IdentifierType: names=['am_group_t'] (at None)
      TypeDecl: declname='BaseStationP__UartAMPacket__setGroup', quals=[] (at pp.c:4938)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:4945)
    Enum: name='BaseStationP____nesc_unnamed4314' (at pp.c:4945)
      EnumeratorList:  (at pp.c:4947)
        Enumerator: name='BaseStationP__uartSendTask' (at pp.c:4947)
          Constant: type='int', value='0U' (at pp.c:4947)
  Typedef: name='BaseStationP____nesc_sillytask_uartSendTask', quals=[], storage=['typedef'] (at pp.c:4950)
    ArrayDecl:  (at pp.c:4950)
      TypeDecl: declname='BaseStationP____nesc_sillytask_uartSendTask', quals=[] (at pp.c:4950)
        IdentifierType: names=['int'] (at None)
      ID: name='BaseStationP__uartSendTask' (at pp.c:4950)
  Decl: name=None, quals=[], storage=[] (at pp.c:4951)
    Enum: name='BaseStationP____nesc_unnamed4315' (at pp.c:4951)
      EnumeratorList:  (at pp.c:4953)
        Enumerator: name='BaseStationP__radioSendTask' (at pp.c:4953)
          Constant: type='int', value='1U' (at pp.c:4953)
  Typedef: name='BaseStationP____nesc_sillytask_radioSendTask', quals=[], storage=['typedef'] (at pp.c:4956)
    ArrayDecl:  (at pp.c:4956)
      TypeDecl: declname='BaseStationP____nesc_sillytask_radioSendTask', quals=[] (at pp.c:4956)
        IdentifierType: names=['int'] (at None)
      ID: name='BaseStationP__radioSendTask' (at pp.c:4956)
  Decl: name=None, quals=[], storage=[] (at pp.c:4958)
    Enum: name='BaseStationP____nesc_unnamed4316' (at pp.c:4958)
      EnumeratorList:  (at pp.c:4959)
        Enumerator: name='BaseStationP__UART_QUEUE_LEN' (at pp.c:4959)
          Constant: type='int', value='12' (at pp.c:4959)
        Enumerator: name='BaseStationP__RADIO_QUEUE_LEN' (at pp.c:4960)
          Constant: type='int', value='12' (at pp.c:4960)
  Decl: name='BaseStationP__uartQueueBufs', quals=[], storage=[] (at pp.c:4963)
    ArrayDecl:  (at pp.c:4963)
      TypeDecl: declname='BaseStationP__uartQueueBufs', quals=[] (at pp.c:4963)
        IdentifierType: names=['message_t'] (at None)
      ID: name='BaseStationP__UART_QUEUE_LEN' (at pp.c:4963)
  Decl: name='BaseStationP__uartQueue', quals=[], storage=[] (at pp.c:4964)
    ArrayDecl:  (at pp.c:4964)
      PtrDecl: quals=[] (at pp.c:4964)
        TypeDecl: declname='BaseStationP__uartQueue', quals=[] (at pp.c:4964)
          IdentifierType: names=['message_t'] (at None)
      ID: name='BaseStationP__UART_QUEUE_LEN' (at pp.c:4964)
  Decl: name='BaseStationP__uartIn', quals=[], storage=[] (at pp.c:4965)
    TypeDecl: declname='BaseStationP__uartIn', quals=[] (at pp.c:4965)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='BaseStationP__uartOut', quals=[], storage=[] (at pp.c:4967)
    TypeDecl: declname='BaseStationP__uartOut', quals=[] (at pp.c:4967)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='BaseStationP__uartBusy', quals=[], storage=[] (at pp.c:4968)
    TypeDecl: declname='BaseStationP__uartBusy', quals=[] (at pp.c:4968)
      IdentifierType: names=['bool'] (at None)
  Decl: name='BaseStationP__uartFull', quals=[], storage=[] (at pp.c:4970)
    TypeDecl: declname='BaseStationP__uartFull', quals=[] (at pp.c:4970)
      IdentifierType: names=['bool'] (at None)
  Decl: name='BaseStationP__radioQueueBufs', quals=[], storage=[] (at pp.c:4972)
    ArrayDecl:  (at pp.c:4972)
      TypeDecl: declname='BaseStationP__radioQueueBufs', quals=[] (at pp.c:4972)
        IdentifierType: names=['message_t'] (at None)
      ID: name='BaseStationP__RADIO_QUEUE_LEN' (at pp.c:4972)
  Decl: name='BaseStationP__radioQueue', quals=[], storage=[] (at pp.c:4973)
    ArrayDecl:  (at pp.c:4973)
      PtrDecl: quals=[] (at pp.c:4973)
        TypeDecl: declname='BaseStationP__radioQueue', quals=[] (at pp.c:4973)
          IdentifierType: names=['message_t'] (at None)
      ID: name='BaseStationP__RADIO_QUEUE_LEN' (at pp.c:4973)
  Decl: name='BaseStationP__radioIn', quals=[], storage=[] (at pp.c:4974)
    TypeDecl: declname='BaseStationP__radioIn', quals=[] (at pp.c:4974)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='BaseStationP__radioOut', quals=[], storage=[] (at pp.c:4976)
    TypeDecl: declname='BaseStationP__radioOut', quals=[] (at pp.c:4976)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='BaseStationP__radioBusy', quals=[], storage=[] (at pp.c:4977)
    TypeDecl: declname='BaseStationP__radioBusy', quals=[] (at pp.c:4977)
      IdentifierType: names=['bool'] (at None)
  Decl: name='BaseStationP__radioFull', quals=[], storage=[] (at pp.c:4979)
    TypeDecl: declname='BaseStationP__radioFull', quals=[] (at pp.c:4979)
      IdentifierType: names=['bool'] (at None)
  Decl: name='BaseStationP__dropBlink', quals=[], storage=['inline', 'static'] (at pp.c:4984)
    FuncDecl: quals=None (at pp.c:4984)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BaseStationP__dropBlink', quals=[] (at pp.c:4984)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__failBlink', quals=[], storage=['inline', 'static'] (at pp.c:4988)
    FuncDecl: quals=None (at pp.c:4988)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BaseStationP__failBlink', quals=[] (at pp.c:4988)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__Boot__booted', quals=[], storage=['inline', 'static'] (at pp.c:4992)
    FuncDecl: quals=None (at pp.c:4992)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BaseStationP__Boot__booted', quals=[] (at pp.c:4992)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__RadioControl__startDone', quals=[], storage=['inline', 'static'] (at pp.c:4994)
    FuncDecl: quals=None (at pp.c:4994)
      ParamList:  (at pp.c:4994)
        Decl: name='error', quals=[], storage=[] (at pp.c:4994)
          TypeDecl: declname='error', quals=[] (at pp.c:4994)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='BaseStationP__RadioControl__startDone', quals=[] (at pp.c:4994)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__SerialControl__startDone', quals=[], storage=['inline', 'static'] (at pp.c:5000)
    FuncDecl: quals=None (at pp.c:5000)
      ParamList:  (at pp.c:5000)
        Decl: name='error', quals=[], storage=[] (at pp.c:5000)
          TypeDecl: declname='error', quals=[] (at pp.c:5000)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='BaseStationP__SerialControl__startDone', quals=[] (at pp.c:5000)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__SerialControl__stopDone', quals=[], storage=['inline', 'static'] (at pp.c:5006)
    FuncDecl: quals=None (at pp.c:5006)
      ParamList:  (at pp.c:5006)
        Decl: name='error', quals=[], storage=[] (at pp.c:5006)
          TypeDecl: declname='error', quals=[] (at pp.c:5006)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='BaseStationP__SerialControl__stopDone', quals=[] (at pp.c:5006)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__RadioControl__stopDone', quals=[], storage=['inline', 'static'] (at pp.c:5007)
    FuncDecl: quals=None (at pp.c:5007)
      ParamList:  (at pp.c:5007)
        Decl: name='error', quals=[], storage=[] (at pp.c:5007)
          TypeDecl: declname='error', quals=[] (at pp.c:5007)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='BaseStationP__RadioControl__stopDone', quals=[] (at pp.c:5007)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__receive', quals=[], storage=['static'] (at pp.c:5011)
    FuncDecl: quals=None (at pp.c:5011)
      ParamList:  (at pp.c:5011)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5011)
          PtrDecl: quals=[] (at pp.c:5011)
            TypeDecl: declname='msg', quals=[] (at pp.c:5011)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:5011)
          PtrDecl: quals=[] (at pp.c:5011)
            TypeDecl: declname='payload', quals=[] (at pp.c:5011)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:5011)
          TypeDecl: declname='len', quals=[] (at pp.c:5011)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:5011)
        TypeDecl: declname='BaseStationP__receive', quals=[] (at pp.c:5011)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='BaseStationP__RadioSnoop__receive', quals=[], storage=['inline', 'static'] (at pp.c:5013)
    FuncDecl: quals=None (at pp.c:5013)
      ParamList:  (at pp.c:5013)
        Decl: name='id', quals=[], storage=[] (at pp.c:5013)
          TypeDecl: declname='id', quals=[] (at pp.c:5013)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5013)
          PtrDecl: quals=[] (at pp.c:5013)
            TypeDecl: declname='msg', quals=[] (at pp.c:5013)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:5014)
          PtrDecl: quals=[] (at pp.c:5014)
            TypeDecl: declname='payload', quals=[] (at pp.c:5014)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:5015)
          TypeDecl: declname='len', quals=[] (at pp.c:5015)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:5013)
        TypeDecl: declname='BaseStationP__RadioSnoop__receive', quals=[] (at pp.c:5013)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='BaseStationP__RadioReceive__receive', quals=[], storage=['inline', 'static'] (at pp.c:5019)
    FuncDecl: quals=None (at pp.c:5019)
      ParamList:  (at pp.c:5019)
        Decl: name='id', quals=[], storage=[] (at pp.c:5019)
          TypeDecl: declname='id', quals=[] (at pp.c:5019)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5019)
          PtrDecl: quals=[] (at pp.c:5019)
            TypeDecl: declname='msg', quals=[] (at pp.c:5019)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:5020)
          PtrDecl: quals=[] (at pp.c:5020)
            TypeDecl: declname='payload', quals=[] (at pp.c:5020)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:5021)
          TypeDecl: declname='len', quals=[] (at pp.c:5021)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:5019)
        TypeDecl: declname='BaseStationP__RadioReceive__receive', quals=[] (at pp.c:5019)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='BaseStationP__receive', quals=[], storage=['static'] (at pp.c:5025)
    FuncDecl: quals=None (at pp.c:5025)
      ParamList:  (at pp.c:5025)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5025)
          PtrDecl: quals=[] (at pp.c:5025)
            TypeDecl: declname='msg', quals=[] (at pp.c:5025)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:5025)
          PtrDecl: quals=[] (at pp.c:5025)
            TypeDecl: declname='payload', quals=[] (at pp.c:5025)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:5025)
          TypeDecl: declname='len', quals=[] (at pp.c:5025)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:5025)
        TypeDecl: declname='BaseStationP__receive', quals=[] (at pp.c:5025)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='BaseStationP__tmpLen', quals=[], storage=[] (at pp.c:5027)
    TypeDecl: declname='BaseStationP__tmpLen', quals=[] (at pp.c:5027)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='BaseStationP__uartSendTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:5029)
    FuncDecl: quals=None (at pp.c:5029)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BaseStationP__uartSendTask__runTask', quals=[] (at pp.c:5029)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__UartSend__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:5031)
    FuncDecl: quals=None (at pp.c:5031)
      ParamList:  (at pp.c:5031)
        Decl: name='id', quals=[], storage=[] (at pp.c:5031)
          TypeDecl: declname='id', quals=[] (at pp.c:5031)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5031)
          PtrDecl: quals=[] (at pp.c:5031)
            TypeDecl: declname='msg', quals=[] (at pp.c:5031)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:5031)
          TypeDecl: declname='error', quals=[] (at pp.c:5031)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='BaseStationP__UartSend__sendDone', quals=[] (at pp.c:5031)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__UartReceive__receive', quals=[], storage=['inline', 'static'] (at pp.c:5033)
    FuncDecl: quals=None (at pp.c:5033)
      ParamList:  (at pp.c:5033)
        Decl: name='id', quals=[], storage=[] (at pp.c:5033)
          TypeDecl: declname='id', quals=[] (at pp.c:5033)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5033)
          PtrDecl: quals=[] (at pp.c:5033)
            TypeDecl: declname='msg', quals=[] (at pp.c:5033)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:5034)
          PtrDecl: quals=[] (at pp.c:5034)
            TypeDecl: declname='payload', quals=[] (at pp.c:5034)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:5035)
          TypeDecl: declname='len', quals=[] (at pp.c:5035)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:5033)
        TypeDecl: declname='BaseStationP__UartReceive__receive', quals=[] (at pp.c:5033)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='BaseStationP__radioSendTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:5037)
    FuncDecl: quals=None (at pp.c:5037)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BaseStationP__radioSendTask__runTask', quals=[] (at pp.c:5037)
        IdentifierType: names=['void'] (at None)
  Decl: name='BaseStationP__RadioSend__sendDone', quals=[], storage=['static'] (at pp.c:5039)
    FuncDecl: quals=None (at pp.c:5039)
      ParamList:  (at pp.c:5039)
        Decl: name='id', quals=[], storage=[] (at pp.c:5039)
          TypeDecl: declname='id', quals=[] (at pp.c:5039)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5039)
          PtrDecl: quals=[] (at pp.c:5039)
            TypeDecl: declname='msg', quals=[] (at pp.c:5039)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:5039)
          TypeDecl: declname='error', quals=[] (at pp.c:5039)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='BaseStationP__RadioSend__sendDone', quals=[] (at pp.c:5039)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led0__toggle', quals=[], storage=['static'] (at pp.c:5041)
    FuncDecl: quals=None (at pp.c:5041)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led0__toggle', quals=[] (at pp.c:5041)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led0__makeOutput', quals=[], storage=['static'] (at pp.c:5045)
    FuncDecl: quals=None (at pp.c:5045)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led0__makeOutput', quals=[] (at pp.c:5045)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led0__set', quals=[], storage=['static'] (at pp.c:5047)
    FuncDecl: quals=None (at pp.c:5047)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led0__set', quals=[] (at pp.c:5047)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led1__toggle', quals=[], storage=['static'] (at pp.c:5049)
    FuncDecl: quals=None (at pp.c:5049)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led1__toggle', quals=[] (at pp.c:5049)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led1__makeOutput', quals=[], storage=['static'] (at pp.c:5053)
    FuncDecl: quals=None (at pp.c:5053)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led1__makeOutput', quals=[] (at pp.c:5053)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led1__set', quals=[], storage=['static'] (at pp.c:5055)
    FuncDecl: quals=None (at pp.c:5055)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led1__set', quals=[] (at pp.c:5055)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led2__toggle', quals=[], storage=['static'] (at pp.c:5057)
    FuncDecl: quals=None (at pp.c:5057)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led2__toggle', quals=[] (at pp.c:5057)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led2__makeOutput', quals=[], storage=['static'] (at pp.c:5061)
    FuncDecl: quals=None (at pp.c:5061)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led2__makeOutput', quals=[] (at pp.c:5061)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led2__set', quals=[], storage=['static'] (at pp.c:5063)
    FuncDecl: quals=None (at pp.c:5063)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led2__set', quals=[] (at pp.c:5063)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:5065)
    FuncDecl: quals=None (at pp.c:5065)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Init__init', quals=[] (at pp.c:5065)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='LedsP__Leds__led0Toggle', quals=[], storage=['inline', 'static'] (at pp.c:5067)
    FuncDecl: quals=None (at pp.c:5067)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led0Toggle', quals=[] (at pp.c:5067)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led1Toggle', quals=[], storage=['inline', 'static'] (at pp.c:5069)
    FuncDecl: quals=None (at pp.c:5069)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led1Toggle', quals=[] (at pp.c:5069)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led2Toggle', quals=[], storage=['inline', 'static'] (at pp.c:5071)
    FuncDecl: quals=None (at pp.c:5071)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led2Toggle', quals=[] (at pp.c:5071)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__0__IO__getRaw', quals=[], storage=['inline', 'static'] (at pp.c:5073)
    FuncDecl: quals=None (at pp.c:5073)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__0__IO__getRaw', quals=[] (at pp.c:5073)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430GeneralIOP__0__IO__get', quals=[], storage=['inline', 'static'] (at pp.c:5074)
    FuncDecl: quals=None (at pp.c:5074)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__0__IO__get', quals=[] (at pp.c:5074)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430GeneralIOP__3__IO__getRaw', quals=[], storage=['inline', 'static'] (at pp.c:5076)
    FuncDecl: quals=None (at pp.c:5076)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__3__IO__getRaw', quals=[] (at pp.c:5076)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430GeneralIOP__3__IO__get', quals=[], storage=['inline', 'static'] (at pp.c:5077)
    FuncDecl: quals=None (at pp.c:5077)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__3__IO__get', quals=[] (at pp.c:5077)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430GeneralIOP__4__IO__getRaw', quals=[], storage=['inline', 'static'] (at pp.c:5079)
    FuncDecl: quals=None (at pp.c:5079)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__4__IO__getRaw', quals=[] (at pp.c:5079)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430GeneralIOP__4__IO__get', quals=[], storage=['inline', 'static'] (at pp.c:5080)
    FuncDecl: quals=None (at pp.c:5080)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__4__IO__get', quals=[] (at pp.c:5080)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430GeneralIOP__4__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:5081)
    FuncDecl: quals=None (at pp.c:5081)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__4__IO__makeInput', quals=[] (at pp.c:5081)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__12__IO__clr', quals=[], storage=['inline', 'static'] (at pp.c:5083)
    FuncDecl: quals=None (at pp.c:5083)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__12__IO__clr', quals=[] (at pp.c:5083)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__12__IO__getRaw', quals=[], storage=['inline', 'static'] (at pp.c:5085)
    FuncDecl: quals=None (at pp.c:5085)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__12__IO__getRaw', quals=[] (at pp.c:5085)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430GeneralIOP__12__IO__get', quals=[], storage=['inline', 'static'] (at pp.c:5086)
    FuncDecl: quals=None (at pp.c:5086)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__12__IO__get', quals=[] (at pp.c:5086)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430GeneralIOP__12__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:5087)
    FuncDecl: quals=None (at pp.c:5087)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__12__IO__makeInput', quals=[] (at pp.c:5087)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__12__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:5089)
    FuncDecl: quals=None (at pp.c:5089)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__12__IO__makeOutput', quals=[] (at pp.c:5089)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__17__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5091)
    FuncDecl: quals=None (at pp.c:5091)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__17__IO__selectModuleFunc', quals=[] (at pp.c:5091)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__17__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:5093)
    FuncDecl: quals=None (at pp.c:5093)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__17__IO__selectIOFunc', quals=[] (at pp.c:5093)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__18__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5095)
    FuncDecl: quals=None (at pp.c:5095)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__18__IO__selectModuleFunc', quals=[] (at pp.c:5095)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__18__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:5097)
    FuncDecl: quals=None (at pp.c:5097)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__18__IO__selectIOFunc', quals=[] (at pp.c:5097)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__19__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5099)
    FuncDecl: quals=None (at pp.c:5099)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__19__IO__selectModuleFunc', quals=[] (at pp.c:5099)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__19__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:5101)
    FuncDecl: quals=None (at pp.c:5101)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__19__IO__selectIOFunc', quals=[] (at pp.c:5101)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__20__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:5103)
    FuncDecl: quals=None (at pp.c:5103)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__20__IO__selectIOFunc', quals=[] (at pp.c:5103)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__21__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:5105)
    FuncDecl: quals=None (at pp.c:5105)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__21__IO__selectIOFunc', quals=[] (at pp.c:5105)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__22__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5107)
    FuncDecl: quals=None (at pp.c:5107)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__22__IO__selectModuleFunc', quals=[] (at pp.c:5107)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__22__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:5109)
    FuncDecl: quals=None (at pp.c:5109)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__22__IO__selectIOFunc', quals=[] (at pp.c:5109)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__23__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5111)
    FuncDecl: quals=None (at pp.c:5111)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__23__IO__selectModuleFunc', quals=[] (at pp.c:5111)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__23__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:5113)
    FuncDecl: quals=None (at pp.c:5113)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__23__IO__selectIOFunc', quals=[] (at pp.c:5113)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:5115)
    FuncDecl: quals=None (at pp.c:5115)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__set', quals=[] (at pp.c:5115)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:5117)
    FuncDecl: quals=None (at pp.c:5117)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__toggle', quals=[] (at pp.c:5117)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:5122)
    FuncDecl: quals=None (at pp.c:5122)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[] (at pp.c:5122)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__25__IO__getRaw', quals=[], storage=['inline', 'static'] (at pp.c:5124)
    FuncDecl: quals=None (at pp.c:5124)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__25__IO__getRaw', quals=[] (at pp.c:5124)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430GeneralIOP__25__IO__get', quals=[], storage=['inline', 'static'] (at pp.c:5125)
    FuncDecl: quals=None (at pp.c:5125)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__25__IO__get', quals=[] (at pp.c:5125)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430GeneralIOP__25__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:5126)
    FuncDecl: quals=None (at pp.c:5126)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__25__IO__makeInput', quals=[] (at pp.c:5126)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__25__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5130)
    FuncDecl: quals=None (at pp.c:5130)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__25__IO__selectModuleFunc', quals=[] (at pp.c:5130)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__25__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:5132)
    FuncDecl: quals=None (at pp.c:5132)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__25__IO__selectIOFunc', quals=[] (at pp.c:5132)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__26__IO__set', quals=[], storage=['static'] (at pp.c:5134)
    FuncDecl: quals=None (at pp.c:5134)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__26__IO__set', quals=[] (at pp.c:5134)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__26__IO__clr', quals=[], storage=['static'] (at pp.c:5135)
    FuncDecl: quals=None (at pp.c:5135)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__26__IO__clr', quals=[] (at pp.c:5135)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__26__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:5141)
    FuncDecl: quals=None (at pp.c:5141)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__26__IO__makeOutput', quals=[] (at pp.c:5141)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:5143)
    FuncDecl: quals=None (at pp.c:5143)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__set', quals=[] (at pp.c:5143)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:5145)
    FuncDecl: quals=None (at pp.c:5145)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__toggle', quals=[] (at pp.c:5145)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:5150)
    FuncDecl: quals=None (at pp.c:5150)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[] (at pp.c:5150)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__29__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:5152)
    FuncDecl: quals=None (at pp.c:5152)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__29__IO__set', quals=[] (at pp.c:5152)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__29__IO__clr', quals=[], storage=['inline', 'static'] (at pp.c:5153)
    FuncDecl: quals=None (at pp.c:5153)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__29__IO__clr', quals=[] (at pp.c:5153)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__29__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:5159)
    FuncDecl: quals=None (at pp.c:5159)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__29__IO__makeOutput', quals=[] (at pp.c:5159)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__30__IO__set', quals=[], storage=['static'] (at pp.c:5161)
    FuncDecl: quals=None (at pp.c:5161)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__30__IO__set', quals=[] (at pp.c:5161)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__30__IO__clr', quals=[], storage=['static'] (at pp.c:5162)
    FuncDecl: quals=None (at pp.c:5162)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__30__IO__clr', quals=[] (at pp.c:5162)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__30__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:5168)
    FuncDecl: quals=None (at pp.c:5168)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__30__IO__makeOutput', quals=[] (at pp.c:5168)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:5170)
    FuncDecl: quals=None (at pp.c:5170)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__set', quals=[] (at pp.c:5170)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__toggle', quals=[], storage=['static'] (at pp.c:5172)
    FuncDecl: quals=None (at pp.c:5172)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__toggle', quals=[] (at pp.c:5172)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:5177)
    FuncDecl: quals=None (at pp.c:5177)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[] (at pp.c:5177)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__33__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:5181)
    FuncDecl: quals=None (at pp.c:5181)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__33__IO__selectIOFunc', quals=[] (at pp.c:5181)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__34__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:5183)
    FuncDecl: quals=None (at pp.c:5183)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__34__IO__selectIOFunc', quals=[] (at pp.c:5183)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__35__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:5185)
    FuncDecl: quals=None (at pp.c:5185)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__35__IO__selectIOFunc', quals=[] (at pp.c:5185)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__HplGeneralIO__toggle', quals=[], storage=['static'] (at pp.c:5187)
    FuncDecl: quals=None (at pp.c:5187)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__toggle', quals=[] (at pp.c:5187)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__HplGeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:5189)
    FuncDecl: quals=None (at pp.c:5189)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__makeOutput', quals=[] (at pp.c:5189)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__HplGeneralIO__set', quals=[], storage=['static'] (at pp.c:5191)
    FuncDecl: quals=None (at pp.c:5191)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__set', quals=[] (at pp.c:5191)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:5193)
    FuncDecl: quals=None (at pp.c:5193)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__set', quals=[] (at pp.c:5193)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:5195)
    FuncDecl: quals=None (at pp.c:5195)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__toggle', quals=[] (at pp.c:5195)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:5199)
    FuncDecl: quals=None (at pp.c:5199)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__makeOutput', quals=[] (at pp.c:5199)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__HplGeneralIO__toggle', quals=[], storage=['static'] (at pp.c:5201)
    FuncDecl: quals=None (at pp.c:5201)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__toggle', quals=[] (at pp.c:5201)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__HplGeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:5203)
    FuncDecl: quals=None (at pp.c:5203)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__makeOutput', quals=[] (at pp.c:5203)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__HplGeneralIO__set', quals=[], storage=['static'] (at pp.c:5205)
    FuncDecl: quals=None (at pp.c:5205)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__set', quals=[] (at pp.c:5205)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:5207)
    FuncDecl: quals=None (at pp.c:5207)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__set', quals=[] (at pp.c:5207)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:5209)
    FuncDecl: quals=None (at pp.c:5209)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__toggle', quals=[] (at pp.c:5209)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:5213)
    FuncDecl: quals=None (at pp.c:5213)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__makeOutput', quals=[] (at pp.c:5213)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__HplGeneralIO__toggle', quals=[], storage=['static'] (at pp.c:5215)
    FuncDecl: quals=None (at pp.c:5215)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__HplGeneralIO__toggle', quals=[] (at pp.c:5215)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__HplGeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:5217)
    FuncDecl: quals=None (at pp.c:5217)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__HplGeneralIO__makeOutput', quals=[] (at pp.c:5217)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__HplGeneralIO__set', quals=[], storage=['static'] (at pp.c:5219)
    FuncDecl: quals=None (at pp.c:5219)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__HplGeneralIO__set', quals=[] (at pp.c:5219)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:5221)
    FuncDecl: quals=None (at pp.c:5221)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__GeneralIO__set', quals=[] (at pp.c:5221)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__GeneralIO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:5223)
    FuncDecl: quals=None (at pp.c:5223)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__GeneralIO__toggle', quals=[] (at pp.c:5223)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:5227)
    FuncDecl: quals=None (at pp.c:5227)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__GeneralIO__makeOutput', quals=[] (at pp.c:5227)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__SplitControl__startDone', quals=[], storage=['static'] (at pp.c:5229)
    FuncDecl: quals=None (at pp.c:5229)
      ParamList:  (at pp.c:5229)
        Decl: name='error', quals=[], storage=[] (at pp.c:5229)
          TypeDecl: declname='error', quals=[] (at pp.c:5229)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SplitControl__startDone', quals=[] (at pp.c:5229)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__SplitControl__stopDone', quals=[], storage=['static'] (at pp.c:5231)
    FuncDecl: quals=None (at pp.c:5231)
      ParamList:  (at pp.c:5231)
        Decl: name='error', quals=[], storage=[] (at pp.c:5231)
          TypeDecl: declname='error', quals=[] (at pp.c:5231)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SplitControl__stopDone', quals=[] (at pp.c:5231)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__RadioBackoff__requestCca', quals=[], storage=['static'] (at pp.c:5233)
    FuncDecl: quals=None (at pp.c:5233)
      ParamList:  (at pp.c:5233)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5233)
          PtrDecl: quals=[] (at pp.c:5233)
            TypeDecl: declname='msg', quals=[] (at pp.c:5233)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__RadioBackoff__requestCca', quals=[] (at pp.c:5233)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__RadioBackoff__requestInitialBackoff', quals=[], storage=['static'] (at pp.c:5235)
    FuncDecl: quals=None (at pp.c:5235)
      ParamList:  (at pp.c:5235)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5235)
          PtrDecl: quals=[] (at pp.c:5235)
            TypeDecl: declname='msg', quals=[] (at pp.c:5235)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__RadioBackoff__requestInitialBackoff', quals=[] (at pp.c:5235)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__RadioBackoff__requestCongestionBackoff', quals=[], storage=['static'] (at pp.c:5242)
    FuncDecl: quals=None (at pp.c:5242)
      ParamList:  (at pp.c:5242)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5242)
          PtrDecl: quals=[] (at pp.c:5242)
            TypeDecl: declname='msg', quals=[] (at pp.c:5242)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__RadioBackoff__requestCongestionBackoff', quals=[] (at pp.c:5242)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__SubBackoff__setCongestionBackoff', quals=[], storage=['static'] (at pp.c:5244)
    FuncDecl: quals=None (at pp.c:5244)
      ParamList:  (at pp.c:5244)
        Decl: name='backoffTime', quals=[], storage=[] (at pp.c:5244)
          TypeDecl: declname='backoffTime', quals=[] (at pp.c:5244)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SubBackoff__setCongestionBackoff', quals=[] (at pp.c:5244)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__SubBackoff__setInitialBackoff', quals=[], storage=['static'] (at pp.c:5246)
    FuncDecl: quals=None (at pp.c:5246)
      ParamList:  (at pp.c:5246)
        Decl: name='backoffTime', quals=[], storage=[] (at pp.c:5246)
          TypeDecl: declname='backoffTime', quals=[] (at pp.c:5246)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SubBackoff__setInitialBackoff', quals=[] (at pp.c:5246)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__CC2420Transmit__send', quals=[], storage=['static'] (at pp.c:5248)
    FuncDecl: quals=None (at pp.c:5248)
      ParamList:  (at pp.c:5248)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:5248)
          PtrDecl: quals=[] (at pp.c:5248)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:5248)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='useCca', quals=[], storage=[] (at pp.c:5248)
          TypeDecl: declname='useCca', quals=[] (at pp.c:5248)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Transmit__send', quals=[] (at pp.c:5248)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__Send__sendDone', quals=[], storage=['static'] (at pp.c:5250)
    FuncDecl: quals=None (at pp.c:5250)
      ParamList:  (at pp.c:5252)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5252)
          PtrDecl: quals=[] (at pp.c:5252)
            TypeDecl: declname='msg', quals=[] (at pp.c:5252)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:5256)
          TypeDecl: declname='error', quals=[] (at pp.c:5256)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__Send__sendDone', quals=[] (at pp.c:5250)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__Random__rand16', quals=[], storage=['static'] (at pp.c:5258)
    FuncDecl: quals=None (at pp.c:5258)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__Random__rand16', quals=[] (at pp.c:5258)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420CsmaP__SubControl__start', quals=[], storage=['static'] (at pp.c:5260)
    FuncDecl: quals=None (at pp.c:5260)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__SubControl__start', quals=[] (at pp.c:5260)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__SubControl__stop', quals=[], storage=['static'] (at pp.c:5270)
    FuncDecl: quals=None (at pp.c:5270)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__SubControl__stop', quals=[] (at pp.c:5270)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__CC2420PacketBody__getHeader', quals=[], storage=['static'] (at pp.c:5272)
    FuncDecl: quals=None (at pp.c:5272)
      ParamList:  (at pp.c:5272)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5272)
          PtrDecl: quals=[] (at pp.c:5272)
            TypeDecl: declname='msg', quals=[] (at pp.c:5272)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:5272)
        TypeDecl: declname='CC2420CsmaP__CC2420PacketBody__getHeader', quals=[] (at pp.c:5272)
          IdentifierType: names=['cc2420_header_t'] (at None)
  Decl: name='CC2420CsmaP__CC2420PacketBody__getMetadata', quals=[], storage=['static'] (at pp.c:5283)
    FuncDecl: quals=None (at pp.c:5283)
      ParamList:  (at pp.c:5283)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5283)
          PtrDecl: quals=[] (at pp.c:5283)
            TypeDecl: declname='msg', quals=[] (at pp.c:5283)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:5283)
        TypeDecl: declname='CC2420CsmaP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:5283)
          IdentifierType: names=['cc2420_metadata_t'] (at None)
  Decl: name='CC2420CsmaP__CC2420Power__startOscillator', quals=[], storage=['static'] (at pp.c:5285)
    FuncDecl: quals=None (at pp.c:5285)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Power__startOscillator', quals=[] (at pp.c:5285)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__CC2420Power__rxOn', quals=[], storage=['static'] (at pp.c:5287)
    FuncDecl: quals=None (at pp.c:5287)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Power__rxOn', quals=[] (at pp.c:5287)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__CC2420Power__startVReg', quals=[], storage=['static'] (at pp.c:5289)
    FuncDecl: quals=None (at pp.c:5289)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Power__startVReg', quals=[] (at pp.c:5289)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__CC2420Power__stopVReg', quals=[], storage=['static'] (at pp.c:5291)
    FuncDecl: quals=None (at pp.c:5291)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Power__stopVReg', quals=[] (at pp.c:5291)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__Resource__release', quals=[], storage=['static'] (at pp.c:5293)
    FuncDecl: quals=None (at pp.c:5293)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__Resource__release', quals=[] (at pp.c:5293)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__Resource__request', quals=[], storage=['static'] (at pp.c:5295)
    FuncDecl: quals=None (at pp.c:5295)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__Resource__request', quals=[] (at pp.c:5295)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__SplitControlState__isState', quals=[], storage=['static'] (at pp.c:5297)
    FuncDecl: quals=None (at pp.c:5297)
      ParamList:  (at pp.c:5297)
        Decl: name='myState', quals=[], storage=[] (at pp.c:5297)
          TypeDecl: declname='myState', quals=[] (at pp.c:5297)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SplitControlState__isState', quals=[] (at pp.c:5297)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420CsmaP__SplitControlState__requestState', quals=[], storage=['static'] (at pp.c:5299)
    FuncDecl: quals=None (at pp.c:5299)
      ParamList:  (at pp.c:5299)
        Decl: name='reqState', quals=[], storage=[] (at pp.c:5299)
          TypeDecl: declname='reqState', quals=[] (at pp.c:5299)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SplitControlState__requestState', quals=[] (at pp.c:5299)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__SplitControlState__forceState', quals=[], storage=['static'] (at pp.c:5305)
    FuncDecl: quals=None (at pp.c:5305)
      ParamList:  (at pp.c:5305)
        Decl: name='reqState', quals=[], storage=[] (at pp.c:5305)
          TypeDecl: declname='reqState', quals=[] (at pp.c:5305)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SplitControlState__forceState', quals=[] (at pp.c:5305)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__sendDone_task__postTask', quals=[], storage=['static'] (at pp.c:5307)
    FuncDecl: quals=None (at pp.c:5307)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__sendDone_task__postTask', quals=[] (at pp.c:5307)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__stopDone_task__postTask', quals=[], storage=['static'] (at pp.c:5309)
    FuncDecl: quals=None (at pp.c:5309)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__stopDone_task__postTask', quals=[] (at pp.c:5309)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__startDone_task__postTask', quals=[], storage=['static'] (at pp.c:5311)
    FuncDecl: quals=None (at pp.c:5311)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__startDone_task__postTask', quals=[] (at pp.c:5311)
        IdentifierType: names=['error_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:5313)
    Enum: name='CC2420CsmaP____nesc_unnamed4317' (at pp.c:5313)
      EnumeratorList:  (at pp.c:5315)
        Enumerator: name='CC2420CsmaP__startDone_task' (at pp.c:5315)
          Constant: type='int', value='2U' (at pp.c:5315)
  Typedef: name='CC2420CsmaP____nesc_sillytask_startDone_task', quals=[], storage=['typedef'] (at pp.c:5318)
    ArrayDecl:  (at pp.c:5318)
      TypeDecl: declname='CC2420CsmaP____nesc_sillytask_startDone_task', quals=[] (at pp.c:5318)
        IdentifierType: names=['int'] (at None)
      ID: name='CC2420CsmaP__startDone_task' (at pp.c:5318)
  Decl: name=None, quals=[], storage=[] (at pp.c:5319)
    Enum: name='CC2420CsmaP____nesc_unnamed4318' (at pp.c:5319)
      EnumeratorList:  (at pp.c:5321)
        Enumerator: name='CC2420CsmaP__stopDone_task' (at pp.c:5321)
          Constant: type='int', value='3U' (at pp.c:5321)
  Typedef: name='CC2420CsmaP____nesc_sillytask_stopDone_task', quals=[], storage=['typedef'] (at pp.c:5324)
    ArrayDecl:  (at pp.c:5324)
      TypeDecl: declname='CC2420CsmaP____nesc_sillytask_stopDone_task', quals=[] (at pp.c:5324)
        IdentifierType: names=['int'] (at None)
      ID: name='CC2420CsmaP__stopDone_task' (at pp.c:5324)
  Decl: name=None, quals=[], storage=[] (at pp.c:5325)
    Enum: name='CC2420CsmaP____nesc_unnamed4319' (at pp.c:5325)
      EnumeratorList:  (at pp.c:5327)
        Enumerator: name='CC2420CsmaP__sendDone_task' (at pp.c:5327)
          Constant: type='int', value='4U' (at pp.c:5327)
  Typedef: name='CC2420CsmaP____nesc_sillytask_sendDone_task', quals=[], storage=['typedef'] (at pp.c:5330)
    ArrayDecl:  (at pp.c:5330)
      TypeDecl: declname='CC2420CsmaP____nesc_sillytask_sendDone_task', quals=[] (at pp.c:5330)
        IdentifierType: names=['int'] (at None)
      ID: name='CC2420CsmaP__sendDone_task' (at pp.c:5330)
  Decl: name=None, quals=[], storage=[] (at pp.c:5332)
    Enum: name='CC2420CsmaP____nesc_unnamed4320' (at pp.c:5332)
      EnumeratorList:  (at pp.c:5333)
        Enumerator: name='CC2420CsmaP__S_STOPPED' (at pp.c:5333)
        Enumerator: name='CC2420CsmaP__S_STARTING' (at pp.c:5334)
        Enumerator: name='CC2420CsmaP__S_STARTED' (at pp.c:5335)
        Enumerator: name='CC2420CsmaP__S_STOPPING' (at pp.c:5336)
        Enumerator: name='CC2420CsmaP__S_TRANSMITTING' (at pp.c:5337)
  Decl: name='CC2420CsmaP__m_msg', quals=[], storage=[] (at pp.c:5340)
    PtrDecl: quals=[] (at pp.c:5340)
      TypeDecl: declname='CC2420CsmaP__m_msg', quals=[] (at pp.c:5340)
        IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420CsmaP__sendErr', quals=[], storage=[] (at pp.c:5342)
    TypeDecl: declname='CC2420CsmaP__sendErr', quals=[] (at pp.c:5342)
      IdentifierType: names=['error_t'] (at None)
    ID: name='SUCCESS' (at pp.c:5342)
  Decl: name='CC2420CsmaP__ccaOn', quals=[], storage=[] (at pp.c:5345)
    TypeDecl: declname='CC2420CsmaP__ccaOn', quals=[] (at pp.c:5345)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420CsmaP__shutdown', quals=[], storage=['inline', 'static'] (at pp.c:5352)
    FuncDecl: quals=None (at pp.c:5352)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__shutdown', quals=[] (at pp.c:5352)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__SplitControl__start', quals=[], storage=['inline', 'static'] (at pp.c:5355)
    FuncDecl: quals=None (at pp.c:5355)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__SplitControl__start', quals=[] (at pp.c:5355)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__Send__send', quals=[], storage=['inline', 'static'] (at pp.c:5357)
    FuncDecl: quals=None (at pp.c:5357)
      ParamList:  (at pp.c:5357)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:5357)
          PtrDecl: quals=[] (at pp.c:5357)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:5357)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:5357)
          TypeDecl: declname='len', quals=[] (at pp.c:5357)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__Send__send', quals=[] (at pp.c:5357)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__Send__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:5359)
    FuncDecl: quals=None (at pp.c:5359)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__Send__maxPayloadLength', quals=[] (at pp.c:5359)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420CsmaP__CC2420Transmit__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:5361)
    FuncDecl: quals=None (at pp.c:5361)
      ParamList:  (at pp.c:5361)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:5361)
          PtrDecl: quals=[] (at pp.c:5361)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:5361)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='err', quals=[], storage=[] (at pp.c:5361)
          TypeDecl: declname='err', quals=[] (at pp.c:5361)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Transmit__sendDone', quals=[] (at pp.c:5361)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__CC2420Power__startVRegDone', quals=[], storage=['inline', 'static'] (at pp.c:5366)
    FuncDecl: quals=None (at pp.c:5366)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Power__startVRegDone', quals=[] (at pp.c:5366)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__Resource__granted', quals=[], storage=['inline', 'static'] (at pp.c:5370)
    FuncDecl: quals=None (at pp.c:5370)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__Resource__granted', quals=[] (at pp.c:5370)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__CC2420Power__startOscillatorDone', quals=[], storage=['inline', 'static'] (at pp.c:5374)
    FuncDecl: quals=None (at pp.c:5374)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Power__startOscillatorDone', quals=[] (at pp.c:5374)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__SubBackoff__requestInitialBackoff', quals=[], storage=['inline', 'static'] (at pp.c:5379)
    FuncDecl: quals=None (at pp.c:5379)
      ParamList:  (at pp.c:5379)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5379)
          PtrDecl: quals=[] (at pp.c:5379)
            TypeDecl: declname='msg', quals=[] (at pp.c:5379)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SubBackoff__requestInitialBackoff', quals=[] (at pp.c:5379)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__SubBackoff__requestCongestionBackoff', quals=[], storage=['inline', 'static'] (at pp.c:5386)
    FuncDecl: quals=None (at pp.c:5386)
      ParamList:  (at pp.c:5386)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5386)
          PtrDecl: quals=[] (at pp.c:5386)
            TypeDecl: declname='msg', quals=[] (at pp.c:5386)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SubBackoff__requestCongestionBackoff', quals=[] (at pp.c:5386)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__sendDone_task__runTask', quals=[], storage=['inline', 'static'] (at pp.c:5388)
    FuncDecl: quals=None (at pp.c:5388)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__sendDone_task__runTask', quals=[] (at pp.c:5388)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__startDone_task__runTask', quals=[], storage=['inline', 'static'] (at pp.c:5390)
    FuncDecl: quals=None (at pp.c:5390)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__startDone_task__runTask', quals=[] (at pp.c:5390)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__stopDone_task__runTask', quals=[], storage=['inline', 'static'] (at pp.c:5398)
    FuncDecl: quals=None (at pp.c:5398)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__stopDone_task__runTask', quals=[] (at pp.c:5398)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__shutdown', quals=[], storage=['inline', 'static'] (at pp.c:5408)
    FuncDecl: quals=None (at pp.c:5408)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__shutdown', quals=[] (at pp.c:5408)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__syncDone', quals=[], storage=['static'] (at pp.c:5410)
    FuncDecl: quals=None (at pp.c:5410)
      ParamList:  (at pp.c:5410)
        Decl: name='error', quals=[], storage=[] (at pp.c:5410)
          TypeDecl: declname='error', quals=[] (at pp.c:5410)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__syncDone', quals=[] (at pp.c:5410)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__RXCTRL1__write', quals=[], storage=['static'] (at pp.c:5412)
    FuncDecl: quals=None (at pp.c:5412)
      ParamList:  (at pp.c:5412)
        Decl: name='data', quals=[], storage=[] (at pp.c:5412)
          TypeDecl: declname='data', quals=[] (at pp.c:5412)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420ControlP__RXCTRL1__write', quals=[] (at pp.c:5412)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ControlP__LocalIeeeEui64__getId', quals=[], storage=['static'] (at pp.c:5414)
    FuncDecl: quals=None (at pp.c:5414)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__LocalIeeeEui64__getId', quals=[] (at pp.c:5414)
        IdentifierType: names=['ieee_eui64_t'] (at None)
  Decl: name='CC2420ControlP__StartupTimer__start', quals=[], storage=['static'] (at pp.c:5416)
    FuncDecl: quals=None (at pp.c:5416)
      ParamList:  (at pp.c:5416)
        Decl: name='dt', quals=[], storage=[] (at pp.c:5416)
          TypeDecl: declname='dt', quals=[] (at pp.c:5416)
            IdentifierType: names=['CC2420ControlP__StartupTimer__size_type'] (at None)
      TypeDecl: declname='CC2420ControlP__StartupTimer__start', quals=[] (at pp.c:5416)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__MDMCTRL0__write', quals=[], storage=['static'] (at pp.c:5418)
    FuncDecl: quals=None (at pp.c:5418)
      ParamList:  (at pp.c:5418)
        Decl: name='data', quals=[], storage=[] (at pp.c:5418)
          TypeDecl: declname='data', quals=[] (at pp.c:5418)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420ControlP__MDMCTRL0__write', quals=[] (at pp.c:5418)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ControlP__RSTN__makeOutput', quals=[], storage=['static'] (at pp.c:5420)
    FuncDecl: quals=None (at pp.c:5420)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__RSTN__makeOutput', quals=[] (at pp.c:5420)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__RSTN__set', quals=[], storage=['static'] (at pp.c:5422)
    FuncDecl: quals=None (at pp.c:5422)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__RSTN__set', quals=[] (at pp.c:5422)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__RSTN__clr', quals=[], storage=['static'] (at pp.c:5423)
    FuncDecl: quals=None (at pp.c:5423)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__RSTN__clr', quals=[] (at pp.c:5423)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__ReadRssi__readDone', quals=[], storage=['static'] (at pp.c:5425)
    FuncDecl: quals=None (at pp.c:5425)
      ParamList:  (at pp.c:5425)
        Decl: name='result', quals=[], storage=[] (at pp.c:5425)
          TypeDecl: declname='result', quals=[] (at pp.c:5425)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='val', quals=[], storage=[] (at pp.c:5425)
          TypeDecl: declname='val', quals=[] (at pp.c:5425)
            IdentifierType: names=['CC2420ControlP__ReadRssi__val_t'] (at None)
      TypeDecl: declname='CC2420ControlP__ReadRssi__readDone', quals=[] (at pp.c:5425)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__syncDone__postTask', quals=[], storage=['static'] (at pp.c:5427)
    FuncDecl: quals=None (at pp.c:5427)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__syncDone__postTask', quals=[] (at pp.c:5427)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__RSSI__read', quals=[], storage=['static'] (at pp.c:5429)
    FuncDecl: quals=None (at pp.c:5429)
      ParamList:  (at pp.c:5429)
        Decl: name='data', quals=[], storage=[] (at pp.c:5429)
          PtrDecl: quals=[] (at pp.c:5429)
            TypeDecl: declname='data', quals=[] (at pp.c:5429)
              IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420ControlP__RSSI__read', quals=[] (at pp.c:5429)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ControlP__IOCFG0__write', quals=[], storage=['static'] (at pp.c:5437)
    FuncDecl: quals=None (at pp.c:5437)
      ParamList:  (at pp.c:5437)
        Decl: name='data', quals=[], storage=[] (at pp.c:5437)
          TypeDecl: declname='data', quals=[] (at pp.c:5437)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420ControlP__IOCFG0__write', quals=[] (at pp.c:5437)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ControlP__ActiveMessageAddress__amAddress', quals=[], storage=['static'] (at pp.c:5439)
    FuncDecl: quals=None (at pp.c:5439)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__ActiveMessageAddress__amAddress', quals=[] (at pp.c:5439)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='CC2420ControlP__ActiveMessageAddress__amGroup', quals=[], storage=['static'] (at pp.c:5444)
    FuncDecl: quals=None (at pp.c:5444)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__ActiveMessageAddress__amGroup', quals=[] (at pp.c:5444)
        IdentifierType: names=['am_group_t'] (at None)
  Decl: name='CC2420ControlP__CSN__makeOutput', quals=[], storage=['static'] (at pp.c:5446)
    FuncDecl: quals=None (at pp.c:5446)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CSN__makeOutput', quals=[] (at pp.c:5446)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__CSN__set', quals=[], storage=['static'] (at pp.c:5448)
    FuncDecl: quals=None (at pp.c:5448)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CSN__set', quals=[] (at pp.c:5448)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__CSN__clr', quals=[], storage=['static'] (at pp.c:5449)
    FuncDecl: quals=None (at pp.c:5449)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CSN__clr', quals=[] (at pp.c:5449)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__VREN__makeOutput', quals=[], storage=['static'] (at pp.c:5454)
    FuncDecl: quals=None (at pp.c:5454)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__VREN__makeOutput', quals=[] (at pp.c:5454)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__VREN__set', quals=[], storage=['static'] (at pp.c:5456)
    FuncDecl: quals=None (at pp.c:5456)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__VREN__set', quals=[] (at pp.c:5456)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__VREN__clr', quals=[], storage=['static'] (at pp.c:5457)
    FuncDecl: quals=None (at pp.c:5457)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__VREN__clr', quals=[] (at pp.c:5457)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__SXOSCON__strobe', quals=[], storage=['static'] (at pp.c:5459)
    FuncDecl: quals=None (at pp.c:5459)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SXOSCON__strobe', quals=[] (at pp.c:5459)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ControlP__SpiResource__release', quals=[], storage=['static'] (at pp.c:5461)
    FuncDecl: quals=None (at pp.c:5461)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SpiResource__release', quals=[] (at pp.c:5461)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__SpiResource__request', quals=[], storage=['static'] (at pp.c:5463)
    FuncDecl: quals=None (at pp.c:5463)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SpiResource__request', quals=[] (at pp.c:5463)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__SyncResource__release', quals=[], storage=['static'] (at pp.c:5465)
    FuncDecl: quals=None (at pp.c:5465)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SyncResource__release', quals=[] (at pp.c:5465)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__SyncResource__request', quals=[], storage=['static'] (at pp.c:5467)
    FuncDecl: quals=None (at pp.c:5467)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SyncResource__request', quals=[] (at pp.c:5467)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Power__startOscillatorDone', quals=[], storage=['static'] (at pp.c:5469)
    FuncDecl: quals=None (at pp.c:5469)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Power__startOscillatorDone', quals=[] (at pp.c:5469)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__CC2420Power__startVRegDone', quals=[], storage=['static'] (at pp.c:5471)
    FuncDecl: quals=None (at pp.c:5471)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Power__startVRegDone', quals=[] (at pp.c:5471)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__IOCFG1__write', quals=[], storage=['static'] (at pp.c:5473)
    FuncDecl: quals=None (at pp.c:5473)
      ParamList:  (at pp.c:5473)
        Decl: name='data', quals=[], storage=[] (at pp.c:5473)
          TypeDecl: declname='data', quals=[] (at pp.c:5473)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420ControlP__IOCFG1__write', quals=[] (at pp.c:5473)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ControlP__FSCTRL__write', quals=[], storage=['static'] (at pp.c:5475)
    FuncDecl: quals=None (at pp.c:5475)
      ParamList:  (at pp.c:5475)
        Decl: name='data', quals=[], storage=[] (at pp.c:5475)
          TypeDecl: declname='data', quals=[] (at pp.c:5475)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420ControlP__FSCTRL__write', quals=[] (at pp.c:5475)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ControlP__SRXON__strobe', quals=[], storage=['static'] (at pp.c:5477)
    FuncDecl: quals=None (at pp.c:5477)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SRXON__strobe', quals=[] (at pp.c:5477)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ControlP__Resource__granted', quals=[], storage=['static'] (at pp.c:5479)
    FuncDecl: quals=None (at pp.c:5479)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__Resource__granted', quals=[] (at pp.c:5479)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__IEEEADR__write', quals=[], storage=['static'] (at pp.c:5481)
    FuncDecl: quals=None (at pp.c:5481)
      ParamList:  (at pp.c:5481)
        Decl: name='offset', quals=[], storage=[] (at pp.c:5481)
          TypeDecl: declname='offset', quals=[] (at pp.c:5481)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:5481)
          PtrDecl: quals=[] (at pp.c:5481)
            TypeDecl: declname='data', quals=[] (at pp.c:5481)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:5481)
          TypeDecl: declname='length', quals=[] (at pp.c:5481)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420ControlP__IEEEADR__write', quals=[] (at pp.c:5481)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ControlP__InterruptCCA__disable', quals=[], storage=['static'] (at pp.c:5483)
    FuncDecl: quals=None (at pp.c:5483)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__InterruptCCA__disable', quals=[] (at pp.c:5483)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__InterruptCCA__enableRisingEdge', quals=[], storage=['static'] (at pp.c:5485)
    FuncDecl: quals=None (at pp.c:5485)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__InterruptCCA__enableRisingEdge', quals=[] (at pp.c:5485)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__RssiResource__release', quals=[], storage=['static'] (at pp.c:5487)
    FuncDecl: quals=None (at pp.c:5487)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__RssiResource__release', quals=[] (at pp.c:5487)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__SRFOFF__strobe', quals=[], storage=['static'] (at pp.c:5489)
    FuncDecl: quals=None (at pp.c:5489)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SRFOFF__strobe', quals=[] (at pp.c:5489)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:5491)
    Enum: name='CC2420ControlP____nesc_unnamed4321' (at pp.c:5491)
      EnumeratorList:  (at pp.c:5493)
        Enumerator: name='CC2420ControlP__sync' (at pp.c:5493)
          Constant: type='int', value='5U' (at pp.c:5493)
  Typedef: name='CC2420ControlP____nesc_sillytask_sync', quals=[], storage=['typedef'] (at pp.c:5496)
    ArrayDecl:  (at pp.c:5496)
      TypeDecl: declname='CC2420ControlP____nesc_sillytask_sync', quals=[] (at pp.c:5496)
        IdentifierType: names=['int'] (at None)
      ID: name='CC2420ControlP__sync' (at pp.c:5496)
  Decl: name=None, quals=[], storage=[] (at pp.c:5497)
    Enum: name='CC2420ControlP____nesc_unnamed4322' (at pp.c:5497)
      EnumeratorList:  (at pp.c:5499)
        Enumerator: name='CC2420ControlP__syncDone' (at pp.c:5499)
          Constant: type='int', value='6U' (at pp.c:5499)
  Typedef: name='CC2420ControlP____nesc_sillytask_syncDone', quals=[], storage=['typedef'] (at pp.c:5502)
    ArrayDecl:  (at pp.c:5502)
      TypeDecl: declname='CC2420ControlP____nesc_sillytask_syncDone', quals=[] (at pp.c:5502)
        IdentifierType: names=['int'] (at None)
      ID: name='CC2420ControlP__syncDone' (at pp.c:5502)
  Typedef: name='CC2420ControlP__cc2420_control_state_t', quals=[], storage=['typedef'] (at pp.c:5511)
    TypeDecl: declname='CC2420ControlP__cc2420_control_state_t', quals=[] (at pp.c:5511)
      Enum: name='CC2420ControlP____nesc_unnamed4323' (at pp.c:5505)
        EnumeratorList:  (at pp.c:5506)
          Enumerator: name='CC2420ControlP__S_VREG_STOPPED' (at pp.c:5506)
          Enumerator: name='CC2420ControlP__S_VREG_STARTING' (at pp.c:5507)
          Enumerator: name='CC2420ControlP__S_VREG_STARTED' (at pp.c:5508)
          Enumerator: name='CC2420ControlP__S_XOSC_STARTING' (at pp.c:5509)
          Enumerator: name='CC2420ControlP__S_XOSC_STARTED' (at pp.c:5510)
  Decl: name='CC2420ControlP__m_channel', quals=[], storage=[] (at pp.c:5513)
    TypeDecl: declname='CC2420ControlP__m_channel', quals=[] (at pp.c:5513)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ControlP__m_tx_power', quals=[], storage=[] (at pp.c:5515)
    TypeDecl: declname='CC2420ControlP__m_tx_power', quals=[] (at pp.c:5515)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ControlP__m_pan', quals=[], storage=[] (at pp.c:5517)
    TypeDecl: declname='CC2420ControlP__m_pan', quals=[] (at pp.c:5517)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420ControlP__m_short_addr', quals=[], storage=[] (at pp.c:5519)
    TypeDecl: declname='CC2420ControlP__m_short_addr', quals=[] (at pp.c:5519)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420ControlP__m_ext_addr', quals=[], storage=[] (at pp.c:5521)
    TypeDecl: declname='CC2420ControlP__m_ext_addr', quals=[] (at pp.c:5521)
      IdentifierType: names=['ieee_eui64_t'] (at None)
  Decl: name='CC2420ControlP__m_sync_busy', quals=[], storage=[] (at pp.c:5523)
    TypeDecl: declname='CC2420ControlP__m_sync_busy', quals=[] (at pp.c:5523)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__autoAckEnabled', quals=[], storage=[] (at pp.c:5526)
    TypeDecl: declname='CC2420ControlP__autoAckEnabled', quals=[] (at pp.c:5526)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__hwAutoAckDefault', quals=[], storage=[] (at pp.c:5529)
    TypeDecl: declname='CC2420ControlP__hwAutoAckDefault', quals=[] (at pp.c:5529)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__addressRecognition', quals=[], storage=[] (at pp.c:5532)
    TypeDecl: declname='CC2420ControlP__addressRecognition', quals=[] (at pp.c:5532)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__hwAddressRecognition', quals=[], storage=[] (at pp.c:5535)
    TypeDecl: declname='CC2420ControlP__hwAddressRecognition', quals=[] (at pp.c:5535)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__m_state', quals=[], storage=[] (at pp.c:5537)
    TypeDecl: declname='CC2420ControlP__m_state', quals=[] (at pp.c:5537)
      IdentifierType: names=['CC2420ControlP__cc2420_control_state_t'] (at None)
    ID: name='CC2420ControlP__S_VREG_STOPPED' (at pp.c:5537)
  Decl: name='CC2420ControlP__writeFsctrl', quals=[], storage=['static'] (at pp.c:5541)
    FuncDecl: quals=None (at pp.c:5541)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__writeFsctrl', quals=[] (at pp.c:5541)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__writeMdmctrl0', quals=[], storage=['static'] (at pp.c:5542)
    FuncDecl: quals=None (at pp.c:5542)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__writeMdmctrl0', quals=[] (at pp.c:5542)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__writeId', quals=[], storage=['static'] (at pp.c:5543)
    FuncDecl: quals=None (at pp.c:5543)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__writeId', quals=[] (at pp.c:5543)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:5549)
    FuncDecl: quals=None (at pp.c:5549)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__Init__init', quals=[] (at pp.c:5549)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__Resource__request', quals=[], storage=['inline', 'static'] (at pp.c:5551)
    FuncDecl: quals=None (at pp.c:5551)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__Resource__request', quals=[] (at pp.c:5551)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__Resource__release', quals=[], storage=['inline', 'static'] (at pp.c:5559)
    FuncDecl: quals=None (at pp.c:5559)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__Resource__release', quals=[] (at pp.c:5559)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Power__startVReg', quals=[], storage=['inline', 'static'] (at pp.c:5567)
    FuncDecl: quals=None (at pp.c:5567)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Power__startVReg', quals=[] (at pp.c:5567)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Power__stopVReg', quals=[], storage=['inline', 'static'] (at pp.c:5569)
    FuncDecl: quals=None (at pp.c:5569)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Power__stopVReg', quals=[] (at pp.c:5569)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Power__startOscillator', quals=[], storage=['inline', 'static'] (at pp.c:5577)
    FuncDecl: quals=None (at pp.c:5577)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Power__startOscillator', quals=[] (at pp.c:5577)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Power__rxOn', quals=[], storage=['inline', 'static'] (at pp.c:5579)
    FuncDecl: quals=None (at pp.c:5579)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Power__rxOn', quals=[] (at pp.c:5579)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__getExtAddr', quals=[], storage=['inline', 'static'] (at pp.c:5581)
    FuncDecl: quals=None (at pp.c:5581)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__getExtAddr', quals=[] (at pp.c:5581)
        IdentifierType: names=['ieee_eui64_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__getShortAddr', quals=[], storage=['static'] (at pp.c:5585)
    FuncDecl: quals=None (at pp.c:5585)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__getShortAddr', quals=[] (at pp.c:5585)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__getPanAddr', quals=[], storage=['inline', 'static'] (at pp.c:5593)
    FuncDecl: quals=None (at pp.c:5593)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__getPanAddr', quals=[] (at pp.c:5593)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__sync', quals=[], storage=['inline', 'static'] (at pp.c:5595)
    FuncDecl: quals=None (at pp.c:5595)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__sync', quals=[] (at pp.c:5595)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__isAddressRecognitionEnabled', quals=[], storage=['inline', 'static'] (at pp.c:5597)
    FuncDecl: quals=None (at pp.c:5597)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__isAddressRecognitionEnabled', quals=[] (at pp.c:5597)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__isHwAutoAckDefault', quals=[], storage=['inline', 'static'] (at pp.c:5599)
    FuncDecl: quals=None (at pp.c:5599)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__isHwAutoAckDefault', quals=[] (at pp.c:5599)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__isAutoAckEnabled', quals=[], storage=['inline', 'static'] (at pp.c:5606)
    FuncDecl: quals=None (at pp.c:5606)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__isAutoAckEnabled', quals=[] (at pp.c:5606)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__SyncResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:5616)
    FuncDecl: quals=None (at pp.c:5616)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SyncResource__granted', quals=[] (at pp.c:5616)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__SpiResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:5618)
    FuncDecl: quals=None (at pp.c:5618)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SpiResource__granted', quals=[] (at pp.c:5618)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__RssiResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:5623)
    FuncDecl: quals=None (at pp.c:5623)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__RssiResource__granted', quals=[] (at pp.c:5623)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__StartupTimer__fired', quals=[], storage=['inline', 'static'] (at pp.c:5625)
    FuncDecl: quals=None (at pp.c:5625)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__StartupTimer__fired', quals=[] (at pp.c:5625)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__InterruptCCA__fired', quals=[], storage=['inline', 'static'] (at pp.c:5635)
    FuncDecl: quals=None (at pp.c:5635)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__InterruptCCA__fired', quals=[] (at pp.c:5635)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__sync__runTask', quals=[], storage=['inline', 'static'] (at pp.c:5637)
    FuncDecl: quals=None (at pp.c:5637)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__sync__runTask', quals=[] (at pp.c:5637)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__syncDone__runTask', quals=[], storage=['inline', 'static'] (at pp.c:5641)
    FuncDecl: quals=None (at pp.c:5641)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__syncDone__runTask', quals=[] (at pp.c:5641)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__writeFsctrl', quals=[], storage=['static'] (at pp.c:5651)
    FuncDecl: quals=None (at pp.c:5651)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__writeFsctrl', quals=[] (at pp.c:5651)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__writeMdmctrl0', quals=[], storage=['static'] (at pp.c:5653)
    FuncDecl: quals=None (at pp.c:5653)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__writeMdmctrl0', quals=[] (at pp.c:5653)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__writeId', quals=[], storage=['static'] (at pp.c:5655)
    FuncDecl: quals=None (at pp.c:5655)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__writeId', quals=[] (at pp.c:5655)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__ReadRssi__default__readDone', quals=[], storage=['inline', 'static'] (at pp.c:5657)
    FuncDecl: quals=None (at pp.c:5657)
      ParamList:  (at pp.c:5657)
        Decl: name='error', quals=[], storage=[] (at pp.c:5657)
          TypeDecl: declname='error', quals=[] (at pp.c:5657)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:5657)
          TypeDecl: declname='data', quals=[] (at pp.c:5657)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420ControlP__ReadRssi__default__readDone', quals=[] (at pp.c:5657)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Compare__setEvent', quals=[], storage=['static'] (at pp.c:5659)
    FuncDecl: quals=None (at pp.c:5659)
      ParamList:  (at pp.c:5659)
        Decl: name='time', quals=[], storage=[] (at pp.c:5659)
          TypeDecl: declname='time', quals=[] (at pp.c:5659)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__setEvent', quals=[] (at pp.c:5659)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Compare__setEventFromNow', quals=[], storage=['static'] (at pp.c:5661)
    FuncDecl: quals=None (at pp.c:5661)
      ParamList:  (at pp.c:5661)
        Decl: name='delta', quals=[], storage=[] (at pp.c:5661)
          TypeDecl: declname='delta', quals=[] (at pp.c:5661)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__setEventFromNow', quals=[] (at pp.c:5661)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Timer__get', quals=[], storage=['static'] (at pp.c:5663)
    FuncDecl: quals=None (at pp.c:5663)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Timer__get', quals=[] (at pp.c:5663)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430AlarmC__0__Alarm__fired', quals=[], storage=['static'] (at pp.c:5665)
    FuncDecl: quals=None (at pp.c:5665)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Alarm__fired', quals=[] (at pp.c:5665)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430TimerControl__enableEvents', quals=[], storage=['static'] (at pp.c:5667)
    FuncDecl: quals=None (at pp.c:5667)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__enableEvents', quals=[] (at pp.c:5667)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430TimerControl__setControlAsCompare', quals=[], storage=['static'] (at pp.c:5669)
    FuncDecl: quals=None (at pp.c:5669)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__setControlAsCompare', quals=[] (at pp.c:5669)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430TimerControl__disableEvents', quals=[], storage=['static'] (at pp.c:5680)
    FuncDecl: quals=None (at pp.c:5680)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__disableEvents', quals=[] (at pp.c:5680)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430TimerControl__clearPendingInterrupt', quals=[], storage=['static'] (at pp.c:5682)
    FuncDecl: quals=None (at pp.c:5682)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__clearPendingInterrupt', quals=[] (at pp.c:5682)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:5684)
    FuncDecl: quals=None (at pp.c:5684)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Init__init', quals=[] (at pp.c:5684)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430AlarmC__0__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:5686)
    FuncDecl: quals=None (at pp.c:5686)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Alarm__stop', quals=[] (at pp.c:5686)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Compare__fired', quals=[], storage=['inline', 'static'] (at pp.c:5691)
    FuncDecl: quals=None (at pp.c:5691)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__fired', quals=[] (at pp.c:5691)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Alarm__startAt', quals=[], storage=['inline', 'static'] (at pp.c:5702)
    FuncDecl: quals=None (at pp.c:5702)
      ParamList:  (at pp.c:5702)
        Decl: name='t0', quals=[], storage=[] (at pp.c:5702)
          TypeDecl: declname='t0', quals=[] (at pp.c:5702)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:5702)
          TypeDecl: declname='dt', quals=[] (at pp.c:5702)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Alarm__startAt', quals=[] (at pp.c:5702)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:5704)
    FuncDecl: quals=None (at pp.c:5704)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Timer__overflow', quals=[] (at pp.c:5704)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430CounterC__0__Msp430Timer__get', quals=[], storage=['static'] (at pp.c:5706)
    FuncDecl: quals=None (at pp.c:5706)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Msp430Timer__get', quals=[] (at pp.c:5706)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430CounterC__0__Msp430Timer__isOverflowPending', quals=[], storage=['static'] (at pp.c:5707)
    FuncDecl: quals=None (at pp.c:5707)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Msp430Timer__isOverflowPending', quals=[] (at pp.c:5707)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430CounterC__0__Counter__overflow', quals=[], storage=['static'] (at pp.c:5709)
    FuncDecl: quals=None (at pp.c:5709)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Counter__overflow', quals=[] (at pp.c:5709)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430CounterC__0__Counter__get', quals=[], storage=['inline', 'static'] (at pp.c:5711)
    FuncDecl: quals=None (at pp.c:5711)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Counter__get', quals=[] (at pp.c:5711)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430CounterC__0__Counter__isOverflowPending', quals=[], storage=['inline', 'static'] (at pp.c:5716)
    FuncDecl: quals=None (at pp.c:5716)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Counter__isOverflowPending', quals=[] (at pp.c:5716)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430CounterC__0__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:5726)
    FuncDecl: quals=None (at pp.c:5726)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Msp430Timer__overflow', quals=[] (at pp.c:5726)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformCounterC__0__CounterFrom__get', quals=[], storage=['static'] (at pp.c:5728)
    FuncDecl: quals=None (at pp.c:5728)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__CounterFrom__get', quals=[] (at pp.c:5728)
        IdentifierType: names=['TransformCounterC__0__CounterFrom__size_type'] (at None)
  Decl: name='TransformCounterC__0__CounterFrom__isOverflowPending', quals=[], storage=['static'] (at pp.c:5735)
    FuncDecl: quals=None (at pp.c:5735)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__CounterFrom__isOverflowPending', quals=[] (at pp.c:5735)
        IdentifierType: names=['bool'] (at None)
  Decl: name='TransformCounterC__0__Counter__overflow', quals=[], storage=['static'] (at pp.c:5746)
    FuncDecl: quals=None (at pp.c:5746)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__Counter__overflow', quals=[] (at pp.c:5746)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformCounterC__0__m_upper', quals=[], storage=[] (at pp.c:5748)
    TypeDecl: declname='TransformCounterC__0__m_upper', quals=[] (at pp.c:5748)
      IdentifierType: names=['TransformCounterC__0__upper_count_type'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:5750)
    Enum: name='TransformCounterC__0____nesc_unnamed4324' (at pp.c:5750)
      EnumeratorList:  (at pp.c:5752)
        Enumerator: name='TransformCounterC__0__LOW_SHIFT_RIGHT' (at pp.c:5752)
          Constant: type='int', value='0' (at pp.c:5752)
        Enumerator: name='TransformCounterC__0__HIGH_SHIFT_LEFT' (at pp.c:5753)
          BinaryOp: op='-' (at pp.c:5753)
            BinaryOp: op='*' (at pp.c:5753)
              Constant: type='int', value='8' (at pp.c:5753)
              UnaryOp: op='sizeof' (at pp.c:5753)
                Typename: quals=[] (at None)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['TransformCounterC__0__from_size_type'] (at None)
            ID: name='TransformCounterC__0__LOW_SHIFT_RIGHT' (at pp.c:5753)
        Enumerator: name='TransformCounterC__0__NUM_UPPER_BITS' (at pp.c:5754)
          BinaryOp: op='+' (at pp.c:5754)
            BinaryOp: op='-' (at pp.c:5754)
              BinaryOp: op='*' (at pp.c:5754)
                Constant: type='int', value='8' (at pp.c:5754)
                UnaryOp: op='sizeof' (at pp.c:5754)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
              BinaryOp: op='*' (at pp.c:5754)
                Constant: type='int', value='8' (at pp.c:5754)
                UnaryOp: op='sizeof' (at pp.c:5754)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformCounterC__0__from_size_type'] (at None)
            Constant: type='int', value='0' (at pp.c:5754)
        Enumerator: name='TransformCounterC__0__OVERFLOW_MASK' (at pp.c:5758)
          TernaryOp:  (at pp.c:5758)
            ID: name='TransformCounterC__0__NUM_UPPER_BITS' (at pp.c:5758)
            BinaryOp: op='-' (at None)
              BinaryOp: op='<<' (at None)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformCounterC__0__upper_count_type'] (at None)
                  Constant: type='int', value='2' (at pp.c:5758)
                BinaryOp: op='-' (at pp.c:5758)
                  ID: name='TransformCounterC__0__NUM_UPPER_BITS' (at pp.c:5758)
                  Constant: type='int', value='1' (at pp.c:5758)
              Constant: type='int', value='1' (at pp.c:5758)
            Constant: type='int', value='0' (at pp.c:5758)
  Decl: name='TransformCounterC__0__Counter__get', quals=[], storage=['static'] (at pp.c:5761)
    FuncDecl: quals=None (at pp.c:5761)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__Counter__get', quals=[] (at pp.c:5761)
        IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
  Decl: name='TransformCounterC__0__CounterFrom__overflow', quals=[], storage=['inline', 'static'] (at pp.c:5763)
    FuncDecl: quals=None (at pp.c:5763)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__CounterFrom__overflow', quals=[] (at pp.c:5763)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__fired', quals=[], storage=['static'] (at pp.c:5765)
    FuncDecl: quals=None (at pp.c:5765)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__fired', quals=[] (at pp.c:5765)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__AlarmFrom__startAt', quals=[], storage=['static'] (at pp.c:5767)
    FuncDecl: quals=None (at pp.c:5767)
      ParamList:  (at pp.c:5767)
        Decl: name='t0', quals=[], storage=[] (at pp.c:5767)
          TypeDecl: declname='t0', quals=[] (at pp.c:5767)
            IdentifierType: names=['TransformAlarmC__0__AlarmFrom__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:5767)
          TypeDecl: declname='dt', quals=[] (at pp.c:5767)
            IdentifierType: names=['TransformAlarmC__0__AlarmFrom__size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__0__AlarmFrom__startAt', quals=[] (at pp.c:5767)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__AlarmFrom__stop', quals=[], storage=['static'] (at pp.c:5769)
    FuncDecl: quals=None (at pp.c:5769)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__AlarmFrom__stop', quals=[] (at pp.c:5769)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Counter__get', quals=[], storage=['static'] (at pp.c:5771)
    FuncDecl: quals=None (at pp.c:5771)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Counter__get', quals=[] (at pp.c:5771)
        IdentifierType: names=['TransformAlarmC__0__Counter__size_type'] (at None)
  Decl: name='TransformAlarmC__0__m_t0', quals=[], storage=[] (at pp.c:5773)
    TypeDecl: declname='TransformAlarmC__0__m_t0', quals=[] (at pp.c:5773)
      IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Decl: name='TransformAlarmC__0__m_dt', quals=[], storage=[] (at pp.c:5774)
    TypeDecl: declname='TransformAlarmC__0__m_dt', quals=[] (at pp.c:5774)
      IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:5776)
    Enum: name='TransformAlarmC__0____nesc_unnamed4325' (at pp.c:5776)
      EnumeratorList:  (at pp.c:5778)
        Enumerator: name='TransformAlarmC__0__MAX_DELAY_LOG2' (at pp.c:5778)
          BinaryOp: op='-' (at pp.c:5778)
            BinaryOp: op='-' (at pp.c:5778)
              BinaryOp: op='*' (at pp.c:5778)
                Constant: type='int', value='8' (at pp.c:5778)
                UnaryOp: op='sizeof' (at pp.c:5778)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformAlarmC__0__from_size_type'] (at None)
              Constant: type='int', value='1' (at pp.c:5778)
            Constant: type='int', value='0' (at pp.c:5778)
        Enumerator: name='TransformAlarmC__0__MAX_DELAY' (at pp.c:5779)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
              Constant: type='int', value='1' (at pp.c:5779)
            ID: name='TransformAlarmC__0__MAX_DELAY_LOG2' (at pp.c:5779)
  Decl: name='TransformAlarmC__0__Alarm__getNow', quals=[], storage=['inline', 'static'] (at pp.c:5782)
    FuncDecl: quals=None (at pp.c:5782)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__getNow', quals=[] (at pp.c:5782)
        IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:5784)
    FuncDecl: quals=None (at pp.c:5784)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__stop', quals=[] (at pp.c:5784)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__set_alarm', quals=[], storage=['static'] (at pp.c:5789)
    FuncDecl: quals=None (at pp.c:5789)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__set_alarm', quals=[] (at pp.c:5789)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__startAt', quals=[], storage=['static'] (at pp.c:5791)
    FuncDecl: quals=None (at pp.c:5791)
      ParamList:  (at pp.c:5791)
        Decl: name='t0', quals=[], storage=[] (at pp.c:5791)
          TypeDecl: declname='t0', quals=[] (at pp.c:5791)
            IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:5791)
          TypeDecl: declname='dt', quals=[] (at pp.c:5791)
            IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__startAt', quals=[] (at pp.c:5791)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__start', quals=[], storage=['inline', 'static'] (at pp.c:5801)
    FuncDecl: quals=None (at pp.c:5801)
      ParamList:  (at pp.c:5801)
        Decl: name='dt', quals=[], storage=[] (at pp.c:5801)
          TypeDecl: declname='dt', quals=[] (at pp.c:5801)
            IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__start', quals=[] (at pp.c:5801)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__AlarmFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:5806)
    FuncDecl: quals=None (at pp.c:5806)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__AlarmFrom__fired', quals=[] (at pp.c:5806)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:5808)
    FuncDecl: quals=None (at pp.c:5808)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Counter__overflow', quals=[] (at pp.c:5808)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__3__HplGeneralIO__makeInput', quals=[], storage=['static'] (at pp.c:5810)
    FuncDecl: quals=None (at pp.c:5810)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__3__HplGeneralIO__makeInput', quals=[] (at pp.c:5810)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__3__HplGeneralIO__get', quals=[], storage=['static'] (at pp.c:5812)
    FuncDecl: quals=None (at pp.c:5812)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__3__HplGeneralIO__get', quals=[] (at pp.c:5812)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__3__GeneralIO__get', quals=[], storage=['inline', 'static'] (at pp.c:5814)
    FuncDecl: quals=None (at pp.c:5814)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__3__GeneralIO__get', quals=[] (at pp.c:5814)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__3__GeneralIO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:5815)
    FuncDecl: quals=None (at pp.c:5815)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__3__GeneralIO__makeInput', quals=[] (at pp.c:5815)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__4__HplGeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:5817)
    FuncDecl: quals=None (at pp.c:5817)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__4__HplGeneralIO__makeOutput', quals=[] (at pp.c:5817)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__4__HplGeneralIO__set', quals=[], storage=['static'] (at pp.c:5819)
    FuncDecl: quals=None (at pp.c:5819)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__4__HplGeneralIO__set', quals=[] (at pp.c:5819)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__4__HplGeneralIO__clr', quals=[], storage=['static'] (at pp.c:5824)
    FuncDecl: quals=None (at pp.c:5824)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__4__HplGeneralIO__clr', quals=[] (at pp.c:5824)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__4__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:5826)
    FuncDecl: quals=None (at pp.c:5826)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__4__GeneralIO__set', quals=[] (at pp.c:5826)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__4__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:5827)
    FuncDecl: quals=None (at pp.c:5827)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__4__GeneralIO__clr', quals=[] (at pp.c:5827)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__4__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:5832)
    FuncDecl: quals=None (at pp.c:5832)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__4__GeneralIO__makeOutput', quals=[] (at pp.c:5832)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__5__HplGeneralIO__get', quals=[], storage=['static'] (at pp.c:5834)
    FuncDecl: quals=None (at pp.c:5834)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__5__HplGeneralIO__get', quals=[] (at pp.c:5834)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__5__GeneralIO__get', quals=[], storage=['inline', 'static'] (at pp.c:5836)
    FuncDecl: quals=None (at pp.c:5836)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__5__GeneralIO__get', quals=[] (at pp.c:5836)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__6__HplGeneralIO__get', quals=[], storage=['static'] (at pp.c:5838)
    FuncDecl: quals=None (at pp.c:5838)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__6__HplGeneralIO__get', quals=[] (at pp.c:5838)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__6__GeneralIO__get', quals=[], storage=['inline', 'static'] (at pp.c:5840)
    FuncDecl: quals=None (at pp.c:5840)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__6__GeneralIO__get', quals=[] (at pp.c:5840)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__7__HplGeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:5842)
    FuncDecl: quals=None (at pp.c:5842)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__7__HplGeneralIO__makeOutput', quals=[] (at pp.c:5842)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__7__HplGeneralIO__set', quals=[], storage=['static'] (at pp.c:5844)
    FuncDecl: quals=None (at pp.c:5844)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__7__HplGeneralIO__set', quals=[] (at pp.c:5844)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__7__HplGeneralIO__clr', quals=[], storage=['static'] (at pp.c:5849)
    FuncDecl: quals=None (at pp.c:5849)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__7__HplGeneralIO__clr', quals=[] (at pp.c:5849)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__7__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:5851)
    FuncDecl: quals=None (at pp.c:5851)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__7__GeneralIO__set', quals=[] (at pp.c:5851)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__7__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:5852)
    FuncDecl: quals=None (at pp.c:5852)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__7__GeneralIO__clr', quals=[] (at pp.c:5852)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__7__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:5857)
    FuncDecl: quals=None (at pp.c:5857)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__7__GeneralIO__makeOutput', quals=[] (at pp.c:5857)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__8__HplGeneralIO__makeInput', quals=[], storage=['static'] (at pp.c:5859)
    FuncDecl: quals=None (at pp.c:5859)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__8__HplGeneralIO__makeInput', quals=[] (at pp.c:5859)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__8__HplGeneralIO__get', quals=[], storage=['static'] (at pp.c:5861)
    FuncDecl: quals=None (at pp.c:5861)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__8__HplGeneralIO__get', quals=[] (at pp.c:5861)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__8__GeneralIO__get', quals=[], storage=['inline', 'static'] (at pp.c:5863)
    FuncDecl: quals=None (at pp.c:5863)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__8__GeneralIO__get', quals=[] (at pp.c:5863)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__8__GeneralIO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:5864)
    FuncDecl: quals=None (at pp.c:5864)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__8__GeneralIO__makeInput', quals=[] (at pp.c:5864)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__9__HplGeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:5866)
    FuncDecl: quals=None (at pp.c:5866)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__9__HplGeneralIO__makeOutput', quals=[] (at pp.c:5866)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__9__HplGeneralIO__set', quals=[], storage=['static'] (at pp.c:5868)
    FuncDecl: quals=None (at pp.c:5868)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__9__HplGeneralIO__set', quals=[] (at pp.c:5868)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__9__HplGeneralIO__clr', quals=[], storage=['static'] (at pp.c:5873)
    FuncDecl: quals=None (at pp.c:5873)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__9__HplGeneralIO__clr', quals=[] (at pp.c:5873)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__9__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:5875)
    FuncDecl: quals=None (at pp.c:5875)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__9__GeneralIO__set', quals=[] (at pp.c:5875)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__9__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:5876)
    FuncDecl: quals=None (at pp.c:5876)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__9__GeneralIO__clr', quals=[] (at pp.c:5876)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__9__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:5881)
    FuncDecl: quals=None (at pp.c:5881)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__9__GeneralIO__makeOutput', quals=[] (at pp.c:5881)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__Msp430Capture__clearOverflow', quals=[], storage=['static'] (at pp.c:5883)
    FuncDecl: quals=None (at pp.c:5883)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Msp430Capture__clearOverflow', quals=[] (at pp.c:5883)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__Capture__captured', quals=[], storage=['static'] (at pp.c:5885)
    FuncDecl: quals=None (at pp.c:5885)
      ParamList:  (at pp.c:5885)
        Decl: name='time', quals=[], storage=[] (at pp.c:5885)
          TypeDecl: declname='time', quals=[] (at pp.c:5885)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Capture__captured', quals=[] (at pp.c:5885)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__Msp430TimerControl__setControlAsCapture', quals=[], storage=['static'] (at pp.c:5887)
    FuncDecl: quals=None (at pp.c:5887)
      ParamList:  (at pp.c:5887)
        Decl: name='cm', quals=[], storage=[] (at pp.c:5887)
          TypeDecl: declname='cm', quals=[] (at pp.c:5887)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Msp430TimerControl__setControlAsCapture', quals=[] (at pp.c:5887)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__Msp430TimerControl__enableEvents', quals=[], storage=['static'] (at pp.c:5889)
    FuncDecl: quals=None (at pp.c:5889)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Msp430TimerControl__enableEvents', quals=[] (at pp.c:5889)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__Msp430TimerControl__disableEvents', quals=[], storage=['static'] (at pp.c:5890)
    FuncDecl: quals=None (at pp.c:5890)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Msp430TimerControl__disableEvents', quals=[] (at pp.c:5890)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__Msp430TimerControl__clearPendingInterrupt', quals=[], storage=['static'] (at pp.c:5892)
    FuncDecl: quals=None (at pp.c:5892)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Msp430TimerControl__clearPendingInterrupt', quals=[] (at pp.c:5892)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__GeneralIO__selectIOFunc', quals=[], storage=['static'] (at pp.c:5894)
    FuncDecl: quals=None (at pp.c:5894)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__GeneralIO__selectIOFunc', quals=[] (at pp.c:5894)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__GeneralIO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:5896)
    FuncDecl: quals=None (at pp.c:5896)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__GeneralIO__selectModuleFunc', quals=[] (at pp.c:5896)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__enableCapture', quals=[], storage=['static'] (at pp.c:5898)
    FuncDecl: quals=None (at pp.c:5898)
      ParamList:  (at pp.c:5898)
        Decl: name='mode', quals=[], storage=[] (at pp.c:5898)
          TypeDecl: declname='mode', quals=[] (at pp.c:5898)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='GpioCaptureC__0__enableCapture', quals=[] (at pp.c:5898)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='GpioCaptureC__0__Capture__captureRisingEdge', quals=[], storage=['inline', 'static'] (at pp.c:5900)
    FuncDecl: quals=None (at pp.c:5900)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Capture__captureRisingEdge', quals=[] (at pp.c:5900)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='GpioCaptureC__0__Capture__captureFallingEdge', quals=[], storage=['inline', 'static'] (at pp.c:5904)
    FuncDecl: quals=None (at pp.c:5904)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Capture__captureFallingEdge', quals=[] (at pp.c:5904)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='GpioCaptureC__0__Capture__disable', quals=[], storage=['inline', 'static'] (at pp.c:5908)
    FuncDecl: quals=None (at pp.c:5908)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Capture__disable', quals=[] (at pp.c:5908)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__Msp430Capture__captured', quals=[], storage=['inline', 'static'] (at pp.c:5915)
    FuncDecl: quals=None (at pp.c:5915)
      ParamList:  (at pp.c:5915)
        Decl: name='time', quals=[], storage=[] (at pp.c:5915)
          TypeDecl: declname='time', quals=[] (at pp.c:5915)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Msp430Capture__captured', quals=[] (at pp.c:5915)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port14__fired', quals=[], storage=['static'] (at pp.c:5917)
    FuncDecl: quals=None (at pp.c:5917)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port14__fired', quals=[] (at pp.c:5917)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port26__fired', quals=[], storage=['static'] (at pp.c:5919)
    FuncDecl: quals=None (at pp.c:5919)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port26__fired', quals=[] (at pp.c:5919)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port17__fired', quals=[], storage=['static'] (at pp.c:5921)
    FuncDecl: quals=None (at pp.c:5921)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port17__fired', quals=[] (at pp.c:5921)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port21__fired', quals=[], storage=['static'] (at pp.c:5923)
    FuncDecl: quals=None (at pp.c:5923)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port21__fired', quals=[] (at pp.c:5923)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port12__fired', quals=[], storage=['static'] (at pp.c:5925)
    FuncDecl: quals=None (at pp.c:5925)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port12__fired', quals=[] (at pp.c:5925)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port24__fired', quals=[], storage=['static'] (at pp.c:5927)
    FuncDecl: quals=None (at pp.c:5927)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port24__fired', quals=[] (at pp.c:5927)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port15__fired', quals=[], storage=['static'] (at pp.c:5929)
    FuncDecl: quals=None (at pp.c:5929)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port15__fired', quals=[] (at pp.c:5929)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port27__fired', quals=[], storage=['static'] (at pp.c:5931)
    FuncDecl: quals=None (at pp.c:5931)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port27__fired', quals=[] (at pp.c:5931)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port10__fired', quals=[], storage=['static'] (at pp.c:5933)
    FuncDecl: quals=None (at pp.c:5933)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port10__fired', quals=[] (at pp.c:5933)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port22__fired', quals=[], storage=['static'] (at pp.c:5935)
    FuncDecl: quals=None (at pp.c:5935)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port22__fired', quals=[] (at pp.c:5935)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port13__fired', quals=[], storage=['static'] (at pp.c:5937)
    FuncDecl: quals=None (at pp.c:5937)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port13__fired', quals=[] (at pp.c:5937)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port25__fired', quals=[], storage=['static'] (at pp.c:5939)
    FuncDecl: quals=None (at pp.c:5939)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port25__fired', quals=[] (at pp.c:5939)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port16__fired', quals=[], storage=['static'] (at pp.c:5941)
    FuncDecl: quals=None (at pp.c:5941)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port16__fired', quals=[] (at pp.c:5941)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port20__fired', quals=[], storage=['static'] (at pp.c:5943)
    FuncDecl: quals=None (at pp.c:5943)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port20__fired', quals=[] (at pp.c:5943)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port11__fired', quals=[], storage=['static'] (at pp.c:5945)
    FuncDecl: quals=None (at pp.c:5945)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port11__fired', quals=[] (at pp.c:5945)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port23__fired', quals=[], storage=['static'] (at pp.c:5947)
    FuncDecl: quals=None (at pp.c:5947)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port23__fired', quals=[] (at pp.c:5947)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_PORT1_VECTOR', quals=[], storage=[] (at pp.c:5949)
    FuncDecl: quals=None (at pp.c:5949)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_PORT1_VECTOR', quals=[] (at pp.c:5949)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port11__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:5951)
    FuncDecl: quals=None (at pp.c:5951)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port11__default__fired', quals=[] (at pp.c:5951)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port12__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:5952)
    FuncDecl: quals=None (at pp.c:5952)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port12__default__fired', quals=[] (at pp.c:5952)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port13__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:5953)
    FuncDecl: quals=None (at pp.c:5953)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port13__default__fired', quals=[] (at pp.c:5953)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port15__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:5955)
    FuncDecl: quals=None (at pp.c:5955)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port15__default__fired', quals=[] (at pp.c:5955)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port16__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:5956)
    FuncDecl: quals=None (at pp.c:5956)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port16__default__fired', quals=[] (at pp.c:5956)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port17__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:5957)
    FuncDecl: quals=None (at pp.c:5957)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port17__default__fired', quals=[] (at pp.c:5957)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port10__enable', quals=[], storage=['inline', 'static'] (at pp.c:5958)
    FuncDecl: quals=None (at pp.c:5958)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port10__enable', quals=[] (at pp.c:5958)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port14__enable', quals=[], storage=['inline', 'static'] (at pp.c:5962)
    FuncDecl: quals=None (at pp.c:5962)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port14__enable', quals=[] (at pp.c:5962)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port10__disable', quals=[], storage=['inline', 'static'] (at pp.c:5966)
    FuncDecl: quals=None (at pp.c:5966)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port10__disable', quals=[] (at pp.c:5966)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port14__disable', quals=[], storage=['inline', 'static'] (at pp.c:5970)
    FuncDecl: quals=None (at pp.c:5970)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port14__disable', quals=[] (at pp.c:5970)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port10__clear', quals=[], storage=['inline', 'static'] (at pp.c:5974)
    FuncDecl: quals=None (at pp.c:5974)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port10__clear', quals=[] (at pp.c:5974)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port11__clear', quals=[], storage=['inline', 'static'] (at pp.c:5975)
    FuncDecl: quals=None (at pp.c:5975)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port11__clear', quals=[] (at pp.c:5975)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port12__clear', quals=[], storage=['inline', 'static'] (at pp.c:5976)
    FuncDecl: quals=None (at pp.c:5976)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port12__clear', quals=[] (at pp.c:5976)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port13__clear', quals=[], storage=['inline', 'static'] (at pp.c:5977)
    FuncDecl: quals=None (at pp.c:5977)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port13__clear', quals=[] (at pp.c:5977)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port14__clear', quals=[], storage=['inline', 'static'] (at pp.c:5978)
    FuncDecl: quals=None (at pp.c:5978)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port14__clear', quals=[] (at pp.c:5978)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port15__clear', quals=[], storage=['inline', 'static'] (at pp.c:5979)
    FuncDecl: quals=None (at pp.c:5979)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port15__clear', quals=[] (at pp.c:5979)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port16__clear', quals=[], storage=['inline', 'static'] (at pp.c:5980)
    FuncDecl: quals=None (at pp.c:5980)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port16__clear', quals=[] (at pp.c:5980)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port17__clear', quals=[], storage=['inline', 'static'] (at pp.c:5981)
    FuncDecl: quals=None (at pp.c:5981)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port17__clear', quals=[] (at pp.c:5981)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port10__edge', quals=[], storage=['inline', 'static'] (at pp.c:5990)
    FuncDecl: quals=None (at pp.c:5990)
      ParamList:  (at pp.c:5990)
        Decl: name='l2h', quals=[], storage=[] (at pp.c:5990)
          TypeDecl: declname='l2h', quals=[] (at pp.c:5990)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port10__edge', quals=[] (at pp.c:5990)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port14__edge', quals=[], storage=['inline', 'static'] (at pp.c:5992)
    FuncDecl: quals=None (at pp.c:5992)
      ParamList:  (at pp.c:5992)
        Decl: name='l2h', quals=[], storage=[] (at pp.c:5992)
          TypeDecl: declname='l2h', quals=[] (at pp.c:5992)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port14__edge', quals=[] (at pp.c:5992)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_PORT2_VECTOR', quals=[], storage=[] (at pp.c:5994)
    FuncDecl: quals=None (at pp.c:5994)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_PORT2_VECTOR', quals=[] (at pp.c:5994)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port20__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:5996)
    FuncDecl: quals=None (at pp.c:5996)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port20__default__fired', quals=[] (at pp.c:5996)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port21__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:5997)
    FuncDecl: quals=None (at pp.c:5997)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port21__default__fired', quals=[] (at pp.c:5997)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port22__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:5998)
    FuncDecl: quals=None (at pp.c:5998)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port22__default__fired', quals=[] (at pp.c:5998)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port23__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:5999)
    FuncDecl: quals=None (at pp.c:5999)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port23__default__fired', quals=[] (at pp.c:5999)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port24__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:6000)
    FuncDecl: quals=None (at pp.c:6000)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port24__default__fired', quals=[] (at pp.c:6000)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port25__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:6001)
    FuncDecl: quals=None (at pp.c:6001)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port25__default__fired', quals=[] (at pp.c:6001)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port26__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:6002)
    FuncDecl: quals=None (at pp.c:6002)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port26__default__fired', quals=[] (at pp.c:6002)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port27__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:6003)
    FuncDecl: quals=None (at pp.c:6003)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port27__default__fired', quals=[] (at pp.c:6003)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port20__clear', quals=[], storage=['inline', 'static'] (at pp.c:6005)
    FuncDecl: quals=None (at pp.c:6005)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port20__clear', quals=[] (at pp.c:6005)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port21__clear', quals=[], storage=['inline', 'static'] (at pp.c:6006)
    FuncDecl: quals=None (at pp.c:6006)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port21__clear', quals=[] (at pp.c:6006)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port22__clear', quals=[], storage=['inline', 'static'] (at pp.c:6007)
    FuncDecl: quals=None (at pp.c:6007)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port22__clear', quals=[] (at pp.c:6007)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port23__clear', quals=[], storage=['inline', 'static'] (at pp.c:6008)
    FuncDecl: quals=None (at pp.c:6008)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port23__clear', quals=[] (at pp.c:6008)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port24__clear', quals=[], storage=['inline', 'static'] (at pp.c:6009)
    FuncDecl: quals=None (at pp.c:6009)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port24__clear', quals=[] (at pp.c:6009)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port25__clear', quals=[], storage=['inline', 'static'] (at pp.c:6010)
    FuncDecl: quals=None (at pp.c:6010)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port25__clear', quals=[] (at pp.c:6010)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port26__clear', quals=[], storage=['inline', 'static'] (at pp.c:6011)
    FuncDecl: quals=None (at pp.c:6011)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port26__clear', quals=[] (at pp.c:6011)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port27__clear', quals=[], storage=['inline', 'static'] (at pp.c:6012)
    FuncDecl: quals=None (at pp.c:6012)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port27__clear', quals=[] (at pp.c:6012)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__0__HplInterrupt__clear', quals=[], storage=['static'] (at pp.c:6014)
    FuncDecl: quals=None (at pp.c:6014)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__clear', quals=[] (at pp.c:6014)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__0__HplInterrupt__disable', quals=[], storage=['static'] (at pp.c:6016)
    FuncDecl: quals=None (at pp.c:6016)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__disable', quals=[] (at pp.c:6016)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__0__HplInterrupt__edge', quals=[], storage=['static'] (at pp.c:6018)
    FuncDecl: quals=None (at pp.c:6018)
      ParamList:  (at pp.c:6018)
        Decl: name='low_to_high', quals=[], storage=[] (at pp.c:6018)
          TypeDecl: declname='low_to_high', quals=[] (at pp.c:6018)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__edge', quals=[] (at pp.c:6018)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__0__HplInterrupt__enable', quals=[], storage=['static'] (at pp.c:6020)
    FuncDecl: quals=None (at pp.c:6020)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__enable', quals=[] (at pp.c:6020)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__0__Interrupt__fired', quals=[], storage=['static'] (at pp.c:6022)
    FuncDecl: quals=None (at pp.c:6022)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__Interrupt__fired', quals=[] (at pp.c:6022)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__0__enable', quals=[], storage=['inline', 'static'] (at pp.c:6024)
    FuncDecl: quals=None (at pp.c:6024)
      ParamList:  (at pp.c:6024)
        Decl: name='rising', quals=[], storage=[] (at pp.c:6024)
          TypeDecl: declname='rising', quals=[] (at pp.c:6024)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__enable', quals=[] (at pp.c:6024)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430InterruptC__0__Interrupt__enableRisingEdge', quals=[], storage=['inline', 'static'] (at pp.c:6033)
    FuncDecl: quals=None (at pp.c:6033)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__Interrupt__enableRisingEdge', quals=[] (at pp.c:6033)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430InterruptC__0__Interrupt__disable', quals=[], storage=['inline', 'static'] (at pp.c:6041)
    FuncDecl: quals=None (at pp.c:6041)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__Interrupt__disable', quals=[] (at pp.c:6041)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430InterruptC__0__HplInterrupt__fired', quals=[], storage=['inline', 'static'] (at pp.c:6049)
    FuncDecl: quals=None (at pp.c:6049)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__fired', quals=[] (at pp.c:6049)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__1__HplInterrupt__clear', quals=[], storage=['static'] (at pp.c:6051)
    FuncDecl: quals=None (at pp.c:6051)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__clear', quals=[] (at pp.c:6051)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__1__HplInterrupt__disable', quals=[], storage=['static'] (at pp.c:6053)
    FuncDecl: quals=None (at pp.c:6053)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__disable', quals=[] (at pp.c:6053)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__1__HplInterrupt__edge', quals=[], storage=['static'] (at pp.c:6055)
    FuncDecl: quals=None (at pp.c:6055)
      ParamList:  (at pp.c:6055)
        Decl: name='low_to_high', quals=[], storage=[] (at pp.c:6055)
          TypeDecl: declname='low_to_high', quals=[] (at pp.c:6055)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__edge', quals=[] (at pp.c:6055)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__1__HplInterrupt__enable', quals=[], storage=['static'] (at pp.c:6057)
    FuncDecl: quals=None (at pp.c:6057)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__enable', quals=[] (at pp.c:6057)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__1__Interrupt__fired', quals=[], storage=['static'] (at pp.c:6059)
    FuncDecl: quals=None (at pp.c:6059)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__Interrupt__fired', quals=[] (at pp.c:6059)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__1__enable', quals=[], storage=['inline', 'static'] (at pp.c:6061)
    FuncDecl: quals=None (at pp.c:6061)
      ParamList:  (at pp.c:6061)
        Decl: name='rising', quals=[], storage=[] (at pp.c:6061)
          TypeDecl: declname='rising', quals=[] (at pp.c:6061)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__enable', quals=[] (at pp.c:6061)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430InterruptC__1__Interrupt__enableFallingEdge', quals=[], storage=['inline', 'static'] (at pp.c:6063)
    FuncDecl: quals=None (at pp.c:6063)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__Interrupt__enableFallingEdge', quals=[] (at pp.c:6063)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430InterruptC__1__Interrupt__disable', quals=[], storage=['inline', 'static'] (at pp.c:6067)
    FuncDecl: quals=None (at pp.c:6067)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__Interrupt__disable', quals=[] (at pp.c:6067)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430InterruptC__1__HplInterrupt__fired', quals=[], storage=['inline', 'static'] (at pp.c:6075)
    FuncDecl: quals=None (at pp.c:6075)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__fired', quals=[] (at pp.c:6075)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__SpiPacket__send', quals=[], storage=['static'] (at pp.c:6077)
    FuncDecl: quals=None (at pp.c:6077)
      ParamList:  (at pp.c:6079)
        Decl: name='txBuf', quals=[], storage=[] (at pp.c:6079)
          PtrDecl: quals=[] (at pp.c:6079)
            TypeDecl: declname='txBuf', quals=[] (at pp.c:6079)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rxBuf', quals=[], storage=[] (at pp.c:6081)
          PtrDecl: quals=[] (at pp.c:6081)
            TypeDecl: declname='rxBuf', quals=[] (at pp.c:6081)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:6090)
          TypeDecl: declname='len', quals=[] (at pp.c:6090)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420SpiP__SpiPacket__send', quals=[] (at pp.c:6077)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__Fifo__writeDone', quals=[], storage=['static'] (at pp.c:6092)
    FuncDecl: quals=None (at pp.c:6092)
      ParamList:  (at pp.c:6094)
        Decl: name='arg_0x101c66328', quals=[], storage=[] (at pp.c:6094)
          TypeDecl: declname='arg_0x101c66328', quals=[] (at pp.c:6094)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:6096)
          PtrDecl: quals=[] (at pp.c:6096)
            TypeDecl: declname='data', quals=[] (at pp.c:6096)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:6096)
          TypeDecl: declname='length', quals=[] (at pp.c:6096)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:6096)
          TypeDecl: declname='error', quals=[] (at pp.c:6096)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__writeDone', quals=[] (at pp.c:6092)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__Fifo__readDone', quals=[], storage=['static'] (at pp.c:6098)
    FuncDecl: quals=None (at pp.c:6098)
      ParamList:  (at pp.c:6100)
        Decl: name='arg_0x101c66328', quals=[], storage=[] (at pp.c:6100)
          TypeDecl: declname='arg_0x101c66328', quals=[] (at pp.c:6100)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:6102)
          PtrDecl: quals=[] (at pp.c:6102)
            TypeDecl: declname='data', quals=[] (at pp.c:6102)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:6102)
          TypeDecl: declname='length', quals=[] (at pp.c:6102)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:6102)
          TypeDecl: declname='error', quals=[] (at pp.c:6102)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__readDone', quals=[] (at pp.c:6098)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__ChipSpiResource__releasing', quals=[], storage=['static'] (at pp.c:6104)
    FuncDecl: quals=None (at pp.c:6104)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__ChipSpiResource__releasing', quals=[] (at pp.c:6104)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__SpiByte__write', quals=[], storage=['static'] (at pp.c:6106)
    FuncDecl: quals=None (at pp.c:6106)
      ParamList:  (at pp.c:6106)
        Decl: name='tx', quals=[], storage=[] (at pp.c:6106)
          TypeDecl: declname='tx', quals=[] (at pp.c:6106)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__SpiByte__write', quals=[] (at pp.c:6106)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420SpiP__WorkingState__toIdle', quals=[], storage=['static'] (at pp.c:6108)
    FuncDecl: quals=None (at pp.c:6108)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__WorkingState__toIdle', quals=[] (at pp.c:6108)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__WorkingState__isIdle', quals=[], storage=['static'] (at pp.c:6113)
    FuncDecl: quals=None (at pp.c:6113)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__WorkingState__isIdle', quals=[] (at pp.c:6113)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420SpiP__WorkingState__requestState', quals=[], storage=['static'] (at pp.c:6115)
    FuncDecl: quals=None (at pp.c:6115)
      ParamList:  (at pp.c:6115)
        Decl: name='reqState', quals=[], storage=[] (at pp.c:6115)
          TypeDecl: declname='reqState', quals=[] (at pp.c:6115)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__WorkingState__requestState', quals=[] (at pp.c:6115)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__SpiResource__release', quals=[], storage=['static'] (at pp.c:6117)
    FuncDecl: quals=None (at pp.c:6117)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__SpiResource__release', quals=[] (at pp.c:6117)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__SpiResource__immediateRequest', quals=[], storage=['static'] (at pp.c:6119)
    FuncDecl: quals=None (at pp.c:6119)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__SpiResource__immediateRequest', quals=[] (at pp.c:6119)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__SpiResource__request', quals=[], storage=['static'] (at pp.c:6121)
    FuncDecl: quals=None (at pp.c:6121)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__SpiResource__request', quals=[] (at pp.c:6121)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__SpiResource__isOwner', quals=[], storage=['static'] (at pp.c:6123)
    FuncDecl: quals=None (at pp.c:6123)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__SpiResource__isOwner', quals=[] (at pp.c:6123)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420SpiP__Resource__granted', quals=[], storage=['static'] (at pp.c:6125)
    FuncDecl: quals=None (at pp.c:6125)
      ParamList:  (at pp.c:6127)
        Decl: name='arg_0x101c67158', quals=[], storage=[] (at pp.c:6127)
          TypeDecl: declname='arg_0x101c67158', quals=[] (at pp.c:6127)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__granted', quals=[] (at pp.c:6125)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__grant__postTask', quals=[], storage=['static'] (at pp.c:6129)
    FuncDecl: quals=None (at pp.c:6129)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__grant__postTask', quals=[] (at pp.c:6129)
        IdentifierType: names=['error_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:6131)
    Enum: name='CC2420SpiP____nesc_unnamed4326' (at pp.c:6131)
      EnumeratorList:  (at pp.c:6133)
        Enumerator: name='CC2420SpiP__grant' (at pp.c:6133)
          Constant: type='int', value='7U' (at pp.c:6133)
  Typedef: name='CC2420SpiP____nesc_sillytask_grant', quals=[], storage=['typedef'] (at pp.c:6136)
    ArrayDecl:  (at pp.c:6136)
      TypeDecl: declname='CC2420SpiP____nesc_sillytask_grant', quals=[] (at pp.c:6136)
        IdentifierType: names=['int'] (at None)
      ID: name='CC2420SpiP__grant' (at pp.c:6136)
  Decl: name=None, quals=[], storage=[] (at pp.c:6138)
    Enum: name='CC2420SpiP____nesc_unnamed4327' (at pp.c:6138)
      EnumeratorList:  (at pp.c:6139)
        Enumerator: name='CC2420SpiP__RESOURCE_COUNT' (at pp.c:6139)
          Constant: type='int', value='5U' (at pp.c:6139)
        Enumerator: name='CC2420SpiP__NO_HOLDER' (at pp.c:6140)
          Constant: type='int', value='0xFF' (at pp.c:6140)
  Decl: name=None, quals=[], storage=[] (at pp.c:6144)
    Enum: name='CC2420SpiP____nesc_unnamed4328' (at pp.c:6144)
      EnumeratorList:  (at pp.c:6145)
        Enumerator: name='CC2420SpiP__S_IDLE' (at pp.c:6145)
        Enumerator: name='CC2420SpiP__S_BUSY' (at pp.c:6146)
  Decl: name='CC2420SpiP__m_addr', quals=[], storage=[] (at pp.c:6150)
    TypeDecl: declname='CC2420SpiP__m_addr', quals=[] (at pp.c:6150)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420SpiP__m_requests', quals=[], storage=[] (at pp.c:6153)
    TypeDecl: declname='CC2420SpiP__m_requests', quals=[] (at pp.c:6153)
      IdentifierType: names=['uint8_t'] (at None)
    Constant: type='int', value='0' (at pp.c:6153)
  Decl: name='CC2420SpiP__m_holder', quals=[], storage=[] (at pp.c:6156)
    TypeDecl: declname='CC2420SpiP__m_holder', quals=[] (at pp.c:6156)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='CC2420SpiP__NO_HOLDER' (at pp.c:6156)
  Decl: name='CC2420SpiP__release', quals=[], storage=[] (at pp.c:6159)
    TypeDecl: declname='CC2420SpiP__release', quals=[] (at pp.c:6159)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420SpiP__attemptRelease', quals=[], storage=['static'] (at pp.c:6162)
    FuncDecl: quals=None (at pp.c:6162)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__attemptRelease', quals=[] (at pp.c:6162)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__ChipSpiResource__abortRelease', quals=[], storage=['inline', 'static'] (at pp.c:6170)
    FuncDecl: quals=None (at pp.c:6170)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__ChipSpiResource__abortRelease', quals=[] (at pp.c:6170)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__ChipSpiResource__attemptRelease', quals=[], storage=['inline', 'static'] (at pp.c:6177)
    FuncDecl: quals=None (at pp.c:6177)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__ChipSpiResource__attemptRelease', quals=[] (at pp.c:6177)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__Resource__request', quals=[], storage=['static'] (at pp.c:6182)
    FuncDecl: quals=None (at pp.c:6182)
      ParamList:  (at pp.c:6182)
        Decl: name='id', quals=[], storage=[] (at pp.c:6182)
          TypeDecl: declname='id', quals=[] (at pp.c:6182)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__request', quals=[] (at pp.c:6182)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__Resource__immediateRequest', quals=[], storage=['static'] (at pp.c:6184)
    FuncDecl: quals=None (at pp.c:6184)
      ParamList:  (at pp.c:6184)
        Decl: name='id', quals=[], storage=[] (at pp.c:6184)
          TypeDecl: declname='id', quals=[] (at pp.c:6184)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__immediateRequest', quals=[] (at pp.c:6184)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__Resource__release', quals=[], storage=['static'] (at pp.c:6186)
    FuncDecl: quals=None (at pp.c:6186)
      ParamList:  (at pp.c:6186)
        Decl: name='id', quals=[], storage=[] (at pp.c:6186)
          TypeDecl: declname='id', quals=[] (at pp.c:6186)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__release', quals=[] (at pp.c:6186)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__Resource__isOwner', quals=[], storage=['inline', 'static'] (at pp.c:6188)
    FuncDecl: quals=None (at pp.c:6188)
      ParamList:  (at pp.c:6188)
        Decl: name='id', quals=[], storage=[] (at pp.c:6188)
          TypeDecl: declname='id', quals=[] (at pp.c:6188)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__isOwner', quals=[] (at pp.c:6188)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420SpiP__SpiResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:6194)
    FuncDecl: quals=None (at pp.c:6194)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__SpiResource__granted', quals=[] (at pp.c:6194)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__Fifo__beginRead', quals=[], storage=['static'] (at pp.c:6199)
    FuncDecl: quals=None (at pp.c:6199)
      ParamList:  (at pp.c:6199)
        Decl: name='addr', quals=[], storage=[] (at pp.c:6199)
          TypeDecl: declname='addr', quals=[] (at pp.c:6199)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:6199)
          PtrDecl: quals=[] (at pp.c:6199)
            TypeDecl: declname='data', quals=[] (at pp.c:6199)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:6200)
          TypeDecl: declname='len', quals=[] (at pp.c:6200)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__beginRead', quals=[] (at pp.c:6199)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__Fifo__continueRead', quals=[], storage=['inline', 'static'] (at pp.c:6202)
    FuncDecl: quals=None (at pp.c:6202)
      ParamList:  (at pp.c:6202)
        Decl: name='addr', quals=[], storage=[] (at pp.c:6202)
          TypeDecl: declname='addr', quals=[] (at pp.c:6202)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:6202)
          PtrDecl: quals=[] (at pp.c:6202)
            TypeDecl: declname='data', quals=[] (at pp.c:6202)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:6203)
          TypeDecl: declname='len', quals=[] (at pp.c:6203)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__continueRead', quals=[] (at pp.c:6202)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__Fifo__write', quals=[], storage=['inline', 'static'] (at pp.c:6207)
    FuncDecl: quals=None (at pp.c:6207)
      ParamList:  (at pp.c:6207)
        Decl: name='addr', quals=[], storage=[] (at pp.c:6207)
          TypeDecl: declname='addr', quals=[] (at pp.c:6207)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:6207)
          PtrDecl: quals=[] (at pp.c:6207)
            TypeDecl: declname='data', quals=[] (at pp.c:6207)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:6208)
          TypeDecl: declname='len', quals=[] (at pp.c:6208)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__write', quals=[] (at pp.c:6207)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__Ram__write', quals=[], storage=['static'] (at pp.c:6210)
    FuncDecl: quals=None (at pp.c:6210)
      ParamList:  (at pp.c:6210)
        Decl: name='addr', quals=[], storage=[] (at pp.c:6210)
          TypeDecl: declname='addr', quals=[] (at pp.c:6210)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='offset', quals=[], storage=[] (at pp.c:6210)
          TypeDecl: declname='offset', quals=[] (at pp.c:6210)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:6211)
          PtrDecl: quals=[] (at pp.c:6211)
            TypeDecl: declname='data', quals=[] (at pp.c:6211)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:6212)
          TypeDecl: declname='len', quals=[] (at pp.c:6212)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Ram__write', quals=[] (at pp.c:6210)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__Reg__read', quals=[], storage=['inline', 'static'] (at pp.c:6214)
    FuncDecl: quals=None (at pp.c:6214)
      ParamList:  (at pp.c:6214)
        Decl: name='addr', quals=[], storage=[] (at pp.c:6214)
          TypeDecl: declname='addr', quals=[] (at pp.c:6214)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:6214)
          PtrDecl: quals=[] (at pp.c:6214)
            TypeDecl: declname='data', quals=[] (at pp.c:6214)
              IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Reg__read', quals=[] (at pp.c:6214)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__Reg__write', quals=[], storage=['static'] (at pp.c:6216)
    FuncDecl: quals=None (at pp.c:6216)
      ParamList:  (at pp.c:6216)
        Decl: name='addr', quals=[], storage=[] (at pp.c:6216)
          TypeDecl: declname='addr', quals=[] (at pp.c:6216)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:6216)
          TypeDecl: declname='data', quals=[] (at pp.c:6216)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Reg__write', quals=[] (at pp.c:6216)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__Strobe__strobe', quals=[], storage=['static'] (at pp.c:6218)
    FuncDecl: quals=None (at pp.c:6218)
      ParamList:  (at pp.c:6218)
        Decl: name='addr', quals=[], storage=[] (at pp.c:6218)
          TypeDecl: declname='addr', quals=[] (at pp.c:6218)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Strobe__strobe', quals=[] (at pp.c:6218)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__SpiPacket__sendDone', quals=[], storage=['static'] (at pp.c:6229)
    FuncDecl: quals=None (at pp.c:6229)
      ParamList:  (at pp.c:6229)
        Decl: name='tx_buf', quals=[], storage=[] (at pp.c:6229)
          PtrDecl: quals=[] (at pp.c:6229)
            TypeDecl: declname='tx_buf', quals=[] (at pp.c:6229)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rx_buf', quals=[], storage=[] (at pp.c:6229)
          PtrDecl: quals=[] (at pp.c:6229)
            TypeDecl: declname='rx_buf', quals=[] (at pp.c:6229)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:6230)
          TypeDecl: declname='len', quals=[] (at pp.c:6230)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:6230)
          TypeDecl: declname='error', quals=[] (at pp.c:6230)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420SpiP__SpiPacket__sendDone', quals=[] (at pp.c:6229)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__attemptRelease', quals=[], storage=['static'] (at pp.c:6239)
    FuncDecl: quals=None (at pp.c:6239)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__attemptRelease', quals=[] (at pp.c:6239)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__grant__runTask', quals=[], storage=['inline', 'static'] (at pp.c:6241)
    FuncDecl: quals=None (at pp.c:6241)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__grant__runTask', quals=[] (at pp.c:6241)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:6250)
    FuncDecl: quals=None (at pp.c:6250)
      ParamList:  (at pp.c:6250)
        Decl: name='id', quals=[], storage=[] (at pp.c:6250)
          TypeDecl: declname='id', quals=[] (at pp.c:6250)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__default__granted', quals=[] (at pp.c:6250)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__Fifo__default__readDone', quals=[], storage=['inline', 'static'] (at pp.c:6253)
    FuncDecl: quals=None (at pp.c:6253)
      ParamList:  (at pp.c:6253)
        Decl: name='addr', quals=[], storage=[] (at pp.c:6253)
          TypeDecl: declname='addr', quals=[] (at pp.c:6253)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rx_buf', quals=[], storage=[] (at pp.c:6253)
          PtrDecl: quals=[] (at pp.c:6253)
            TypeDecl: declname='rx_buf', quals=[] (at pp.c:6253)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rx_len', quals=[], storage=[] (at pp.c:6253)
          TypeDecl: declname='rx_len', quals=[] (at pp.c:6253)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:6253)
          TypeDecl: declname='error', quals=[] (at pp.c:6253)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__default__readDone', quals=[] (at pp.c:6253)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__Fifo__default__writeDone', quals=[], storage=['inline', 'static'] (at pp.c:6256)
    FuncDecl: quals=None (at pp.c:6256)
      ParamList:  (at pp.c:6256)
        Decl: name='addr', quals=[], storage=[] (at pp.c:6256)
          TypeDecl: declname='addr', quals=[] (at pp.c:6256)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='tx_buf', quals=[], storage=[] (at pp.c:6256)
          PtrDecl: quals=[] (at pp.c:6256)
            TypeDecl: declname='tx_buf', quals=[] (at pp.c:6256)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='tx_len', quals=[], storage=[] (at pp.c:6256)
          TypeDecl: declname='tx_len', quals=[] (at pp.c:6256)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:6256)
          TypeDecl: declname='error', quals=[] (at pp.c:6256)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__default__writeDone', quals=[] (at pp.c:6256)
        IdentifierType: names=['void'] (at None)
  Decl: name='StateImplP__state', quals=[], storage=[] (at pp.c:6258)
    ArrayDecl:  (at pp.c:6258)
      TypeDecl: declname='StateImplP__state', quals=[] (at pp.c:6258)
        IdentifierType: names=['uint8_t'] (at None)
      Constant: type='int', value='4U' (at pp.c:6258)
  Decl: name=None, quals=[], storage=[] (at pp.c:6260)
    Enum: name='StateImplP____nesc_unnamed4329' (at pp.c:6260)
      EnumeratorList:  (at pp.c:6261)
        Enumerator: name='StateImplP__S_IDLE' (at pp.c:6261)
          Constant: type='int', value='0' (at pp.c:6261)
  Decl: name='StateImplP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:6265)
    FuncDecl: quals=None (at pp.c:6265)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='StateImplP__Init__init', quals=[] (at pp.c:6265)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='StateImplP__State__requestState', quals=[], storage=['static'] (at pp.c:6267)
    FuncDecl: quals=None (at pp.c:6267)
      ParamList:  (at pp.c:6267)
        Decl: name='id', quals=[], storage=[] (at pp.c:6267)
          TypeDecl: declname='id', quals=[] (at pp.c:6267)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='reqState', quals=[], storage=[] (at pp.c:6267)
          TypeDecl: declname='reqState', quals=[] (at pp.c:6267)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='StateImplP__State__requestState', quals=[] (at pp.c:6267)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='StateImplP__State__forceState', quals=[], storage=['inline', 'static'] (at pp.c:6269)
    FuncDecl: quals=None (at pp.c:6269)
      ParamList:  (at pp.c:6269)
        Decl: name='id', quals=[], storage=[] (at pp.c:6269)
          TypeDecl: declname='id', quals=[] (at pp.c:6269)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='reqState', quals=[], storage=[] (at pp.c:6269)
          TypeDecl: declname='reqState', quals=[] (at pp.c:6269)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='StateImplP__State__forceState', quals=[] (at pp.c:6269)
        IdentifierType: names=['void'] (at None)
  Decl: name='StateImplP__State__toIdle', quals=[], storage=['inline', 'static'] (at pp.c:6276)
    FuncDecl: quals=None (at pp.c:6276)
      ParamList:  (at pp.c:6276)
        Decl: name='id', quals=[], storage=[] (at pp.c:6276)
          TypeDecl: declname='id', quals=[] (at pp.c:6276)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='StateImplP__State__toIdle', quals=[] (at pp.c:6276)
        IdentifierType: names=['void'] (at None)
  Decl: name='StateImplP__State__isIdle', quals=[], storage=['inline', 'static'] (at pp.c:6284)
    FuncDecl: quals=None (at pp.c:6284)
      ParamList:  (at pp.c:6284)
        Decl: name='id', quals=[], storage=[] (at pp.c:6284)
          TypeDecl: declname='id', quals=[] (at pp.c:6284)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='StateImplP__State__isIdle', quals=[] (at pp.c:6284)
        IdentifierType: names=['bool'] (at None)
  Decl: name='StateImplP__State__isState', quals=[], storage=['static'] (at pp.c:6291)
    FuncDecl: quals=None (at pp.c:6291)
      ParamList:  (at pp.c:6291)
        Decl: name='id', quals=[], storage=[] (at pp.c:6291)
          TypeDecl: declname='id', quals=[] (at pp.c:6291)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='myState', quals=[], storage=[] (at pp.c:6291)
          TypeDecl: declname='myState', quals=[] (at pp.c:6291)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='StateImplP__State__isState', quals=[] (at pp.c:6291)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__SpiPacket__sendDone', quals=[], storage=['static'] (at pp.c:6293)
    FuncDecl: quals=None (at pp.c:6293)
      ParamList:  (at pp.c:6295)
        Decl: name='arg_0x101d562f0', quals=[], storage=[] (at pp.c:6295)
          TypeDecl: declname='arg_0x101d562f0', quals=[] (at pp.c:6295)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='txBuf', quals=[], storage=[] (at pp.c:6297)
          PtrDecl: quals=[] (at pp.c:6297)
            TypeDecl: declname='txBuf', quals=[] (at pp.c:6297)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rxBuf', quals=[], storage=[] (at pp.c:6298)
          PtrDecl: quals=[] (at pp.c:6298)
            TypeDecl: declname='rxBuf', quals=[] (at pp.c:6298)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:6304)
          TypeDecl: declname='len', quals=[] (at pp.c:6304)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:6305)
          TypeDecl: declname='error', quals=[] (at pp.c:6305)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__SpiPacket__sendDone', quals=[] (at pp.c:6293)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Msp430SpiConfigure__getConfig', quals=[], storage=['static'] (at pp.c:6307)
    FuncDecl: quals=None (at pp.c:6307)
      ParamList:  (at pp.c:6309)
        Decl: name='arg_0x101d532f0', quals=[], storage=[] (at pp.c:6309)
          TypeDecl: declname='arg_0x101d532f0', quals=[] (at pp.c:6309)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:6307)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Msp430SpiConfigure__getConfig', quals=[] (at pp.c:6307)
          IdentifierType: names=['msp430_spi_union_config_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Usart__enableRxIntr', quals=[], storage=['static'] (at pp.c:6311)
    FuncDecl: quals=None (at pp.c:6311)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__enableRxIntr', quals=[] (at pp.c:6311)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Usart__clrRxIntr', quals=[], storage=['static'] (at pp.c:6313)
    FuncDecl: quals=None (at pp.c:6313)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__clrRxIntr', quals=[] (at pp.c:6313)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Usart__resetUsart', quals=[], storage=['static'] (at pp.c:6315)
    FuncDecl: quals=None (at pp.c:6315)
      ParamList:  (at pp.c:6315)
        Decl: name='reset', quals=[], storage=[] (at pp.c:6315)
          TypeDecl: declname='reset', quals=[] (at pp.c:6315)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__resetUsart', quals=[] (at pp.c:6315)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Usart__disableRxIntr', quals=[], storage=['static'] (at pp.c:6317)
    FuncDecl: quals=None (at pp.c:6317)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__disableRxIntr', quals=[] (at pp.c:6317)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Usart__tx', quals=[], storage=['static'] (at pp.c:6319)
    FuncDecl: quals=None (at pp.c:6319)
      ParamList:  (at pp.c:6319)
        Decl: name='data', quals=[], storage=[] (at pp.c:6319)
          TypeDecl: declname='data', quals=[] (at pp.c:6319)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__tx', quals=[] (at pp.c:6319)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Usart__setModeSpi', quals=[], storage=['static'] (at pp.c:6321)
    FuncDecl: quals=None (at pp.c:6321)
      ParamList:  (at pp.c:6321)
        Decl: name='config', quals=[], storage=[] (at pp.c:6321)
          PtrDecl: quals=[] (at pp.c:6321)
            TypeDecl: declname='config', quals=[] (at pp.c:6321)
              IdentifierType: names=['msp430_spi_union_config_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__setModeSpi', quals=[] (at pp.c:6321)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Usart__rx', quals=[], storage=['static'] (at pp.c:6323)
    FuncDecl: quals=None (at pp.c:6323)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__rx', quals=[] (at pp.c:6323)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Usart__isRxIntrPending', quals=[], storage=['static'] (at pp.c:6325)
    FuncDecl: quals=None (at pp.c:6325)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__isRxIntrPending', quals=[] (at pp.c:6325)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Usart__disableSpi', quals=[], storage=['static'] (at pp.c:6327)
    FuncDecl: quals=None (at pp.c:6327)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__disableSpi', quals=[] (at pp.c:6327)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__release', quals=[], storage=['static'] (at pp.c:6329)
    FuncDecl: quals=None (at pp.c:6329)
      ParamList:  (at pp.c:6331)
        Decl: name='arg_0x101d550c8', quals=[], storage=[] (at pp.c:6331)
          TypeDecl: declname='arg_0x101d550c8', quals=[] (at pp.c:6331)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__release', quals=[] (at pp.c:6329)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__immediateRequest', quals=[], storage=['static'] (at pp.c:6333)
    FuncDecl: quals=None (at pp.c:6333)
      ParamList:  (at pp.c:6335)
        Decl: name='arg_0x101d550c8', quals=[], storage=[] (at pp.c:6335)
          TypeDecl: declname='arg_0x101d550c8', quals=[] (at pp.c:6335)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__immediateRequest', quals=[] (at pp.c:6333)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__request', quals=[], storage=['static'] (at pp.c:6337)
    FuncDecl: quals=None (at pp.c:6337)
      ParamList:  (at pp.c:6339)
        Decl: name='arg_0x101d550c8', quals=[], storage=[] (at pp.c:6339)
          TypeDecl: declname='arg_0x101d550c8', quals=[] (at pp.c:6339)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__request', quals=[] (at pp.c:6337)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__isOwner', quals=[], storage=['static'] (at pp.c:6341)
    FuncDecl: quals=None (at pp.c:6341)
      ParamList:  (at pp.c:6343)
        Decl: name='arg_0x101d550c8', quals=[], storage=[] (at pp.c:6343)
          TypeDecl: declname='arg_0x101d550c8', quals=[] (at pp.c:6343)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__isOwner', quals=[] (at pp.c:6341)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__granted', quals=[], storage=['static'] (at pp.c:6345)
    FuncDecl: quals=None (at pp.c:6345)
      ParamList:  (at pp.c:6347)
        Decl: name='arg_0x101d592f0', quals=[], storage=[] (at pp.c:6347)
          TypeDecl: declname='arg_0x101d592f0', quals=[] (at pp.c:6347)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__granted', quals=[] (at pp.c:6345)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__signalDone_task__postTask', quals=[], storage=['static'] (at pp.c:6349)
    FuncDecl: quals=None (at pp.c:6349)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__signalDone_task__postTask', quals=[] (at pp.c:6349)
        IdentifierType: names=['error_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:6351)
    Enum: name='Msp430SpiNoDmaP__0____nesc_unnamed4330' (at pp.c:6351)
      EnumeratorList:  (at pp.c:6353)
        Enumerator: name='Msp430SpiNoDmaP__0__signalDone_task' (at pp.c:6353)
          Constant: type='int', value='8U' (at pp.c:6353)
  Typedef: name='Msp430SpiNoDmaP__0____nesc_sillytask_signalDone_task', quals=[], storage=['typedef'] (at pp.c:6356)
    ArrayDecl:  (at pp.c:6356)
      TypeDecl: declname='Msp430SpiNoDmaP__0____nesc_sillytask_signalDone_task', quals=[] (at pp.c:6356)
        IdentifierType: names=['int'] (at None)
      ID: name='Msp430SpiNoDmaP__0__signalDone_task' (at pp.c:6356)
  Decl: name=None, quals=[], storage=[] (at pp.c:6358)
    Enum: name='Msp430SpiNoDmaP__0____nesc_unnamed4331' (at pp.c:6358)
      EnumeratorList:  (at pp.c:6359)
        Enumerator: name='Msp430SpiNoDmaP__0__SPI_ATOMIC_SIZE' (at pp.c:6359)
          Constant: type='int', value='2' (at pp.c:6359)
  Decl: name='Msp430SpiNoDmaP__0__m_len', quals=[], storage=[] (at pp.c:6362)
    TypeDecl: declname='Msp430SpiNoDmaP__0__m_len', quals=[] (at pp.c:6362)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__m_tx_buf', quals=[], storage=[] (at pp.c:6363)
    PtrDecl: quals=[] (at pp.c:6363)
      TypeDecl: declname='Msp430SpiNoDmaP__0__m_tx_buf', quals=[] (at pp.c:6363)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__m_rx_buf', quals=[], storage=[] (at pp.c:6364)
    PtrDecl: quals=[] (at pp.c:6364)
      TypeDecl: declname='Msp430SpiNoDmaP__0__m_rx_buf', quals=[] (at pp.c:6364)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__m_pos', quals=[], storage=[] (at pp.c:6365)
    TypeDecl: declname='Msp430SpiNoDmaP__0__m_pos', quals=[] (at pp.c:6365)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__m_client', quals=[], storage=[] (at pp.c:6366)
    TypeDecl: declname='Msp430SpiNoDmaP__0__m_client', quals=[] (at pp.c:6366)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__signalDone', quals=[], storage=['inline', 'static'] (at pp.c:6368)
    FuncDecl: quals=None (at pp.c:6368)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__signalDone', quals=[] (at pp.c:6368)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:6371)
    FuncDecl: quals=None (at pp.c:6371)
      ParamList:  (at pp.c:6371)
        Decl: name='id', quals=[], storage=[] (at pp.c:6371)
          TypeDecl: declname='id', quals=[] (at pp.c:6371)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__immediateRequest', quals=[] (at pp.c:6371)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__request', quals=[], storage=['inline', 'static'] (at pp.c:6375)
    FuncDecl: quals=None (at pp.c:6375)
      ParamList:  (at pp.c:6375)
        Decl: name='id', quals=[], storage=[] (at pp.c:6375)
          TypeDecl: declname='id', quals=[] (at pp.c:6375)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__request', quals=[] (at pp.c:6375)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__isOwner', quals=[], storage=['inline', 'static'] (at pp.c:6379)
    FuncDecl: quals=None (at pp.c:6379)
      ParamList:  (at pp.c:6379)
        Decl: name='id', quals=[], storage=[] (at pp.c:6379)
          TypeDecl: declname='id', quals=[] (at pp.c:6379)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__isOwner', quals=[] (at pp.c:6379)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__release', quals=[], storage=['inline', 'static'] (at pp.c:6383)
    FuncDecl: quals=None (at pp.c:6383)
      ParamList:  (at pp.c:6383)
        Decl: name='id', quals=[], storage=[] (at pp.c:6383)
          TypeDecl: declname='id', quals=[] (at pp.c:6383)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__release', quals=[] (at pp.c:6383)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__ResourceConfigure__configure', quals=[], storage=['inline', 'static'] (at pp.c:6387)
    FuncDecl: quals=None (at pp.c:6387)
      ParamList:  (at pp.c:6387)
        Decl: name='id', quals=[], storage=[] (at pp.c:6387)
          TypeDecl: declname='id', quals=[] (at pp.c:6387)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__ResourceConfigure__configure', quals=[] (at pp.c:6387)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__ResourceConfigure__unconfigure', quals=[], storage=['inline', 'static'] (at pp.c:6391)
    FuncDecl: quals=None (at pp.c:6391)
      ParamList:  (at pp.c:6391)
        Decl: name='id', quals=[], storage=[] (at pp.c:6391)
          TypeDecl: declname='id', quals=[] (at pp.c:6391)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__ResourceConfigure__unconfigure', quals=[] (at pp.c:6391)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:6397)
    FuncDecl: quals=None (at pp.c:6397)
      ParamList:  (at pp.c:6397)
        Decl: name='id', quals=[], storage=[] (at pp.c:6397)
          TypeDecl: declname='id', quals=[] (at pp.c:6397)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__granted', quals=[] (at pp.c:6397)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__SpiByte__write', quals=[], storage=['static'] (at pp.c:6401)
    FuncDecl: quals=None (at pp.c:6401)
      ParamList:  (at pp.c:6401)
        Decl: name='tx', quals=[], storage=[] (at pp.c:6401)
          TypeDecl: declname='tx', quals=[] (at pp.c:6401)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__SpiByte__write', quals=[] (at pp.c:6401)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__isOwner', quals=[], storage=['inline', 'static'] (at pp.c:6403)
    FuncDecl: quals=None (at pp.c:6403)
      ParamList:  (at pp.c:6403)
        Decl: name='id', quals=[], storage=[] (at pp.c:6403)
          TypeDecl: declname='id', quals=[] (at pp.c:6403)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__isOwner', quals=[] (at pp.c:6403)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__request', quals=[], storage=['inline', 'static'] (at pp.c:6404)
    FuncDecl: quals=None (at pp.c:6404)
      ParamList:  (at pp.c:6404)
        Decl: name='id', quals=[], storage=[] (at pp.c:6404)
          TypeDecl: declname='id', quals=[] (at pp.c:6404)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__request', quals=[] (at pp.c:6404)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:6405)
    FuncDecl: quals=None (at pp.c:6405)
      ParamList:  (at pp.c:6405)
        Decl: name='id', quals=[], storage=[] (at pp.c:6405)
          TypeDecl: declname='id', quals=[] (at pp.c:6405)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__immediateRequest', quals=[] (at pp.c:6405)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__release', quals=[], storage=['inline', 'static'] (at pp.c:6406)
    FuncDecl: quals=None (at pp.c:6406)
      ParamList:  (at pp.c:6406)
        Decl: name='id', quals=[], storage=[] (at pp.c:6406)
          TypeDecl: declname='id', quals=[] (at pp.c:6406)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__release', quals=[] (at pp.c:6406)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Msp430SpiConfigure__default__getConfig', quals=[], storage=['inline', 'static'] (at pp.c:6407)
    FuncDecl: quals=None (at pp.c:6407)
      ParamList:  (at pp.c:6407)
        Decl: name='id', quals=[], storage=[] (at pp.c:6407)
          TypeDecl: declname='id', quals=[] (at pp.c:6407)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:6407)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Msp430SpiConfigure__default__getConfig', quals=[] (at pp.c:6407)
          IdentifierType: names=['msp430_spi_union_config_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:6411)
    FuncDecl: quals=None (at pp.c:6411)
      ParamList:  (at pp.c:6411)
        Decl: name='id', quals=[], storage=[] (at pp.c:6411)
          TypeDecl: declname='id', quals=[] (at pp.c:6411)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__default__granted', quals=[] (at pp.c:6411)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__continueOp', quals=[], storage=['static'] (at pp.c:6413)
    FuncDecl: quals=None (at pp.c:6413)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__continueOp', quals=[] (at pp.c:6413)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__SpiPacket__send', quals=[], storage=['static'] (at pp.c:6415)
    FuncDecl: quals=None (at pp.c:6415)
      ParamList:  (at pp.c:6415)
        Decl: name='id', quals=[], storage=[] (at pp.c:6415)
          TypeDecl: declname='id', quals=[] (at pp.c:6415)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='tx_buf', quals=[], storage=[] (at pp.c:6415)
          PtrDecl: quals=[] (at pp.c:6415)
            TypeDecl: declname='tx_buf', quals=[] (at pp.c:6415)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rx_buf', quals=[], storage=[] (at pp.c:6416)
          PtrDecl: quals=[] (at pp.c:6416)
            TypeDecl: declname='rx_buf', quals=[] (at pp.c:6416)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:6417)
          TypeDecl: declname='len', quals=[] (at pp.c:6417)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__SpiPacket__send', quals=[] (at pp.c:6415)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__signalDone_task__runTask', quals=[], storage=['inline', 'static'] (at pp.c:6419)
    FuncDecl: quals=None (at pp.c:6419)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__signalDone_task__runTask', quals=[] (at pp.c:6419)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartInterrupts__rxDone', quals=[], storage=['inline', 'static'] (at pp.c:6423)
    FuncDecl: quals=None (at pp.c:6423)
      ParamList:  (at pp.c:6423)
        Decl: name='data', quals=[], storage=[] (at pp.c:6423)
          TypeDecl: declname='data', quals=[] (at pp.c:6423)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartInterrupts__rxDone', quals=[] (at pp.c:6423)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__signalDone', quals=[], storage=['inline', 'static'] (at pp.c:6425)
    FuncDecl: quals=None (at pp.c:6425)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__signalDone', quals=[] (at pp.c:6425)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartInterrupts__txDone', quals=[], storage=['inline', 'static'] (at pp.c:6430)
    FuncDecl: quals=None (at pp.c:6430)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartInterrupts__txDone', quals=[] (at pp.c:6430)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__SpiPacket__default__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:6432)
    FuncDecl: quals=None (at pp.c:6432)
      ParamList:  (at pp.c:6432)
        Decl: name='id', quals=[], storage=[] (at pp.c:6432)
          TypeDecl: declname='id', quals=[] (at pp.c:6432)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='tx_buf', quals=[], storage=[] (at pp.c:6432)
          PtrDecl: quals=[] (at pp.c:6432)
            TypeDecl: declname='tx_buf', quals=[] (at pp.c:6432)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rx_buf', quals=[], storage=[] (at pp.c:6432)
          PtrDecl: quals=[] (at pp.c:6432)
            TypeDecl: declname='rx_buf', quals=[] (at pp.c:6432)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:6432)
          TypeDecl: declname='len', quals=[] (at pp.c:6432)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:6432)
          TypeDecl: declname='error', quals=[] (at pp.c:6432)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__SpiPacket__default__sendDone', quals=[] (at pp.c:6432)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__UCLK__selectIOFunc', quals=[], storage=['static'] (at pp.c:6434)
    FuncDecl: quals=None (at pp.c:6434)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__UCLK__selectIOFunc', quals=[] (at pp.c:6434)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__UCLK__selectModuleFunc', quals=[], storage=['static'] (at pp.c:6436)
    FuncDecl: quals=None (at pp.c:6436)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__UCLK__selectModuleFunc', quals=[] (at pp.c:6436)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Interrupts__rxDone', quals=[], storage=['static'] (at pp.c:6438)
    FuncDecl: quals=None (at pp.c:6438)
      ParamList:  (at pp.c:6438)
        Decl: name='data', quals=[], storage=[] (at pp.c:6438)
          TypeDecl: declname='data', quals=[] (at pp.c:6438)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Interrupts__rxDone', quals=[] (at pp.c:6438)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Interrupts__txDone', quals=[], storage=['static'] (at pp.c:6440)
    FuncDecl: quals=None (at pp.c:6440)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Interrupts__txDone', quals=[] (at pp.c:6440)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__URXD__selectIOFunc', quals=[], storage=['static'] (at pp.c:6442)
    FuncDecl: quals=None (at pp.c:6442)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__URXD__selectIOFunc', quals=[] (at pp.c:6442)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__UTXD__selectIOFunc', quals=[], storage=['static'] (at pp.c:6444)
    FuncDecl: quals=None (at pp.c:6444)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__UTXD__selectIOFunc', quals=[] (at pp.c:6444)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__HplI2C__clearModeI2C', quals=[], storage=['static'] (at pp.c:6446)
    FuncDecl: quals=None (at pp.c:6446)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__HplI2C__clearModeI2C', quals=[] (at pp.c:6446)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__HplI2C__isI2C', quals=[], storage=['static'] (at pp.c:6448)
    FuncDecl: quals=None (at pp.c:6448)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__HplI2C__isI2C', quals=[] (at pp.c:6448)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430Usart0P__SOMI__selectIOFunc', quals=[], storage=['static'] (at pp.c:6450)
    FuncDecl: quals=None (at pp.c:6450)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__SOMI__selectIOFunc', quals=[] (at pp.c:6450)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__SOMI__selectModuleFunc', quals=[], storage=['static'] (at pp.c:6452)
    FuncDecl: quals=None (at pp.c:6452)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__SOMI__selectModuleFunc', quals=[] (at pp.c:6452)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__I2CInterrupts__fired', quals=[], storage=['static'] (at pp.c:6454)
    FuncDecl: quals=None (at pp.c:6454)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__I2CInterrupts__fired', quals=[] (at pp.c:6454)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__SIMO__selectIOFunc', quals=[], storage=['static'] (at pp.c:6456)
    FuncDecl: quals=None (at pp.c:6456)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__SIMO__selectIOFunc', quals=[] (at pp.c:6456)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__SIMO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:6458)
    FuncDecl: quals=None (at pp.c:6458)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__SIMO__selectModuleFunc', quals=[] (at pp.c:6458)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__IE1@"0x0000"', quals=['volatile'], storage=['static'] (at pp.c:6460)
    TypeDecl: declname='HplMsp430Usart0P__IE1@"0x0000"', quals=['volatile'] (at pp.c:6460)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430Usart0P__ME1@"0x0004"', quals=['volatile'], storage=['static'] (at pp.c:6461)
    TypeDecl: declname='HplMsp430Usart0P__ME1@"0x0004"', quals=['volatile'] (at pp.c:6461)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430Usart0P__IFG1@"0x0002"', quals=['volatile'], storage=['static'] (at pp.c:6462)
    TypeDecl: declname='HplMsp430Usart0P__IFG1@"0x0002"', quals=['volatile'] (at pp.c:6462)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430Usart0P__U0TCTL@"0x0071"', quals=['volatile'], storage=['static'] (at pp.c:6463)
    TypeDecl: declname='HplMsp430Usart0P__U0TCTL@"0x0071"', quals=['volatile'] (at pp.c:6463)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430Usart0P__U0TXBUF@"0x0077"', quals=['volatile'], storage=['static'] (at pp.c:6465)
    TypeDecl: declname='HplMsp430Usart0P__U0TXBUF@"0x0077"', quals=['volatile'] (at pp.c:6465)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='sig_UART0RX_VECTOR', quals=[], storage=[] (at pp.c:6467)
    FuncDecl: quals=None (at pp.c:6467)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_UART0RX_VECTOR', quals=[] (at pp.c:6467)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_UART0TX_VECTOR', quals=[], storage=[] (at pp.c:6472)
    FuncDecl: quals=None (at pp.c:6472)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_UART0TX_VECTOR', quals=[] (at pp.c:6472)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__setUbr', quals=[], storage=['inline', 'static'] (at pp.c:6474)
    FuncDecl: quals=None (at pp.c:6474)
      ParamList:  (at pp.c:6474)
        Decl: name='control', quals=[], storage=[] (at pp.c:6474)
          TypeDecl: declname='control', quals=[] (at pp.c:6474)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__setUbr', quals=[] (at pp.c:6474)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__setUmctl', quals=[], storage=['inline', 'static'] (at pp.c:6485)
    FuncDecl: quals=None (at pp.c:6485)
      ParamList:  (at pp.c:6485)
        Decl: name='control', quals=[], storage=[] (at pp.c:6485)
          TypeDecl: declname='control', quals=[] (at pp.c:6485)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__setUmctl', quals=[] (at pp.c:6485)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__resetUsart', quals=[], storage=['inline', 'static'] (at pp.c:6493)
    FuncDecl: quals=None (at pp.c:6493)
      ParamList:  (at pp.c:6493)
        Decl: name='reset', quals=[], storage=[] (at pp.c:6493)
          TypeDecl: declname='reset', quals=[] (at pp.c:6493)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__resetUsart', quals=[] (at pp.c:6493)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__disableUart', quals=[], storage=['inline', 'static'] (at pp.c:6495)
    FuncDecl: quals=None (at pp.c:6495)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__disableUart', quals=[] (at pp.c:6495)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__enableSpi', quals=[], storage=['inline', 'static'] (at pp.c:6497)
    FuncDecl: quals=None (at pp.c:6497)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__enableSpi', quals=[] (at pp.c:6497)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__disableSpi', quals=[], storage=['static'] (at pp.c:6506)
    FuncDecl: quals=None (at pp.c:6506)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__disableSpi', quals=[] (at pp.c:6506)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__configSpi', quals=[], storage=['inline', 'static'] (at pp.c:6515)
    FuncDecl: quals=None (at pp.c:6515)
      ParamList:  (at pp.c:6515)
        Decl: name='config', quals=[], storage=[] (at pp.c:6515)
          PtrDecl: quals=[] (at pp.c:6515)
            TypeDecl: declname='config', quals=[] (at pp.c:6515)
              IdentifierType: names=['msp430_spi_union_config_t'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__configSpi', quals=[] (at pp.c:6515)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__setModeSpi', quals=[], storage=['static'] (at pp.c:6524)
    FuncDecl: quals=None (at pp.c:6524)
      ParamList:  (at pp.c:6524)
        Decl: name='config', quals=[], storage=[] (at pp.c:6524)
          PtrDecl: quals=[] (at pp.c:6524)
            TypeDecl: declname='config', quals=[] (at pp.c:6524)
              IdentifierType: names=['msp430_spi_union_config_t'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__setModeSpi', quals=[] (at pp.c:6524)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__isRxIntrPending', quals=[], storage=['inline', 'static'] (at pp.c:6526)
    FuncDecl: quals=None (at pp.c:6526)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__isRxIntrPending', quals=[] (at pp.c:6526)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__clrRxIntr', quals=[], storage=['inline', 'static'] (at pp.c:6537)
    FuncDecl: quals=None (at pp.c:6537)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__clrRxIntr', quals=[] (at pp.c:6537)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__clrIntr', quals=[], storage=['inline', 'static'] (at pp.c:6541)
    FuncDecl: quals=None (at pp.c:6541)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__clrIntr', quals=[] (at pp.c:6541)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__disableRxIntr', quals=[], storage=['inline', 'static'] (at pp.c:6545)
    FuncDecl: quals=None (at pp.c:6545)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__disableRxIntr', quals=[] (at pp.c:6545)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__disableIntr', quals=[], storage=['inline', 'static'] (at pp.c:6553)
    FuncDecl: quals=None (at pp.c:6553)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__disableIntr', quals=[] (at pp.c:6553)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__enableRxIntr', quals=[], storage=['inline', 'static'] (at pp.c:6557)
    FuncDecl: quals=None (at pp.c:6557)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__enableRxIntr', quals=[] (at pp.c:6557)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__tx', quals=[], storage=['inline', 'static'] (at pp.c:6559)
    FuncDecl: quals=None (at pp.c:6559)
      ParamList:  (at pp.c:6559)
        Decl: name='data', quals=[], storage=[] (at pp.c:6559)
          TypeDecl: declname='data', quals=[] (at pp.c:6559)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__tx', quals=[] (at pp.c:6559)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__rx', quals=[], storage=['inline', 'static'] (at pp.c:6563)
    FuncDecl: quals=None (at pp.c:6563)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__rx', quals=[] (at pp.c:6563)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430UsartShareP__0__ArbiterInfo__inUse', quals=[], storage=['static'] (at pp.c:6565)
    FuncDecl: quals=None (at pp.c:6565)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__ArbiterInfo__inUse', quals=[] (at pp.c:6565)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430UsartShareP__0__ArbiterInfo__userId', quals=[], storage=['static'] (at pp.c:6573)
    FuncDecl: quals=None (at pp.c:6573)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__ArbiterInfo__userId', quals=[] (at pp.c:6573)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430UsartShareP__0__Interrupts__rxDone', quals=[], storage=['static'] (at pp.c:6575)
    FuncDecl: quals=None (at pp.c:6575)
      ParamList:  (at pp.c:6577)
        Decl: name='arg_0x101ed5800', quals=[], storage=[] (at pp.c:6577)
          TypeDecl: declname='arg_0x101ed5800', quals=[] (at pp.c:6577)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:6579)
          TypeDecl: declname='data', quals=[] (at pp.c:6579)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__Interrupts__rxDone', quals=[] (at pp.c:6575)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__Interrupts__txDone', quals=[], storage=['static'] (at pp.c:6581)
    FuncDecl: quals=None (at pp.c:6581)
      ParamList:  (at pp.c:6583)
        Decl: name='arg_0x101ed5800', quals=[], storage=[] (at pp.c:6583)
          TypeDecl: declname='arg_0x101ed5800', quals=[] (at pp.c:6583)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__Interrupts__txDone', quals=[] (at pp.c:6581)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__I2CInterrupts__fired', quals=[], storage=['static'] (at pp.c:6585)
    FuncDecl: quals=None (at pp.c:6585)
      ParamList:  (at pp.c:6587)
        Decl: name='arg_0x101ed4620', quals=[], storage=[] (at pp.c:6587)
          TypeDecl: declname='arg_0x101ed4620', quals=[] (at pp.c:6587)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__I2CInterrupts__fired', quals=[] (at pp.c:6585)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__RawInterrupts__txDone', quals=[], storage=['inline', 'static'] (at pp.c:6596)
    FuncDecl: quals=None (at pp.c:6596)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__RawInterrupts__txDone', quals=[] (at pp.c:6596)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__RawInterrupts__rxDone', quals=[], storage=['inline', 'static'] (at pp.c:6601)
    FuncDecl: quals=None (at pp.c:6601)
      ParamList:  (at pp.c:6601)
        Decl: name='data', quals=[], storage=[] (at pp.c:6601)
          TypeDecl: declname='data', quals=[] (at pp.c:6601)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__RawInterrupts__rxDone', quals=[] (at pp.c:6601)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__RawI2CInterrupts__fired', quals=[], storage=['inline', 'static'] (at pp.c:6606)
    FuncDecl: quals=None (at pp.c:6606)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__RawI2CInterrupts__fired', quals=[] (at pp.c:6606)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__Interrupts__default__txDone', quals=[], storage=['inline', 'static'] (at pp.c:6611)
    FuncDecl: quals=None (at pp.c:6611)
      ParamList:  (at pp.c:6611)
        Decl: name='id', quals=[], storage=[] (at pp.c:6611)
          TypeDecl: declname='id', quals=[] (at pp.c:6611)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__Interrupts__default__txDone', quals=[] (at pp.c:6611)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__Interrupts__default__rxDone', quals=[], storage=['inline', 'static'] (at pp.c:6612)
    FuncDecl: quals=None (at pp.c:6612)
      ParamList:  (at pp.c:6612)
        Decl: name='id', quals=[], storage=[] (at pp.c:6612)
          TypeDecl: declname='id', quals=[] (at pp.c:6612)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:6612)
          TypeDecl: declname='data', quals=[] (at pp.c:6612)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__Interrupts__default__rxDone', quals=[] (at pp.c:6612)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__I2CInterrupts__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:6613)
    FuncDecl: quals=None (at pp.c:6613)
      ParamList:  (at pp.c:6613)
        Decl: name='id', quals=[], storage=[] (at pp.c:6613)
          TypeDecl: declname='id', quals=[] (at pp.c:6613)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__I2CInterrupts__default__fired', quals=[] (at pp.c:6613)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:6615)
    Enum: name='FcfsResourceQueueC__1____nesc_unnamed4332' (at pp.c:6615)
      EnumeratorList:  (at pp.c:6617)
        Enumerator: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:6617)
          Constant: type='int', value='0xFF' (at pp.c:6617)
  Decl: name='FcfsResourceQueueC__1__resQ', quals=[], storage=[] (at pp.c:6619)
    ArrayDecl:  (at pp.c:6619)
      TypeDecl: declname='FcfsResourceQueueC__1__resQ', quals=[] (at pp.c:6619)
        IdentifierType: names=['uint8_t'] (at None)
      Constant: type='int', value='1U' (at pp.c:6619)
  Decl: name='FcfsResourceQueueC__1__qHead', quals=[], storage=[] (at pp.c:6620)
    TypeDecl: declname='FcfsResourceQueueC__1__qHead', quals=[] (at pp.c:6620)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:6620)
  Decl: name='FcfsResourceQueueC__1__qTail', quals=[], storage=[] (at pp.c:6621)
    TypeDecl: declname='FcfsResourceQueueC__1__qTail', quals=[] (at pp.c:6621)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:6621)
  Decl: name='FcfsResourceQueueC__1__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:6623)
    FuncDecl: quals=None (at pp.c:6623)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__1__Init__init', quals=[] (at pp.c:6623)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='FcfsResourceQueueC__1__FcfsQueue__isEmpty', quals=[], storage=['inline', 'static'] (at pp.c:6628)
    FuncDecl: quals=None (at pp.c:6628)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__isEmpty', quals=[] (at pp.c:6628)
        IdentifierType: names=['bool'] (at None)
  Decl: name='FcfsResourceQueueC__1__FcfsQueue__isEnqueued', quals=[], storage=['inline', 'static'] (at pp.c:6632)
    FuncDecl: quals=None (at pp.c:6632)
      ParamList:  (at pp.c:6632)
        Decl: name='id', quals=[], storage=[] (at pp.c:6632)
          TypeDecl: declname='id', quals=[] (at pp.c:6632)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__isEnqueued', quals=[] (at pp.c:6632)
        IdentifierType: names=['bool'] (at None)
  Decl: name='FcfsResourceQueueC__1__FcfsQueue__dequeue', quals=[], storage=['inline', 'static'] (at pp.c:6636)
    FuncDecl: quals=None (at pp.c:6636)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__dequeue', quals=[] (at pp.c:6636)
        IdentifierType: names=['resource_client_id_t'] (at None)
  Decl: name='FcfsResourceQueueC__1__FcfsQueue__enqueue', quals=[], storage=['inline', 'static'] (at pp.c:6638)
    FuncDecl: quals=None (at pp.c:6638)
      ParamList:  (at pp.c:6638)
        Decl: name='id', quals=[], storage=[] (at pp.c:6638)
          TypeDecl: declname='id', quals=[] (at pp.c:6638)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__enqueue', quals=[] (at pp.c:6638)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__0__ResourceRequested__requested', quals=[], storage=['static'] (at pp.c:6640)
    FuncDecl: quals=None (at pp.c:6640)
      ParamList:  (at pp.c:6642)
        Decl: name='arg_0x101edd7e8', quals=[], storage=[] (at pp.c:6642)
          TypeDecl: declname='arg_0x101edd7e8', quals=[] (at pp.c:6642)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceRequested__requested', quals=[] (at pp.c:6640)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceRequested__immediateRequested', quals=[], storage=['static'] (at pp.c:6644)
    FuncDecl: quals=None (at pp.c:6644)
      ParamList:  (at pp.c:6646)
        Decl: name='arg_0x101edd7e8', quals=[], storage=[] (at pp.c:6646)
          TypeDecl: declname='arg_0x101edd7e8', quals=[] (at pp.c:6646)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceRequested__immediateRequested', quals=[] (at pp.c:6644)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceConfigure__unconfigure', quals=[], storage=['static'] (at pp.c:6648)
    FuncDecl: quals=None (at pp.c:6648)
      ParamList:  (at pp.c:6650)
        Decl: name='arg_0x101f209b8', quals=[], storage=[] (at pp.c:6650)
          TypeDecl: declname='arg_0x101f209b8', quals=[] (at pp.c:6650)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceConfigure__unconfigure', quals=[] (at pp.c:6648)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceConfigure__configure', quals=[], storage=['static'] (at pp.c:6652)
    FuncDecl: quals=None (at pp.c:6652)
      ParamList:  (at pp.c:6654)
        Decl: name='arg_0x101f209b8', quals=[], storage=[] (at pp.c:6654)
          TypeDecl: declname='arg_0x101f209b8', quals=[] (at pp.c:6654)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceConfigure__configure', quals=[] (at pp.c:6652)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__Queue__enqueue', quals=[], storage=['static'] (at pp.c:6656)
    FuncDecl: quals=None (at pp.c:6656)
      ParamList:  (at pp.c:6656)
        Decl: name='id', quals=[], storage=[] (at pp.c:6656)
          TypeDecl: declname='id', quals=[] (at pp.c:6656)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Queue__enqueue', quals=[] (at pp.c:6656)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__0__Queue__isEmpty', quals=[], storage=['static'] (at pp.c:6658)
    FuncDecl: quals=None (at pp.c:6658)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__Queue__isEmpty', quals=[] (at pp.c:6658)
        IdentifierType: names=['bool'] (at None)
  Decl: name='ArbiterP__0__Queue__dequeue', quals=[], storage=['static'] (at pp.c:6660)
    FuncDecl: quals=None (at pp.c:6660)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__Queue__dequeue', quals=[] (at pp.c:6660)
        IdentifierType: names=['resource_client_id_t'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__requested', quals=[], storage=['static'] (at pp.c:6662)
    FuncDecl: quals=None (at pp.c:6662)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__requested', quals=[] (at pp.c:6662)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__granted', quals=[], storage=['static'] (at pp.c:6664)
    FuncDecl: quals=None (at pp.c:6664)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__granted', quals=[] (at pp.c:6664)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__immediateRequested', quals=[], storage=['static'] (at pp.c:6666)
    FuncDecl: quals=None (at pp.c:6666)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__immediateRequested', quals=[] (at pp.c:6666)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__Resource__granted', quals=[], storage=['static'] (at pp.c:6668)
    FuncDecl: quals=None (at pp.c:6668)
      ParamList:  (at pp.c:6670)
        Decl: name='arg_0x101ede658', quals=[], storage=[] (at pp.c:6670)
          TypeDecl: declname='arg_0x101ede658', quals=[] (at pp.c:6670)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__granted', quals=[] (at pp.c:6668)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__grantedTask__postTask', quals=[], storage=['static'] (at pp.c:6672)
    FuncDecl: quals=None (at pp.c:6672)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__grantedTask__postTask', quals=[] (at pp.c:6672)
        IdentifierType: names=['error_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:6674)
    Enum: name='ArbiterP__0____nesc_unnamed4333' (at pp.c:6674)
      EnumeratorList:  (at pp.c:6676)
        Enumerator: name='ArbiterP__0__grantedTask' (at pp.c:6676)
          Constant: type='int', value='9U' (at pp.c:6676)
  Typedef: name='ArbiterP__0____nesc_sillytask_grantedTask', quals=[], storage=['typedef'] (at pp.c:6679)
    ArrayDecl:  (at pp.c:6679)
      TypeDecl: declname='ArbiterP__0____nesc_sillytask_grantedTask', quals=[] (at pp.c:6679)
        IdentifierType: names=['int'] (at None)
      ID: name='ArbiterP__0__grantedTask' (at pp.c:6679)
  Decl: name=None, quals=[], storage=[] (at pp.c:6681)
    Enum: name='ArbiterP__0____nesc_unnamed4334' (at pp.c:6681)
      EnumeratorList:  (at pp.c:6683)
        Enumerator: name='ArbiterP__0__RES_CONTROLLED' (at pp.c:6683)
        Enumerator: name='ArbiterP__0__RES_GRANTING' (at pp.c:6683)
        Enumerator: name='ArbiterP__0__RES_IMM_GRANTING' (at pp.c:6683)
        Enumerator: name='ArbiterP__0__RES_BUSY' (at pp.c:6683)
  Decl: name=None, quals=[], storage=[] (at pp.c:6686)
    Enum: name='ArbiterP__0____nesc_unnamed4335' (at pp.c:6686)
      EnumeratorList:  (at pp.c:6688)
        Enumerator: name='ArbiterP__0__default_owner_id' (at pp.c:6688)
          Constant: type='int', value='1U' (at pp.c:6688)
  Decl: name=None, quals=[], storage=[] (at pp.c:6691)
    Enum: name='ArbiterP__0____nesc_unnamed4336' (at pp.c:6691)
      EnumeratorList:  (at pp.c:6693)
        Enumerator: name='ArbiterP__0__NO_RES' (at pp.c:6693)
          Constant: type='int', value='0xFF' (at pp.c:6693)
  Decl: name='ArbiterP__0__state', quals=[], storage=[] (at pp.c:6695)
    TypeDecl: declname='ArbiterP__0__state', quals=[] (at pp.c:6695)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='ArbiterP__0__RES_CONTROLLED' (at pp.c:6695)
  Decl: name='ArbiterP__0__resId', quals=[], storage=[] (at pp.c:6696)
    TypeDecl: declname='ArbiterP__0__resId', quals=[] (at pp.c:6696)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='ArbiterP__0__default_owner_id' (at pp.c:6696)
  Decl: name='ArbiterP__0__reqResId', quals=[], storage=[] (at pp.c:6697)
    TypeDecl: declname='ArbiterP__0__reqResId', quals=[] (at pp.c:6697)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='ArbiterP__0__Resource__request', quals=[], storage=['inline', 'static'] (at pp.c:6701)
    FuncDecl: quals=None (at pp.c:6701)
      ParamList:  (at pp.c:6701)
        Decl: name='id', quals=[], storage=[] (at pp.c:6701)
          TypeDecl: declname='id', quals=[] (at pp.c:6701)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__request', quals=[] (at pp.c:6701)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__0__Resource__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:6703)
    FuncDecl: quals=None (at pp.c:6703)
      ParamList:  (at pp.c:6703)
        Decl: name='id', quals=[], storage=[] (at pp.c:6703)
          TypeDecl: declname='id', quals=[] (at pp.c:6703)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__immediateRequest', quals=[] (at pp.c:6703)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__0__Resource__release', quals=[], storage=['inline', 'static'] (at pp.c:6705)
    FuncDecl: quals=None (at pp.c:6705)
      ParamList:  (at pp.c:6705)
        Decl: name='id', quals=[], storage=[] (at pp.c:6705)
          TypeDecl: declname='id', quals=[] (at pp.c:6705)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__release', quals=[] (at pp.c:6705)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__release', quals=[], storage=['static'] (at pp.c:6707)
    FuncDecl: quals=None (at pp.c:6707)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__release', quals=[] (at pp.c:6707)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__0__ArbiterInfo__inUse', quals=[], storage=['static'] (at pp.c:6709)
    FuncDecl: quals=None (at pp.c:6709)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ArbiterInfo__inUse', quals=[] (at pp.c:6709)
        IdentifierType: names=['bool'] (at None)
  Decl: name='ArbiterP__0__ArbiterInfo__userId', quals=[], storage=['static'] (at pp.c:6711)
    FuncDecl: quals=None (at pp.c:6711)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ArbiterInfo__userId', quals=[] (at pp.c:6711)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='ArbiterP__0__Resource__isOwner', quals=[], storage=['static'] (at pp.c:6722)
    FuncDecl: quals=None (at pp.c:6722)
      ParamList:  (at pp.c:6722)
        Decl: name='id', quals=[], storage=[] (at pp.c:6722)
          TypeDecl: declname='id', quals=[] (at pp.c:6722)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__isOwner', quals=[] (at pp.c:6722)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='ArbiterP__0__grantedTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:6724)
    FuncDecl: quals=None (at pp.c:6724)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__grantedTask__runTask', quals=[] (at pp.c:6724)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:6726)
    FuncDecl: quals=None (at pp.c:6726)
      ParamList:  (at pp.c:6726)
        Decl: name='id', quals=[], storage=[] (at pp.c:6726)
          TypeDecl: declname='id', quals=[] (at pp.c:6726)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__default__granted', quals=[] (at pp.c:6726)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceRequested__default__requested', quals=[], storage=['inline', 'static'] (at pp.c:6728)
    FuncDecl: quals=None (at pp.c:6728)
      ParamList:  (at pp.c:6728)
        Decl: name='id', quals=[], storage=[] (at pp.c:6728)
          TypeDecl: declname='id', quals=[] (at pp.c:6728)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceRequested__default__requested', quals=[] (at pp.c:6728)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceRequested__default__immediateRequested', quals=[], storage=['inline', 'static'] (at pp.c:6730)
    FuncDecl: quals=None (at pp.c:6730)
      ParamList:  (at pp.c:6730)
        Decl: name='id', quals=[], storage=[] (at pp.c:6730)
          TypeDecl: declname='id', quals=[] (at pp.c:6730)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceRequested__default__immediateRequested', quals=[] (at pp.c:6730)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:6732)
    FuncDecl: quals=None (at pp.c:6732)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__default__granted', quals=[] (at pp.c:6732)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__default__requested', quals=[], storage=['inline', 'static'] (at pp.c:6734)
    FuncDecl: quals=None (at pp.c:6734)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__default__requested', quals=[] (at pp.c:6734)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__default__immediateRequested', quals=[], storage=['inline', 'static'] (at pp.c:6737)
    FuncDecl: quals=None (at pp.c:6737)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__default__immediateRequested', quals=[] (at pp.c:6737)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceConfigure__default__configure', quals=[], storage=['inline', 'static'] (at pp.c:6740)
    FuncDecl: quals=None (at pp.c:6740)
      ParamList:  (at pp.c:6740)
        Decl: name='id', quals=[], storage=[] (at pp.c:6740)
          TypeDecl: declname='id', quals=[] (at pp.c:6740)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceConfigure__default__configure', quals=[] (at pp.c:6740)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceConfigure__default__unconfigure', quals=[], storage=['inline', 'static'] (at pp.c:6742)
    FuncDecl: quals=None (at pp.c:6742)
      ParamList:  (at pp.c:6742)
        Decl: name='id', quals=[], storage=[] (at pp.c:6742)
          TypeDecl: declname='id', quals=[] (at pp.c:6742)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceConfigure__default__unconfigure', quals=[] (at pp.c:6742)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430I2C0P__HplUsart__resetUsart', quals=[], storage=['static'] (at pp.c:6744)
    FuncDecl: quals=None (at pp.c:6744)
      ParamList:  (at pp.c:6744)
        Decl: name='reset', quals=[], storage=[] (at pp.c:6744)
          TypeDecl: declname='reset', quals=[] (at pp.c:6744)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='HplMsp430I2C0P__HplUsart__resetUsart', quals=[] (at pp.c:6744)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430I2C0P__U0CTL@"0x0070"', quals=['volatile'], storage=['static'] (at pp.c:6746)
    TypeDecl: declname='HplMsp430I2C0P__U0CTL@"0x0070"', quals=['volatile'] (at pp.c:6746)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430I2C0P__HplI2C__isI2C', quals=[], storage=['inline', 'static'] (at pp.c:6752)
    FuncDecl: quals=None (at pp.c:6752)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430I2C0P__HplI2C__isI2C', quals=[] (at pp.c:6752)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430I2C0P__HplI2C__clearModeI2C', quals=[], storage=['inline', 'static'] (at pp.c:6756)
    FuncDecl: quals=None (at pp.c:6756)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430I2C0P__HplI2C__clearModeI2C', quals=[] (at pp.c:6756)
        IdentifierType: names=['void'] (at None)
  Decl: name='ActiveMessageAddressC__addr', quals=[], storage=[] (at pp.c:6758)
    TypeDecl: declname='ActiveMessageAddressC__addr', quals=[] (at pp.c:6758)
      IdentifierType: names=['am_addr_t'] (at None)
    ID: name='TOS_AM_ADDRESS' (at pp.c:6758)
  Decl: name='ActiveMessageAddressC__group', quals=[], storage=[] (at pp.c:6761)
    TypeDecl: declname='ActiveMessageAddressC__group', quals=[] (at pp.c:6761)
      IdentifierType: names=['am_group_t'] (at None)
    ID: name='TOS_AM_GROUP' (at pp.c:6761)
  Decl: name='ActiveMessageAddressC__ActiveMessageAddress__amAddress', quals=[], storage=['inline', 'static'] (at pp.c:6768)
    FuncDecl: quals=None (at pp.c:6768)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ActiveMessageAddressC__ActiveMessageAddress__amAddress', quals=[] (at pp.c:6768)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='ActiveMessageAddressC__ActiveMessageAddress__amGroup', quals=[], storage=['inline', 'static'] (at pp.c:6770)
    FuncDecl: quals=None (at pp.c:6770)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ActiveMessageAddressC__ActiveMessageAddress__amGroup', quals=[] (at pp.c:6770)
        IdentifierType: names=['am_group_t'] (at None)
  Decl: name='ActiveMessageAddressC__amAddress', quals=[], storage=['static'] (at pp.c:6772)
    FuncDecl: quals=None (at pp.c:6772)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ActiveMessageAddressC__amAddress', quals=[] (at pp.c:6772)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='Ds2411P__OneWire__read', quals=[], storage=['static'] (at pp.c:6774)
    FuncDecl: quals=None (at pp.c:6774)
      ParamList:  (at pp.c:6774)
        Decl: name='cmd', quals=[], storage=[] (at pp.c:6774)
          TypeDecl: declname='cmd', quals=[] (at pp.c:6774)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:6774)
          PtrDecl: quals=[] (at pp.c:6774)
            TypeDecl: declname='buf', quals=[] (at pp.c:6774)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:6774)
          TypeDecl: declname='len', quals=[] (at pp.c:6774)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Ds2411P__OneWire__read', quals=[] (at pp.c:6774)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Ds2411P__haveId', quals=[], storage=[] (at pp.c:6776)
    TypeDecl: declname='Ds2411P__haveId', quals=[] (at pp.c:6776)
      IdentifierType: names=['bool'] (at None)
    ID: name='FALSE' (at pp.c:6776)
  Decl: name='Ds2411P__ds2411id', quals=[], storage=[] (at pp.c:6777)
    TypeDecl: declname='Ds2411P__ds2411id', quals=[] (at pp.c:6777)
      IdentifierType: names=['dallasid48_serial_t'] (at None)
  Decl: name='Ds2411P__readId', quals=[], storage=['inline', 'static'] (at pp.c:6779)
    FuncDecl: quals=None (at pp.c:6779)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Ds2411P__readId', quals=[] (at pp.c:6779)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Ds2411P__ReadId48__read', quals=[], storage=['inline', 'static'] (at pp.c:6781)
    FuncDecl: quals=None (at pp.c:6781)
      ParamList:  (at pp.c:6781)
        Decl: name='id', quals=[], storage=[] (at pp.c:6781)
          PtrDecl: quals=[] (at pp.c:6781)
            TypeDecl: declname='id', quals=[] (at pp.c:6781)
              IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Ds2411P__ReadId48__read', quals=[] (at pp.c:6781)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='OneWireMasterC__BusyWait__wait', quals=[], storage=['static'] (at pp.c:6783)
    FuncDecl: quals=None (at pp.c:6783)
      ParamList:  (at pp.c:6783)
        Decl: name='dt', quals=[], storage=[] (at pp.c:6783)
          TypeDecl: declname='dt', quals=[] (at pp.c:6783)
            IdentifierType: names=['OneWireMasterC__BusyWait__size_type'] (at None)
      TypeDecl: declname='OneWireMasterC__BusyWait__wait', quals=[] (at pp.c:6783)
        IdentifierType: names=['void'] (at None)
  Decl: name='OneWireMasterC__Pin__makeInput', quals=[], storage=['static'] (at pp.c:6785)
    FuncDecl: quals=None (at pp.c:6785)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OneWireMasterC__Pin__makeInput', quals=[] (at pp.c:6785)
        IdentifierType: names=['void'] (at None)
  Decl: name='OneWireMasterC__Pin__get', quals=[], storage=['static'] (at pp.c:6787)
    FuncDecl: quals=None (at pp.c:6787)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OneWireMasterC__Pin__get', quals=[] (at pp.c:6787)
        IdentifierType: names=['bool'] (at None)
  Decl: name='OneWireMasterC__Pin__makeOutput', quals=[], storage=['static'] (at pp.c:6790)
    FuncDecl: quals=None (at pp.c:6790)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OneWireMasterC__Pin__makeOutput', quals=[] (at pp.c:6790)
        IdentifierType: names=['void'] (at None)
  Decl: name='OneWireMasterC__Pin__clr', quals=[], storage=['static'] (at pp.c:6792)
    FuncDecl: quals=None (at pp.c:6792)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OneWireMasterC__Pin__clr', quals=[] (at pp.c:6792)
        IdentifierType: names=['void'] (at None)
  Typedef: name='OneWireMasterC__onewiretimes_t', quals=[], storage=['typedef'] (at pp.c:6802)
    TypeDecl: declname='OneWireMasterC__onewiretimes_t', quals=[] (at pp.c:6802)
      Enum: name='OneWireMasterC____nesc_unnamed4337' (at pp.c:6795)
        EnumeratorList:  (at pp.c:6796)
          Enumerator: name='OneWireMasterC__DELAY_5US' (at pp.c:6796)
            Constant: type='int', value='5' (at pp.c:6796)
          Enumerator: name='OneWireMasterC__RESET_LOW_TIME' (at pp.c:6797)
            Constant: type='int', value='560' (at pp.c:6797)
          Enumerator: name='OneWireMasterC__DELAY_60US' (at pp.c:6798)
            Constant: type='int', value='60' (at pp.c:6798)
          Enumerator: name='OneWireMasterC__PRESENCE_DETECT_LOW_TIME' (at pp.c:6799)
            Constant: type='int', value='240' (at pp.c:6799)
          Enumerator: name='OneWireMasterC__PRESENCE_RESET_HIGH_TIME' (at pp.c:6800)
            Constant: type='int', value='480' (at pp.c:6800)
          Enumerator: name='OneWireMasterC__SLOT_TIME' (at pp.c:6801)
            Constant: type='int', value='65' (at pp.c:6801)
  Decl: name='OneWireMasterC__reset', quals=[], storage=['inline', 'static'] (at pp.c:6804)
    FuncDecl: quals=None (at pp.c:6804)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OneWireMasterC__reset', quals=[] (at pp.c:6804)
        IdentifierType: names=['bool'] (at None)
  Decl: name='OneWireMasterC__writeOne', quals=[], storage=['inline', 'static'] (at pp.c:6806)
    FuncDecl: quals=None (at pp.c:6806)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OneWireMasterC__writeOne', quals=[] (at pp.c:6806)
        IdentifierType: names=['void'] (at None)
  Decl: name='OneWireMasterC__writeZero', quals=[], storage=['inline', 'static'] (at pp.c:6813)
    FuncDecl: quals=None (at pp.c:6813)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OneWireMasterC__writeZero', quals=[] (at pp.c:6813)
        IdentifierType: names=['void'] (at None)
  Decl: name='OneWireMasterC__readBit', quals=[], storage=['inline', 'static'] (at pp.c:6820)
    FuncDecl: quals=None (at pp.c:6820)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OneWireMasterC__readBit', quals=[] (at pp.c:6820)
        IdentifierType: names=['bool'] (at None)
  Decl: name='OneWireMasterC__writeByte', quals=[], storage=['inline', 'static'] (at pp.c:6831)
    FuncDecl: quals=None (at pp.c:6831)
      ParamList:  (at pp.c:6831)
        Decl: name='c', quals=[], storage=[] (at pp.c:6831)
          TypeDecl: declname='c', quals=[] (at pp.c:6831)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='OneWireMasterC__writeByte', quals=[] (at pp.c:6831)
        IdentifierType: names=['void'] (at None)
  Decl: name='OneWireMasterC__readByte', quals=[], storage=['inline', 'static'] (at pp.c:6833)
    FuncDecl: quals=None (at pp.c:6833)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OneWireMasterC__readByte', quals=[] (at pp.c:6833)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='OneWireMasterC__OneWire__read', quals=[], storage=['inline', 'static'] (at pp.c:6844)
    FuncDecl: quals=None (at pp.c:6844)
      ParamList:  (at pp.c:6844)
        Decl: name='cmd', quals=[], storage=[] (at pp.c:6844)
          TypeDecl: declname='cmd', quals=[] (at pp.c:6844)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:6844)
          PtrDecl: quals=[] (at pp.c:6844)
            TypeDecl: declname='buf', quals=[] (at pp.c:6844)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:6844)
          TypeDecl: declname='len', quals=[] (at pp.c:6844)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='OneWireMasterC__OneWire__read', quals=[] (at pp.c:6844)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='BusyWaitCounterC__0__Counter__get', quals=[], storage=['static'] (at pp.c:6846)
    FuncDecl: quals=None (at pp.c:6846)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BusyWaitCounterC__0__Counter__get', quals=[] (at pp.c:6846)
        IdentifierType: names=['BusyWaitCounterC__0__Counter__size_type'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:6848)
    Enum: name='BusyWaitCounterC__0____nesc_unnamed4338' (at pp.c:6848)
      EnumeratorList:  (at pp.c:6850)
        Enumerator: name='BusyWaitCounterC__0__HALF_MAX_SIZE_TYPE' (at pp.c:6850)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['BusyWaitCounterC__0__size_type'] (at None)
              Constant: type='int', value='1' (at pp.c:6850)
            BinaryOp: op='-' (at pp.c:6850)
              BinaryOp: op='*' (at pp.c:6850)
                Constant: type='int', value='8' (at pp.c:6850)
                UnaryOp: op='sizeof' (at pp.c:6850)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['BusyWaitCounterC__0__size_type'] (at None)
              Constant: type='int', value='1' (at pp.c:6850)
  Decl: name='BusyWaitCounterC__0__BusyWait__wait', quals=[], storage=['static'] (at pp.c:6853)
    FuncDecl: quals=None (at pp.c:6853)
      ParamList:  (at pp.c:6853)
        Decl: name='dt', quals=[], storage=[] (at pp.c:6853)
          TypeDecl: declname='dt', quals=[] (at pp.c:6853)
            IdentifierType: names=['BusyWaitCounterC__0__size_type'] (at None)
      TypeDecl: declname='BusyWaitCounterC__0__BusyWait__wait', quals=[] (at pp.c:6853)
        IdentifierType: names=['void'] (at None)
  Decl: name='BusyWaitCounterC__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:6855)
    FuncDecl: quals=None (at pp.c:6855)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BusyWaitCounterC__0__Counter__overflow', quals=[] (at pp.c:6855)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430CounterC__1__Msp430Timer__get', quals=[], storage=['static'] (at pp.c:6857)
    FuncDecl: quals=None (at pp.c:6857)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__1__Msp430Timer__get', quals=[] (at pp.c:6857)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430CounterC__1__Counter__overflow', quals=[], storage=['static'] (at pp.c:6859)
    FuncDecl: quals=None (at pp.c:6859)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__1__Counter__overflow', quals=[] (at pp.c:6859)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430CounterC__1__Counter__get', quals=[], storage=['inline', 'static'] (at pp.c:6861)
    FuncDecl: quals=None (at pp.c:6861)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__1__Counter__get', quals=[] (at pp.c:6861)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430CounterC__1__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:6863)
    FuncDecl: quals=None (at pp.c:6863)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__1__Msp430Timer__overflow', quals=[] (at pp.c:6863)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__11__HplGeneralIO__makeInput', quals=[], storage=['static'] (at pp.c:6865)
    FuncDecl: quals=None (at pp.c:6865)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__HplGeneralIO__makeInput', quals=[] (at pp.c:6865)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__11__HplGeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:6872)
    FuncDecl: quals=None (at pp.c:6872)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__HplGeneralIO__makeOutput', quals=[] (at pp.c:6872)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__11__HplGeneralIO__get', quals=[], storage=['static'] (at pp.c:6874)
    FuncDecl: quals=None (at pp.c:6874)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__HplGeneralIO__get', quals=[] (at pp.c:6874)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__11__HplGeneralIO__clr', quals=[], storage=['static'] (at pp.c:6876)
    FuncDecl: quals=None (at pp.c:6876)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__HplGeneralIO__clr', quals=[] (at pp.c:6876)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__11__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:6878)
    FuncDecl: quals=None (at pp.c:6878)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__GeneralIO__clr', quals=[] (at pp.c:6878)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__11__GeneralIO__get', quals=[], storage=['inline', 'static'] (at pp.c:6880)
    FuncDecl: quals=None (at pp.c:6880)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__GeneralIO__get', quals=[] (at pp.c:6880)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__11__GeneralIO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:6881)
    FuncDecl: quals=None (at pp.c:6881)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__GeneralIO__makeInput', quals=[] (at pp.c:6881)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__11__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:6883)
    FuncDecl: quals=None (at pp.c:6883)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__GeneralIO__makeOutput', quals=[] (at pp.c:6883)
        IdentifierType: names=['void'] (at None)
  Decl: name='DallasId48ToIeeeEui64C__ReadId48__read', quals=[], storage=['static'] (at pp.c:6885)
    FuncDecl: quals=None (at pp.c:6885)
      ParamList:  (at pp.c:6885)
        Decl: name='id', quals=[], storage=[] (at pp.c:6885)
          PtrDecl: quals=[] (at pp.c:6885)
            TypeDecl: declname='id', quals=[] (at pp.c:6885)
              IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='DallasId48ToIeeeEui64C__ReadId48__read', quals=[] (at pp.c:6885)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='DallasId48ToIeeeEui64C__LocalIeeeEui64__getId', quals=[], storage=['static'] (at pp.c:6887)
    FuncDecl: quals=None (at pp.c:6887)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='DallasId48ToIeeeEui64C__LocalIeeeEui64__getId', quals=[] (at pp.c:6887)
        IdentifierType: names=['ieee_eui64_t'] (at None)
  Decl: name='CC2420TransmitP__RadioBackoff__requestInitialBackoff', quals=[], storage=['static'] (at pp.c:6889)
    FuncDecl: quals=None (at pp.c:6889)
      ParamList:  (at pp.c:6889)
        Decl: name='msg', quals=[], storage=[] (at pp.c:6889)
          PtrDecl: quals=[] (at pp.c:6889)
            TypeDecl: declname='msg', quals=[] (at pp.c:6889)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__RadioBackoff__requestInitialBackoff', quals=[] (at pp.c:6889)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__RadioBackoff__requestCongestionBackoff', quals=[], storage=['static'] (at pp.c:6896)
    FuncDecl: quals=None (at pp.c:6896)
      ParamList:  (at pp.c:6896)
        Decl: name='msg', quals=[], storage=[] (at pp.c:6896)
          PtrDecl: quals=[] (at pp.c:6896)
            TypeDecl: declname='msg', quals=[] (at pp.c:6896)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__RadioBackoff__requestCongestionBackoff', quals=[] (at pp.c:6896)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__PacketTimeStamp__clear', quals=[], storage=['static'] (at pp.c:6898)
    FuncDecl: quals=None (at pp.c:6898)
      ParamList:  (at pp.c:6900)
        Decl: name='msg', quals=[], storage=[] (at pp.c:6900)
          PtrDecl: quals=[] (at pp.c:6900)
            TypeDecl: declname='msg', quals=[] (at pp.c:6900)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__PacketTimeStamp__clear', quals=[] (at pp.c:6898)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__PacketTimeStamp__set', quals=[], storage=['static'] (at pp.c:6902)
    FuncDecl: quals=None (at pp.c:6902)
      ParamList:  (at pp.c:6904)
        Decl: name='msg', quals=[], storage=[] (at pp.c:6904)
          PtrDecl: quals=[] (at pp.c:6904)
            TypeDecl: declname='msg', quals=[] (at pp.c:6904)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='value', quals=[], storage=[] (at pp.c:6909)
          TypeDecl: declname='value', quals=[] (at pp.c:6909)
            IdentifierType: names=['CC2420TransmitP__PacketTimeStamp__size_type'] (at None)
      TypeDecl: declname='CC2420TransmitP__PacketTimeStamp__set', quals=[] (at pp.c:6902)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__STXONCCA__strobe', quals=[], storage=['static'] (at pp.c:6911)
    FuncDecl: quals=None (at pp.c:6911)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__STXONCCA__strobe', quals=[] (at pp.c:6911)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420TransmitP__CaptureSFD__captureFallingEdge', quals=[], storage=['static'] (at pp.c:6913)
    FuncDecl: quals=None (at pp.c:6913)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__CaptureSFD__captureFallingEdge', quals=[] (at pp.c:6913)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__CaptureSFD__disable', quals=[], storage=['static'] (at pp.c:6915)
    FuncDecl: quals=None (at pp.c:6915)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__CaptureSFD__disable', quals=[] (at pp.c:6915)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__CaptureSFD__captureRisingEdge', quals=[], storage=['static'] (at pp.c:6917)
    FuncDecl: quals=None (at pp.c:6917)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__CaptureSFD__captureRisingEdge', quals=[] (at pp.c:6917)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__BackoffTimer__getNow', quals=[], storage=['static'] (at pp.c:6919)
    FuncDecl: quals=None (at pp.c:6919)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__BackoffTimer__getNow', quals=[] (at pp.c:6919)
        IdentifierType: names=['CC2420TransmitP__BackoffTimer__size_type'] (at None)
  Decl: name='CC2420TransmitP__BackoffTimer__start', quals=[], storage=['static'] (at pp.c:6921)
    FuncDecl: quals=None (at pp.c:6921)
      ParamList:  (at pp.c:6921)
        Decl: name='dt', quals=[], storage=[] (at pp.c:6921)
          TypeDecl: declname='dt', quals=[] (at pp.c:6921)
            IdentifierType: names=['CC2420TransmitP__BackoffTimer__size_type'] (at None)
      TypeDecl: declname='CC2420TransmitP__BackoffTimer__start', quals=[] (at pp.c:6921)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__BackoffTimer__stop', quals=[], storage=['static'] (at pp.c:6928)
    FuncDecl: quals=None (at pp.c:6928)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__BackoffTimer__stop', quals=[] (at pp.c:6928)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__TXFIFO_RAM__write', quals=[], storage=['static'] (at pp.c:6930)
    FuncDecl: quals=None (at pp.c:6930)
      ParamList:  (at pp.c:6930)
        Decl: name='offset', quals=[], storage=[] (at pp.c:6930)
          TypeDecl: declname='offset', quals=[] (at pp.c:6930)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:6930)
          PtrDecl: quals=[] (at pp.c:6930)
            TypeDecl: declname='data', quals=[] (at pp.c:6930)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:6930)
          TypeDecl: declname='length', quals=[] (at pp.c:6930)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__TXFIFO_RAM__write', quals=[] (at pp.c:6930)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420TransmitP__TXCTRL__write', quals=[], storage=['static'] (at pp.c:6932)
    FuncDecl: quals=None (at pp.c:6932)
      ParamList:  (at pp.c:6932)
        Decl: name='data', quals=[], storage=[] (at pp.c:6932)
          TypeDecl: declname='data', quals=[] (at pp.c:6932)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__TXCTRL__write', quals=[] (at pp.c:6932)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420TransmitP__CC2420Receive__sfd_dropped', quals=[], storage=['static'] (at pp.c:6934)
    FuncDecl: quals=None (at pp.c:6934)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__CC2420Receive__sfd_dropped', quals=[] (at pp.c:6934)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__CC2420Receive__sfd', quals=[], storage=['static'] (at pp.c:6936)
    FuncDecl: quals=None (at pp.c:6936)
      ParamList:  (at pp.c:6936)
        Decl: name='time', quals=[], storage=[] (at pp.c:6936)
          TypeDecl: declname='time', quals=[] (at pp.c:6936)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__CC2420Receive__sfd', quals=[] (at pp.c:6936)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__Send__sendDone', quals=[], storage=['static'] (at pp.c:6938)
    FuncDecl: quals=None (at pp.c:6938)
      ParamList:  (at pp.c:6938)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:6938)
          PtrDecl: quals=[] (at pp.c:6938)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:6938)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:6938)
          TypeDecl: declname='error', quals=[] (at pp.c:6938)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__Send__sendDone', quals=[] (at pp.c:6938)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__ChipSpiResource__abortRelease', quals=[], storage=['static'] (at pp.c:6940)
    FuncDecl: quals=None (at pp.c:6940)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__ChipSpiResource__abortRelease', quals=[] (at pp.c:6940)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__ChipSpiResource__attemptRelease', quals=[], storage=['static'] (at pp.c:6948)
    FuncDecl: quals=None (at pp.c:6948)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__ChipSpiResource__attemptRelease', quals=[] (at pp.c:6948)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__SFLUSHTX__strobe', quals=[], storage=['static'] (at pp.c:6950)
    FuncDecl: quals=None (at pp.c:6950)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__SFLUSHTX__strobe', quals=[] (at pp.c:6950)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420TransmitP__CSN__makeOutput', quals=[], storage=['static'] (at pp.c:6952)
    FuncDecl: quals=None (at pp.c:6952)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__CSN__makeOutput', quals=[] (at pp.c:6952)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__CSN__set', quals=[], storage=['static'] (at pp.c:6954)
    FuncDecl: quals=None (at pp.c:6954)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__CSN__set', quals=[] (at pp.c:6954)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__CSN__clr', quals=[], storage=['static'] (at pp.c:6955)
    FuncDecl: quals=None (at pp.c:6955)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__CSN__clr', quals=[] (at pp.c:6955)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__CC2420PacketBody__getHeader', quals=[], storage=['static'] (at pp.c:6957)
    FuncDecl: quals=None (at pp.c:6957)
      ParamList:  (at pp.c:6957)
        Decl: name='msg', quals=[], storage=[] (at pp.c:6957)
          PtrDecl: quals=[] (at pp.c:6957)
            TypeDecl: declname='msg', quals=[] (at pp.c:6957)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:6957)
        TypeDecl: declname='CC2420TransmitP__CC2420PacketBody__getHeader', quals=[] (at pp.c:6957)
          IdentifierType: names=['cc2420_header_t'] (at None)
  Decl: name='CC2420TransmitP__CC2420PacketBody__getMetadata', quals=[], storage=['static'] (at pp.c:6968)
    FuncDecl: quals=None (at pp.c:6968)
      ParamList:  (at pp.c:6968)
        Decl: name='msg', quals=[], storage=[] (at pp.c:6968)
          PtrDecl: quals=[] (at pp.c:6968)
            TypeDecl: declname='msg', quals=[] (at pp.c:6968)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:6968)
        TypeDecl: declname='CC2420TransmitP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:6968)
          IdentifierType: names=['cc2420_metadata_t'] (at None)
  Decl: name='CC2420TransmitP__PacketTimeSyncOffset__get', quals=[], storage=['static'] (at pp.c:6970)
    FuncDecl: quals=None (at pp.c:6970)
      ParamList:  (at pp.c:6972)
        Decl: name='msg', quals=[], storage=[] (at pp.c:6972)
          PtrDecl: quals=[] (at pp.c:6972)
            TypeDecl: declname='msg', quals=[] (at pp.c:6972)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__PacketTimeSyncOffset__get', quals=[] (at pp.c:6970)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420TransmitP__PacketTimeSyncOffset__isSet', quals=[], storage=['static'] (at pp.c:6974)
    FuncDecl: quals=None (at pp.c:6974)
      ParamList:  (at pp.c:6976)
        Decl: name='msg', quals=[], storage=[] (at pp.c:6976)
          PtrDecl: quals=[] (at pp.c:6976)
            TypeDecl: declname='msg', quals=[] (at pp.c:6976)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__PacketTimeSyncOffset__isSet', quals=[] (at pp.c:6974)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420TransmitP__SpiResource__release', quals=[], storage=['static'] (at pp.c:6978)
    FuncDecl: quals=None (at pp.c:6978)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__SpiResource__release', quals=[] (at pp.c:6978)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__SpiResource__immediateRequest', quals=[], storage=['static'] (at pp.c:6980)
    FuncDecl: quals=None (at pp.c:6980)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__SpiResource__immediateRequest', quals=[] (at pp.c:6980)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__SpiResource__request', quals=[], storage=['static'] (at pp.c:6982)
    FuncDecl: quals=None (at pp.c:6982)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__SpiResource__request', quals=[] (at pp.c:6982)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__CCA__makeInput', quals=[], storage=['static'] (at pp.c:6984)
    FuncDecl: quals=None (at pp.c:6984)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__CCA__makeInput', quals=[] (at pp.c:6984)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__CCA__get', quals=[], storage=['static'] (at pp.c:6986)
    FuncDecl: quals=None (at pp.c:6986)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__CCA__get', quals=[] (at pp.c:6986)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420TransmitP__SNOP__strobe', quals=[], storage=['static'] (at pp.c:6988)
    FuncDecl: quals=None (at pp.c:6988)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__SNOP__strobe', quals=[] (at pp.c:6988)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420TransmitP__SFD__makeInput', quals=[], storage=['static'] (at pp.c:6990)
    FuncDecl: quals=None (at pp.c:6990)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__SFD__makeInput', quals=[] (at pp.c:6990)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__SFD__get', quals=[], storage=['static'] (at pp.c:6992)
    FuncDecl: quals=None (at pp.c:6992)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__SFD__get', quals=[] (at pp.c:6992)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420TransmitP__TXFIFO__write', quals=[], storage=['static'] (at pp.c:6994)
    FuncDecl: quals=None (at pp.c:6994)
      ParamList:  (at pp.c:6994)
        Decl: name='data', quals=[], storage=[] (at pp.c:6994)
          PtrDecl: quals=[] (at pp.c:6994)
            TypeDecl: declname='data', quals=[] (at pp.c:6994)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:6994)
          TypeDecl: declname='length', quals=[] (at pp.c:6994)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__TXFIFO__write', quals=[] (at pp.c:6994)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420TransmitP__STXON__strobe', quals=[], storage=['static'] (at pp.c:6996)
    FuncDecl: quals=None (at pp.c:6996)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__STXON__strobe', quals=[] (at pp.c:6996)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Typedef: name='CC2420TransmitP__cc2420_transmit_state_t', quals=[], storage=['typedef'] (at pp.c:7009)
    TypeDecl: declname='CC2420TransmitP__cc2420_transmit_state_t', quals=[] (at pp.c:7009)
      Enum: name='CC2420TransmitP____nesc_unnamed4339' (at pp.c:6999)
        EnumeratorList:  (at pp.c:7000)
          Enumerator: name='CC2420TransmitP__S_STOPPED' (at pp.c:7000)
          Enumerator: name='CC2420TransmitP__S_STARTED' (at pp.c:7001)
          Enumerator: name='CC2420TransmitP__S_LOAD' (at pp.c:7002)
          Enumerator: name='CC2420TransmitP__S_SAMPLE_CCA' (at pp.c:7003)
          Enumerator: name='CC2420TransmitP__S_BEGIN_TRANSMIT' (at pp.c:7004)
          Enumerator: name='CC2420TransmitP__S_SFD' (at pp.c:7005)
          Enumerator: name='CC2420TransmitP__S_EFD' (at pp.c:7006)
          Enumerator: name='CC2420TransmitP__S_ACK_WAIT' (at pp.c:7007)
          Enumerator: name='CC2420TransmitP__S_CANCEL' (at pp.c:7008)
  Decl: name=None, quals=[], storage=[] (at pp.c:7015)
    Enum: name='CC2420TransmitP____nesc_unnamed4340' (at pp.c:7015)
      EnumeratorList:  (at pp.c:7016)
        Enumerator: name='CC2420TransmitP__CC2420_ABORT_PERIOD' (at pp.c:7016)
          Constant: type='int', value='320' (at pp.c:7016)
  Decl: name='CC2420TransmitP__m_msg', quals=[], storage=[] (at pp.c:7019)
    PtrDecl: quals=[] (at pp.c:7019)
      TypeDecl: declname='CC2420TransmitP__m_msg', quals=[] (at pp.c:7019)
        IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420TransmitP__m_cca', quals=[], storage=[] (at pp.c:7021)
    TypeDecl: declname='CC2420TransmitP__m_cca', quals=[] (at pp.c:7021)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420TransmitP__m_tx_power', quals=[], storage=[] (at pp.c:7023)
    TypeDecl: declname='CC2420TransmitP__m_tx_power', quals=[] (at pp.c:7023)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420TransmitP__m_state', quals=[], storage=[] (at pp.c:7025)
    TypeDecl: declname='CC2420TransmitP__m_state', quals=[] (at pp.c:7025)
      IdentifierType: names=['CC2420TransmitP__cc2420_transmit_state_t'] (at None)
    ID: name='CC2420TransmitP__S_STOPPED' (at pp.c:7025)
  Decl: name='CC2420TransmitP__m_receiving', quals=[], storage=[] (at pp.c:7027)
    TypeDecl: declname='CC2420TransmitP__m_receiving', quals=[] (at pp.c:7027)
      IdentifierType: names=['bool'] (at None)
    ID: name='FALSE' (at pp.c:7027)
  Decl: name='CC2420TransmitP__m_prev_time', quals=[], storage=[] (at pp.c:7029)
    TypeDecl: declname='CC2420TransmitP__m_prev_time', quals=[] (at pp.c:7029)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420TransmitP__sfdHigh', quals=[], storage=[] (at pp.c:7032)
    TypeDecl: declname='CC2420TransmitP__sfdHigh', quals=[] (at pp.c:7032)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420TransmitP__abortSpiRelease', quals=[], storage=[] (at pp.c:7035)
    TypeDecl: declname='CC2420TransmitP__abortSpiRelease', quals=[] (at pp.c:7035)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420TransmitP__totalCcaChecks', quals=[], storage=[] (at pp.c:7038)
    TypeDecl: declname='CC2420TransmitP__totalCcaChecks', quals=[] (at pp.c:7038)
      IdentifierType: names=['int8_t'] (at None)
  Decl: name='CC2420TransmitP__myInitialBackoff', quals=[], storage=[] (at pp.c:7041)
    TypeDecl: declname='CC2420TransmitP__myInitialBackoff', quals=[] (at pp.c:7041)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420TransmitP__myCongestionBackoff', quals=[], storage=[] (at pp.c:7044)
    TypeDecl: declname='CC2420TransmitP__myCongestionBackoff', quals=[] (at pp.c:7044)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420TransmitP__send', quals=[], storage=['inline', 'static'] (at pp.c:7048)
    FuncDecl: quals=None (at pp.c:7048)
      ParamList:  (at pp.c:7048)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:7048)
          PtrDecl: quals=[] (at pp.c:7048)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:7048)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='cca', quals=[], storage=[] (at pp.c:7048)
          TypeDecl: declname='cca', quals=[] (at pp.c:7048)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='CC2420TransmitP__send', quals=[] (at pp.c:7048)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__loadTXFIFO', quals=[], storage=['static'] (at pp.c:7050)
    FuncDecl: quals=None (at pp.c:7050)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__loadTXFIFO', quals=[] (at pp.c:7050)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__attemptSend', quals=[], storage=['static'] (at pp.c:7051)
    FuncDecl: quals=None (at pp.c:7051)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__attemptSend', quals=[] (at pp.c:7051)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__congestionBackoff', quals=[], storage=['static'] (at pp.c:7052)
    FuncDecl: quals=None (at pp.c:7052)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__congestionBackoff', quals=[] (at pp.c:7052)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__acquireSpiResource', quals=[], storage=['static'] (at pp.c:7053)
    FuncDecl: quals=None (at pp.c:7053)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__acquireSpiResource', quals=[] (at pp.c:7053)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__releaseSpiResource', quals=[], storage=['inline', 'static'] (at pp.c:7054)
    FuncDecl: quals=None (at pp.c:7054)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__releaseSpiResource', quals=[] (at pp.c:7054)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__signalDone', quals=[], storage=['static'] (at pp.c:7055)
    FuncDecl: quals=None (at pp.c:7055)
      ParamList:  (at pp.c:7055)
        Decl: name='err', quals=[], storage=[] (at pp.c:7055)
          TypeDecl: declname='err', quals=[] (at pp.c:7055)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__signalDone', quals=[] (at pp.c:7055)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:7059)
    FuncDecl: quals=None (at pp.c:7059)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__Init__init', quals=[] (at pp.c:7059)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__StdControl__start', quals=[], storage=['inline', 'static'] (at pp.c:7067)
    FuncDecl: quals=None (at pp.c:7067)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__StdControl__start', quals=[] (at pp.c:7067)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__StdControl__stop', quals=[], storage=['inline', 'static'] (at pp.c:7078)
    FuncDecl: quals=None (at pp.c:7078)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__StdControl__stop', quals=[] (at pp.c:7078)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__Send__send', quals=[], storage=['inline', 'static'] (at pp.c:7080)
    FuncDecl: quals=None (at pp.c:7080)
      ParamList:  (at pp.c:7080)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:7080)
          PtrDecl: quals=[] (at pp.c:7080)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:7080)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='useCca', quals=[], storage=[] (at pp.c:7080)
          TypeDecl: declname='useCca', quals=[] (at pp.c:7080)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='CC2420TransmitP__Send__send', quals=[] (at pp.c:7080)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__RadioBackoff__setInitialBackoff', quals=[], storage=['inline', 'static'] (at pp.c:7082)
    FuncDecl: quals=None (at pp.c:7082)
      ParamList:  (at pp.c:7082)
        Decl: name='backoffTime', quals=[], storage=[] (at pp.c:7082)
          TypeDecl: declname='backoffTime', quals=[] (at pp.c:7082)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__RadioBackoff__setInitialBackoff', quals=[] (at pp.c:7082)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__RadioBackoff__setCongestionBackoff', quals=[], storage=['inline', 'static'] (at pp.c:7090)
    FuncDecl: quals=None (at pp.c:7090)
      ParamList:  (at pp.c:7090)
        Decl: name='backoffTime', quals=[], storage=[] (at pp.c:7090)
          TypeDecl: declname='backoffTime', quals=[] (at pp.c:7090)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__RadioBackoff__setCongestionBackoff', quals=[] (at pp.c:7090)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__getTime32', quals=[], storage=['__inline', 'static'] (at pp.c:7098)
    FuncDecl: quals=None (at pp.c:7098)
      ParamList:  (at pp.c:7098)
        Decl: name='captured_time', quals=[], storage=[] (at pp.c:7098)
          TypeDecl: declname='captured_time', quals=[] (at pp.c:7098)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__getTime32', quals=[] (at pp.c:7098)
        IdentifierType: names=['uint32_t'] (at None)
  Decl: name='CC2420TransmitP__CaptureSFD__captured', quals=[], storage=['inline', 'static'] (at pp.c:7100)
    FuncDecl: quals=None (at pp.c:7100)
      ParamList:  (at pp.c:7100)
        Decl: name='time', quals=[], storage=[] (at pp.c:7100)
          TypeDecl: declname='time', quals=[] (at pp.c:7100)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__CaptureSFD__captured', quals=[] (at pp.c:7100)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__ChipSpiResource__releasing', quals=[], storage=['inline', 'static'] (at pp.c:7102)
    FuncDecl: quals=None (at pp.c:7102)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__ChipSpiResource__releasing', quals=[] (at pp.c:7102)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__CC2420Receive__receive', quals=[], storage=['inline', 'static'] (at pp.c:7104)
    FuncDecl: quals=None (at pp.c:7104)
      ParamList:  (at pp.c:7104)
        Decl: name='type', quals=[], storage=[] (at pp.c:7104)
          TypeDecl: declname='type', quals=[] (at pp.c:7104)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='ack_msg', quals=[], storage=[] (at pp.c:7104)
          PtrDecl: quals=[] (at pp.c:7104)
            TypeDecl: declname='ack_msg', quals=[] (at pp.c:7104)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__CC2420Receive__receive', quals=[] (at pp.c:7104)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__SpiResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:7106)
    FuncDecl: quals=None (at pp.c:7106)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__SpiResource__granted', quals=[] (at pp.c:7106)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__TXFIFO__writeDone', quals=[], storage=['inline', 'static'] (at pp.c:7108)
    FuncDecl: quals=None (at pp.c:7108)
      ParamList:  (at pp.c:7108)
        Decl: name='tx_buf', quals=[], storage=[] (at pp.c:7108)
          PtrDecl: quals=[] (at pp.c:7108)
            TypeDecl: declname='tx_buf', quals=[] (at pp.c:7108)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='tx_len', quals=[], storage=[] (at pp.c:7108)
          TypeDecl: declname='tx_len', quals=[] (at pp.c:7108)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:7109)
          TypeDecl: declname='error', quals=[] (at pp.c:7109)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__TXFIFO__writeDone', quals=[] (at pp.c:7108)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__TXFIFO__readDone', quals=[], storage=['inline', 'static'] (at pp.c:7111)
    FuncDecl: quals=None (at pp.c:7111)
      ParamList:  (at pp.c:7111)
        Decl: name='tx_buf', quals=[], storage=[] (at pp.c:7111)
          PtrDecl: quals=[] (at pp.c:7111)
            TypeDecl: declname='tx_buf', quals=[] (at pp.c:7111)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='tx_len', quals=[], storage=[] (at pp.c:7111)
          TypeDecl: declname='tx_len', quals=[] (at pp.c:7111)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:7112)
          TypeDecl: declname='error', quals=[] (at pp.c:7112)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__TXFIFO__readDone', quals=[] (at pp.c:7111)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__BackoffTimer__fired', quals=[], storage=['inline', 'static'] (at pp.c:7123)
    FuncDecl: quals=None (at pp.c:7123)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__BackoffTimer__fired', quals=[] (at pp.c:7123)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__send', quals=[], storage=['inline', 'static'] (at pp.c:7125)
    FuncDecl: quals=None (at pp.c:7125)
      ParamList:  (at pp.c:7125)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:7125)
          PtrDecl: quals=[] (at pp.c:7125)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:7125)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='cca', quals=[], storage=[] (at pp.c:7125)
          TypeDecl: declname='cca', quals=[] (at pp.c:7125)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='CC2420TransmitP__send', quals=[] (at pp.c:7125)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__attemptSend', quals=[], storage=['static'] (at pp.c:7127)
    FuncDecl: quals=None (at pp.c:7127)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__attemptSend', quals=[] (at pp.c:7127)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__congestionBackoff', quals=[], storage=['static'] (at pp.c:7129)
    FuncDecl: quals=None (at pp.c:7129)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__congestionBackoff', quals=[] (at pp.c:7129)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__acquireSpiResource', quals=[], storage=['static'] (at pp.c:7136)
    FuncDecl: quals=None (at pp.c:7136)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__acquireSpiResource', quals=[] (at pp.c:7136)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__releaseSpiResource', quals=[], storage=['inline', 'static'] (at pp.c:7144)
    FuncDecl: quals=None (at pp.c:7144)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__releaseSpiResource', quals=[] (at pp.c:7144)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__loadTXFIFO', quals=[], storage=['static'] (at pp.c:7146)
    FuncDecl: quals=None (at pp.c:7146)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__loadTXFIFO', quals=[] (at pp.c:7146)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__signalDone', quals=[], storage=['static'] (at pp.c:7148)
    FuncDecl: quals=None (at pp.c:7148)
      ParamList:  (at pp.c:7148)
        Decl: name='err', quals=[], storage=[] (at pp.c:7148)
          TypeDecl: declname='err', quals=[] (at pp.c:7148)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__signalDone', quals=[] (at pp.c:7148)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__FIFO__get', quals=[], storage=['static'] (at pp.c:7150)
    FuncDecl: quals=None (at pp.c:7150)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__FIFO__get', quals=[] (at pp.c:7150)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Config__isAddressRecognitionEnabled', quals=[], storage=['static'] (at pp.c:7152)
    FuncDecl: quals=None (at pp.c:7152)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Config__isAddressRecognitionEnabled', quals=[] (at pp.c:7152)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Config__isAutoAckEnabled', quals=[], storage=['static'] (at pp.c:7154)
    FuncDecl: quals=None (at pp.c:7154)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Config__isAutoAckEnabled', quals=[] (at pp.c:7154)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Config__isHwAutoAckDefault', quals=[], storage=['static'] (at pp.c:7156)
    FuncDecl: quals=None (at pp.c:7156)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Config__isHwAutoAckDefault', quals=[] (at pp.c:7156)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Config__getExtAddr', quals=[], storage=['static'] (at pp.c:7158)
    FuncDecl: quals=None (at pp.c:7158)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Config__getExtAddr', quals=[] (at pp.c:7158)
        IdentifierType: names=['ieee_eui64_t'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Config__getShortAddr', quals=[], storage=['static'] (at pp.c:7163)
    FuncDecl: quals=None (at pp.c:7163)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Config__getShortAddr', quals=[] (at pp.c:7163)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420ReceiveP__receiveDone_task__postTask', quals=[], storage=['static'] (at pp.c:7165)
    FuncDecl: quals=None (at pp.c:7165)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__receiveDone_task__postTask', quals=[] (at pp.c:7165)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__PacketTimeStamp__clear', quals=[], storage=['static'] (at pp.c:7167)
    FuncDecl: quals=None (at pp.c:7167)
      ParamList:  (at pp.c:7169)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7169)
          PtrDecl: quals=[] (at pp.c:7169)
            TypeDecl: declname='msg', quals=[] (at pp.c:7169)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__PacketTimeStamp__clear', quals=[] (at pp.c:7167)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__PacketTimeStamp__set', quals=[], storage=['static'] (at pp.c:7171)
    FuncDecl: quals=None (at pp.c:7171)
      ParamList:  (at pp.c:7173)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7173)
          PtrDecl: quals=[] (at pp.c:7173)
            TypeDecl: declname='msg', quals=[] (at pp.c:7173)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='value', quals=[], storage=[] (at pp.c:7178)
          TypeDecl: declname='value', quals=[] (at pp.c:7178)
            IdentifierType: names=['CC2420ReceiveP__PacketTimeStamp__size_type'] (at None)
      TypeDecl: declname='CC2420ReceiveP__PacketTimeStamp__set', quals=[] (at pp.c:7171)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__FIFOP__get', quals=[], storage=['static'] (at pp.c:7180)
    FuncDecl: quals=None (at pp.c:7180)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__FIFOP__get', quals=[] (at pp.c:7180)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Receive__receive', quals=[], storage=['static'] (at pp.c:7182)
    FuncDecl: quals=None (at pp.c:7182)
      ParamList:  (at pp.c:7182)
        Decl: name='type', quals=[], storage=[] (at pp.c:7182)
          TypeDecl: declname='type', quals=[] (at pp.c:7182)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='message', quals=[], storage=[] (at pp.c:7182)
          PtrDecl: quals=[] (at pp.c:7182)
            TypeDecl: declname='message', quals=[] (at pp.c:7182)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Receive__receive', quals=[] (at pp.c:7182)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__SACK__strobe', quals=[], storage=['static'] (at pp.c:7184)
    FuncDecl: quals=None (at pp.c:7184)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__SACK__strobe', quals=[] (at pp.c:7184)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ReceiveP__CSN__set', quals=[], storage=['static'] (at pp.c:7186)
    FuncDecl: quals=None (at pp.c:7186)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CSN__set', quals=[] (at pp.c:7186)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__CSN__clr', quals=[], storage=['static'] (at pp.c:7187)
    FuncDecl: quals=None (at pp.c:7187)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CSN__clr', quals=[] (at pp.c:7187)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__CC2420PacketBody__getHeader', quals=[], storage=['static'] (at pp.c:7189)
    FuncDecl: quals=None (at pp.c:7189)
      ParamList:  (at pp.c:7189)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7189)
          PtrDecl: quals=[] (at pp.c:7189)
            TypeDecl: declname='msg', quals=[] (at pp.c:7189)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7189)
        TypeDecl: declname='CC2420ReceiveP__CC2420PacketBody__getHeader', quals=[] (at pp.c:7189)
          IdentifierType: names=['cc2420_header_t'] (at None)
  Decl: name='CC2420ReceiveP__CC2420PacketBody__getMetadata', quals=[], storage=['static'] (at pp.c:7200)
    FuncDecl: quals=None (at pp.c:7200)
      ParamList:  (at pp.c:7200)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7200)
          PtrDecl: quals=[] (at pp.c:7200)
            TypeDecl: declname='msg', quals=[] (at pp.c:7200)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7200)
        TypeDecl: declname='CC2420ReceiveP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:7200)
          IdentifierType: names=['cc2420_metadata_t'] (at None)
  Decl: name='CC2420ReceiveP__Receive__receive', quals=[], storage=['static'] (at pp.c:7208)
    FuncDecl: quals=None (at pp.c:7208)
      ParamList:  (at pp.c:7210)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7210)
          PtrDecl: quals=[] (at pp.c:7210)
            TypeDecl: declname='msg', quals=[] (at pp.c:7210)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:7211)
          PtrDecl: quals=[] (at pp.c:7211)
            TypeDecl: declname='payload', quals=[] (at pp.c:7211)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:7217)
          TypeDecl: declname='len', quals=[] (at pp.c:7217)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7204)
        TypeDecl: declname='CC2420ReceiveP__Receive__receive', quals=[] (at pp.c:7208)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420ReceiveP__SpiResource__release', quals=[], storage=['static'] (at pp.c:7219)
    FuncDecl: quals=None (at pp.c:7219)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__SpiResource__release', quals=[] (at pp.c:7219)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__SpiResource__immediateRequest', quals=[], storage=['static'] (at pp.c:7221)
    FuncDecl: quals=None (at pp.c:7221)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__SpiResource__immediateRequest', quals=[] (at pp.c:7221)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__SpiResource__request', quals=[], storage=['static'] (at pp.c:7223)
    FuncDecl: quals=None (at pp.c:7223)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__SpiResource__request', quals=[] (at pp.c:7223)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__SpiResource__isOwner', quals=[], storage=['static'] (at pp.c:7225)
    FuncDecl: quals=None (at pp.c:7225)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__SpiResource__isOwner', quals=[] (at pp.c:7225)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ReceiveP__RXFIFO__continueRead', quals=[], storage=['static'] (at pp.c:7227)
    FuncDecl: quals=None (at pp.c:7227)
      ParamList:  (at pp.c:7227)
        Decl: name='data', quals=[], storage=[] (at pp.c:7227)
          PtrDecl: quals=[] (at pp.c:7227)
            TypeDecl: declname='data', quals=[] (at pp.c:7227)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:7227)
          TypeDecl: declname='length', quals=[] (at pp.c:7227)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__RXFIFO__continueRead', quals=[] (at pp.c:7227)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__RXFIFO__beginRead', quals=[], storage=['static'] (at pp.c:7229)
    FuncDecl: quals=None (at pp.c:7229)
      ParamList:  (at pp.c:7229)
        Decl: name='data', quals=[], storage=[] (at pp.c:7229)
          PtrDecl: quals=[] (at pp.c:7229)
            TypeDecl: declname='data', quals=[] (at pp.c:7229)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:7229)
          TypeDecl: declname='length', quals=[] (at pp.c:7229)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__RXFIFO__beginRead', quals=[] (at pp.c:7229)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ReceiveP__InterruptFIFOP__disable', quals=[], storage=['static'] (at pp.c:7231)
    FuncDecl: quals=None (at pp.c:7231)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__InterruptFIFOP__disable', quals=[] (at pp.c:7231)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__InterruptFIFOP__enableFallingEdge', quals=[], storage=['static'] (at pp.c:7233)
    FuncDecl: quals=None (at pp.c:7233)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__InterruptFIFOP__enableFallingEdge', quals=[] (at pp.c:7233)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__SFLUSHRX__strobe', quals=[], storage=['static'] (at pp.c:7235)
    FuncDecl: quals=None (at pp.c:7235)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__SFLUSHRX__strobe', quals=[] (at pp.c:7235)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:7237)
    Enum: name='CC2420ReceiveP____nesc_unnamed4341' (at pp.c:7237)
      EnumeratorList:  (at pp.c:7239)
        Enumerator: name='CC2420ReceiveP__receiveDone_task' (at pp.c:7239)
          Constant: type='int', value='10U' (at pp.c:7239)
  Typedef: name='CC2420ReceiveP____nesc_sillytask_receiveDone_task', quals=[], storage=['typedef'] (at pp.c:7242)
    ArrayDecl:  (at pp.c:7242)
      TypeDecl: declname='CC2420ReceiveP____nesc_sillytask_receiveDone_task', quals=[] (at pp.c:7242)
        IdentifierType: names=['int'] (at None)
      ID: name='CC2420ReceiveP__receiveDone_task' (at pp.c:7242)
  Typedef: name='CC2420ReceiveP__cc2420_receive_state_t', quals=[], storage=['typedef'] (at pp.c:7253)
    TypeDecl: declname='CC2420ReceiveP__cc2420_receive_state_t', quals=[] (at pp.c:7253)
      Enum: name='CC2420ReceiveP____nesc_unnamed4342' (at pp.c:7245)
        EnumeratorList:  (at pp.c:7246)
          Enumerator: name='CC2420ReceiveP__S_STOPPED' (at pp.c:7246)
          Enumerator: name='CC2420ReceiveP__S_STARTED' (at pp.c:7247)
          Enumerator: name='CC2420ReceiveP__S_RX_LENGTH' (at pp.c:7248)
          Enumerator: name='CC2420ReceiveP__S_RX_DEC' (at pp.c:7249)
          Enumerator: name='CC2420ReceiveP__S_RX_DEC_WAIT' (at pp.c:7250)
          Enumerator: name='CC2420ReceiveP__S_RX_FCF' (at pp.c:7251)
          Enumerator: name='CC2420ReceiveP__S_RX_PAYLOAD' (at pp.c:7252)
  Decl: name=None, quals=[], storage=[] (at pp.c:7255)
    Enum: name='CC2420ReceiveP____nesc_unnamed4343' (at pp.c:7255)
      EnumeratorList:  (at pp.c:7256)
        Enumerator: name='CC2420ReceiveP__RXFIFO_SIZE' (at pp.c:7256)
          Constant: type='int', value='128' (at pp.c:7256)
        Enumerator: name='CC2420ReceiveP__TIMESTAMP_QUEUE_SIZE' (at pp.c:7257)
          Constant: type='int', value='8' (at pp.c:7257)
        Enumerator: name='CC2420ReceiveP__SACK_HEADER_LENGTH' (at pp.c:7258)
          Constant: type='int', value='7' (at pp.c:7258)
  Decl: name='CC2420ReceiveP__m_timestamp_queue', quals=[], storage=[] (at pp.c:7261)
    ArrayDecl:  (at pp.c:7261)
      TypeDecl: declname='CC2420ReceiveP__m_timestamp_queue', quals=[] (at pp.c:7261)
        IdentifierType: names=['uint32_t'] (at None)
      ID: name='CC2420ReceiveP__TIMESTAMP_QUEUE_SIZE' (at pp.c:7261)
  Decl: name='CC2420ReceiveP__m_timestamp_head', quals=[], storage=[] (at pp.c:7263)
    TypeDecl: declname='CC2420ReceiveP__m_timestamp_head', quals=[] (at pp.c:7263)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ReceiveP__m_timestamp_size', quals=[], storage=[] (at pp.c:7265)
    TypeDecl: declname='CC2420ReceiveP__m_timestamp_size', quals=[] (at pp.c:7265)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ReceiveP__m_missed_packets', quals=[], storage=[] (at pp.c:7271)
    TypeDecl: declname='CC2420ReceiveP__m_missed_packets', quals=[] (at pp.c:7271)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ReceiveP__receivingPacket', quals=[], storage=[] (at pp.c:7275)
    TypeDecl: declname='CC2420ReceiveP__receivingPacket', quals=[] (at pp.c:7275)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ReceiveP__rxFrameLength', quals=[], storage=[] (at pp.c:7278)
    TypeDecl: declname='CC2420ReceiveP__rxFrameLength', quals=[] (at pp.c:7278)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ReceiveP__m_bytes_left', quals=[], storage=[] (at pp.c:7280)
    TypeDecl: declname='CC2420ReceiveP__m_bytes_left', quals=[] (at pp.c:7280)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ReceiveP__m_p_rx_buf', quals=[], storage=[] (at pp.c:7282)
    PtrDecl: quals=[] (at pp.c:7282)
      TypeDecl: declname='CC2420ReceiveP__m_p_rx_buf', quals=[] (at pp.c:7282)
        IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420ReceiveP__m_rx_buf', quals=[], storage=[] (at pp.c:7284)
    TypeDecl: declname='CC2420ReceiveP__m_rx_buf', quals=[] (at pp.c:7284)
      IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420ReceiveP__m_state', quals=[], storage=[] (at pp.c:7286)
    TypeDecl: declname='CC2420ReceiveP__m_state', quals=[] (at pp.c:7286)
      IdentifierType: names=['CC2420ReceiveP__cc2420_receive_state_t'] (at None)
  Decl: name='CC2420ReceiveP__reset_state', quals=[], storage=['static'] (at pp.c:7290)
    FuncDecl: quals=None (at pp.c:7290)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__reset_state', quals=[] (at pp.c:7290)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__beginReceive', quals=[], storage=['static'] (at pp.c:7291)
    FuncDecl: quals=None (at pp.c:7291)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__beginReceive', quals=[] (at pp.c:7291)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__receive', quals=[], storage=['static'] (at pp.c:7292)
    FuncDecl: quals=None (at pp.c:7292)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__receive', quals=[] (at pp.c:7292)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__waitForNextPacket', quals=[], storage=['static'] (at pp.c:7293)
    FuncDecl: quals=None (at pp.c:7293)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__waitForNextPacket', quals=[] (at pp.c:7293)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__flush', quals=[], storage=['static'] (at pp.c:7294)
    FuncDecl: quals=None (at pp.c:7294)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__flush', quals=[] (at pp.c:7294)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__passesAddressCheck', quals=[], storage=['inline', 'static'] (at pp.c:7295)
    FuncDecl: quals=None (at pp.c:7295)
      ParamList:  (at pp.c:7295)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7295)
          PtrDecl: quals=[] (at pp.c:7295)
            TypeDecl: declname='msg', quals=[] (at pp.c:7295)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__passesAddressCheck', quals=[] (at pp.c:7295)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ReceiveP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:7300)
    FuncDecl: quals=None (at pp.c:7300)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__Init__init', quals=[] (at pp.c:7300)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__StdControl__start', quals=[], storage=['inline', 'static'] (at pp.c:7306)
    FuncDecl: quals=None (at pp.c:7306)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__StdControl__start', quals=[] (at pp.c:7306)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__StdControl__stop', quals=[], storage=['inline', 'static'] (at pp.c:7308)
    FuncDecl: quals=None (at pp.c:7308)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__StdControl__stop', quals=[] (at pp.c:7308)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Receive__sfd', quals=[], storage=['inline', 'static'] (at pp.c:7310)
    FuncDecl: quals=None (at pp.c:7310)
      ParamList:  (at pp.c:7310)
        Decl: name='time', quals=[], storage=[] (at pp.c:7310)
          TypeDecl: declname='time', quals=[] (at pp.c:7310)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Receive__sfd', quals=[] (at pp.c:7310)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Receive__sfd_dropped', quals=[], storage=['inline', 'static'] (at pp.c:7319)
    FuncDecl: quals=None (at pp.c:7319)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Receive__sfd_dropped', quals=[] (at pp.c:7319)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__InterruptFIFOP__fired', quals=[], storage=['inline', 'static'] (at pp.c:7321)
    FuncDecl: quals=None (at pp.c:7321)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__InterruptFIFOP__fired', quals=[] (at pp.c:7321)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__SpiResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:7323)
    FuncDecl: quals=None (at pp.c:7323)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__SpiResource__granted', quals=[] (at pp.c:7323)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__RXFIFO__readDone', quals=[], storage=['inline', 'static'] (at pp.c:7325)
    FuncDecl: quals=None (at pp.c:7325)
      ParamList:  (at pp.c:7325)
        Decl: name='rx_buf', quals=[], storage=[] (at pp.c:7325)
          PtrDecl: quals=[] (at pp.c:7325)
            TypeDecl: declname='rx_buf', quals=[] (at pp.c:7325)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rx_len', quals=[], storage=[] (at pp.c:7325)
          TypeDecl: declname='rx_len', quals=[] (at pp.c:7325)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:7326)
          TypeDecl: declname='error', quals=[] (at pp.c:7326)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__RXFIFO__readDone', quals=[] (at pp.c:7325)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__RXFIFO__writeDone', quals=[], storage=['inline', 'static'] (at pp.c:7328)
    FuncDecl: quals=None (at pp.c:7328)
      ParamList:  (at pp.c:7328)
        Decl: name='tx_buf', quals=[], storage=[] (at pp.c:7328)
          PtrDecl: quals=[] (at pp.c:7328)
            TypeDecl: declname='tx_buf', quals=[] (at pp.c:7328)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='tx_len', quals=[], storage=[] (at pp.c:7328)
          TypeDecl: declname='tx_len', quals=[] (at pp.c:7328)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:7328)
          TypeDecl: declname='error', quals=[] (at pp.c:7328)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__RXFIFO__writeDone', quals=[] (at pp.c:7328)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__receiveDone_task__runTask', quals=[], storage=['inline', 'static'] (at pp.c:7336)
    FuncDecl: quals=None (at pp.c:7336)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__receiveDone_task__runTask', quals=[] (at pp.c:7336)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Config__syncDone', quals=[], storage=['inline', 'static'] (at pp.c:7338)
    FuncDecl: quals=None (at pp.c:7338)
      ParamList:  (at pp.c:7338)
        Decl: name='error', quals=[], storage=[] (at pp.c:7338)
          TypeDecl: declname='error', quals=[] (at pp.c:7338)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Config__syncDone', quals=[] (at pp.c:7338)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__beginReceive', quals=[], storage=['static'] (at pp.c:7345)
    FuncDecl: quals=None (at pp.c:7345)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__beginReceive', quals=[] (at pp.c:7345)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__flush', quals=[], storage=['static'] (at pp.c:7347)
    FuncDecl: quals=None (at pp.c:7347)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__flush', quals=[] (at pp.c:7347)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__receive', quals=[], storage=['static'] (at pp.c:7349)
    FuncDecl: quals=None (at pp.c:7349)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__receive', quals=[] (at pp.c:7349)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__waitForNextPacket', quals=[], storage=['static'] (at pp.c:7359)
    FuncDecl: quals=None (at pp.c:7359)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__waitForNextPacket', quals=[] (at pp.c:7359)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__reset_state', quals=[], storage=['static'] (at pp.c:7361)
    FuncDecl: quals=None (at pp.c:7361)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__reset_state', quals=[] (at pp.c:7361)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__passesAddressCheck', quals=[], storage=['inline', 'static'] (at pp.c:7372)
    FuncDecl: quals=None (at pp.c:7372)
      ParamList:  (at pp.c:7372)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7372)
          PtrDecl: quals=[] (at pp.c:7372)
            TypeDecl: declname='msg', quals=[] (at pp.c:7372)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__passesAddressCheck', quals=[] (at pp.c:7372)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420PacketP__getAddressLength', quals=[], storage=['inline', 'static'] (at pp.c:7374)
    FuncDecl: quals=None (at pp.c:7374)
      ParamList:  (at pp.c:7374)
        Decl: name='type', quals=[], storage=[] (at pp.c:7374)
          TypeDecl: declname='type', quals=[] (at pp.c:7374)
            IdentifierType: names=['int'] (at None)
      TypeDecl: declname='CC2420PacketP__getAddressLength', quals=[] (at pp.c:7374)
        IdentifierType: names=['int'] (at None)
  Decl: name='CC2420PacketP__getNetwork', quals=[], storage=['static'] (at pp.c:7383)
    FuncDecl: quals=None (at pp.c:7383)
      ParamList:  (at pp.c:7383)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7383)
          PtrDecl: quals=[] (at pp.c:7383)
            TypeDecl: declname='msg', quals=[] (at pp.c:7383)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7383)
        TypeDecl: declname='CC2420PacketP__getNetwork', quals=[] (at pp.c:7383)
          IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420PacketP__CC2420Packet__getNetwork', quals=[], storage=['inline', 'static'] (at pp.c:7385)
    FuncDecl: quals=None (at pp.c:7385)
      ParamList:  (at pp.c:7385)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:7385)
          PtrDecl: quals=[] (at pp.c:7385)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:7385)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420PacketP__CC2420Packet__getNetwork', quals=[] (at pp.c:7385)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420PacketP__CC2420Packet__setNetwork', quals=[], storage=['inline', 'static'] (at pp.c:7394)
    FuncDecl: quals=None (at pp.c:7394)
      ParamList:  (at pp.c:7394)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:7394)
          PtrDecl: quals=[] (at pp.c:7394)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:7394)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='networkId', quals=[], storage=[] (at pp.c:7394)
          TypeDecl: declname='networkId', quals=[] (at pp.c:7394)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420PacketP__CC2420Packet__setNetwork', quals=[] (at pp.c:7394)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420PacketP__CC2420PacketBody__getHeader', quals=[], storage=['inline', 'static'] (at pp.c:7403)
    FuncDecl: quals=None (at pp.c:7403)
      ParamList:  (at pp.c:7403)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7403)
          PtrDecl: quals=[] (at pp.c:7403)
            TypeDecl: declname='msg', quals=[] (at pp.c:7403)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7403)
        TypeDecl: declname='CC2420PacketP__CC2420PacketBody__getHeader', quals=[] (at pp.c:7403)
          IdentifierType: names=['cc2420_header_t'] (at None)
  Decl: name='CC2420PacketP__CC2420PacketBody__getMetadata', quals=[], storage=['inline', 'static'] (at pp.c:7405)
    FuncDecl: quals=None (at pp.c:7405)
      ParamList:  (at pp.c:7405)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7405)
          PtrDecl: quals=[] (at pp.c:7405)
            TypeDecl: declname='msg', quals=[] (at pp.c:7405)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7405)
        TypeDecl: declname='CC2420PacketP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:7405)
          IdentifierType: names=['cc2420_metadata_t'] (at None)
  Decl: name='CC2420PacketP__PacketTimeStamp32khz__clear', quals=[], storage=['static'] (at pp.c:7407)
    FuncDecl: quals=None (at pp.c:7407)
      ParamList:  (at pp.c:7407)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7407)
          PtrDecl: quals=[] (at pp.c:7407)
            TypeDecl: declname='msg', quals=[] (at pp.c:7407)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420PacketP__PacketTimeStamp32khz__clear', quals=[] (at pp.c:7407)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420PacketP__PacketTimeStamp32khz__set', quals=[], storage=['inline', 'static'] (at pp.c:7413)
    FuncDecl: quals=None (at pp.c:7413)
      ParamList:  (at pp.c:7413)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7413)
          PtrDecl: quals=[] (at pp.c:7413)
            TypeDecl: declname='msg', quals=[] (at pp.c:7413)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='value', quals=[], storage=[] (at pp.c:7413)
          TypeDecl: declname='value', quals=[] (at pp.c:7413)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='CC2420PacketP__PacketTimeStamp32khz__set', quals=[] (at pp.c:7413)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420PacketP__PacketTimeSyncOffset__isSet', quals=[], storage=['inline', 'static'] (at pp.c:7415)
    FuncDecl: quals=None (at pp.c:7415)
      ParamList:  (at pp.c:7415)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7415)
          PtrDecl: quals=[] (at pp.c:7415)
            TypeDecl: declname='msg', quals=[] (at pp.c:7415)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420PacketP__PacketTimeSyncOffset__isSet', quals=[] (at pp.c:7415)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420PacketP__PacketTimeSyncOffset__get', quals=[], storage=['inline', 'static'] (at pp.c:7424)
    FuncDecl: quals=None (at pp.c:7424)
      ParamList:  (at pp.c:7424)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7424)
          PtrDecl: quals=[] (at pp.c:7424)
            TypeDecl: declname='msg', quals=[] (at pp.c:7424)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420PacketP__PacketTimeSyncOffset__get', quals=[] (at pp.c:7424)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CounterToLocalTimeC__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:7426)
    FuncDecl: quals=None (at pp.c:7426)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CounterToLocalTimeC__0__Counter__overflow', quals=[] (at pp.c:7426)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430Compare__setEvent', quals=[], storage=['static'] (at pp.c:7428)
    FuncDecl: quals=None (at pp.c:7428)
      ParamList:  (at pp.c:7428)
        Decl: name='time', quals=[], storage=[] (at pp.c:7428)
          TypeDecl: declname='time', quals=[] (at pp.c:7428)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430Compare__setEvent', quals=[] (at pp.c:7428)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430Compare__setEventFromNow', quals=[], storage=['static'] (at pp.c:7430)
    FuncDecl: quals=None (at pp.c:7430)
      ParamList:  (at pp.c:7430)
        Decl: name='delta', quals=[], storage=[] (at pp.c:7430)
          TypeDecl: declname='delta', quals=[] (at pp.c:7430)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430Compare__setEventFromNow', quals=[] (at pp.c:7430)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430Timer__get', quals=[], storage=['static'] (at pp.c:7432)
    FuncDecl: quals=None (at pp.c:7432)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430Timer__get', quals=[] (at pp.c:7432)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430AlarmC__1__Alarm__fired', quals=[], storage=['static'] (at pp.c:7434)
    FuncDecl: quals=None (at pp.c:7434)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Alarm__fired', quals=[] (at pp.c:7434)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430TimerControl__enableEvents', quals=[], storage=['static'] (at pp.c:7436)
    FuncDecl: quals=None (at pp.c:7436)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__enableEvents', quals=[] (at pp.c:7436)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430TimerControl__setControlAsCompare', quals=[], storage=['static'] (at pp.c:7438)
    FuncDecl: quals=None (at pp.c:7438)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__setControlAsCompare', quals=[] (at pp.c:7438)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430TimerControl__disableEvents', quals=[], storage=['static'] (at pp.c:7449)
    FuncDecl: quals=None (at pp.c:7449)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__disableEvents', quals=[] (at pp.c:7449)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430TimerControl__clearPendingInterrupt', quals=[], storage=['static'] (at pp.c:7451)
    FuncDecl: quals=None (at pp.c:7451)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__clearPendingInterrupt', quals=[] (at pp.c:7451)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:7453)
    FuncDecl: quals=None (at pp.c:7453)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Init__init', quals=[] (at pp.c:7453)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430AlarmC__1__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:7455)
    FuncDecl: quals=None (at pp.c:7455)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Alarm__stop', quals=[] (at pp.c:7455)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430Compare__fired', quals=[], storage=['inline', 'static'] (at pp.c:7460)
    FuncDecl: quals=None (at pp.c:7460)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430Compare__fired', quals=[] (at pp.c:7460)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Alarm__startAt', quals=[], storage=['inline', 'static'] (at pp.c:7471)
    FuncDecl: quals=None (at pp.c:7471)
      ParamList:  (at pp.c:7471)
        Decl: name='t0', quals=[], storage=[] (at pp.c:7471)
          TypeDecl: declname='t0', quals=[] (at pp.c:7471)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:7471)
          TypeDecl: declname='dt', quals=[] (at pp.c:7471)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Alarm__startAt', quals=[] (at pp.c:7471)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:7473)
    FuncDecl: quals=None (at pp.c:7473)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430Timer__overflow', quals=[] (at pp.c:7473)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformCounterC__1__CounterFrom__get', quals=[], storage=['static'] (at pp.c:7475)
    FuncDecl: quals=None (at pp.c:7475)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__1__CounterFrom__get', quals=[] (at pp.c:7475)
        IdentifierType: names=['TransformCounterC__1__CounterFrom__size_type'] (at None)
  Decl: name='TransformCounterC__1__CounterFrom__isOverflowPending', quals=[], storage=['static'] (at pp.c:7482)
    FuncDecl: quals=None (at pp.c:7482)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__1__CounterFrom__isOverflowPending', quals=[] (at pp.c:7482)
        IdentifierType: names=['bool'] (at None)
  Decl: name='TransformCounterC__1__Counter__overflow', quals=[], storage=['static'] (at pp.c:7493)
    FuncDecl: quals=None (at pp.c:7493)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__1__Counter__overflow', quals=[] (at pp.c:7493)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformCounterC__1__m_upper', quals=[], storage=[] (at pp.c:7495)
    TypeDecl: declname='TransformCounterC__1__m_upper', quals=[] (at pp.c:7495)
      IdentifierType: names=['TransformCounterC__1__upper_count_type'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:7497)
    Enum: name='TransformCounterC__1____nesc_unnamed4344' (at pp.c:7497)
      EnumeratorList:  (at pp.c:7499)
        Enumerator: name='TransformCounterC__1__LOW_SHIFT_RIGHT' (at pp.c:7499)
          Constant: type='int', value='5' (at pp.c:7499)
        Enumerator: name='TransformCounterC__1__HIGH_SHIFT_LEFT' (at pp.c:7500)
          BinaryOp: op='-' (at pp.c:7500)
            BinaryOp: op='*' (at pp.c:7500)
              Constant: type='int', value='8' (at pp.c:7500)
              UnaryOp: op='sizeof' (at pp.c:7500)
                Typename: quals=[] (at None)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['TransformCounterC__1__from_size_type'] (at None)
            ID: name='TransformCounterC__1__LOW_SHIFT_RIGHT' (at pp.c:7500)
        Enumerator: name='TransformCounterC__1__NUM_UPPER_BITS' (at pp.c:7501)
          BinaryOp: op='+' (at pp.c:7501)
            BinaryOp: op='-' (at pp.c:7501)
              BinaryOp: op='*' (at pp.c:7501)
                Constant: type='int', value='8' (at pp.c:7501)
                UnaryOp: op='sizeof' (at pp.c:7501)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformCounterC__1__to_size_type'] (at None)
              BinaryOp: op='*' (at pp.c:7501)
                Constant: type='int', value='8' (at pp.c:7501)
                UnaryOp: op='sizeof' (at pp.c:7501)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformCounterC__1__from_size_type'] (at None)
            Constant: type='int', value='5' (at pp.c:7501)
        Enumerator: name='TransformCounterC__1__OVERFLOW_MASK' (at pp.c:7505)
          TernaryOp:  (at pp.c:7505)
            ID: name='TransformCounterC__1__NUM_UPPER_BITS' (at pp.c:7505)
            BinaryOp: op='-' (at None)
              BinaryOp: op='<<' (at None)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformCounterC__1__upper_count_type'] (at None)
                  Constant: type='int', value='2' (at pp.c:7505)
                BinaryOp: op='-' (at pp.c:7505)
                  ID: name='TransformCounterC__1__NUM_UPPER_BITS' (at pp.c:7505)
                  Constant: type='int', value='1' (at pp.c:7505)
              Constant: type='int', value='1' (at pp.c:7505)
            Constant: type='int', value='0' (at pp.c:7505)
  Decl: name='TransformCounterC__1__Counter__get', quals=[], storage=['static'] (at pp.c:7508)
    FuncDecl: quals=None (at pp.c:7508)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__1__Counter__get', quals=[] (at pp.c:7508)
        IdentifierType: names=['TransformCounterC__1__to_size_type'] (at None)
  Decl: name='TransformCounterC__1__CounterFrom__overflow', quals=[], storage=['inline', 'static'] (at pp.c:7510)
    FuncDecl: quals=None (at pp.c:7510)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__1__CounterFrom__overflow', quals=[] (at pp.c:7510)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__Alarm__fired', quals=[], storage=['static'] (at pp.c:7512)
    FuncDecl: quals=None (at pp.c:7512)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__fired', quals=[] (at pp.c:7512)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__AlarmFrom__startAt', quals=[], storage=['static'] (at pp.c:7514)
    FuncDecl: quals=None (at pp.c:7514)
      ParamList:  (at pp.c:7514)
        Decl: name='t0', quals=[], storage=[] (at pp.c:7514)
          TypeDecl: declname='t0', quals=[] (at pp.c:7514)
            IdentifierType: names=['TransformAlarmC__1__AlarmFrom__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:7514)
          TypeDecl: declname='dt', quals=[] (at pp.c:7514)
            IdentifierType: names=['TransformAlarmC__1__AlarmFrom__size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__1__AlarmFrom__startAt', quals=[] (at pp.c:7514)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__AlarmFrom__stop', quals=[], storage=['static'] (at pp.c:7516)
    FuncDecl: quals=None (at pp.c:7516)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__AlarmFrom__stop', quals=[] (at pp.c:7516)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__Counter__get', quals=[], storage=['static'] (at pp.c:7518)
    FuncDecl: quals=None (at pp.c:7518)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Counter__get', quals=[] (at pp.c:7518)
        IdentifierType: names=['TransformAlarmC__1__Counter__size_type'] (at None)
  Decl: name='TransformAlarmC__1__m_t0', quals=[], storage=[] (at pp.c:7520)
    TypeDecl: declname='TransformAlarmC__1__m_t0', quals=[] (at pp.c:7520)
      IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
  Decl: name='TransformAlarmC__1__m_dt', quals=[], storage=[] (at pp.c:7521)
    TypeDecl: declname='TransformAlarmC__1__m_dt', quals=[] (at pp.c:7521)
      IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:7523)
    Enum: name='TransformAlarmC__1____nesc_unnamed4345' (at pp.c:7523)
      EnumeratorList:  (at pp.c:7525)
        Enumerator: name='TransformAlarmC__1__MAX_DELAY_LOG2' (at pp.c:7525)
          BinaryOp: op='-' (at pp.c:7525)
            BinaryOp: op='-' (at pp.c:7525)
              BinaryOp: op='*' (at pp.c:7525)
                Constant: type='int', value='8' (at pp.c:7525)
                UnaryOp: op='sizeof' (at pp.c:7525)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformAlarmC__1__from_size_type'] (at None)
              Constant: type='int', value='1' (at pp.c:7525)
            Constant: type='int', value='5' (at pp.c:7525)
        Enumerator: name='TransformAlarmC__1__MAX_DELAY' (at pp.c:7526)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
              Constant: type='int', value='1' (at pp.c:7526)
            ID: name='TransformAlarmC__1__MAX_DELAY_LOG2' (at pp.c:7526)
  Decl: name='TransformAlarmC__1__Alarm__getNow', quals=[], storage=['inline', 'static'] (at pp.c:7529)
    FuncDecl: quals=None (at pp.c:7529)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__getNow', quals=[] (at pp.c:7529)
        IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
  Decl: name='TransformAlarmC__1__Alarm__getAlarm', quals=[], storage=['inline', 'static'] (at pp.c:7534)
    FuncDecl: quals=None (at pp.c:7534)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__getAlarm', quals=[] (at pp.c:7534)
        IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
  Decl: name='TransformAlarmC__1__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:7545)
    FuncDecl: quals=None (at pp.c:7545)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__stop', quals=[] (at pp.c:7545)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__set_alarm', quals=[], storage=['static'] (at pp.c:7550)
    FuncDecl: quals=None (at pp.c:7550)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__set_alarm', quals=[] (at pp.c:7550)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__Alarm__startAt', quals=[], storage=['static'] (at pp.c:7552)
    FuncDecl: quals=None (at pp.c:7552)
      ParamList:  (at pp.c:7552)
        Decl: name='t0', quals=[], storage=[] (at pp.c:7552)
          TypeDecl: declname='t0', quals=[] (at pp.c:7552)
            IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:7552)
          TypeDecl: declname='dt', quals=[] (at pp.c:7552)
            IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__startAt', quals=[] (at pp.c:7552)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__AlarmFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:7554)
    FuncDecl: quals=None (at pp.c:7554)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__AlarmFrom__fired', quals=[] (at pp.c:7554)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:7556)
    FuncDecl: quals=None (at pp.c:7556)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Counter__overflow', quals=[] (at pp.c:7556)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__fired__postTask', quals=[], storage=['static'] (at pp.c:7558)
    FuncDecl: quals=None (at pp.c:7558)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__fired__postTask', quals=[] (at pp.c:7558)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__getNow', quals=[], storage=['static'] (at pp.c:7560)
    FuncDecl: quals=None (at pp.c:7560)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__getNow', quals=[] (at pp.c:7560)
        IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__startAt', quals=[], storage=['static'] (at pp.c:7562)
    FuncDecl: quals=None (at pp.c:7562)
      ParamList:  (at pp.c:7562)
        Decl: name='t0', quals=[], storage=[] (at pp.c:7562)
          TypeDecl: declname='t0', quals=[] (at pp.c:7562)
            IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:7562)
          TypeDecl: declname='dt', quals=[] (at pp.c:7562)
            IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__startAt', quals=[] (at pp.c:7562)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__getAlarm', quals=[], storage=['static'] (at pp.c:7564)
    FuncDecl: quals=None (at pp.c:7564)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__getAlarm', quals=[] (at pp.c:7564)
        IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__stop', quals=[], storage=['static'] (at pp.c:7566)
    FuncDecl: quals=None (at pp.c:7566)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__stop', quals=[] (at pp.c:7566)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__fired', quals=[], storage=['static'] (at pp.c:7568)
    FuncDecl: quals=None (at pp.c:7568)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__fired', quals=[] (at pp.c:7568)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:7570)
    Enum: name='AlarmToTimerC__0____nesc_unnamed4346' (at pp.c:7570)
      EnumeratorList:  (at pp.c:7572)
        Enumerator: name='AlarmToTimerC__0__fired' (at pp.c:7572)
          Constant: type='int', value='11U' (at pp.c:7572)
  Typedef: name='AlarmToTimerC__0____nesc_sillytask_fired', quals=[], storage=['typedef'] (at pp.c:7575)
    ArrayDecl:  (at pp.c:7575)
      TypeDecl: declname='AlarmToTimerC__0____nesc_sillytask_fired', quals=[] (at pp.c:7575)
        IdentifierType: names=['int'] (at None)
      ID: name='AlarmToTimerC__0__fired' (at pp.c:7575)
  Decl: name='AlarmToTimerC__0__m_dt', quals=[], storage=[] (at pp.c:7577)
    TypeDecl: declname='AlarmToTimerC__0__m_dt', quals=[] (at pp.c:7577)
      IdentifierType: names=['uint32_t'] (at None)
  Decl: name='AlarmToTimerC__0__m_oneshot', quals=[], storage=[] (at pp.c:7578)
    TypeDecl: declname='AlarmToTimerC__0__m_oneshot', quals=[] (at pp.c:7578)
      IdentifierType: names=['bool'] (at None)
  Decl: name='AlarmToTimerC__0__start', quals=[], storage=['inline', 'static'] (at pp.c:7580)
    FuncDecl: quals=None (at pp.c:7580)
      ParamList:  (at pp.c:7580)
        Decl: name='t0', quals=[], storage=[] (at pp.c:7580)
          TypeDecl: declname='t0', quals=[] (at pp.c:7580)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:7580)
          TypeDecl: declname='dt', quals=[] (at pp.c:7580)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='oneshot', quals=[], storage=[] (at pp.c:7580)
          TypeDecl: declname='oneshot', quals=[] (at pp.c:7580)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__start', quals=[] (at pp.c:7580)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__stop', quals=[], storage=['inline', 'static'] (at pp.c:7582)
    FuncDecl: quals=None (at pp.c:7582)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__stop', quals=[] (at pp.c:7582)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__fired__runTask', quals=[], storage=['inline', 'static'] (at pp.c:7585)
    FuncDecl: quals=None (at pp.c:7585)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__fired__runTask', quals=[] (at pp.c:7585)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__fired', quals=[], storage=['inline', 'static'] (at pp.c:7592)
    FuncDecl: quals=None (at pp.c:7592)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__fired', quals=[] (at pp.c:7592)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__startOneShotAt', quals=[], storage=['inline', 'static'] (at pp.c:7594)
    FuncDecl: quals=None (at pp.c:7594)
      ParamList:  (at pp.c:7594)
        Decl: name='t0', quals=[], storage=[] (at pp.c:7594)
          TypeDecl: declname='t0', quals=[] (at pp.c:7594)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:7594)
          TypeDecl: declname='dt', quals=[] (at pp.c:7594)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__startOneShotAt', quals=[] (at pp.c:7594)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__getNow', quals=[], storage=['inline', 'static'] (at pp.c:7597)
    FuncDecl: quals=None (at pp.c:7597)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__getNow', quals=[] (at pp.c:7597)
        IdentifierType: names=['uint32_t'] (at None)
  Decl: name='VirtualizeTimerC__0__updateFromTimer__postTask', quals=[], storage=['static'] (at pp.c:7599)
    FuncDecl: quals=None (at pp.c:7599)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__updateFromTimer__postTask', quals=[] (at pp.c:7599)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='VirtualizeTimerC__0__TimerFrom__getNow', quals=[], storage=['static'] (at pp.c:7601)
    FuncDecl: quals=None (at pp.c:7601)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__getNow', quals=[] (at pp.c:7601)
        IdentifierType: names=['uint32_t'] (at None)
  Decl: name='VirtualizeTimerC__0__TimerFrom__startOneShotAt', quals=[], storage=['static'] (at pp.c:7603)
    FuncDecl: quals=None (at pp.c:7603)
      ParamList:  (at pp.c:7603)
        Decl: name='t0', quals=[], storage=[] (at pp.c:7603)
          TypeDecl: declname='t0', quals=[] (at pp.c:7603)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:7603)
          TypeDecl: declname='dt', quals=[] (at pp.c:7603)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__startOneShotAt', quals=[] (at pp.c:7603)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__TimerFrom__stop', quals=[], storage=['static'] (at pp.c:7605)
    FuncDecl: quals=None (at pp.c:7605)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__stop', quals=[] (at pp.c:7605)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__fired', quals=[], storage=['static'] (at pp.c:7610)
    FuncDecl: quals=None (at pp.c:7610)
      ParamList:  (at pp.c:7612)
        Decl: name='arg_0x1023a62f8', quals=[], storage=[] (at pp.c:7612)
          TypeDecl: declname='arg_0x1023a62f8', quals=[] (at pp.c:7612)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__fired', quals=[] (at pp.c:7610)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:7614)
    Enum: name='VirtualizeTimerC__0____nesc_unnamed4347' (at pp.c:7614)
      EnumeratorList:  (at pp.c:7616)
        Enumerator: name='VirtualizeTimerC__0__updateFromTimer' (at pp.c:7616)
          Constant: type='int', value='12U' (at pp.c:7616)
  Typedef: name='VirtualizeTimerC__0____nesc_sillytask_updateFromTimer', quals=[], storage=['typedef'] (at pp.c:7619)
    ArrayDecl:  (at pp.c:7619)
      TypeDecl: declname='VirtualizeTimerC__0____nesc_sillytask_updateFromTimer', quals=[] (at pp.c:7619)
        IdentifierType: names=['int'] (at None)
      ID: name='VirtualizeTimerC__0__updateFromTimer' (at pp.c:7619)
  Decl: name=None, quals=[], storage=[] (at pp.c:7621)
    Enum: name='VirtualizeTimerC__0____nesc_unnamed4348' (at pp.c:7621)
      EnumeratorList:  (at pp.c:7623)
        Enumerator: name='VirtualizeTimerC__0__NUM_TIMERS' (at pp.c:7623)
          Constant: type='int', value='1U' (at pp.c:7623)
        Enumerator: name='VirtualizeTimerC__0__END_OF_LIST' (at pp.c:7624)
          Constant: type='int', value='255' (at pp.c:7624)
  Typedef: name='VirtualizeTimerC__0__Timer_t', quals=[], storage=['typedef'] (at pp.c:7642)
    TypeDecl: declname='VirtualizeTimerC__0__Timer_t', quals=[] (at pp.c:7642)
      Struct: name='VirtualizeTimerC__0____nesc_unnamed4349', packed=False (at pp.c:7635)
        Decl: name='t0', quals=[], storage=[] (at 0)
          TypeDecl: declname='t0', quals=[] (at pp.c:7637)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at 0)
          TypeDecl: declname='dt', quals=[] (at pp.c:7638)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='isoneshot', quals=[], storage=[] (at 0)
          TypeDecl: declname='isoneshot', quals=[] (at pp.c:7639)
            IdentifierType: names=['bool'] (at None)
          Constant: type='int', value='1' (at pp.c:7639)
        Decl: name='isrunning', quals=[], storage=[] (at 0)
          TypeDecl: declname='isrunning', quals=[] (at pp.c:7640)
            IdentifierType: names=['bool'] (at None)
          Constant: type='int', value='1' (at pp.c:7640)
        Decl: name='_reserved', quals=[], storage=[] (at 0)
          TypeDecl: declname='_reserved', quals=[] (at pp.c:7641)
            IdentifierType: names=['bool'] (at None)
          Constant: type='int', value='6' (at pp.c:7641)
  Decl: name='VirtualizeTimerC__0__m_timers', quals=[], storage=[] (at pp.c:7644)
    ArrayDecl:  (at pp.c:7644)
      TypeDecl: declname='VirtualizeTimerC__0__m_timers', quals=[] (at pp.c:7644)
        IdentifierType: names=['VirtualizeTimerC__0__Timer_t'] (at None)
      ID: name='VirtualizeTimerC__0__NUM_TIMERS' (at pp.c:7644)
  Decl: name='VirtualizeTimerC__0__fireTimers', quals=[], storage=['static'] (at pp.c:7649)
    FuncDecl: quals=None (at pp.c:7649)
      ParamList:  (at pp.c:7649)
        Decl: name='now', quals=[], storage=[] (at pp.c:7649)
          TypeDecl: declname='now', quals=[] (at pp.c:7649)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__fireTimers', quals=[] (at pp.c:7649)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[], storage=['inline', 'static'] (at pp.c:7651)
    FuncDecl: quals=None (at pp.c:7651)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[] (at pp.c:7651)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__TimerFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:7653)
    FuncDecl: quals=None (at pp.c:7653)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__fired', quals=[] (at pp.c:7653)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:7655)
    FuncDecl: quals=None (at pp.c:7655)
      ParamList:  (at pp.c:7655)
        Decl: name='num', quals=[], storage=[] (at pp.c:7655)
          TypeDecl: declname='num', quals=[] (at pp.c:7655)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__default__fired', quals=[] (at pp.c:7655)
        IdentifierType: names=['void'] (at None)
  Decl: name='CounterToLocalTimeC__1__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:7657)
    FuncDecl: quals=None (at pp.c:7657)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CounterToLocalTimeC__1__Counter__overflow', quals=[] (at pp.c:7657)
        IdentifierType: names=['void'] (at None)
  Decl: name='RandomMlcgC__seed', quals=[], storage=[] (at pp.c:7659)
    TypeDecl: declname='RandomMlcgC__seed', quals=[] (at pp.c:7659)
      IdentifierType: names=['uint32_t'] (at None)
  Decl: name='RandomMlcgC__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:7662)
    FuncDecl: quals=None (at pp.c:7662)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RandomMlcgC__Init__init', quals=[] (at pp.c:7662)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='RandomMlcgC__Random__rand32', quals=[], storage=['static'] (at pp.c:7664)
    FuncDecl: quals=None (at pp.c:7664)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RandomMlcgC__Random__rand32', quals=[] (at pp.c:7664)
        IdentifierType: names=['uint32_t'] (at None)
  Decl: name='RandomMlcgC__Random__rand16', quals=[], storage=['inline', 'static'] (at pp.c:7666)
    FuncDecl: quals=None (at pp.c:7666)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RandomMlcgC__Random__rand16', quals=[] (at pp.c:7666)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='UniqueSendP__SubSend__send', quals=[], storage=['static'] (at pp.c:7668)
    FuncDecl: quals=None (at pp.c:7668)
      ParamList:  (at pp.c:7670)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7670)
          PtrDecl: quals=[] (at pp.c:7670)
            TypeDecl: declname='msg', quals=[] (at pp.c:7670)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:7678)
          TypeDecl: declname='len', quals=[] (at pp.c:7678)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='UniqueSendP__SubSend__send', quals=[] (at pp.c:7668)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='UniqueSendP__SubSend__maxPayloadLength', quals=[], storage=['static'] (at pp.c:7680)
    FuncDecl: quals=None (at pp.c:7680)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='UniqueSendP__SubSend__maxPayloadLength', quals=[] (at pp.c:7680)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='UniqueSendP__Send__sendDone', quals=[], storage=['static'] (at pp.c:7682)
    FuncDecl: quals=None (at pp.c:7682)
      ParamList:  (at pp.c:7684)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7684)
          PtrDecl: quals=[] (at pp.c:7684)
            TypeDecl: declname='msg', quals=[] (at pp.c:7684)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:7688)
          TypeDecl: declname='error', quals=[] (at pp.c:7688)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='UniqueSendP__Send__sendDone', quals=[] (at pp.c:7682)
        IdentifierType: names=['void'] (at None)
  Decl: name='UniqueSendP__Random__rand16', quals=[], storage=['static'] (at pp.c:7690)
    FuncDecl: quals=None (at pp.c:7690)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='UniqueSendP__Random__rand16', quals=[] (at pp.c:7690)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='UniqueSendP__CC2420PacketBody__getHeader', quals=[], storage=['static'] (at pp.c:7692)
    FuncDecl: quals=None (at pp.c:7692)
      ParamList:  (at pp.c:7692)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7692)
          PtrDecl: quals=[] (at pp.c:7692)
            TypeDecl: declname='msg', quals=[] (at pp.c:7692)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7692)
        TypeDecl: declname='UniqueSendP__CC2420PacketBody__getHeader', quals=[] (at pp.c:7692)
          IdentifierType: names=['cc2420_header_t'] (at None)
  Decl: name='UniqueSendP__State__toIdle', quals=[], storage=['static'] (at pp.c:7694)
    FuncDecl: quals=None (at pp.c:7694)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='UniqueSendP__State__toIdle', quals=[] (at pp.c:7694)
        IdentifierType: names=['void'] (at None)
  Decl: name='UniqueSendP__State__requestState', quals=[], storage=['static'] (at pp.c:7696)
    FuncDecl: quals=None (at pp.c:7696)
      ParamList:  (at pp.c:7696)
        Decl: name='reqState', quals=[], storage=[] (at pp.c:7696)
          TypeDecl: declname='reqState', quals=[] (at pp.c:7696)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='UniqueSendP__State__requestState', quals=[] (at pp.c:7696)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='UniqueSendP__localSendId', quals=[], storage=[] (at pp.c:7698)
    TypeDecl: declname='UniqueSendP__localSendId', quals=[] (at pp.c:7698)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:7700)
    Enum: name='UniqueSendP____nesc_unnamed4350' (at pp.c:7700)
      EnumeratorList:  (at pp.c:7701)
        Enumerator: name='UniqueSendP__S_IDLE' (at pp.c:7701)
        Enumerator: name='UniqueSendP__S_SENDING' (at pp.c:7702)
  Decl: name='UniqueSendP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:7706)
    FuncDecl: quals=None (at pp.c:7706)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='UniqueSendP__Init__init', quals=[] (at pp.c:7706)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='UniqueSendP__Send__send', quals=[], storage=['inline', 'static'] (at pp.c:7708)
    FuncDecl: quals=None (at pp.c:7708)
      ParamList:  (at pp.c:7708)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7708)
          PtrDecl: quals=[] (at pp.c:7708)
            TypeDecl: declname='msg', quals=[] (at pp.c:7708)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:7708)
          TypeDecl: declname='len', quals=[] (at pp.c:7708)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='UniqueSendP__Send__send', quals=[] (at pp.c:7708)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='UniqueSendP__Send__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:7710)
    FuncDecl: quals=None (at pp.c:7710)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='UniqueSendP__Send__maxPayloadLength', quals=[] (at pp.c:7710)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='UniqueSendP__SubSend__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:7719)
    FuncDecl: quals=None (at pp.c:7719)
      ParamList:  (at pp.c:7719)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7719)
          PtrDecl: quals=[] (at pp.c:7719)
            TypeDecl: declname='msg', quals=[] (at pp.c:7719)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:7719)
          TypeDecl: declname='error', quals=[] (at pp.c:7719)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='UniqueSendP__SubSend__sendDone', quals=[] (at pp.c:7719)
        IdentifierType: names=['void'] (at None)
  Decl: name='UniqueReceiveP__Receive__receive', quals=[], storage=['static'] (at pp.c:7727)
    FuncDecl: quals=None (at pp.c:7727)
      ParamList:  (at pp.c:7729)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7729)
          PtrDecl: quals=[] (at pp.c:7729)
            TypeDecl: declname='msg', quals=[] (at pp.c:7729)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:7730)
          PtrDecl: quals=[] (at pp.c:7730)
            TypeDecl: declname='payload', quals=[] (at pp.c:7730)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:7736)
          TypeDecl: declname='len', quals=[] (at pp.c:7736)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7723)
        TypeDecl: declname='UniqueReceiveP__Receive__receive', quals=[] (at pp.c:7727)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='UniqueReceiveP__CC2420PacketBody__getHeader', quals=[], storage=['static'] (at pp.c:7738)
    FuncDecl: quals=None (at pp.c:7738)
      ParamList:  (at pp.c:7738)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7738)
          PtrDecl: quals=[] (at pp.c:7738)
            TypeDecl: declname='msg', quals=[] (at pp.c:7738)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7738)
        TypeDecl: declname='UniqueReceiveP__CC2420PacketBody__getHeader', quals=[] (at pp.c:7738)
          IdentifierType: names=['cc2420_header_t'] (at None)
  Decl: name='UniqueReceiveP__DuplicateReceive__receive', quals=[], storage=['static'] (at pp.c:7746)
    FuncDecl: quals=None (at pp.c:7746)
      ParamList:  (at pp.c:7748)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7748)
          PtrDecl: quals=[] (at pp.c:7748)
            TypeDecl: declname='msg', quals=[] (at pp.c:7748)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:7749)
          PtrDecl: quals=[] (at pp.c:7749)
            TypeDecl: declname='payload', quals=[] (at pp.c:7749)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:7755)
          TypeDecl: declname='len', quals=[] (at pp.c:7755)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7742)
        TypeDecl: declname='UniqueReceiveP__DuplicateReceive__receive', quals=[] (at pp.c:7746)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='UniqueReceiveP__receivedMessages', quals=[], storage=[] (at pp.c:7761)
    ArrayDecl:  (at pp.c:7761)
      TypeDecl: declname='UniqueReceiveP__receivedMessages', quals=[] (at pp.c:7761)
        Struct: name='UniqueReceiveP____nesc_unnamed4351', packed=False (at pp.c:7758)
          Decl: name='source', quals=[], storage=[] (at 0)
            TypeDecl: declname='source', quals=[] (at pp.c:7759)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='dsn', quals=[], storage=[] (at 0)
            TypeDecl: declname='dsn', quals=[] (at pp.c:7760)
              IdentifierType: names=['uint8_t'] (at None)
      Constant: type='int', value='4' (at pp.c:7761)
  Decl: name='UniqueReceiveP__writeIndex', quals=[], storage=[] (at pp.c:7763)
    TypeDecl: declname='UniqueReceiveP__writeIndex', quals=[] (at pp.c:7763)
      IdentifierType: names=['uint8_t'] (at None)
    Constant: type='int', value='0' (at pp.c:7763)
  Decl: name='UniqueReceiveP__recycleSourceElement', quals=[], storage=[] (at pp.c:7766)
    TypeDecl: declname='UniqueReceiveP__recycleSourceElement', quals=[] (at pp.c:7766)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:7768)
    Enum: name='UniqueReceiveP____nesc_unnamed4352' (at pp.c:7768)
      EnumeratorList:  (at pp.c:7769)
        Enumerator: name='UniqueReceiveP__INVALID_ELEMENT' (at pp.c:7769)
          Constant: type='int', value='0xFF' (at pp.c:7769)
  Decl: name='UniqueReceiveP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:7773)
    FuncDecl: quals=None (at pp.c:7773)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='UniqueReceiveP__Init__init', quals=[] (at pp.c:7773)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='UniqueReceiveP__hasSeen', quals=[], storage=['inline', 'static'] (at pp.c:7783)
    FuncDecl: quals=None (at pp.c:7783)
      ParamList:  (at pp.c:7783)
        Decl: name='msgSource', quals=[], storage=[] (at pp.c:7783)
          TypeDecl: declname='msgSource', quals=[] (at pp.c:7783)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='msgDsn', quals=[], storage=[] (at pp.c:7783)
          TypeDecl: declname='msgDsn', quals=[] (at pp.c:7783)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='UniqueReceiveP__hasSeen', quals=[] (at pp.c:7783)
        IdentifierType: names=['bool'] (at None)
  Decl: name='UniqueReceiveP__insert', quals=[], storage=['inline', 'static'] (at pp.c:7784)
    FuncDecl: quals=None (at pp.c:7784)
      ParamList:  (at pp.c:7784)
        Decl: name='msgSource', quals=[], storage=[] (at pp.c:7784)
          TypeDecl: declname='msgSource', quals=[] (at pp.c:7784)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='msgDsn', quals=[], storage=[] (at pp.c:7784)
          TypeDecl: declname='msgDsn', quals=[] (at pp.c:7784)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='UniqueReceiveP__insert', quals=[] (at pp.c:7784)
        IdentifierType: names=['void'] (at None)
  Decl: name='UniqueReceiveP__getSourceKey', quals=[], storage=['inline', 'static'] (at pp.c:7785)
    FuncDecl: quals=None (at pp.c:7785)
      ParamList:  (at pp.c:7785)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7785)
          PtrDecl: quals=[] (at pp.c:7785)
            TypeDecl: declname='msg', quals=[] (at pp.c:7785)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='UniqueReceiveP__getSourceKey', quals=[] (at pp.c:7785)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='UniqueReceiveP__SubReceive__receive', quals=[], storage=['inline', 'static'] (at pp.c:7788)
    FuncDecl: quals=None (at pp.c:7788)
      ParamList:  (at pp.c:7788)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7788)
          PtrDecl: quals=[] (at pp.c:7788)
            TypeDecl: declname='msg', quals=[] (at pp.c:7788)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:7788)
          PtrDecl: quals=[] (at pp.c:7788)
            TypeDecl: declname='payload', quals=[] (at pp.c:7788)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:7789)
          TypeDecl: declname='len', quals=[] (at pp.c:7789)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7788)
        TypeDecl: declname='UniqueReceiveP__SubReceive__receive', quals=[] (at pp.c:7788)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='UniqueReceiveP__hasSeen', quals=[], storage=['inline', 'static'] (at pp.c:7791)
    FuncDecl: quals=None (at pp.c:7791)
      ParamList:  (at pp.c:7791)
        Decl: name='msgSource', quals=[], storage=[] (at pp.c:7791)
          TypeDecl: declname='msgSource', quals=[] (at pp.c:7791)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='msgDsn', quals=[], storage=[] (at pp.c:7791)
          TypeDecl: declname='msgDsn', quals=[] (at pp.c:7791)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='UniqueReceiveP__hasSeen', quals=[] (at pp.c:7791)
        IdentifierType: names=['bool'] (at None)
  Decl: name='UniqueReceiveP__insert', quals=[], storage=['inline', 'static'] (at pp.c:7793)
    FuncDecl: quals=None (at pp.c:7793)
      ParamList:  (at pp.c:7793)
        Decl: name='msgSource', quals=[], storage=[] (at pp.c:7793)
          TypeDecl: declname='msgSource', quals=[] (at pp.c:7793)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='msgDsn', quals=[], storage=[] (at pp.c:7793)
          TypeDecl: declname='msgDsn', quals=[] (at pp.c:7793)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='UniqueReceiveP__insert', quals=[] (at pp.c:7793)
        IdentifierType: names=['void'] (at None)
  Decl: name='UniqueReceiveP__getSourceKey', quals=[], storage=['inline', 'static'] (at pp.c:7795)
    FuncDecl: quals=None (at pp.c:7795)
      ParamList:  (at pp.c:7795)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7795)
          PtrDecl: quals=[] (at pp.c:7795)
            TypeDecl: declname='msg', quals=[] (at pp.c:7795)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='UniqueReceiveP__getSourceKey', quals=[] (at pp.c:7795)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='UniqueReceiveP__DuplicateReceive__default__receive', quals=[], storage=['inline', 'static'] (at pp.c:7797)
    FuncDecl: quals=None (at pp.c:7797)
      ParamList:  (at pp.c:7797)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7797)
          PtrDecl: quals=[] (at pp.c:7797)
            TypeDecl: declname='msg', quals=[] (at pp.c:7797)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:7797)
          PtrDecl: quals=[] (at pp.c:7797)
            TypeDecl: declname='payload', quals=[] (at pp.c:7797)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:7797)
          TypeDecl: declname='len', quals=[] (at pp.c:7797)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7797)
        TypeDecl: declname='UniqueReceiveP__DuplicateReceive__default__receive', quals=[] (at pp.c:7797)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__SubSend__send', quals=[], storage=['static'] (at pp.c:7799)
    FuncDecl: quals=None (at pp.c:7799)
      ParamList:  (at pp.c:7801)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7801)
          PtrDecl: quals=[] (at pp.c:7801)
            TypeDecl: declname='msg', quals=[] (at pp.c:7801)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:7809)
          TypeDecl: declname='len', quals=[] (at pp.c:7809)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__SubSend__send', quals=[] (at pp.c:7799)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__SubSend__maxPayloadLength', quals=[], storage=['static'] (at pp.c:7811)
    FuncDecl: quals=None (at pp.c:7811)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__SubSend__maxPayloadLength', quals=[] (at pp.c:7811)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__grantTask__postTask', quals=[], storage=['static'] (at pp.c:7813)
    FuncDecl: quals=None (at pp.c:7813)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__grantTask__postTask', quals=[] (at pp.c:7813)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__CC2420Packet__setNetwork', quals=[], storage=['static'] (at pp.c:7815)
    FuncDecl: quals=None (at pp.c:7815)
      ParamList:  (at pp.c:7815)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:7815)
          PtrDecl: quals=[] (at pp.c:7815)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:7815)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='networkId', quals=[], storage=[] (at pp.c:7815)
          TypeDecl: declname='networkId', quals=[] (at pp.c:7815)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__CC2420Packet__setNetwork', quals=[] (at pp.c:7815)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__CC2420Packet__getNetwork', quals=[], storage=['static'] (at pp.c:7817)
    FuncDecl: quals=None (at pp.c:7817)
      ParamList:  (at pp.c:7817)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:7817)
          PtrDecl: quals=[] (at pp.c:7817)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:7817)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__CC2420Packet__getNetwork', quals=[] (at pp.c:7817)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__ActiveSend__sendDone', quals=[], storage=['static'] (at pp.c:7819)
    FuncDecl: quals=None (at pp.c:7819)
      ParamList:  (at pp.c:7821)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7821)
          PtrDecl: quals=[] (at pp.c:7821)
            TypeDecl: declname='msg', quals=[] (at pp.c:7821)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:7825)
          TypeDecl: declname='error', quals=[] (at pp.c:7825)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__ActiveSend__sendDone', quals=[] (at pp.c:7819)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__Queue__enqueue', quals=[], storage=['static'] (at pp.c:7827)
    FuncDecl: quals=None (at pp.c:7827)
      ParamList:  (at pp.c:7827)
        Decl: name='id', quals=[], storage=[] (at pp.c:7827)
          TypeDecl: declname='id', quals=[] (at pp.c:7827)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Queue__enqueue', quals=[] (at pp.c:7827)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__Queue__isEmpty', quals=[], storage=['static'] (at pp.c:7829)
    FuncDecl: quals=None (at pp.c:7829)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Queue__isEmpty', quals=[] (at pp.c:7829)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420TinyosNetworkP__Queue__dequeue', quals=[], storage=['static'] (at pp.c:7831)
    FuncDecl: quals=None (at pp.c:7831)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Queue__dequeue', quals=[] (at pp.c:7831)
        IdentifierType: names=['resource_client_id_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__CC2420PacketBody__getHeader', quals=[], storage=['static'] (at pp.c:7833)
    FuncDecl: quals=None (at pp.c:7833)
      ParamList:  (at pp.c:7833)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7833)
          PtrDecl: quals=[] (at pp.c:7833)
            TypeDecl: declname='msg', quals=[] (at pp.c:7833)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7833)
        TypeDecl: declname='CC2420TinyosNetworkP__CC2420PacketBody__getHeader', quals=[] (at pp.c:7833)
          IdentifierType: names=['cc2420_header_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__CC2420PacketBody__getMetadata', quals=[], storage=['static'] (at pp.c:7844)
    FuncDecl: quals=None (at pp.c:7844)
      ParamList:  (at pp.c:7844)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7844)
          PtrDecl: quals=[] (at pp.c:7844)
            TypeDecl: declname='msg', quals=[] (at pp.c:7844)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7844)
        TypeDecl: declname='CC2420TinyosNetworkP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:7844)
          IdentifierType: names=['cc2420_metadata_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__BareReceive__receive', quals=[], storage=['static'] (at pp.c:7852)
    FuncDecl: quals=None (at pp.c:7852)
      ParamList:  (at pp.c:7854)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7854)
          PtrDecl: quals=[] (at pp.c:7854)
            TypeDecl: declname='msg', quals=[] (at pp.c:7854)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:7855)
          PtrDecl: quals=[] (at pp.c:7855)
            TypeDecl: declname='payload', quals=[] (at pp.c:7855)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:7861)
          TypeDecl: declname='len', quals=[] (at pp.c:7861)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7848)
        TypeDecl: declname='CC2420TinyosNetworkP__BareReceive__receive', quals=[] (at pp.c:7852)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__Resource__granted', quals=[], storage=['static'] (at pp.c:7863)
    FuncDecl: quals=None (at pp.c:7863)
      ParamList:  (at pp.c:7865)
        Decl: name='arg_0x1024aa060', quals=[], storage=[] (at pp.c:7865)
          TypeDecl: declname='arg_0x1024aa060', quals=[] (at pp.c:7865)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Resource__granted', quals=[] (at pp.c:7863)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__BareSend__sendDone', quals=[], storage=['static'] (at pp.c:7867)
    FuncDecl: quals=None (at pp.c:7867)
      ParamList:  (at pp.c:7869)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7869)
          PtrDecl: quals=[] (at pp.c:7869)
            TypeDecl: declname='msg', quals=[] (at pp.c:7869)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:7873)
          TypeDecl: declname='error', quals=[] (at pp.c:7873)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__BareSend__sendDone', quals=[] (at pp.c:7867)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__ActiveReceive__receive', quals=[], storage=['static'] (at pp.c:7881)
    FuncDecl: quals=None (at pp.c:7881)
      ParamList:  (at pp.c:7883)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7883)
          PtrDecl: quals=[] (at pp.c:7883)
            TypeDecl: declname='msg', quals=[] (at pp.c:7883)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:7884)
          PtrDecl: quals=[] (at pp.c:7884)
            TypeDecl: declname='payload', quals=[] (at pp.c:7884)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:7890)
          TypeDecl: declname='len', quals=[] (at pp.c:7890)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7877)
        TypeDecl: declname='CC2420TinyosNetworkP__ActiveReceive__receive', quals=[] (at pp.c:7881)
          IdentifierType: names=['message_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:7892)
    Enum: name='CC2420TinyosNetworkP____nesc_unnamed4353' (at pp.c:7892)
      EnumeratorList:  (at pp.c:7894)
        Enumerator: name='CC2420TinyosNetworkP__grantTask' (at pp.c:7894)
          Constant: type='int', value='13U' (at pp.c:7894)
  Typedef: name='CC2420TinyosNetworkP____nesc_sillytask_grantTask', quals=[], storage=['typedef'] (at pp.c:7897)
    ArrayDecl:  (at pp.c:7897)
      TypeDecl: declname='CC2420TinyosNetworkP____nesc_sillytask_grantTask', quals=[] (at pp.c:7897)
        IdentifierType: names=['int'] (at None)
      ID: name='CC2420TinyosNetworkP__grantTask' (at pp.c:7897)
  Decl: name=None, quals=[], storage=[] (at pp.c:7899)
    Enum: name='CC2420TinyosNetworkP____nesc_unnamed4354' (at pp.c:7899)
      EnumeratorList:  (at pp.c:7900)
        Enumerator: name='CC2420TinyosNetworkP__OWNER_NONE' (at pp.c:7900)
          Constant: type='int', value='0xff' (at pp.c:7900)
        Enumerator: name='CC2420TinyosNetworkP__TINYOS_N_NETWORKS' (at pp.c:7901)
          Constant: type='int', value='1U' (at pp.c:7901)
  Decl: name='CC2420TinyosNetworkP__m_busy_client', quals=[], storage=[] (at pp.c:7911)
    TypeDecl: declname='CC2420TinyosNetworkP__m_busy_client', quals=[] (at pp.c:7911)
      Enum: name='CC2420TinyosNetworkP____nesc_unnamed4355' (at pp.c:7908)
        EnumeratorList:  (at pp.c:7909)
          Enumerator: name='CC2420TinyosNetworkP__CLIENT_AM' (at pp.c:7909)
          Enumerator: name='CC2420TinyosNetworkP__CLIENT_BARE' (at pp.c:7910)
  Decl: name='CC2420TinyosNetworkP__resource_owner', quals=[], storage=[] (at pp.c:7913)
    TypeDecl: declname='CC2420TinyosNetworkP__resource_owner', quals=[] (at pp.c:7913)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='CC2420TinyosNetworkP__OWNER_NONE' (at pp.c:7913)
  Decl: name='CC2420TinyosNetworkP__next_owner', quals=[], storage=[] (at pp.c:7915)
    TypeDecl: declname='CC2420TinyosNetworkP__next_owner', quals=[] (at pp.c:7915)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__ActiveSend__send', quals=[], storage=['static'] (at pp.c:7917)
    FuncDecl: quals=None (at pp.c:7917)
      ParamList:  (at pp.c:7917)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7917)
          PtrDecl: quals=[] (at pp.c:7917)
            TypeDecl: declname='msg', quals=[] (at pp.c:7917)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:7917)
          TypeDecl: declname='len', quals=[] (at pp.c:7917)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__ActiveSend__send', quals=[] (at pp.c:7917)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__ActiveSend__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:7927)
    FuncDecl: quals=None (at pp.c:7927)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__ActiveSend__maxPayloadLength', quals=[] (at pp.c:7927)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__BareSend__getPayload', quals=[], storage=['inline', 'static'] (at pp.c:7929)
    FuncDecl: quals=None (at pp.c:7929)
      ParamList:  (at pp.c:7929)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7929)
          PtrDecl: quals=[] (at pp.c:7929)
            TypeDecl: declname='msg', quals=[] (at pp.c:7929)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:7929)
          TypeDecl: declname='len', quals=[] (at pp.c:7929)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7929)
        TypeDecl: declname='CC2420TinyosNetworkP__BareSend__getPayload', quals=[] (at pp.c:7929)
          IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__SubSend__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:7939)
    FuncDecl: quals=None (at pp.c:7939)
      ParamList:  (at pp.c:7939)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7939)
          PtrDecl: quals=[] (at pp.c:7939)
            TypeDecl: declname='msg', quals=[] (at pp.c:7939)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:7939)
          TypeDecl: declname='error', quals=[] (at pp.c:7939)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__SubSend__sendDone', quals=[] (at pp.c:7939)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__SubReceive__receive', quals=[], storage=['inline', 'static'] (at pp.c:7948)
    FuncDecl: quals=None (at pp.c:7948)
      ParamList:  (at pp.c:7948)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7948)
          PtrDecl: quals=[] (at pp.c:7948)
            TypeDecl: declname='msg', quals=[] (at pp.c:7948)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:7948)
          PtrDecl: quals=[] (at pp.c:7948)
            TypeDecl: declname='payload', quals=[] (at pp.c:7948)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:7948)
          TypeDecl: declname='len', quals=[] (at pp.c:7948)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7948)
        TypeDecl: declname='CC2420TinyosNetworkP__SubReceive__receive', quals=[] (at pp.c:7948)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__grantTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:7950)
    FuncDecl: quals=None (at pp.c:7950)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__grantTask__runTask', quals=[] (at pp.c:7950)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__Resource__request', quals=[], storage=['inline', 'static'] (at pp.c:7952)
    FuncDecl: quals=None (at pp.c:7952)
      ParamList:  (at pp.c:7952)
        Decl: name='id', quals=[], storage=[] (at pp.c:7952)
          TypeDecl: declname='id', quals=[] (at pp.c:7952)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Resource__request', quals=[] (at pp.c:7952)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__Resource__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:7954)
    FuncDecl: quals=None (at pp.c:7954)
      ParamList:  (at pp.c:7954)
        Decl: name='id', quals=[], storage=[] (at pp.c:7954)
          TypeDecl: declname='id', quals=[] (at pp.c:7954)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Resource__immediateRequest', quals=[] (at pp.c:7954)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__Resource__release', quals=[], storage=['inline', 'static'] (at pp.c:7956)
    FuncDecl: quals=None (at pp.c:7956)
      ParamList:  (at pp.c:7956)
        Decl: name='id', quals=[], storage=[] (at pp.c:7956)
          TypeDecl: declname='id', quals=[] (at pp.c:7956)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Resource__release', quals=[] (at pp.c:7956)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__BareReceive__default__receive', quals=[], storage=['inline', 'static'] (at pp.c:7958)
    FuncDecl: quals=None (at pp.c:7958)
      ParamList:  (at pp.c:7958)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7958)
          PtrDecl: quals=[] (at pp.c:7958)
            TypeDecl: declname='msg', quals=[] (at pp.c:7958)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:7958)
          PtrDecl: quals=[] (at pp.c:7958)
            TypeDecl: declname='payload', quals=[] (at pp.c:7958)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:7958)
          TypeDecl: declname='len', quals=[] (at pp.c:7958)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7958)
        TypeDecl: declname='CC2420TinyosNetworkP__BareReceive__default__receive', quals=[] (at pp.c:7958)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__BareSend__default__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:7961)
    FuncDecl: quals=None (at pp.c:7961)
      ParamList:  (at pp.c:7961)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7961)
          PtrDecl: quals=[] (at pp.c:7961)
            TypeDecl: declname='msg', quals=[] (at pp.c:7961)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:7961)
          TypeDecl: declname='error', quals=[] (at pp.c:7961)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__BareSend__default__sendDone', quals=[] (at pp.c:7961)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:7970)
    FuncDecl: quals=None (at pp.c:7970)
      ParamList:  (at pp.c:7970)
        Decl: name='client', quals=[], storage=[] (at pp.c:7970)
          TypeDecl: declname='client', quals=[] (at pp.c:7970)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Resource__default__granted', quals=[] (at pp.c:7970)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:7972)
    Enum: name='FcfsResourceQueueC__0____nesc_unnamed4356' (at pp.c:7972)
      EnumeratorList:  (at pp.c:7974)
        Enumerator: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:7974)
          Constant: type='int', value='0xFF' (at pp.c:7974)
  Decl: name='FcfsResourceQueueC__0__resQ', quals=[], storage=[] (at pp.c:7976)
    ArrayDecl:  (at pp.c:7976)
      TypeDecl: declname='FcfsResourceQueueC__0__resQ', quals=[] (at pp.c:7976)
        IdentifierType: names=['uint8_t'] (at None)
      Constant: type='int', value='1' (at pp.c:7976)
  Decl: name='FcfsResourceQueueC__0__qHead', quals=[], storage=[] (at pp.c:7977)
    TypeDecl: declname='FcfsResourceQueueC__0__qHead', quals=[] (at pp.c:7977)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:7977)
  Decl: name='FcfsResourceQueueC__0__qTail', quals=[], storage=[] (at pp.c:7978)
    TypeDecl: declname='FcfsResourceQueueC__0__qTail', quals=[] (at pp.c:7978)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:7978)
  Decl: name='FcfsResourceQueueC__0__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:7980)
    FuncDecl: quals=None (at pp.c:7980)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__0__Init__init', quals=[] (at pp.c:7980)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='FcfsResourceQueueC__0__FcfsQueue__isEmpty', quals=[], storage=['static'] (at pp.c:7985)
    FuncDecl: quals=None (at pp.c:7985)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__isEmpty', quals=[] (at pp.c:7985)
        IdentifierType: names=['bool'] (at None)
  Decl: name='FcfsResourceQueueC__0__FcfsQueue__isEnqueued', quals=[], storage=['inline', 'static'] (at pp.c:7989)
    FuncDecl: quals=None (at pp.c:7989)
      ParamList:  (at pp.c:7989)
        Decl: name='id', quals=[], storage=[] (at pp.c:7989)
          TypeDecl: declname='id', quals=[] (at pp.c:7989)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__isEnqueued', quals=[] (at pp.c:7989)
        IdentifierType: names=['bool'] (at None)
  Decl: name='FcfsResourceQueueC__0__FcfsQueue__dequeue', quals=[], storage=['inline', 'static'] (at pp.c:7993)
    FuncDecl: quals=None (at pp.c:7993)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__dequeue', quals=[] (at pp.c:7993)
        IdentifierType: names=['resource_client_id_t'] (at None)
  Decl: name='FcfsResourceQueueC__0__FcfsQueue__enqueue', quals=[], storage=['inline', 'static'] (at pp.c:7995)
    FuncDecl: quals=None (at pp.c:7995)
      ParamList:  (at pp.c:7995)
        Decl: name='id', quals=[], storage=[] (at pp.c:7995)
          TypeDecl: declname='id', quals=[] (at pp.c:7995)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__enqueue', quals=[] (at pp.c:7995)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ActiveMessageP__SubSend__send', quals=[], storage=['static'] (at pp.c:7997)
    FuncDecl: quals=None (at pp.c:7997)
      ParamList:  (at pp.c:7999)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7999)
          PtrDecl: quals=[] (at pp.c:7999)
            TypeDecl: declname='msg', quals=[] (at pp.c:7999)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8007)
          TypeDecl: declname='len', quals=[] (at pp.c:8007)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SubSend__send', quals=[] (at pp.c:7997)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ActiveMessageP__SubSend__maxPayloadLength', quals=[], storage=['static'] (at pp.c:8009)
    FuncDecl: quals=None (at pp.c:8009)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SubSend__maxPayloadLength', quals=[] (at pp.c:8009)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ActiveMessageP__CC2420Config__getPanAddr', quals=[], storage=['static'] (at pp.c:8011)
    FuncDecl: quals=None (at pp.c:8011)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__CC2420Config__getPanAddr', quals=[] (at pp.c:8011)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioBackoff__requestCca', quals=[], storage=['static'] (at pp.c:8013)
    FuncDecl: quals=None (at pp.c:8013)
      ParamList:  (at pp.c:8015)
        Decl: name='arg_0x102533d60', quals=[], storage=[] (at pp.c:8015)
          TypeDecl: declname='arg_0x102533d60', quals=[] (at pp.c:8015)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8017)
          PtrDecl: quals=[] (at pp.c:8017)
            TypeDecl: declname='msg', quals=[] (at pp.c:8017)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__requestCca', quals=[] (at pp.c:8013)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioBackoff__requestInitialBackoff', quals=[], storage=['static'] (at pp.c:8019)
    FuncDecl: quals=None (at pp.c:8019)
      ParamList:  (at pp.c:8021)
        Decl: name='arg_0x102533d60', quals=[], storage=[] (at pp.c:8021)
          TypeDecl: declname='arg_0x102533d60', quals=[] (at pp.c:8021)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8023)
          PtrDecl: quals=[] (at pp.c:8023)
            TypeDecl: declname='msg', quals=[] (at pp.c:8023)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__requestInitialBackoff', quals=[] (at pp.c:8019)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioBackoff__requestCongestionBackoff', quals=[], storage=['static'] (at pp.c:8030)
    FuncDecl: quals=None (at pp.c:8030)
      ParamList:  (at pp.c:8032)
        Decl: name='arg_0x102533d60', quals=[], storage=[] (at pp.c:8032)
          TypeDecl: declname='arg_0x102533d60', quals=[] (at pp.c:8032)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8034)
          PtrDecl: quals=[] (at pp.c:8034)
            TypeDecl: declname='msg', quals=[] (at pp.c:8034)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__requestCongestionBackoff', quals=[] (at pp.c:8030)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__SendNotifier__aboutToSend', quals=[], storage=['static'] (at pp.c:8036)
    FuncDecl: quals=None (at pp.c:8036)
      ParamList:  (at pp.c:8038)
        Decl: name='arg_0x102533258', quals=[], storage=[] (at pp.c:8038)
          TypeDecl: declname='arg_0x102533258', quals=[] (at pp.c:8038)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='dest', quals=[], storage=[] (at pp.c:8040)
          TypeDecl: declname='dest', quals=[] (at pp.c:8040)
            IdentifierType: names=['am_addr_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8042)
          PtrDecl: quals=[] (at pp.c:8042)
            TypeDecl: declname='msg', quals=[] (at pp.c:8042)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SendNotifier__aboutToSend', quals=[] (at pp.c:8036)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__AMSend__sendDone', quals=[], storage=['static'] (at pp.c:8044)
    FuncDecl: quals=None (at pp.c:8044)
      ParamList:  (at pp.c:8046)
        Decl: name='arg_0x1025397d8', quals=[], storage=[] (at pp.c:8046)
          TypeDecl: declname='arg_0x1025397d8', quals=[] (at pp.c:8046)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8048)
          PtrDecl: quals=[] (at pp.c:8048)
            TypeDecl: declname='msg', quals=[] (at pp.c:8048)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:8055)
          TypeDecl: declname='error', quals=[] (at pp.c:8055)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMSend__sendDone', quals=[] (at pp.c:8044)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__Snoop__receive', quals=[], storage=['static'] (at pp.c:8063)
    FuncDecl: quals=None (at pp.c:8063)
      ParamList:  (at pp.c:8065)
        Decl: name='arg_0x102536480', quals=[], storage=[] (at pp.c:8065)
          TypeDecl: declname='arg_0x102536480', quals=[] (at pp.c:8065)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8067)
          PtrDecl: quals=[] (at pp.c:8067)
            TypeDecl: declname='msg', quals=[] (at pp.c:8067)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:8068)
          PtrDecl: quals=[] (at pp.c:8068)
            TypeDecl: declname='payload', quals=[] (at pp.c:8068)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8074)
          TypeDecl: declname='len', quals=[] (at pp.c:8074)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8059)
        TypeDecl: declname='CC2420ActiveMessageP__Snoop__receive', quals=[] (at pp.c:8063)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420ActiveMessageP__ActiveMessageAddress__amAddress', quals=[], storage=['static'] (at pp.c:8076)
    FuncDecl: quals=None (at pp.c:8076)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__ActiveMessageAddress__amAddress', quals=[] (at pp.c:8076)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='CC2420ActiveMessageP__CC2420PacketBody__getHeader', quals=[], storage=['static'] (at pp.c:8078)
    FuncDecl: quals=None (at pp.c:8078)
      ParamList:  (at pp.c:8078)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8078)
          PtrDecl: quals=[] (at pp.c:8078)
            TypeDecl: declname='msg', quals=[] (at pp.c:8078)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8078)
        TypeDecl: declname='CC2420ActiveMessageP__CC2420PacketBody__getHeader', quals=[] (at pp.c:8078)
          IdentifierType: names=['cc2420_header_t'] (at None)
  Decl: name='CC2420ActiveMessageP__CC2420PacketBody__getMetadata', quals=[], storage=['static'] (at pp.c:8089)
    FuncDecl: quals=None (at pp.c:8089)
      ParamList:  (at pp.c:8089)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8089)
          PtrDecl: quals=[] (at pp.c:8089)
            TypeDecl: declname='msg', quals=[] (at pp.c:8089)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8089)
        TypeDecl: declname='CC2420ActiveMessageP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:8089)
          IdentifierType: names=['cc2420_metadata_t'] (at None)
  Decl: name='CC2420ActiveMessageP__Receive__receive', quals=[], storage=['static'] (at pp.c:8097)
    FuncDecl: quals=None (at pp.c:8097)
      ParamList:  (at pp.c:8099)
        Decl: name='arg_0x102538908', quals=[], storage=[] (at pp.c:8099)
          TypeDecl: declname='arg_0x102538908', quals=[] (at pp.c:8099)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8101)
          PtrDecl: quals=[] (at pp.c:8101)
            TypeDecl: declname='msg', quals=[] (at pp.c:8101)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:8102)
          PtrDecl: quals=[] (at pp.c:8102)
            TypeDecl: declname='payload', quals=[] (at pp.c:8102)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8108)
          TypeDecl: declname='len', quals=[] (at pp.c:8108)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8093)
        TypeDecl: declname='CC2420ActiveMessageP__Receive__receive', quals=[] (at pp.c:8097)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioResource__release', quals=[], storage=['static'] (at pp.c:8110)
    FuncDecl: quals=None (at pp.c:8110)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioResource__release', quals=[] (at pp.c:8110)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioResource__immediateRequest', quals=[], storage=['static'] (at pp.c:8112)
    FuncDecl: quals=None (at pp.c:8112)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioResource__immediateRequest', quals=[] (at pp.c:8112)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioResource__request', quals=[], storage=['static'] (at pp.c:8114)
    FuncDecl: quals=None (at pp.c:8114)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioResource__request', quals=[] (at pp.c:8114)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ActiveMessageP__pending_length', quals=[], storage=[] (at pp.c:8116)
    TypeDecl: declname='CC2420ActiveMessageP__pending_length', quals=[] (at pp.c:8116)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420ActiveMessageP__pending_message', quals=[], storage=[] (at pp.c:8117)
    PtrDecl: quals=[] (at pp.c:8117)
      TypeDecl: declname='CC2420ActiveMessageP__pending_message', quals=[] (at pp.c:8117)
        IdentifierType: names=['message_t'] (at None)
    Cast:  (at None)
      Typename: quals=[] (at None)
        PtrDecl: quals=[] (at pp.c:8117)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      Constant: type='int', value='0' (at pp.c:8117)
  Decl: name='CC2420ActiveMessageP__RadioResource__granted', quals=[], storage=['static'] (at pp.c:8119)
    FuncDecl: quals=None (at pp.c:8119)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioResource__granted', quals=[] (at pp.c:8119)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__AMSend__send', quals=[], storage=['inline', 'static'] (at pp.c:8121)
    FuncDecl: quals=None (at pp.c:8121)
      ParamList:  (at pp.c:8121)
        Decl: name='id', quals=[], storage=[] (at pp.c:8121)
          TypeDecl: declname='id', quals=[] (at pp.c:8121)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='addr', quals=[], storage=[] (at pp.c:8121)
          TypeDecl: declname='addr', quals=[] (at pp.c:8121)
            IdentifierType: names=['am_addr_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8122)
          PtrDecl: quals=[] (at pp.c:8122)
            TypeDecl: declname='msg', quals=[] (at pp.c:8122)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8123)
          TypeDecl: declname='len', quals=[] (at pp.c:8123)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMSend__send', quals=[] (at pp.c:8121)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__address', quals=[], storage=['inline', 'static'] (at pp.c:8125)
    FuncDecl: quals=None (at pp.c:8125)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__address', quals=[] (at pp.c:8125)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__destination', quals=[], storage=['static'] (at pp.c:8129)
    FuncDecl: quals=None (at pp.c:8129)
      ParamList:  (at pp.c:8129)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:8129)
          PtrDecl: quals=[] (at pp.c:8129)
            TypeDecl: declname='amsg', quals=[] (at pp.c:8129)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__destination', quals=[] (at pp.c:8129)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__source', quals=[], storage=['inline', 'static'] (at pp.c:8134)
    FuncDecl: quals=None (at pp.c:8134)
      ParamList:  (at pp.c:8134)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:8134)
          PtrDecl: quals=[] (at pp.c:8134)
            TypeDecl: declname='amsg', quals=[] (at pp.c:8134)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__source', quals=[] (at pp.c:8134)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__setSource', quals=[], storage=['inline', 'static'] (at pp.c:8144)
    FuncDecl: quals=None (at pp.c:8144)
      ParamList:  (at pp.c:8144)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:8144)
          PtrDecl: quals=[] (at pp.c:8144)
            TypeDecl: declname='amsg', quals=[] (at pp.c:8144)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='addr', quals=[], storage=[] (at pp.c:8144)
          TypeDecl: declname='addr', quals=[] (at pp.c:8144)
            IdentifierType: names=['am_addr_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__setSource', quals=[] (at pp.c:8144)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__isForMe', quals=[], storage=['inline', 'static'] (at pp.c:8149)
    FuncDecl: quals=None (at pp.c:8149)
      ParamList:  (at pp.c:8149)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:8149)
          PtrDecl: quals=[] (at pp.c:8149)
            TypeDecl: declname='amsg', quals=[] (at pp.c:8149)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__isForMe', quals=[] (at pp.c:8149)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__type', quals=[], storage=['static'] (at pp.c:8154)
    FuncDecl: quals=None (at pp.c:8154)
      ParamList:  (at pp.c:8154)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:8154)
          PtrDecl: quals=[] (at pp.c:8154)
            TypeDecl: declname='amsg', quals=[] (at pp.c:8154)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__type', quals=[] (at pp.c:8154)
        IdentifierType: names=['am_id_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__group', quals=[], storage=['inline', 'static'] (at pp.c:8164)
    FuncDecl: quals=None (at pp.c:8164)
      ParamList:  (at pp.c:8164)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:8164)
          PtrDecl: quals=[] (at pp.c:8164)
            TypeDecl: declname='amsg', quals=[] (at pp.c:8164)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__group', quals=[] (at pp.c:8164)
        IdentifierType: names=['am_group_t'] (at None)
  Decl: name='CC2420ActiveMessageP__Packet__clear', quals=[], storage=['inline', 'static'] (at pp.c:8166)
    FuncDecl: quals=None (at pp.c:8166)
      ParamList:  (at pp.c:8166)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8166)
          PtrDecl: quals=[] (at pp.c:8166)
            TypeDecl: declname='msg', quals=[] (at pp.c:8166)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__Packet__clear', quals=[] (at pp.c:8166)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__Packet__payloadLength', quals=[], storage=['inline', 'static'] (at pp.c:8171)
    FuncDecl: quals=None (at pp.c:8171)
      ParamList:  (at pp.c:8171)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8171)
          PtrDecl: quals=[] (at pp.c:8171)
            TypeDecl: declname='msg', quals=[] (at pp.c:8171)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__Packet__payloadLength', quals=[] (at pp.c:8171)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ActiveMessageP__Packet__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:8179)
    FuncDecl: quals=None (at pp.c:8179)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__Packet__maxPayloadLength', quals=[] (at pp.c:8179)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ActiveMessageP__SubSend__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:8189)
    FuncDecl: quals=None (at pp.c:8189)
      ParamList:  (at pp.c:8189)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8189)
          PtrDecl: quals=[] (at pp.c:8189)
            TypeDecl: declname='msg', quals=[] (at pp.c:8189)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:8189)
          TypeDecl: declname='result', quals=[] (at pp.c:8189)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SubSend__sendDone', quals=[] (at pp.c:8189)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__SubReceive__receive', quals=[], storage=['inline', 'static'] (at pp.c:8196)
    FuncDecl: quals=None (at pp.c:8196)
      ParamList:  (at pp.c:8196)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8196)
          PtrDecl: quals=[] (at pp.c:8196)
            TypeDecl: declname='msg', quals=[] (at pp.c:8196)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:8196)
          PtrDecl: quals=[] (at pp.c:8196)
            TypeDecl: declname='payload', quals=[] (at pp.c:8196)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8196)
          TypeDecl: declname='len', quals=[] (at pp.c:8196)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8196)
        TypeDecl: declname='CC2420ActiveMessageP__SubReceive__receive', quals=[] (at pp.c:8196)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420ActiveMessageP__CC2420Config__syncDone', quals=[], storage=['inline', 'static'] (at pp.c:8198)
    FuncDecl: quals=None (at pp.c:8198)
      ParamList:  (at pp.c:8198)
        Decl: name='error', quals=[], storage=[] (at pp.c:8198)
          TypeDecl: declname='error', quals=[] (at pp.c:8198)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__CC2420Config__syncDone', quals=[] (at pp.c:8198)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__SubBackoff__requestInitialBackoff', quals=[], storage=['inline', 'static'] (at pp.c:8204)
    FuncDecl: quals=None (at pp.c:8204)
      ParamList:  (at pp.c:8204)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8204)
          PtrDecl: quals=[] (at pp.c:8204)
            TypeDecl: declname='msg', quals=[] (at pp.c:8204)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SubBackoff__requestInitialBackoff', quals=[] (at pp.c:8204)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__SubBackoff__requestCongestionBackoff', quals=[], storage=['inline', 'static'] (at pp.c:8209)
    FuncDecl: quals=None (at pp.c:8209)
      ParamList:  (at pp.c:8209)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8209)
          PtrDecl: quals=[] (at pp.c:8209)
            TypeDecl: declname='msg', quals=[] (at pp.c:8209)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SubBackoff__requestCongestionBackoff', quals=[] (at pp.c:8209)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__SubBackoff__requestCca', quals=[], storage=['inline', 'static'] (at pp.c:8213)
    FuncDecl: quals=None (at pp.c:8213)
      ParamList:  (at pp.c:8213)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8213)
          PtrDecl: quals=[] (at pp.c:8213)
            TypeDecl: declname='msg', quals=[] (at pp.c:8213)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SubBackoff__requestCca', quals=[] (at pp.c:8213)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__SendNotifier__default__aboutToSend', quals=[], storage=['inline', 'static'] (at pp.c:8215)
    FuncDecl: quals=None (at pp.c:8215)
      ParamList:  (at pp.c:8215)
        Decl: name='amId', quals=[], storage=[] (at pp.c:8215)
          TypeDecl: declname='amId', quals=[] (at pp.c:8215)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='addr', quals=[], storage=[] (at pp.c:8215)
          TypeDecl: declname='addr', quals=[] (at pp.c:8215)
            IdentifierType: names=['am_addr_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8215)
          PtrDecl: quals=[] (at pp.c:8215)
            TypeDecl: declname='msg', quals=[] (at pp.c:8215)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SendNotifier__default__aboutToSend', quals=[] (at pp.c:8215)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioBackoff__default__requestInitialBackoff', quals=[], storage=['inline', 'static'] (at pp.c:8217)
    FuncDecl: quals=None (at pp.c:8217)
      ParamList:  (at pp.c:8217)
        Decl: name='id', quals=[], storage=[] (at pp.c:8217)
          TypeDecl: declname='id', quals=[] (at pp.c:8217)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8218)
          PtrDecl: quals=[] (at pp.c:8218)
            TypeDecl: declname='msg', quals=[] (at pp.c:8218)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__default__requestInitialBackoff', quals=[] (at pp.c:8217)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioBackoff__default__requestCongestionBackoff', quals=[], storage=['inline', 'static'] (at pp.c:8221)
    FuncDecl: quals=None (at pp.c:8221)
      ParamList:  (at pp.c:8221)
        Decl: name='id', quals=[], storage=[] (at pp.c:8221)
          TypeDecl: declname='id', quals=[] (at pp.c:8221)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8222)
          PtrDecl: quals=[] (at pp.c:8222)
            TypeDecl: declname='msg', quals=[] (at pp.c:8222)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__default__requestCongestionBackoff', quals=[] (at pp.c:8221)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioBackoff__default__requestCca', quals=[], storage=['inline', 'static'] (at pp.c:8225)
    FuncDecl: quals=None (at pp.c:8225)
      ParamList:  (at pp.c:8225)
        Decl: name='id', quals=[], storage=[] (at pp.c:8225)
          TypeDecl: declname='id', quals=[] (at pp.c:8225)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8226)
          PtrDecl: quals=[] (at pp.c:8226)
            TypeDecl: declname='msg', quals=[] (at pp.c:8226)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__default__requestCca', quals=[] (at pp.c:8225)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialActiveMessageP__0__SubSend__send', quals=[], storage=['static'] (at pp.c:8228)
    FuncDecl: quals=None (at pp.c:8228)
      ParamList:  (at pp.c:8230)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8230)
          PtrDecl: quals=[] (at pp.c:8230)
            TypeDecl: declname='msg', quals=[] (at pp.c:8230)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8238)
          TypeDecl: declname='len', quals=[] (at pp.c:8238)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__SubSend__send', quals=[] (at pp.c:8228)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialActiveMessageP__0__AMSend__sendDone', quals=[], storage=['static'] (at pp.c:8240)
    FuncDecl: quals=None (at pp.c:8240)
      ParamList:  (at pp.c:8242)
        Decl: name='arg_0x1025ba220', quals=[], storage=[] (at pp.c:8242)
          TypeDecl: declname='arg_0x1025ba220', quals=[] (at pp.c:8242)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8244)
          PtrDecl: quals=[] (at pp.c:8244)
            TypeDecl: declname='msg', quals=[] (at pp.c:8244)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:8251)
          TypeDecl: declname='error', quals=[] (at pp.c:8251)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__AMSend__sendDone', quals=[] (at pp.c:8240)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialActiveMessageP__0__Receive__receive', quals=[], storage=['static'] (at pp.c:8259)
    FuncDecl: quals=None (at pp.c:8259)
      ParamList:  (at pp.c:8261)
        Decl: name='arg_0x1025b9340', quals=[], storage=[] (at pp.c:8261)
          TypeDecl: declname='arg_0x1025b9340', quals=[] (at pp.c:8261)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8263)
          PtrDecl: quals=[] (at pp.c:8263)
            TypeDecl: declname='msg', quals=[] (at pp.c:8263)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:8264)
          PtrDecl: quals=[] (at pp.c:8264)
            TypeDecl: declname='payload', quals=[] (at pp.c:8264)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8270)
          TypeDecl: declname='len', quals=[] (at pp.c:8270)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8255)
        TypeDecl: declname='SerialActiveMessageP__0__Receive__receive', quals=[] (at pp.c:8259)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='SerialActiveMessageP__0__getHeader', quals=[], storage=['inline', 'static'] (at pp.c:8272)
    FuncDecl: quals=None (at pp.c:8272)
      ParamList:  (at pp.c:8272)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8272)
          PtrDecl: quals=[] (at pp.c:8272)
            TypeDecl: declname='msg', quals=[] (at pp.c:8272)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8272)
        TypeDecl: declname='SerialActiveMessageP__0__getHeader', quals=[] (at pp.c:8272)
          IdentifierType: names=['serial_header_t'] (at None)
  Decl: name='SerialActiveMessageP__0__AMSend__send', quals=[], storage=['inline', 'static'] (at pp.c:8280)
    FuncDecl: quals=None (at pp.c:8280)
      ParamList:  (at pp.c:8280)
        Decl: name='id', quals=[], storage=[] (at pp.c:8280)
          TypeDecl: declname='id', quals=[] (at pp.c:8280)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='dest', quals=[], storage=[] (at pp.c:8280)
          TypeDecl: declname='dest', quals=[] (at pp.c:8280)
            IdentifierType: names=['am_addr_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8281)
          PtrDecl: quals=[] (at pp.c:8281)
            TypeDecl: declname='msg', quals=[] (at pp.c:8281)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8282)
          TypeDecl: declname='len', quals=[] (at pp.c:8282)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__AMSend__send', quals=[] (at pp.c:8280)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialActiveMessageP__0__SubSend__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:8284)
    FuncDecl: quals=None (at pp.c:8284)
      ParamList:  (at pp.c:8284)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8284)
          PtrDecl: quals=[] (at pp.c:8284)
            TypeDecl: declname='msg', quals=[] (at pp.c:8284)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:8284)
          TypeDecl: declname='result', quals=[] (at pp.c:8284)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__SubSend__sendDone', quals=[] (at pp.c:8284)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialActiveMessageP__0__SubReceive__receive', quals=[], storage=['inline', 'static'] (at pp.c:8286)
    FuncDecl: quals=None (at pp.c:8286)
      ParamList:  (at pp.c:8286)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8286)
          PtrDecl: quals=[] (at pp.c:8286)
            TypeDecl: declname='msg', quals=[] (at pp.c:8286)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:8286)
          PtrDecl: quals=[] (at pp.c:8286)
            TypeDecl: declname='payload', quals=[] (at pp.c:8286)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8286)
          TypeDecl: declname='len', quals=[] (at pp.c:8286)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8286)
        TypeDecl: declname='SerialActiveMessageP__0__SubReceive__receive', quals=[] (at pp.c:8286)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='SerialActiveMessageP__0__Packet__clear', quals=[], storage=['inline', 'static'] (at pp.c:8290)
    FuncDecl: quals=None (at pp.c:8290)
      ParamList:  (at pp.c:8290)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8290)
          PtrDecl: quals=[] (at pp.c:8290)
            TypeDecl: declname='msg', quals=[] (at pp.c:8290)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__Packet__clear', quals=[] (at pp.c:8290)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialActiveMessageP__0__Packet__payloadLength', quals=[], storage=['inline', 'static'] (at pp.c:8295)
    FuncDecl: quals=None (at pp.c:8295)
      ParamList:  (at pp.c:8295)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8295)
          PtrDecl: quals=[] (at pp.c:8295)
            TypeDecl: declname='msg', quals=[] (at pp.c:8295)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__Packet__payloadLength', quals=[] (at pp.c:8295)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialActiveMessageP__0__Packet__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:8304)
    FuncDecl: quals=None (at pp.c:8304)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__Packet__maxPayloadLength', quals=[] (at pp.c:8304)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialActiveMessageP__0__AMPacket__destination', quals=[], storage=['inline', 'static'] (at pp.c:8306)
    FuncDecl: quals=None (at pp.c:8306)
      ParamList:  (at pp.c:8306)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:8306)
          PtrDecl: quals=[] (at pp.c:8306)
            TypeDecl: declname='amsg', quals=[] (at pp.c:8306)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__AMPacket__destination', quals=[] (at pp.c:8306)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='SerialActiveMessageP__0__AMPacket__source', quals=[], storage=['inline', 'static'] (at pp.c:8311)
    FuncDecl: quals=None (at pp.c:8311)
      ParamList:  (at pp.c:8311)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:8311)
          PtrDecl: quals=[] (at pp.c:8311)
            TypeDecl: declname='amsg', quals=[] (at pp.c:8311)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__AMPacket__source', quals=[] (at pp.c:8311)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='SerialActiveMessageP__0__AMPacket__setSource', quals=[], storage=['inline', 'static'] (at pp.c:8321)
    FuncDecl: quals=None (at pp.c:8321)
      ParamList:  (at pp.c:8321)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:8321)
          PtrDecl: quals=[] (at pp.c:8321)
            TypeDecl: declname='amsg', quals=[] (at pp.c:8321)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='addr', quals=[], storage=[] (at pp.c:8321)
          TypeDecl: declname='addr', quals=[] (at pp.c:8321)
            IdentifierType: names=['am_addr_t'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__AMPacket__setSource', quals=[] (at pp.c:8321)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialActiveMessageP__0__AMPacket__type', quals=[], storage=['inline', 'static'] (at pp.c:8330)
    FuncDecl: quals=None (at pp.c:8330)
      ParamList:  (at pp.c:8330)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:8330)
          PtrDecl: quals=[] (at pp.c:8330)
            TypeDecl: declname='amsg', quals=[] (at pp.c:8330)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__AMPacket__type', quals=[] (at pp.c:8330)
        IdentifierType: names=['am_id_t'] (at None)
  Decl: name='SerialActiveMessageP__0__AMPacket__setGroup', quals=[], storage=['inline', 'static'] (at pp.c:8332)
    FuncDecl: quals=None (at pp.c:8332)
      ParamList:  (at pp.c:8332)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8332)
          PtrDecl: quals=[] (at pp.c:8332)
            TypeDecl: declname='msg', quals=[] (at pp.c:8332)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='group', quals=[], storage=[] (at pp.c:8332)
          TypeDecl: declname='group', quals=[] (at pp.c:8332)
            IdentifierType: names=['am_group_t'] (at None)
      TypeDecl: declname='SerialActiveMessageP__0__AMPacket__setGroup', quals=[] (at pp.c:8332)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__SplitControl__startDone', quals=[], storage=['static'] (at pp.c:8334)
    FuncDecl: quals=None (at pp.c:8334)
      ParamList:  (at pp.c:8334)
        Decl: name='error', quals=[], storage=[] (at pp.c:8334)
          TypeDecl: declname='error', quals=[] (at pp.c:8334)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='SerialP__SplitControl__startDone', quals=[] (at pp.c:8334)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__SplitControl__stopDone', quals=[], storage=['static'] (at pp.c:8336)
    FuncDecl: quals=None (at pp.c:8336)
      ParamList:  (at pp.c:8336)
        Decl: name='error', quals=[], storage=[] (at pp.c:8336)
          TypeDecl: declname='error', quals=[] (at pp.c:8336)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='SerialP__SplitControl__stopDone', quals=[] (at pp.c:8336)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__stopDoneTask__postTask', quals=[], storage=['static'] (at pp.c:8338)
    FuncDecl: quals=None (at pp.c:8338)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__stopDoneTask__postTask', quals=[] (at pp.c:8338)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialP__SerialControl__start', quals=[], storage=['static'] (at pp.c:8340)
    FuncDecl: quals=None (at pp.c:8340)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__SerialControl__start', quals=[] (at pp.c:8340)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialP__SerialControl__stop', quals=[], storage=['static'] (at pp.c:8350)
    FuncDecl: quals=None (at pp.c:8350)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__SerialControl__stop', quals=[] (at pp.c:8350)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialP__RunTx__postTask', quals=[], storage=['static'] (at pp.c:8352)
    FuncDecl: quals=None (at pp.c:8352)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__RunTx__postTask', quals=[] (at pp.c:8352)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialP__SerialFlush__flush', quals=[], storage=['static'] (at pp.c:8354)
    FuncDecl: quals=None (at pp.c:8354)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__SerialFlush__flush', quals=[] (at pp.c:8354)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__startDoneTask__postTask', quals=[], storage=['static'] (at pp.c:8356)
    FuncDecl: quals=None (at pp.c:8356)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__startDoneTask__postTask', quals=[] (at pp.c:8356)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialP__SerialFrameComm__putDelimiter', quals=[], storage=['static'] (at pp.c:8358)
    FuncDecl: quals=None (at pp.c:8358)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__SerialFrameComm__putDelimiter', quals=[] (at pp.c:8358)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialP__SerialFrameComm__resetReceive', quals=[], storage=['static'] (at pp.c:8360)
    FuncDecl: quals=None (at pp.c:8360)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__SerialFrameComm__resetReceive', quals=[] (at pp.c:8360)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__SerialFrameComm__putData', quals=[], storage=['static'] (at pp.c:8362)
    FuncDecl: quals=None (at pp.c:8362)
      ParamList:  (at pp.c:8362)
        Decl: name='data', quals=[], storage=[] (at pp.c:8362)
          TypeDecl: declname='data', quals=[] (at pp.c:8362)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialP__SerialFrameComm__putData', quals=[] (at pp.c:8362)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialP__defaultSerialFlushTask__postTask', quals=[], storage=['static'] (at pp.c:8364)
    FuncDecl: quals=None (at pp.c:8364)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__defaultSerialFlushTask__postTask', quals=[] (at pp.c:8364)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialP__SendBytePacket__nextByte', quals=[], storage=['static'] (at pp.c:8366)
    FuncDecl: quals=None (at pp.c:8366)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__SendBytePacket__nextByte', quals=[] (at pp.c:8366)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialP__SendBytePacket__sendCompleted', quals=[], storage=['static'] (at pp.c:8376)
    FuncDecl: quals=None (at pp.c:8376)
      ParamList:  (at pp.c:8376)
        Decl: name='error', quals=[], storage=[] (at pp.c:8376)
          TypeDecl: declname='error', quals=[] (at pp.c:8376)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='SerialP__SendBytePacket__sendCompleted', quals=[] (at pp.c:8376)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__ReceiveBytePacket__startPacket', quals=[], storage=['static'] (at pp.c:8378)
    FuncDecl: quals=None (at pp.c:8378)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__ReceiveBytePacket__startPacket', quals=[] (at pp.c:8378)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialP__ReceiveBytePacket__byteReceived', quals=[], storage=['static'] (at pp.c:8385)
    FuncDecl: quals=None (at pp.c:8385)
      ParamList:  (at pp.c:8385)
        Decl: name='data', quals=[], storage=[] (at pp.c:8385)
          TypeDecl: declname='data', quals=[] (at pp.c:8385)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialP__ReceiveBytePacket__byteReceived', quals=[] (at pp.c:8385)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__ReceiveBytePacket__endPacket', quals=[], storage=['static'] (at pp.c:8396)
    FuncDecl: quals=None (at pp.c:8396)
      ParamList:  (at pp.c:8396)
        Decl: name='result', quals=[], storage=[] (at pp.c:8396)
          TypeDecl: declname='result', quals=[] (at pp.c:8396)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='SerialP__ReceiveBytePacket__endPacket', quals=[] (at pp.c:8396)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:8398)
    Enum: name='SerialP____nesc_unnamed4357' (at pp.c:8398)
      EnumeratorList:  (at pp.c:8400)
        Enumerator: name='SerialP__RunTx' (at pp.c:8400)
          Constant: type='int', value='14U' (at pp.c:8400)
  Typedef: name='SerialP____nesc_sillytask_RunTx', quals=[], storage=['typedef'] (at pp.c:8403)
    ArrayDecl:  (at pp.c:8403)
      TypeDecl: declname='SerialP____nesc_sillytask_RunTx', quals=[] (at pp.c:8403)
        IdentifierType: names=['int'] (at None)
      ID: name='SerialP__RunTx' (at pp.c:8403)
  Decl: name=None, quals=[], storage=[] (at pp.c:8405)
    Enum: name='SerialP____nesc_unnamed4358' (at pp.c:8405)
      EnumeratorList:  (at pp.c:8407)
        Enumerator: name='SerialP__startDoneTask' (at pp.c:8407)
          Constant: type='int', value='15U' (at pp.c:8407)
  Typedef: name='SerialP____nesc_sillytask_startDoneTask', quals=[], storage=['typedef'] (at pp.c:8410)
    ArrayDecl:  (at pp.c:8410)
      TypeDecl: declname='SerialP____nesc_sillytask_startDoneTask', quals=[] (at pp.c:8410)
        IdentifierType: names=['int'] (at None)
      ID: name='SerialP__startDoneTask' (at pp.c:8410)
  Decl: name=None, quals=[], storage=[] (at pp.c:8416)
    Enum: name='SerialP____nesc_unnamed4359' (at pp.c:8416)
      EnumeratorList:  (at pp.c:8418)
        Enumerator: name='SerialP__stopDoneTask' (at pp.c:8418)
          Constant: type='int', value='16U' (at pp.c:8418)
  Typedef: name='SerialP____nesc_sillytask_stopDoneTask', quals=[], storage=['typedef'] (at pp.c:8421)
    ArrayDecl:  (at pp.c:8421)
      TypeDecl: declname='SerialP____nesc_sillytask_stopDoneTask', quals=[] (at pp.c:8421)
        IdentifierType: names=['int'] (at None)
      ID: name='SerialP__stopDoneTask' (at pp.c:8421)
  Decl: name=None, quals=[], storage=[] (at pp.c:8430)
    Enum: name='SerialP____nesc_unnamed4360' (at pp.c:8430)
      EnumeratorList:  (at pp.c:8432)
        Enumerator: name='SerialP__defaultSerialFlushTask' (at pp.c:8432)
          Constant: type='int', value='17U' (at pp.c:8432)
  Typedef: name='SerialP____nesc_sillytask_defaultSerialFlushTask', quals=[], storage=['typedef'] (at pp.c:8435)
    ArrayDecl:  (at pp.c:8435)
      TypeDecl: declname='SerialP____nesc_sillytask_defaultSerialFlushTask', quals=[] (at pp.c:8435)
        IdentifierType: names=['int'] (at None)
      ID: name='SerialP__defaultSerialFlushTask' (at pp.c:8435)
  Decl: name=None, quals=[], storage=[] (at pp.c:8437)
    Enum: name='SerialP____nesc_unnamed4361' (at pp.c:8437)
      EnumeratorList:  (at pp.c:8438)
        Enumerator: name='SerialP__RX_DATA_BUFFER_SIZE' (at pp.c:8438)
          Constant: type='int', value='2' (at pp.c:8438)
        Enumerator: name='SerialP__TX_DATA_BUFFER_SIZE' (at pp.c:8439)
          Constant: type='int', value='4' (at pp.c:8439)
        Enumerator: name='SerialP__SERIAL_MTU' (at pp.c:8440)
          Constant: type='int', value='255' (at pp.c:8440)
        Enumerator: name='SerialP__SERIAL_VERSION' (at pp.c:8441)
          Constant: type='int', value='1' (at pp.c:8441)
        Enumerator: name='SerialP__ACK_QUEUE_SIZE' (at pp.c:8442)
          Constant: type='int', value='5' (at pp.c:8442)
  Decl: name=None, quals=[], storage=[] (at pp.c:8445)
    Enum: name='SerialP____nesc_unnamed4362' (at pp.c:8445)
      EnumeratorList:  (at pp.c:8446)
        Enumerator: name='SerialP__RXSTATE_NOSYNC' (at pp.c:8446)
        Enumerator: name='SerialP__RXSTATE_PROTO' (at pp.c:8447)
        Enumerator: name='SerialP__RXSTATE_TOKEN' (at pp.c:8448)
        Enumerator: name='SerialP__RXSTATE_INFO' (at pp.c:8449)
        Enumerator: name='SerialP__RXSTATE_INACTIVE' (at pp.c:8450)
  Decl: name=None, quals=[], storage=[] (at pp.c:8453)
    Enum: name='SerialP____nesc_unnamed4363' (at pp.c:8453)
      EnumeratorList:  (at pp.c:8454)
        Enumerator: name='SerialP__TXSTATE_IDLE' (at pp.c:8454)
        Enumerator: name='SerialP__TXSTATE_PROTO' (at pp.c:8455)
        Enumerator: name='SerialP__TXSTATE_SEQNO' (at pp.c:8456)
        Enumerator: name='SerialP__TXSTATE_INFO' (at pp.c:8457)
        Enumerator: name='SerialP__TXSTATE_FCS1' (at pp.c:8458)
        Enumerator: name='SerialP__TXSTATE_FCS2' (at pp.c:8459)
        Enumerator: name='SerialP__TXSTATE_ENDFLAG' (at pp.c:8460)
        Enumerator: name='SerialP__TXSTATE_ENDWAIT' (at pp.c:8461)
        Enumerator: name='SerialP__TXSTATE_FINISH' (at pp.c:8462)
        Enumerator: name='SerialP__TXSTATE_ERROR' (at pp.c:8463)
        Enumerator: name='SerialP__TXSTATE_INACTIVE' (at pp.c:8464)
  Typedef: name='SerialP__tx_data_buffer_states_t', quals=[], storage=['typedef'] (at pp.c:8476)
    TypeDecl: declname='SerialP__tx_data_buffer_states_t', quals=[] (at pp.c:8476)
      Enum: name='SerialP____nesc_unnamed4364' (at pp.c:8472)
        EnumeratorList:  (at pp.c:8473)
          Enumerator: name='SerialP__BUFFER_AVAILABLE' (at pp.c:8473)
          Enumerator: name='SerialP__BUFFER_FILLING' (at pp.c:8474)
          Enumerator: name='SerialP__BUFFER_COMPLETE' (at pp.c:8475)
  Decl: name=None, quals=[], storage=[] (at pp.c:8478)
    Enum: name='SerialP____nesc_unnamed4365' (at pp.c:8478)
      EnumeratorList:  (at pp.c:8479)
        Enumerator: name='SerialP__TX_ACK_INDEX' (at pp.c:8479)
          Constant: type='int', value='0' (at pp.c:8479)
        Enumerator: name='SerialP__TX_DATA_INDEX' (at pp.c:8480)
          Constant: type='int', value='1' (at pp.c:8480)
        Enumerator: name='SerialP__TX_BUFFER_COUNT' (at pp.c:8481)
          Constant: type='int', value='2' (at pp.c:8481)
  Typedef: name='SerialP__rx_buf_t', quals=[], storage=['typedef'] (at pp.c:8494)
    TypeDecl: declname='SerialP__rx_buf_t', quals=[] (at pp.c:8494)
      Struct: name='SerialP____nesc_unnamed4366', packed=False (at pp.c:8490)
        Decl: name='writePtr', quals=[], storage=[] (at 0)
          TypeDecl: declname='writePtr', quals=[] (at pp.c:8491)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='readPtr', quals=[], storage=[] (at 0)
          TypeDecl: declname='readPtr', quals=[] (at pp.c:8492)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:8493)
            TypeDecl: declname='buf', quals=[] (at pp.c:8493)
              IdentifierType: names=['uint8_t'] (at None)
            BinaryOp: op='+' (at pp.c:8493)
              ID: name='SerialP__RX_DATA_BUFFER_SIZE' (at pp.c:8493)
              Constant: type='int', value='1' (at pp.c:8493)
  Typedef: name='SerialP__tx_buf_t', quals=[], storage=['typedef'] (at pp.c:8503)
    TypeDecl: declname='SerialP__tx_buf_t', quals=[] (at pp.c:8503)
      Struct: name='SerialP____nesc_unnamed4367', packed=False (at pp.c:8500)
        Decl: name='state', quals=[], storage=[] (at 0)
          TypeDecl: declname='state', quals=[] (at pp.c:8501)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at 0)
          TypeDecl: declname='buf', quals=[] (at pp.c:8502)
            IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='SerialP__ack_queue_t', quals=[], storage=['typedef'] (at pp.c:8514)
    TypeDecl: declname='SerialP__ack_queue_t', quals=[] (at pp.c:8514)
      Struct: name='SerialP____nesc_unnamed4368', packed=False (at pp.c:8510)
        Decl: name='writePtr', quals=[], storage=[] (at 0)
          TypeDecl: declname='writePtr', quals=[] (at pp.c:8511)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='readPtr', quals=[], storage=[] (at 0)
          TypeDecl: declname='readPtr', quals=[] (at pp.c:8512)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:8513)
            TypeDecl: declname='buf', quals=[] (at pp.c:8513)
              IdentifierType: names=['uint8_t'] (at None)
            BinaryOp: op='+' (at pp.c:8513)
              ID: name='SerialP__ACK_QUEUE_SIZE' (at pp.c:8513)
              Constant: type='int', value='1' (at pp.c:8513)
  Decl: name='SerialP__rxBuf', quals=[], storage=[] (at pp.c:8518)
    TypeDecl: declname='SerialP__rxBuf', quals=[] (at pp.c:8518)
      IdentifierType: names=['SerialP__rx_buf_t'] (at None)
  Decl: name='SerialP__txBuf', quals=[], storage=[] (at pp.c:8519)
    ArrayDecl:  (at pp.c:8519)
      TypeDecl: declname='SerialP__txBuf', quals=[] (at pp.c:8519)
        IdentifierType: names=['SerialP__tx_buf_t'] (at None)
      ID: name='SerialP__TX_BUFFER_COUNT' (at pp.c:8519)
  Decl: name='SerialP__rxState', quals=[], storage=[] (at pp.c:8523)
    TypeDecl: declname='SerialP__rxState', quals=[] (at pp.c:8523)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialP__rxByteCnt', quals=[], storage=[] (at pp.c:8524)
    TypeDecl: declname='SerialP__rxByteCnt', quals=[] (at pp.c:8524)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialP__rxProto', quals=[], storage=[] (at pp.c:8525)
    TypeDecl: declname='SerialP__rxProto', quals=[] (at pp.c:8525)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialP__rxSeqno', quals=[], storage=[] (at pp.c:8526)
    TypeDecl: declname='SerialP__rxSeqno', quals=[] (at pp.c:8526)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialP__rxCRC', quals=[], storage=[] (at pp.c:8527)
    TypeDecl: declname='SerialP__rxCRC', quals=[] (at pp.c:8527)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='SerialP__txState', quals=[], storage=[] (at pp.c:8531)
    TypeDecl: declname='SerialP__txState', quals=[] (at pp.c:8531)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialP__txByteCnt', quals=[], storage=[] (at pp.c:8532)
    TypeDecl: declname='SerialP__txByteCnt', quals=[] (at pp.c:8532)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialP__txProto', quals=[], storage=[] (at pp.c:8533)
    TypeDecl: declname='SerialP__txProto', quals=[] (at pp.c:8533)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialP__txSeqno', quals=[], storage=[] (at pp.c:8534)
    TypeDecl: declname='SerialP__txSeqno', quals=[] (at pp.c:8534)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialP__txCRC', quals=[], storage=[] (at pp.c:8535)
    TypeDecl: declname='SerialP__txCRC', quals=[] (at pp.c:8535)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='SerialP__txPending', quals=[], storage=[] (at pp.c:8536)
    TypeDecl: declname='SerialP__txPending', quals=[] (at pp.c:8536)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialP__txIndex', quals=[], storage=[] (at pp.c:8537)
    TypeDecl: declname='SerialP__txIndex', quals=[] (at pp.c:8537)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialP__ackQ', quals=[], storage=[] (at pp.c:8540)
    TypeDecl: declname='SerialP__ackQ', quals=[] (at pp.c:8540)
      IdentifierType: names=['SerialP__ack_queue_t'] (at None)
  Decl: name='SerialP__offPending', quals=[], storage=[] (at pp.c:8542)
    TypeDecl: declname='SerialP__offPending', quals=[] (at pp.c:8542)
      IdentifierType: names=['bool'] (at None)
    ID: name='FALSE' (at pp.c:8542)
  Decl: name='SerialP__txInit', quals=[], storage=['__inline', 'static'] (at pp.c:8546)
    FuncDecl: quals=None (at pp.c:8546)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__txInit', quals=[] (at pp.c:8546)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__rxInit', quals=[], storage=['__inline', 'static'] (at pp.c:8547)
    FuncDecl: quals=None (at pp.c:8547)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__rxInit', quals=[] (at pp.c:8547)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__ackInit', quals=[], storage=['__inline', 'static'] (at pp.c:8548)
    FuncDecl: quals=None (at pp.c:8548)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__ackInit', quals=[] (at pp.c:8548)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__ack_queue_is_full', quals=[], storage=['__inline', 'static'] (at pp.c:8550)
    FuncDecl: quals=None (at pp.c:8550)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__ack_queue_is_full', quals=[] (at pp.c:8550)
        IdentifierType: names=['bool'] (at None)
  Decl: name='SerialP__ack_queue_is_empty', quals=[], storage=['__inline', 'static'] (at pp.c:8551)
    FuncDecl: quals=None (at pp.c:8551)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__ack_queue_is_empty', quals=[] (at pp.c:8551)
        IdentifierType: names=['bool'] (at None)
  Decl: name='SerialP__ack_queue_push', quals=[], storage=['__inline', 'static'] (at pp.c:8552)
    FuncDecl: quals=None (at pp.c:8552)
      ParamList:  (at pp.c:8552)
        Decl: name='token', quals=[], storage=[] (at pp.c:8552)
          TypeDecl: declname='token', quals=[] (at pp.c:8552)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialP__ack_queue_push', quals=[] (at pp.c:8552)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__ack_queue_top', quals=[], storage=['__inline', 'static'] (at pp.c:8553)
    FuncDecl: quals=None (at pp.c:8553)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__ack_queue_top', quals=[] (at pp.c:8553)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialP__ack_queue_pop', quals=[], storage=['inline', 'static'] (at pp.c:8554)
    FuncDecl: quals=None (at pp.c:8554)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__ack_queue_pop', quals=[] (at pp.c:8554)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialP__rx_buffer_push', quals=[], storage=['__inline', 'static'] (at pp.c:8559)
    FuncDecl: quals=None (at pp.c:8559)
      ParamList:  (at pp.c:8559)
        Decl: name='data', quals=[], storage=[] (at pp.c:8559)
          TypeDecl: declname='data', quals=[] (at pp.c:8559)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialP__rx_buffer_push', quals=[] (at pp.c:8559)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__rx_buffer_top', quals=[], storage=['__inline', 'static'] (at pp.c:8560)
    FuncDecl: quals=None (at pp.c:8560)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__rx_buffer_top', quals=[] (at pp.c:8560)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialP__rx_buffer_pop', quals=[], storage=['__inline', 'static'] (at pp.c:8561)
    FuncDecl: quals=None (at pp.c:8561)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__rx_buffer_pop', quals=[] (at pp.c:8561)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialP__rx_current_crc', quals=[], storage=['__inline', 'static'] (at pp.c:8562)
    FuncDecl: quals=None (at pp.c:8562)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__rx_current_crc', quals=[] (at pp.c:8562)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='SerialP__rx_state_machine', quals=[], storage=['static'] (at pp.c:8564)
    FuncDecl: quals=None (at pp.c:8564)
      ParamList:  (at pp.c:8564)
        Decl: name='isDelimeter', quals=[], storage=[] (at pp.c:8564)
          TypeDecl: declname='isDelimeter', quals=[] (at pp.c:8564)
            IdentifierType: names=['bool'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:8564)
          TypeDecl: declname='data', quals=[] (at pp.c:8564)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialP__rx_state_machine', quals=[] (at pp.c:8564)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__MaybeScheduleTx', quals=[], storage=['static'] (at pp.c:8565)
    FuncDecl: quals=None (at pp.c:8565)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__MaybeScheduleTx', quals=[] (at pp.c:8565)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__txInit', quals=[], storage=['__inline', 'static'] (at pp.c:8570)
    FuncDecl: quals=None (at pp.c:8570)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__txInit', quals=[] (at pp.c:8570)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__rxInit', quals=[], storage=['__inline', 'static'] (at pp.c:8572)
    FuncDecl: quals=None (at pp.c:8572)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__rxInit', quals=[] (at pp.c:8572)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__ackInit', quals=[], storage=['__inline', 'static'] (at pp.c:8581)
    FuncDecl: quals=None (at pp.c:8581)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__ackInit', quals=[] (at pp.c:8581)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:8585)
    FuncDecl: quals=None (at pp.c:8585)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__Init__init', quals=[] (at pp.c:8585)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialP__ack_queue_is_full', quals=[], storage=['__inline', 'static'] (at pp.c:8587)
    FuncDecl: quals=None (at pp.c:8587)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__ack_queue_is_full', quals=[] (at pp.c:8587)
        IdentifierType: names=['bool'] (at None)
  Decl: name='SerialP__ack_queue_is_empty', quals=[], storage=['__inline', 'static'] (at pp.c:8597)
    FuncDecl: quals=None (at pp.c:8597)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__ack_queue_is_empty', quals=[] (at pp.c:8597)
        IdentifierType: names=['bool'] (at None)
  Decl: name='SerialP__ack_queue_push', quals=[], storage=['__inline', 'static'] (at pp.c:8603)
    FuncDecl: quals=None (at pp.c:8603)
      ParamList:  (at pp.c:8603)
        Decl: name='token', quals=[], storage=[] (at pp.c:8603)
          TypeDecl: declname='token', quals=[] (at pp.c:8603)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialP__ack_queue_push', quals=[] (at pp.c:8603)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__ack_queue_top', quals=[], storage=['__inline', 'static'] (at pp.c:8613)
    FuncDecl: quals=None (at pp.c:8613)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__ack_queue_top', quals=[] (at pp.c:8613)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialP__ack_queue_pop', quals=[], storage=['inline', 'static'] (at pp.c:8623)
    FuncDecl: quals=None (at pp.c:8623)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__ack_queue_pop', quals=[] (at pp.c:8623)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialP__rx_buffer_push', quals=[], storage=['__inline', 'static'] (at pp.c:8625)
    FuncDecl: quals=None (at pp.c:8625)
      ParamList:  (at pp.c:8625)
        Decl: name='data', quals=[], storage=[] (at pp.c:8625)
          TypeDecl: declname='data', quals=[] (at pp.c:8625)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialP__rx_buffer_push', quals=[] (at pp.c:8625)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__rx_buffer_top', quals=[], storage=['__inline', 'static'] (at pp.c:8629)
    FuncDecl: quals=None (at pp.c:8629)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__rx_buffer_top', quals=[] (at pp.c:8629)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialP__rx_buffer_pop', quals=[], storage=['__inline', 'static'] (at pp.c:8633)
    FuncDecl: quals=None (at pp.c:8633)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__rx_buffer_pop', quals=[] (at pp.c:8633)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialP__rx_current_crc', quals=[], storage=['__inline', 'static'] (at pp.c:8639)
    FuncDecl: quals=None (at pp.c:8639)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__rx_current_crc', quals=[] (at pp.c:8639)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='SerialP__startDoneTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:8650)
    FuncDecl: quals=None (at pp.c:8650)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__startDoneTask__runTask', quals=[] (at pp.c:8650)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__stopDoneTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:8656)
    FuncDecl: quals=None (at pp.c:8656)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__stopDoneTask__runTask', quals=[] (at pp.c:8656)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__SerialFlush__flushDone', quals=[], storage=['inline', 'static'] (at pp.c:8660)
    FuncDecl: quals=None (at pp.c:8660)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__SerialFlush__flushDone', quals=[] (at pp.c:8660)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__defaultSerialFlushTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:8665)
    FuncDecl: quals=None (at pp.c:8665)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__defaultSerialFlushTask__runTask', quals=[] (at pp.c:8665)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__SerialFlush__default__flush', quals=[], storage=['inline', 'static'] (at pp.c:8668)
    FuncDecl: quals=None (at pp.c:8668)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__SerialFlush__default__flush', quals=[] (at pp.c:8668)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__SplitControl__start', quals=[], storage=['inline', 'static'] (at pp.c:8672)
    FuncDecl: quals=None (at pp.c:8672)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__SplitControl__start', quals=[] (at pp.c:8672)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialP__testOff', quals=[], storage=['static'] (at pp.c:8677)
    FuncDecl: quals=None (at pp.c:8677)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__testOff', quals=[] (at pp.c:8677)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__SerialFrameComm__delimiterReceived', quals=[], storage=['inline', 'static'] (at pp.c:8679)
    FuncDecl: quals=None (at pp.c:8679)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__SerialFrameComm__delimiterReceived', quals=[] (at pp.c:8679)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__SerialFrameComm__dataReceived', quals=[], storage=['inline', 'static'] (at pp.c:8682)
    FuncDecl: quals=None (at pp.c:8682)
      ParamList:  (at pp.c:8682)
        Decl: name='data', quals=[], storage=[] (at pp.c:8682)
          TypeDecl: declname='data', quals=[] (at pp.c:8682)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialP__SerialFrameComm__dataReceived', quals=[] (at pp.c:8682)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__valid_rx_proto', quals=[], storage=['inline', 'static'] (at pp.c:8686)
    FuncDecl: quals=None (at pp.c:8686)
      ParamList:  (at pp.c:8686)
        Decl: name='proto', quals=[], storage=[] (at pp.c:8686)
          TypeDecl: declname='proto', quals=[] (at pp.c:8686)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialP__valid_rx_proto', quals=[] (at pp.c:8686)
        IdentifierType: names=['bool'] (at None)
  Decl: name='SerialP__rx_state_machine', quals=[], storage=['static'] (at pp.c:8697)
    FuncDecl: quals=None (at pp.c:8697)
      ParamList:  (at pp.c:8697)
        Decl: name='isDelimeter', quals=[], storage=[] (at pp.c:8697)
          TypeDecl: declname='isDelimeter', quals=[] (at pp.c:8697)
            IdentifierType: names=['bool'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:8697)
          TypeDecl: declname='data', quals=[] (at pp.c:8697)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialP__rx_state_machine', quals=[] (at pp.c:8697)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__MaybeScheduleTx', quals=[], storage=['static'] (at pp.c:8699)
    FuncDecl: quals=None (at pp.c:8699)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__MaybeScheduleTx', quals=[] (at pp.c:8699)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__SendBytePacket__completeSend', quals=[], storage=['inline', 'static'] (at pp.c:8710)
    FuncDecl: quals=None (at pp.c:8710)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__SendBytePacket__completeSend', quals=[] (at pp.c:8710)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialP__SendBytePacket__startSend', quals=[], storage=['inline', 'static'] (at pp.c:8719)
    FuncDecl: quals=None (at pp.c:8719)
      ParamList:  (at pp.c:8719)
        Decl: name='b', quals=[], storage=[] (at pp.c:8719)
          TypeDecl: declname='b', quals=[] (at pp.c:8719)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialP__SendBytePacket__startSend', quals=[] (at pp.c:8719)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialP__RunTx__runTask', quals=[], storage=['inline', 'static'] (at pp.c:8721)
    FuncDecl: quals=None (at pp.c:8721)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__RunTx__runTask', quals=[] (at pp.c:8721)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialP__SerialFrameComm__putDone', quals=[], storage=['inline', 'static'] (at pp.c:8723)
    FuncDecl: quals=None (at pp.c:8723)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialP__SerialFrameComm__putDone', quals=[] (at pp.c:8723)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialDispatcherP__0__receiveTask__postTask', quals=[], storage=['static'] (at pp.c:8725)
    FuncDecl: quals=None (at pp.c:8725)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__receiveTask__postTask', quals=[] (at pp.c:8725)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialDispatcherP__0__Send__sendDone', quals=[], storage=['static'] (at pp.c:8727)
    FuncDecl: quals=None (at pp.c:8727)
      ParamList:  (at pp.c:8729)
        Decl: name='arg_0x1026e9748', quals=[], storage=[] (at pp.c:8729)
          TypeDecl: declname='arg_0x1026e9748', quals=[] (at pp.c:8729)
            IdentifierType: names=['uart_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8731)
          PtrDecl: quals=[] (at pp.c:8731)
            TypeDecl: declname='msg', quals=[] (at pp.c:8731)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:8735)
          TypeDecl: declname='error', quals=[] (at pp.c:8735)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__Send__sendDone', quals=[] (at pp.c:8727)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialDispatcherP__0__signalSendDone__postTask', quals=[], storage=['static'] (at pp.c:8737)
    FuncDecl: quals=None (at pp.c:8737)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__signalSendDone__postTask', quals=[] (at pp.c:8737)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialDispatcherP__0__Receive__receive', quals=[], storage=['static'] (at pp.c:8745)
    FuncDecl: quals=None (at pp.c:8745)
      ParamList:  (at pp.c:8747)
        Decl: name='arg_0x1026edc50', quals=[], storage=[] (at pp.c:8747)
          TypeDecl: declname='arg_0x1026edc50', quals=[] (at pp.c:8747)
            IdentifierType: names=['uart_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8749)
          PtrDecl: quals=[] (at pp.c:8749)
            TypeDecl: declname='msg', quals=[] (at pp.c:8749)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:8750)
          PtrDecl: quals=[] (at pp.c:8750)
            TypeDecl: declname='payload', quals=[] (at pp.c:8750)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8756)
          TypeDecl: declname='len', quals=[] (at pp.c:8756)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8741)
        TypeDecl: declname='SerialDispatcherP__0__Receive__receive', quals=[] (at pp.c:8745)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='SerialDispatcherP__0__PacketInfo__upperLength', quals=[], storage=['static'] (at pp.c:8758)
    FuncDecl: quals=None (at pp.c:8758)
      ParamList:  (at pp.c:8760)
        Decl: name='arg_0x1026e8aa8', quals=[], storage=[] (at pp.c:8760)
          TypeDecl: declname='arg_0x1026e8aa8', quals=[] (at pp.c:8760)
            IdentifierType: names=['uart_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8762)
          PtrDecl: quals=[] (at pp.c:8762)
            TypeDecl: declname='msg', quals=[] (at pp.c:8762)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='dataLinkLen', quals=[], storage=[] (at pp.c:8762)
          TypeDecl: declname='dataLinkLen', quals=[] (at pp.c:8762)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__PacketInfo__upperLength', quals=[] (at pp.c:8758)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialDispatcherP__0__PacketInfo__offset', quals=[], storage=['static'] (at pp.c:8764)
    FuncDecl: quals=None (at pp.c:8764)
      ParamList:  (at pp.c:8766)
        Decl: name='arg_0x1026e8aa8', quals=[], storage=[] (at pp.c:8766)
          TypeDecl: declname='arg_0x1026e8aa8', quals=[] (at pp.c:8766)
            IdentifierType: names=['uart_id_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__PacketInfo__offset', quals=[] (at pp.c:8764)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialDispatcherP__0__PacketInfo__dataLinkLength', quals=[], storage=['static'] (at pp.c:8768)
    FuncDecl: quals=None (at pp.c:8768)
      ParamList:  (at pp.c:8770)
        Decl: name='arg_0x1026e8aa8', quals=[], storage=[] (at pp.c:8770)
          TypeDecl: declname='arg_0x1026e8aa8', quals=[] (at pp.c:8770)
            IdentifierType: names=['uart_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8772)
          PtrDecl: quals=[] (at pp.c:8772)
            TypeDecl: declname='msg', quals=[] (at pp.c:8772)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='upperLen', quals=[], storage=[] (at pp.c:8772)
          TypeDecl: declname='upperLen', quals=[] (at pp.c:8772)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__PacketInfo__dataLinkLength', quals=[] (at pp.c:8768)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialDispatcherP__0__SendBytePacket__completeSend', quals=[], storage=['static'] (at pp.c:8774)
    FuncDecl: quals=None (at pp.c:8774)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__SendBytePacket__completeSend', quals=[] (at pp.c:8774)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialDispatcherP__0__SendBytePacket__startSend', quals=[], storage=['static'] (at pp.c:8776)
    FuncDecl: quals=None (at pp.c:8776)
      ParamList:  (at pp.c:8776)
        Decl: name='first_byte', quals=[], storage=[] (at pp.c:8776)
          TypeDecl: declname='first_byte', quals=[] (at pp.c:8776)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__SendBytePacket__startSend', quals=[] (at pp.c:8776)
        IdentifierType: names=['error_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:8778)
    Enum: name='SerialDispatcherP__0____nesc_unnamed4369' (at pp.c:8778)
      EnumeratorList:  (at pp.c:8780)
        Enumerator: name='SerialDispatcherP__0__signalSendDone' (at pp.c:8780)
          Constant: type='int', value='18U' (at pp.c:8780)
  Typedef: name='SerialDispatcherP__0____nesc_sillytask_signalSendDone', quals=[], storage=['typedef'] (at pp.c:8783)
    ArrayDecl:  (at pp.c:8783)
      TypeDecl: declname='SerialDispatcherP__0____nesc_sillytask_signalSendDone', quals=[] (at pp.c:8783)
        IdentifierType: names=['int'] (at None)
      ID: name='SerialDispatcherP__0__signalSendDone' (at pp.c:8783)
  Decl: name=None, quals=[], storage=[] (at pp.c:8785)
    Enum: name='SerialDispatcherP__0____nesc_unnamed4370' (at pp.c:8785)
      EnumeratorList:  (at pp.c:8787)
        Enumerator: name='SerialDispatcherP__0__receiveTask' (at pp.c:8787)
          Constant: type='int', value='19U' (at pp.c:8787)
  Typedef: name='SerialDispatcherP__0____nesc_sillytask_receiveTask', quals=[], storage=['typedef'] (at pp.c:8790)
    ArrayDecl:  (at pp.c:8790)
      TypeDecl: declname='SerialDispatcherP__0____nesc_sillytask_receiveTask', quals=[] (at pp.c:8790)
        IdentifierType: names=['int'] (at None)
      ID: name='SerialDispatcherP__0__receiveTask' (at pp.c:8790)
  Typedef: name='SerialDispatcherP__0__send_state_t', quals=[], storage=['typedef'] (at pp.c:8797)
    TypeDecl: declname='SerialDispatcherP__0__send_state_t', quals=[] (at pp.c:8797)
      Enum: name='SerialDispatcherP__0____nesc_unnamed4371' (at pp.c:8793)
        EnumeratorList:  (at pp.c:8794)
          Enumerator: name='SerialDispatcherP__0__SEND_STATE_IDLE' (at pp.c:8794)
            Constant: type='int', value='0' (at pp.c:8794)
          Enumerator: name='SerialDispatcherP__0__SEND_STATE_BEGIN' (at pp.c:8795)
            Constant: type='int', value='1' (at pp.c:8795)
          Enumerator: name='SerialDispatcherP__0__SEND_STATE_DATA' (at pp.c:8796)
            Constant: type='int', value='2' (at pp.c:8796)
  Decl: name=None, quals=[], storage=[] (at pp.c:8799)
    Enum: name='SerialDispatcherP__0____nesc_unnamed4372' (at pp.c:8799)
      EnumeratorList:  (at pp.c:8800)
        Enumerator: name='SerialDispatcherP__0__RECV_STATE_IDLE' (at pp.c:8800)
          Constant: type='int', value='0' (at pp.c:8800)
        Enumerator: name='SerialDispatcherP__0__RECV_STATE_BEGIN' (at pp.c:8801)
          Constant: type='int', value='1' (at pp.c:8801)
        Enumerator: name='SerialDispatcherP__0__RECV_STATE_DATA' (at pp.c:8802)
          Constant: type='int', value='2' (at pp.c:8802)
  Typedef: name='SerialDispatcherP__0__recv_state_t', quals=[], storage=['typedef'] (at pp.c:8816)
    TypeDecl: declname='SerialDispatcherP__0__recv_state_t', quals=[] (at pp.c:8816)
      Struct: name='SerialDispatcherP__0____nesc_unnamed4373', packed=False (at pp.c:8811)
        Decl: name='which', quals=[], storage=[] (at 0)
          TypeDecl: declname='which', quals=[] (at pp.c:8812)
            IdentifierType: names=['uint8_t'] (at None)
          Constant: type='int', value='1' (at pp.c:8812)
        Decl: name='bufZeroLocked', quals=[], storage=[] (at 0)
          TypeDecl: declname='bufZeroLocked', quals=[] (at pp.c:8813)
            IdentifierType: names=['uint8_t'] (at None)
          Constant: type='int', value='1' (at pp.c:8813)
        Decl: name='bufOneLocked', quals=[], storage=[] (at 0)
          TypeDecl: declname='bufOneLocked', quals=[] (at pp.c:8814)
            IdentifierType: names=['uint8_t'] (at None)
          Constant: type='int', value='1' (at pp.c:8814)
        Decl: name='state', quals=[], storage=[] (at 0)
          TypeDecl: declname='state', quals=[] (at pp.c:8815)
            IdentifierType: names=['uint8_t'] (at None)
          Constant: type='int', value='2' (at pp.c:8815)
  Decl: name='SerialDispatcherP__0__receiveState', quals=[], storage=[] (at pp.c:8820)
    TypeDecl: declname='SerialDispatcherP__0__receiveState', quals=[] (at pp.c:8820)
      IdentifierType: names=['SerialDispatcherP__0__recv_state_t'] (at None)
    ExprList:  (at pp.c:8820)
      Constant: type='int', value='0' (at pp.c:8820)
      Constant: type='int', value='0' (at pp.c:8820)
      Constant: type='int', value='0' (at pp.c:8820)
      ID: name='SerialDispatcherP__0__RECV_STATE_IDLE' (at pp.c:8820)
  Decl: name='SerialDispatcherP__0__recvType', quals=[], storage=[] (at pp.c:8821)
    TypeDecl: declname='SerialDispatcherP__0__recvType', quals=[] (at pp.c:8821)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='TOS_SERIAL_UNKNOWN_ID' (at pp.c:8821)
  Decl: name='SerialDispatcherP__0__recvIndex', quals=[], storage=[] (at pp.c:8822)
    TypeDecl: declname='SerialDispatcherP__0__recvIndex', quals=[] (at pp.c:8822)
      IdentifierType: names=['uint8_t'] (at None)
    Constant: type='int', value='0' (at pp.c:8822)
  Decl: name='SerialDispatcherP__0__messages', quals=[], storage=[] (at pp.c:8825)
    ArrayDecl:  (at pp.c:8825)
      TypeDecl: declname='SerialDispatcherP__0__messages', quals=[] (at pp.c:8825)
        IdentifierType: names=['message_t'] (at None)
      Constant: type='int', value='2' (at pp.c:8825)
  Decl: name='SerialDispatcherP__0__messagePtrs', quals=[], storage=[] (at pp.c:8826)
    ArrayDecl:  (at pp.c:8826)
      PtrDecl: quals=[] (at pp.c:8826)
        TypeDecl: declname='SerialDispatcherP__0__messagePtrs', quals=[] (at pp.c:8826)
          IdentifierType: names=['message_t'] (at None)
      Constant: type='int', value='2' (at pp.c:8826)
    ExprList:  (at pp.c:8826)
      UnaryOp: op='&' (at pp.c:8826)
        ArrayRef:  (at pp.c:8826)
          ID: name='SerialDispatcherP__0__messages' (at pp.c:8826)
          Constant: type='int', value='0' (at pp.c:8826)
      UnaryOp: op='&' (at pp.c:8826)
        ArrayRef:  (at pp.c:8826)
          ID: name='SerialDispatcherP__0__messages' (at pp.c:8826)
          Constant: type='int', value='1' (at pp.c:8826)
  Decl: name='SerialDispatcherP__0__receiveBuffer', quals=[], storage=[] (at pp.c:8831)
    PtrDecl: quals=[] (at pp.c:8831)
      TypeDecl: declname='SerialDispatcherP__0__receiveBuffer', quals=[] (at pp.c:8831)
        IdentifierType: names=['uint8_t'] (at None)
    Cast:  (at None)
      Typename: quals=[] (at None)
        PtrDecl: quals=[] (at pp.c:8831)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['uint8_t'] (at None)
      UnaryOp: op='&' (at pp.c:8831)
        ArrayRef:  (at pp.c:8831)
          ID: name='SerialDispatcherP__0__messages' (at pp.c:8831)
          Constant: type='int', value='0' (at pp.c:8831)
  Decl: name='SerialDispatcherP__0__sendBuffer', quals=[], storage=[] (at pp.c:8833)
    PtrDecl: quals=[] (at pp.c:8833)
      TypeDecl: declname='SerialDispatcherP__0__sendBuffer', quals=[] (at pp.c:8833)
        IdentifierType: names=['uint8_t'] (at None)
    Cast:  (at None)
      Typename: quals=[] (at None)
        PtrDecl: quals=[] (at pp.c:8833)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      Constant: type='int', value='0' (at pp.c:8833)
  Decl: name='SerialDispatcherP__0__sendState', quals=[], storage=[] (at pp.c:8834)
    TypeDecl: declname='SerialDispatcherP__0__sendState', quals=[] (at pp.c:8834)
      IdentifierType: names=['SerialDispatcherP__0__send_state_t'] (at None)
    ID: name='SerialDispatcherP__0__SEND_STATE_IDLE' (at pp.c:8834)
  Decl: name='SerialDispatcherP__0__sendLen', quals=[], storage=[] (at pp.c:8835)
    TypeDecl: declname='SerialDispatcherP__0__sendLen', quals=[] (at pp.c:8835)
      IdentifierType: names=['uint8_t'] (at None)
    Constant: type='int', value='0' (at pp.c:8835)
  Decl: name='SerialDispatcherP__0__sendIndex', quals=[], storage=[] (at pp.c:8836)
    TypeDecl: declname='SerialDispatcherP__0__sendIndex', quals=[] (at pp.c:8836)
      IdentifierType: names=['uint8_t'] (at None)
    Constant: type='int', value='0' (at pp.c:8836)
  Decl: name='SerialDispatcherP__0__sendError', quals=[], storage=[] (at pp.c:8837)
    TypeDecl: declname='SerialDispatcherP__0__sendError', quals=[] (at pp.c:8837)
      IdentifierType: names=['error_t'] (at None)
    ID: name='SUCCESS' (at pp.c:8837)
  Decl: name='SerialDispatcherP__0__sendCancelled', quals=[], storage=[] (at pp.c:8838)
    TypeDecl: declname='SerialDispatcherP__0__sendCancelled', quals=[] (at pp.c:8838)
      IdentifierType: names=['bool'] (at None)
    ID: name='FALSE' (at pp.c:8838)
  Decl: name='SerialDispatcherP__0__sendId', quals=[], storage=[] (at pp.c:8839)
    TypeDecl: declname='SerialDispatcherP__0__sendId', quals=[] (at pp.c:8839)
      IdentifierType: names=['uint8_t'] (at None)
    Constant: type='int', value='0' (at pp.c:8839)
  Decl: name='SerialDispatcherP__0__receiveTaskPending', quals=[], storage=[] (at pp.c:8842)
    TypeDecl: declname='SerialDispatcherP__0__receiveTaskPending', quals=[] (at pp.c:8842)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='FALSE' (at pp.c:8842)
  Decl: name='SerialDispatcherP__0__receiveTaskType', quals=[], storage=[] (at pp.c:8843)
    TypeDecl: declname='SerialDispatcherP__0__receiveTaskType', quals=[] (at pp.c:8843)
      IdentifierType: names=['uart_id_t'] (at None)
    Constant: type='int', value='0' (at pp.c:8843)
  Decl: name='SerialDispatcherP__0__receiveTaskWhich', quals=[], storage=[] (at pp.c:8844)
    TypeDecl: declname='SerialDispatcherP__0__receiveTaskWhich', quals=[] (at pp.c:8844)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialDispatcherP__0__receiveTaskBuf', quals=[], storage=[] (at pp.c:8845)
    PtrDecl: quals=[] (at pp.c:8845)
      TypeDecl: declname='SerialDispatcherP__0__receiveTaskBuf', quals=[] (at pp.c:8845)
        IdentifierType: names=['message_t'] (at None)
    Cast:  (at None)
      Typename: quals=[] (at None)
        PtrDecl: quals=[] (at pp.c:8845)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      Constant: type='int', value='0' (at pp.c:8845)
  Decl: name='SerialDispatcherP__0__receiveTaskSize', quals=[], storage=[] (at pp.c:8846)
    TypeDecl: declname='SerialDispatcherP__0__receiveTaskSize', quals=[] (at pp.c:8846)
      IdentifierType: names=['uint8_t'] (at None)
    Constant: type='int', value='0' (at pp.c:8846)
  Decl: name='SerialDispatcherP__0__Send__send', quals=[], storage=['inline', 'static'] (at pp.c:8848)
    FuncDecl: quals=None (at pp.c:8848)
      ParamList:  (at pp.c:8848)
        Decl: name='id', quals=[], storage=[] (at pp.c:8848)
          TypeDecl: declname='id', quals=[] (at pp.c:8848)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8848)
          PtrDecl: quals=[] (at pp.c:8848)
            TypeDecl: declname='msg', quals=[] (at pp.c:8848)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8848)
          TypeDecl: declname='len', quals=[] (at pp.c:8848)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__Send__send', quals=[] (at pp.c:8848)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialDispatcherP__0__signalSendDone__runTask', quals=[], storage=['inline', 'static'] (at pp.c:8850)
    FuncDecl: quals=None (at pp.c:8850)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__signalSendDone__runTask', quals=[] (at pp.c:8850)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialDispatcherP__0__SendBytePacket__nextByte', quals=[], storage=['inline', 'static'] (at pp.c:8852)
    FuncDecl: quals=None (at pp.c:8852)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__SendBytePacket__nextByte', quals=[] (at pp.c:8852)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialDispatcherP__0__SendBytePacket__sendCompleted', quals=[], storage=['inline', 'static'] (at pp.c:8854)
    FuncDecl: quals=None (at pp.c:8854)
      ParamList:  (at pp.c:8854)
        Decl: name='error', quals=[], storage=[] (at pp.c:8854)
          TypeDecl: declname='error', quals=[] (at pp.c:8854)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__SendBytePacket__sendCompleted', quals=[] (at pp.c:8854)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialDispatcherP__0__isCurrentBufferLocked', quals=[], storage=['inline', 'static'] (at pp.c:8859)
    FuncDecl: quals=None (at pp.c:8859)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__isCurrentBufferLocked', quals=[] (at pp.c:8859)
        IdentifierType: names=['bool'] (at None)
  Decl: name='SerialDispatcherP__0__lockCurrentBuffer', quals=[], storage=['inline', 'static'] (at pp.c:8863)
    FuncDecl: quals=None (at pp.c:8863)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__lockCurrentBuffer', quals=[] (at pp.c:8863)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialDispatcherP__0__unlockBuffer', quals=[], storage=['inline', 'static'] (at pp.c:8872)
    FuncDecl: quals=None (at pp.c:8872)
      ParamList:  (at pp.c:8872)
        Decl: name='which', quals=[], storage=[] (at pp.c:8872)
          TypeDecl: declname='which', quals=[] (at pp.c:8872)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__unlockBuffer', quals=[] (at pp.c:8872)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialDispatcherP__0__receiveBufferSwap', quals=[], storage=['inline', 'static'] (at pp.c:8881)
    FuncDecl: quals=None (at pp.c:8881)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__receiveBufferSwap', quals=[] (at pp.c:8881)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialDispatcherP__0__ReceiveBytePacket__startPacket', quals=[], storage=['inline', 'static'] (at pp.c:8886)
    FuncDecl: quals=None (at pp.c:8886)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__ReceiveBytePacket__startPacket', quals=[] (at pp.c:8886)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SerialDispatcherP__0__ReceiveBytePacket__byteReceived', quals=[], storage=['inline', 'static'] (at pp.c:8888)
    FuncDecl: quals=None (at pp.c:8888)
      ParamList:  (at pp.c:8888)
        Decl: name='b', quals=[], storage=[] (at pp.c:8888)
          TypeDecl: declname='b', quals=[] (at pp.c:8888)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__ReceiveBytePacket__byteReceived', quals=[] (at pp.c:8888)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialDispatcherP__0__receiveTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:8890)
    FuncDecl: quals=None (at pp.c:8890)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__receiveTask__runTask', quals=[] (at pp.c:8890)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialDispatcherP__0__ReceiveBytePacket__endPacket', quals=[], storage=['static'] (at pp.c:8892)
    FuncDecl: quals=None (at pp.c:8892)
      ParamList:  (at pp.c:8892)
        Decl: name='result', quals=[], storage=[] (at pp.c:8892)
          TypeDecl: declname='result', quals=[] (at pp.c:8892)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__ReceiveBytePacket__endPacket', quals=[] (at pp.c:8892)
        IdentifierType: names=['void'] (at None)
  Decl: name='SerialDispatcherP__0__PacketInfo__default__offset', quals=[], storage=['inline', 'static'] (at pp.c:8894)
    FuncDecl: quals=None (at pp.c:8894)
      ParamList:  (at pp.c:8894)
        Decl: name='id', quals=[], storage=[] (at pp.c:8894)
          TypeDecl: declname='id', quals=[] (at pp.c:8894)
            IdentifierType: names=['uart_id_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__PacketInfo__default__offset', quals=[] (at pp.c:8894)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialDispatcherP__0__PacketInfo__default__dataLinkLength', quals=[], storage=['inline', 'static'] (at pp.c:8897)
    FuncDecl: quals=None (at pp.c:8897)
      ParamList:  (at pp.c:8897)
        Decl: name='id', quals=[], storage=[] (at pp.c:8897)
          TypeDecl: declname='id', quals=[] (at pp.c:8897)
            IdentifierType: names=['uart_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8897)
          PtrDecl: quals=[] (at pp.c:8897)
            TypeDecl: declname='msg', quals=[] (at pp.c:8897)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='upperLen', quals=[], storage=[] (at pp.c:8898)
          TypeDecl: declname='upperLen', quals=[] (at pp.c:8898)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__PacketInfo__default__dataLinkLength', quals=[] (at pp.c:8897)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialDispatcherP__0__PacketInfo__default__upperLength', quals=[], storage=['inline', 'static'] (at pp.c:8901)
    FuncDecl: quals=None (at pp.c:8901)
      ParamList:  (at pp.c:8901)
        Decl: name='id', quals=[], storage=[] (at pp.c:8901)
          TypeDecl: declname='id', quals=[] (at pp.c:8901)
            IdentifierType: names=['uart_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8901)
          PtrDecl: quals=[] (at pp.c:8901)
            TypeDecl: declname='msg', quals=[] (at pp.c:8901)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='dataLinkLen', quals=[], storage=[] (at pp.c:8902)
          TypeDecl: declname='dataLinkLen', quals=[] (at pp.c:8902)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__PacketInfo__default__upperLength', quals=[] (at pp.c:8901)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialDispatcherP__0__Receive__default__receive', quals=[], storage=['inline', 'static'] (at pp.c:8907)
    FuncDecl: quals=None (at pp.c:8907)
      ParamList:  (at pp.c:8907)
        Decl: name='idxxx', quals=[], storage=[] (at pp.c:8907)
          TypeDecl: declname='idxxx', quals=[] (at pp.c:8907)
            IdentifierType: names=['uart_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8907)
          PtrDecl: quals=[] (at pp.c:8907)
            TypeDecl: declname='msg', quals=[] (at pp.c:8907)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:8908)
          PtrDecl: quals=[] (at pp.c:8908)
            TypeDecl: declname='payload', quals=[] (at pp.c:8908)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8909)
          TypeDecl: declname='len', quals=[] (at pp.c:8909)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8907)
        TypeDecl: declname='SerialDispatcherP__0__Receive__default__receive', quals=[] (at pp.c:8907)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='SerialDispatcherP__0__Send__default__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:8912)
    FuncDecl: quals=None (at pp.c:8912)
      ParamList:  (at pp.c:8912)
        Decl: name='idxxx', quals=[], storage=[] (at pp.c:8912)
          TypeDecl: declname='idxxx', quals=[] (at pp.c:8912)
            IdentifierType: names=['uart_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8912)
          PtrDecl: quals=[] (at pp.c:8912)
            TypeDecl: declname='msg', quals=[] (at pp.c:8912)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:8912)
          TypeDecl: declname='error', quals=[] (at pp.c:8912)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='SerialDispatcherP__0__Send__default__sendDone', quals=[] (at pp.c:8912)
        IdentifierType: names=['void'] (at None)
  Decl: name='HdlcTranslateC__UartStream__send', quals=[], storage=['static'] (at pp.c:8914)
    FuncDecl: quals=None (at pp.c:8914)
      ParamList:  (at pp.c:8916)
        Decl: name='buf', quals=[], storage=[] (at pp.c:8916)
          PtrDecl: quals=[] (at pp.c:8916)
            TypeDecl: declname='buf', quals=[] (at pp.c:8916)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8920)
          TypeDecl: declname='len', quals=[] (at pp.c:8920)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='HdlcTranslateC__UartStream__send', quals=[] (at pp.c:8914)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='HdlcTranslateC__SerialFrameComm__dataReceived', quals=[], storage=['static'] (at pp.c:8922)
    FuncDecl: quals=None (at pp.c:8922)
      ParamList:  (at pp.c:8922)
        Decl: name='data', quals=[], storage=[] (at pp.c:8922)
          TypeDecl: declname='data', quals=[] (at pp.c:8922)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HdlcTranslateC__SerialFrameComm__dataReceived', quals=[] (at pp.c:8922)
        IdentifierType: names=['void'] (at None)
  Decl: name='HdlcTranslateC__SerialFrameComm__putDone', quals=[], storage=['static'] (at pp.c:8928)
    FuncDecl: quals=None (at pp.c:8928)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HdlcTranslateC__SerialFrameComm__putDone', quals=[] (at pp.c:8928)
        IdentifierType: names=['void'] (at None)
  Decl: name='HdlcTranslateC__SerialFrameComm__delimiterReceived', quals=[], storage=['static'] (at pp.c:8930)
    FuncDecl: quals=None (at pp.c:8930)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HdlcTranslateC__SerialFrameComm__delimiterReceived', quals=[] (at pp.c:8930)
        IdentifierType: names=['void'] (at None)
  Typedef: name='HdlcTranslateC__HdlcState', quals=[], storage=['typedef'] (at pp.c:8936)
    TypeDecl: declname='HdlcTranslateC__HdlcState', quals=[] (at pp.c:8936)
      Struct: name='HdlcTranslateC____nesc_unnamed4374', packed=False (at pp.c:8933)
        Decl: name='sendEscape', quals=[], storage=[] (at 0)
          TypeDecl: declname='sendEscape', quals=[] (at pp.c:8934)
            IdentifierType: names=['uint8_t'] (at None)
          Constant: type='int', value='1' (at pp.c:8934)
        Decl: name='receiveEscape', quals=[], storage=[] (at 0)
          TypeDecl: declname='receiveEscape', quals=[] (at pp.c:8935)
            IdentifierType: names=['uint8_t'] (at None)
          Constant: type='int', value='1' (at pp.c:8935)
  Decl: name='HdlcTranslateC__state', quals=[], storage=[] (at pp.c:8939)
    TypeDecl: declname='HdlcTranslateC__state', quals=[] (at pp.c:8939)
      IdentifierType: names=['HdlcTranslateC__HdlcState'] (at None)
    ExprList:  (at pp.c:8939)
      Constant: type='int', value='0' (at pp.c:8939)
      Constant: type='int', value='0' (at pp.c:8939)
  Decl: name='HdlcTranslateC__txTemp', quals=[], storage=[] (at pp.c:8940)
    TypeDecl: declname='HdlcTranslateC__txTemp', quals=[] (at pp.c:8940)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HdlcTranslateC__m_data', quals=[], storage=[] (at pp.c:8941)
    TypeDecl: declname='HdlcTranslateC__m_data', quals=[] (at pp.c:8941)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HdlcTranslateC__SerialFrameComm__resetReceive', quals=[], storage=['inline', 'static'] (at pp.c:8944)
    FuncDecl: quals=None (at pp.c:8944)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HdlcTranslateC__SerialFrameComm__resetReceive', quals=[] (at pp.c:8944)
        IdentifierType: names=['void'] (at None)
  Decl: name='HdlcTranslateC__UartStream__receivedByte', quals=[], storage=['inline', 'static'] (at pp.c:8950)
    FuncDecl: quals=None (at pp.c:8950)
      ParamList:  (at pp.c:8950)
        Decl: name='data', quals=[], storage=[] (at pp.c:8950)
          TypeDecl: declname='data', quals=[] (at pp.c:8950)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HdlcTranslateC__UartStream__receivedByte', quals=[] (at pp.c:8950)
        IdentifierType: names=['void'] (at None)
  Decl: name='HdlcTranslateC__SerialFrameComm__putDelimiter', quals=[], storage=['static'] (at pp.c:8952)
    FuncDecl: quals=None (at pp.c:8952)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HdlcTranslateC__SerialFrameComm__putDelimiter', quals=[] (at pp.c:8952)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='HdlcTranslateC__SerialFrameComm__putData', quals=[], storage=['static'] (at pp.c:8960)
    FuncDecl: quals=None (at pp.c:8960)
      ParamList:  (at pp.c:8960)
        Decl: name='data', quals=[], storage=[] (at pp.c:8960)
          TypeDecl: declname='data', quals=[] (at pp.c:8960)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HdlcTranslateC__SerialFrameComm__putData', quals=[] (at pp.c:8960)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='HdlcTranslateC__UartStream__sendDone', quals=[], storage=['static'] (at pp.c:8962)
    FuncDecl: quals=None (at pp.c:8962)
      ParamList:  (at pp.c:8962)
        Decl: name='buf', quals=[], storage=[] (at pp.c:8962)
          PtrDecl: quals=[] (at pp.c:8962)
            TypeDecl: declname='buf', quals=[] (at pp.c:8962)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8962)
          TypeDecl: declname='len', quals=[] (at pp.c:8962)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:8963)
          TypeDecl: declname='error', quals=[] (at pp.c:8963)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='HdlcTranslateC__UartStream__sendDone', quals=[] (at pp.c:8962)
        IdentifierType: names=['void'] (at None)
  Decl: name='HdlcTranslateC__UartStream__receiveDone', quals=[], storage=['inline', 'static'] (at pp.c:8965)
    FuncDecl: quals=None (at pp.c:8965)
      ParamList:  (at pp.c:8965)
        Decl: name='buf', quals=[], storage=[] (at pp.c:8965)
          PtrDecl: quals=[] (at pp.c:8965)
            TypeDecl: declname='buf', quals=[] (at pp.c:8965)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8965)
          TypeDecl: declname='len', quals=[] (at pp.c:8965)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:8965)
          TypeDecl: declname='error', quals=[] (at pp.c:8965)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='HdlcTranslateC__UartStream__receiveDone', quals=[] (at pp.c:8965)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__Msp430UartConfigure__getConfig', quals=[], storage=['static'] (at pp.c:8967)
    FuncDecl: quals=None (at pp.c:8967)
      ParamList:  (at pp.c:8969)
        Decl: name='arg_0x1027d8cd0', quals=[], storage=[] (at pp.c:8969)
          TypeDecl: declname='arg_0x1027d8cd0', quals=[] (at pp.c:8969)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8967)
        TypeDecl: declname='Msp430UartP__0__Msp430UartConfigure__getConfig', quals=[] (at pp.c:8967)
          IdentifierType: names=['msp430_uart_union_config_t'] (at None)
  Decl: name='Msp430UartP__0__Usart__resetUsart', quals=[], storage=['static'] (at pp.c:8971)
    FuncDecl: quals=None (at pp.c:8971)
      ParamList:  (at pp.c:8971)
        Decl: name='reset', quals=[], storage=[] (at pp.c:8971)
          TypeDecl: declname='reset', quals=[] (at pp.c:8971)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='Msp430UartP__0__Usart__resetUsart', quals=[] (at pp.c:8971)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__Usart__disableIntr', quals=[], storage=['static'] (at pp.c:8973)
    FuncDecl: quals=None (at pp.c:8973)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430UartP__0__Usart__disableIntr', quals=[] (at pp.c:8973)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__Usart__enableIntr', quals=[], storage=['static'] (at pp.c:8976)
    FuncDecl: quals=None (at pp.c:8976)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430UartP__0__Usart__enableIntr', quals=[] (at pp.c:8976)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__Usart__tx', quals=[], storage=['static'] (at pp.c:8978)
    FuncDecl: quals=None (at pp.c:8978)
      ParamList:  (at pp.c:8978)
        Decl: name='data', quals=[], storage=[] (at pp.c:8978)
          TypeDecl: declname='data', quals=[] (at pp.c:8978)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__Usart__tx', quals=[] (at pp.c:8978)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__Usart__disableUart', quals=[], storage=['static'] (at pp.c:8980)
    FuncDecl: quals=None (at pp.c:8980)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430UartP__0__Usart__disableUart', quals=[] (at pp.c:8980)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__Usart__setModeUart', quals=[], storage=['static'] (at pp.c:8982)
    FuncDecl: quals=None (at pp.c:8982)
      ParamList:  (at pp.c:8982)
        Decl: name='config', quals=[], storage=[] (at pp.c:8982)
          PtrDecl: quals=[] (at pp.c:8982)
            TypeDecl: declname='config', quals=[] (at pp.c:8982)
              IdentifierType: names=['msp430_uart_union_config_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__Usart__setModeUart', quals=[] (at pp.c:8982)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__UartStream__receivedByte', quals=[], storage=['static'] (at pp.c:8984)
    FuncDecl: quals=None (at pp.c:8984)
      ParamList:  (at pp.c:8986)
        Decl: name='arg_0x1027dc7e0', quals=[], storage=[] (at pp.c:8986)
          TypeDecl: declname='arg_0x1027dc7e0', quals=[] (at pp.c:8986)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='byte', quals=[], storage=[] (at pp.c:8988)
          TypeDecl: declname='byte', quals=[] (at pp.c:8988)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UartStream__receivedByte', quals=[] (at pp.c:8984)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__UartStream__receiveDone', quals=[], storage=['static'] (at pp.c:8990)
    FuncDecl: quals=None (at pp.c:8990)
      ParamList:  (at pp.c:8992)
        Decl: name='arg_0x1027dc7e0', quals=[], storage=[] (at pp.c:8992)
          TypeDecl: declname='arg_0x1027dc7e0', quals=[] (at pp.c:8992)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:8994)
          PtrDecl: quals=[] (at pp.c:8994)
            TypeDecl: declname='buf', quals=[] (at pp.c:8994)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8998)
          TypeDecl: declname='len', quals=[] (at pp.c:8998)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:8998)
          TypeDecl: declname='error', quals=[] (at pp.c:8998)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UartStream__receiveDone', quals=[] (at pp.c:8990)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__UartStream__sendDone', quals=[], storage=['static'] (at pp.c:9000)
    FuncDecl: quals=None (at pp.c:9000)
      ParamList:  (at pp.c:9002)
        Decl: name='arg_0x1027dc7e0', quals=[], storage=[] (at pp.c:9002)
          TypeDecl: declname='arg_0x1027dc7e0', quals=[] (at pp.c:9002)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:9004)
          PtrDecl: quals=[] (at pp.c:9004)
            TypeDecl: declname='buf', quals=[] (at pp.c:9004)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:9008)
          TypeDecl: declname='len', quals=[] (at pp.c:9008)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:9008)
          TypeDecl: declname='error', quals=[] (at pp.c:9008)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UartStream__sendDone', quals=[] (at pp.c:9000)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__UsartResource__release', quals=[], storage=['static'] (at pp.c:9010)
    FuncDecl: quals=None (at pp.c:9010)
      ParamList:  (at pp.c:9012)
        Decl: name='arg_0x1027daa20', quals=[], storage=[] (at pp.c:9012)
          TypeDecl: declname='arg_0x1027daa20', quals=[] (at pp.c:9012)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UsartResource__release', quals=[] (at pp.c:9010)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430UartP__0__UsartResource__immediateRequest', quals=[], storage=['static'] (at pp.c:9014)
    FuncDecl: quals=None (at pp.c:9014)
      ParamList:  (at pp.c:9016)
        Decl: name='arg_0x1027daa20', quals=[], storage=[] (at pp.c:9016)
          TypeDecl: declname='arg_0x1027daa20', quals=[] (at pp.c:9016)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UsartResource__immediateRequest', quals=[] (at pp.c:9014)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430UartP__0__UsartResource__isOwner', quals=[], storage=['static'] (at pp.c:9018)
    FuncDecl: quals=None (at pp.c:9018)
      ParamList:  (at pp.c:9020)
        Decl: name='arg_0x1027daa20', quals=[], storage=[] (at pp.c:9020)
          TypeDecl: declname='arg_0x1027daa20', quals=[] (at pp.c:9020)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UsartResource__isOwner', quals=[] (at pp.c:9018)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430UartP__0__Resource__granted', quals=[], storage=['static'] (at pp.c:9022)
    FuncDecl: quals=None (at pp.c:9022)
      ParamList:  (at pp.c:9024)
        Decl: name='arg_0x1027de710', quals=[], storage=[] (at pp.c:9024)
          TypeDecl: declname='arg_0x1027de710', quals=[] (at pp.c:9024)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__Resource__granted', quals=[] (at pp.c:9022)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__m_tx_len', quals=[], storage=[] (at pp.c:9026)
    TypeDecl: declname='Msp430UartP__0__m_tx_len', quals=[] (at pp.c:9026)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430UartP__0__m_rx_len', quals=[], storage=[] (at pp.c:9028)
    TypeDecl: declname='Msp430UartP__0__m_rx_len', quals=[] (at pp.c:9028)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430UartP__0__m_tx_buf', quals=[], storage=[] (at pp.c:9029)
    PtrDecl: quals=[] (at pp.c:9029)
      TypeDecl: declname='Msp430UartP__0__m_tx_buf', quals=[] (at pp.c:9029)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430UartP__0__m_rx_buf', quals=[], storage=[] (at pp.c:9031)
    PtrDecl: quals=[] (at pp.c:9031)
      TypeDecl: declname='Msp430UartP__0__m_rx_buf', quals=[] (at pp.c:9031)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430UartP__0__m_tx_pos', quals=[], storage=[] (at pp.c:9032)
    TypeDecl: declname='Msp430UartP__0__m_tx_pos', quals=[] (at pp.c:9032)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430UartP__0__m_rx_pos', quals=[], storage=[] (at pp.c:9034)
    TypeDecl: declname='Msp430UartP__0__m_rx_pos', quals=[] (at pp.c:9034)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430UartP__0__m_byte_time', quals=[], storage=[] (at pp.c:9035)
    TypeDecl: declname='Msp430UartP__0__m_byte_time', quals=[] (at pp.c:9035)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430UartP__0__current_owner', quals=[], storage=[] (at pp.c:9036)
    TypeDecl: declname='Msp430UartP__0__current_owner', quals=[] (at pp.c:9036)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430UartP__0__Resource__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:9038)
    FuncDecl: quals=None (at pp.c:9038)
      ParamList:  (at pp.c:9038)
        Decl: name='id', quals=[], storage=[] (at pp.c:9038)
          TypeDecl: declname='id', quals=[] (at pp.c:9038)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__Resource__immediateRequest', quals=[] (at pp.c:9038)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430UartP__0__Resource__release', quals=[], storage=['inline', 'static'] (at pp.c:9040)
    FuncDecl: quals=None (at pp.c:9040)
      ParamList:  (at pp.c:9040)
        Decl: name='id', quals=[], storage=[] (at pp.c:9040)
          TypeDecl: declname='id', quals=[] (at pp.c:9040)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__Resource__release', quals=[] (at pp.c:9040)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430UartP__0__ResourceConfigure__configure', quals=[], storage=['static'] (at pp.c:9048)
    FuncDecl: quals=None (at pp.c:9048)
      ParamList:  (at pp.c:9048)
        Decl: name='id', quals=[], storage=[] (at pp.c:9048)
          TypeDecl: declname='id', quals=[] (at pp.c:9048)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__ResourceConfigure__configure', quals=[] (at pp.c:9048)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__ResourceConfigure__unconfigure', quals=[], storage=['inline', 'static'] (at pp.c:9055)
    FuncDecl: quals=None (at pp.c:9055)
      ParamList:  (at pp.c:9055)
        Decl: name='id', quals=[], storage=[] (at pp.c:9055)
          TypeDecl: declname='id', quals=[] (at pp.c:9055)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__ResourceConfigure__unconfigure', quals=[] (at pp.c:9055)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__UsartResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:9064)
    FuncDecl: quals=None (at pp.c:9064)
      ParamList:  (at pp.c:9064)
        Decl: name='id', quals=[], storage=[] (at pp.c:9064)
          TypeDecl: declname='id', quals=[] (at pp.c:9064)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UsartResource__granted', quals=[] (at pp.c:9064)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__UsartInterrupts__rxDone', quals=[], storage=['inline', 'static'] (at pp.c:9066)
    FuncDecl: quals=None (at pp.c:9066)
      ParamList:  (at pp.c:9066)
        Decl: name='id', quals=[], storage=[] (at pp.c:9066)
          TypeDecl: declname='id', quals=[] (at pp.c:9066)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:9066)
          TypeDecl: declname='data', quals=[] (at pp.c:9066)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UsartInterrupts__rxDone', quals=[] (at pp.c:9066)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__UartStream__send', quals=[], storage=['static'] (at pp.c:9068)
    FuncDecl: quals=None (at pp.c:9068)
      ParamList:  (at pp.c:9068)
        Decl: name='id', quals=[], storage=[] (at pp.c:9068)
          TypeDecl: declname='id', quals=[] (at pp.c:9068)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:9068)
          PtrDecl: quals=[] (at pp.c:9068)
            TypeDecl: declname='buf', quals=[] (at pp.c:9068)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:9068)
          TypeDecl: declname='len', quals=[] (at pp.c:9068)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UartStream__send', quals=[] (at pp.c:9068)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430UartP__0__UsartInterrupts__txDone', quals=[], storage=['inline', 'static'] (at pp.c:9070)
    FuncDecl: quals=None (at pp.c:9070)
      ParamList:  (at pp.c:9070)
        Decl: name='id', quals=[], storage=[] (at pp.c:9070)
          TypeDecl: declname='id', quals=[] (at pp.c:9070)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UsartInterrupts__txDone', quals=[] (at pp.c:9070)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9072)
    FuncDecl: quals=None (at pp.c:9072)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430UartP__0__Counter__overflow', quals=[] (at pp.c:9072)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__UsartResource__default__isOwner', quals=[], storage=['inline', 'static'] (at pp.c:9074)
    FuncDecl: quals=None (at pp.c:9074)
      ParamList:  (at pp.c:9074)
        Decl: name='id', quals=[], storage=[] (at pp.c:9074)
          TypeDecl: declname='id', quals=[] (at pp.c:9074)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UsartResource__default__isOwner', quals=[] (at pp.c:9074)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430UartP__0__UsartResource__default__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:9076)
    FuncDecl: quals=None (at pp.c:9076)
      ParamList:  (at pp.c:9076)
        Decl: name='id', quals=[], storage=[] (at pp.c:9076)
          TypeDecl: declname='id', quals=[] (at pp.c:9076)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UsartResource__default__immediateRequest', quals=[] (at pp.c:9076)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430UartP__0__UsartResource__default__release', quals=[], storage=['inline', 'static'] (at pp.c:9077)
    FuncDecl: quals=None (at pp.c:9077)
      ParamList:  (at pp.c:9077)
        Decl: name='id', quals=[], storage=[] (at pp.c:9077)
          TypeDecl: declname='id', quals=[] (at pp.c:9077)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UsartResource__default__release', quals=[] (at pp.c:9077)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430UartP__0__Msp430UartConfigure__default__getConfig', quals=[], storage=['inline', 'static'] (at pp.c:9078)
    FuncDecl: quals=None (at pp.c:9078)
      ParamList:  (at pp.c:9078)
        Decl: name='id', quals=[], storage=[] (at pp.c:9078)
          TypeDecl: declname='id', quals=[] (at pp.c:9078)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:9078)
        TypeDecl: declname='Msp430UartP__0__Msp430UartConfigure__default__getConfig', quals=[] (at pp.c:9078)
          IdentifierType: names=['msp430_uart_union_config_t'] (at None)
  Decl: name='Msp430UartP__0__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:9082)
    FuncDecl: quals=None (at pp.c:9082)
      ParamList:  (at pp.c:9082)
        Decl: name='id', quals=[], storage=[] (at pp.c:9082)
          TypeDecl: declname='id', quals=[] (at pp.c:9082)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__Resource__default__granted', quals=[] (at pp.c:9082)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__UartStream__default__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:9084)
    FuncDecl: quals=None (at pp.c:9084)
      ParamList:  (at pp.c:9084)
        Decl: name='id', quals=[], storage=[] (at pp.c:9084)
          TypeDecl: declname='id', quals=[] (at pp.c:9084)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:9084)
          PtrDecl: quals=[] (at pp.c:9084)
            TypeDecl: declname='buf', quals=[] (at pp.c:9084)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:9084)
          TypeDecl: declname='len', quals=[] (at pp.c:9084)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:9084)
          TypeDecl: declname='error', quals=[] (at pp.c:9084)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UartStream__default__sendDone', quals=[] (at pp.c:9084)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__UartStream__default__receivedByte', quals=[], storage=['inline', 'static'] (at pp.c:9085)
    FuncDecl: quals=None (at pp.c:9085)
      ParamList:  (at pp.c:9085)
        Decl: name='id', quals=[], storage=[] (at pp.c:9085)
          TypeDecl: declname='id', quals=[] (at pp.c:9085)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='byte', quals=[], storage=[] (at pp.c:9085)
          TypeDecl: declname='byte', quals=[] (at pp.c:9085)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UartStream__default__receivedByte', quals=[] (at pp.c:9085)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UartP__0__UartStream__default__receiveDone', quals=[], storage=['inline', 'static'] (at pp.c:9086)
    FuncDecl: quals=None (at pp.c:9086)
      ParamList:  (at pp.c:9086)
        Decl: name='id', quals=[], storage=[] (at pp.c:9086)
          TypeDecl: declname='id', quals=[] (at pp.c:9086)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:9086)
          PtrDecl: quals=[] (at pp.c:9086)
            TypeDecl: declname='buf', quals=[] (at pp.c:9086)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:9086)
          TypeDecl: declname='len', quals=[] (at pp.c:9086)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:9086)
          TypeDecl: declname='error', quals=[] (at pp.c:9086)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430UartP__0__UartStream__default__receiveDone', quals=[] (at pp.c:9086)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__UCLK__selectIOFunc', quals=[], storage=['static'] (at pp.c:9088)
    FuncDecl: quals=None (at pp.c:9088)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__UCLK__selectIOFunc', quals=[] (at pp.c:9088)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Interrupts__rxDone', quals=[], storage=['static'] (at pp.c:9090)
    FuncDecl: quals=None (at pp.c:9090)
      ParamList:  (at pp.c:9090)
        Decl: name='data', quals=[], storage=[] (at pp.c:9090)
          TypeDecl: declname='data', quals=[] (at pp.c:9090)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Interrupts__rxDone', quals=[] (at pp.c:9090)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Interrupts__txDone', quals=[], storage=['static'] (at pp.c:9092)
    FuncDecl: quals=None (at pp.c:9092)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Interrupts__txDone', quals=[] (at pp.c:9092)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__URXD__selectIOFunc', quals=[], storage=['static'] (at pp.c:9094)
    FuncDecl: quals=None (at pp.c:9094)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__URXD__selectIOFunc', quals=[] (at pp.c:9094)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__URXD__selectModuleFunc', quals=[], storage=['static'] (at pp.c:9096)
    FuncDecl: quals=None (at pp.c:9096)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__URXD__selectModuleFunc', quals=[] (at pp.c:9096)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__UTXD__selectIOFunc', quals=[], storage=['static'] (at pp.c:9103)
    FuncDecl: quals=None (at pp.c:9103)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__UTXD__selectIOFunc', quals=[] (at pp.c:9103)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__UTXD__selectModuleFunc', quals=[], storage=['static'] (at pp.c:9105)
    FuncDecl: quals=None (at pp.c:9105)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__UTXD__selectModuleFunc', quals=[] (at pp.c:9105)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__SOMI__selectIOFunc', quals=[], storage=['static'] (at pp.c:9112)
    FuncDecl: quals=None (at pp.c:9112)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__SOMI__selectIOFunc', quals=[] (at pp.c:9112)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__SIMO__selectIOFunc', quals=[], storage=['static'] (at pp.c:9114)
    FuncDecl: quals=None (at pp.c:9114)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__SIMO__selectIOFunc', quals=[] (at pp.c:9114)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__IE2@"0x0001"', quals=['volatile'], storage=['static'] (at pp.c:9116)
    TypeDecl: declname='HplMsp430Usart1P__IE2@"0x0001"', quals=['volatile'] (at pp.c:9116)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430Usart1P__ME2@"0x0005"', quals=['volatile'], storage=['static'] (at pp.c:9117)
    TypeDecl: declname='HplMsp430Usart1P__ME2@"0x0005"', quals=['volatile'] (at pp.c:9117)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430Usart1P__IFG2@"0x0003"', quals=['volatile'], storage=['static'] (at pp.c:9118)
    TypeDecl: declname='HplMsp430Usart1P__IFG2@"0x0003"', quals=['volatile'] (at pp.c:9118)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430Usart1P__U1TCTL@"0x0079"', quals=['volatile'], storage=['static'] (at pp.c:9119)
    TypeDecl: declname='HplMsp430Usart1P__U1TCTL@"0x0079"', quals=['volatile'] (at pp.c:9119)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430Usart1P__U1RCTL@"0x007A"', quals=['volatile'], storage=['static'] (at pp.c:9120)
    TypeDecl: declname='HplMsp430Usart1P__U1RCTL@"0x007A"', quals=['volatile'] (at pp.c:9120)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430Usart1P__U1TXBUF@"0x007F"', quals=['volatile'], storage=['static'] (at pp.c:9121)
    TypeDecl: declname='HplMsp430Usart1P__U1TXBUF@"0x007F"', quals=['volatile'] (at pp.c:9121)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='sig_UART1RX_VECTOR', quals=[], storage=[] (at pp.c:9125)
    FuncDecl: quals=None (at pp.c:9125)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_UART1RX_VECTOR', quals=[] (at pp.c:9125)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_UART1TX_VECTOR', quals=[], storage=[] (at pp.c:9130)
    FuncDecl: quals=None (at pp.c:9130)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_UART1TX_VECTOR', quals=[] (at pp.c:9130)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__AsyncStdControl__start', quals=[], storage=['inline', 'static'] (at pp.c:9134)
    FuncDecl: quals=None (at pp.c:9134)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__AsyncStdControl__start', quals=[] (at pp.c:9134)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='HplMsp430Usart1P__AsyncStdControl__stop', quals=[], storage=['inline', 'static'] (at pp.c:9138)
    FuncDecl: quals=None (at pp.c:9138)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__AsyncStdControl__stop', quals=[] (at pp.c:9138)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__setUbr', quals=[], storage=['inline', 'static'] (at pp.c:9140)
    FuncDecl: quals=None (at pp.c:9140)
      ParamList:  (at pp.c:9140)
        Decl: name='control', quals=[], storage=[] (at pp.c:9140)
          TypeDecl: declname='control', quals=[] (at pp.c:9140)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__setUbr', quals=[] (at pp.c:9140)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__setUmctl', quals=[], storage=['inline', 'static'] (at pp.c:9151)
    FuncDecl: quals=None (at pp.c:9151)
      ParamList:  (at pp.c:9151)
        Decl: name='control', quals=[], storage=[] (at pp.c:9151)
          TypeDecl: declname='control', quals=[] (at pp.c:9151)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__setUmctl', quals=[] (at pp.c:9151)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__resetUsart', quals=[], storage=['inline', 'static'] (at pp.c:9159)
    FuncDecl: quals=None (at pp.c:9159)
      ParamList:  (at pp.c:9159)
        Decl: name='reset', quals=[], storage=[] (at pp.c:9159)
          TypeDecl: declname='reset', quals=[] (at pp.c:9159)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__resetUsart', quals=[] (at pp.c:9159)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__enableUart', quals=[], storage=['inline', 'static'] (at pp.c:9161)
    FuncDecl: quals=None (at pp.c:9161)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__enableUart', quals=[] (at pp.c:9161)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__disableUart', quals=[], storage=['static'] (at pp.c:9169)
    FuncDecl: quals=None (at pp.c:9169)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__disableUart', quals=[] (at pp.c:9169)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__enableUartTx', quals=[], storage=['inline', 'static'] (at pp.c:9178)
    FuncDecl: quals=None (at pp.c:9178)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__enableUartTx', quals=[] (at pp.c:9178)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__disableUartTx', quals=[], storage=['inline', 'static'] (at pp.c:9183)
    FuncDecl: quals=None (at pp.c:9183)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__disableUartTx', quals=[] (at pp.c:9183)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__enableUartRx', quals=[], storage=['inline', 'static'] (at pp.c:9189)
    FuncDecl: quals=None (at pp.c:9189)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__enableUartRx', quals=[] (at pp.c:9189)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__disableUartRx', quals=[], storage=['inline', 'static'] (at pp.c:9194)
    FuncDecl: quals=None (at pp.c:9194)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__disableUartRx', quals=[] (at pp.c:9194)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__disableSpi', quals=[], storage=['static'] (at pp.c:9196)
    FuncDecl: quals=None (at pp.c:9196)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__disableSpi', quals=[] (at pp.c:9196)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__configUart', quals=[], storage=['inline', 'static'] (at pp.c:9198)
    FuncDecl: quals=None (at pp.c:9198)
      ParamList:  (at pp.c:9198)
        Decl: name='config', quals=[], storage=[] (at pp.c:9198)
          PtrDecl: quals=[] (at pp.c:9198)
            TypeDecl: declname='config', quals=[] (at pp.c:9198)
              IdentifierType: names=['msp430_uart_union_config_t'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__configUart', quals=[] (at pp.c:9198)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__setModeUart', quals=[], storage=['inline', 'static'] (at pp.c:9208)
    FuncDecl: quals=None (at pp.c:9208)
      ParamList:  (at pp.c:9208)
        Decl: name='config', quals=[], storage=[] (at pp.c:9208)
          PtrDecl: quals=[] (at pp.c:9208)
            TypeDecl: declname='config', quals=[] (at pp.c:9208)
              IdentifierType: names=['msp430_uart_union_config_t'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__setModeUart', quals=[] (at pp.c:9208)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__clrIntr', quals=[], storage=['inline', 'static'] (at pp.c:9210)
    FuncDecl: quals=None (at pp.c:9210)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__clrIntr', quals=[] (at pp.c:9210)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__disableIntr', quals=[], storage=['inline', 'static'] (at pp.c:9212)
    FuncDecl: quals=None (at pp.c:9212)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__disableIntr', quals=[] (at pp.c:9212)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__enableIntr', quals=[], storage=['inline', 'static'] (at pp.c:9214)
    FuncDecl: quals=None (at pp.c:9214)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__enableIntr', quals=[] (at pp.c:9214)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart1P__Usart__tx', quals=[], storage=['inline', 'static'] (at pp.c:9221)
    FuncDecl: quals=None (at pp.c:9221)
      ParamList:  (at pp.c:9221)
        Decl: name='data', quals=[], storage=[] (at pp.c:9221)
          TypeDecl: declname='data', quals=[] (at pp.c:9221)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplMsp430Usart1P__Usart__tx', quals=[] (at pp.c:9221)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__1__ArbiterInfo__inUse', quals=[], storage=['static'] (at pp.c:9223)
    FuncDecl: quals=None (at pp.c:9223)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430UsartShareP__1__ArbiterInfo__inUse', quals=[] (at pp.c:9223)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430UsartShareP__1__ArbiterInfo__userId', quals=[], storage=['static'] (at pp.c:9231)
    FuncDecl: quals=None (at pp.c:9231)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430UsartShareP__1__ArbiterInfo__userId', quals=[] (at pp.c:9231)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430UsartShareP__1__Interrupts__rxDone', quals=[], storage=['static'] (at pp.c:9233)
    FuncDecl: quals=None (at pp.c:9233)
      ParamList:  (at pp.c:9235)
        Decl: name='arg_0x101ed5800', quals=[], storage=[] (at pp.c:9235)
          TypeDecl: declname='arg_0x101ed5800', quals=[] (at pp.c:9235)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:9237)
          TypeDecl: declname='data', quals=[] (at pp.c:9237)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__1__Interrupts__rxDone', quals=[] (at pp.c:9233)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__1__Interrupts__txDone', quals=[], storage=['static'] (at pp.c:9239)
    FuncDecl: quals=None (at pp.c:9239)
      ParamList:  (at pp.c:9241)
        Decl: name='arg_0x101ed5800', quals=[], storage=[] (at pp.c:9241)
          TypeDecl: declname='arg_0x101ed5800', quals=[] (at pp.c:9241)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__1__Interrupts__txDone', quals=[] (at pp.c:9239)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__1__RawInterrupts__txDone', quals=[], storage=['inline', 'static'] (at pp.c:9251)
    FuncDecl: quals=None (at pp.c:9251)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430UsartShareP__1__RawInterrupts__txDone', quals=[] (at pp.c:9251)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__1__RawInterrupts__rxDone', quals=[], storage=['inline', 'static'] (at pp.c:9256)
    FuncDecl: quals=None (at pp.c:9256)
      ParamList:  (at pp.c:9256)
        Decl: name='data', quals=[], storage=[] (at pp.c:9256)
          TypeDecl: declname='data', quals=[] (at pp.c:9256)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__1__RawInterrupts__rxDone', quals=[] (at pp.c:9256)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__1__Interrupts__default__txDone', quals=[], storage=['inline', 'static'] (at pp.c:9266)
    FuncDecl: quals=None (at pp.c:9266)
      ParamList:  (at pp.c:9266)
        Decl: name='id', quals=[], storage=[] (at pp.c:9266)
          TypeDecl: declname='id', quals=[] (at pp.c:9266)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__1__Interrupts__default__txDone', quals=[] (at pp.c:9266)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__1__Interrupts__default__rxDone', quals=[], storage=['inline', 'static'] (at pp.c:9267)
    FuncDecl: quals=None (at pp.c:9267)
      ParamList:  (at pp.c:9267)
        Decl: name='id', quals=[], storage=[] (at pp.c:9267)
          TypeDecl: declname='id', quals=[] (at pp.c:9267)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:9267)
          TypeDecl: declname='data', quals=[] (at pp.c:9267)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__1__Interrupts__default__rxDone', quals=[] (at pp.c:9267)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:9269)
    Enum: name='FcfsResourceQueueC__2____nesc_unnamed4375' (at pp.c:9269)
      EnumeratorList:  (at pp.c:9271)
        Enumerator: name='FcfsResourceQueueC__2__NO_ENTRY' (at pp.c:9271)
          Constant: type='int', value='0xFF' (at pp.c:9271)
  Decl: name='FcfsResourceQueueC__2__resQ', quals=[], storage=[] (at pp.c:9273)
    ArrayDecl:  (at pp.c:9273)
      TypeDecl: declname='FcfsResourceQueueC__2__resQ', quals=[] (at pp.c:9273)
        IdentifierType: names=['uint8_t'] (at None)
      Constant: type='int', value='1U' (at pp.c:9273)
  Decl: name='FcfsResourceQueueC__2__qHead', quals=[], storage=[] (at pp.c:9274)
    TypeDecl: declname='FcfsResourceQueueC__2__qHead', quals=[] (at pp.c:9274)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='FcfsResourceQueueC__2__NO_ENTRY' (at pp.c:9274)
  Decl: name='FcfsResourceQueueC__2__qTail', quals=[], storage=[] (at pp.c:9275)
    TypeDecl: declname='FcfsResourceQueueC__2__qTail', quals=[] (at pp.c:9275)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='FcfsResourceQueueC__2__NO_ENTRY' (at pp.c:9275)
  Decl: name='FcfsResourceQueueC__2__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:9277)
    FuncDecl: quals=None (at pp.c:9277)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__2__Init__init', quals=[] (at pp.c:9277)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='FcfsResourceQueueC__2__FcfsQueue__isEmpty', quals=[], storage=['inline', 'static'] (at pp.c:9282)
    FuncDecl: quals=None (at pp.c:9282)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__2__FcfsQueue__isEmpty', quals=[] (at pp.c:9282)
        IdentifierType: names=['bool'] (at None)
  Decl: name='FcfsResourceQueueC__2__FcfsQueue__dequeue', quals=[], storage=['inline', 'static'] (at pp.c:9290)
    FuncDecl: quals=None (at pp.c:9290)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__2__FcfsQueue__dequeue', quals=[] (at pp.c:9290)
        IdentifierType: names=['resource_client_id_t'] (at None)
  Decl: name='ArbiterP__1__ResourceRequested__immediateRequested', quals=[], storage=['static'] (at pp.c:9292)
    FuncDecl: quals=None (at pp.c:9292)
      ParamList:  (at pp.c:9294)
        Decl: name='arg_0x101edd7e8', quals=[], storage=[] (at pp.c:9294)
          TypeDecl: declname='arg_0x101edd7e8', quals=[] (at pp.c:9294)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__1__ResourceRequested__immediateRequested', quals=[] (at pp.c:9292)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__1__ResourceConfigure__unconfigure', quals=[], storage=['static'] (at pp.c:9296)
    FuncDecl: quals=None (at pp.c:9296)
      ParamList:  (at pp.c:9298)
        Decl: name='arg_0x101f209b8', quals=[], storage=[] (at pp.c:9298)
          TypeDecl: declname='arg_0x101f209b8', quals=[] (at pp.c:9298)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__1__ResourceConfigure__unconfigure', quals=[] (at pp.c:9296)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__1__ResourceConfigure__configure', quals=[], storage=['static'] (at pp.c:9300)
    FuncDecl: quals=None (at pp.c:9300)
      ParamList:  (at pp.c:9302)
        Decl: name='arg_0x101f209b8', quals=[], storage=[] (at pp.c:9302)
          TypeDecl: declname='arg_0x101f209b8', quals=[] (at pp.c:9302)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__1__ResourceConfigure__configure', quals=[] (at pp.c:9300)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__1__Queue__isEmpty', quals=[], storage=['static'] (at pp.c:9304)
    FuncDecl: quals=None (at pp.c:9304)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__1__Queue__isEmpty', quals=[] (at pp.c:9304)
        IdentifierType: names=['bool'] (at None)
  Decl: name='ArbiterP__1__Queue__dequeue', quals=[], storage=['static'] (at pp.c:9306)
    FuncDecl: quals=None (at pp.c:9306)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__1__Queue__dequeue', quals=[] (at pp.c:9306)
        IdentifierType: names=['resource_client_id_t'] (at None)
  Decl: name='ArbiterP__1__ResourceDefaultOwner__granted', quals=[], storage=['static'] (at pp.c:9308)
    FuncDecl: quals=None (at pp.c:9308)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__1__ResourceDefaultOwner__granted', quals=[] (at pp.c:9308)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__1__ResourceDefaultOwner__immediateRequested', quals=[], storage=['static'] (at pp.c:9310)
    FuncDecl: quals=None (at pp.c:9310)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__1__ResourceDefaultOwner__immediateRequested', quals=[] (at pp.c:9310)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__1__Resource__granted', quals=[], storage=['static'] (at pp.c:9312)
    FuncDecl: quals=None (at pp.c:9312)
      ParamList:  (at pp.c:9314)
        Decl: name='arg_0x101ede658', quals=[], storage=[] (at pp.c:9314)
          TypeDecl: declname='arg_0x101ede658', quals=[] (at pp.c:9314)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__1__Resource__granted', quals=[] (at pp.c:9312)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__1__grantedTask__postTask', quals=[], storage=['static'] (at pp.c:9316)
    FuncDecl: quals=None (at pp.c:9316)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__1__grantedTask__postTask', quals=[] (at pp.c:9316)
        IdentifierType: names=['error_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:9318)
    Enum: name='ArbiterP__1____nesc_unnamed4376' (at pp.c:9318)
      EnumeratorList:  (at pp.c:9320)
        Enumerator: name='ArbiterP__1__grantedTask' (at pp.c:9320)
          Constant: type='int', value='20U' (at pp.c:9320)
  Typedef: name='ArbiterP__1____nesc_sillytask_grantedTask', quals=[], storage=['typedef'] (at pp.c:9323)
    ArrayDecl:  (at pp.c:9323)
      TypeDecl: declname='ArbiterP__1____nesc_sillytask_grantedTask', quals=[] (at pp.c:9323)
        IdentifierType: names=['int'] (at None)
      ID: name='ArbiterP__1__grantedTask' (at pp.c:9323)
  Decl: name=None, quals=[], storage=[] (at pp.c:9325)
    Enum: name='ArbiterP__1____nesc_unnamed4377' (at pp.c:9325)
      EnumeratorList:  (at pp.c:9327)
        Enumerator: name='ArbiterP__1__RES_CONTROLLED' (at pp.c:9327)
        Enumerator: name='ArbiterP__1__RES_GRANTING' (at pp.c:9327)
        Enumerator: name='ArbiterP__1__RES_IMM_GRANTING' (at pp.c:9327)
        Enumerator: name='ArbiterP__1__RES_BUSY' (at pp.c:9327)
  Decl: name=None, quals=[], storage=[] (at pp.c:9330)
    Enum: name='ArbiterP__1____nesc_unnamed4378' (at pp.c:9330)
      EnumeratorList:  (at pp.c:9332)
        Enumerator: name='ArbiterP__1__default_owner_id' (at pp.c:9332)
          Constant: type='int', value='1U' (at pp.c:9332)
  Decl: name=None, quals=[], storage=[] (at pp.c:9335)
    Enum: name='ArbiterP__1____nesc_unnamed4379' (at pp.c:9335)
      EnumeratorList:  (at pp.c:9337)
        Enumerator: name='ArbiterP__1__NO_RES' (at pp.c:9337)
          Constant: type='int', value='0xFF' (at pp.c:9337)
  Decl: name='ArbiterP__1__state', quals=[], storage=[] (at pp.c:9339)
    TypeDecl: declname='ArbiterP__1__state', quals=[] (at pp.c:9339)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='ArbiterP__1__RES_CONTROLLED' (at pp.c:9339)
  Decl: name='ArbiterP__1__resId', quals=[], storage=[] (at pp.c:9340)
    TypeDecl: declname='ArbiterP__1__resId', quals=[] (at pp.c:9340)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='ArbiterP__1__default_owner_id' (at pp.c:9340)
  Decl: name='ArbiterP__1__reqResId', quals=[], storage=[] (at pp.c:9341)
    TypeDecl: declname='ArbiterP__1__reqResId', quals=[] (at pp.c:9341)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='ArbiterP__1__Resource__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:9343)
    FuncDecl: quals=None (at pp.c:9343)
      ParamList:  (at pp.c:9343)
        Decl: name='id', quals=[], storage=[] (at pp.c:9343)
          TypeDecl: declname='id', quals=[] (at pp.c:9343)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__1__Resource__immediateRequest', quals=[] (at pp.c:9343)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__1__Resource__release', quals=[], storage=['inline', 'static'] (at pp.c:9345)
    FuncDecl: quals=None (at pp.c:9345)
      ParamList:  (at pp.c:9345)
        Decl: name='id', quals=[], storage=[] (at pp.c:9345)
          TypeDecl: declname='id', quals=[] (at pp.c:9345)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__1__Resource__release', quals=[] (at pp.c:9345)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__1__ResourceDefaultOwner__release', quals=[], storage=['inline', 'static'] (at pp.c:9347)
    FuncDecl: quals=None (at pp.c:9347)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__1__ResourceDefaultOwner__release', quals=[] (at pp.c:9347)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__1__ArbiterInfo__inUse', quals=[], storage=['static'] (at pp.c:9349)
    FuncDecl: quals=None (at pp.c:9349)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__1__ArbiterInfo__inUse', quals=[] (at pp.c:9349)
        IdentifierType: names=['bool'] (at None)
  Decl: name='ArbiterP__1__ArbiterInfo__userId', quals=[], storage=['static'] (at pp.c:9351)
    FuncDecl: quals=None (at pp.c:9351)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__1__ArbiterInfo__userId', quals=[] (at pp.c:9351)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='ArbiterP__1__Resource__isOwner', quals=[], storage=['static'] (at pp.c:9362)
    FuncDecl: quals=None (at pp.c:9362)
      ParamList:  (at pp.c:9362)
        Decl: name='id', quals=[], storage=[] (at pp.c:9362)
          TypeDecl: declname='id', quals=[] (at pp.c:9362)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__1__Resource__isOwner', quals=[] (at pp.c:9362)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='ArbiterP__1__grantedTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:9364)
    FuncDecl: quals=None (at pp.c:9364)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__1__grantedTask__runTask', quals=[] (at pp.c:9364)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__1__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:9366)
    FuncDecl: quals=None (at pp.c:9366)
      ParamList:  (at pp.c:9366)
        Decl: name='id', quals=[], storage=[] (at pp.c:9366)
          TypeDecl: declname='id', quals=[] (at pp.c:9366)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__1__Resource__default__granted', quals=[] (at pp.c:9366)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__1__ResourceRequested__default__immediateRequested', quals=[], storage=['inline', 'static'] (at pp.c:9370)
    FuncDecl: quals=None (at pp.c:9370)
      ParamList:  (at pp.c:9370)
        Decl: name='id', quals=[], storage=[] (at pp.c:9370)
          TypeDecl: declname='id', quals=[] (at pp.c:9370)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__1__ResourceRequested__default__immediateRequested', quals=[] (at pp.c:9370)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__1__ResourceConfigure__default__configure', quals=[], storage=['inline', 'static'] (at pp.c:9380)
    FuncDecl: quals=None (at pp.c:9380)
      ParamList:  (at pp.c:9380)
        Decl: name='id', quals=[], storage=[] (at pp.c:9380)
          TypeDecl: declname='id', quals=[] (at pp.c:9380)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__1__ResourceConfigure__default__configure', quals=[] (at pp.c:9380)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__1__ResourceConfigure__default__unconfigure', quals=[], storage=['inline', 'static'] (at pp.c:9382)
    FuncDecl: quals=None (at pp.c:9382)
      ParamList:  (at pp.c:9382)
        Decl: name='id', quals=[], storage=[] (at pp.c:9382)
          TypeDecl: declname='id', quals=[] (at pp.c:9382)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__1__ResourceConfigure__default__unconfigure', quals=[] (at pp.c:9382)
        IdentifierType: names=['void'] (at None)
  Decl: name='AsyncPowerManagerP__0__PowerDownCleanup__cleanup', quals=[], storage=['static'] (at pp.c:9384)
    FuncDecl: quals=None (at pp.c:9384)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AsyncPowerManagerP__0__PowerDownCleanup__cleanup', quals=[] (at pp.c:9384)
        IdentifierType: names=['void'] (at None)
  Decl: name='AsyncPowerManagerP__0__ResourceDefaultOwner__release', quals=[], storage=['static'] (at pp.c:9386)
    FuncDecl: quals=None (at pp.c:9386)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AsyncPowerManagerP__0__ResourceDefaultOwner__release', quals=[] (at pp.c:9386)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AsyncPowerManagerP__0__AsyncStdControl__start', quals=[], storage=['static'] (at pp.c:9388)
    FuncDecl: quals=None (at pp.c:9388)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AsyncPowerManagerP__0__AsyncStdControl__start', quals=[] (at pp.c:9388)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AsyncPowerManagerP__0__AsyncStdControl__stop', quals=[], storage=['static'] (at pp.c:9398)
    FuncDecl: quals=None (at pp.c:9398)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AsyncPowerManagerP__0__AsyncStdControl__stop', quals=[] (at pp.c:9398)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AsyncPowerManagerP__0__ResourceDefaultOwner__immediateRequested', quals=[], storage=['inline', 'static'] (at pp.c:9400)
    FuncDecl: quals=None (at pp.c:9400)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AsyncPowerManagerP__0__ResourceDefaultOwner__immediateRequested', quals=[] (at pp.c:9400)
        IdentifierType: names=['void'] (at None)
  Decl: name='AsyncPowerManagerP__0__ResourceDefaultOwner__granted', quals=[], storage=['inline', 'static'] (at pp.c:9405)
    FuncDecl: quals=None (at pp.c:9405)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AsyncPowerManagerP__0__ResourceDefaultOwner__granted', quals=[] (at pp.c:9405)
        IdentifierType: names=['void'] (at None)
  Decl: name='AsyncPowerManagerP__0__PowerDownCleanup__default__cleanup', quals=[], storage=['inline', 'static'] (at pp.c:9410)
    FuncDecl: quals=None (at pp.c:9410)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AsyncPowerManagerP__0__PowerDownCleanup__default__cleanup', quals=[] (at pp.c:9410)
        IdentifierType: names=['void'] (at None)
  Decl: name='TelosSerialP__Resource__release', quals=[], storage=['static'] (at pp.c:9412)
    FuncDecl: quals=None (at pp.c:9412)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TelosSerialP__Resource__release', quals=[] (at pp.c:9412)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='TelosSerialP__Resource__immediateRequest', quals=[], storage=['static'] (at pp.c:9414)
    FuncDecl: quals=None (at pp.c:9414)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TelosSerialP__Resource__immediateRequest', quals=[] (at pp.c:9414)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='TelosSerialP__msp430_uart_telos_config', quals=[], storage=[] (at pp.c:9416)
    TypeDecl: declname='TelosSerialP__msp430_uart_telos_config', quals=[] (at pp.c:9416)
      IdentifierType: names=['msp430_uart_union_config_t'] (at None)
    ExprList:  (at pp.c:9416)
      ExprList:  (at pp.c:9416)
        Assignment: op='=' (at pp.c:9416)
          StructRef: type='.' (at pp.c:9416)
            ID: name='ubr' (at pp.c:9416)
          ID: name='UBR_1MHZ_115200' (at pp.c:9416)
        Assignment: op='=' (at pp.c:9416)
          StructRef: type='.' (at pp.c:9416)
            ID: name='umctl' (at pp.c:9416)
          ID: name='UMCTL_1MHZ_115200' (at pp.c:9416)
        Assignment: op='=' (at pp.c:9416)
          StructRef: type='.' (at pp.c:9416)
            ID: name='ssel' (at pp.c:9416)
          Constant: type='int', value='0x02' (at pp.c:9416)
        Assignment: op='=' (at pp.c:9416)
          StructRef: type='.' (at pp.c:9416)
            ID: name='pena' (at pp.c:9416)
          Constant: type='int', value='0' (at pp.c:9416)
        Assignment: op='=' (at pp.c:9416)
          StructRef: type='.' (at pp.c:9416)
            ID: name='pev' (at pp.c:9416)
          Constant: type='int', value='0' (at pp.c:9416)
        Assignment: op='=' (at pp.c:9416)
          StructRef: type='.' (at pp.c:9416)
            ID: name='spb' (at pp.c:9416)
          Constant: type='int', value='0' (at pp.c:9416)
        Assignment: op='=' (at pp.c:9416)
          StructRef: type='.' (at pp.c:9416)
            ID: name='clen' (at pp.c:9416)
          Constant: type='int', value='1' (at pp.c:9416)
        Assignment: op='=' (at pp.c:9416)
          StructRef: type='.' (at pp.c:9416)
            ID: name='listen' (at pp.c:9416)
          Constant: type='int', value='0' (at pp.c:9416)
        Assignment: op='=' (at pp.c:9416)
          StructRef: type='.' (at pp.c:9416)
            ID: name='mm' (at pp.c:9416)
          Constant: type='int', value='0' (at pp.c:9416)
        Assignment: op='=' (at pp.c:9416)
          StructRef: type='.' (at pp.c:9416)
            ID: name='ckpl' (at pp.c:9416)
          Constant: type='int', value='0' (at pp.c:9416)
        Assignment: op='=' (at pp.c:9416)
          StructRef: type='.' (at pp.c:9416)
            ID: name='urxse' (at pp.c:9416)
          Constant: type='int', value='0' (at pp.c:9416)
        Assignment: op='=' (at pp.c:9416)
          StructRef: type='.' (at pp.c:9416)
            ID: name='urxeie' (at pp.c:9416)
          Constant: type='int', value='1' (at pp.c:9416)
        Assignment: op='=' (at pp.c:9416)
          StructRef: type='.' (at pp.c:9416)
            ID: name='urxwie' (at pp.c:9416)
          Constant: type='int', value='0' (at pp.c:9416)
        Assignment: op='=' (at pp.c:9416)
          StructRef: type='.' (at pp.c:9416)
            ID: name='utxe' (at pp.c:9416)
          Constant: type='int', value='1' (at pp.c:9416)
        Assignment: op='=' (at pp.c:9416)
          StructRef: type='.' (at pp.c:9416)
            ID: name='urxe' (at pp.c:9416)
          Constant: type='int', value='1' (at pp.c:9416)
  Decl: name='TelosSerialP__StdControl__start', quals=[], storage=['inline', 'static'] (at pp.c:9418)
    FuncDecl: quals=None (at pp.c:9418)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TelosSerialP__StdControl__start', quals=[] (at pp.c:9418)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='TelosSerialP__StdControl__stop', quals=[], storage=['inline', 'static'] (at pp.c:9421)
    FuncDecl: quals=None (at pp.c:9421)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TelosSerialP__StdControl__stop', quals=[] (at pp.c:9421)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='TelosSerialP__Resource__granted', quals=[], storage=['inline', 'static'] (at pp.c:9425)
    FuncDecl: quals=None (at pp.c:9425)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TelosSerialP__Resource__granted', quals=[] (at pp.c:9425)
        IdentifierType: names=['void'] (at None)
  Decl: name='TelosSerialP__Msp430UartConfigure__getConfig', quals=[], storage=['inline', 'static'] (at pp.c:9427)
    FuncDecl: quals=None (at pp.c:9427)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      PtrDecl: quals=[] (at pp.c:9427)
        TypeDecl: declname='TelosSerialP__Msp430UartConfigure__getConfig', quals=[] (at pp.c:9427)
          IdentifierType: names=['msp430_uart_union_config_t'] (at None)
  Decl: name='SerialPacketInfoActiveMessageP__Info__offset', quals=[], storage=['inline', 'static'] (at pp.c:9429)
    FuncDecl: quals=None (at pp.c:9429)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SerialPacketInfoActiveMessageP__Info__offset', quals=[] (at pp.c:9429)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialPacketInfoActiveMessageP__Info__dataLinkLength', quals=[], storage=['inline', 'static'] (at pp.c:9432)
    FuncDecl: quals=None (at pp.c:9432)
      ParamList:  (at pp.c:9432)
        Decl: name='msg', quals=[], storage=[] (at pp.c:9432)
          PtrDecl: quals=[] (at pp.c:9432)
            TypeDecl: declname='msg', quals=[] (at pp.c:9432)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='upperLen', quals=[], storage=[] (at pp.c:9432)
          TypeDecl: declname='upperLen', quals=[] (at pp.c:9432)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialPacketInfoActiveMessageP__Info__dataLinkLength', quals=[] (at pp.c:9432)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SerialPacketInfoActiveMessageP__Info__upperLength', quals=[], storage=['inline', 'static'] (at pp.c:9435)
    FuncDecl: quals=None (at pp.c:9435)
      ParamList:  (at pp.c:9435)
        Decl: name='msg', quals=[], storage=[] (at pp.c:9435)
          PtrDecl: quals=[] (at pp.c:9435)
            TypeDecl: declname='msg', quals=[] (at pp.c:9435)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='dataLinkLen', quals=[], storage=[] (at pp.c:9435)
          TypeDecl: declname='dataLinkLen', quals=[] (at pp.c:9435)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SerialPacketInfoActiveMessageP__Info__upperLength', quals=[] (at pp.c:9435)
        IdentifierType: names=['uint8_t'] (at None)
  FuncDef:  (at pp.c:9437)
    Decl: name='__nesc_enable_interrupt', quals=[], storage=['inline', 'static'] (at pp.c:9437)
      FuncDecl: quals=None (at pp.c:9437)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_enable_interrupt', quals=[] (at pp.c:9437)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9438)
      Assignment: op='|=' (at pp.c:9439)
        ID: name='_R2' (at pp.c:9439)
        Constant: type='int', value='0x0008' (at pp.c:9439)
  FuncDef:  (at pp.c:9442)
    Decl: name='Msp430TimerCapComP__2__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9442)
      FuncDecl: quals=None (at pp.c:9442)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Timer__overflow', quals=[] (at pp.c:9442)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9443)
  FuncDef:  (at pp.c:9447)
    Decl: name='Msp430TimerCapComP__1__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9447)
      FuncDecl: quals=None (at pp.c:9447)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Timer__overflow', quals=[] (at pp.c:9447)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9448)
  FuncDef:  (at pp.c:9452)
    Decl: name='Msp430TimerCapComP__0__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9452)
      FuncDecl: quals=None (at pp.c:9452)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Timer__overflow', quals=[] (at pp.c:9452)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9453)
  FuncDef:  (at pp.c:9457)
    Decl: name='BusyWaitCounterC__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9457)
      FuncDecl: quals=None (at pp.c:9457)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BusyWaitCounterC__0__Counter__overflow', quals=[] (at pp.c:9457)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9458)
  FuncDef:  (at pp.c:9462)
    Decl: name='Msp430CounterC__1__Counter__overflow', quals=[], storage=['static', 'inline'] (at pp.c:9462)
      FuncDecl: quals=None (at pp.c:9462)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__1__Counter__overflow', quals=[] (at pp.c:9462)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9462)
      FuncCall:  (at None)
        ID: name='BusyWaitCounterC__0__Counter__overflow' (at pp.c:9464)
  FuncDef:  (at pp.c:9469)
    Decl: name='Msp430CounterC__1__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9469)
      FuncDecl: quals=None (at pp.c:9469)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__1__Msp430Timer__overflow', quals=[] (at pp.c:9469)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9470)
      FuncCall:  (at None)
        ID: name='Msp430CounterC__1__Counter__overflow' (at pp.c:9471)
  FuncDef:  (at pp.c:9475)
    Decl: name='Msp430TimerP__0__Timer__overflow', quals=[], storage=['static', 'inline'] (at pp.c:9475)
      FuncDecl: quals=None (at pp.c:9475)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Timer__overflow', quals=[] (at pp.c:9475)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9475)
      FuncCall:  (at None)
        ID: name='Msp430CounterC__1__Msp430Timer__overflow' (at pp.c:9477)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__0__Timer__overflow' (at pp.c:9479)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__1__Timer__overflow' (at pp.c:9481)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__2__Timer__overflow' (at pp.c:9483)
  FuncDef:  (at pp.c:9488)
    Decl: name='Msp430TimerP__0__Overflow__fired', quals=[], storage=['inline', 'static'] (at pp.c:9488)
      FuncDecl: quals=None (at pp.c:9488)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Overflow__fired', quals=[] (at pp.c:9488)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9489)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Timer__overflow' (at pp.c:9490)
  FuncDef:  (at pp.c:9497)
    Decl: name='Msp430TimerP__0__Event__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:9497)
      FuncDecl: quals=None (at pp.c:9497)
        ParamList:  (at pp.c:9497)
          Decl: name='n', quals=[], storage=[] (at pp.c:9497)
            TypeDecl: declname='n', quals=[] (at pp.c:9497)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Event__default__fired', quals=[] (at pp.c:9497)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9498)
  FuncDef:  (at pp.c:9502)
    Decl: name='Msp430TimerP__0__Event__fired', quals=[], storage=['static', 'inline'] (at pp.c:9502)
      FuncDecl: quals=None (at pp.c:9502)
        ParamList:  (at pp.c:9502)
          Decl: name='arg_0x101409020', quals=[], storage=[] (at pp.c:9502)
            TypeDecl: declname='arg_0x101409020', quals=[] (at pp.c:9502)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Event__fired', quals=[] (at pp.c:9502)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9502)
      Switch:  (at pp.c:9504)
        ID: name='arg_0x101409020' (at pp.c:9504)
        Compound:  (at pp.c:9504)
          Case:  (at pp.c:9506)
            Constant: type='int', value='0' (at pp.c:9506)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__0__Event__fired' (at pp.c:9508)
          Break:  (at pp.c:9510)
          Case:  (at pp.c:9512)
            Constant: type='int', value='1' (at pp.c:9512)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__1__Event__fired' (at pp.c:9514)
          Break:  (at pp.c:9516)
          Case:  (at pp.c:9518)
            Constant: type='int', value='2' (at pp.c:9518)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__2__Event__fired' (at pp.c:9520)
          Break:  (at pp.c:9522)
          Case:  (at pp.c:9524)
            Constant: type='int', value='5' (at pp.c:9524)
            FuncCall:  (at None)
              ID: name='Msp430TimerP__0__Overflow__fired' (at pp.c:9526)
          Break:  (at pp.c:9528)
          Default:  (at pp.c:9530)
            FuncCall:  (at None)
              ID: name='Msp430TimerP__0__Event__default__fired' (at pp.c:9532)
              ExprList:  (at pp.c:9532)
                ID: name='arg_0x101409020' (at pp.c:9532)
          Break:  (at pp.c:9534)
  FuncDef:  (at pp.c:9541)
    Decl: name='Msp430TimerP__0__VectorTimerX0__fired', quals=[], storage=['inline', 'static'] (at pp.c:9541)
      FuncDecl: quals=None (at pp.c:9541)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__VectorTimerX0__fired', quals=[] (at pp.c:9541)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9542)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Event__fired' (at pp.c:9543)
        ExprList:  (at pp.c:9543)
          Constant: type='int', value='0' (at pp.c:9543)
  FuncDef:  (at pp.c:9547)
    Decl: name='Msp430TimerCommonP__VectorTimerA0__fired', quals=[], storage=['static', 'inline'] (at pp.c:9547)
      FuncDecl: quals=None (at pp.c:9547)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCommonP__VectorTimerA0__fired', quals=[] (at pp.c:9547)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9547)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__VectorTimerX0__fired' (at pp.c:9549)
  FuncDef:  (at pp.c:9554)
    Decl: name='Msp430TimerCapComP__0__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:9554)
      FuncDecl: quals=None (at pp.c:9554)
        ParamList:  (at pp.c:9554)
          Decl: name='x', quals=[], storage=[] (at pp.c:9554)
            TypeDecl: declname='x', quals=[] (at pp.c:9554)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__int2CC', quals=[] (at pp.c:9554)
          IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
    Compound:  (at pp.c:9556)
      Decl: name='c', quals=[], storage=[] (at pp.c:9565)
        TypeDecl: declname='c', quals=[] (at pp.c:9565)
          Union: name='Msp430TimerCapComP__0____nesc_unnamed4380', packed=False (at pp.c:9558)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:9560)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:9562)
                IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
        ExprList:  (at pp.c:9565)
          Assignment: op='=' (at pp.c:9565)
            StructRef: type='.' (at pp.c:9565)
              ID: name='f' (at pp.c:9565)
            ID: name='x' (at pp.c:9565)
      Return:  (at pp.c:9568)
        StructRef: type='.' (at pp.c:9568)
          ID: name='c' (at pp.c:9568)
          ID: name='t' (at pp.c:9568)
  FuncDef:  (at pp.c:9572)
    Decl: name='Msp430TimerCapComP__0__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:9572)
      FuncDecl: quals=None (at pp.c:9572)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Control__getControl', quals=[] (at pp.c:9572)
          IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
    Compound:  (at pp.c:9573)
      Return:  (at pp.c:9574)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__0__int2CC' (at pp.c:9574)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:9574)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='354U' (at pp.c:9574)
  FuncDef:  (at pp.c:9578)
    Decl: name='Msp430TimerCapComP__0__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:9578)
      FuncDecl: quals=None (at pp.c:9578)
        ParamList:  (at pp.c:9578)
          Decl: name='n', quals=[], storage=[] (at pp.c:9578)
            TypeDecl: declname='n', quals=[] (at pp.c:9578)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Capture__default__captured', quals=[] (at pp.c:9578)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9579)
  FuncDef:  (at pp.c:9583)
    Decl: name='Msp430TimerCapComP__0__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:9583)
      FuncDecl: quals=None (at pp.c:9583)
        ParamList:  (at pp.c:9583)
          Decl: name='time', quals=[], storage=[] (at pp.c:9583)
            TypeDecl: declname='time', quals=[] (at pp.c:9583)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Capture__captured', quals=[] (at pp.c:9583)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9583)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__0__Capture__default__captured' (at pp.c:9585)
        ExprList:  (at pp.c:9585)
          ID: name='time' (at pp.c:9585)
  FuncDef:  (at pp.c:9590)
    Decl: name='Msp430TimerCapComP__0__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:9590)
      FuncDecl: quals=None (at pp.c:9590)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Capture__getEvent', quals=[] (at pp.c:9590)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:9591)
      Return:  (at pp.c:9592)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:9592)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='370U' (at pp.c:9592)
  FuncDef:  (at pp.c:9596)
    Decl: name='Msp430TimerCapComP__0__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:9596)
      FuncDecl: quals=None (at pp.c:9596)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Compare__default__fired', quals=[] (at pp.c:9596)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9597)
  FuncDef:  (at pp.c:9601)
    Decl: name='Msp430TimerCapComP__0__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:9601)
      FuncDecl: quals=None (at pp.c:9601)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Compare__fired', quals=[] (at pp.c:9601)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9601)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__0__Compare__default__fired' (at pp.c:9603)
  FuncDef:  (at pp.c:9608)
    Decl: name='Msp430TimerCapComP__1__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:9608)
      FuncDecl: quals=None (at pp.c:9608)
        ParamList:  (at pp.c:9608)
          Decl: name='x', quals=[], storage=[] (at pp.c:9608)
            TypeDecl: declname='x', quals=[] (at pp.c:9608)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__int2CC', quals=[] (at pp.c:9608)
          IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
    Compound:  (at pp.c:9610)
      Decl: name='c', quals=[], storage=[] (at pp.c:9619)
        TypeDecl: declname='c', quals=[] (at pp.c:9619)
          Union: name='Msp430TimerCapComP__1____nesc_unnamed4381', packed=False (at pp.c:9612)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:9614)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:9616)
                IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
        ExprList:  (at pp.c:9619)
          Assignment: op='=' (at pp.c:9619)
            StructRef: type='.' (at pp.c:9619)
              ID: name='f' (at pp.c:9619)
            ID: name='x' (at pp.c:9619)
      Return:  (at pp.c:9622)
        StructRef: type='.' (at pp.c:9622)
          ID: name='c' (at pp.c:9622)
          ID: name='t' (at pp.c:9622)
  FuncDef:  (at pp.c:9626)
    Decl: name='Msp430TimerCapComP__1__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:9626)
      FuncDecl: quals=None (at pp.c:9626)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Control__getControl', quals=[] (at pp.c:9626)
          IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
    Compound:  (at pp.c:9627)
      Return:  (at pp.c:9628)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__1__int2CC' (at pp.c:9628)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:9628)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='356U' (at pp.c:9628)
  FuncDef:  (at pp.c:9632)
    Decl: name='Msp430TimerCapComP__1__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:9632)
      FuncDecl: quals=None (at pp.c:9632)
        ParamList:  (at pp.c:9632)
          Decl: name='n', quals=[], storage=[] (at pp.c:9632)
            TypeDecl: declname='n', quals=[] (at pp.c:9632)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Capture__default__captured', quals=[] (at pp.c:9632)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9633)
  FuncDef:  (at pp.c:9637)
    Decl: name='Msp430TimerCapComP__1__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:9637)
      FuncDecl: quals=None (at pp.c:9637)
        ParamList:  (at pp.c:9637)
          Decl: name='time', quals=[], storage=[] (at pp.c:9637)
            TypeDecl: declname='time', quals=[] (at pp.c:9637)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Capture__captured', quals=[] (at pp.c:9637)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9637)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__1__Capture__default__captured' (at pp.c:9639)
        ExprList:  (at pp.c:9639)
          ID: name='time' (at pp.c:9639)
  FuncDef:  (at pp.c:9644)
    Decl: name='Msp430TimerCapComP__1__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:9644)
      FuncDecl: quals=None (at pp.c:9644)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Capture__getEvent', quals=[] (at pp.c:9644)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:9645)
      Return:  (at pp.c:9646)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:9646)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='372U' (at pp.c:9646)
  FuncDef:  (at pp.c:9650)
    Decl: name='Msp430TimerCapComP__1__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:9650)
      FuncDecl: quals=None (at pp.c:9650)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Compare__default__fired', quals=[] (at pp.c:9650)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9651)
  FuncDef:  (at pp.c:9655)
    Decl: name='Msp430TimerCapComP__1__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:9655)
      FuncDecl: quals=None (at pp.c:9655)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Compare__fired', quals=[] (at pp.c:9655)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9655)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__1__Compare__default__fired' (at pp.c:9657)
  FuncDef:  (at pp.c:9662)
    Decl: name='Msp430TimerCapComP__2__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:9662)
      FuncDecl: quals=None (at pp.c:9662)
        ParamList:  (at pp.c:9662)
          Decl: name='x', quals=[], storage=[] (at pp.c:9662)
            TypeDecl: declname='x', quals=[] (at pp.c:9662)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__int2CC', quals=[] (at pp.c:9662)
          IdentifierType: names=['Msp430TimerCapComP__2__cc_t'] (at None)
    Compound:  (at pp.c:9664)
      Decl: name='c', quals=[], storage=[] (at pp.c:9673)
        TypeDecl: declname='c', quals=[] (at pp.c:9673)
          Union: name='Msp430TimerCapComP__2____nesc_unnamed4382', packed=False (at pp.c:9666)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:9668)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:9670)
                IdentifierType: names=['Msp430TimerCapComP__2__cc_t'] (at None)
        ExprList:  (at pp.c:9673)
          Assignment: op='=' (at pp.c:9673)
            StructRef: type='.' (at pp.c:9673)
              ID: name='f' (at pp.c:9673)
            ID: name='x' (at pp.c:9673)
      Return:  (at pp.c:9676)
        StructRef: type='.' (at pp.c:9676)
          ID: name='c' (at pp.c:9676)
          ID: name='t' (at pp.c:9676)
  FuncDef:  (at pp.c:9680)
    Decl: name='Msp430TimerCapComP__2__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:9680)
      FuncDecl: quals=None (at pp.c:9680)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Control__getControl', quals=[] (at pp.c:9680)
          IdentifierType: names=['Msp430TimerCapComP__2__cc_t'] (at None)
    Compound:  (at pp.c:9681)
      Return:  (at pp.c:9682)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__2__int2CC' (at pp.c:9682)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:9682)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='358U' (at pp.c:9682)
  FuncDef:  (at pp.c:9686)
    Decl: name='Msp430TimerCapComP__2__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:9686)
      FuncDecl: quals=None (at pp.c:9686)
        ParamList:  (at pp.c:9686)
          Decl: name='n', quals=[], storage=[] (at pp.c:9686)
            TypeDecl: declname='n', quals=[] (at pp.c:9686)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Capture__default__captured', quals=[] (at pp.c:9686)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9687)
  FuncDef:  (at pp.c:9691)
    Decl: name='Msp430TimerCapComP__2__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:9691)
      FuncDecl: quals=None (at pp.c:9691)
        ParamList:  (at pp.c:9691)
          Decl: name='time', quals=[], storage=[] (at pp.c:9691)
            TypeDecl: declname='time', quals=[] (at pp.c:9691)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Capture__captured', quals=[] (at pp.c:9691)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9691)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__2__Capture__default__captured' (at pp.c:9693)
        ExprList:  (at pp.c:9693)
          ID: name='time' (at pp.c:9693)
  FuncDef:  (at pp.c:9698)
    Decl: name='Msp430TimerCapComP__2__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:9698)
      FuncDecl: quals=None (at pp.c:9698)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Capture__getEvent', quals=[] (at pp.c:9698)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:9699)
      Return:  (at pp.c:9700)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:9700)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='374U' (at pp.c:9700)
  FuncDef:  (at pp.c:9704)
    Decl: name='Msp430TimerCapComP__2__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:9704)
      FuncDecl: quals=None (at pp.c:9704)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Compare__default__fired', quals=[] (at pp.c:9704)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9705)
  FuncDef:  (at pp.c:9709)
    Decl: name='Msp430TimerCapComP__2__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:9709)
      FuncDecl: quals=None (at pp.c:9709)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Compare__fired', quals=[] (at pp.c:9709)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9709)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__2__Compare__default__fired' (at pp.c:9711)
  FuncDef:  (at pp.c:9716)
    Decl: name='Msp430TimerP__0__VectorTimerX1__fired', quals=[], storage=['inline', 'static'] (at pp.c:9716)
      FuncDecl: quals=None (at pp.c:9716)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__VectorTimerX1__fired', quals=[] (at pp.c:9716)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9717)
      Decl: name='n', quals=[], storage=[] (at pp.c:9718)
        TypeDecl: declname='n', quals=[] (at pp.c:9718)
          IdentifierType: names=['uint8_t'] (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:9718)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='302U' (at pp.c:9718)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Event__fired' (at pp.c:9721)
        ExprList:  (at pp.c:9721)
          BinaryOp: op='>>' (at pp.c:9721)
            ID: name='n' (at pp.c:9721)
            Constant: type='int', value='1' (at pp.c:9721)
  FuncDef:  (at pp.c:9725)
    Decl: name='Msp430TimerCommonP__VectorTimerA1__fired', quals=[], storage=['static', 'inline'] (at pp.c:9725)
      FuncDecl: quals=None (at pp.c:9725)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCommonP__VectorTimerA1__fired', quals=[] (at pp.c:9725)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9725)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__VectorTimerX1__fired' (at pp.c:9727)
  FuncDef:  (at pp.c:9732)
    Decl: name='Msp430TimerP__1__VectorTimerX0__fired', quals=[], storage=['inline', 'static'] (at pp.c:9732)
      FuncDecl: quals=None (at pp.c:9732)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__VectorTimerX0__fired', quals=[] (at pp.c:9732)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9733)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__1__Event__fired' (at pp.c:9734)
        ExprList:  (at pp.c:9734)
          Constant: type='int', value='0' (at pp.c:9734)
  FuncDef:  (at pp.c:9738)
    Decl: name='Msp430TimerCommonP__VectorTimerB0__fired', quals=[], storage=['static', 'inline'] (at pp.c:9738)
      FuncDecl: quals=None (at pp.c:9738)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCommonP__VectorTimerB0__fired', quals=[] (at pp.c:9738)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9738)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__1__VectorTimerX0__fired' (at pp.c:9740)
  FuncDef:  (at pp.c:9745)
    Decl: name='Msp430TimerCapComP__9__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9745)
      FuncDecl: quals=None (at pp.c:9745)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Timer__overflow', quals=[] (at pp.c:9745)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9746)
  FuncDef:  (at pp.c:9750)
    Decl: name='Msp430TimerCapComP__8__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9750)
      FuncDecl: quals=None (at pp.c:9750)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Timer__overflow', quals=[] (at pp.c:9750)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9751)
  FuncDef:  (at pp.c:9755)
    Decl: name='Msp430TimerCapComP__7__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9755)
      FuncDecl: quals=None (at pp.c:9755)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Timer__overflow', quals=[] (at pp.c:9755)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9756)
  FuncDef:  (at pp.c:9760)
    Decl: name='Msp430TimerCapComP__6__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9760)
      FuncDecl: quals=None (at pp.c:9760)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Timer__overflow', quals=[] (at pp.c:9760)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9761)
  FuncDef:  (at pp.c:9765)
    Decl: name='Msp430TimerCapComP__5__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9765)
      FuncDecl: quals=None (at pp.c:9765)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Timer__overflow', quals=[] (at pp.c:9765)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9766)
  FuncDef:  (at pp.c:9770)
    Decl: name='Msp430TimerCapComP__4__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9770)
      FuncDecl: quals=None (at pp.c:9770)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Timer__overflow', quals=[] (at pp.c:9770)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9771)
  FuncDef:  (at pp.c:9775)
    Decl: name='Msp430TimerCapComP__3__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9775)
      FuncDecl: quals=None (at pp.c:9775)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Timer__overflow', quals=[] (at pp.c:9775)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9776)
  FuncDef:  (at pp.c:9780)
    Decl: name='Msp430AlarmC__1__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9780)
      FuncDecl: quals=None (at pp.c:9780)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430Timer__overflow', quals=[] (at pp.c:9780)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9781)
  FuncDef:  (at pp.c:9785)
    Decl: name='Msp430AlarmC__0__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9785)
      FuncDecl: quals=None (at pp.c:9785)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430Timer__overflow', quals=[] (at pp.c:9785)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9786)
  FuncDef:  (at pp.c:9790)
    Decl: name='TransformAlarmC__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9790)
      FuncDecl: quals=None (at pp.c:9790)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Counter__overflow', quals=[] (at pp.c:9790)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9791)
  FuncDef:  (at pp.c:9795)
    Decl: name='CounterToLocalTimeC__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9795)
      FuncDecl: quals=None (at pp.c:9795)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CounterToLocalTimeC__0__Counter__overflow', quals=[] (at pp.c:9795)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9796)
  FuncDef:  (at pp.c:9800)
    Decl: name='TransformCounterC__0__Counter__overflow', quals=[], storage=['static', 'inline'] (at pp.c:9800)
      FuncDecl: quals=None (at pp.c:9800)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__0__Counter__overflow', quals=[] (at pp.c:9800)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9800)
      FuncCall:  (at None)
        ID: name='CounterToLocalTimeC__0__Counter__overflow' (at pp.c:9802)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__Counter__overflow' (at pp.c:9804)
  FuncDef:  (at pp.c:9809)
    Decl: name='TransformCounterC__0__CounterFrom__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9809)
      FuncDecl: quals=None (at pp.c:9809)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__0__CounterFrom__overflow', quals=[] (at pp.c:9809)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9810)
      Compound:  (at pp.c:9812)
        UnaryOp: op='p++' (at pp.c:9813)
          ID: name='TransformCounterC__0__m_upper' (at pp.c:9813)
        If:  (at pp.c:9814)
          BinaryOp: op='==' (at pp.c:9814)
            BinaryOp: op='&' (at pp.c:9814)
              ID: name='TransformCounterC__0__m_upper' (at pp.c:9814)
              ID: name='TransformCounterC__0__OVERFLOW_MASK' (at pp.c:9814)
            Constant: type='int', value='0' (at pp.c:9814)
          Compound:  (at pp.c:9814)
            FuncCall:  (at None)
              ID: name='TransformCounterC__0__Counter__overflow' (at pp.c:9815)
  FuncDef:  (at pp.c:9821)
    Decl: name='CounterToLocalTimeC__1__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9821)
      FuncDecl: quals=None (at pp.c:9821)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CounterToLocalTimeC__1__Counter__overflow', quals=[] (at pp.c:9821)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9822)
  FuncDef:  (at pp.c:9826)
    Decl: name='TransformAlarmC__1__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9826)
      FuncDecl: quals=None (at pp.c:9826)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__Counter__overflow', quals=[] (at pp.c:9826)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9827)
  FuncDef:  (at pp.c:9831)
    Decl: name='TransformCounterC__1__Counter__overflow', quals=[], storage=['static', 'inline'] (at pp.c:9831)
      FuncDecl: quals=None (at pp.c:9831)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__1__Counter__overflow', quals=[] (at pp.c:9831)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9831)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__1__Counter__overflow' (at pp.c:9833)
      FuncCall:  (at None)
        ID: name='CounterToLocalTimeC__1__Counter__overflow' (at pp.c:9835)
  FuncDef:  (at pp.c:9840)
    Decl: name='TransformCounterC__1__CounterFrom__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9840)
      FuncDecl: quals=None (at pp.c:9840)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__1__CounterFrom__overflow', quals=[] (at pp.c:9840)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9841)
      Compound:  (at pp.c:9843)
        UnaryOp: op='p++' (at pp.c:9844)
          ID: name='TransformCounterC__1__m_upper' (at pp.c:9844)
        If:  (at pp.c:9845)
          BinaryOp: op='==' (at pp.c:9845)
            BinaryOp: op='&' (at pp.c:9845)
              ID: name='TransformCounterC__1__m_upper' (at pp.c:9845)
              ID: name='TransformCounterC__1__OVERFLOW_MASK' (at pp.c:9845)
            Constant: type='int', value='0' (at pp.c:9845)
          Compound:  (at pp.c:9845)
            FuncCall:  (at None)
              ID: name='TransformCounterC__1__Counter__overflow' (at pp.c:9846)
  FuncDef:  (at pp.c:9852)
    Decl: name='Msp430UartP__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9852)
      FuncDecl: quals=None (at pp.c:9852)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430UartP__0__Counter__overflow', quals=[] (at pp.c:9852)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9854)
  FuncDef:  (at pp.c:9858)
    Decl: name='Msp430CounterC__0__Counter__overflow', quals=[], storage=['static', 'inline'] (at pp.c:9858)
      FuncDecl: quals=None (at pp.c:9858)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Counter__overflow', quals=[] (at pp.c:9858)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9858)
      FuncCall:  (at None)
        ID: name='Msp430UartP__0__Counter__overflow' (at pp.c:9860)
      FuncCall:  (at None)
        ID: name='TransformCounterC__1__CounterFrom__overflow' (at pp.c:9862)
      FuncCall:  (at None)
        ID: name='TransformCounterC__0__CounterFrom__overflow' (at pp.c:9864)
  FuncDef:  (at pp.c:9869)
    Decl: name='Msp430CounterC__0__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9869)
      FuncDecl: quals=None (at pp.c:9869)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Msp430Timer__overflow', quals=[] (at pp.c:9869)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9870)
      FuncCall:  (at None)
        ID: name='Msp430CounterC__0__Counter__overflow' (at pp.c:9871)
  FuncDef:  (at pp.c:9875)
    Decl: name='Msp430TimerP__1__Timer__overflow', quals=[], storage=['static', 'inline'] (at pp.c:9875)
      FuncDecl: quals=None (at pp.c:9875)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Timer__overflow', quals=[] (at pp.c:9875)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9875)
      FuncCall:  (at None)
        ID: name='Msp430CounterC__0__Msp430Timer__overflow' (at pp.c:9877)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430Timer__overflow' (at pp.c:9879)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Msp430Timer__overflow' (at pp.c:9881)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Timer__overflow' (at pp.c:9883)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__4__Timer__overflow' (at pp.c:9885)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Timer__overflow' (at pp.c:9887)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__6__Timer__overflow' (at pp.c:9889)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__7__Timer__overflow' (at pp.c:9891)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__8__Timer__overflow' (at pp.c:9893)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__9__Timer__overflow' (at pp.c:9895)
  FuncDef:  (at pp.c:9900)
    Decl: name='Msp430TimerP__1__Overflow__fired', quals=[], storage=['inline', 'static'] (at pp.c:9900)
      FuncDecl: quals=None (at pp.c:9900)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Overflow__fired', quals=[] (at pp.c:9900)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9901)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__1__Timer__overflow' (at pp.c:9902)
  FuncDef:  (at pp.c:9906)
    Decl: name='CC2420ControlP__SpiResource__request', quals=[], storage=['static', 'inline'] (at pp.c:9906)
      FuncDecl: quals=None (at pp.c:9906)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__SpiResource__request', quals=[] (at pp.c:9906)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:9906)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:9908)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:9908)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:9912)
        ID: name='__nesc_result' (at pp.c:9912)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__request' (at pp.c:9912)
          ExprList:  (at pp.c:9912)
            ID: name='CC2420SpiC__0__CLIENT_ID' (at pp.c:9912)
      Return:  (at pp.c:9916)
        ID: name='__nesc_result' (at pp.c:9916)
  FuncDef:  (at pp.c:9921)
    Decl: name='CC2420ControlP__Resource__request', quals=[], storage=['inline', 'static'] (at pp.c:9921)
      FuncDecl: quals=None (at pp.c:9921)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__Resource__request', quals=[] (at pp.c:9921)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:9923)
      Return:  (at pp.c:9924)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__SpiResource__request' (at pp.c:9924)
  FuncDef:  (at pp.c:9928)
    Decl: name='CC2420CsmaP__Resource__request', quals=[], storage=['static', 'inline'] (at pp.c:9928)
      FuncDecl: quals=None (at pp.c:9928)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__Resource__request', quals=[] (at pp.c:9928)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:9928)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:9930)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:9930)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:9934)
        ID: name='__nesc_result' (at pp.c:9934)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__Resource__request' (at pp.c:9934)
      Return:  (at pp.c:9938)
        ID: name='__nesc_result' (at pp.c:9938)
  FuncDef:  (at pp.c:9943)
    Decl: name='CC2420CsmaP__CC2420Power__startVRegDone', quals=[], storage=['inline', 'static'] (at pp.c:9943)
      FuncDecl: quals=None (at pp.c:9943)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__CC2420Power__startVRegDone', quals=[] (at pp.c:9943)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9945)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__Resource__request' (at pp.c:9946)
  FuncDef:  (at pp.c:9950)
    Decl: name='CC2420ControlP__CC2420Power__startVRegDone', quals=[], storage=['static', 'inline'] (at pp.c:9950)
      FuncDecl: quals=None (at pp.c:9950)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Power__startVRegDone', quals=[] (at pp.c:9950)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9950)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__CC2420Power__startVRegDone' (at pp.c:9952)
  FuncDef:  (at pp.c:9957)
    Decl: name='Msp430GpioC__7__HplGeneralIO__set', quals=[], storage=['static', 'inline'] (at pp.c:9957)
      FuncDecl: quals=None (at pp.c:9957)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__7__HplGeneralIO__set', quals=[] (at pp.c:9957)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9957)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__30__IO__set' (at pp.c:9959)
  FuncDef:  (at pp.c:9964)
    Decl: name='Msp430GpioC__7__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:9964)
      FuncDecl: quals=None (at pp.c:9964)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__7__GeneralIO__set', quals=[] (at pp.c:9964)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9966)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__7__HplGeneralIO__set' (at pp.c:9968)
  FuncDef:  (at pp.c:9972)
    Decl: name='CC2420ControlP__RSTN__set', quals=[], storage=['static', 'inline'] (at pp.c:9972)
      FuncDecl: quals=None (at pp.c:9972)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__RSTN__set', quals=[] (at pp.c:9972)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9972)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__7__GeneralIO__set' (at pp.c:9974)
  FuncDef:  (at pp.c:9979)
    Decl: name='Msp430GpioC__7__HplGeneralIO__clr', quals=[], storage=['static', 'inline'] (at pp.c:9979)
      FuncDecl: quals=None (at pp.c:9979)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__7__HplGeneralIO__clr', quals=[] (at pp.c:9979)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9979)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__30__IO__clr' (at pp.c:9981)
  FuncDef:  (at pp.c:9986)
    Decl: name='Msp430GpioC__7__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:9986)
      FuncDecl: quals=None (at pp.c:9986)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__7__GeneralIO__clr', quals=[] (at pp.c:9986)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9988)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__7__HplGeneralIO__clr' (at pp.c:9990)
  FuncDef:  (at pp.c:9994)
    Decl: name='CC2420ControlP__RSTN__clr', quals=[], storage=['static', 'inline'] (at pp.c:9994)
      FuncDecl: quals=None (at pp.c:9994)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__RSTN__clr', quals=[] (at pp.c:9994)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9994)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__7__GeneralIO__clr' (at pp.c:9996)
  FuncDef:  (at pp.c:10001)
    Decl: name='CC2420ControlP__StartupTimer__fired', quals=[], storage=['inline', 'static'] (at pp.c:10001)
      FuncDecl: quals=None (at pp.c:10001)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__StartupTimer__fired', quals=[] (at pp.c:10001)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10003)
      If:  (at pp.c:10004)
        BinaryOp: op='==' (at pp.c:10004)
          ID: name='CC2420ControlP__m_state' (at pp.c:10004)
          ID: name='CC2420ControlP__S_VREG_STARTING' (at pp.c:10004)
        Compound:  (at pp.c:10004)
          Assignment: op='=' (at pp.c:10005)
            ID: name='CC2420ControlP__m_state' (at pp.c:10005)
            ID: name='CC2420ControlP__S_VREG_STARTED' (at pp.c:10005)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__RSTN__clr' (at pp.c:10006)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__RSTN__set' (at pp.c:10007)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__CC2420Power__startVRegDone' (at pp.c:10008)
  FuncDef:  (at pp.c:10013)
    Decl: name='CC2420TransmitP__SpiResource__release', quals=[], storage=['static', 'inline'] (at pp.c:10013)
      FuncDecl: quals=None (at pp.c:10013)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__SpiResource__release', quals=[] (at pp.c:10013)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10013)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10015)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10015)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10019)
        ID: name='__nesc_result' (at pp.c:10019)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__release' (at pp.c:10019)
          ExprList:  (at pp.c:10019)
            ID: name='CC2420SpiC__3__CLIENT_ID' (at pp.c:10019)
      Return:  (at pp.c:10023)
        ID: name='__nesc_result' (at pp.c:10023)
  FuncDef:  (at pp.c:10028)
    Decl: name='CC2420TransmitP__releaseSpiResource', quals=[], storage=['inline', 'static'] (at pp.c:10028)
      FuncDecl: quals=None (at pp.c:10028)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__releaseSpiResource', quals=[] (at pp.c:10028)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10030)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__SpiResource__release' (at pp.c:10031)
      Return:  (at pp.c:10032)
        ID: name='SUCCESS' (at pp.c:10032)
  FuncDef:  (at pp.c:10036)
    Decl: name='GpioCaptureC__0__Capture__captureRisingEdge', quals=[], storage=['inline', 'static'] (at pp.c:10036)
      FuncDecl: quals=None (at pp.c:10036)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='GpioCaptureC__0__Capture__captureRisingEdge', quals=[] (at pp.c:10036)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10038)
      Return:  (at pp.c:10039)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__enableCapture' (at pp.c:10039)
          ExprList:  (at pp.c:10039)
            ID: name='MSP430TIMER_CM_RISING' (at pp.c:10039)
  FuncDef:  (at pp.c:10043)
    Decl: name='CC2420TransmitP__CaptureSFD__captureRisingEdge', quals=[], storage=['static', 'inline'] (at pp.c:10043)
      FuncDecl: quals=None (at pp.c:10043)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__CaptureSFD__captureRisingEdge', quals=[] (at pp.c:10043)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10043)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10045)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10045)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10049)
        ID: name='__nesc_result' (at pp.c:10049)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__Capture__captureRisingEdge' (at pp.c:10049)
      Return:  (at pp.c:10053)
        ID: name='__nesc_result' (at pp.c:10053)
  FuncDef:  (at pp.c:10058)
    Decl: name='CC2420TransmitP__SFLUSHTX__strobe', quals=[], storage=['static', 'inline'] (at pp.c:10058)
      FuncDecl: quals=None (at pp.c:10058)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__SFLUSHTX__strobe', quals=[] (at pp.c:10058)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:10058)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10060)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10060)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10064)
        ID: name='__nesc_result' (at pp.c:10064)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Strobe__strobe' (at pp.c:10064)
          ExprList:  (at pp.c:10064)
            ID: name='CC2420_SFLUSHTX' (at pp.c:10064)
      Return:  (at pp.c:10068)
        ID: name='__nesc_result' (at pp.c:10068)
  FuncDef:  (at pp.c:10073)
    Decl: name='TransformAlarmC__0__Counter__get', quals=[], storage=['static', 'inline'] (at pp.c:10073)
      FuncDecl: quals=None (at pp.c:10073)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Counter__get', quals=[] (at pp.c:10073)
          IdentifierType: names=['TransformAlarmC__0__Counter__size_type'] (at None)
    Compound:  (at pp.c:10073)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10075)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10075)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10079)
        ID: name='__nesc_result' (at pp.c:10079)
        FuncCall:  (at None)
          ID: name='TransformCounterC__0__Counter__get' (at pp.c:10079)
      Return:  (at pp.c:10083)
        ID: name='__nesc_result' (at pp.c:10083)
  FuncDef:  (at pp.c:10088)
    Decl: name='TransformAlarmC__0__Alarm__getNow', quals=[], storage=['inline', 'static'] (at pp.c:10088)
      FuncDecl: quals=None (at pp.c:10088)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Alarm__getNow', quals=[] (at pp.c:10088)
          IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
    Compound:  (at pp.c:10089)
      Return:  (at pp.c:10090)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__0__Counter__get' (at pp.c:10090)
  FuncDef:  (at pp.c:10094)
    Decl: name='TransformAlarmC__0__Alarm__start', quals=[], storage=['inline', 'static'] (at pp.c:10094)
      FuncDecl: quals=None (at pp.c:10094)
        ParamList:  (at pp.c:10094)
          Decl: name='dt', quals=[], storage=[] (at pp.c:10094)
            TypeDecl: declname='dt', quals=[] (at pp.c:10094)
              IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Alarm__start', quals=[] (at pp.c:10094)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10095)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__Alarm__startAt' (at pp.c:10096)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='TransformAlarmC__0__Alarm__getNow' (at pp.c:10096)
          ID: name='dt' (at pp.c:10096)
  FuncDef:  (at pp.c:10100)
    Decl: name='CC2420TransmitP__BackoffTimer__start', quals=[], storage=['static', 'inline'] (at pp.c:10100)
      FuncDecl: quals=None (at pp.c:10100)
        ParamList:  (at pp.c:10100)
          Decl: name='dt', quals=[], storage=[] (at pp.c:10100)
            TypeDecl: declname='dt', quals=[] (at pp.c:10100)
              IdentifierType: names=['CC2420TransmitP__BackoffTimer__size_type'] (at None)
        TypeDecl: declname='CC2420TransmitP__BackoffTimer__start', quals=[] (at pp.c:10100)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10100)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__Alarm__start' (at pp.c:10102)
        ExprList:  (at pp.c:10102)
          ID: name='dt' (at pp.c:10102)
  FuncDef:  (at pp.c:10107)
    Decl: name='HplMsp430GeneralIOP__4__IO__getRaw', quals=[], storage=['inline', 'static'] (at pp.c:10107)
      FuncDecl: quals=None (at pp.c:10107)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__4__IO__getRaw', quals=[] (at pp.c:10107)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:10109)
      Return:  (at pp.c:10111)
        BinaryOp: op='&' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:10111)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='32U' (at pp.c:10111)
          BinaryOp: op='<<' (at pp.c:10111)
            Constant: type='int', value='0x01' (at pp.c:10111)
            Constant: type='int', value='4' (at pp.c:10111)
  FuncDef:  (at pp.c:10115)
    Decl: name='HplMsp430GeneralIOP__4__IO__get', quals=[], storage=['inline', 'static'] (at pp.c:10115)
      FuncDecl: quals=None (at pp.c:10115)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__4__IO__get', quals=[] (at pp.c:10115)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10117)
      Return:  (at pp.c:10119)
        BinaryOp: op='!=' (at None)
          FuncCall:  (at None)
            ID: name='HplMsp430GeneralIOP__4__IO__getRaw' (at pp.c:10119)
          Constant: type='int', value='0' (at pp.c:10119)
  FuncDef:  (at pp.c:10123)
    Decl: name='Msp430GpioC__3__HplGeneralIO__get', quals=[], storage=['static', 'inline'] (at pp.c:10123)
      FuncDecl: quals=None (at pp.c:10123)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__3__HplGeneralIO__get', quals=[] (at pp.c:10123)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10123)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10125)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10125)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10129)
        ID: name='__nesc_result' (at pp.c:10129)
        FuncCall:  (at None)
          ID: name='HplMsp430GeneralIOP__4__IO__get' (at pp.c:10129)
      Return:  (at pp.c:10133)
        ID: name='__nesc_result' (at pp.c:10133)
  FuncDef:  (at pp.c:10138)
    Decl: name='Msp430GpioC__3__GeneralIO__get', quals=[], storage=['inline', 'static'] (at pp.c:10138)
      FuncDecl: quals=None (at pp.c:10138)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__3__GeneralIO__get', quals=[] (at pp.c:10138)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10140)
      Return:  (at pp.c:10142)
        FuncCall:  (at None)
          ID: name='Msp430GpioC__3__HplGeneralIO__get' (at pp.c:10142)
  FuncDef:  (at pp.c:10146)
    Decl: name='CC2420TransmitP__CCA__get', quals=[], storage=['static', 'inline'] (at pp.c:10146)
      FuncDecl: quals=None (at pp.c:10146)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__CCA__get', quals=[] (at pp.c:10146)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10146)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10148)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10148)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10152)
        ID: name='__nesc_result' (at pp.c:10152)
        FuncCall:  (at None)
          ID: name='Msp430GpioC__3__GeneralIO__get' (at pp.c:10152)
      Return:  (at pp.c:10156)
        ID: name='__nesc_result' (at pp.c:10156)
  FuncDef:  (at pp.c:10161)
    Decl: name='CC2420TransmitP__BackoffTimer__fired', quals=[], storage=['inline', 'static'] (at pp.c:10161)
      FuncDecl: quals=None (at pp.c:10161)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__BackoffTimer__fired', quals=[] (at pp.c:10161)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10163)
      Compound:  (at pp.c:10166)
        Switch:  (at pp.c:10167)
          ID: name='CC2420TransmitP__m_state' (at pp.c:10167)
          Compound:  (at pp.c:10167)
            Case:  (at pp.c:10169)
              ID: name='CC2420TransmitP__S_SAMPLE_CCA' (at pp.c:10169)
              If:  (at pp.c:10172)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__CCA__get' (at pp.c:10172)
                Compound:  (at pp.c:10172)
                  Assignment: op='=' (at pp.c:10173)
                    ID: name='CC2420TransmitP__m_state' (at pp.c:10173)
                    ID: name='CC2420TransmitP__S_BEGIN_TRANSMIT' (at pp.c:10173)
                  FuncCall:  (at None)
                    ID: name='CC2420TransmitP__BackoffTimer__start' (at pp.c:10174)
                    ExprList:  (at pp.c:10174)
                      ID: name='CC2420_TIME_ACK_TURNAROUND' (at pp.c:10174)
                Compound:  (at pp.c:10176)
                  FuncCall:  (at None)
                    ID: name='CC2420TransmitP__congestionBackoff' (at pp.c:10177)
            Break:  (at pp.c:10179)
            Case:  (at pp.c:10181)
              ID: name='CC2420TransmitP__S_BEGIN_TRANSMIT' (at pp.c:10181)
              Case:  (at pp.c:10182)
                ID: name='CC2420TransmitP__S_CANCEL' (at pp.c:10182)
                If:  (at pp.c:10183)
                  BinaryOp: op='==' (at None)
                    FuncCall:  (at None)
                      ID: name='CC2420TransmitP__acquireSpiResource' (at pp.c:10183)
                    ID: name='SUCCESS' (at pp.c:10183)
                  Compound:  (at pp.c:10183)
                    FuncCall:  (at None)
                      ID: name='CC2420TransmitP__attemptSend' (at pp.c:10184)
            Break:  (at pp.c:10186)
            Case:  (at pp.c:10188)
              ID: name='CC2420TransmitP__S_ACK_WAIT' (at pp.c:10188)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__signalDone' (at pp.c:10189)
                ExprList:  (at pp.c:10189)
                  ID: name='SUCCESS' (at pp.c:10189)
            Break:  (at pp.c:10190)
            Case:  (at pp.c:10192)
              ID: name='CC2420TransmitP__S_SFD' (at pp.c:10192)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__SFLUSHTX__strobe' (at pp.c:10195)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__CaptureSFD__captureRisingEdge' (at pp.c:10196)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__releaseSpiResource' (at pp.c:10197)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__signalDone' (at pp.c:10198)
              ExprList:  (at pp.c:10198)
                ID: name='ERETRY' (at pp.c:10198)
            Break:  (at pp.c:10199)
            Default:  (at pp.c:10201)
              Break:  (at pp.c:10202)
  FuncDef:  (at pp.c:10208)
    Decl: name='TransformAlarmC__0__Alarm__fired', quals=[], storage=['static', 'inline'] (at pp.c:10208)
      FuncDecl: quals=None (at pp.c:10208)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Alarm__fired', quals=[] (at pp.c:10208)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10208)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__BackoffTimer__fired' (at pp.c:10210)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__StartupTimer__fired' (at pp.c:10212)
  FuncDef:  (at pp.c:10217)
    Decl: name='TransformAlarmC__0__AlarmFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:10217)
      FuncDecl: quals=None (at pp.c:10217)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__AlarmFrom__fired', quals=[] (at pp.c:10217)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10218)
      Compound:  (at pp.c:10220)
        If:  (at pp.c:10221)
          BinaryOp: op='==' (at pp.c:10221)
            ID: name='TransformAlarmC__0__m_dt' (at pp.c:10221)
            Constant: type='int', value='0' (at pp.c:10221)
          Compound:  (at pp.c:10222)
            FuncCall:  (at None)
              ID: name='TransformAlarmC__0__Alarm__fired' (at pp.c:10223)
          Compound:  (at pp.c:10226)
            FuncCall:  (at None)
              ID: name='TransformAlarmC__0__set_alarm' (at pp.c:10227)
  FuncDef:  (at pp.c:10233)
    Decl: name='Msp430AlarmC__0__Alarm__fired', quals=[], storage=['static', 'inline'] (at pp.c:10233)
      FuncDecl: quals=None (at pp.c:10233)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Alarm__fired', quals=[] (at pp.c:10233)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10233)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__AlarmFrom__fired' (at pp.c:10235)
  FuncDef:  (at pp.c:10240)
    Decl: name='Msp430TimerCapComP__3__Control__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:10240)
      FuncDecl: quals=None (at pp.c:10240)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Control__disableEvents', quals=[] (at pp.c:10240)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10241)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:10242)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='386U' (at pp.c:10242)
        UnaryOp: op='~' (at pp.c:10242)
          Constant: type='int', value='0x0010' (at pp.c:10242)
  FuncDef:  (at pp.c:10246)
    Decl: name='Msp430AlarmC__0__Msp430TimerControl__disableEvents', quals=[], storage=['static', 'inline'] (at pp.c:10246)
      FuncDecl: quals=None (at pp.c:10246)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__disableEvents', quals=[] (at pp.c:10246)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10246)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Control__disableEvents' (at pp.c:10248)
  FuncDef:  (at pp.c:10253)
    Decl: name='Msp430AlarmC__0__Msp430Compare__fired', quals=[], storage=['inline', 'static'] (at pp.c:10253)
      FuncDecl: quals=None (at pp.c:10253)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__fired', quals=[] (at pp.c:10253)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10254)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430TimerControl__disableEvents' (at pp.c:10255)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Alarm__fired' (at pp.c:10256)
  FuncDef:  (at pp.c:10260)
    Decl: name='Msp430TimerCapComP__3__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:10260)
      FuncDecl: quals=None (at pp.c:10260)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Compare__fired', quals=[] (at pp.c:10260)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10260)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430Compare__fired' (at pp.c:10262)
  FuncDef:  (at pp.c:10267)
    Decl: name='Msp430TimerCapComP__3__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:10267)
      FuncDecl: quals=None (at pp.c:10267)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Capture__getEvent', quals=[] (at pp.c:10267)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:10268)
      Return:  (at pp.c:10269)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:10269)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='402U' (at pp.c:10269)
  FuncDef:  (at pp.c:10273)
    Decl: name='Msp430TimerCapComP__3__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:10273)
      FuncDecl: quals=None (at pp.c:10273)
        ParamList:  (at pp.c:10273)
          Decl: name='n', quals=[], storage=[] (at pp.c:10273)
            TypeDecl: declname='n', quals=[] (at pp.c:10273)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Capture__default__captured', quals=[] (at pp.c:10273)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10274)
  FuncDef:  (at pp.c:10278)
    Decl: name='Msp430TimerCapComP__3__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:10278)
      FuncDecl: quals=None (at pp.c:10278)
        ParamList:  (at pp.c:10278)
          Decl: name='time', quals=[], storage=[] (at pp.c:10278)
            TypeDecl: declname='time', quals=[] (at pp.c:10278)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Capture__captured', quals=[] (at pp.c:10278)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10278)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Capture__default__captured' (at pp.c:10280)
        ExprList:  (at pp.c:10280)
          ID: name='time' (at pp.c:10280)
  FuncDef:  (at pp.c:10285)
    Decl: name='Msp430TimerCapComP__3__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:10285)
      FuncDecl: quals=None (at pp.c:10285)
        ParamList:  (at pp.c:10285)
          Decl: name='x', quals=[], storage=[] (at pp.c:10285)
            TypeDecl: declname='x', quals=[] (at pp.c:10285)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__int2CC', quals=[] (at pp.c:10285)
          IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
    Compound:  (at pp.c:10287)
      Decl: name='c', quals=[], storage=[] (at pp.c:10296)
        TypeDecl: declname='c', quals=[] (at pp.c:10296)
          Union: name='Msp430TimerCapComP__3____nesc_unnamed4383', packed=False (at pp.c:10289)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:10291)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:10293)
                IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
        ExprList:  (at pp.c:10296)
          Assignment: op='=' (at pp.c:10296)
            StructRef: type='.' (at pp.c:10296)
              ID: name='f' (at pp.c:10296)
            ID: name='x' (at pp.c:10296)
      Return:  (at pp.c:10299)
        StructRef: type='.' (at pp.c:10299)
          ID: name='c' (at pp.c:10299)
          ID: name='t' (at pp.c:10299)
  FuncDef:  (at pp.c:10303)
    Decl: name='Msp430TimerCapComP__3__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:10303)
      FuncDecl: quals=None (at pp.c:10303)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Control__getControl', quals=[] (at pp.c:10303)
          IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
    Compound:  (at pp.c:10304)
      Return:  (at pp.c:10305)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__3__int2CC' (at pp.c:10305)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:10305)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='386U' (at pp.c:10305)
  FuncDef:  (at pp.c:10309)
    Decl: name='Msp430TimerCapComP__3__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:10309)
      FuncDecl: quals=None (at pp.c:10309)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Event__fired', quals=[] (at pp.c:10309)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10310)
      If:  (at pp.c:10311)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__3__Control__getControl' (at pp.c:10311)
          ID: name='cap' (at pp.c:10311)
        Compound:  (at pp.c:10311)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__3__Capture__captured' (at pp.c:10312)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__3__Capture__getEvent' (at pp.c:10312)
        Compound:  (at pp.c:10314)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__3__Compare__fired' (at pp.c:10316)
  FuncDef:  (at pp.c:10321)
    Decl: name='Msp430CounterC__0__Msp430Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:10321)
      FuncDecl: quals=None (at pp.c:10321)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Msp430Timer__get', quals=[] (at pp.c:10321)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:10321)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10323)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10323)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10327)
        ID: name='__nesc_result' (at pp.c:10327)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__get' (at pp.c:10327)
      Return:  (at pp.c:10331)
        ID: name='__nesc_result' (at pp.c:10331)
  FuncDef:  (at pp.c:10336)
    Decl: name='Msp430CounterC__0__Counter__get', quals=[], storage=['inline', 'static'] (at pp.c:10336)
      FuncDecl: quals=None (at pp.c:10336)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Counter__get', quals=[] (at pp.c:10336)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:10337)
      Return:  (at pp.c:10338)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__0__Msp430Timer__get' (at pp.c:10338)
  FuncDef:  (at pp.c:10342)
    Decl: name='TransformCounterC__0__CounterFrom__get', quals=[], storage=['static', 'inline'] (at pp.c:10342)
      FuncDecl: quals=None (at pp.c:10342)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__0__CounterFrom__get', quals=[] (at pp.c:10342)
          IdentifierType: names=['TransformCounterC__0__CounterFrom__size_type'] (at None)
    Compound:  (at pp.c:10342)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10344)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10344)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10348)
        ID: name='__nesc_result' (at pp.c:10348)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__0__Counter__get' (at pp.c:10348)
      Return:  (at pp.c:10352)
        ID: name='__nesc_result' (at pp.c:10352)
  FuncDef:  (at pp.c:10357)
    Decl: name='Msp430TimerP__1__Timer__isOverflowPending', quals=[], storage=['inline', 'static'] (at pp.c:10357)
      FuncDecl: quals=None (at pp.c:10357)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Timer__isOverflowPending', quals=[] (at pp.c:10357)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10358)
      Return:  (at pp.c:10359)
        BinaryOp: op='&' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:10359)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint16_t'] (at None)
              Constant: type='int', value='384U' (at pp.c:10359)
          Constant: type='int', value='1U' (at pp.c:10359)
  FuncDef:  (at pp.c:10363)
    Decl: name='Msp430CounterC__0__Msp430Timer__isOverflowPending', quals=[], storage=['static', 'inline'] (at pp.c:10363)
      FuncDecl: quals=None (at pp.c:10363)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Msp430Timer__isOverflowPending', quals=[] (at pp.c:10363)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10363)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10365)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10365)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10369)
        ID: name='__nesc_result' (at pp.c:10369)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__isOverflowPending' (at pp.c:10369)
      Return:  (at pp.c:10373)
        ID: name='__nesc_result' (at pp.c:10373)
  FuncDef:  (at pp.c:10378)
    Decl: name='Msp430CounterC__0__Counter__isOverflowPending', quals=[], storage=['inline', 'static'] (at pp.c:10378)
      FuncDecl: quals=None (at pp.c:10378)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Counter__isOverflowPending', quals=[] (at pp.c:10378)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10379)
      Return:  (at pp.c:10380)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__0__Msp430Timer__isOverflowPending' (at pp.c:10380)
  FuncDef:  (at pp.c:10384)
    Decl: name='TransformCounterC__0__CounterFrom__isOverflowPending', quals=[], storage=['static', 'inline'] (at pp.c:10384)
      FuncDecl: quals=None (at pp.c:10384)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__0__CounterFrom__isOverflowPending', quals=[] (at pp.c:10384)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10384)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10386)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10386)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10390)
        ID: name='__nesc_result' (at pp.c:10390)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__0__Counter__isOverflowPending' (at pp.c:10390)
      Return:  (at pp.c:10394)
        ID: name='__nesc_result' (at pp.c:10394)
  FuncDef:  (at pp.c:10399)
    Decl: name='Msp430TimerCapComP__3__Control__enableEvents', quals=[], storage=['inline', 'static'] (at pp.c:10399)
      FuncDecl: quals=None (at pp.c:10399)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Control__enableEvents', quals=[] (at pp.c:10399)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10400)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:10401)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='386U' (at pp.c:10401)
        Constant: type='int', value='0x0010' (at pp.c:10401)
  FuncDef:  (at pp.c:10405)
    Decl: name='Msp430AlarmC__0__Msp430TimerControl__enableEvents', quals=[], storage=['static', 'inline'] (at pp.c:10405)
      FuncDecl: quals=None (at pp.c:10405)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__enableEvents', quals=[] (at pp.c:10405)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10405)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Control__enableEvents' (at pp.c:10407)
  FuncDef:  (at pp.c:10412)
    Decl: name='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[], storage=['inline', 'static'] (at pp.c:10412)
      FuncDecl: quals=None (at pp.c:10412)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[] (at pp.c:10412)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10413)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:10414)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='386U' (at pp.c:10414)
        UnaryOp: op='~' (at pp.c:10414)
          Constant: type='int', value='0x0001' (at pp.c:10414)
  FuncDef:  (at pp.c:10418)
    Decl: name='Msp430AlarmC__0__Msp430TimerControl__clearPendingInterrupt', quals=[], storage=['static', 'inline'] (at pp.c:10418)
      FuncDecl: quals=None (at pp.c:10418)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__clearPendingInterrupt', quals=[] (at pp.c:10418)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10418)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Control__clearPendingInterrupt' (at pp.c:10420)
  FuncDef:  (at pp.c:10425)
    Decl: name='Msp430TimerCapComP__3__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:10425)
      FuncDecl: quals=None (at pp.c:10425)
        ParamList:  (at pp.c:10425)
          Decl: name='x', quals=[], storage=[] (at pp.c:10425)
            TypeDecl: declname='x', quals=[] (at pp.c:10425)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEvent', quals=[] (at pp.c:10425)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10426)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:10427)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='402U' (at pp.c:10427)
        ID: name='x' (at pp.c:10427)
  FuncDef:  (at pp.c:10431)
    Decl: name='Msp430AlarmC__0__Msp430Compare__setEvent', quals=[], storage=['static', 'inline'] (at pp.c:10431)
      FuncDecl: quals=None (at pp.c:10431)
        ParamList:  (at pp.c:10431)
          Decl: name='time', quals=[], storage=[] (at pp.c:10431)
            TypeDecl: declname='time', quals=[] (at pp.c:10431)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__setEvent', quals=[] (at pp.c:10431)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10431)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Compare__setEvent' (at pp.c:10433)
        ExprList:  (at pp.c:10433)
          ID: name='time' (at pp.c:10433)
  FuncDef:  (at pp.c:10438)
    Decl: name='Msp430TimerCapComP__3__Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:10438)
      FuncDecl: quals=None (at pp.c:10438)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Timer__get', quals=[] (at pp.c:10438)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:10438)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10440)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10440)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10444)
        ID: name='__nesc_result' (at pp.c:10444)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__get' (at pp.c:10444)
      Return:  (at pp.c:10448)
        ID: name='__nesc_result' (at pp.c:10448)
  FuncDef:  (at pp.c:10453)
    Decl: name='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[], storage=['inline', 'static'] (at pp.c:10453)
      FuncDecl: quals=None (at pp.c:10453)
        ParamList:  (at pp.c:10453)
          Decl: name='x', quals=[], storage=[] (at pp.c:10453)
            TypeDecl: declname='x', quals=[] (at pp.c:10453)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[] (at pp.c:10453)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10454)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:10455)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='402U' (at pp.c:10455)
        BinaryOp: op='+' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__3__Timer__get' (at pp.c:10455)
          ID: name='x' (at pp.c:10455)
  FuncDef:  (at pp.c:10459)
    Decl: name='Msp430AlarmC__0__Msp430Compare__setEventFromNow', quals=[], storage=['static', 'inline'] (at pp.c:10459)
      FuncDecl: quals=None (at pp.c:10459)
        ParamList:  (at pp.c:10459)
          Decl: name='delta', quals=[], storage=[] (at pp.c:10459)
            TypeDecl: declname='delta', quals=[] (at pp.c:10459)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__setEventFromNow', quals=[] (at pp.c:10459)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10459)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Compare__setEventFromNow' (at pp.c:10461)
        ExprList:  (at pp.c:10461)
          ID: name='delta' (at pp.c:10461)
  FuncDef:  (at pp.c:10466)
    Decl: name='Msp430AlarmC__0__Msp430Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:10466)
      FuncDecl: quals=None (at pp.c:10466)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430Timer__get', quals=[] (at pp.c:10466)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:10466)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10468)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10468)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10472)
        ID: name='__nesc_result' (at pp.c:10472)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__get' (at pp.c:10472)
      Return:  (at pp.c:10476)
        ID: name='__nesc_result' (at pp.c:10476)
  FuncDef:  (at pp.c:10481)
    Decl: name='Msp430AlarmC__0__Alarm__startAt', quals=[], storage=['inline', 'static'] (at pp.c:10481)
      FuncDecl: quals=None (at pp.c:10481)
        ParamList:  (at pp.c:10481)
          Decl: name='t0', quals=[], storage=[] (at pp.c:10481)
            TypeDecl: declname='t0', quals=[] (at pp.c:10481)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:10481)
            TypeDecl: declname='dt', quals=[] (at pp.c:10481)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Alarm__startAt', quals=[] (at pp.c:10481)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10482)
      Compound:  (at pp.c:10484)
        Decl: name='now', quals=[], storage=[] (at pp.c:10485)
          TypeDecl: declname='now', quals=[] (at pp.c:10485)
            IdentifierType: names=['uint16_t'] (at None)
          FuncCall:  (at None)
            ID: name='Msp430AlarmC__0__Msp430Timer__get' (at pp.c:10485)
        Decl: name='elapsed', quals=[], storage=[] (at pp.c:10486)
          TypeDecl: declname='elapsed', quals=[] (at pp.c:10486)
            IdentifierType: names=['uint16_t'] (at None)
          BinaryOp: op='-' (at pp.c:10486)
            ID: name='now' (at pp.c:10486)
            ID: name='t0' (at pp.c:10486)
        If:  (at pp.c:10489)
          BinaryOp: op='>=' (at pp.c:10489)
            ID: name='elapsed' (at pp.c:10489)
            ID: name='dt' (at pp.c:10489)
          Compound:  (at pp.c:10490)
            FuncCall:  (at None)
              ID: name='Msp430AlarmC__0__Msp430Compare__setEventFromNow' (at pp.c:10491)
              ExprList:  (at pp.c:10491)
                Constant: type='int', value='2' (at pp.c:10491)
          Compound:  (at pp.c:10494)
            Decl: name='remaining', quals=[], storage=[] (at pp.c:10495)
              TypeDecl: declname='remaining', quals=[] (at pp.c:10495)
                IdentifierType: names=['uint16_t'] (at None)
              BinaryOp: op='-' (at pp.c:10495)
                ID: name='dt' (at pp.c:10495)
                ID: name='elapsed' (at pp.c:10495)
            If:  (at pp.c:10498)
              BinaryOp: op='<=' (at pp.c:10498)
                ID: name='remaining' (at pp.c:10498)
                Constant: type='int', value='2' (at pp.c:10498)
              Compound:  (at pp.c:10498)
                FuncCall:  (at None)
                  ID: name='Msp430AlarmC__0__Msp430Compare__setEventFromNow' (at pp.c:10499)
                  ExprList:  (at pp.c:10499)
                    Constant: type='int', value='2' (at pp.c:10499)
              Compound:  (at pp.c:10501)
                FuncCall:  (at None)
                  ID: name='Msp430AlarmC__0__Msp430Compare__setEvent' (at pp.c:10503)
                  ExprList:  (at pp.c:10503)
                    BinaryOp: op='+' (at pp.c:10503)
                      ID: name='now' (at pp.c:10503)
                      ID: name='remaining' (at pp.c:10503)
        FuncCall:  (at None)
          ID: name='Msp430AlarmC__0__Msp430TimerControl__clearPendingInterrupt' (at pp.c:10507)
        FuncCall:  (at None)
          ID: name='Msp430AlarmC__0__Msp430TimerControl__enableEvents' (at pp.c:10508)
  FuncDef:  (at pp.c:10513)
    Decl: name='TransformAlarmC__0__AlarmFrom__startAt', quals=[], storage=['static', 'inline'] (at pp.c:10513)
      FuncDecl: quals=None (at pp.c:10513)
        ParamList:  (at pp.c:10513)
          Decl: name='t0', quals=[], storage=[] (at pp.c:10513)
            TypeDecl: declname='t0', quals=[] (at pp.c:10513)
              IdentifierType: names=['TransformAlarmC__0__AlarmFrom__size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:10513)
            TypeDecl: declname='dt', quals=[] (at pp.c:10513)
              IdentifierType: names=['TransformAlarmC__0__AlarmFrom__size_type'] (at None)
        TypeDecl: declname='TransformAlarmC__0__AlarmFrom__startAt', quals=[] (at pp.c:10513)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10513)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Alarm__startAt' (at pp.c:10515)
        ExprList:  (at pp.c:10515)
          ID: name='t0' (at pp.c:10515)
          ID: name='dt' (at pp.c:10515)
  FuncDef:  (at pp.c:10520)
    Decl: name='__nesc_ntoh_leuint8', quals=[], storage=['__inline', 'static'] (at pp.c:10520)
      FuncDecl: quals=None (at pp.c:10520)
        ParamList:  (at pp.c:10520)
          Decl: name='source', quals=['const'], storage=[] (at pp.c:10520)
            PtrDecl: quals=[] (at pp.c:10520)
              TypeDecl: declname='source', quals=['const'] (at pp.c:10520)
                IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_ntoh_leuint8', quals=[] (at pp.c:10520)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:10522)
      Decl: name='base', quals=['const'], storage=[] (at pp.c:10523)
        PtrDecl: quals=[] (at pp.c:10523)
          TypeDecl: declname='base', quals=['const'] (at pp.c:10523)
            IdentifierType: names=['uint8_t'] (at None)
        ID: name='source' (at pp.c:10523)
      Return:  (at pp.c:10526)
        ArrayRef:  (at pp.c:10526)
          ID: name='base' (at pp.c:10526)
          Constant: type='int', value='0' (at pp.c:10526)
  FuncDef:  (at pp.c:10530)
    Decl: name='CC2420ActiveMessageP__RadioBackoff__default__requestCongestionBackoff', quals=[], storage=['inline', 'static'] (at pp.c:10530)
      FuncDecl: quals=None (at pp.c:10530)
        ParamList:  (at pp.c:10530)
          Decl: name='id', quals=[], storage=[] (at pp.c:10530)
            TypeDecl: declname='id', quals=[] (at pp.c:10530)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:10531)
            PtrDecl: quals=[] (at pp.c:10531)
              TypeDecl: declname='msg', quals=[] (at pp.c:10531)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__default__requestCongestionBackoff', quals=[] (at pp.c:10530)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10533)
  FuncDef:  (at pp.c:10537)
    Decl: name='CC2420ActiveMessageP__RadioBackoff__requestCongestionBackoff', quals=[], storage=['static', 'inline'] (at pp.c:10537)
      FuncDecl: quals=None (at pp.c:10537)
        ParamList:  (at pp.c:10537)
          Decl: name='arg_0x102533d60', quals=[], storage=[] (at pp.c:10537)
            TypeDecl: declname='arg_0x102533d60', quals=[] (at pp.c:10537)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:10537)
            PtrDecl: quals=[] (at pp.c:10537)
              TypeDecl: declname='msg', quals=[] (at pp.c:10537)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__requestCongestionBackoff', quals=[] (at pp.c:10537)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10537)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__RadioBackoff__default__requestCongestionBackoff' (at pp.c:10539)
        ExprList:  (at pp.c:10539)
          ID: name='arg_0x102533d60' (at pp.c:10539)
          ID: name='msg' (at pp.c:10539)
  FuncDef:  (at pp.c:10544)
    Decl: name='CC2420ActiveMessageP__SubBackoff__requestCongestionBackoff', quals=[], storage=['inline', 'static'] (at pp.c:10544)
      FuncDecl: quals=None (at pp.c:10544)
        ParamList:  (at pp.c:10544)
          Decl: name='msg', quals=[], storage=[] (at pp.c:10544)
            PtrDecl: quals=[] (at pp.c:10544)
              TypeDecl: declname='msg', quals=[] (at pp.c:10544)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__SubBackoff__requestCongestionBackoff', quals=[] (at pp.c:10544)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10546)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__RadioBackoff__requestCongestionBackoff' (at pp.c:10547)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='__nesc_ntoh_leuint8' (at pp.c:10547)
            ExprList:  (at None)
              StructRef: type='.' (at None)
                StructRef: type='->' (at None)
                  Cast:  (at None)
                    Typename: quals=[] (at None)
                      PtrDecl: quals=[] (at pp.c:10547)
                        TypeDecl: declname=None, quals=[] (at None)
                          IdentifierType: names=['cc2420_header_t'] (at None)
                    BinaryOp: op='-' (at None)
                      BinaryOp: op='+' (at None)
                        Cast:  (at None)
                          Typename: quals=[] (at None)
                            PtrDecl: quals=[] (at pp.c:10547)
                              TypeDecl: declname=None, quals=[] (at None)
                                IdentifierType: names=['uint8_t'] (at None)
                          ID: name='msg' (at pp.c:10547)
                        Cast:  (at None)
                          Typename: quals=[] (at None)
                            TypeDecl: declname=None, quals=[] (at None)
                              IdentifierType: names=['size_t'] (at None)
                          UnaryOp: op='&' (at None)
                            StructRef: type='->' (at None)
                              Cast:  (at None)
                                Typename: quals=[] (at None)
                                  PtrDecl: quals=[] (at pp.c:10547)
                                    TypeDecl: declname=None, quals=[] (at None)
                                      IdentifierType: names=['message_t'] (at None)
                                Constant: type='int', value='0' (at pp.c:10547)
                              ID: name='data' (at pp.c:10547)
                      UnaryOp: op='sizeof' (at pp.c:10547)
                        Typename: quals=[] (at None)
                          TypeDecl: declname=None, quals=[] (at None)
                            IdentifierType: names=['cc2420_header_t'] (at None)
                  ID: name='type' (at pp.c:10547)
                ID: name='nxdata' (at pp.c:10547)
          ID: name='msg' (at pp.c:10547)
  FuncDef:  (at pp.c:10551)
    Decl: name='CC2420CsmaP__RadioBackoff__requestCongestionBackoff', quals=[], storage=['static', 'inline'] (at pp.c:10551)
      FuncDecl: quals=None (at pp.c:10551)
        ParamList:  (at pp.c:10551)
          Decl: name='msg', quals=[], storage=[] (at pp.c:10551)
            PtrDecl: quals=[] (at pp.c:10551)
              TypeDecl: declname='msg', quals=[] (at pp.c:10551)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__RadioBackoff__requestCongestionBackoff', quals=[] (at pp.c:10551)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10551)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__SubBackoff__requestCongestionBackoff' (at pp.c:10553)
        ExprList:  (at pp.c:10553)
          ID: name='msg' (at pp.c:10553)
  FuncDef:  (at pp.c:10558)
    Decl: name='RandomMlcgC__Random__rand16', quals=[], storage=['inline', 'static'] (at pp.c:10558)
      FuncDecl: quals=None (at pp.c:10558)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RandomMlcgC__Random__rand16', quals=[] (at pp.c:10558)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:10560)
      Return:  (at pp.c:10561)
        Cast:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['uint16_t'] (at None)
          FuncCall:  (at None)
            ID: name='RandomMlcgC__Random__rand32' (at pp.c:10561)
  FuncDef:  (at pp.c:10565)
    Decl: name='CC2420CsmaP__Random__rand16', quals=[], storage=['static', 'inline'] (at pp.c:10565)
      FuncDecl: quals=None (at pp.c:10565)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__Random__rand16', quals=[] (at pp.c:10565)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:10565)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10567)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10567)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10571)
        ID: name='__nesc_result' (at pp.c:10571)
        FuncCall:  (at None)
          ID: name='RandomMlcgC__Random__rand16' (at pp.c:10571)
      Return:  (at pp.c:10575)
        ID: name='__nesc_result' (at pp.c:10575)
  FuncDef:  (at pp.c:10580)
    Decl: name='CC2420TransmitP__RadioBackoff__setCongestionBackoff', quals=[], storage=['inline', 'static'] (at pp.c:10580)
      FuncDecl: quals=None (at pp.c:10580)
        ParamList:  (at pp.c:10580)
          Decl: name='backoffTime', quals=[], storage=[] (at pp.c:10580)
            TypeDecl: declname='backoffTime', quals=[] (at pp.c:10580)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__RadioBackoff__setCongestionBackoff', quals=[] (at pp.c:10580)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10582)
      Assignment: op='=' (at pp.c:10583)
        ID: name='CC2420TransmitP__myCongestionBackoff' (at pp.c:10583)
        BinaryOp: op='+' (at pp.c:10583)
          ID: name='backoffTime' (at pp.c:10583)
          Constant: type='int', value='1' (at pp.c:10583)
  FuncDef:  (at pp.c:10587)
    Decl: name='CC2420CsmaP__SubBackoff__setCongestionBackoff', quals=[], storage=['static', 'inline'] (at pp.c:10587)
      FuncDecl: quals=None (at pp.c:10587)
        ParamList:  (at pp.c:10587)
          Decl: name='backoffTime', quals=[], storage=[] (at pp.c:10587)
            TypeDecl: declname='backoffTime', quals=[] (at pp.c:10587)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__SubBackoff__setCongestionBackoff', quals=[] (at pp.c:10587)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10587)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__RadioBackoff__setCongestionBackoff' (at pp.c:10589)
        ExprList:  (at pp.c:10589)
          ID: name='backoffTime' (at pp.c:10589)
  FuncDef:  (at pp.c:10594)
    Decl: name='CC2420CsmaP__SubBackoff__requestCongestionBackoff', quals=[], storage=['inline', 'static'] (at pp.c:10594)
      FuncDecl: quals=None (at pp.c:10594)
        ParamList:  (at pp.c:10594)
          Decl: name='msg', quals=[], storage=[] (at pp.c:10594)
            PtrDecl: quals=[] (at pp.c:10594)
              TypeDecl: declname='msg', quals=[] (at pp.c:10594)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__SubBackoff__requestCongestionBackoff', quals=[] (at pp.c:10594)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10596)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__SubBackoff__setCongestionBackoff' (at pp.c:10597)
        ExprList:  (at None)
          BinaryOp: op='+' (at None)
            BinaryOp: op='%' (at None)
              FuncCall:  (at None)
                ID: name='CC2420CsmaP__Random__rand16' (at pp.c:10597)
              BinaryOp: op='*' (at pp.c:10598)
                Constant: type='int', value='0x7' (at pp.c:10598)
                ID: name='CC2420_BACKOFF_PERIOD' (at pp.c:10598)
            ID: name='CC2420_MIN_BACKOFF' (at pp.c:10598)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__RadioBackoff__requestCongestionBackoff' (at pp.c:10600)
        ExprList:  (at pp.c:10600)
          ID: name='msg' (at pp.c:10600)
  FuncDef:  (at pp.c:10604)
    Decl: name='CC2420TransmitP__RadioBackoff__requestCongestionBackoff', quals=[], storage=['static', 'inline'] (at pp.c:10604)
      FuncDecl: quals=None (at pp.c:10604)
        ParamList:  (at pp.c:10604)
          Decl: name='msg', quals=[], storage=[] (at pp.c:10604)
            PtrDecl: quals=[] (at pp.c:10604)
              TypeDecl: declname='msg', quals=[] (at pp.c:10604)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__RadioBackoff__requestCongestionBackoff', quals=[] (at pp.c:10604)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10604)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__SubBackoff__requestCongestionBackoff' (at pp.c:10606)
        ExprList:  (at pp.c:10606)
          ID: name='msg' (at pp.c:10606)
  FuncDef:  (at pp.c:10611)
    Decl: name='CC2420TransmitP__SpiResource__immediateRequest', quals=[], storage=['static', 'inline'] (at pp.c:10611)
      FuncDecl: quals=None (at pp.c:10611)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__SpiResource__immediateRequest', quals=[] (at pp.c:10611)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10611)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10613)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10613)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10617)
        ID: name='__nesc_result' (at pp.c:10617)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__immediateRequest' (at pp.c:10617)
          ExprList:  (at pp.c:10617)
            ID: name='CC2420SpiC__3__CLIENT_ID' (at pp.c:10617)
      Return:  (at pp.c:10621)
        ID: name='__nesc_result' (at pp.c:10621)
  FuncDef:  (at pp.c:10626)
    Decl: name='CC2420SpiP__WorkingState__requestState', quals=[], storage=['static', 'inline'] (at pp.c:10626)
      FuncDecl: quals=None (at pp.c:10626)
        ParamList:  (at pp.c:10626)
          Decl: name='reqState', quals=[], storage=[] (at pp.c:10626)
            TypeDecl: declname='reqState', quals=[] (at pp.c:10626)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__WorkingState__requestState', quals=[] (at pp.c:10626)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10626)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10628)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10628)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10632)
        ID: name='__nesc_result' (at pp.c:10632)
        FuncCall:  (at None)
          ID: name='StateImplP__State__requestState' (at pp.c:10632)
          ExprList:  (at pp.c:10632)
            Constant: type='int', value='0U' (at pp.c:10632)
            ID: name='reqState' (at pp.c:10632)
      Return:  (at pp.c:10636)
        ID: name='__nesc_result' (at pp.c:10636)
  FuncDef:  (at pp.c:10641)
    Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__isOwner', quals=[], storage=['inline', 'static'] (at pp.c:10641)
      FuncDecl: quals=None (at pp.c:10641)
        ParamList:  (at pp.c:10641)
          Decl: name='id', quals=[], storage=[] (at pp.c:10641)
            TypeDecl: declname='id', quals=[] (at pp.c:10641)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__isOwner', quals=[] (at pp.c:10641)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10643)
      Return:  (at pp.c:10645)
        ID: name='FAIL' (at pp.c:10645)
  FuncDef:  (at pp.c:10649)
    Decl: name='Msp430SpiNoDmaP__0__UsartResource__isOwner', quals=[], storage=['static', 'inline'] (at pp.c:10649)
      FuncDecl: quals=None (at pp.c:10649)
        ParamList:  (at pp.c:10649)
          Decl: name='arg_0x101d550c8', quals=[], storage=[] (at pp.c:10649)
            TypeDecl: declname='arg_0x101d550c8', quals=[] (at pp.c:10649)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__isOwner', quals=[] (at pp.c:10649)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10649)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10651)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10651)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:10655)
        ID: name='arg_0x101d550c8' (at pp.c:10655)
        Compound:  (at pp.c:10655)
          Case:  (at pp.c:10657)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:10657)
            Assignment: op='=' (at pp.c:10659)
              ID: name='__nesc_result' (at pp.c:10659)
              FuncCall:  (at None)
                ID: name='ArbiterP__0__Resource__isOwner' (at pp.c:10659)
                ExprList:  (at pp.c:10659)
                  ID: name='Msp430Usart0C__0__CLIENT_ID' (at pp.c:10659)
          Break:  (at pp.c:10661)
          Default:  (at pp.c:10663)
            Assignment: op='=' (at pp.c:10665)
              ID: name='__nesc_result' (at pp.c:10665)
              FuncCall:  (at None)
                ID: name='Msp430SpiNoDmaP__0__UsartResource__default__isOwner' (at pp.c:10665)
                ExprList:  (at pp.c:10665)
                  ID: name='arg_0x101d550c8' (at pp.c:10665)
          Break:  (at pp.c:10667)
      Return:  (at pp.c:10673)
        ID: name='__nesc_result' (at pp.c:10673)
  FuncDef:  (at pp.c:10678)
    Decl: name='Msp430SpiNoDmaP__0__Resource__isOwner', quals=[], storage=['inline', 'static'] (at pp.c:10678)
      FuncDecl: quals=None (at pp.c:10678)
        ParamList:  (at pp.c:10678)
          Decl: name='id', quals=[], storage=[] (at pp.c:10678)
            TypeDecl: declname='id', quals=[] (at pp.c:10678)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__isOwner', quals=[] (at pp.c:10678)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:10680)
      Return:  (at pp.c:10681)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__UsartResource__isOwner' (at pp.c:10681)
          ExprList:  (at pp.c:10681)
            ID: name='id' (at pp.c:10681)
  FuncDef:  (at pp.c:10685)
    Decl: name='CC2420SpiP__SpiResource__isOwner', quals=[], storage=['static', 'inline'] (at pp.c:10685)
      FuncDecl: quals=None (at pp.c:10685)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__SpiResource__isOwner', quals=[] (at pp.c:10685)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10685)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10687)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10687)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10691)
        ID: name='__nesc_result' (at pp.c:10691)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__Resource__isOwner' (at pp.c:10691)
          ExprList:  (at pp.c:10691)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:10691)
      Return:  (at pp.c:10695)
        ID: name='__nesc_result' (at pp.c:10695)
  FuncDef:  (at pp.c:10700)
    Decl: name='Msp430SpiNoDmaP__0__Msp430SpiConfigure__default__getConfig', quals=[], storage=['inline', 'static'] (at pp.c:10700)
      FuncDecl: quals=None (at pp.c:10700)
        ParamList:  (at pp.c:10700)
          Decl: name='id', quals=[], storage=[] (at pp.c:10700)
            TypeDecl: declname='id', quals=[] (at pp.c:10700)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:10700)
          TypeDecl: declname='Msp430SpiNoDmaP__0__Msp430SpiConfigure__default__getConfig', quals=[] (at pp.c:10700)
            IdentifierType: names=['msp430_spi_union_config_t'] (at None)
    Compound:  (at pp.c:10702)
      Return:  (at pp.c:10703)
        UnaryOp: op='&' (at pp.c:10703)
          ID: name='msp430_spi_default_config' (at pp.c:10703)
  FuncDef:  (at pp.c:10707)
    Decl: name='Msp430SpiNoDmaP__0__Msp430SpiConfigure__getConfig', quals=[], storage=['static', 'inline'] (at pp.c:10707)
      FuncDecl: quals=None (at pp.c:10707)
        ParamList:  (at pp.c:10707)
          Decl: name='arg_0x101d532f0', quals=[], storage=[] (at pp.c:10707)
            TypeDecl: declname='arg_0x101d532f0', quals=[] (at pp.c:10707)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:10707)
          TypeDecl: declname='Msp430SpiNoDmaP__0__Msp430SpiConfigure__getConfig', quals=[] (at pp.c:10707)
            IdentifierType: names=['msp430_spi_union_config_t'] (at None)
    Compound:  (at pp.c:10707)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10709)
        PtrDecl: quals=[] (at pp.c:10709)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10709)
            Union: name='__nesc_unnamed4285', packed=False (at pp.c:10709)
      Assignment: op='=' (at pp.c:10713)
        ID: name='__nesc_result' (at pp.c:10713)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__Msp430SpiConfigure__default__getConfig' (at pp.c:10713)
          ExprList:  (at pp.c:10713)
            ID: name='arg_0x101d532f0' (at pp.c:10713)
      Return:  (at pp.c:10717)
        ID: name='__nesc_result' (at pp.c:10717)
  FuncDef:  (at pp.c:10722)
    Decl: name='Msp430SpiNoDmaP__0__Usart__setModeSpi', quals=[], storage=['static', 'inline'] (at pp.c:10722)
      FuncDecl: quals=None (at pp.c:10722)
        ParamList:  (at pp.c:10722)
          Decl: name='config', quals=[], storage=[] (at pp.c:10722)
            PtrDecl: quals=[] (at pp.c:10722)
              TypeDecl: declname='config', quals=[] (at pp.c:10722)
                IdentifierType: names=['msp430_spi_union_config_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__setModeSpi', quals=[] (at pp.c:10722)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10722)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Usart__setModeSpi' (at pp.c:10724)
        ExprList:  (at pp.c:10724)
          ID: name='config' (at pp.c:10724)
  FuncDef:  (at pp.c:10729)
    Decl: name='Msp430SpiNoDmaP__0__ResourceConfigure__configure', quals=[], storage=['inline', 'static'] (at pp.c:10729)
      FuncDecl: quals=None (at pp.c:10729)
        ParamList:  (at pp.c:10729)
          Decl: name='id', quals=[], storage=[] (at pp.c:10729)
            TypeDecl: declname='id', quals=[] (at pp.c:10729)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__ResourceConfigure__configure', quals=[] (at pp.c:10729)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10731)
      FuncCall:  (at None)
        ID: name='Msp430SpiNoDmaP__0__Usart__setModeSpi' (at pp.c:10732)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='Msp430SpiNoDmaP__0__Msp430SpiConfigure__getConfig' (at pp.c:10732)
            ExprList:  (at pp.c:10732)
              ID: name='id' (at pp.c:10732)
  FuncDef:  (at pp.c:10736)
    Decl: name='ArbiterP__0__ResourceConfigure__default__configure', quals=[], storage=['inline', 'static'] (at pp.c:10736)
      FuncDecl: quals=None (at pp.c:10736)
        ParamList:  (at pp.c:10736)
          Decl: name='id', quals=[], storage=[] (at pp.c:10736)
            TypeDecl: declname='id', quals=[] (at pp.c:10736)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceConfigure__default__configure', quals=[] (at pp.c:10736)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10738)
  FuncDef:  (at pp.c:10742)
    Decl: name='ArbiterP__0__ResourceConfigure__configure', quals=[], storage=['static', 'inline'] (at pp.c:10742)
      FuncDecl: quals=None (at pp.c:10742)
        ParamList:  (at pp.c:10742)
          Decl: name='arg_0x101f209b8', quals=[], storage=[] (at pp.c:10742)
            TypeDecl: declname='arg_0x101f209b8', quals=[] (at pp.c:10742)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceConfigure__configure', quals=[] (at pp.c:10742)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10742)
      Switch:  (at pp.c:10744)
        ID: name='arg_0x101f209b8' (at pp.c:10744)
        Compound:  (at pp.c:10744)
          Case:  (at pp.c:10746)
            ID: name='Msp430Usart0C__0__CLIENT_ID' (at pp.c:10746)
            FuncCall:  (at None)
              ID: name='Msp430SpiNoDmaP__0__ResourceConfigure__configure' (at pp.c:10748)
              ExprList:  (at pp.c:10748)
                ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:10748)
          Break:  (at pp.c:10750)
          Default:  (at pp.c:10752)
            FuncCall:  (at None)
              ID: name='ArbiterP__0__ResourceConfigure__default__configure' (at pp.c:10754)
              ExprList:  (at pp.c:10754)
                ID: name='arg_0x101f209b8' (at pp.c:10754)
          Break:  (at pp.c:10756)
  FuncDef:  (at pp.c:10763)
    Decl: name='ArbiterP__0__ResourceDefaultOwner__default__immediateRequested', quals=[], storage=['inline', 'static'] (at pp.c:10763)
      FuncDecl: quals=None (at pp.c:10763)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__default__immediateRequested', quals=[] (at pp.c:10763)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10765)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceDefaultOwner__release' (at pp.c:10766)
  FuncDef:  (at pp.c:10770)
    Decl: name='ArbiterP__0__ResourceDefaultOwner__immediateRequested', quals=[], storage=['static', 'inline'] (at pp.c:10770)
      FuncDecl: quals=None (at pp.c:10770)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__immediateRequested', quals=[] (at pp.c:10770)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10770)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceDefaultOwner__default__immediateRequested' (at pp.c:10772)
  FuncDef:  (at pp.c:10777)
    Decl: name='ArbiterP__0__ResourceRequested__default__immediateRequested', quals=[], storage=['inline', 'static'] (at pp.c:10777)
      FuncDecl: quals=None (at pp.c:10777)
        ParamList:  (at pp.c:10777)
          Decl: name='id', quals=[], storage=[] (at pp.c:10777)
            TypeDecl: declname='id', quals=[] (at pp.c:10777)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceRequested__default__immediateRequested', quals=[] (at pp.c:10777)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10779)
  FuncDef:  (at pp.c:10783)
    Decl: name='ArbiterP__0__ResourceRequested__immediateRequested', quals=[], storage=['static', 'inline'] (at pp.c:10783)
      FuncDecl: quals=None (at pp.c:10783)
        ParamList:  (at pp.c:10783)
          Decl: name='arg_0x101edd7e8', quals=[], storage=[] (at pp.c:10783)
            TypeDecl: declname='arg_0x101edd7e8', quals=[] (at pp.c:10783)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceRequested__immediateRequested', quals=[] (at pp.c:10783)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10783)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceRequested__default__immediateRequested' (at pp.c:10785)
        ExprList:  (at pp.c:10785)
          ID: name='arg_0x101edd7e8' (at pp.c:10785)
  FuncDef:  (at pp.c:10790)
    Decl: name='ArbiterP__0__Resource__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:10790)
      FuncDecl: quals=None (at pp.c:10790)
        ParamList:  (at pp.c:10790)
          Decl: name='id', quals=[], storage=[] (at pp.c:10790)
            TypeDecl: declname='id', quals=[] (at pp.c:10790)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__Resource__immediateRequest', quals=[] (at pp.c:10790)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10792)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceRequested__immediateRequested' (at pp.c:10793)
        ExprList:  (at pp.c:10793)
          ID: name='ArbiterP__0__resId' (at pp.c:10793)
      Compound:  (at pp.c:10796)
        If:  (at pp.c:10797)
          BinaryOp: op='==' (at pp.c:10797)
            ID: name='ArbiterP__0__state' (at pp.c:10797)
            ID: name='ArbiterP__0__RES_CONTROLLED' (at pp.c:10797)
          Compound:  (at pp.c:10797)
            Assignment: op='=' (at pp.c:10798)
              ID: name='ArbiterP__0__state' (at pp.c:10798)
              ID: name='ArbiterP__0__RES_IMM_GRANTING' (at pp.c:10798)
            Assignment: op='=' (at pp.c:10799)
              ID: name='ArbiterP__0__reqResId' (at pp.c:10799)
              ID: name='id' (at pp.c:10799)
          Compound:  (at pp.c:10801)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:10802)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:10802)
                IdentifierType: names=['char', 'unsigned'] (at None)
              ID: name='FAIL' (at pp.c:10804)
            Return:  (at pp.c:10807)
              ID: name='__nesc_temp' (at pp.c:10807)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceDefaultOwner__immediateRequested' (at pp.c:10811)
      If:  (at pp.c:10812)
        BinaryOp: op='==' (at pp.c:10812)
          ID: name='ArbiterP__0__resId' (at pp.c:10812)
          ID: name='id' (at pp.c:10812)
        Compound:  (at pp.c:10812)
          FuncCall:  (at None)
            ID: name='ArbiterP__0__ResourceConfigure__configure' (at pp.c:10813)
            ExprList:  (at pp.c:10813)
              ID: name='ArbiterP__0__resId' (at pp.c:10813)
          Return:  (at pp.c:10814)
            ID: name='SUCCESS' (at pp.c:10814)
      Assignment: op='=' (at pp.c:10818)
        ID: name='ArbiterP__0__state' (at pp.c:10818)
        ID: name='ArbiterP__0__RES_CONTROLLED' (at pp.c:10818)
      Return:  (at pp.c:10819)
        ID: name='FAIL' (at pp.c:10819)
  FuncDef:  (at pp.c:10823)
    Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:10823)
      FuncDecl: quals=None (at pp.c:10823)
        ParamList:  (at pp.c:10823)
          Decl: name='id', quals=[], storage=[] (at pp.c:10823)
            TypeDecl: declname='id', quals=[] (at pp.c:10823)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__immediateRequest', quals=[] (at pp.c:10823)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10825)
      Return:  (at pp.c:10827)
        ID: name='FAIL' (at pp.c:10827)
  FuncDef:  (at pp.c:10831)
    Decl: name='Msp430SpiNoDmaP__0__UsartResource__immediateRequest', quals=[], storage=['static', 'inline'] (at pp.c:10831)
      FuncDecl: quals=None (at pp.c:10831)
        ParamList:  (at pp.c:10831)
          Decl: name='arg_0x101d550c8', quals=[], storage=[] (at pp.c:10831)
            TypeDecl: declname='arg_0x101d550c8', quals=[] (at pp.c:10831)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__immediateRequest', quals=[] (at pp.c:10831)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10831)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10833)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10833)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:10837)
        ID: name='arg_0x101d550c8' (at pp.c:10837)
        Compound:  (at pp.c:10837)
          Case:  (at pp.c:10839)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:10839)
            Assignment: op='=' (at pp.c:10841)
              ID: name='__nesc_result' (at pp.c:10841)
              FuncCall:  (at None)
                ID: name='ArbiterP__0__Resource__immediateRequest' (at pp.c:10841)
                ExprList:  (at pp.c:10841)
                  ID: name='Msp430Usart0C__0__CLIENT_ID' (at pp.c:10841)
          Break:  (at pp.c:10843)
          Default:  (at pp.c:10845)
            Assignment: op='=' (at pp.c:10847)
              ID: name='__nesc_result' (at pp.c:10847)
              FuncCall:  (at None)
                ID: name='Msp430SpiNoDmaP__0__UsartResource__default__immediateRequest' (at pp.c:10847)
                ExprList:  (at pp.c:10847)
                  ID: name='arg_0x101d550c8' (at pp.c:10847)
          Break:  (at pp.c:10849)
      Return:  (at pp.c:10855)
        ID: name='__nesc_result' (at pp.c:10855)
  FuncDef:  (at pp.c:10860)
    Decl: name='Msp430SpiNoDmaP__0__Resource__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:10860)
      FuncDecl: quals=None (at pp.c:10860)
        ParamList:  (at pp.c:10860)
          Decl: name='id', quals=[], storage=[] (at pp.c:10860)
            TypeDecl: declname='id', quals=[] (at pp.c:10860)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__immediateRequest', quals=[] (at pp.c:10860)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10862)
      Return:  (at pp.c:10863)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__UsartResource__immediateRequest' (at pp.c:10863)
          ExprList:  (at pp.c:10863)
            ID: name='id' (at pp.c:10863)
  FuncDef:  (at pp.c:10867)
    Decl: name='CC2420SpiP__SpiResource__immediateRequest', quals=[], storage=['static', 'inline'] (at pp.c:10867)
      FuncDecl: quals=None (at pp.c:10867)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__SpiResource__immediateRequest', quals=[] (at pp.c:10867)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10867)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10869)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10869)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10873)
        ID: name='__nesc_result' (at pp.c:10873)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__Resource__immediateRequest' (at pp.c:10873)
          ExprList:  (at pp.c:10873)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:10873)
      Return:  (at pp.c:10877)
        ID: name='__nesc_result' (at pp.c:10877)
  FuncDef:  (at pp.c:10882)
    Decl: name='SchedulerBasicP__isWaiting', quals=[], storage=['inline', 'static'] (at pp.c:10882)
      FuncDecl: quals=None (at pp.c:10882)
        ParamList:  (at pp.c:10882)
          Decl: name='id', quals=[], storage=[] (at pp.c:10882)
            TypeDecl: declname='id', quals=[] (at pp.c:10882)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SchedulerBasicP__isWaiting', quals=[] (at pp.c:10882)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10883)
      Return:  (at pp.c:10884)
        BinaryOp: op='||' (at pp.c:10884)
          BinaryOp: op='!=' (at pp.c:10884)
            ArrayRef:  (at pp.c:10884)
              ID: name='SchedulerBasicP__m_next' (at pp.c:10884)
              ID: name='id' (at pp.c:10884)
            ID: name='SchedulerBasicP__NO_TASK' (at pp.c:10884)
          BinaryOp: op='==' (at pp.c:10884)
            ID: name='SchedulerBasicP__m_tail' (at pp.c:10884)
            ID: name='id' (at pp.c:10884)
  FuncDef:  (at pp.c:10887)
    Decl: name='SchedulerBasicP__pushTask', quals=[], storage=['inline', 'static'] (at pp.c:10887)
      FuncDecl: quals=None (at pp.c:10887)
        ParamList:  (at pp.c:10887)
          Decl: name='id', quals=[], storage=[] (at pp.c:10887)
            TypeDecl: declname='id', quals=[] (at pp.c:10887)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SchedulerBasicP__pushTask', quals=[] (at pp.c:10887)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10888)
      If:  (at pp.c:10889)
        UnaryOp: op='!' (at None)
          FuncCall:  (at None)
            ID: name='SchedulerBasicP__isWaiting' (at pp.c:10889)
            ExprList:  (at pp.c:10889)
              ID: name='id' (at pp.c:10889)
        Compound:  (at pp.c:10890)
          If:  (at pp.c:10891)
            BinaryOp: op='==' (at pp.c:10891)
              ID: name='SchedulerBasicP__m_head' (at pp.c:10891)
              ID: name='SchedulerBasicP__NO_TASK' (at pp.c:10891)
            Compound:  (at pp.c:10892)
              Assignment: op='=' (at pp.c:10893)
                ID: name='SchedulerBasicP__m_head' (at pp.c:10893)
                ID: name='id' (at pp.c:10893)
              Assignment: op='=' (at pp.c:10894)
                ID: name='SchedulerBasicP__m_tail' (at pp.c:10894)
                ID: name='id' (at pp.c:10894)
            Compound:  (at pp.c:10897)
              Assignment: op='=' (at pp.c:10898)
                ArrayRef:  (at pp.c:10898)
                  ID: name='SchedulerBasicP__m_next' (at pp.c:10898)
                  ID: name='SchedulerBasicP__m_tail' (at pp.c:10898)
                ID: name='id' (at pp.c:10898)
              Assignment: op='=' (at pp.c:10899)
                ID: name='SchedulerBasicP__m_tail' (at pp.c:10899)
                ID: name='id' (at pp.c:10899)
          Return:  (at pp.c:10901)
            ID: name='TRUE' (at pp.c:10901)
        Compound:  (at pp.c:10904)
          Return:  (at pp.c:10905)
            ID: name='FALSE' (at pp.c:10905)
  FuncDef:  (at pp.c:10910)
    Decl: name='HplMsp430Usart0P__Usart__resetUsart', quals=[], storage=['inline', 'static'] (at pp.c:10910)
      FuncDecl: quals=None (at pp.c:10910)
        ParamList:  (at pp.c:10910)
          Decl: name='reset', quals=[], storage=[] (at pp.c:10910)
            TypeDecl: declname='reset', quals=[] (at pp.c:10910)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__resetUsart', quals=[] (at pp.c:10910)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10912)
      If:  (at pp.c:10913)
        ID: name='reset' (at pp.c:10913)
        Compound:  (at pp.c:10913)
          Assignment: op='=' (at pp.c:10914)
            ID: name='U0CTL' (at pp.c:10914)
            Constant: type='int', value='0x01' (at pp.c:10914)
        Compound:  (at pp.c:10916)
          Assignment: op='&=' (at pp.c:10917)
            ID: name='U0CTL' (at pp.c:10917)
            UnaryOp: op='~' (at pp.c:10917)
              Constant: type='int', value='0x01' (at pp.c:10917)
  FuncDef:  (at pp.c:10922)
    Decl: name='HplMsp430I2C0P__HplUsart__resetUsart', quals=[], storage=['static', 'inline'] (at pp.c:10922)
      FuncDecl: quals=None (at pp.c:10922)
        ParamList:  (at pp.c:10922)
          Decl: name='reset', quals=[], storage=[] (at pp.c:10922)
            TypeDecl: declname='reset', quals=[] (at pp.c:10922)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='HplMsp430I2C0P__HplUsart__resetUsart', quals=[] (at pp.c:10922)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10922)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Usart__resetUsart' (at pp.c:10924)
        ExprList:  (at pp.c:10924)
          ID: name='reset' (at pp.c:10924)
  FuncDef:  (at pp.c:10929)
    Decl: name='HplMsp430I2C0P__HplI2C__clearModeI2C', quals=[], storage=['inline', 'static'] (at pp.c:10929)
      FuncDecl: quals=None (at pp.c:10929)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430I2C0P__HplI2C__clearModeI2C', quals=[] (at pp.c:10929)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10931)
      Compound:  (at pp.c:10934)
        Assignment: op='&=' (at pp.c:10935)
          ID: name='HplMsp430I2C0P__U0CTL' (at pp.c:10935)
          UnaryOp: op='~' (at pp.c:10935)
            BinaryOp: op='|' (at pp.c:10935)
              BinaryOp: op='|' (at pp.c:10935)
                Constant: type='int', value='0x20' (at pp.c:10935)
                Constant: type='int', value='0x04' (at pp.c:10935)
              Constant: type='int', value='0x01' (at pp.c:10935)
        FuncCall:  (at None)
          ID: name='HplMsp430I2C0P__HplUsart__resetUsart' (at pp.c:10936)
          ExprList:  (at pp.c:10936)
            ID: name='TRUE' (at pp.c:10936)
  FuncDef:  (at pp.c:10941)
    Decl: name='HplMsp430Usart0P__HplI2C__clearModeI2C', quals=[], storage=['static', 'inline'] (at pp.c:10941)
      FuncDecl: quals=None (at pp.c:10941)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__HplI2C__clearModeI2C', quals=[] (at pp.c:10941)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10941)
      FuncCall:  (at None)
        ID: name='HplMsp430I2C0P__HplI2C__clearModeI2C' (at pp.c:10943)
  FuncDef:  (at pp.c:10948)
    Decl: name='HplMsp430GeneralIOP__21__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:10948)
      FuncDecl: quals=None (at pp.c:10948)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__21__IO__selectIOFunc', quals=[] (at pp.c:10948)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10950)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:10953)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='27U' (at pp.c:10953)
        UnaryOp: op='~' (at pp.c:10953)
          BinaryOp: op='<<' (at pp.c:10953)
            Constant: type='int', value='0x01' (at pp.c:10953)
            Constant: type='int', value='5' (at pp.c:10953)
  FuncDef:  (at pp.c:10957)
    Decl: name='HplMsp430Usart0P__URXD__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:10957)
      FuncDecl: quals=None (at pp.c:10957)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__URXD__selectIOFunc', quals=[] (at pp.c:10957)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10957)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__21__IO__selectIOFunc' (at pp.c:10959)
  FuncDef:  (at pp.c:10964)
    Decl: name='HplMsp430GeneralIOP__20__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:10964)
      FuncDecl: quals=None (at pp.c:10964)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__20__IO__selectIOFunc', quals=[] (at pp.c:10964)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10966)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:10969)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='27U' (at pp.c:10969)
        UnaryOp: op='~' (at pp.c:10969)
          BinaryOp: op='<<' (at pp.c:10969)
            Constant: type='int', value='0x01' (at pp.c:10969)
            Constant: type='int', value='4' (at pp.c:10969)
  FuncDef:  (at pp.c:10973)
    Decl: name='HplMsp430Usart0P__UTXD__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:10973)
      FuncDecl: quals=None (at pp.c:10973)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__UTXD__selectIOFunc', quals=[] (at pp.c:10973)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10973)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__20__IO__selectIOFunc' (at pp.c:10975)
  FuncDef:  (at pp.c:10980)
    Decl: name='HplMsp430Usart0P__Usart__disableUart', quals=[], storage=['inline', 'static'] (at pp.c:10980)
      FuncDecl: quals=None (at pp.c:10980)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__disableUart', quals=[] (at pp.c:10980)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10982)
      Compound:  (at pp.c:10985)
        Assignment: op='&=' (at pp.c:10986)
          ID: name='HplMsp430Usart0P__ME1' (at pp.c:10986)
          UnaryOp: op='~' (at pp.c:10986)
            BinaryOp: op='|' (at pp.c:10986)
              BinaryOp: op='<<' (at pp.c:10986)
                Constant: type='int', value='1' (at pp.c:10986)
                Constant: type='int', value='7' (at pp.c:10986)
              BinaryOp: op='<<' (at pp.c:10986)
                Constant: type='int', value='1' (at pp.c:10986)
                Constant: type='int', value='6' (at pp.c:10986)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__UTXD__selectIOFunc' (at pp.c:10987)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__URXD__selectIOFunc' (at pp.c:10988)
  FuncDef:  (at pp.c:10993)
    Decl: name='HplMsp430Usart0P__Usart__setUmctl', quals=[], storage=['inline', 'static'] (at pp.c:10993)
      FuncDecl: quals=None (at pp.c:10993)
        ParamList:  (at pp.c:10993)
          Decl: name='control', quals=[], storage=[] (at pp.c:10993)
            TypeDecl: declname='control', quals=[] (at pp.c:10993)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__setUmctl', quals=[] (at pp.c:10993)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10995)
      Assignment: op='=' (at pp.c:10996)
        ID: name='U0MCTL' (at pp.c:10996)
        ID: name='control' (at pp.c:10996)
  FuncDef:  (at pp.c:11000)
    Decl: name='HplMsp430Usart0P__Usart__setUbr', quals=[], storage=['inline', 'static'] (at pp.c:11000)
      FuncDecl: quals=None (at pp.c:11000)
        ParamList:  (at pp.c:11000)
          Decl: name='control', quals=[], storage=[] (at pp.c:11000)
            TypeDecl: declname='control', quals=[] (at pp.c:11000)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__setUbr', quals=[] (at pp.c:11000)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11002)
      Compound:  (at pp.c:11005)
        Assignment: op='=' (at pp.c:11006)
          ID: name='U0BR0' (at pp.c:11006)
          BinaryOp: op='&' (at pp.c:11006)
            ID: name='control' (at pp.c:11006)
            Constant: type='int', value='0x00FF' (at pp.c:11006)
        Assignment: op='=' (at pp.c:11007)
          ID: name='U0BR1' (at pp.c:11007)
          BinaryOp: op='&' (at pp.c:11007)
            BinaryOp: op='>>' (at pp.c:11007)
              ID: name='control' (at pp.c:11007)
              Constant: type='int', value='8' (at pp.c:11007)
            Constant: type='int', value='0x00FF' (at pp.c:11007)
  FuncDef:  (at pp.c:11012)
    Decl: name='HplMsp430Usart0P__configSpi', quals=[], storage=['inline', 'static'] (at pp.c:11012)
      FuncDecl: quals=None (at pp.c:11012)
        ParamList:  (at pp.c:11012)
          Decl: name='config', quals=[], storage=[] (at pp.c:11012)
            PtrDecl: quals=[] (at pp.c:11012)
              TypeDecl: declname='config', quals=[] (at pp.c:11012)
                IdentifierType: names=['msp430_spi_union_config_t'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__configSpi', quals=[] (at pp.c:11012)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11014)
      Assignment: op='=' (at pp.c:11016)
        ID: name='U0CTL' (at pp.c:11016)
        BinaryOp: op='|' (at pp.c:11016)
          BinaryOp: op='|' (at pp.c:11016)
            StructRef: type='.' (at pp.c:11016)
              StructRef: type='->' (at pp.c:11016)
                ID: name='config' (at pp.c:11016)
                ID: name='spiRegisters' (at pp.c:11016)
              ID: name='uctl' (at pp.c:11016)
            Constant: type='int', value='0x04' (at pp.c:11016)
          Constant: type='int', value='0x01' (at pp.c:11016)
      Assignment: op='=' (at pp.c:11017)
        ID: name='HplMsp430Usart0P__U0TCTL' (at pp.c:11017)
        StructRef: type='.' (at pp.c:11017)
          StructRef: type='->' (at pp.c:11017)
            ID: name='config' (at pp.c:11017)
            ID: name='spiRegisters' (at pp.c:11017)
          ID: name='utctl' (at pp.c:11017)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Usart__setUbr' (at pp.c:11019)
        ExprList:  (at pp.c:11019)
          StructRef: type='.' (at pp.c:11019)
            StructRef: type='->' (at pp.c:11019)
              ID: name='config' (at pp.c:11019)
              ID: name='spiRegisters' (at pp.c:11019)
            ID: name='ubr' (at pp.c:11019)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Usart__setUmctl' (at pp.c:11020)
        ExprList:  (at pp.c:11020)
          Constant: type='int', value='0x00' (at pp.c:11020)
  FuncDef:  (at pp.c:11024)
    Decl: name='HplMsp430GeneralIOP__19__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:11024)
      FuncDecl: quals=None (at pp.c:11024)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__19__IO__selectModuleFunc', quals=[] (at pp.c:11024)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11026)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:11029)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='27U' (at pp.c:11029)
        BinaryOp: op='<<' (at pp.c:11029)
          Constant: type='int', value='0x01' (at pp.c:11029)
          Constant: type='int', value='3' (at pp.c:11029)
  FuncDef:  (at pp.c:11033)
    Decl: name='HplMsp430Usart0P__UCLK__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:11033)
      FuncDecl: quals=None (at pp.c:11033)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__UCLK__selectModuleFunc', quals=[] (at pp.c:11033)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11033)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__19__IO__selectModuleFunc' (at pp.c:11035)
  FuncDef:  (at pp.c:11040)
    Decl: name='HplMsp430GeneralIOP__18__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:11040)
      FuncDecl: quals=None (at pp.c:11040)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__18__IO__selectModuleFunc', quals=[] (at pp.c:11040)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11042)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:11045)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='27U' (at pp.c:11045)
        BinaryOp: op='<<' (at pp.c:11045)
          Constant: type='int', value='0x01' (at pp.c:11045)
          Constant: type='int', value='2' (at pp.c:11045)
  FuncDef:  (at pp.c:11049)
    Decl: name='HplMsp430Usart0P__SOMI__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:11049)
      FuncDecl: quals=None (at pp.c:11049)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__SOMI__selectModuleFunc', quals=[] (at pp.c:11049)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11049)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__18__IO__selectModuleFunc' (at pp.c:11051)
  FuncDef:  (at pp.c:11056)
    Decl: name='HplMsp430GeneralIOP__17__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:11056)
      FuncDecl: quals=None (at pp.c:11056)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__17__IO__selectModuleFunc', quals=[] (at pp.c:11056)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11058)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:11061)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='27U' (at pp.c:11061)
        BinaryOp: op='<<' (at pp.c:11061)
          Constant: type='int', value='0x01' (at pp.c:11061)
          Constant: type='int', value='1' (at pp.c:11061)
  FuncDef:  (at pp.c:11065)
    Decl: name='HplMsp430Usart0P__SIMO__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:11065)
      FuncDecl: quals=None (at pp.c:11065)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__SIMO__selectModuleFunc', quals=[] (at pp.c:11065)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11065)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__17__IO__selectModuleFunc' (at pp.c:11067)
  FuncDef:  (at pp.c:11072)
    Decl: name='HplMsp430Usart0P__Usart__enableSpi', quals=[], storage=['inline', 'static'] (at pp.c:11072)
      FuncDecl: quals=None (at pp.c:11072)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__enableSpi', quals=[] (at pp.c:11072)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11074)
      Compound:  (at pp.c:11077)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__SIMO__selectModuleFunc' (at pp.c:11078)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__SOMI__selectModuleFunc' (at pp.c:11079)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__UCLK__selectModuleFunc' (at pp.c:11080)
      Assignment: op='|=' (at pp.c:11082)
        ID: name='HplMsp430Usart0P__ME1' (at pp.c:11082)
        BinaryOp: op='<<' (at pp.c:11082)
          Constant: type='int', value='1' (at pp.c:11082)
          Constant: type='int', value='6' (at pp.c:11082)
  FuncDef:  (at pp.c:11086)
    Decl: name='HplMsp430Usart0P__Usart__clrIntr', quals=[], storage=['inline', 'static'] (at pp.c:11086)
      FuncDecl: quals=None (at pp.c:11086)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__clrIntr', quals=[] (at pp.c:11086)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11088)
      Assignment: op='&=' (at pp.c:11089)
        ID: name='HplMsp430Usart0P__IFG1' (at pp.c:11089)
        UnaryOp: op='~' (at pp.c:11089)
          BinaryOp: op='|' (at pp.c:11089)
            BinaryOp: op='<<' (at pp.c:11089)
              Constant: type='int', value='1' (at pp.c:11089)
              Constant: type='int', value='7' (at pp.c:11089)
            BinaryOp: op='<<' (at pp.c:11089)
              Constant: type='int', value='1' (at pp.c:11089)
              Constant: type='int', value='6' (at pp.c:11089)
  FuncDef:  (at pp.c:11100)
    Decl: name='HplMsp430Usart0P__Usart__disableIntr', quals=[], storage=['inline', 'static'] (at pp.c:11100)
      FuncDecl: quals=None (at pp.c:11100)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__disableIntr', quals=[] (at pp.c:11100)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11102)
      Assignment: op='&=' (at pp.c:11103)
        ID: name='HplMsp430Usart0P__IE1' (at pp.c:11103)
        UnaryOp: op='~' (at pp.c:11103)
          BinaryOp: op='|' (at pp.c:11103)
            BinaryOp: op='<<' (at pp.c:11103)
              Constant: type='int', value='1' (at pp.c:11103)
              Constant: type='int', value='7' (at pp.c:11103)
            BinaryOp: op='<<' (at pp.c:11103)
              Constant: type='int', value='1' (at pp.c:11103)
              Constant: type='int', value='6' (at pp.c:11103)
  FuncDef:  (at pp.c:11107)
    Decl: name='StateImplP__State__toIdle', quals=[], storage=['inline', 'static'] (at pp.c:11107)
      FuncDecl: quals=None (at pp.c:11107)
        ParamList:  (at pp.c:11107)
          Decl: name='id', quals=[], storage=[] (at pp.c:11107)
            TypeDecl: declname='id', quals=[] (at pp.c:11107)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='StateImplP__State__toIdle', quals=[] (at pp.c:11107)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11109)
      Compound:  (at pp.c:11110)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:11110)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:11110)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:11110)
        Assignment: op='=' (at pp.c:11112)
          ArrayRef:  (at pp.c:11112)
            ID: name='StateImplP__state' (at pp.c:11112)
            ID: name='id' (at pp.c:11112)
          ID: name='StateImplP__S_IDLE' (at pp.c:11112)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:11114)
          ExprList:  (at pp.c:11114)
            ID: name='__nesc_atomic' (at pp.c:11114)
  FuncDef:  (at pp.c:11118)
    Decl: name='CC2420SpiP__WorkingState__toIdle', quals=[], storage=['static', 'inline'] (at pp.c:11118)
      FuncDecl: quals=None (at pp.c:11118)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__WorkingState__toIdle', quals=[] (at pp.c:11118)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11118)
      FuncCall:  (at None)
        ID: name='StateImplP__State__toIdle' (at pp.c:11120)
        ExprList:  (at pp.c:11120)
          Constant: type='int', value='0U' (at pp.c:11120)
  FuncDef:  (at pp.c:11125)
    Decl: name='CC2420TransmitP__SpiResource__request', quals=[], storage=['static', 'inline'] (at pp.c:11125)
      FuncDecl: quals=None (at pp.c:11125)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__SpiResource__request', quals=[] (at pp.c:11125)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11125)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11127)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11127)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11131)
        ID: name='__nesc_result' (at pp.c:11131)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__request' (at pp.c:11131)
          ExprList:  (at pp.c:11131)
            ID: name='CC2420SpiC__3__CLIENT_ID' (at pp.c:11131)
      Return:  (at pp.c:11135)
        ID: name='__nesc_result' (at pp.c:11135)
  FuncDef:  (at pp.c:11140)
    Decl: name='ArbiterP__0__ResourceDefaultOwner__default__requested', quals=[], storage=['inline', 'static'] (at pp.c:11140)
      FuncDecl: quals=None (at pp.c:11140)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__default__requested', quals=[] (at pp.c:11140)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11142)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceDefaultOwner__release' (at pp.c:11143)
  FuncDef:  (at pp.c:11147)
    Decl: name='ArbiterP__0__ResourceDefaultOwner__requested', quals=[], storage=['static', 'inline'] (at pp.c:11147)
      FuncDecl: quals=None (at pp.c:11147)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__requested', quals=[] (at pp.c:11147)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11147)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceDefaultOwner__default__requested' (at pp.c:11149)
  FuncDef:  (at pp.c:11154)
    Decl: name='FcfsResourceQueueC__1__FcfsQueue__isEnqueued', quals=[], storage=['inline', 'static'] (at pp.c:11154)
      FuncDecl: quals=None (at pp.c:11154)
        ParamList:  (at pp.c:11154)
          Decl: name='id', quals=[], storage=[] (at pp.c:11154)
            TypeDecl: declname='id', quals=[] (at pp.c:11154)
              IdentifierType: names=['resource_client_id_t'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__isEnqueued', quals=[] (at pp.c:11154)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:11156)
      Compound:  (at pp.c:11159)
        Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11160)
          TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11160)
            IdentifierType: names=['char', 'unsigned'] (at None)
          BinaryOp: op='||' (at pp.c:11162)
            BinaryOp: op='!=' (at pp.c:11162)
              ArrayRef:  (at pp.c:11162)
                ID: name='FcfsResourceQueueC__1__resQ' (at pp.c:11162)
                ID: name='id' (at pp.c:11162)
              ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:11162)
            BinaryOp: op='==' (at pp.c:11162)
              ID: name='FcfsResourceQueueC__1__qTail' (at pp.c:11162)
              ID: name='id' (at pp.c:11162)
        Return:  (at pp.c:11165)
          ID: name='__nesc_temp' (at pp.c:11165)
  FuncDef:  (at pp.c:11170)
    Decl: name='FcfsResourceQueueC__1__FcfsQueue__enqueue', quals=[], storage=['inline', 'static'] (at pp.c:11170)
      FuncDecl: quals=None (at pp.c:11170)
        ParamList:  (at pp.c:11170)
          Decl: name='id', quals=[], storage=[] (at pp.c:11170)
            TypeDecl: declname='id', quals=[] (at pp.c:11170)
              IdentifierType: names=['resource_client_id_t'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__enqueue', quals=[] (at pp.c:11170)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11172)
      Compound:  (at pp.c:11175)
        If:  (at pp.c:11176)
          UnaryOp: op='!' (at None)
            FuncCall:  (at None)
              ID: name='FcfsResourceQueueC__1__FcfsQueue__isEnqueued' (at pp.c:11176)
              ExprList:  (at pp.c:11176)
                ID: name='id' (at pp.c:11176)
          Compound:  (at pp.c:11176)
            If:  (at pp.c:11177)
              BinaryOp: op='==' (at pp.c:11177)
                ID: name='FcfsResourceQueueC__1__qHead' (at pp.c:11177)
                ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:11177)
              Compound:  (at pp.c:11177)
                Assignment: op='=' (at pp.c:11178)
                  ID: name='FcfsResourceQueueC__1__qHead' (at pp.c:11178)
                  ID: name='id' (at pp.c:11178)
              Compound:  (at pp.c:11180)
                Assignment: op='=' (at pp.c:11182)
                  ArrayRef:  (at pp.c:11182)
                    ID: name='FcfsResourceQueueC__1__resQ' (at pp.c:11182)
                    ID: name='FcfsResourceQueueC__1__qTail' (at pp.c:11182)
                  ID: name='id' (at pp.c:11182)
            Assignment: op='=' (at pp.c:11185)
              ID: name='FcfsResourceQueueC__1__qTail' (at pp.c:11185)
              ID: name='id' (at pp.c:11185)
            Compound:  (at pp.c:11186)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11187)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11187)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='SUCCESS' (at pp.c:11189)
              Return:  (at pp.c:11192)
                ID: name='__nesc_temp' (at pp.c:11192)
        Compound:  (at pp.c:11196)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11197)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11197)
              IdentifierType: names=['char', 'unsigned'] (at None)
            ID: name='EBUSY' (at pp.c:11199)
          Return:  (at pp.c:11202)
            ID: name='__nesc_temp' (at pp.c:11202)
  FuncDef:  (at pp.c:11208)
    Decl: name='ArbiterP__0__Queue__enqueue', quals=[], storage=['static', 'inline'] (at pp.c:11208)
      FuncDecl: quals=None (at pp.c:11208)
        ParamList:  (at pp.c:11208)
          Decl: name='id', quals=[], storage=[] (at pp.c:11208)
            TypeDecl: declname='id', quals=[] (at pp.c:11208)
              IdentifierType: names=['resource_client_id_t'] (at None)
        TypeDecl: declname='ArbiterP__0__Queue__enqueue', quals=[] (at pp.c:11208)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11208)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11210)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11210)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11214)
        ID: name='__nesc_result' (at pp.c:11214)
        FuncCall:  (at None)
          ID: name='FcfsResourceQueueC__1__FcfsQueue__enqueue' (at pp.c:11214)
          ExprList:  (at pp.c:11214)
            ID: name='id' (at pp.c:11214)
      Return:  (at pp.c:11218)
        ID: name='__nesc_result' (at pp.c:11218)
  FuncDef:  (at pp.c:11223)
    Decl: name='ArbiterP__0__ResourceRequested__default__requested', quals=[], storage=['inline', 'static'] (at pp.c:11223)
      FuncDecl: quals=None (at pp.c:11223)
        ParamList:  (at pp.c:11223)
          Decl: name='id', quals=[], storage=[] (at pp.c:11223)
            TypeDecl: declname='id', quals=[] (at pp.c:11223)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceRequested__default__requested', quals=[] (at pp.c:11223)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11225)
  FuncDef:  (at pp.c:11229)
    Decl: name='ArbiterP__0__ResourceRequested__requested', quals=[], storage=['static', 'inline'] (at pp.c:11229)
      FuncDecl: quals=None (at pp.c:11229)
        ParamList:  (at pp.c:11229)
          Decl: name='arg_0x101edd7e8', quals=[], storage=[] (at pp.c:11229)
            TypeDecl: declname='arg_0x101edd7e8', quals=[] (at pp.c:11229)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceRequested__requested', quals=[] (at pp.c:11229)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11229)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceRequested__default__requested' (at pp.c:11231)
        ExprList:  (at pp.c:11231)
          ID: name='arg_0x101edd7e8' (at pp.c:11231)
  FuncDef:  (at pp.c:11236)
    Decl: name='ArbiterP__0__Resource__request', quals=[], storage=['inline', 'static'] (at pp.c:11236)
      FuncDecl: quals=None (at pp.c:11236)
        ParamList:  (at pp.c:11236)
          Decl: name='id', quals=[], storage=[] (at pp.c:11236)
            TypeDecl: declname='id', quals=[] (at pp.c:11236)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__Resource__request', quals=[] (at pp.c:11236)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11238)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceRequested__requested' (at pp.c:11239)
        ExprList:  (at pp.c:11239)
          ID: name='ArbiterP__0__resId' (at pp.c:11239)
      Compound:  (at pp.c:11242)
        If:  (at pp.c:11243)
          BinaryOp: op='==' (at pp.c:11243)
            ID: name='ArbiterP__0__state' (at pp.c:11243)
            ID: name='ArbiterP__0__RES_CONTROLLED' (at pp.c:11243)
          Compound:  (at pp.c:11243)
            Assignment: op='=' (at pp.c:11244)
              ID: name='ArbiterP__0__state' (at pp.c:11244)
              ID: name='ArbiterP__0__RES_GRANTING' (at pp.c:11244)
            Assignment: op='=' (at pp.c:11245)
              ID: name='ArbiterP__0__reqResId' (at pp.c:11245)
              ID: name='id' (at pp.c:11245)
          Compound:  (at pp.c:11247)
            If:  (at pp.c:11249)
              BinaryOp: op='==' (at pp.c:11249)
                ID: name='ArbiterP__0__reqResId' (at pp.c:11249)
                ID: name='id' (at pp.c:11249)
              Compound:  (at pp.c:11249)
                Compound:  (at pp.c:11250)
                  Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11251)
                    TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11251)
                      IdentifierType: names=['char', 'unsigned'] (at None)
                    ID: name='SUCCESS' (at pp.c:11253)
                  Return:  (at pp.c:11256)
                    ID: name='__nesc_temp' (at pp.c:11256)
              Compound:  (at pp.c:11261)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11262)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11262)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  FuncCall:  (at None)
                    ID: name='ArbiterP__0__Queue__enqueue' (at pp.c:11264)
                    ExprList:  (at pp.c:11264)
                      ID: name='id' (at pp.c:11264)
                Return:  (at pp.c:11267)
                  ID: name='__nesc_temp' (at pp.c:11267)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceDefaultOwner__requested' (at pp.c:11272)
      Return:  (at pp.c:11273)
        ID: name='SUCCESS' (at pp.c:11273)
  FuncDef:  (at pp.c:11277)
    Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__request', quals=[], storage=['inline', 'static'] (at pp.c:11277)
      FuncDecl: quals=None (at pp.c:11277)
        ParamList:  (at pp.c:11277)
          Decl: name='id', quals=[], storage=[] (at pp.c:11277)
            TypeDecl: declname='id', quals=[] (at pp.c:11277)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__request', quals=[] (at pp.c:11277)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11279)
      Return:  (at pp.c:11281)
        ID: name='FAIL' (at pp.c:11281)
  FuncDef:  (at pp.c:11285)
    Decl: name='Msp430SpiNoDmaP__0__UsartResource__request', quals=[], storage=['static', 'inline'] (at pp.c:11285)
      FuncDecl: quals=None (at pp.c:11285)
        ParamList:  (at pp.c:11285)
          Decl: name='arg_0x101d550c8', quals=[], storage=[] (at pp.c:11285)
            TypeDecl: declname='arg_0x101d550c8', quals=[] (at pp.c:11285)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__request', quals=[] (at pp.c:11285)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11285)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11287)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11287)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:11291)
        ID: name='arg_0x101d550c8' (at pp.c:11291)
        Compound:  (at pp.c:11291)
          Case:  (at pp.c:11293)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:11293)
            Assignment: op='=' (at pp.c:11295)
              ID: name='__nesc_result' (at pp.c:11295)
              FuncCall:  (at None)
                ID: name='ArbiterP__0__Resource__request' (at pp.c:11295)
                ExprList:  (at pp.c:11295)
                  ID: name='Msp430Usart0C__0__CLIENT_ID' (at pp.c:11295)
          Break:  (at pp.c:11297)
          Default:  (at pp.c:11299)
            Assignment: op='=' (at pp.c:11301)
              ID: name='__nesc_result' (at pp.c:11301)
              FuncCall:  (at None)
                ID: name='Msp430SpiNoDmaP__0__UsartResource__default__request' (at pp.c:11301)
                ExprList:  (at pp.c:11301)
                  ID: name='arg_0x101d550c8' (at pp.c:11301)
          Break:  (at pp.c:11303)
      Return:  (at pp.c:11309)
        ID: name='__nesc_result' (at pp.c:11309)
  FuncDef:  (at pp.c:11314)
    Decl: name='Msp430SpiNoDmaP__0__Resource__request', quals=[], storage=['inline', 'static'] (at pp.c:11314)
      FuncDecl: quals=None (at pp.c:11314)
        ParamList:  (at pp.c:11314)
          Decl: name='id', quals=[], storage=[] (at pp.c:11314)
            TypeDecl: declname='id', quals=[] (at pp.c:11314)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__request', quals=[] (at pp.c:11314)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11316)
      Return:  (at pp.c:11317)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__UsartResource__request' (at pp.c:11317)
          ExprList:  (at pp.c:11317)
            ID: name='id' (at pp.c:11317)
  FuncDef:  (at pp.c:11321)
    Decl: name='CC2420SpiP__SpiResource__request', quals=[], storage=['static', 'inline'] (at pp.c:11321)
      FuncDecl: quals=None (at pp.c:11321)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__SpiResource__request', quals=[] (at pp.c:11321)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11321)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11323)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11323)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11327)
        ID: name='__nesc_result' (at pp.c:11327)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__Resource__request' (at pp.c:11327)
          ExprList:  (at pp.c:11327)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:11327)
      Return:  (at pp.c:11331)
        ID: name='__nesc_result' (at pp.c:11331)
  FuncDef:  (at pp.c:11336)
    Decl: name='HplMsp430Usart0P__Usart__tx', quals=[], storage=['inline', 'static'] (at pp.c:11336)
      FuncDecl: quals=None (at pp.c:11336)
        ParamList:  (at pp.c:11336)
          Decl: name='data', quals=[], storage=[] (at pp.c:11336)
            TypeDecl: declname='data', quals=[] (at pp.c:11336)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__tx', quals=[] (at pp.c:11336)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11338)
      Assignment: op='=' (at pp.c:11339)
        ID: name='HplMsp430Usart0P__U0TXBUF' (at pp.c:11339)
        ID: name='data' (at pp.c:11339)
  FuncDef:  (at pp.c:11343)
    Decl: name='Msp430SpiNoDmaP__0__Usart__tx', quals=[], storage=['static', 'inline'] (at pp.c:11343)
      FuncDecl: quals=None (at pp.c:11343)
        ParamList:  (at pp.c:11343)
          Decl: name='data', quals=[], storage=[] (at pp.c:11343)
            TypeDecl: declname='data', quals=[] (at pp.c:11343)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__tx', quals=[] (at pp.c:11343)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11343)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Usart__tx' (at pp.c:11345)
        ExprList:  (at pp.c:11345)
          ID: name='data' (at pp.c:11345)
  FuncDef:  (at pp.c:11350)
    Decl: name='HplMsp430Usart0P__Usart__isRxIntrPending', quals=[], storage=['inline', 'static'] (at pp.c:11350)
      FuncDecl: quals=None (at pp.c:11350)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__isRxIntrPending', quals=[] (at pp.c:11350)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:11352)
      If:  (at pp.c:11353)
        BinaryOp: op='&' (at pp.c:11353)
          ID: name='HplMsp430Usart0P__IFG1' (at pp.c:11353)
          BinaryOp: op='<<' (at pp.c:11353)
            Constant: type='int', value='1' (at pp.c:11353)
            Constant: type='int', value='6' (at pp.c:11353)
        Compound:  (at pp.c:11353)
          Return:  (at pp.c:11354)
            ID: name='TRUE' (at pp.c:11354)
      Return:  (at pp.c:11356)
        ID: name='FALSE' (at pp.c:11356)
  FuncDef:  (at pp.c:11360)
    Decl: name='Msp430SpiNoDmaP__0__Usart__isRxIntrPending', quals=[], storage=['static', 'inline'] (at pp.c:11360)
      FuncDecl: quals=None (at pp.c:11360)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__isRxIntrPending', quals=[] (at pp.c:11360)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:11360)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11362)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11362)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11366)
        ID: name='__nesc_result' (at pp.c:11366)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__Usart__isRxIntrPending' (at pp.c:11366)
      Return:  (at pp.c:11370)
        ID: name='__nesc_result' (at pp.c:11370)
  FuncDef:  (at pp.c:11375)
    Decl: name='HplMsp430Usart0P__Usart__clrRxIntr', quals=[], storage=['inline', 'static'] (at pp.c:11375)
      FuncDecl: quals=None (at pp.c:11375)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__clrRxIntr', quals=[] (at pp.c:11375)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11377)
      Assignment: op='&=' (at pp.c:11378)
        ID: name='HplMsp430Usart0P__IFG1' (at pp.c:11378)
        UnaryOp: op='~' (at pp.c:11378)
          BinaryOp: op='<<' (at pp.c:11378)
            Constant: type='int', value='1' (at pp.c:11378)
            Constant: type='int', value='6' (at pp.c:11378)
  FuncDef:  (at pp.c:11382)
    Decl: name='Msp430SpiNoDmaP__0__Usart__clrRxIntr', quals=[], storage=['static', 'inline'] (at pp.c:11382)
      FuncDecl: quals=None (at pp.c:11382)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__clrRxIntr', quals=[] (at pp.c:11382)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11382)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Usart__clrRxIntr' (at pp.c:11384)
  FuncDef:  (at pp.c:11389)
    Decl: name='HplMsp430Usart0P__Usart__rx', quals=[], storage=['inline', 'static'] (at pp.c:11389)
      FuncDecl: quals=None (at pp.c:11389)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__rx', quals=[] (at pp.c:11389)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:11391)
      Return:  (at pp.c:11392)
        ID: name='U0RXBUF' (at pp.c:11392)
  FuncDef:  (at pp.c:11396)
    Decl: name='Msp430SpiNoDmaP__0__Usart__rx', quals=[], storage=['static', 'inline'] (at pp.c:11396)
      FuncDecl: quals=None (at pp.c:11396)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__rx', quals=[] (at pp.c:11396)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:11396)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11398)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11398)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11402)
        ID: name='__nesc_result' (at pp.c:11402)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__Usart__rx' (at pp.c:11402)
      Return:  (at pp.c:11406)
        ID: name='__nesc_result' (at pp.c:11406)
  FuncDef:  (at pp.c:11411)
    Decl: name='CC2420SpiP__ChipSpiResource__abortRelease', quals=[], storage=['inline', 'static'] (at pp.c:11411)
      FuncDecl: quals=None (at pp.c:11411)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__ChipSpiResource__abortRelease', quals=[] (at pp.c:11411)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11413)
      Assignment: op='=' (at pp.c:11416)
        ID: name='CC2420SpiP__release' (at pp.c:11416)
        ID: name='FALSE' (at pp.c:11416)
  FuncDef:  (at pp.c:11420)
    Decl: name='CC2420TransmitP__ChipSpiResource__abortRelease', quals=[], storage=['static', 'inline'] (at pp.c:11420)
      FuncDecl: quals=None (at pp.c:11420)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__ChipSpiResource__abortRelease', quals=[] (at pp.c:11420)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11420)
      FuncCall:  (at None)
        ID: name='CC2420SpiP__ChipSpiResource__abortRelease' (at pp.c:11422)
  FuncDef:  (at pp.c:11427)
    Decl: name='CC2420TransmitP__ChipSpiResource__releasing', quals=[], storage=['inline', 'static'] (at pp.c:11427)
      FuncDecl: quals=None (at pp.c:11427)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__ChipSpiResource__releasing', quals=[] (at pp.c:11427)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11429)
      If:  (at pp.c:11430)
        ID: name='CC2420TransmitP__abortSpiRelease' (at pp.c:11430)
        Compound:  (at pp.c:11430)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__ChipSpiResource__abortRelease' (at pp.c:11431)
  FuncDef:  (at pp.c:11436)
    Decl: name='CC2420SpiP__ChipSpiResource__releasing', quals=[], storage=['static', 'inline'] (at pp.c:11436)
      FuncDecl: quals=None (at pp.c:11436)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__ChipSpiResource__releasing', quals=[] (at pp.c:11436)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11436)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__ChipSpiResource__releasing' (at pp.c:11438)
  FuncDef:  (at pp.c:11443)
    Decl: name='ArbiterP__0__ResourceDefaultOwner__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:11443)
      FuncDecl: quals=None (at pp.c:11443)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__default__granted', quals=[] (at pp.c:11443)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11445)
  FuncDef:  (at pp.c:11449)
    Decl: name='ArbiterP__0__ResourceDefaultOwner__granted', quals=[], storage=['static', 'inline'] (at pp.c:11449)
      FuncDecl: quals=None (at pp.c:11449)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__granted', quals=[] (at pp.c:11449)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11449)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceDefaultOwner__default__granted' (at pp.c:11451)
  FuncDef:  (at pp.c:11456)
    Decl: name='Msp430SpiNoDmaP__0__Usart__resetUsart', quals=[], storage=['static', 'inline'] (at pp.c:11456)
      FuncDecl: quals=None (at pp.c:11456)
        ParamList:  (at pp.c:11456)
          Decl: name='reset', quals=[], storage=[] (at pp.c:11456)
            TypeDecl: declname='reset', quals=[] (at pp.c:11456)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__resetUsart', quals=[] (at pp.c:11456)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11456)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Usart__resetUsart' (at pp.c:11458)
        ExprList:  (at pp.c:11458)
          ID: name='reset' (at pp.c:11458)
  FuncDef:  (at pp.c:11463)
    Decl: name='Msp430SpiNoDmaP__0__Usart__disableSpi', quals=[], storage=['static', 'inline'] (at pp.c:11463)
      FuncDecl: quals=None (at pp.c:11463)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__disableSpi', quals=[] (at pp.c:11463)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11463)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Usart__disableSpi' (at pp.c:11465)
  FuncDef:  (at pp.c:11470)
    Decl: name='Msp430SpiNoDmaP__0__ResourceConfigure__unconfigure', quals=[], storage=['inline', 'static'] (at pp.c:11470)
      FuncDecl: quals=None (at pp.c:11470)
        ParamList:  (at pp.c:11470)
          Decl: name='id', quals=[], storage=[] (at pp.c:11470)
            TypeDecl: declname='id', quals=[] (at pp.c:11470)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__ResourceConfigure__unconfigure', quals=[] (at pp.c:11470)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11472)
      FuncCall:  (at None)
        ID: name='Msp430SpiNoDmaP__0__Usart__resetUsart' (at pp.c:11473)
        ExprList:  (at pp.c:11473)
          ID: name='TRUE' (at pp.c:11473)
      FuncCall:  (at None)
        ID: name='Msp430SpiNoDmaP__0__Usart__disableSpi' (at pp.c:11474)
      FuncCall:  (at None)
        ID: name='Msp430SpiNoDmaP__0__Usart__resetUsart' (at pp.c:11475)
        ExprList:  (at pp.c:11475)
          ID: name='FALSE' (at pp.c:11475)
  FuncDef:  (at pp.c:11479)
    Decl: name='ArbiterP__0__ResourceConfigure__default__unconfigure', quals=[], storage=['inline', 'static'] (at pp.c:11479)
      FuncDecl: quals=None (at pp.c:11479)
        ParamList:  (at pp.c:11479)
          Decl: name='id', quals=[], storage=[] (at pp.c:11479)
            TypeDecl: declname='id', quals=[] (at pp.c:11479)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceConfigure__default__unconfigure', quals=[] (at pp.c:11479)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11481)
  FuncDef:  (at pp.c:11485)
    Decl: name='ArbiterP__0__ResourceConfigure__unconfigure', quals=[], storage=['static', 'inline'] (at pp.c:11485)
      FuncDecl: quals=None (at pp.c:11485)
        ParamList:  (at pp.c:11485)
          Decl: name='arg_0x101f209b8', quals=[], storage=[] (at pp.c:11485)
            TypeDecl: declname='arg_0x101f209b8', quals=[] (at pp.c:11485)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceConfigure__unconfigure', quals=[] (at pp.c:11485)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11485)
      Switch:  (at pp.c:11487)
        ID: name='arg_0x101f209b8' (at pp.c:11487)
        Compound:  (at pp.c:11487)
          Case:  (at pp.c:11489)
            ID: name='Msp430Usart0C__0__CLIENT_ID' (at pp.c:11489)
            FuncCall:  (at None)
              ID: name='Msp430SpiNoDmaP__0__ResourceConfigure__unconfigure' (at pp.c:11491)
              ExprList:  (at pp.c:11491)
                ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:11491)
          Break:  (at pp.c:11493)
          Default:  (at pp.c:11495)
            FuncCall:  (at None)
              ID: name='ArbiterP__0__ResourceConfigure__default__unconfigure' (at pp.c:11497)
              ExprList:  (at pp.c:11497)
                ID: name='arg_0x101f209b8' (at pp.c:11497)
          Break:  (at pp.c:11499)
  FuncDef:  (at pp.c:11506)
    Decl: name='ArbiterP__0__grantedTask__postTask', quals=[], storage=['static', 'inline'] (at pp.c:11506)
      FuncDecl: quals=None (at pp.c:11506)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__grantedTask__postTask', quals=[] (at pp.c:11506)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11506)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11508)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11508)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11512)
        ID: name='__nesc_result' (at pp.c:11512)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:11512)
          ExprList:  (at pp.c:11512)
            ID: name='ArbiterP__0__grantedTask' (at pp.c:11512)
      Return:  (at pp.c:11516)
        ID: name='__nesc_result' (at pp.c:11516)
  FuncDef:  (at pp.c:11521)
    Decl: name='FcfsResourceQueueC__1__FcfsQueue__dequeue', quals=[], storage=['inline', 'static'] (at pp.c:11521)
      FuncDecl: quals=None (at pp.c:11521)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__dequeue', quals=[] (at pp.c:11521)
          IdentifierType: names=['resource_client_id_t'] (at None)
    Compound:  (at pp.c:11523)
      Compound:  (at pp.c:11526)
        If:  (at pp.c:11527)
          BinaryOp: op='!=' (at pp.c:11527)
            ID: name='FcfsResourceQueueC__1__qHead' (at pp.c:11527)
            ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:11527)
          Compound:  (at pp.c:11527)
            Decl: name='id', quals=[], storage=[] (at pp.c:11528)
              TypeDecl: declname='id', quals=[] (at pp.c:11528)
                IdentifierType: names=['uint8_t'] (at None)
              ID: name='FcfsResourceQueueC__1__qHead' (at pp.c:11528)
            Assignment: op='=' (at pp.c:11531)
              ID: name='FcfsResourceQueueC__1__qHead' (at pp.c:11531)
              ArrayRef:  (at pp.c:11531)
                ID: name='FcfsResourceQueueC__1__resQ' (at pp.c:11531)
                ID: name='FcfsResourceQueueC__1__qHead' (at pp.c:11531)
            If:  (at pp.c:11532)
              BinaryOp: op='==' (at pp.c:11532)
                ID: name='FcfsResourceQueueC__1__qHead' (at pp.c:11532)
                ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:11532)
              Compound:  (at pp.c:11532)
                Assignment: op='=' (at pp.c:11533)
                  ID: name='FcfsResourceQueueC__1__qTail' (at pp.c:11533)
                  ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:11533)
            Assignment: op='=' (at pp.c:11536)
              ArrayRef:  (at pp.c:11536)
                ID: name='FcfsResourceQueueC__1__resQ' (at pp.c:11536)
                ID: name='id' (at pp.c:11536)
              ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:11536)
            Compound:  (at pp.c:11537)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11538)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11538)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='id' (at pp.c:11540)
              Return:  (at pp.c:11543)
                ID: name='__nesc_temp' (at pp.c:11543)
        Compound:  (at pp.c:11547)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11548)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11548)
              IdentifierType: names=['char', 'unsigned'] (at None)
            ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:11550)
          Return:  (at pp.c:11553)
            ID: name='__nesc_temp' (at pp.c:11553)
  FuncDef:  (at pp.c:11559)
    Decl: name='ArbiterP__0__Queue__dequeue', quals=[], storage=['static', 'inline'] (at pp.c:11559)
      FuncDecl: quals=None (at pp.c:11559)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__Queue__dequeue', quals=[] (at pp.c:11559)
          IdentifierType: names=['resource_client_id_t'] (at None)
    Compound:  (at pp.c:11559)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11561)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11561)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11565)
        ID: name='__nesc_result' (at pp.c:11565)
        FuncCall:  (at None)
          ID: name='FcfsResourceQueueC__1__FcfsQueue__dequeue' (at pp.c:11565)
      Return:  (at pp.c:11569)
        ID: name='__nesc_result' (at pp.c:11569)
  FuncDef:  (at pp.c:11574)
    Decl: name='FcfsResourceQueueC__1__FcfsQueue__isEmpty', quals=[], storage=['inline', 'static'] (at pp.c:11574)
      FuncDecl: quals=None (at pp.c:11574)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__isEmpty', quals=[] (at pp.c:11574)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:11576)
      Compound:  (at pp.c:11579)
        Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11580)
          TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11580)
            IdentifierType: names=['char', 'unsigned'] (at None)
          BinaryOp: op='==' (at pp.c:11582)
            ID: name='FcfsResourceQueueC__1__qHead' (at pp.c:11582)
            ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:11582)
        Return:  (at pp.c:11585)
          ID: name='__nesc_temp' (at pp.c:11585)
  FuncDef:  (at pp.c:11590)
    Decl: name='ArbiterP__0__Queue__isEmpty', quals=[], storage=['static', 'inline'] (at pp.c:11590)
      FuncDecl: quals=None (at pp.c:11590)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__Queue__isEmpty', quals=[] (at pp.c:11590)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:11590)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11592)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11592)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11596)
        ID: name='__nesc_result' (at pp.c:11596)
        FuncCall:  (at None)
          ID: name='FcfsResourceQueueC__1__FcfsQueue__isEmpty' (at pp.c:11596)
      Return:  (at pp.c:11600)
        ID: name='__nesc_result' (at pp.c:11600)
  FuncDef:  (at pp.c:11605)
    Decl: name='ArbiterP__0__Resource__release', quals=[], storage=['inline', 'static'] (at pp.c:11605)
      FuncDecl: quals=None (at pp.c:11605)
        ParamList:  (at pp.c:11605)
          Decl: name='id', quals=[], storage=[] (at pp.c:11605)
            TypeDecl: declname='id', quals=[] (at pp.c:11605)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__Resource__release', quals=[] (at pp.c:11605)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11607)
      Compound:  (at pp.c:11610)
        If:  (at pp.c:11611)
          BinaryOp: op='&&' (at pp.c:11611)
            BinaryOp: op='==' (at pp.c:11611)
              ID: name='ArbiterP__0__state' (at pp.c:11611)
              ID: name='ArbiterP__0__RES_BUSY' (at pp.c:11611)
            BinaryOp: op='==' (at pp.c:11611)
              ID: name='ArbiterP__0__resId' (at pp.c:11611)
              ID: name='id' (at pp.c:11611)
          Compound:  (at pp.c:11611)
            If:  (at pp.c:11612)
              BinaryOp: op='==' (at None)
                FuncCall:  (at None)
                  ID: name='ArbiterP__0__Queue__isEmpty' (at pp.c:11612)
                ID: name='FALSE' (at pp.c:11612)
              Compound:  (at pp.c:11612)
                Assignment: op='=' (at pp.c:11613)
                  ID: name='ArbiterP__0__reqResId' (at pp.c:11613)
                  FuncCall:  (at None)
                    ID: name='ArbiterP__0__Queue__dequeue' (at pp.c:11613)
                Assignment: op='=' (at pp.c:11614)
                  ID: name='ArbiterP__0__resId' (at pp.c:11614)
                  ID: name='ArbiterP__0__NO_RES' (at pp.c:11614)
                Assignment: op='=' (at pp.c:11615)
                  ID: name='ArbiterP__0__state' (at pp.c:11615)
                  ID: name='ArbiterP__0__RES_GRANTING' (at pp.c:11615)
                FuncCall:  (at None)
                  ID: name='ArbiterP__0__grantedTask__postTask' (at pp.c:11616)
                FuncCall:  (at None)
                  ID: name='ArbiterP__0__ResourceConfigure__unconfigure' (at pp.c:11617)
                  ExprList:  (at pp.c:11617)
                    ID: name='id' (at pp.c:11617)
              Compound:  (at pp.c:11619)
                Assignment: op='=' (at pp.c:11620)
                  ID: name='ArbiterP__0__resId' (at pp.c:11620)
                  ID: name='ArbiterP__0__default_owner_id' (at pp.c:11620)
                Assignment: op='=' (at pp.c:11621)
                  ID: name='ArbiterP__0__state' (at pp.c:11621)
                  ID: name='ArbiterP__0__RES_CONTROLLED' (at pp.c:11621)
                FuncCall:  (at None)
                  ID: name='ArbiterP__0__ResourceConfigure__unconfigure' (at pp.c:11622)
                  ExprList:  (at pp.c:11622)
                    ID: name='id' (at pp.c:11622)
                FuncCall:  (at None)
                  ID: name='ArbiterP__0__ResourceDefaultOwner__granted' (at pp.c:11623)
            Compound:  (at pp.c:11625)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11626)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11626)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='SUCCESS' (at pp.c:11628)
              Return:  (at pp.c:11631)
                ID: name='__nesc_temp' (at pp.c:11631)
      Return:  (at pp.c:11636)
        ID: name='FAIL' (at pp.c:11636)
  FuncDef:  (at pp.c:11640)
    Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__release', quals=[], storage=['inline', 'static'] (at pp.c:11640)
      FuncDecl: quals=None (at pp.c:11640)
        ParamList:  (at pp.c:11640)
          Decl: name='id', quals=[], storage=[] (at pp.c:11640)
            TypeDecl: declname='id', quals=[] (at pp.c:11640)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__release', quals=[] (at pp.c:11640)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11642)
      Return:  (at pp.c:11644)
        ID: name='FAIL' (at pp.c:11644)
  FuncDef:  (at pp.c:11648)
    Decl: name='Msp430SpiNoDmaP__0__UsartResource__release', quals=[], storage=['static', 'inline'] (at pp.c:11648)
      FuncDecl: quals=None (at pp.c:11648)
        ParamList:  (at pp.c:11648)
          Decl: name='arg_0x101d550c8', quals=[], storage=[] (at pp.c:11648)
            TypeDecl: declname='arg_0x101d550c8', quals=[] (at pp.c:11648)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__release', quals=[] (at pp.c:11648)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11648)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11650)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11650)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:11654)
        ID: name='arg_0x101d550c8' (at pp.c:11654)
        Compound:  (at pp.c:11654)
          Case:  (at pp.c:11656)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:11656)
            Assignment: op='=' (at pp.c:11658)
              ID: name='__nesc_result' (at pp.c:11658)
              FuncCall:  (at None)
                ID: name='ArbiterP__0__Resource__release' (at pp.c:11658)
                ExprList:  (at pp.c:11658)
                  ID: name='Msp430Usart0C__0__CLIENT_ID' (at pp.c:11658)
          Break:  (at pp.c:11660)
          Default:  (at pp.c:11662)
            Assignment: op='=' (at pp.c:11664)
              ID: name='__nesc_result' (at pp.c:11664)
              FuncCall:  (at None)
                ID: name='Msp430SpiNoDmaP__0__UsartResource__default__release' (at pp.c:11664)
                ExprList:  (at pp.c:11664)
                  ID: name='arg_0x101d550c8' (at pp.c:11664)
          Break:  (at pp.c:11666)
      Return:  (at pp.c:11672)
        ID: name='__nesc_result' (at pp.c:11672)
  FuncDef:  (at pp.c:11677)
    Decl: name='Msp430SpiNoDmaP__0__Resource__release', quals=[], storage=['inline', 'static'] (at pp.c:11677)
      FuncDecl: quals=None (at pp.c:11677)
        ParamList:  (at pp.c:11677)
          Decl: name='id', quals=[], storage=[] (at pp.c:11677)
            TypeDecl: declname='id', quals=[] (at pp.c:11677)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__release', quals=[] (at pp.c:11677)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11679)
      Return:  (at pp.c:11680)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__UsartResource__release' (at pp.c:11680)
          ExprList:  (at pp.c:11680)
            ID: name='id' (at pp.c:11680)
  FuncDef:  (at pp.c:11684)
    Decl: name='CC2420SpiP__SpiResource__release', quals=[], storage=['static', 'inline'] (at pp.c:11684)
      FuncDecl: quals=None (at pp.c:11684)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__SpiResource__release', quals=[] (at pp.c:11684)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11684)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11686)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11686)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11690)
        ID: name='__nesc_result' (at pp.c:11690)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__Resource__release' (at pp.c:11690)
          ExprList:  (at pp.c:11690)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:11690)
      Return:  (at pp.c:11694)
        ID: name='__nesc_result' (at pp.c:11694)
  FuncDef:  (at pp.c:11699)
    Decl: name='HplMsp430GeneralIOP__17__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:11699)
      FuncDecl: quals=None (at pp.c:11699)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__17__IO__selectIOFunc', quals=[] (at pp.c:11699)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11701)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:11704)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='27U' (at pp.c:11704)
        UnaryOp: op='~' (at pp.c:11704)
          BinaryOp: op='<<' (at pp.c:11704)
            Constant: type='int', value='0x01' (at pp.c:11704)
            Constant: type='int', value='1' (at pp.c:11704)
  FuncDef:  (at pp.c:11708)
    Decl: name='HplMsp430Usart0P__SIMO__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:11708)
      FuncDecl: quals=None (at pp.c:11708)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__SIMO__selectIOFunc', quals=[] (at pp.c:11708)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11708)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__17__IO__selectIOFunc' (at pp.c:11710)
  FuncDef:  (at pp.c:11715)
    Decl: name='HplMsp430GeneralIOP__18__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:11715)
      FuncDecl: quals=None (at pp.c:11715)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__18__IO__selectIOFunc', quals=[] (at pp.c:11715)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11717)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:11720)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='27U' (at pp.c:11720)
        UnaryOp: op='~' (at pp.c:11720)
          BinaryOp: op='<<' (at pp.c:11720)
            Constant: type='int', value='0x01' (at pp.c:11720)
            Constant: type='int', value='2' (at pp.c:11720)
  FuncDef:  (at pp.c:11724)
    Decl: name='HplMsp430Usart0P__SOMI__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:11724)
      FuncDecl: quals=None (at pp.c:11724)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__SOMI__selectIOFunc', quals=[] (at pp.c:11724)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11724)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__18__IO__selectIOFunc' (at pp.c:11726)
  FuncDef:  (at pp.c:11731)
    Decl: name='HplMsp430GeneralIOP__19__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:11731)
      FuncDecl: quals=None (at pp.c:11731)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__19__IO__selectIOFunc', quals=[] (at pp.c:11731)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11733)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:11736)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='27U' (at pp.c:11736)
        UnaryOp: op='~' (at pp.c:11736)
          BinaryOp: op='<<' (at pp.c:11736)
            Constant: type='int', value='0x01' (at pp.c:11736)
            Constant: type='int', value='3' (at pp.c:11736)
  FuncDef:  (at pp.c:11740)
    Decl: name='HplMsp430Usart0P__UCLK__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:11740)
      FuncDecl: quals=None (at pp.c:11740)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__UCLK__selectIOFunc', quals=[] (at pp.c:11740)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11740)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__19__IO__selectIOFunc' (at pp.c:11742)
  FuncDef:  (at pp.c:11747)
    Decl: name='CC2420TransmitP__STXONCCA__strobe', quals=[], storage=['static', 'inline'] (at pp.c:11747)
      FuncDecl: quals=None (at pp.c:11747)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__STXONCCA__strobe', quals=[] (at pp.c:11747)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:11747)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11749)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11749)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11753)
        ID: name='__nesc_result' (at pp.c:11753)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Strobe__strobe' (at pp.c:11753)
          ExprList:  (at pp.c:11753)
            ID: name='CC2420_STXONCCA' (at pp.c:11753)
      Return:  (at pp.c:11757)
        ID: name='__nesc_result' (at pp.c:11757)
  FuncDef:  (at pp.c:11761)
    Decl: name='CC2420TransmitP__STXON__strobe', quals=[], storage=['static', 'inline'] (at pp.c:11761)
      FuncDecl: quals=None (at pp.c:11761)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__STXON__strobe', quals=[] (at pp.c:11761)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:11761)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11763)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11763)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11767)
        ID: name='__nesc_result' (at pp.c:11767)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Strobe__strobe' (at pp.c:11767)
          ExprList:  (at pp.c:11767)
            ID: name='CC2420_STXON' (at pp.c:11767)
      Return:  (at pp.c:11771)
        ID: name='__nesc_result' (at pp.c:11771)
  FuncDef:  (at pp.c:11775)
    Decl: name='CC2420TransmitP__SNOP__strobe', quals=[], storage=['static', 'inline'] (at pp.c:11775)
      FuncDecl: quals=None (at pp.c:11775)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__SNOP__strobe', quals=[] (at pp.c:11775)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:11775)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11777)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11777)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11781)
        ID: name='__nesc_result' (at pp.c:11781)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Strobe__strobe' (at pp.c:11781)
          ExprList:  (at pp.c:11781)
            ID: name='CC2420_SNOP' (at pp.c:11781)
      Return:  (at pp.c:11785)
        ID: name='__nesc_result' (at pp.c:11785)
  FuncDef:  (at pp.c:11790)
    Decl: name='CC2420SpiP__ChipSpiResource__attemptRelease', quals=[], storage=['inline', 'static'] (at pp.c:11790)
      FuncDecl: quals=None (at pp.c:11790)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__ChipSpiResource__attemptRelease', quals=[] (at pp.c:11790)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11792)
      Return:  (at pp.c:11793)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__attemptRelease' (at pp.c:11793)
  FuncDef:  (at pp.c:11797)
    Decl: name='CC2420TransmitP__ChipSpiResource__attemptRelease', quals=[], storage=['static', 'inline'] (at pp.c:11797)
      FuncDecl: quals=None (at pp.c:11797)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__ChipSpiResource__attemptRelease', quals=[] (at pp.c:11797)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11797)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11799)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11799)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11803)
        ID: name='__nesc_result' (at pp.c:11803)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__ChipSpiResource__attemptRelease' (at pp.c:11803)
      Return:  (at pp.c:11807)
        ID: name='__nesc_result' (at pp.c:11807)
  FuncDef:  (at pp.c:11812)
    Decl: name='HplMsp430GeneralIOP__25__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:11812)
      FuncDecl: quals=None (at pp.c:11812)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__25__IO__selectModuleFunc', quals=[] (at pp.c:11812)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11814)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:11817)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='31U' (at pp.c:11817)
        BinaryOp: op='<<' (at pp.c:11817)
          Constant: type='int', value='0x01' (at pp.c:11817)
          Constant: type='int', value='1' (at pp.c:11817)
  FuncDef:  (at pp.c:11821)
    Decl: name='GpioCaptureC__0__GeneralIO__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:11821)
      FuncDecl: quals=None (at pp.c:11821)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='GpioCaptureC__0__GeneralIO__selectModuleFunc', quals=[] (at pp.c:11821)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11821)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__25__IO__selectModuleFunc' (at pp.c:11823)
  FuncDef:  (at pp.c:11828)
    Decl: name='Msp430TimerCapComP__4__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:11828)
      FuncDecl: quals=None (at pp.c:11828)
        ParamList:  (at pp.c:11828)
          Decl: name='x', quals=[], storage=[] (at pp.c:11828)
            TypeDecl: declname='x', quals=[] (at pp.c:11828)
              IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__CC2int', quals=[] (at pp.c:11828)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:11830)
      Decl: name='c', quals=[], storage=[] (at pp.c:11839)
        TypeDecl: declname='c', quals=[] (at pp.c:11839)
          Union: name='Msp430TimerCapComP__4____nesc_unnamed4384', packed=False (at pp.c:11832)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:11834)
                IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:11836)
                IdentifierType: names=['uint16_t'] (at None)
        ExprList:  (at pp.c:11839)
          Assignment: op='=' (at pp.c:11839)
            StructRef: type='.' (at pp.c:11839)
              ID: name='f' (at pp.c:11839)
            ID: name='x' (at pp.c:11839)
      Return:  (at pp.c:11842)
        StructRef: type='.' (at pp.c:11842)
          ID: name='c' (at pp.c:11842)
          ID: name='t' (at pp.c:11842)
  FuncDef:  (at pp.c:11846)
    Decl: name='Msp430TimerCapComP__4__captureControl', quals=[], storage=['inline', 'static'] (at pp.c:11846)
      FuncDecl: quals=None (at pp.c:11846)
        ParamList:  (at pp.c:11846)
          Decl: name='l_cm', quals=[], storage=[] (at pp.c:11846)
            TypeDecl: declname='l_cm', quals=[] (at pp.c:11846)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__captureControl', quals=[] (at pp.c:11846)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:11847)
      Decl: name='x', quals=[], storage=[] (at pp.c:11848)
        TypeDecl: declname='x', quals=[] (at pp.c:11848)
          IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
        ExprList:  (at pp.c:11849)
          Assignment: op='=' (at pp.c:11849)
            StructRef: type='.' (at pp.c:11849)
              ID: name='cm' (at pp.c:11849)
            BinaryOp: op='&' (at pp.c:11849)
              ID: name='l_cm' (at pp.c:11849)
              Constant: type='int', value='0x03' (at pp.c:11849)
          Assignment: op='=' (at pp.c:11850)
            StructRef: type='.' (at pp.c:11850)
              ID: name='ccis' (at pp.c:11850)
            Constant: type='int', value='0' (at pp.c:11850)
          Assignment: op='=' (at pp.c:11851)
            StructRef: type='.' (at pp.c:11851)
              ID: name='clld' (at pp.c:11851)
            Constant: type='int', value='0' (at pp.c:11851)
          Assignment: op='=' (at pp.c:11852)
            StructRef: type='.' (at pp.c:11852)
              ID: name='cap' (at pp.c:11852)
            Constant: type='int', value='1' (at pp.c:11852)
          Assignment: op='=' (at pp.c:11853)
            StructRef: type='.' (at pp.c:11853)
              ID: name='scs' (at pp.c:11853)
            Constant: type='int', value='0' (at pp.c:11853)
          Assignment: op='=' (at pp.c:11854)
            StructRef: type='.' (at pp.c:11854)
              ID: name='ccie' (at pp.c:11854)
            Constant: type='int', value='0' (at pp.c:11854)
      Return:  (at pp.c:11856)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__4__CC2int' (at pp.c:11856)
          ExprList:  (at pp.c:11856)
            ID: name='x' (at pp.c:11856)
  FuncDef:  (at pp.c:11860)
    Decl: name='Msp430TimerCapComP__4__Control__setControlAsCapture', quals=[], storage=['inline', 'static'] (at pp.c:11860)
      FuncDecl: quals=None (at pp.c:11860)
        ParamList:  (at pp.c:11860)
          Decl: name='cm', quals=[], storage=[] (at pp.c:11860)
            TypeDecl: declname='cm', quals=[] (at pp.c:11860)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Control__setControlAsCapture', quals=[] (at pp.c:11860)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11861)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:11862)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='388U' (at pp.c:11862)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__4__captureControl' (at pp.c:11862)
          ExprList:  (at pp.c:11862)
            ID: name='cm' (at pp.c:11862)
  FuncDef:  (at pp.c:11866)
    Decl: name='GpioCaptureC__0__Msp430TimerControl__setControlAsCapture', quals=[], storage=['static', 'inline'] (at pp.c:11866)
      FuncDecl: quals=None (at pp.c:11866)
        ParamList:  (at pp.c:11866)
          Decl: name='cm', quals=[], storage=[] (at pp.c:11866)
            TypeDecl: declname='cm', quals=[] (at pp.c:11866)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='GpioCaptureC__0__Msp430TimerControl__setControlAsCapture', quals=[] (at pp.c:11866)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11866)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__4__Control__setControlAsCapture' (at pp.c:11868)
        ExprList:  (at pp.c:11868)
          ID: name='cm' (at pp.c:11868)
  FuncDef:  (at pp.c:11873)
    Decl: name='Msp430TimerCapComP__4__Control__enableEvents', quals=[], storage=['inline', 'static'] (at pp.c:11873)
      FuncDecl: quals=None (at pp.c:11873)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Control__enableEvents', quals=[] (at pp.c:11873)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11874)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:11875)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='388U' (at pp.c:11875)
        Constant: type='int', value='0x0010' (at pp.c:11875)
  FuncDef:  (at pp.c:11879)
    Decl: name='GpioCaptureC__0__Msp430TimerControl__enableEvents', quals=[], storage=['static', 'inline'] (at pp.c:11879)
      FuncDecl: quals=None (at pp.c:11879)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='GpioCaptureC__0__Msp430TimerControl__enableEvents', quals=[] (at pp.c:11879)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11879)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__4__Control__enableEvents' (at pp.c:11881)
  FuncDef:  (at pp.c:11886)
    Decl: name='Msp430TimerCapComP__4__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:11886)
      FuncDecl: quals=None (at pp.c:11886)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Compare__default__fired', quals=[] (at pp.c:11886)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11887)
  FuncDef:  (at pp.c:11891)
    Decl: name='Msp430TimerCapComP__4__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:11891)
      FuncDecl: quals=None (at pp.c:11891)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Compare__fired', quals=[] (at pp.c:11891)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11891)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__4__Compare__default__fired' (at pp.c:11893)
  FuncDef:  (at pp.c:11898)
    Decl: name='Msp430TimerCapComP__4__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:11898)
      FuncDecl: quals=None (at pp.c:11898)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Capture__getEvent', quals=[] (at pp.c:11898)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:11899)
      Return:  (at pp.c:11900)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:11900)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='404U' (at pp.c:11900)
  FuncDef:  (at pp.c:11904)
    Decl: name='__nesc_ntoh_leuint16', quals=[], storage=['__inline', 'static'] (at pp.c:11904)
      FuncDecl: quals=None (at pp.c:11904)
        ParamList:  (at pp.c:11904)
          Decl: name='source', quals=['const'], storage=[] (at pp.c:11904)
            PtrDecl: quals=[] (at pp.c:11904)
              TypeDecl: declname='source', quals=['const'] (at pp.c:11904)
                IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_ntoh_leuint16', quals=[] (at pp.c:11904)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:11906)
      Decl: name='base', quals=['const'], storage=[] (at pp.c:11907)
        PtrDecl: quals=[] (at pp.c:11907)
          TypeDecl: declname='base', quals=['const'] (at pp.c:11907)
            IdentifierType: names=['uint8_t'] (at None)
        ID: name='source' (at pp.c:11907)
      Return:  (at pp.c:11910)
        BinaryOp: op='|' (at None)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
              ArrayRef:  (at pp.c:11910)
                ID: name='base' (at pp.c:11910)
                Constant: type='int', value='1' (at pp.c:11910)
            Constant: type='int', value='8' (at pp.c:11910)
          ArrayRef:  (at pp.c:11910)
            ID: name='base' (at pp.c:11910)
            Constant: type='int', value='0' (at pp.c:11910)
  FuncDef:  (at pp.c:11914)
    Decl: name='__nesc_hton_uint32', quals=[], storage=['__inline', 'static'] (at pp.c:11914)
      FuncDecl: quals=None (at pp.c:11914)
        ParamList:  (at pp.c:11914)
          Decl: name='target', quals=[], storage=[] (at pp.c:11914)
            PtrDecl: quals=[] (at pp.c:11914)
              TypeDecl: declname='target', quals=[] (at pp.c:11914)
                IdentifierType: names=['void'] (at None)
          Decl: name='value', quals=[], storage=[] (at pp.c:11914)
            TypeDecl: declname='value', quals=[] (at pp.c:11914)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='__nesc_hton_uint32', quals=[] (at pp.c:11914)
          IdentifierType: names=['uint32_t'] (at None)
    Compound:  (at pp.c:11916)
      Decl: name='base', quals=[], storage=[] (at pp.c:11917)
        PtrDecl: quals=[] (at pp.c:11917)
          TypeDecl: declname='base', quals=[] (at pp.c:11917)
            IdentifierType: names=['uint8_t'] (at None)
        ID: name='target' (at pp.c:11917)
      Assignment: op='=' (at pp.c:11920)
        ArrayRef:  (at pp.c:11920)
          ID: name='base' (at pp.c:11920)
          Constant: type='int', value='3' (at pp.c:11920)
        ID: name='value' (at pp.c:11920)
      Assignment: op='=' (at pp.c:11921)
        ArrayRef:  (at pp.c:11921)
          ID: name='base' (at pp.c:11921)
          Constant: type='int', value='2' (at pp.c:11921)
        BinaryOp: op='>>' (at pp.c:11921)
          ID: name='value' (at pp.c:11921)
          Constant: type='int', value='8' (at pp.c:11921)
      Assignment: op='=' (at pp.c:11922)
        ArrayRef:  (at pp.c:11922)
          ID: name='base' (at pp.c:11922)
          Constant: type='int', value='1' (at pp.c:11922)
        BinaryOp: op='>>' (at pp.c:11922)
          ID: name='value' (at pp.c:11922)
          Constant: type='int', value='16' (at pp.c:11922)
      Assignment: op='=' (at pp.c:11923)
        ArrayRef:  (at pp.c:11923)
          ID: name='base' (at pp.c:11923)
          Constant: type='int', value='0' (at pp.c:11923)
        BinaryOp: op='>>' (at pp.c:11923)
          ID: name='value' (at pp.c:11923)
          Constant: type='int', value='24' (at pp.c:11923)
      Return:  (at pp.c:11924)
        ID: name='value' (at pp.c:11924)
  FuncDef:  (at pp.c:11928)
    Decl: name='__nesc_ntoh_uint32', quals=[], storage=['__inline', 'static'] (at pp.c:11928)
      FuncDecl: quals=None (at pp.c:11928)
        ParamList:  (at pp.c:11928)
          Decl: name='source', quals=['const'], storage=[] (at pp.c:11928)
            PtrDecl: quals=[] (at pp.c:11928)
              TypeDecl: declname='source', quals=['const'] (at pp.c:11928)
                IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_ntoh_uint32', quals=[] (at pp.c:11928)
          IdentifierType: names=['uint32_t'] (at None)
    Compound:  (at pp.c:11930)
      Decl: name='base', quals=['const'], storage=[] (at pp.c:11931)
        PtrDecl: quals=[] (at pp.c:11931)
          TypeDecl: declname='base', quals=['const'] (at pp.c:11931)
            IdentifierType: names=['uint8_t'] (at None)
        ID: name='source' (at pp.c:11931)
      Return:  (at pp.c:11934)
        BinaryOp: op='|' (at None)
          BinaryOp: op='|' (at None)
            BinaryOp: op='|' (at None)
              BinaryOp: op='<<' (at None)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['uint32_t'] (at None)
                  ArrayRef:  (at pp.c:11934)
                    ID: name='base' (at pp.c:11934)
                    Constant: type='int', value='0' (at pp.c:11934)
                Constant: type='int', value='24' (at pp.c:11934)
              BinaryOp: op='<<' (at None)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['uint32_t'] (at None)
                  ArrayRef:  (at pp.c:11935)
                    ID: name='base' (at pp.c:11935)
                    Constant: type='int', value='1' (at pp.c:11935)
                Constant: type='int', value='16' (at pp.c:11935)
            BinaryOp: op='<<' (at None)
              Cast:  (at None)
                Typename: quals=[] (at None)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['uint32_t'] (at None)
                ArrayRef:  (at pp.c:11936)
                  ID: name='base' (at pp.c:11936)
                  Constant: type='int', value='2' (at pp.c:11936)
              Constant: type='int', value='8' (at pp.c:11936)
          ArrayRef:  (at pp.c:11936)
            ID: name='base' (at pp.c:11936)
            Constant: type='int', value='3' (at pp.c:11936)
  FuncDef:  (at pp.c:11940)
    Decl: name='CC2420TransmitP__PacketTimeStamp__clear', quals=[], storage=['static', 'inline'] (at pp.c:11940)
      FuncDecl: quals=None (at pp.c:11940)
        ParamList:  (at pp.c:11940)
          Decl: name='msg', quals=[], storage=[] (at pp.c:11940)
            PtrDecl: quals=[] (at pp.c:11940)
              TypeDecl: declname='msg', quals=[] (at pp.c:11940)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__PacketTimeStamp__clear', quals=[] (at pp.c:11940)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11940)
      FuncCall:  (at None)
        ID: name='CC2420PacketP__PacketTimeStamp32khz__clear' (at pp.c:11942)
        ExprList:  (at pp.c:11942)
          ID: name='msg' (at pp.c:11942)
  FuncDef:  (at pp.c:11947)
    Decl: name='CC2420ReceiveP__CC2420Receive__sfd_dropped', quals=[], storage=['inline', 'static'] (at pp.c:11947)
      FuncDecl: quals=None (at pp.c:11947)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CC2420Receive__sfd_dropped', quals=[] (at pp.c:11947)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11949)
      If:  (at pp.c:11950)
        ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:11950)
        Compound:  (at pp.c:11950)
          UnaryOp: op='p--' (at pp.c:11951)
            ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:11951)
  FuncDef:  (at pp.c:11956)
    Decl: name='CC2420TransmitP__CC2420Receive__sfd_dropped', quals=[], storage=['static', 'inline'] (at pp.c:11956)
      FuncDecl: quals=None (at pp.c:11956)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__CC2420Receive__sfd_dropped', quals=[] (at pp.c:11956)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11956)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__CC2420Receive__sfd_dropped' (at pp.c:11958)
  FuncDef:  (at pp.c:11963)
    Decl: name='HplMsp430GeneralIOP__25__IO__getRaw', quals=[], storage=['inline', 'static'] (at pp.c:11963)
      FuncDecl: quals=None (at pp.c:11963)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__25__IO__getRaw', quals=[] (at pp.c:11963)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:11965)
      Return:  (at pp.c:11967)
        BinaryOp: op='&' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:11967)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='28U' (at pp.c:11967)
          BinaryOp: op='<<' (at pp.c:11967)
            Constant: type='int', value='0x01' (at pp.c:11967)
            Constant: type='int', value='1' (at pp.c:11967)
  FuncDef:  (at pp.c:11971)
    Decl: name='HplMsp430GeneralIOP__25__IO__get', quals=[], storage=['inline', 'static'] (at pp.c:11971)
      FuncDecl: quals=None (at pp.c:11971)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__25__IO__get', quals=[] (at pp.c:11971)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:11973)
      Return:  (at pp.c:11975)
        BinaryOp: op='!=' (at None)
          FuncCall:  (at None)
            ID: name='HplMsp430GeneralIOP__25__IO__getRaw' (at pp.c:11975)
          Constant: type='int', value='0' (at pp.c:11975)
  FuncDef:  (at pp.c:11979)
    Decl: name='Msp430GpioC__8__HplGeneralIO__get', quals=[], storage=['static', 'inline'] (at pp.c:11979)
      FuncDecl: quals=None (at pp.c:11979)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__8__HplGeneralIO__get', quals=[] (at pp.c:11979)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:11979)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11981)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11981)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11985)
        ID: name='__nesc_result' (at pp.c:11985)
        FuncCall:  (at None)
          ID: name='HplMsp430GeneralIOP__25__IO__get' (at pp.c:11985)
      Return:  (at pp.c:11989)
        ID: name='__nesc_result' (at pp.c:11989)
  FuncDef:  (at pp.c:11994)
    Decl: name='Msp430GpioC__8__GeneralIO__get', quals=[], storage=['inline', 'static'] (at pp.c:11994)
      FuncDecl: quals=None (at pp.c:11994)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__8__GeneralIO__get', quals=[] (at pp.c:11994)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:11996)
      Return:  (at pp.c:11998)
        FuncCall:  (at None)
          ID: name='Msp430GpioC__8__HplGeneralIO__get' (at pp.c:11998)
  FuncDef:  (at pp.c:12002)
    Decl: name='CC2420TransmitP__SFD__get', quals=[], storage=['static', 'inline'] (at pp.c:12002)
      FuncDecl: quals=None (at pp.c:12002)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__SFD__get', quals=[] (at pp.c:12002)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:12002)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12004)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12004)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12008)
        ID: name='__nesc_result' (at pp.c:12008)
        FuncCall:  (at None)
          ID: name='Msp430GpioC__8__GeneralIO__get' (at pp.c:12008)
      Return:  (at pp.c:12012)
        ID: name='__nesc_result' (at pp.c:12012)
  FuncDef:  (at pp.c:12017)
    Decl: name='CC2420ReceiveP__CC2420Receive__sfd', quals=[], storage=['inline', 'static'] (at pp.c:12017)
      FuncDecl: quals=None (at pp.c:12017)
        ParamList:  (at pp.c:12017)
          Decl: name='time', quals=[], storage=[] (at pp.c:12017)
            TypeDecl: declname='time', quals=[] (at pp.c:12017)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CC2420Receive__sfd', quals=[] (at pp.c:12017)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12019)
      If:  (at pp.c:12020)
        BinaryOp: op='<' (at pp.c:12020)
          ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:12020)
          ID: name='CC2420ReceiveP__TIMESTAMP_QUEUE_SIZE' (at pp.c:12020)
        Compound:  (at pp.c:12020)
          Decl: name='tail', quals=[], storage=[] (at pp.c:12021)
            TypeDecl: declname='tail', quals=[] (at pp.c:12021)
              IdentifierType: names=['uint8_t'] (at None)
            BinaryOp: op='%' (at pp.c:12021)
              BinaryOp: op='+' (at pp.c:12021)
                ID: name='CC2420ReceiveP__m_timestamp_head' (at pp.c:12021)
                ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:12021)
              ID: name='CC2420ReceiveP__TIMESTAMP_QUEUE_SIZE' (at pp.c:12022)
          Assignment: op='=' (at pp.c:12025)
            ArrayRef:  (at pp.c:12025)
              ID: name='CC2420ReceiveP__m_timestamp_queue' (at pp.c:12025)
              ID: name='tail' (at pp.c:12025)
            ID: name='time' (at pp.c:12025)
          UnaryOp: op='p++' (at pp.c:12026)
            ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:12026)
  FuncDef:  (at pp.c:12031)
    Decl: name='CC2420TransmitP__CC2420Receive__sfd', quals=[], storage=['static', 'inline'] (at pp.c:12031)
      FuncDecl: quals=None (at pp.c:12031)
        ParamList:  (at pp.c:12031)
          Decl: name='time', quals=[], storage=[] (at pp.c:12031)
            TypeDecl: declname='time', quals=[] (at pp.c:12031)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__CC2420Receive__sfd', quals=[] (at pp.c:12031)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12031)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__CC2420Receive__sfd' (at pp.c:12033)
        ExprList:  (at pp.c:12033)
          ID: name='time' (at pp.c:12033)
  FuncDef:  (at pp.c:12038)
    Decl: name='GpioCaptureC__0__Capture__captureFallingEdge', quals=[], storage=['inline', 'static'] (at pp.c:12038)
      FuncDecl: quals=None (at pp.c:12038)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='GpioCaptureC__0__Capture__captureFallingEdge', quals=[] (at pp.c:12038)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:12040)
      Return:  (at pp.c:12041)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__enableCapture' (at pp.c:12041)
          ExprList:  (at pp.c:12041)
            ID: name='MSP430TIMER_CM_FALLING' (at pp.c:12041)
  FuncDef:  (at pp.c:12045)
    Decl: name='CC2420TransmitP__CaptureSFD__captureFallingEdge', quals=[], storage=['static', 'inline'] (at pp.c:12045)
      FuncDecl: quals=None (at pp.c:12045)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__CaptureSFD__captureFallingEdge', quals=[] (at pp.c:12045)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:12045)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12047)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12047)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12051)
        ID: name='__nesc_result' (at pp.c:12051)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__Capture__captureFallingEdge' (at pp.c:12051)
      Return:  (at pp.c:12055)
        ID: name='__nesc_result' (at pp.c:12055)
  FuncDef:  (at pp.c:12060)
    Decl: name='CC2420PacketP__CC2420PacketBody__getHeader', quals=[], storage=['inline', 'static'] (at pp.c:12060)
      FuncDecl: quals=None (at pp.c:12060)
        ParamList:  (at pp.c:12060)
          Decl: name='msg', quals=[], storage=[] (at pp.c:12060)
            PtrDecl: quals=[] (at pp.c:12060)
              TypeDecl: declname='msg', quals=[] (at pp.c:12060)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:12060)
          TypeDecl: declname='CC2420PacketP__CC2420PacketBody__getHeader', quals=[] (at pp.c:12060)
            IdentifierType: names=['cc2420_header_t'] (at None)
    Compound:  (at pp.c:12062)
      Return:  (at pp.c:12063)
        Cast:  (at None)
          Typename: quals=[] (at None)
            PtrDecl: quals=[] (at pp.c:12063)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['cc2420_header_t'] (at None)
          BinaryOp: op='-' (at None)
            BinaryOp: op='+' (at None)
              Cast:  (at None)
                Typename: quals=[] (at None)
                  PtrDecl: quals=[] (at pp.c:12063)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['uint8_t'] (at None)
                ID: name='msg' (at pp.c:12063)
              Cast:  (at None)
                Typename: quals=[] (at None)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['size_t'] (at None)
                UnaryOp: op='&' (at None)
                  StructRef: type='->' (at None)
                    Cast:  (at None)
                      Typename: quals=[] (at None)
                        PtrDecl: quals=[] (at pp.c:12063)
                          TypeDecl: declname=None, quals=[] (at None)
                            IdentifierType: names=['message_t'] (at None)
                      Constant: type='int', value='0' (at pp.c:12063)
                    ID: name='data' (at pp.c:12063)
            UnaryOp: op='sizeof' (at pp.c:12063)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['cc2420_header_t'] (at None)
  FuncDef:  (at pp.c:12067)
    Decl: name='CC2420TransmitP__CC2420PacketBody__getHeader', quals=[], storage=['static', 'inline'] (at pp.c:12067)
      FuncDecl: quals=None (at pp.c:12067)
        ParamList:  (at pp.c:12067)
          Decl: name='msg', quals=[], storage=[] (at pp.c:12067)
            PtrDecl: quals=[] (at pp.c:12067)
              TypeDecl: declname='msg', quals=[] (at pp.c:12067)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:12067)
          TypeDecl: declname='CC2420TransmitP__CC2420PacketBody__getHeader', quals=[] (at pp.c:12067)
            IdentifierType: names=['cc2420_header_t'] (at None)
    Compound:  (at pp.c:12067)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12069)
        PtrDecl: quals=[] (at pp.c:12069)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12069)
            Struct: name='cc2420_header_t', packed=False (at pp.c:12069)
      Assignment: op='=' (at pp.c:12073)
        ID: name='__nesc_result' (at pp.c:12073)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getHeader' (at pp.c:12073)
          ExprList:  (at pp.c:12073)
            ID: name='msg' (at pp.c:12073)
      Return:  (at pp.c:12077)
        ID: name='__nesc_result' (at pp.c:12077)
  FuncDef:  (at pp.c:12082)
    Decl: name='Msp430AlarmC__0__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:12082)
      FuncDecl: quals=None (at pp.c:12082)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Alarm__stop', quals=[] (at pp.c:12082)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12083)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430TimerControl__disableEvents' (at pp.c:12084)
  FuncDef:  (at pp.c:12088)
    Decl: name='TransformAlarmC__0__AlarmFrom__stop', quals=[], storage=['static', 'inline'] (at pp.c:12088)
      FuncDecl: quals=None (at pp.c:12088)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__AlarmFrom__stop', quals=[] (at pp.c:12088)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12088)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Alarm__stop' (at pp.c:12090)
  FuncDef:  (at pp.c:12095)
    Decl: name='TransformAlarmC__0__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:12095)
      FuncDecl: quals=None (at pp.c:12095)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Alarm__stop', quals=[] (at pp.c:12095)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12096)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__AlarmFrom__stop' (at pp.c:12097)
  FuncDef:  (at pp.c:12101)
    Decl: name='CC2420TransmitP__BackoffTimer__stop', quals=[], storage=['static', 'inline'] (at pp.c:12101)
      FuncDecl: quals=None (at pp.c:12101)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__BackoffTimer__stop', quals=[] (at pp.c:12101)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12101)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__Alarm__stop' (at pp.c:12103)
  FuncDef:  (at pp.c:12108)
    Decl: name='Msp430GpioC__4__HplGeneralIO__set', quals=[], storage=['static', 'inline'] (at pp.c:12108)
      FuncDecl: quals=None (at pp.c:12108)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__4__HplGeneralIO__set', quals=[] (at pp.c:12108)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12108)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__26__IO__set' (at pp.c:12110)
  FuncDef:  (at pp.c:12115)
    Decl: name='Msp430GpioC__4__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:12115)
      FuncDecl: quals=None (at pp.c:12115)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__4__GeneralIO__set', quals=[] (at pp.c:12115)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12117)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__4__HplGeneralIO__set' (at pp.c:12119)
  FuncDef:  (at pp.c:12123)
    Decl: name='CC2420TransmitP__CSN__set', quals=[], storage=['static', 'inline'] (at pp.c:12123)
      FuncDecl: quals=None (at pp.c:12123)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__CSN__set', quals=[] (at pp.c:12123)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12123)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__4__GeneralIO__set' (at pp.c:12125)
  FuncDef:  (at pp.c:12130)
    Decl: name='CC2420TransmitP__TXFIFO_RAM__write', quals=[], storage=['static', 'inline'] (at pp.c:12130)
      FuncDecl: quals=None (at pp.c:12130)
        ParamList:  (at pp.c:12130)
          Decl: name='offset', quals=[], storage=[] (at pp.c:12130)
            TypeDecl: declname='offset', quals=[] (at pp.c:12130)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:12130)
            PtrDecl: quals=[] (at pp.c:12130)
              TypeDecl: declname='data', quals=[] (at pp.c:12130)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='length', quals=[], storage=[] (at pp.c:12130)
            TypeDecl: declname='length', quals=[] (at pp.c:12130)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__TXFIFO_RAM__write', quals=[] (at pp.c:12130)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:12130)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12132)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12132)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12136)
        ID: name='__nesc_result' (at pp.c:12136)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Ram__write' (at pp.c:12136)
          ExprList:  (at pp.c:12136)
            ID: name='CC2420_RAM_TXFIFO' (at pp.c:12136)
            ID: name='offset' (at pp.c:12136)
            ID: name='data' (at pp.c:12136)
            ID: name='length' (at pp.c:12136)
      Return:  (at pp.c:12140)
        ID: name='__nesc_result' (at pp.c:12140)
  FuncDef:  (at pp.c:12145)
    Decl: name='Msp430GpioC__4__HplGeneralIO__clr', quals=[], storage=['static', 'inline'] (at pp.c:12145)
      FuncDecl: quals=None (at pp.c:12145)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__4__HplGeneralIO__clr', quals=[] (at pp.c:12145)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12145)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__26__IO__clr' (at pp.c:12147)
  FuncDef:  (at pp.c:12152)
    Decl: name='Msp430GpioC__4__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:12152)
      FuncDecl: quals=None (at pp.c:12152)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__4__GeneralIO__clr', quals=[] (at pp.c:12152)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12154)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__4__HplGeneralIO__clr' (at pp.c:12156)
  FuncDef:  (at pp.c:12160)
    Decl: name='CC2420TransmitP__CSN__clr', quals=[], storage=['static', 'inline'] (at pp.c:12160)
      FuncDecl: quals=None (at pp.c:12160)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__CSN__clr', quals=[] (at pp.c:12160)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12160)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__4__GeneralIO__clr' (at pp.c:12162)
  FuncDef:  (at pp.c:12167)
    Decl: name='CC2420PacketP__PacketTimeSyncOffset__get', quals=[], storage=['inline', 'static'] (at pp.c:12167)
      FuncDecl: quals=None (at pp.c:12167)
        ParamList:  (at pp.c:12167)
          Decl: name='msg', quals=[], storage=[] (at pp.c:12167)
            PtrDecl: quals=[] (at pp.c:12167)
              TypeDecl: declname='msg', quals=[] (at pp.c:12167)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420PacketP__PacketTimeSyncOffset__get', quals=[] (at pp.c:12167)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:12168)
      Return:  (at pp.c:12169)
        BinaryOp: op='-' (at None)
          BinaryOp: op='-' (at None)
            BinaryOp: op='+' (at None)
              FuncCall:  (at None)
                ID: name='__nesc_ntoh_leuint8' (at pp.c:12169)
                ExprList:  (at None)
                  StructRef: type='.' (at None)
                    StructRef: type='->' (at None)
                      FuncCall:  (at None)
                        ID: name='CC2420PacketP__CC2420PacketBody__getHeader' (at pp.c:12169)
                        ExprList:  (at pp.c:12169)
                          ID: name='msg' (at pp.c:12169)
                      ID: name='length' (at pp.c:12169)
                    ID: name='nxdata' (at pp.c:12169)
              BinaryOp: op='-' (at pp.c:12170)
                UnaryOp: op='sizeof' (at pp.c:12170)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['cc2420_header_t'] (at None)
                ID: name='MAC_HEADER_SIZE' (at pp.c:12170)
            ID: name='MAC_FOOTER_SIZE' (at pp.c:12171)
          UnaryOp: op='sizeof' (at pp.c:12172)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['timesync_radio_t'] (at None)
  FuncDef:  (at pp.c:12176)
    Decl: name='CC2420TransmitP__PacketTimeSyncOffset__get', quals=[], storage=['static', 'inline'] (at pp.c:12176)
      FuncDecl: quals=None (at pp.c:12176)
        ParamList:  (at pp.c:12176)
          Decl: name='msg', quals=[], storage=[] (at pp.c:12176)
            PtrDecl: quals=[] (at pp.c:12176)
              TypeDecl: declname='msg', quals=[] (at pp.c:12176)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__PacketTimeSyncOffset__get', quals=[] (at pp.c:12176)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:12176)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12178)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12178)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12182)
        ID: name='__nesc_result' (at pp.c:12182)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__PacketTimeSyncOffset__get' (at pp.c:12182)
          ExprList:  (at pp.c:12182)
            ID: name='msg' (at pp.c:12182)
      Return:  (at pp.c:12186)
        ID: name='__nesc_result' (at pp.c:12186)
  FuncDef:  (at pp.c:12191)
    Decl: name='__nesc_ntoh_uint8', quals=[], storage=['__inline', 'static'] (at pp.c:12191)
      FuncDecl: quals=None (at pp.c:12191)
        ParamList:  (at pp.c:12191)
          Decl: name='source', quals=['const'], storage=[] (at pp.c:12191)
            PtrDecl: quals=[] (at pp.c:12191)
              TypeDecl: declname='source', quals=['const'] (at pp.c:12191)
                IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_ntoh_uint8', quals=[] (at pp.c:12191)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:12193)
      Decl: name='base', quals=['const'], storage=[] (at pp.c:12194)
        PtrDecl: quals=[] (at pp.c:12194)
          TypeDecl: declname='base', quals=['const'] (at pp.c:12194)
            IdentifierType: names=['uint8_t'] (at None)
        ID: name='source' (at pp.c:12194)
      Return:  (at pp.c:12197)
        ArrayRef:  (at pp.c:12197)
          ID: name='base' (at pp.c:12197)
          Constant: type='int', value='0' (at pp.c:12197)
  FuncDef:  (at pp.c:12201)
    Decl: name='__nesc_ntoh_int8', quals=[], storage=['__inline', 'static'] (at pp.c:12201)
      FuncDecl: quals=None (at pp.c:12201)
        ParamList:  (at pp.c:12201)
          Decl: name='source', quals=['const'], storage=[] (at pp.c:12201)
            PtrDecl: quals=[] (at pp.c:12201)
              TypeDecl: declname='source', quals=['const'] (at pp.c:12201)
                IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_ntoh_int8', quals=[] (at pp.c:12201)
          IdentifierType: names=['int8_t'] (at None)
    Compound:  (at pp.c:12203)
      Return:  (at pp.c:12205)
        FuncCall:  (at None)
          ID: name='__nesc_ntoh_uint8' (at pp.c:12205)
          ExprList:  (at pp.c:12205)
            ID: name='source' (at pp.c:12205)
  FuncDef:  (at pp.c:12209)
    Decl: name='CC2420PacketP__CC2420PacketBody__getMetadata', quals=[], storage=['inline', 'static'] (at pp.c:12209)
      FuncDecl: quals=None (at pp.c:12209)
        ParamList:  (at pp.c:12209)
          Decl: name='msg', quals=[], storage=[] (at pp.c:12209)
            PtrDecl: quals=[] (at pp.c:12209)
              TypeDecl: declname='msg', quals=[] (at pp.c:12209)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:12209)
          TypeDecl: declname='CC2420PacketP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:12209)
            IdentifierType: names=['cc2420_metadata_t'] (at None)
    Compound:  (at pp.c:12211)
      Return:  (at pp.c:12212)
        Cast:  (at None)
          Typename: quals=[] (at None)
            PtrDecl: quals=[] (at pp.c:12212)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['cc2420_metadata_t'] (at None)
          StructRef: type='->' (at pp.c:12212)
            ID: name='msg' (at pp.c:12212)
            ID: name='metadata' (at pp.c:12212)
  FuncDef:  (at pp.c:12216)
    Decl: name='CC2420PacketP__PacketTimeSyncOffset__isSet', quals=[], storage=['inline', 'static'] (at pp.c:12216)
      FuncDecl: quals=None (at pp.c:12216)
        ParamList:  (at pp.c:12216)
          Decl: name='msg', quals=[], storage=[] (at pp.c:12216)
            PtrDecl: quals=[] (at pp.c:12216)
              TypeDecl: declname='msg', quals=[] (at pp.c:12216)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420PacketP__PacketTimeSyncOffset__isSet', quals=[] (at pp.c:12216)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:12217)
      Return:  (at pp.c:12218)
        FuncCall:  (at None)
          ID: name='__nesc_ntoh_int8' (at pp.c:12218)
          ExprList:  (at None)
            StructRef: type='.' (at None)
              StructRef: type='->' (at None)
                FuncCall:  (at None)
                  ID: name='CC2420PacketP__CC2420PacketBody__getMetadata' (at pp.c:12218)
                  ExprList:  (at pp.c:12218)
                    ID: name='msg' (at pp.c:12218)
                ID: name='timesync' (at pp.c:12218)
              ID: name='nxdata' (at pp.c:12218)
  FuncDef:  (at pp.c:12222)
    Decl: name='CC2420TransmitP__PacketTimeSyncOffset__isSet', quals=[], storage=['static', 'inline'] (at pp.c:12222)
      FuncDecl: quals=None (at pp.c:12222)
        ParamList:  (at pp.c:12222)
          Decl: name='msg', quals=[], storage=[] (at pp.c:12222)
            PtrDecl: quals=[] (at pp.c:12222)
              TypeDecl: declname='msg', quals=[] (at pp.c:12222)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__PacketTimeSyncOffset__isSet', quals=[] (at pp.c:12222)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:12222)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12224)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12224)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12228)
        ID: name='__nesc_result' (at pp.c:12228)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__PacketTimeSyncOffset__isSet' (at pp.c:12228)
          ExprList:  (at pp.c:12228)
            ID: name='msg' (at pp.c:12228)
      Return:  (at pp.c:12232)
        ID: name='__nesc_result' (at pp.c:12232)
  FuncDef:  (at pp.c:12237)
    Decl: name='CC2420PacketP__PacketTimeStamp32khz__set', quals=[], storage=['inline', 'static'] (at pp.c:12237)
      FuncDecl: quals=None (at pp.c:12237)
        ParamList:  (at pp.c:12237)
          Decl: name='msg', quals=[], storage=[] (at pp.c:12237)
            PtrDecl: quals=[] (at pp.c:12237)
              TypeDecl: declname='msg', quals=[] (at pp.c:12237)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='value', quals=[], storage=[] (at pp.c:12237)
            TypeDecl: declname='value', quals=[] (at pp.c:12237)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='CC2420PacketP__PacketTimeStamp32khz__set', quals=[] (at pp.c:12237)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12238)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint32' (at pp.c:12239)
        ExprList:  (at None)
          StructRef: type='.' (at None)
            StructRef: type='->' (at None)
              FuncCall:  (at None)
                ID: name='CC2420PacketP__CC2420PacketBody__getMetadata' (at pp.c:12239)
                ExprList:  (at pp.c:12239)
                  ID: name='msg' (at pp.c:12239)
              ID: name='timestamp' (at pp.c:12239)
            ID: name='nxdata' (at pp.c:12239)
          ID: name='value' (at pp.c:12239)
  FuncDef:  (at pp.c:12243)
    Decl: name='CC2420TransmitP__PacketTimeStamp__set', quals=[], storage=['static', 'inline'] (at pp.c:12243)
      FuncDecl: quals=None (at pp.c:12243)
        ParamList:  (at pp.c:12243)
          Decl: name='msg', quals=[], storage=[] (at pp.c:12243)
            PtrDecl: quals=[] (at pp.c:12243)
              TypeDecl: declname='msg', quals=[] (at pp.c:12243)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='value', quals=[], storage=[] (at pp.c:12243)
            TypeDecl: declname='value', quals=[] (at pp.c:12243)
              IdentifierType: names=['CC2420TransmitP__PacketTimeStamp__size_type'] (at None)
        TypeDecl: declname='CC2420TransmitP__PacketTimeStamp__set', quals=[] (at pp.c:12243)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12243)
      FuncCall:  (at None)
        ID: name='CC2420PacketP__PacketTimeStamp32khz__set' (at pp.c:12245)
        ExprList:  (at pp.c:12245)
          ID: name='msg' (at pp.c:12245)
          ID: name='value' (at pp.c:12245)
  FuncDef:  (at pp.c:12250)
    Decl: name='CC2420TransmitP__BackoffTimer__getNow', quals=[], storage=['static', 'inline'] (at pp.c:12250)
      FuncDecl: quals=None (at pp.c:12250)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__BackoffTimer__getNow', quals=[] (at pp.c:12250)
          IdentifierType: names=['CC2420TransmitP__BackoffTimer__size_type'] (at None)
    Compound:  (at pp.c:12250)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12252)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12252)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12256)
        ID: name='__nesc_result' (at pp.c:12256)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__0__Alarm__getNow' (at pp.c:12256)
      Return:  (at pp.c:12260)
        ID: name='__nesc_result' (at pp.c:12260)
  FuncDef:  (at pp.c:12265)
    Decl: name='CC2420TransmitP__getTime32', quals=[], storage=['__inline', 'static'] (at pp.c:12265)
      FuncDecl: quals=None (at pp.c:12265)
        ParamList:  (at pp.c:12265)
          Decl: name='captured_time', quals=[], storage=[] (at pp.c:12265)
            TypeDecl: declname='captured_time', quals=[] (at pp.c:12265)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__getTime32', quals=[] (at pp.c:12265)
          IdentifierType: names=['uint32_t'] (at None)
    Compound:  (at pp.c:12266)
      Decl: name='now', quals=[], storage=[] (at pp.c:12267)
        TypeDecl: declname='now', quals=[] (at pp.c:12267)
          IdentifierType: names=['uint32_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420TransmitP__BackoffTimer__getNow' (at pp.c:12267)
      Return:  (at pp.c:12270)
        BinaryOp: op='-' (at pp.c:12270)
          ID: name='now' (at pp.c:12270)
          Cast:  (at None)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['uint16_t'] (at None)
            BinaryOp: op='-' (at pp.c:12270)
              ID: name='now' (at pp.c:12270)
              ID: name='captured_time' (at pp.c:12270)
  FuncDef:  (at pp.c:12274)
    Decl: name='CC2420TransmitP__CaptureSFD__captured', quals=[], storage=['inline', 'static'] (at pp.c:12274)
      FuncDecl: quals=None (at pp.c:12274)
        ParamList:  (at pp.c:12274)
          Decl: name='time', quals=[], storage=[] (at pp.c:12274)
            TypeDecl: declname='time', quals=[] (at pp.c:12274)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__CaptureSFD__captured', quals=[] (at pp.c:12274)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12276)
      Decl: name='__nesc_temp45', quals=[], storage=[] (at pp.c:12277)
        PtrDecl: quals=[] (at pp.c:12277)
          TypeDecl: declname='__nesc_temp45', quals=[] (at pp.c:12277)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='__nesc_temp44', quals=[], storage=[] (at pp.c:12278)
        PtrDecl: quals=[] (at pp.c:12278)
          TypeDecl: declname='__nesc_temp44', quals=[] (at pp.c:12278)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='time32', quals=[], storage=[] (at pp.c:12280)
        TypeDecl: declname='time32', quals=[] (at pp.c:12280)
          IdentifierType: names=['uint32_t'] (at None)
      Decl: name='sfd_state', quals=[], storage=[] (at pp.c:12281)
        TypeDecl: declname='sfd_state', quals=[] (at pp.c:12281)
          IdentifierType: names=['uint8_t'] (at None)
        Constant: type='int', value='0' (at pp.c:12281)
      Compound:  (at pp.c:12285)
        Assignment: op='=' (at pp.c:12286)
          ID: name='time32' (at pp.c:12286)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__getTime32' (at pp.c:12286)
            ExprList:  (at pp.c:12286)
              ID: name='time' (at pp.c:12286)
        Switch:  (at pp.c:12287)
          ID: name='CC2420TransmitP__m_state' (at pp.c:12287)
          Compound:  (at pp.c:12287)
            Case:  (at pp.c:12289)
              ID: name='CC2420TransmitP__S_SFD' (at pp.c:12289)
              Assignment: op='=' (at pp.c:12290)
                ID: name='CC2420TransmitP__m_state' (at pp.c:12290)
                ID: name='CC2420TransmitP__S_EFD' (at pp.c:12290)
            Assignment: op='=' (at pp.c:12291)
              ID: name='CC2420TransmitP__sfdHigh' (at pp.c:12291)
              ID: name='TRUE' (at pp.c:12291)
            Assignment: op='=' (at pp.c:12294)
              ID: name='CC2420TransmitP__m_receiving' (at pp.c:12294)
              ID: name='FALSE' (at pp.c:12294)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__CaptureSFD__captureFallingEdge' (at pp.c:12295)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__PacketTimeStamp__set' (at pp.c:12296)
              ExprList:  (at pp.c:12296)
                ID: name='CC2420TransmitP__m_msg' (at pp.c:12296)
                ID: name='time32' (at pp.c:12296)
            If:  (at pp.c:12297)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__PacketTimeSyncOffset__isSet' (at pp.c:12297)
                ExprList:  (at pp.c:12297)
                  ID: name='CC2420TransmitP__m_msg' (at pp.c:12297)
              Compound:  (at pp.c:12297)
                Decl: name='absOffset', quals=[], storage=[] (at pp.c:12298)
                  TypeDecl: declname='absOffset', quals=[] (at pp.c:12298)
                    IdentifierType: names=['uint8_t'] (at None)
                  BinaryOp: op='+' (at pp.c:12298)
                    BinaryOp: op='-' (at pp.c:12298)
                      UnaryOp: op='sizeof' (at pp.c:12298)
                        Typename: quals=[] (at None)
                          TypeDecl: declname=None, quals=[] (at None)
                            IdentifierType: names=['message_header_t'] (at None)
                      UnaryOp: op='sizeof' (at pp.c:12298)
                        Typename: quals=[] (at None)
                          TypeDecl: declname=None, quals=[] (at None)
                            IdentifierType: names=['cc2420_header_t'] (at None)
                    FuncCall:  (at None)
                      ID: name='CC2420TransmitP__PacketTimeSyncOffset__get' (at pp.c:12298)
                      ExprList:  (at pp.c:12298)
                        ID: name='CC2420TransmitP__m_msg' (at pp.c:12298)
                Decl: name='timesync', quals=[], storage=[] (at pp.c:12299)
                  PtrDecl: quals=[] (at pp.c:12299)
                    TypeDecl: declname='timesync', quals=[] (at pp.c:12299)
                      IdentifierType: names=['timesync_radio_t'] (at None)
                  Cast:  (at None)
                    Typename: quals=[] (at None)
                      PtrDecl: quals=[] (at pp.c:12299)
                        TypeDecl: declname=None, quals=[] (at None)
                          IdentifierType: names=['timesync_radio_t'] (at None)
                    BinaryOp: op='+' (at None)
                      Cast:  (at None)
                        Typename: quals=[] (at None)
                          PtrDecl: quals=[] (at pp.c:12299)
                            TypeDecl: declname=None, quals=[] (at None)
                              IdentifierType: names=['nx_uint8_t'] (at None)
                        ID: name='CC2420TransmitP__m_msg' (at pp.c:12299)
                      ID: name='absOffset' (at pp.c:12299)
                ExprList:  (at pp.c:12301)
                  Assignment: op='=' (at pp.c:12301)
                    ID: name='__nesc_temp44' (at pp.c:12301)
                    StructRef: type='.' (at pp.c:12301)
                      UnaryOp: op='*' (at pp.c:12301)
                        ID: name='timesync' (at pp.c:12301)
                      ID: name='nxdata' (at pp.c:12301)
                  FuncCall:  (at None)
                    ID: name='__nesc_hton_uint32' (at pp.c:12301)
                    ExprList:  (at pp.c:12301)
                      ID: name='__nesc_temp44' (at pp.c:12301)
                      BinaryOp: op='-' (at None)
                        FuncCall:  (at None)
                          ID: name='__nesc_ntoh_uint32' (at pp.c:12301)
                          ExprList:  (at pp.c:12301)
                            ID: name='__nesc_temp44' (at pp.c:12301)
                        ID: name='time32' (at pp.c:12301)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__CSN__clr' (at pp.c:12302)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__TXFIFO_RAM__write' (at pp.c:12303)
                  ExprList:  (at pp.c:12303)
                    ID: name='absOffset' (at pp.c:12303)
                    Cast:  (at None)
                      Typename: quals=[] (at None)
                        PtrDecl: quals=[] (at pp.c:12303)
                          TypeDecl: declname=None, quals=[] (at None)
                            IdentifierType: names=['uint8_t'] (at None)
                      ID: name='timesync' (at pp.c:12303)
                    UnaryOp: op='sizeof' (at pp.c:12303)
                      Typename: quals=[] (at None)
                        TypeDecl: declname=None, quals=[] (at None)
                          IdentifierType: names=['timesync_radio_t'] (at None)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__CSN__set' (at pp.c:12304)
                ExprList:  (at pp.c:12306)
                  Assignment: op='=' (at pp.c:12306)
                    ID: name='__nesc_temp45' (at pp.c:12306)
                    StructRef: type='.' (at pp.c:12306)
                      UnaryOp: op='*' (at pp.c:12306)
                        ID: name='timesync' (at pp.c:12306)
                      ID: name='nxdata' (at pp.c:12306)
                  FuncCall:  (at None)
                    ID: name='__nesc_hton_uint32' (at pp.c:12306)
                    ExprList:  (at pp.c:12306)
                      ID: name='__nesc_temp45' (at pp.c:12306)
                      BinaryOp: op='+' (at None)
                        FuncCall:  (at None)
                          ID: name='__nesc_ntoh_uint32' (at pp.c:12306)
                          ExprList:  (at pp.c:12306)
                            ID: name='__nesc_temp45' (at pp.c:12306)
                        ID: name='time32' (at pp.c:12306)
            If:  (at pp.c:12309)
              BinaryOp: op='&' (at None)
                FuncCall:  (at None)
                  ID: name='__nesc_ntoh_leuint16' (at pp.c:12309)
                  ExprList:  (at None)
                    StructRef: type='.' (at None)
                      StructRef: type='->' (at None)
                        FuncCall:  (at None)
                          ID: name='CC2420TransmitP__CC2420PacketBody__getHeader' (at pp.c:12309)
                          ExprList:  (at pp.c:12309)
                            ID: name='CC2420TransmitP__m_msg' (at pp.c:12309)
                        ID: name='fcf' (at pp.c:12309)
                      ID: name='nxdata' (at pp.c:12309)
                BinaryOp: op='<<' (at pp.c:12309)
                  Constant: type='int', value='1' (at pp.c:12309)
                  ID: name='IEEE154_FCF_ACK_REQ' (at pp.c:12309)
              Compound:  (at pp.c:12309)
                Assignment: op='=' (at pp.c:12311)
                  ID: name='CC2420TransmitP__abortSpiRelease' (at pp.c:12311)
                  ID: name='TRUE' (at pp.c:12311)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__releaseSpiResource' (at pp.c:12313)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__BackoffTimer__stop' (at pp.c:12314)
            If:  (at pp.c:12316)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__SFD__get' (at pp.c:12316)
              Compound:  (at pp.c:12316)
                Break:  (at pp.c:12317)
            Case:  (at pp.c:12321)
              ID: name='CC2420TransmitP__S_EFD' (at pp.c:12321)
              Assignment: op='=' (at pp.c:12322)
                ID: name='CC2420TransmitP__sfdHigh' (at pp.c:12322)
                ID: name='FALSE' (at pp.c:12322)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__CaptureSFD__captureRisingEdge' (at pp.c:12323)
            If:  (at pp.c:12325)
              BinaryOp: op='&' (at None)
                FuncCall:  (at None)
                  ID: name='__nesc_ntoh_leuint16' (at pp.c:12325)
                  ExprList:  (at None)
                    StructRef: type='.' (at None)
                      StructRef: type='->' (at None)
                        FuncCall:  (at None)
                          ID: name='CC2420TransmitP__CC2420PacketBody__getHeader' (at pp.c:12325)
                          ExprList:  (at pp.c:12325)
                            ID: name='CC2420TransmitP__m_msg' (at pp.c:12325)
                        ID: name='fcf' (at pp.c:12325)
                      ID: name='nxdata' (at pp.c:12325)
                BinaryOp: op='<<' (at pp.c:12325)
                  Constant: type='int', value='1' (at pp.c:12325)
                  ID: name='IEEE154_FCF_ACK_REQ' (at pp.c:12325)
              Compound:  (at pp.c:12325)
                Assignment: op='=' (at pp.c:12326)
                  ID: name='CC2420TransmitP__m_state' (at pp.c:12326)
                  ID: name='CC2420TransmitP__S_ACK_WAIT' (at pp.c:12326)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__BackoffTimer__start' (at pp.c:12327)
                  ExprList:  (at pp.c:12327)
                    ID: name='CC2420_ACK_WAIT_DELAY' (at pp.c:12327)
              Compound:  (at pp.c:12331)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__signalDone' (at pp.c:12332)
                  ExprList:  (at pp.c:12332)
                    ID: name='SUCCESS' (at pp.c:12332)
            If:  (at pp.c:12335)
              UnaryOp: op='!' (at None)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__SFD__get' (at pp.c:12335)
              Compound:  (at pp.c:12335)
                Break:  (at pp.c:12336)
            Default:  (at pp.c:12340)
              If:  (at pp.c:12342)
                BinaryOp: op='&&' (at pp.c:12342)
                  UnaryOp: op='!' (at pp.c:12342)
                    ID: name='CC2420TransmitP__m_receiving' (at pp.c:12342)
                  BinaryOp: op='==' (at pp.c:12342)
                    ID: name='CC2420TransmitP__sfdHigh' (at pp.c:12342)
                    ID: name='FALSE' (at pp.c:12342)
                Compound:  (at pp.c:12342)
                  Assignment: op='=' (at pp.c:12343)
                    ID: name='CC2420TransmitP__sfdHigh' (at pp.c:12343)
                    ID: name='TRUE' (at pp.c:12343)
                  FuncCall:  (at None)
                    ID: name='CC2420TransmitP__CaptureSFD__captureFallingEdge' (at pp.c:12344)
                  Assignment: op='=' (at pp.c:12346)
                    ID: name='sfd_state' (at pp.c:12346)
                    FuncCall:  (at None)
                      ID: name='CC2420TransmitP__SFD__get' (at pp.c:12346)
                  FuncCall:  (at None)
                    ID: name='CC2420TransmitP__CC2420Receive__sfd' (at pp.c:12347)
                    ExprList:  (at pp.c:12347)
                      ID: name='time32' (at pp.c:12347)
                  Assignment: op='=' (at pp.c:12348)
                    ID: name='CC2420TransmitP__m_receiving' (at pp.c:12348)
                    ID: name='TRUE' (at pp.c:12348)
                  Assignment: op='=' (at pp.c:12349)
                    ID: name='CC2420TransmitP__m_prev_time' (at pp.c:12349)
                    ID: name='time' (at pp.c:12349)
                  If:  (at pp.c:12350)
                    FuncCall:  (at None)
                      ID: name='CC2420TransmitP__SFD__get' (at pp.c:12350)
                    Compound:  (at pp.c:12350)
                      Return:  (at pp.c:12352)
            If:  (at pp.c:12358)
              BinaryOp: op='==' (at pp.c:12358)
                ID: name='CC2420TransmitP__sfdHigh' (at pp.c:12358)
                ID: name='TRUE' (at pp.c:12358)
              Compound:  (at pp.c:12358)
                Assignment: op='=' (at pp.c:12359)
                  ID: name='CC2420TransmitP__sfdHigh' (at pp.c:12359)
                  ID: name='FALSE' (at pp.c:12359)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__CaptureSFD__captureRisingEdge' (at pp.c:12360)
                Assignment: op='=' (at pp.c:12361)
                  ID: name='CC2420TransmitP__m_receiving' (at pp.c:12361)
                  ID: name='FALSE' (at pp.c:12361)
                If:  (at pp.c:12370)
                  BinaryOp: op='&&' (at pp.c:12370)
                    BinaryOp: op='==' (at pp.c:12370)
                      ID: name='sfd_state' (at pp.c:12370)
                      Constant: type='int', value='0' (at pp.c:12370)
                    BinaryOp: op='<' (at pp.c:12370)
                      BinaryOp: op='-' (at pp.c:12370)
                        ID: name='time' (at pp.c:12370)
                        ID: name='CC2420TransmitP__m_prev_time' (at pp.c:12370)
                      Constant: type='int', value='10' (at pp.c:12370)
                  Compound:  (at pp.c:12370)
                    FuncCall:  (at None)
                      ID: name='CC2420TransmitP__CC2420Receive__sfd_dropped' (at pp.c:12371)
                    If:  (at pp.c:12372)
                      ID: name='CC2420TransmitP__m_msg' (at pp.c:12372)
                      Compound:  (at pp.c:12372)
                        FuncCall:  (at None)
                          ID: name='CC2420TransmitP__PacketTimeStamp__clear' (at pp.c:12373)
                          ExprList:  (at pp.c:12373)
                            ID: name='CC2420TransmitP__m_msg' (at pp.c:12373)
                Break:  (at pp.c:12377)
  FuncDef:  (at pp.c:12384)
    Decl: name='GpioCaptureC__0__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:12384)
      FuncDecl: quals=None (at pp.c:12384)
        ParamList:  (at pp.c:12384)
          Decl: name='time', quals=[], storage=[] (at pp.c:12384)
            TypeDecl: declname='time', quals=[] (at pp.c:12384)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='GpioCaptureC__0__Capture__captured', quals=[] (at pp.c:12384)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12384)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__CaptureSFD__captured' (at pp.c:12386)
        ExprList:  (at pp.c:12386)
          ID: name='time' (at pp.c:12386)
  FuncDef:  (at pp.c:12391)
    Decl: name='Msp430TimerCapComP__4__Capture__clearOverflow', quals=[], storage=['inline', 'static'] (at pp.c:12391)
      FuncDecl: quals=None (at pp.c:12391)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Capture__clearOverflow', quals=[] (at pp.c:12391)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12392)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12393)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='388U' (at pp.c:12393)
        UnaryOp: op='~' (at pp.c:12393)
          Constant: type='int', value='0x0002' (at pp.c:12393)
  FuncDef:  (at pp.c:12397)
    Decl: name='GpioCaptureC__0__Msp430Capture__clearOverflow', quals=[], storage=['static', 'inline'] (at pp.c:12397)
      FuncDecl: quals=None (at pp.c:12397)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='GpioCaptureC__0__Msp430Capture__clearOverflow', quals=[] (at pp.c:12397)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12397)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__4__Capture__clearOverflow' (at pp.c:12399)
  FuncDef:  (at pp.c:12404)
    Decl: name='Msp430TimerCapComP__4__Control__clearPendingInterrupt', quals=[], storage=['inline', 'static'] (at pp.c:12404)
      FuncDecl: quals=None (at pp.c:12404)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Control__clearPendingInterrupt', quals=[] (at pp.c:12404)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12405)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12406)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='388U' (at pp.c:12406)
        UnaryOp: op='~' (at pp.c:12406)
          Constant: type='int', value='0x0001' (at pp.c:12406)
  FuncDef:  (at pp.c:12410)
    Decl: name='GpioCaptureC__0__Msp430TimerControl__clearPendingInterrupt', quals=[], storage=['static', 'inline'] (at pp.c:12410)
      FuncDecl: quals=None (at pp.c:12410)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='GpioCaptureC__0__Msp430TimerControl__clearPendingInterrupt', quals=[] (at pp.c:12410)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12410)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__4__Control__clearPendingInterrupt' (at pp.c:12412)
  FuncDef:  (at pp.c:12417)
    Decl: name='GpioCaptureC__0__Msp430Capture__captured', quals=[], storage=['inline', 'static'] (at pp.c:12417)
      FuncDecl: quals=None (at pp.c:12417)
        ParamList:  (at pp.c:12417)
          Decl: name='time', quals=[], storage=[] (at pp.c:12417)
            TypeDecl: declname='time', quals=[] (at pp.c:12417)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='GpioCaptureC__0__Msp430Capture__captured', quals=[] (at pp.c:12417)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12419)
      FuncCall:  (at None)
        ID: name='GpioCaptureC__0__Msp430TimerControl__clearPendingInterrupt' (at pp.c:12420)
      FuncCall:  (at None)
        ID: name='GpioCaptureC__0__Msp430Capture__clearOverflow' (at pp.c:12421)
      FuncCall:  (at None)
        ID: name='GpioCaptureC__0__Capture__captured' (at pp.c:12422)
        ExprList:  (at pp.c:12422)
          ID: name='time' (at pp.c:12422)
  FuncDef:  (at pp.c:12426)
    Decl: name='Msp430TimerCapComP__4__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:12426)
      FuncDecl: quals=None (at pp.c:12426)
        ParamList:  (at pp.c:12426)
          Decl: name='time', quals=[], storage=[] (at pp.c:12426)
            TypeDecl: declname='time', quals=[] (at pp.c:12426)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Capture__captured', quals=[] (at pp.c:12426)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12426)
      FuncCall:  (at None)
        ID: name='GpioCaptureC__0__Msp430Capture__captured' (at pp.c:12428)
        ExprList:  (at pp.c:12428)
          ID: name='time' (at pp.c:12428)
  FuncDef:  (at pp.c:12433)
    Decl: name='Msp430TimerCapComP__4__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:12433)
      FuncDecl: quals=None (at pp.c:12433)
        ParamList:  (at pp.c:12433)
          Decl: name='x', quals=[], storage=[] (at pp.c:12433)
            TypeDecl: declname='x', quals=[] (at pp.c:12433)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__int2CC', quals=[] (at pp.c:12433)
          IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
    Compound:  (at pp.c:12435)
      Decl: name='c', quals=[], storage=[] (at pp.c:12444)
        TypeDecl: declname='c', quals=[] (at pp.c:12444)
          Union: name='Msp430TimerCapComP__4____nesc_unnamed4385', packed=False (at pp.c:12437)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:12439)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:12441)
                IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
        ExprList:  (at pp.c:12444)
          Assignment: op='=' (at pp.c:12444)
            StructRef: type='.' (at pp.c:12444)
              ID: name='f' (at pp.c:12444)
            ID: name='x' (at pp.c:12444)
      Return:  (at pp.c:12447)
        StructRef: type='.' (at pp.c:12447)
          ID: name='c' (at pp.c:12447)
          ID: name='t' (at pp.c:12447)
  FuncDef:  (at pp.c:12451)
    Decl: name='Msp430TimerCapComP__4__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:12451)
      FuncDecl: quals=None (at pp.c:12451)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Control__getControl', quals=[] (at pp.c:12451)
          IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
    Compound:  (at pp.c:12452)
      Return:  (at pp.c:12453)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__4__int2CC' (at pp.c:12453)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:12453)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='388U' (at pp.c:12453)
  FuncDef:  (at pp.c:12457)
    Decl: name='Msp430TimerCapComP__4__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:12457)
      FuncDecl: quals=None (at pp.c:12457)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Event__fired', quals=[] (at pp.c:12457)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12458)
      If:  (at pp.c:12459)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__4__Control__getControl' (at pp.c:12459)
          ID: name='cap' (at pp.c:12459)
        Compound:  (at pp.c:12459)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__4__Capture__captured' (at pp.c:12460)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__4__Capture__getEvent' (at pp.c:12460)
        Compound:  (at pp.c:12462)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__4__Compare__fired' (at pp.c:12464)
  FuncDef:  (at pp.c:12469)
    Decl: name='AlarmToTimerC__0__fired__postTask', quals=[], storage=['static', 'inline'] (at pp.c:12469)
      FuncDecl: quals=None (at pp.c:12469)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__fired__postTask', quals=[] (at pp.c:12469)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:12469)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12471)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12471)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12475)
        ID: name='__nesc_result' (at pp.c:12475)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:12475)
          ExprList:  (at pp.c:12475)
            ID: name='AlarmToTimerC__0__fired' (at pp.c:12475)
      Return:  (at pp.c:12479)
        ID: name='__nesc_result' (at pp.c:12479)
  FuncDef:  (at pp.c:12484)
    Decl: name='AlarmToTimerC__0__Alarm__fired', quals=[], storage=['inline', 'static'] (at pp.c:12484)
      FuncDecl: quals=None (at pp.c:12484)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Alarm__fired', quals=[] (at pp.c:12484)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12485)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__fired__postTask' (at pp.c:12487)
  FuncDef:  (at pp.c:12491)
    Decl: name='TransformAlarmC__1__Alarm__fired', quals=[], storage=['static', 'inline'] (at pp.c:12491)
      FuncDecl: quals=None (at pp.c:12491)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__Alarm__fired', quals=[] (at pp.c:12491)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12491)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Alarm__fired' (at pp.c:12493)
  FuncDef:  (at pp.c:12498)
    Decl: name='TransformAlarmC__1__AlarmFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:12498)
      FuncDecl: quals=None (at pp.c:12498)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__AlarmFrom__fired', quals=[] (at pp.c:12498)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12499)
      Compound:  (at pp.c:12501)
        If:  (at pp.c:12502)
          BinaryOp: op='==' (at pp.c:12502)
            ID: name='TransformAlarmC__1__m_dt' (at pp.c:12502)
            Constant: type='int', value='0' (at pp.c:12502)
          Compound:  (at pp.c:12503)
            FuncCall:  (at None)
              ID: name='TransformAlarmC__1__Alarm__fired' (at pp.c:12504)
          Compound:  (at pp.c:12507)
            FuncCall:  (at None)
              ID: name='TransformAlarmC__1__set_alarm' (at pp.c:12508)
  FuncDef:  (at pp.c:12514)
    Decl: name='Msp430AlarmC__1__Alarm__fired', quals=[], storage=['static', 'inline'] (at pp.c:12514)
      FuncDecl: quals=None (at pp.c:12514)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Alarm__fired', quals=[] (at pp.c:12514)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12514)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__1__AlarmFrom__fired' (at pp.c:12516)
  FuncDef:  (at pp.c:12521)
    Decl: name='Msp430TimerCapComP__5__Control__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:12521)
      FuncDecl: quals=None (at pp.c:12521)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Control__disableEvents', quals=[] (at pp.c:12521)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12522)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12523)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='390U' (at pp.c:12523)
        UnaryOp: op='~' (at pp.c:12523)
          Constant: type='int', value='0x0010' (at pp.c:12523)
  FuncDef:  (at pp.c:12527)
    Decl: name='Msp430AlarmC__1__Msp430TimerControl__disableEvents', quals=[], storage=['static', 'inline'] (at pp.c:12527)
      FuncDecl: quals=None (at pp.c:12527)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__disableEvents', quals=[] (at pp.c:12527)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12527)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Control__disableEvents' (at pp.c:12529)
  FuncDef:  (at pp.c:12534)
    Decl: name='Msp430AlarmC__1__Msp430Compare__fired', quals=[], storage=['inline', 'static'] (at pp.c:12534)
      FuncDecl: quals=None (at pp.c:12534)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430Compare__fired', quals=[] (at pp.c:12534)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12535)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Msp430TimerControl__disableEvents' (at pp.c:12536)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Alarm__fired' (at pp.c:12537)
  FuncDef:  (at pp.c:12541)
    Decl: name='Msp430TimerCapComP__5__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:12541)
      FuncDecl: quals=None (at pp.c:12541)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Compare__fired', quals=[] (at pp.c:12541)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12541)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Msp430Compare__fired' (at pp.c:12543)
  FuncDef:  (at pp.c:12548)
    Decl: name='Msp430TimerCapComP__5__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:12548)
      FuncDecl: quals=None (at pp.c:12548)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Capture__getEvent', quals=[] (at pp.c:12548)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:12549)
      Return:  (at pp.c:12550)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12550)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='406U' (at pp.c:12550)
  FuncDef:  (at pp.c:12554)
    Decl: name='Msp430TimerCapComP__5__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:12554)
      FuncDecl: quals=None (at pp.c:12554)
        ParamList:  (at pp.c:12554)
          Decl: name='n', quals=[], storage=[] (at pp.c:12554)
            TypeDecl: declname='n', quals=[] (at pp.c:12554)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Capture__default__captured', quals=[] (at pp.c:12554)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12555)
  FuncDef:  (at pp.c:12559)
    Decl: name='Msp430TimerCapComP__5__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:12559)
      FuncDecl: quals=None (at pp.c:12559)
        ParamList:  (at pp.c:12559)
          Decl: name='time', quals=[], storage=[] (at pp.c:12559)
            TypeDecl: declname='time', quals=[] (at pp.c:12559)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Capture__captured', quals=[] (at pp.c:12559)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12559)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Capture__default__captured' (at pp.c:12561)
        ExprList:  (at pp.c:12561)
          ID: name='time' (at pp.c:12561)
  FuncDef:  (at pp.c:12566)
    Decl: name='Msp430TimerCapComP__5__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:12566)
      FuncDecl: quals=None (at pp.c:12566)
        ParamList:  (at pp.c:12566)
          Decl: name='x', quals=[], storage=[] (at pp.c:12566)
            TypeDecl: declname='x', quals=[] (at pp.c:12566)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__int2CC', quals=[] (at pp.c:12566)
          IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
    Compound:  (at pp.c:12568)
      Decl: name='c', quals=[], storage=[] (at pp.c:12577)
        TypeDecl: declname='c', quals=[] (at pp.c:12577)
          Union: name='Msp430TimerCapComP__5____nesc_unnamed4386', packed=False (at pp.c:12570)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:12572)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:12574)
                IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
        ExprList:  (at pp.c:12577)
          Assignment: op='=' (at pp.c:12577)
            StructRef: type='.' (at pp.c:12577)
              ID: name='f' (at pp.c:12577)
            ID: name='x' (at pp.c:12577)
      Return:  (at pp.c:12580)
        StructRef: type='.' (at pp.c:12580)
          ID: name='c' (at pp.c:12580)
          ID: name='t' (at pp.c:12580)
  FuncDef:  (at pp.c:12584)
    Decl: name='Msp430TimerCapComP__5__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:12584)
      FuncDecl: quals=None (at pp.c:12584)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Control__getControl', quals=[] (at pp.c:12584)
          IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
    Compound:  (at pp.c:12585)
      Return:  (at pp.c:12586)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__5__int2CC' (at pp.c:12586)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:12586)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='390U' (at pp.c:12586)
  FuncDef:  (at pp.c:12590)
    Decl: name='Msp430TimerCapComP__5__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:12590)
      FuncDecl: quals=None (at pp.c:12590)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Event__fired', quals=[] (at pp.c:12590)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12591)
      If:  (at pp.c:12592)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__5__Control__getControl' (at pp.c:12592)
          ID: name='cap' (at pp.c:12592)
        Compound:  (at pp.c:12592)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__5__Capture__captured' (at pp.c:12593)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__5__Capture__getEvent' (at pp.c:12593)
        Compound:  (at pp.c:12595)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__5__Compare__fired' (at pp.c:12597)
  FuncDef:  (at pp.c:12602)
    Decl: name='TransformCounterC__1__CounterFrom__get', quals=[], storage=['static', 'inline'] (at pp.c:12602)
      FuncDecl: quals=None (at pp.c:12602)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__1__CounterFrom__get', quals=[] (at pp.c:12602)
          IdentifierType: names=['TransformCounterC__1__CounterFrom__size_type'] (at None)
    Compound:  (at pp.c:12602)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12604)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12604)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12608)
        ID: name='__nesc_result' (at pp.c:12608)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__0__Counter__get' (at pp.c:12608)
      Return:  (at pp.c:12612)
        ID: name='__nesc_result' (at pp.c:12612)
  FuncDef:  (at pp.c:12623)
    Decl: name='TransformCounterC__1__CounterFrom__isOverflowPending', quals=[], storage=['static', 'inline'] (at pp.c:12623)
      FuncDecl: quals=None (at pp.c:12623)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__1__CounterFrom__isOverflowPending', quals=[] (at pp.c:12623)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:12623)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12625)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12625)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12629)
        ID: name='__nesc_result' (at pp.c:12629)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__0__Counter__isOverflowPending' (at pp.c:12629)
      Return:  (at pp.c:12633)
        ID: name='__nesc_result' (at pp.c:12633)
  FuncDef:  (at pp.c:12638)
    Decl: name='Msp430TimerCapComP__5__Control__enableEvents', quals=[], storage=['inline', 'static'] (at pp.c:12638)
      FuncDecl: quals=None (at pp.c:12638)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Control__enableEvents', quals=[] (at pp.c:12638)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12639)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12640)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='390U' (at pp.c:12640)
        Constant: type='int', value='0x0010' (at pp.c:12640)
  FuncDef:  (at pp.c:12644)
    Decl: name='Msp430AlarmC__1__Msp430TimerControl__enableEvents', quals=[], storage=['static', 'inline'] (at pp.c:12644)
      FuncDecl: quals=None (at pp.c:12644)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__enableEvents', quals=[] (at pp.c:12644)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12644)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Control__enableEvents' (at pp.c:12646)
  FuncDef:  (at pp.c:12651)
    Decl: name='Msp430TimerCapComP__5__Control__clearPendingInterrupt', quals=[], storage=['inline', 'static'] (at pp.c:12651)
      FuncDecl: quals=None (at pp.c:12651)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Control__clearPendingInterrupt', quals=[] (at pp.c:12651)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12652)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12653)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='390U' (at pp.c:12653)
        UnaryOp: op='~' (at pp.c:12653)
          Constant: type='int', value='0x0001' (at pp.c:12653)
  FuncDef:  (at pp.c:12657)
    Decl: name='Msp430AlarmC__1__Msp430TimerControl__clearPendingInterrupt', quals=[], storage=['static', 'inline'] (at pp.c:12657)
      FuncDecl: quals=None (at pp.c:12657)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__clearPendingInterrupt', quals=[] (at pp.c:12657)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12657)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Control__clearPendingInterrupt' (at pp.c:12659)
  FuncDef:  (at pp.c:12664)
    Decl: name='Msp430TimerCapComP__5__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:12664)
      FuncDecl: quals=None (at pp.c:12664)
        ParamList:  (at pp.c:12664)
          Decl: name='x', quals=[], storage=[] (at pp.c:12664)
            TypeDecl: declname='x', quals=[] (at pp.c:12664)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Compare__setEvent', quals=[] (at pp.c:12664)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12665)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12666)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='406U' (at pp.c:12666)
        ID: name='x' (at pp.c:12666)
  FuncDef:  (at pp.c:12670)
    Decl: name='Msp430AlarmC__1__Msp430Compare__setEvent', quals=[], storage=['static', 'inline'] (at pp.c:12670)
      FuncDecl: quals=None (at pp.c:12670)
        ParamList:  (at pp.c:12670)
          Decl: name='time', quals=[], storage=[] (at pp.c:12670)
            TypeDecl: declname='time', quals=[] (at pp.c:12670)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430Compare__setEvent', quals=[] (at pp.c:12670)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12670)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Compare__setEvent' (at pp.c:12672)
        ExprList:  (at pp.c:12672)
          ID: name='time' (at pp.c:12672)
  FuncDef:  (at pp.c:12677)
    Decl: name='Msp430TimerCapComP__5__Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:12677)
      FuncDecl: quals=None (at pp.c:12677)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Timer__get', quals=[] (at pp.c:12677)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:12677)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12679)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12679)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12683)
        ID: name='__nesc_result' (at pp.c:12683)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__get' (at pp.c:12683)
      Return:  (at pp.c:12687)
        ID: name='__nesc_result' (at pp.c:12687)
  FuncDef:  (at pp.c:12692)
    Decl: name='Msp430TimerCapComP__5__Compare__setEventFromNow', quals=[], storage=['inline', 'static'] (at pp.c:12692)
      FuncDecl: quals=None (at pp.c:12692)
        ParamList:  (at pp.c:12692)
          Decl: name='x', quals=[], storage=[] (at pp.c:12692)
            TypeDecl: declname='x', quals=[] (at pp.c:12692)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Compare__setEventFromNow', quals=[] (at pp.c:12692)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12693)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12694)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='406U' (at pp.c:12694)
        BinaryOp: op='+' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__5__Timer__get' (at pp.c:12694)
          ID: name='x' (at pp.c:12694)
  FuncDef:  (at pp.c:12698)
    Decl: name='Msp430AlarmC__1__Msp430Compare__setEventFromNow', quals=[], storage=['static', 'inline'] (at pp.c:12698)
      FuncDecl: quals=None (at pp.c:12698)
        ParamList:  (at pp.c:12698)
          Decl: name='delta', quals=[], storage=[] (at pp.c:12698)
            TypeDecl: declname='delta', quals=[] (at pp.c:12698)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430Compare__setEventFromNow', quals=[] (at pp.c:12698)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12698)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Compare__setEventFromNow' (at pp.c:12700)
        ExprList:  (at pp.c:12700)
          ID: name='delta' (at pp.c:12700)
  FuncDef:  (at pp.c:12705)
    Decl: name='Msp430AlarmC__1__Msp430Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:12705)
      FuncDecl: quals=None (at pp.c:12705)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430Timer__get', quals=[] (at pp.c:12705)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:12705)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12707)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12707)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12711)
        ID: name='__nesc_result' (at pp.c:12711)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__get' (at pp.c:12711)
      Return:  (at pp.c:12715)
        ID: name='__nesc_result' (at pp.c:12715)
  FuncDef:  (at pp.c:12720)
    Decl: name='Msp430AlarmC__1__Alarm__startAt', quals=[], storage=['inline', 'static'] (at pp.c:12720)
      FuncDecl: quals=None (at pp.c:12720)
        ParamList:  (at pp.c:12720)
          Decl: name='t0', quals=[], storage=[] (at pp.c:12720)
            TypeDecl: declname='t0', quals=[] (at pp.c:12720)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:12720)
            TypeDecl: declname='dt', quals=[] (at pp.c:12720)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Alarm__startAt', quals=[] (at pp.c:12720)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12721)
      Compound:  (at pp.c:12723)
        Decl: name='now', quals=[], storage=[] (at pp.c:12724)
          TypeDecl: declname='now', quals=[] (at pp.c:12724)
            IdentifierType: names=['uint16_t'] (at None)
          FuncCall:  (at None)
            ID: name='Msp430AlarmC__1__Msp430Timer__get' (at pp.c:12724)
        Decl: name='elapsed', quals=[], storage=[] (at pp.c:12725)
          TypeDecl: declname='elapsed', quals=[] (at pp.c:12725)
            IdentifierType: names=['uint16_t'] (at None)
          BinaryOp: op='-' (at pp.c:12725)
            ID: name='now' (at pp.c:12725)
            ID: name='t0' (at pp.c:12725)
        If:  (at pp.c:12728)
          BinaryOp: op='>=' (at pp.c:12728)
            ID: name='elapsed' (at pp.c:12728)
            ID: name='dt' (at pp.c:12728)
          Compound:  (at pp.c:12729)
            FuncCall:  (at None)
              ID: name='Msp430AlarmC__1__Msp430Compare__setEventFromNow' (at pp.c:12730)
              ExprList:  (at pp.c:12730)
                Constant: type='int', value='2' (at pp.c:12730)
          Compound:  (at pp.c:12733)
            Decl: name='remaining', quals=[], storage=[] (at pp.c:12734)
              TypeDecl: declname='remaining', quals=[] (at pp.c:12734)
                IdentifierType: names=['uint16_t'] (at None)
              BinaryOp: op='-' (at pp.c:12734)
                ID: name='dt' (at pp.c:12734)
                ID: name='elapsed' (at pp.c:12734)
            If:  (at pp.c:12737)
              BinaryOp: op='<=' (at pp.c:12737)
                ID: name='remaining' (at pp.c:12737)
                Constant: type='int', value='2' (at pp.c:12737)
              Compound:  (at pp.c:12737)
                FuncCall:  (at None)
                  ID: name='Msp430AlarmC__1__Msp430Compare__setEventFromNow' (at pp.c:12738)
                  ExprList:  (at pp.c:12738)
                    Constant: type='int', value='2' (at pp.c:12738)
              Compound:  (at pp.c:12740)
                FuncCall:  (at None)
                  ID: name='Msp430AlarmC__1__Msp430Compare__setEvent' (at pp.c:12742)
                  ExprList:  (at pp.c:12742)
                    BinaryOp: op='+' (at pp.c:12742)
                      ID: name='now' (at pp.c:12742)
                      ID: name='remaining' (at pp.c:12742)
        FuncCall:  (at None)
          ID: name='Msp430AlarmC__1__Msp430TimerControl__clearPendingInterrupt' (at pp.c:12746)
        FuncCall:  (at None)
          ID: name='Msp430AlarmC__1__Msp430TimerControl__enableEvents' (at pp.c:12747)
  FuncDef:  (at pp.c:12752)
    Decl: name='TransformAlarmC__1__AlarmFrom__startAt', quals=[], storage=['static', 'inline'] (at pp.c:12752)
      FuncDecl: quals=None (at pp.c:12752)
        ParamList:  (at pp.c:12752)
          Decl: name='t0', quals=[], storage=[] (at pp.c:12752)
            TypeDecl: declname='t0', quals=[] (at pp.c:12752)
              IdentifierType: names=['TransformAlarmC__1__AlarmFrom__size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:12752)
            TypeDecl: declname='dt', quals=[] (at pp.c:12752)
              IdentifierType: names=['TransformAlarmC__1__AlarmFrom__size_type'] (at None)
        TypeDecl: declname='TransformAlarmC__1__AlarmFrom__startAt', quals=[] (at pp.c:12752)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12752)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Alarm__startAt' (at pp.c:12754)
        ExprList:  (at pp.c:12754)
          ID: name='t0' (at pp.c:12754)
          ID: name='dt' (at pp.c:12754)
  FuncDef:  (at pp.c:12759)
    Decl: name='Msp430TimerCapComP__6__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:12759)
      FuncDecl: quals=None (at pp.c:12759)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Compare__default__fired', quals=[] (at pp.c:12759)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12760)
  FuncDef:  (at pp.c:12764)
    Decl: name='Msp430TimerCapComP__6__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:12764)
      FuncDecl: quals=None (at pp.c:12764)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Compare__fired', quals=[] (at pp.c:12764)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12764)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__6__Compare__default__fired' (at pp.c:12766)
  FuncDef:  (at pp.c:12771)
    Decl: name='Msp430TimerCapComP__6__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:12771)
      FuncDecl: quals=None (at pp.c:12771)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Capture__getEvent', quals=[] (at pp.c:12771)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:12772)
      Return:  (at pp.c:12773)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12773)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='408U' (at pp.c:12773)
  FuncDef:  (at pp.c:12777)
    Decl: name='Msp430TimerCapComP__6__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:12777)
      FuncDecl: quals=None (at pp.c:12777)
        ParamList:  (at pp.c:12777)
          Decl: name='n', quals=[], storage=[] (at pp.c:12777)
            TypeDecl: declname='n', quals=[] (at pp.c:12777)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Capture__default__captured', quals=[] (at pp.c:12777)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12778)
  FuncDef:  (at pp.c:12782)
    Decl: name='Msp430TimerCapComP__6__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:12782)
      FuncDecl: quals=None (at pp.c:12782)
        ParamList:  (at pp.c:12782)
          Decl: name='time', quals=[], storage=[] (at pp.c:12782)
            TypeDecl: declname='time', quals=[] (at pp.c:12782)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Capture__captured', quals=[] (at pp.c:12782)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12782)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__6__Capture__default__captured' (at pp.c:12784)
        ExprList:  (at pp.c:12784)
          ID: name='time' (at pp.c:12784)
  FuncDef:  (at pp.c:12789)
    Decl: name='Msp430TimerCapComP__6__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:12789)
      FuncDecl: quals=None (at pp.c:12789)
        ParamList:  (at pp.c:12789)
          Decl: name='x', quals=[], storage=[] (at pp.c:12789)
            TypeDecl: declname='x', quals=[] (at pp.c:12789)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__int2CC', quals=[] (at pp.c:12789)
          IdentifierType: names=['Msp430TimerCapComP__6__cc_t'] (at None)
    Compound:  (at pp.c:12791)
      Decl: name='c', quals=[], storage=[] (at pp.c:12800)
        TypeDecl: declname='c', quals=[] (at pp.c:12800)
          Union: name='Msp430TimerCapComP__6____nesc_unnamed4387', packed=False (at pp.c:12793)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:12795)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:12797)
                IdentifierType: names=['Msp430TimerCapComP__6__cc_t'] (at None)
        ExprList:  (at pp.c:12800)
          Assignment: op='=' (at pp.c:12800)
            StructRef: type='.' (at pp.c:12800)
              ID: name='f' (at pp.c:12800)
            ID: name='x' (at pp.c:12800)
      Return:  (at pp.c:12803)
        StructRef: type='.' (at pp.c:12803)
          ID: name='c' (at pp.c:12803)
          ID: name='t' (at pp.c:12803)
  FuncDef:  (at pp.c:12807)
    Decl: name='Msp430TimerCapComP__6__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:12807)
      FuncDecl: quals=None (at pp.c:12807)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Control__getControl', quals=[] (at pp.c:12807)
          IdentifierType: names=['Msp430TimerCapComP__6__cc_t'] (at None)
    Compound:  (at pp.c:12808)
      Return:  (at pp.c:12809)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__6__int2CC' (at pp.c:12809)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:12809)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='392U' (at pp.c:12809)
  FuncDef:  (at pp.c:12813)
    Decl: name='Msp430TimerCapComP__6__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:12813)
      FuncDecl: quals=None (at pp.c:12813)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Event__fired', quals=[] (at pp.c:12813)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12814)
      If:  (at pp.c:12815)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__6__Control__getControl' (at pp.c:12815)
          ID: name='cap' (at pp.c:12815)
        Compound:  (at pp.c:12815)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__6__Capture__captured' (at pp.c:12816)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__6__Capture__getEvent' (at pp.c:12816)
        Compound:  (at pp.c:12818)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__6__Compare__fired' (at pp.c:12820)
  FuncDef:  (at pp.c:12827)
    Decl: name='Msp430TimerCapComP__7__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:12827)
      FuncDecl: quals=None (at pp.c:12827)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Compare__default__fired', quals=[] (at pp.c:12827)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12828)
  FuncDef:  (at pp.c:12832)
    Decl: name='Msp430TimerCapComP__7__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:12832)
      FuncDecl: quals=None (at pp.c:12832)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Compare__fired', quals=[] (at pp.c:12832)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12832)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__7__Compare__default__fired' (at pp.c:12834)
  FuncDef:  (at pp.c:12839)
    Decl: name='Msp430TimerCapComP__7__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:12839)
      FuncDecl: quals=None (at pp.c:12839)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Capture__getEvent', quals=[] (at pp.c:12839)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:12840)
      Return:  (at pp.c:12841)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12841)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='410U' (at pp.c:12841)
  FuncDef:  (at pp.c:12845)
    Decl: name='Msp430TimerCapComP__7__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:12845)
      FuncDecl: quals=None (at pp.c:12845)
        ParamList:  (at pp.c:12845)
          Decl: name='n', quals=[], storage=[] (at pp.c:12845)
            TypeDecl: declname='n', quals=[] (at pp.c:12845)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Capture__default__captured', quals=[] (at pp.c:12845)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12846)
  FuncDef:  (at pp.c:12850)
    Decl: name='Msp430TimerCapComP__7__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:12850)
      FuncDecl: quals=None (at pp.c:12850)
        ParamList:  (at pp.c:12850)
          Decl: name='time', quals=[], storage=[] (at pp.c:12850)
            TypeDecl: declname='time', quals=[] (at pp.c:12850)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Capture__captured', quals=[] (at pp.c:12850)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12850)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__7__Capture__default__captured' (at pp.c:12852)
        ExprList:  (at pp.c:12852)
          ID: name='time' (at pp.c:12852)
  FuncDef:  (at pp.c:12857)
    Decl: name='Msp430TimerCapComP__7__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:12857)
      FuncDecl: quals=None (at pp.c:12857)
        ParamList:  (at pp.c:12857)
          Decl: name='x', quals=[], storage=[] (at pp.c:12857)
            TypeDecl: declname='x', quals=[] (at pp.c:12857)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__int2CC', quals=[] (at pp.c:12857)
          IdentifierType: names=['Msp430TimerCapComP__7__cc_t'] (at None)
    Compound:  (at pp.c:12859)
      Decl: name='c', quals=[], storage=[] (at pp.c:12868)
        TypeDecl: declname='c', quals=[] (at pp.c:12868)
          Union: name='Msp430TimerCapComP__7____nesc_unnamed4388', packed=False (at pp.c:12861)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:12863)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:12865)
                IdentifierType: names=['Msp430TimerCapComP__7__cc_t'] (at None)
        ExprList:  (at pp.c:12868)
          Assignment: op='=' (at pp.c:12868)
            StructRef: type='.' (at pp.c:12868)
              ID: name='f' (at pp.c:12868)
            ID: name='x' (at pp.c:12868)
      Return:  (at pp.c:12871)
        StructRef: type='.' (at pp.c:12871)
          ID: name='c' (at pp.c:12871)
          ID: name='t' (at pp.c:12871)
  FuncDef:  (at pp.c:12875)
    Decl: name='Msp430TimerCapComP__7__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:12875)
      FuncDecl: quals=None (at pp.c:12875)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Control__getControl', quals=[] (at pp.c:12875)
          IdentifierType: names=['Msp430TimerCapComP__7__cc_t'] (at None)
    Compound:  (at pp.c:12876)
      Return:  (at pp.c:12877)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__7__int2CC' (at pp.c:12877)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:12877)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='394U' (at pp.c:12877)
  FuncDef:  (at pp.c:12881)
    Decl: name='Msp430TimerCapComP__7__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:12881)
      FuncDecl: quals=None (at pp.c:12881)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Event__fired', quals=[] (at pp.c:12881)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12882)
      If:  (at pp.c:12883)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__7__Control__getControl' (at pp.c:12883)
          ID: name='cap' (at pp.c:12883)
        Compound:  (at pp.c:12883)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__7__Capture__captured' (at pp.c:12884)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__7__Capture__getEvent' (at pp.c:12884)
        Compound:  (at pp.c:12886)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__7__Compare__fired' (at pp.c:12888)
  FuncDef:  (at pp.c:12895)
    Decl: name='Msp430TimerCapComP__8__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:12895)
      FuncDecl: quals=None (at pp.c:12895)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Compare__default__fired', quals=[] (at pp.c:12895)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12896)
  FuncDef:  (at pp.c:12900)
    Decl: name='Msp430TimerCapComP__8__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:12900)
      FuncDecl: quals=None (at pp.c:12900)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Compare__fired', quals=[] (at pp.c:12900)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12900)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__8__Compare__default__fired' (at pp.c:12902)
  FuncDef:  (at pp.c:12907)
    Decl: name='Msp430TimerCapComP__8__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:12907)
      FuncDecl: quals=None (at pp.c:12907)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Capture__getEvent', quals=[] (at pp.c:12907)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:12908)
      Return:  (at pp.c:12909)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12909)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='412U' (at pp.c:12909)
  FuncDef:  (at pp.c:12913)
    Decl: name='Msp430TimerCapComP__8__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:12913)
      FuncDecl: quals=None (at pp.c:12913)
        ParamList:  (at pp.c:12913)
          Decl: name='n', quals=[], storage=[] (at pp.c:12913)
            TypeDecl: declname='n', quals=[] (at pp.c:12913)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Capture__default__captured', quals=[] (at pp.c:12913)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12914)
  FuncDef:  (at pp.c:12918)
    Decl: name='Msp430TimerCapComP__8__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:12918)
      FuncDecl: quals=None (at pp.c:12918)
        ParamList:  (at pp.c:12918)
          Decl: name='time', quals=[], storage=[] (at pp.c:12918)
            TypeDecl: declname='time', quals=[] (at pp.c:12918)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Capture__captured', quals=[] (at pp.c:12918)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12918)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__8__Capture__default__captured' (at pp.c:12920)
        ExprList:  (at pp.c:12920)
          ID: name='time' (at pp.c:12920)
  FuncDef:  (at pp.c:12925)
    Decl: name='Msp430TimerCapComP__8__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:12925)
      FuncDecl: quals=None (at pp.c:12925)
        ParamList:  (at pp.c:12925)
          Decl: name='x', quals=[], storage=[] (at pp.c:12925)
            TypeDecl: declname='x', quals=[] (at pp.c:12925)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__int2CC', quals=[] (at pp.c:12925)
          IdentifierType: names=['Msp430TimerCapComP__8__cc_t'] (at None)
    Compound:  (at pp.c:12927)
      Decl: name='c', quals=[], storage=[] (at pp.c:12936)
        TypeDecl: declname='c', quals=[] (at pp.c:12936)
          Union: name='Msp430TimerCapComP__8____nesc_unnamed4389', packed=False (at pp.c:12929)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:12931)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:12933)
                IdentifierType: names=['Msp430TimerCapComP__8__cc_t'] (at None)
        ExprList:  (at pp.c:12936)
          Assignment: op='=' (at pp.c:12936)
            StructRef: type='.' (at pp.c:12936)
              ID: name='f' (at pp.c:12936)
            ID: name='x' (at pp.c:12936)
      Return:  (at pp.c:12939)
        StructRef: type='.' (at pp.c:12939)
          ID: name='c' (at pp.c:12939)
          ID: name='t' (at pp.c:12939)
  FuncDef:  (at pp.c:12943)
    Decl: name='Msp430TimerCapComP__8__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:12943)
      FuncDecl: quals=None (at pp.c:12943)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Control__getControl', quals=[] (at pp.c:12943)
          IdentifierType: names=['Msp430TimerCapComP__8__cc_t'] (at None)
    Compound:  (at pp.c:12944)
      Return:  (at pp.c:12945)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__8__int2CC' (at pp.c:12945)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:12945)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='396U' (at pp.c:12945)
  FuncDef:  (at pp.c:12949)
    Decl: name='Msp430TimerCapComP__8__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:12949)
      FuncDecl: quals=None (at pp.c:12949)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Event__fired', quals=[] (at pp.c:12949)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12950)
      If:  (at pp.c:12951)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__8__Control__getControl' (at pp.c:12951)
          ID: name='cap' (at pp.c:12951)
        Compound:  (at pp.c:12951)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__8__Capture__captured' (at pp.c:12952)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__8__Capture__getEvent' (at pp.c:12952)
        Compound:  (at pp.c:12954)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__8__Compare__fired' (at pp.c:12956)
  FuncDef:  (at pp.c:12963)
    Decl: name='Msp430TimerCapComP__9__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:12963)
      FuncDecl: quals=None (at pp.c:12963)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Compare__default__fired', quals=[] (at pp.c:12963)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12964)
  FuncDef:  (at pp.c:12968)
    Decl: name='Msp430TimerCapComP__9__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:12968)
      FuncDecl: quals=None (at pp.c:12968)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Compare__fired', quals=[] (at pp.c:12968)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12968)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__9__Compare__default__fired' (at pp.c:12970)
  FuncDef:  (at pp.c:12975)
    Decl: name='Msp430TimerCapComP__9__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:12975)
      FuncDecl: quals=None (at pp.c:12975)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Capture__getEvent', quals=[] (at pp.c:12975)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:12976)
      Return:  (at pp.c:12977)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12977)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='414U' (at pp.c:12977)
  FuncDef:  (at pp.c:12981)
    Decl: name='Msp430TimerCapComP__9__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:12981)
      FuncDecl: quals=None (at pp.c:12981)
        ParamList:  (at pp.c:12981)
          Decl: name='n', quals=[], storage=[] (at pp.c:12981)
            TypeDecl: declname='n', quals=[] (at pp.c:12981)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Capture__default__captured', quals=[] (at pp.c:12981)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12982)
  FuncDef:  (at pp.c:12986)
    Decl: name='Msp430TimerCapComP__9__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:12986)
      FuncDecl: quals=None (at pp.c:12986)
        ParamList:  (at pp.c:12986)
          Decl: name='time', quals=[], storage=[] (at pp.c:12986)
            TypeDecl: declname='time', quals=[] (at pp.c:12986)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Capture__captured', quals=[] (at pp.c:12986)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12986)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__9__Capture__default__captured' (at pp.c:12988)
        ExprList:  (at pp.c:12988)
          ID: name='time' (at pp.c:12988)
  FuncDef:  (at pp.c:12993)
    Decl: name='Msp430TimerCapComP__9__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:12993)
      FuncDecl: quals=None (at pp.c:12993)
        ParamList:  (at pp.c:12993)
          Decl: name='x', quals=[], storage=[] (at pp.c:12993)
            TypeDecl: declname='x', quals=[] (at pp.c:12993)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__int2CC', quals=[] (at pp.c:12993)
          IdentifierType: names=['Msp430TimerCapComP__9__cc_t'] (at None)
    Compound:  (at pp.c:12995)
      Decl: name='c', quals=[], storage=[] (at pp.c:13004)
        TypeDecl: declname='c', quals=[] (at pp.c:13004)
          Union: name='Msp430TimerCapComP__9____nesc_unnamed4390', packed=False (at pp.c:12997)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:12999)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:13001)
                IdentifierType: names=['Msp430TimerCapComP__9__cc_t'] (at None)
        ExprList:  (at pp.c:13004)
          Assignment: op='=' (at pp.c:13004)
            StructRef: type='.' (at pp.c:13004)
              ID: name='f' (at pp.c:13004)
            ID: name='x' (at pp.c:13004)
      Return:  (at pp.c:13007)
        StructRef: type='.' (at pp.c:13007)
          ID: name='c' (at pp.c:13007)
          ID: name='t' (at pp.c:13007)
  FuncDef:  (at pp.c:13011)
    Decl: name='Msp430TimerCapComP__9__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:13011)
      FuncDecl: quals=None (at pp.c:13011)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Control__getControl', quals=[] (at pp.c:13011)
          IdentifierType: names=['Msp430TimerCapComP__9__cc_t'] (at None)
    Compound:  (at pp.c:13012)
      Return:  (at pp.c:13013)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__9__int2CC' (at pp.c:13013)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:13013)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='398U' (at pp.c:13013)
  FuncDef:  (at pp.c:13017)
    Decl: name='Msp430TimerCapComP__9__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:13017)
      FuncDecl: quals=None (at pp.c:13017)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Event__fired', quals=[] (at pp.c:13017)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13018)
      If:  (at pp.c:13019)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__9__Control__getControl' (at pp.c:13019)
          ID: name='cap' (at pp.c:13019)
        Compound:  (at pp.c:13019)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__9__Capture__captured' (at pp.c:13020)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__9__Capture__getEvent' (at pp.c:13020)
        Compound:  (at pp.c:13022)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__9__Compare__fired' (at pp.c:13024)
  FuncDef:  (at pp.c:13029)
    Decl: name='Msp430TimerP__1__VectorTimerX1__fired', quals=[], storage=['inline', 'static'] (at pp.c:13029)
      FuncDecl: quals=None (at pp.c:13029)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__VectorTimerX1__fired', quals=[] (at pp.c:13029)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13030)
      Decl: name='n', quals=[], storage=[] (at pp.c:13031)
        TypeDecl: declname='n', quals=[] (at pp.c:13031)
          IdentifierType: names=['uint8_t'] (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13031)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='286U' (at pp.c:13031)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__1__Event__fired' (at pp.c:13034)
        ExprList:  (at pp.c:13034)
          BinaryOp: op='>>' (at pp.c:13034)
            ID: name='n' (at pp.c:13034)
            Constant: type='int', value='1' (at pp.c:13034)
  FuncDef:  (at pp.c:13038)
    Decl: name='Msp430TimerCommonP__VectorTimerB1__fired', quals=[], storage=['static', 'inline'] (at pp.c:13038)
      FuncDecl: quals=None (at pp.c:13038)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCommonP__VectorTimerB1__fired', quals=[] (at pp.c:13038)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13038)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__1__VectorTimerX1__fired' (at pp.c:13040)
  FuncDef:  (at pp.c:13045)
    Decl: name='SchedulerBasicP__Scheduler__init', quals=[], storage=['inline', 'static'] (at pp.c:13045)
      FuncDecl: quals=None (at pp.c:13045)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SchedulerBasicP__Scheduler__init', quals=[] (at pp.c:13045)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13046)
      Compound:  (at pp.c:13048)
        FuncCall:  (at None)
          ID: name='memset' (at pp.c:13049)
          ExprList:  (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                PtrDecl: quals=[] (at pp.c:13049)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['void'] (at None)
              ID: name='SchedulerBasicP__m_next' (at pp.c:13049)
            ID: name='SchedulerBasicP__NO_TASK' (at pp.c:13049)
            UnaryOp: op='sizeof' (at pp.c:13049)
              ID: name='SchedulerBasicP__m_next' (at pp.c:13049)
        Assignment: op='=' (at pp.c:13050)
          ID: name='SchedulerBasicP__m_head' (at pp.c:13050)
          ID: name='SchedulerBasicP__NO_TASK' (at pp.c:13050)
        Assignment: op='=' (at pp.c:13051)
          ID: name='SchedulerBasicP__m_tail' (at pp.c:13051)
          ID: name='SchedulerBasicP__NO_TASK' (at pp.c:13051)
  FuncDef:  (at pp.c:13056)
    Decl: name='RealMainP__Scheduler__init', quals=[], storage=['static', 'inline'] (at pp.c:13056)
      FuncDecl: quals=None (at pp.c:13056)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__Scheduler__init', quals=[] (at pp.c:13056)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13056)
      FuncCall:  (at None)
        ID: name='SchedulerBasicP__Scheduler__init' (at pp.c:13058)
  FuncDef:  (at pp.c:13063)
    Decl: name='HplMsp430GeneralIOP__31__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:13063)
      FuncDecl: quals=None (at pp.c:13063)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__31__IO__set', quals=[] (at pp.c:13063)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13065)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13068)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='29U' (at pp.c:13068)
        BinaryOp: op='<<' (at pp.c:13068)
          Constant: type='int', value='0x01' (at pp.c:13068)
          Constant: type='int', value='7' (at pp.c:13068)
  FuncDef:  (at pp.c:13072)
    Decl: name='Msp430GpioC__2__HplGeneralIO__set', quals=[], storage=['static', 'inline'] (at pp.c:13072)
      FuncDecl: quals=None (at pp.c:13072)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__2__HplGeneralIO__set', quals=[] (at pp.c:13072)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13072)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__31__IO__set' (at pp.c:13074)
  FuncDef:  (at pp.c:13079)
    Decl: name='Msp430GpioC__2__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:13079)
      FuncDecl: quals=None (at pp.c:13079)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__2__GeneralIO__set', quals=[] (at pp.c:13079)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13081)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__2__HplGeneralIO__set' (at pp.c:13083)
  FuncDef:  (at pp.c:13087)
    Decl: name='LedsP__Led2__set', quals=[], storage=['static', 'inline'] (at pp.c:13087)
      FuncDecl: quals=None (at pp.c:13087)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led2__set', quals=[] (at pp.c:13087)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13087)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__2__GeneralIO__set' (at pp.c:13089)
  FuncDef:  (at pp.c:13094)
    Decl: name='HplMsp430GeneralIOP__27__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:13094)
      FuncDecl: quals=None (at pp.c:13094)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__27__IO__set', quals=[] (at pp.c:13094)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13096)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13099)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='29U' (at pp.c:13099)
        BinaryOp: op='<<' (at pp.c:13099)
          Constant: type='int', value='0x01' (at pp.c:13099)
          Constant: type='int', value='3' (at pp.c:13099)
  FuncDef:  (at pp.c:13103)
    Decl: name='Msp430GpioC__1__HplGeneralIO__set', quals=[], storage=['static', 'inline'] (at pp.c:13103)
      FuncDecl: quals=None (at pp.c:13103)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__set', quals=[] (at pp.c:13103)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13103)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__27__IO__set' (at pp.c:13105)
  FuncDef:  (at pp.c:13110)
    Decl: name='Msp430GpioC__1__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:13110)
      FuncDecl: quals=None (at pp.c:13110)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__GeneralIO__set', quals=[] (at pp.c:13110)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13112)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__HplGeneralIO__set' (at pp.c:13114)
  FuncDef:  (at pp.c:13118)
    Decl: name='LedsP__Led1__set', quals=[], storage=['static', 'inline'] (at pp.c:13118)
      FuncDecl: quals=None (at pp.c:13118)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led1__set', quals=[] (at pp.c:13118)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13118)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__GeneralIO__set' (at pp.c:13120)
  FuncDef:  (at pp.c:13125)
    Decl: name='HplMsp430GeneralIOP__24__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:13125)
      FuncDecl: quals=None (at pp.c:13125)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__24__IO__set', quals=[] (at pp.c:13125)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13127)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13130)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='29U' (at pp.c:13130)
        BinaryOp: op='<<' (at pp.c:13130)
          Constant: type='int', value='0x01' (at pp.c:13130)
          Constant: type='int', value='0' (at pp.c:13130)
  FuncDef:  (at pp.c:13134)
    Decl: name='Msp430GpioC__0__HplGeneralIO__set', quals=[], storage=['static', 'inline'] (at pp.c:13134)
      FuncDecl: quals=None (at pp.c:13134)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__set', quals=[] (at pp.c:13134)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13134)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__24__IO__set' (at pp.c:13136)
  FuncDef:  (at pp.c:13141)
    Decl: name='Msp430GpioC__0__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:13141)
      FuncDecl: quals=None (at pp.c:13141)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__GeneralIO__set', quals=[] (at pp.c:13141)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13143)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__0__HplGeneralIO__set' (at pp.c:13145)
  FuncDef:  (at pp.c:13149)
    Decl: name='LedsP__Led0__set', quals=[], storage=['static', 'inline'] (at pp.c:13149)
      FuncDecl: quals=None (at pp.c:13149)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led0__set', quals=[] (at pp.c:13149)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13149)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__0__GeneralIO__set' (at pp.c:13151)
  FuncDef:  (at pp.c:13156)
    Decl: name='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:13156)
      FuncDecl: quals=None (at pp.c:13156)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[] (at pp.c:13156)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13158)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13161)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='30U' (at pp.c:13161)
        BinaryOp: op='<<' (at pp.c:13161)
          Constant: type='int', value='0x01' (at pp.c:13161)
          Constant: type='int', value='7' (at pp.c:13161)
  FuncDef:  (at pp.c:13165)
    Decl: name='Msp430GpioC__2__HplGeneralIO__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:13165)
      FuncDecl: quals=None (at pp.c:13165)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__2__HplGeneralIO__makeOutput', quals=[] (at pp.c:13165)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13165)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__31__IO__makeOutput' (at pp.c:13167)
  FuncDef:  (at pp.c:13172)
    Decl: name='Msp430GpioC__2__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:13172)
      FuncDecl: quals=None (at pp.c:13172)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__2__GeneralIO__makeOutput', quals=[] (at pp.c:13172)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13174)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__2__HplGeneralIO__makeOutput' (at pp.c:13176)
  FuncDef:  (at pp.c:13180)
    Decl: name='LedsP__Led2__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:13180)
      FuncDecl: quals=None (at pp.c:13180)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led2__makeOutput', quals=[] (at pp.c:13180)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13180)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__2__GeneralIO__makeOutput' (at pp.c:13182)
  FuncDef:  (at pp.c:13187)
    Decl: name='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:13187)
      FuncDecl: quals=None (at pp.c:13187)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[] (at pp.c:13187)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13189)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13192)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='30U' (at pp.c:13192)
        BinaryOp: op='<<' (at pp.c:13192)
          Constant: type='int', value='0x01' (at pp.c:13192)
          Constant: type='int', value='3' (at pp.c:13192)
  FuncDef:  (at pp.c:13196)
    Decl: name='Msp430GpioC__1__HplGeneralIO__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:13196)
      FuncDecl: quals=None (at pp.c:13196)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__makeOutput', quals=[] (at pp.c:13196)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13196)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__27__IO__makeOutput' (at pp.c:13198)
  FuncDef:  (at pp.c:13203)
    Decl: name='Msp430GpioC__1__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:13203)
      FuncDecl: quals=None (at pp.c:13203)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__GeneralIO__makeOutput', quals=[] (at pp.c:13203)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13205)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__HplGeneralIO__makeOutput' (at pp.c:13207)
  FuncDef:  (at pp.c:13211)
    Decl: name='LedsP__Led1__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:13211)
      FuncDecl: quals=None (at pp.c:13211)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led1__makeOutput', quals=[] (at pp.c:13211)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13211)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__GeneralIO__makeOutput' (at pp.c:13213)
  FuncDef:  (at pp.c:13218)
    Decl: name='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:13218)
      FuncDecl: quals=None (at pp.c:13218)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[] (at pp.c:13218)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13220)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13223)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='30U' (at pp.c:13223)
        BinaryOp: op='<<' (at pp.c:13223)
          Constant: type='int', value='0x01' (at pp.c:13223)
          Constant: type='int', value='0' (at pp.c:13223)
  FuncDef:  (at pp.c:13227)
    Decl: name='Msp430GpioC__0__HplGeneralIO__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:13227)
      FuncDecl: quals=None (at pp.c:13227)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__makeOutput', quals=[] (at pp.c:13227)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13227)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__24__IO__makeOutput' (at pp.c:13229)
  FuncDef:  (at pp.c:13234)
    Decl: name='Msp430GpioC__0__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:13234)
      FuncDecl: quals=None (at pp.c:13234)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__GeneralIO__makeOutput', quals=[] (at pp.c:13234)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13236)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__0__HplGeneralIO__makeOutput' (at pp.c:13238)
  FuncDef:  (at pp.c:13242)
    Decl: name='LedsP__Led0__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:13242)
      FuncDecl: quals=None (at pp.c:13242)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led0__makeOutput', quals=[] (at pp.c:13242)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13242)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__0__GeneralIO__makeOutput' (at pp.c:13244)
  FuncDef:  (at pp.c:13249)
    Decl: name='LedsP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:13249)
      FuncDecl: quals=None (at pp.c:13249)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Init__init', quals=[] (at pp.c:13249)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:13251)
      Compound:  (at pp.c:13254)
        FuncCall:  (at None)
          ID: name='LedsP__Led0__makeOutput' (at pp.c:13256)
        FuncCall:  (at None)
          ID: name='LedsP__Led1__makeOutput' (at pp.c:13257)
        FuncCall:  (at None)
          ID: name='LedsP__Led2__makeOutput' (at pp.c:13258)
        FuncCall:  (at None)
          ID: name='LedsP__Led0__set' (at pp.c:13259)
        FuncCall:  (at None)
          ID: name='LedsP__Led1__set' (at pp.c:13260)
        FuncCall:  (at None)
          ID: name='LedsP__Led2__set' (at pp.c:13261)
      Return:  (at pp.c:13263)
        ID: name='SUCCESS' (at pp.c:13263)
  FuncDef:  (at pp.c:13267)
    Decl: name='PlatformP__LedsInit__init', quals=[], storage=['static', 'inline'] (at pp.c:13267)
      FuncDecl: quals=None (at pp.c:13267)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='PlatformP__LedsInit__init', quals=[] (at pp.c:13267)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:13267)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:13269)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:13269)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:13273)
        ID: name='__nesc_result' (at pp.c:13273)
        FuncCall:  (at None)
          ID: name='LedsP__Init__init' (at pp.c:13273)
      Return:  (at pp.c:13277)
        ID: name='__nesc_result' (at pp.c:13277)
  FuncDef:  (at pp.c:13282)
    Decl: name='MotePlatformC__SubInit__default__init', quals=[], storage=['inline', 'static'] (at pp.c:13282)
      FuncDecl: quals=None (at pp.c:13282)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='MotePlatformC__SubInit__default__init', quals=[] (at pp.c:13282)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:13284)
      Return:  (at pp.c:13286)
        ID: name='SUCCESS' (at pp.c:13286)
  FuncDef:  (at pp.c:13290)
    Decl: name='MotePlatformC__SubInit__init', quals=[], storage=['static', 'inline'] (at pp.c:13290)
      FuncDecl: quals=None (at pp.c:13290)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='MotePlatformC__SubInit__init', quals=[] (at pp.c:13290)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:13290)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:13292)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:13292)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:13296)
        ID: name='__nesc_result' (at pp.c:13296)
        FuncCall:  (at None)
          ID: name='MotePlatformC__SubInit__default__init' (at pp.c:13296)
      Return:  (at pp.c:13300)
        ID: name='__nesc_result' (at pp.c:13300)
  FuncDef:  (at pp.c:13305)
    Decl: name='MotePlatformC__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:13305)
      FuncDecl: quals=None (at pp.c:13305)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='MotePlatformC__Init__init', quals=[] (at pp.c:13305)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:13307)
      Compound:  (at pp.c:13310)
        Assignment: op='=' (at pp.c:13311)
          ID: name='P1SEL' (at pp.c:13311)
          Constant: type='int', value='0' (at pp.c:13311)
        Assignment: op='=' (at pp.c:13312)
          ID: name='P2SEL' (at pp.c:13312)
          Constant: type='int', value='0' (at pp.c:13312)
        Assignment: op='=' (at pp.c:13313)
          ID: name='P3SEL' (at pp.c:13313)
          Constant: type='int', value='0' (at pp.c:13313)
        Assignment: op='=' (at pp.c:13314)
          ID: name='P4SEL' (at pp.c:13314)
          Constant: type='int', value='0' (at pp.c:13314)
        Assignment: op='=' (at pp.c:13315)
          ID: name='P5SEL' (at pp.c:13315)
          Constant: type='int', value='0' (at pp.c:13315)
        Assignment: op='=' (at pp.c:13316)
          ID: name='P6SEL' (at pp.c:13316)
          Constant: type='int', value='0' (at pp.c:13316)
        Assignment: op='=' (at pp.c:13318)
          ID: name='P1OUT' (at pp.c:13318)
          Constant: type='int', value='0x00' (at pp.c:13318)
        Assignment: op='=' (at pp.c:13319)
          ID: name='P1DIR' (at pp.c:13319)
          Constant: type='int', value='0xe0' (at pp.c:13319)
        Assignment: op='=' (at pp.c:13321)
          ID: name='P2OUT' (at pp.c:13321)
          Constant: type='int', value='0x30' (at pp.c:13321)
        Assignment: op='=' (at pp.c:13322)
          ID: name='P2DIR' (at pp.c:13322)
          Constant: type='int', value='0x7b' (at pp.c:13322)
        Assignment: op='=' (at pp.c:13324)
          ID: name='P3OUT' (at pp.c:13324)
          Constant: type='int', value='0x00' (at pp.c:13324)
        Assignment: op='=' (at pp.c:13325)
          ID: name='P3DIR' (at pp.c:13325)
          Constant: type='int', value='0xf1' (at pp.c:13325)
        Assignment: op='=' (at pp.c:13327)
          ID: name='P4OUT' (at pp.c:13327)
          Constant: type='int', value='0xdd' (at pp.c:13327)
        Assignment: op='=' (at pp.c:13328)
          ID: name='P4DIR' (at pp.c:13328)
          Constant: type='int', value='0xfd' (at pp.c:13328)
        Assignment: op='=' (at pp.c:13330)
          ID: name='P5OUT' (at pp.c:13330)
          Constant: type='int', value='0xff' (at pp.c:13330)
        Assignment: op='=' (at pp.c:13331)
          ID: name='P5DIR' (at pp.c:13331)
          Constant: type='int', value='0xff' (at pp.c:13331)
        Assignment: op='=' (at pp.c:13333)
          ID: name='P6OUT' (at pp.c:13333)
          Constant: type='int', value='0x00' (at pp.c:13333)
        Assignment: op='=' (at pp.c:13334)
          ID: name='P6DIR' (at pp.c:13334)
          Constant: type='int', value='0xff' (at pp.c:13334)
        Assignment: op='=' (at pp.c:13336)
          ID: name='P1IE' (at pp.c:13336)
          Constant: type='int', value='0' (at pp.c:13336)
        Assignment: op='=' (at pp.c:13337)
          ID: name='P2IE' (at pp.c:13337)
          Constant: type='int', value='0' (at pp.c:13337)
      Return:  (at pp.c:13344)
        FuncCall:  (at None)
          ID: name='MotePlatformC__SubInit__init' (at pp.c:13344)
  FuncDef:  (at pp.c:13348)
    Decl: name='PlatformP__MoteInit__init', quals=[], storage=['static', 'inline'] (at pp.c:13348)
      FuncDecl: quals=None (at pp.c:13348)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='PlatformP__MoteInit__init', quals=[] (at pp.c:13348)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:13348)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:13350)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:13350)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:13354)
        ID: name='__nesc_result' (at pp.c:13354)
        FuncCall:  (at None)
          ID: name='MotePlatformC__Init__init' (at pp.c:13354)
      Return:  (at pp.c:13358)
        ID: name='__nesc_result' (at pp.c:13358)
  FuncDef:  (at pp.c:13363)
    Decl: name='Msp430ClockP__startTimerB', quals=[], storage=['inline', 'static'] (at pp.c:13363)
      FuncDecl: quals=None (at pp.c:13363)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__startTimerB', quals=[] (at pp.c:13363)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13364)
      Assignment: op='=' (at pp.c:13366)
        ID: name='Msp430ClockP__TBCTL' (at pp.c:13366)
        BinaryOp: op='|' (at pp.c:13366)
          Constant: type='int', value='0x0020' (at pp.c:13366)
          BinaryOp: op='&' (at pp.c:13366)
            ID: name='Msp430ClockP__TBCTL' (at pp.c:13366)
            UnaryOp: op='~' (at pp.c:13366)
              BinaryOp: op='|' (at pp.c:13366)
                Constant: type='int', value='0x0020' (at pp.c:13366)
                Constant: type='int', value='0x0010' (at pp.c:13366)
  FuncDef:  (at pp.c:13370)
    Decl: name='Msp430ClockP__startTimerA', quals=[], storage=['inline', 'static'] (at pp.c:13370)
      FuncDecl: quals=None (at pp.c:13370)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__startTimerA', quals=[] (at pp.c:13370)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13371)
      Assignment: op='=' (at pp.c:13373)
        ID: name='Msp430ClockP__TA0CTL' (at pp.c:13373)
        BinaryOp: op='|' (at pp.c:13373)
          Constant: type='int', value='0x0020' (at pp.c:13373)
          BinaryOp: op='&' (at pp.c:13373)
            ID: name='Msp430ClockP__TA0CTL' (at pp.c:13373)
            UnaryOp: op='~' (at pp.c:13373)
              BinaryOp: op='|' (at pp.c:13373)
                Constant: type='int', value='0x0020' (at pp.c:13373)
                Constant: type='int', value='0x0010' (at pp.c:13373)
  FuncDef:  (at pp.c:13377)
    Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[], storage=['inline', 'static'] (at pp.c:13377)
      FuncDecl: quals=None (at pp.c:13377)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[] (at pp.c:13377)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13378)
      Assignment: op='=' (at pp.c:13379)
        ID: name='TBR' (at pp.c:13379)
        Constant: type='int', value='0' (at pp.c:13379)
      Assignment: op='=' (at pp.c:13389)
        ID: name='Msp430ClockP__TBCTL' (at pp.c:13389)
        BinaryOp: op='|' (at pp.c:13389)
          Constant: type='int', value='0x0100' (at pp.c:13389)
          Constant: type='int', value='0x0002' (at pp.c:13389)
  FuncDef:  (at pp.c:13393)
    Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[], storage=['inline', 'static'] (at pp.c:13393)
      FuncDecl: quals=None (at pp.c:13393)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[] (at pp.c:13393)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13394)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerB' (at pp.c:13395)
  FuncDef:  (at pp.c:13399)
    Decl: name='Msp430ClockP__Msp430ClockInit__initTimerB', quals=[], storage=['static', 'inline'] (at pp.c:13399)
      FuncDecl: quals=None (at pp.c:13399)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initTimerB', quals=[] (at pp.c:13399)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13399)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__default__initTimerB' (at pp.c:13401)
  FuncDef:  (at pp.c:13406)
    Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[], storage=['inline', 'static'] (at pp.c:13406)
      FuncDecl: quals=None (at pp.c:13406)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[] (at pp.c:13406)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13407)
      Assignment: op='=' (at pp.c:13408)
        ID: name='TA0R' (at pp.c:13408)
        Constant: type='int', value='0' (at pp.c:13408)
      Assignment: op='=' (at pp.c:13418)
        ID: name='Msp430ClockP__TA0CTL' (at pp.c:13418)
        BinaryOp: op='|' (at pp.c:13418)
          Constant: type='int', value='0x0200' (at pp.c:13418)
          Constant: type='int', value='0x0002' (at pp.c:13418)
  FuncDef:  (at pp.c:13422)
    Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[], storage=['inline', 'static'] (at pp.c:13422)
      FuncDecl: quals=None (at pp.c:13422)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[] (at pp.c:13422)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13423)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerA' (at pp.c:13424)
  FuncDef:  (at pp.c:13428)
    Decl: name='Msp430ClockP__Msp430ClockInit__initTimerA', quals=[], storage=['static', 'inline'] (at pp.c:13428)
      FuncDecl: quals=None (at pp.c:13428)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initTimerA', quals=[] (at pp.c:13428)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13428)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__default__initTimerA' (at pp.c:13430)
  FuncDef:  (at pp.c:13435)
    Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[], storage=['inline', 'static'] (at pp.c:13435)
      FuncDecl: quals=None (at pp.c:13435)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[] (at pp.c:13435)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13436)
      Assignment: op='=' (at pp.c:13442)
        ID: name='BCSCTL1' (at pp.c:13442)
        BinaryOp: op='|' (at pp.c:13442)
          Constant: type='int', value='0x80' (at pp.c:13442)
          BinaryOp: op='&' (at pp.c:13442)
            ID: name='BCSCTL1' (at pp.c:13442)
            BinaryOp: op='|' (at pp.c:13442)
              BinaryOp: op='|' (at pp.c:13442)
                Constant: type='int', value='0x04' (at pp.c:13442)
                Constant: type='int', value='0x02' (at pp.c:13442)
              Constant: type='int', value='0x01' (at pp.c:13442)
      Assignment: op='=' (at pp.c:13450)
        ID: name='BCSCTL2' (at pp.c:13450)
        Constant: type='int', value='0x04' (at pp.c:13450)
      Assignment: op='&=' (at pp.c:13453)
        ID: name='Msp430ClockP__IE1' (at pp.c:13453)
        UnaryOp: op='~' (at pp.c:13453)
          BinaryOp: op='<<' (at pp.c:13453)
            Constant: type='int', value='1' (at pp.c:13453)
            Constant: type='int', value='1' (at pp.c:13453)
  FuncDef:  (at pp.c:13457)
    Decl: name='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[], storage=['inline', 'static'] (at pp.c:13457)
      FuncDecl: quals=None (at pp.c:13457)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[] (at pp.c:13457)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13458)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__defaultInitClocks' (at pp.c:13459)
  FuncDef:  (at pp.c:13463)
    Decl: name='Msp430ClockP__Msp430ClockInit__initClocks', quals=[], storage=['static', 'inline'] (at pp.c:13463)
      FuncDecl: quals=None (at pp.c:13463)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initClocks', quals=[] (at pp.c:13463)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13463)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__default__initClocks' (at pp.c:13465)
  FuncDef:  (at pp.c:13470)
    Decl: name='Msp430ClockP__test_calib_busywait_delta', quals=[], storage=['inline', 'static'] (at pp.c:13470)
      FuncDecl: quals=None (at pp.c:13470)
        ParamList:  (at pp.c:13470)
          Decl: name='calib', quals=[], storage=[] (at pp.c:13470)
            TypeDecl: declname='calib', quals=[] (at pp.c:13470)
              IdentifierType: names=['int'] (at None)
        TypeDecl: declname='Msp430ClockP__test_calib_busywait_delta', quals=[] (at pp.c:13470)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:13471)
      Decl: name='aclk_count', quals=[], storage=[] (at pp.c:13472)
        TypeDecl: declname='aclk_count', quals=[] (at pp.c:13472)
          IdentifierType: names=['int8_t'] (at None)
        Constant: type='int', value='2' (at pp.c:13472)
      Decl: name='dco_prev', quals=[], storage=[] (at pp.c:13473)
        TypeDecl: declname='dco_prev', quals=[] (at pp.c:13473)
          IdentifierType: names=['uint16_t'] (at None)
        Constant: type='int', value='0' (at pp.c:13473)
      Decl: name='dco_curr', quals=[], storage=[] (at pp.c:13474)
        TypeDecl: declname='dco_curr', quals=[] (at pp.c:13474)
          IdentifierType: names=['uint16_t'] (at None)
        Constant: type='int', value='0' (at pp.c:13474)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__set_dco_calib' (at pp.c:13476)
        ExprList:  (at pp.c:13476)
          ID: name='calib' (at pp.c:13476)
      While:  (at pp.c:13478)
        BinaryOp: op='>' (at pp.c:13478)
          UnaryOp: op='p--' (at pp.c:13478)
            ID: name='aclk_count' (at pp.c:13478)
          Constant: type='int', value='0' (at pp.c:13478)
        Compound:  (at pp.c:13479)
          Assignment: op='=' (at pp.c:13480)
            ID: name='TBCCR0' (at pp.c:13480)
            BinaryOp: op='+' (at pp.c:13480)
              ID: name='TBR' (at pp.c:13480)
              ID: name='Msp430ClockP__ACLK_CALIB_PERIOD' (at pp.c:13480)
          Assignment: op='&=' (at pp.c:13481)
            ID: name='TBCCTL0' (at pp.c:13481)
            UnaryOp: op='~' (at pp.c:13481)
              Constant: type='int', value='0x0001' (at pp.c:13481)
          While:  (at pp.c:13482)
            BinaryOp: op='==' (at pp.c:13482)
              BinaryOp: op='&' (at pp.c:13482)
                ID: name='TBCCTL0' (at pp.c:13482)
                Constant: type='int', value='0x0001' (at pp.c:13482)
              Constant: type='int', value='0' (at pp.c:13482)
          Assignment: op='=' (at pp.c:13483)
            ID: name='dco_prev' (at pp.c:13483)
            ID: name='dco_curr' (at pp.c:13483)
          Assignment: op='=' (at pp.c:13484)
            ID: name='dco_curr' (at pp.c:13484)
            ID: name='TA0R' (at pp.c:13484)
      Return:  (at pp.c:13487)
        BinaryOp: op='-' (at pp.c:13487)
          ID: name='dco_curr' (at pp.c:13487)
          ID: name='dco_prev' (at pp.c:13487)
  FuncDef:  (at pp.c:13493)
    Decl: name='Msp430ClockP__busyCalibrateDco', quals=[], storage=['inline', 'static'] (at pp.c:13493)
      FuncDecl: quals=None (at pp.c:13493)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__busyCalibrateDco', quals=[] (at pp.c:13493)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13494)
      Decl: name='calib', quals=[], storage=[] (at pp.c:13496)
        TypeDecl: declname='calib', quals=[] (at pp.c:13496)
          IdentifierType: names=['int'] (at None)
      Decl: name='step', quals=[], storage=[] (at pp.c:13497)
        TypeDecl: declname='step', quals=[] (at pp.c:13497)
          IdentifierType: names=['int'] (at None)
      For:  (at pp.c:13504)
        ExprList:  (at pp.c:13504)
          Assignment: op='=' (at pp.c:13504)
            ID: name='calib' (at pp.c:13504)
            Constant: type='int', value='0' (at pp.c:13504)
          Assignment: op='=' (at pp.c:13504)
            ID: name='step' (at pp.c:13504)
            Constant: type='int', value='0x800' (at pp.c:13504)
        BinaryOp: op='!=' (at pp.c:13504)
          ID: name='step' (at pp.c:13504)
          Constant: type='int', value='0' (at pp.c:13504)
        Assignment: op='>>=' (at pp.c:13504)
          ID: name='step' (at pp.c:13504)
          Constant: type='int', value='1' (at pp.c:13504)
        Compound:  (at pp.c:13505)
          If:  (at pp.c:13507)
            BinaryOp: op='<=' (at None)
              FuncCall:  (at None)
                ID: name='Msp430ClockP__test_calib_busywait_delta' (at pp.c:13507)
                ExprList:  (at pp.c:13507)
                  BinaryOp: op='|' (at pp.c:13507)
                    ID: name='calib' (at pp.c:13507)
                    ID: name='step' (at pp.c:13507)
              ID: name='Msp430ClockP__TARGET_DCO_DELTA' (at pp.c:13507)
            Compound:  (at pp.c:13507)
              Assignment: op='|=' (at pp.c:13508)
                ID: name='calib' (at pp.c:13508)
                ID: name='step' (at pp.c:13508)
      If:  (at pp.c:13512)
        BinaryOp: op='==' (at pp.c:13512)
          BinaryOp: op='&' (at pp.c:13512)
            ID: name='calib' (at pp.c:13512)
            Constant: type='int', value='0x0e0' (at pp.c:13512)
          Constant: type='int', value='0x0e0' (at pp.c:13512)
        Compound:  (at pp.c:13512)
          Assignment: op='&=' (at pp.c:13513)
            ID: name='calib' (at pp.c:13513)
            UnaryOp: op='~' (at pp.c:13513)
              Constant: type='int', value='0x01f' (at pp.c:13513)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__set_dco_calib' (at pp.c:13515)
        ExprList:  (at pp.c:13515)
          ID: name='calib' (at pp.c:13515)
  FuncDef:  (at pp.c:13519)
    Decl: name='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[], storage=['inline', 'static'] (at pp.c:13519)
      FuncDecl: quals=None (at pp.c:13519)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[] (at pp.c:13519)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13520)
      Assignment: op='=' (at pp.c:13524)
        ID: name='Msp430ClockP__TA0CTL' (at pp.c:13524)
        BinaryOp: op='|' (at pp.c:13524)
          Constant: type='int', value='0x0200' (at pp.c:13524)
          Constant: type='int', value='0x0020' (at pp.c:13524)
      Assignment: op='=' (at pp.c:13525)
        ID: name='Msp430ClockP__TBCTL' (at pp.c:13525)
        BinaryOp: op='|' (at pp.c:13525)
          Constant: type='int', value='0x0100' (at pp.c:13525)
          Constant: type='int', value='0x0020' (at pp.c:13525)
      Assignment: op='=' (at pp.c:13526)
        ID: name='BCSCTL1' (at pp.c:13526)
        BinaryOp: op='|' (at pp.c:13526)
          Constant: type='int', value='0x80' (at pp.c:13526)
          Constant: type='int', value='0x04' (at pp.c:13526)
      Assignment: op='=' (at pp.c:13527)
        ID: name='BCSCTL2' (at pp.c:13527)
        Constant: type='int', value='0' (at pp.c:13527)
      Assignment: op='=' (at pp.c:13528)
        ID: name='TBCCTL0' (at pp.c:13528)
        Constant: type='int', value='0x4000' (at pp.c:13528)
  FuncDef:  (at pp.c:13532)
    Decl: name='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[], storage=['inline', 'static'] (at pp.c:13532)
      FuncDecl: quals=None (at pp.c:13532)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[] (at pp.c:13532)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13533)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate' (at pp.c:13534)
  FuncDef:  (at pp.c:13538)
    Decl: name='Msp430ClockP__Msp430ClockInit__setupDcoCalibrate', quals=[], storage=['static', 'inline'] (at pp.c:13538)
      FuncDecl: quals=None (at pp.c:13538)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__setupDcoCalibrate', quals=[] (at pp.c:13538)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13538)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate' (at pp.c:13540)
  FuncDef:  (at pp.c:13545)
    Decl: name='Msp430ClockP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:13545)
      FuncDecl: quals=None (at pp.c:13545)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Init__init', quals=[] (at pp.c:13545)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:13546)
      Assignment: op='=' (at pp.c:13548)
        ID: name='Msp430ClockP__TA0CTL' (at pp.c:13548)
        Constant: type='int', value='0x0004' (at pp.c:13548)
      Assignment: op='=' (at pp.c:13549)
        ID: name='Msp430ClockP__TA0IV' (at pp.c:13549)
        Constant: type='int', value='0' (at pp.c:13549)
      Assignment: op='=' (at pp.c:13550)
        ID: name='Msp430ClockP__TBCTL' (at pp.c:13550)
        Constant: type='int', value='0x0004' (at pp.c:13550)
      Assignment: op='=' (at pp.c:13551)
        ID: name='Msp430ClockP__TBIV' (at pp.c:13551)
        Constant: type='int', value='0' (at pp.c:13551)
      Compound:  (at pp.c:13554)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__Msp430ClockInit__setupDcoCalibrate' (at pp.c:13555)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__busyCalibrateDco' (at pp.c:13556)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__Msp430ClockInit__initClocks' (at pp.c:13557)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__Msp430ClockInit__initTimerA' (at pp.c:13558)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__Msp430ClockInit__initTimerB' (at pp.c:13559)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__startTimerA' (at pp.c:13560)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__startTimerB' (at pp.c:13561)
      Return:  (at pp.c:13564)
        ID: name='SUCCESS' (at pp.c:13564)
  FuncDef:  (at pp.c:13568)
    Decl: name='PlatformP__MoteClockInit__init', quals=[], storage=['static', 'inline'] (at pp.c:13568)
      FuncDecl: quals=None (at pp.c:13568)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='PlatformP__MoteClockInit__init', quals=[] (at pp.c:13568)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:13568)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:13570)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:13570)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:13574)
        ID: name='__nesc_result' (at pp.c:13574)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__Init__init' (at pp.c:13574)
      Return:  (at pp.c:13578)
        ID: name='__nesc_result' (at pp.c:13578)
  FuncDef:  (at pp.c:13583)
    Decl: name='PlatformP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:13583)
      FuncDecl: quals=None (at pp.c:13583)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='PlatformP__Init__init', quals=[] (at pp.c:13583)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:13585)
      FuncCall:  (at None)
        ID: name='PlatformP__MoteClockInit__init' (at pp.c:13586)
      FuncCall:  (at None)
        ID: name='PlatformP__MoteInit__init' (at pp.c:13587)
      FuncCall:  (at None)
        ID: name='PlatformP__LedsInit__init' (at pp.c:13588)
      Return:  (at pp.c:13589)
        ID: name='SUCCESS' (at pp.c:13589)
  FuncDef:  (at pp.c:13593)
    Decl: name='RealMainP__PlatformInit__init', quals=[], storage=['static', 'inline'] (at pp.c:13593)
      FuncDecl: quals=None (at pp.c:13593)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__PlatformInit__init', quals=[] (at pp.c:13593)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:13593)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:13595)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:13595)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:13599)
        ID: name='__nesc_result' (at pp.c:13599)
        FuncCall:  (at None)
          ID: name='PlatformP__Init__init' (at pp.c:13599)
      Return:  (at pp.c:13603)
        ID: name='__nesc_result' (at pp.c:13603)
  FuncDef:  (at pp.c:13608)
    Decl: name='RealMainP__Scheduler__runNextTask', quals=[], storage=['static', 'inline'] (at pp.c:13608)
      FuncDecl: quals=None (at pp.c:13608)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__Scheduler__runNextTask', quals=[] (at pp.c:13608)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:13608)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:13610)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:13610)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:13614)
        ID: name='__nesc_result' (at pp.c:13614)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__Scheduler__runNextTask' (at pp.c:13614)
      Return:  (at pp.c:13618)
        ID: name='__nesc_result' (at pp.c:13618)
  FuncDef:  (at pp.c:13623)
    Decl: name='TelosSerialP__Resource__granted', quals=[], storage=['inline', 'static'] (at pp.c:13623)
      FuncDecl: quals=None (at pp.c:13623)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TelosSerialP__Resource__granted', quals=[] (at pp.c:13623)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13625)
  FuncDef:  (at pp.c:13629)
    Decl: name='Msp430UartP__0__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:13629)
      FuncDecl: quals=None (at pp.c:13629)
        ParamList:  (at pp.c:13629)
          Decl: name='id', quals=[], storage=[] (at pp.c:13629)
            TypeDecl: declname='id', quals=[] (at pp.c:13629)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__Resource__default__granted', quals=[] (at pp.c:13629)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13631)
  FuncDef:  (at pp.c:13635)
    Decl: name='Msp430UartP__0__Resource__granted', quals=[], storage=['static', 'inline'] (at pp.c:13635)
      FuncDecl: quals=None (at pp.c:13635)
        ParamList:  (at pp.c:13635)
          Decl: name='arg_0x1027de710', quals=[], storage=[] (at pp.c:13635)
            TypeDecl: declname='arg_0x1027de710', quals=[] (at pp.c:13635)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__Resource__granted', quals=[] (at pp.c:13635)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13635)
      Switch:  (at pp.c:13637)
        ID: name='arg_0x1027de710' (at pp.c:13637)
        Compound:  (at pp.c:13637)
          Case:  (at pp.c:13639)
            ID: name='Msp430Uart1C__0__CLIENT_ID' (at pp.c:13639)
            FuncCall:  (at None)
              ID: name='TelosSerialP__Resource__granted' (at pp.c:13641)
          Break:  (at pp.c:13643)
          Default:  (at pp.c:13645)
            FuncCall:  (at None)
              ID: name='Msp430UartP__0__Resource__default__granted' (at pp.c:13647)
              ExprList:  (at pp.c:13647)
                ID: name='arg_0x1027de710' (at pp.c:13647)
          Break:  (at pp.c:13649)
  FuncDef:  (at pp.c:13656)
    Decl: name='Msp430UartP__0__UsartResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:13656)
      FuncDecl: quals=None (at pp.c:13656)
        ParamList:  (at pp.c:13656)
          Decl: name='id', quals=[], storage=[] (at pp.c:13656)
            TypeDecl: declname='id', quals=[] (at pp.c:13656)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__UsartResource__granted', quals=[] (at pp.c:13656)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13658)
      FuncCall:  (at None)
        ID: name='Msp430UartP__0__Resource__granted' (at pp.c:13659)
        ExprList:  (at pp.c:13659)
          ID: name='id' (at pp.c:13659)
  FuncDef:  (at pp.c:13663)
    Decl: name='ArbiterP__1__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:13663)
      FuncDecl: quals=None (at pp.c:13663)
        ParamList:  (at pp.c:13663)
          Decl: name='id', quals=[], storage=[] (at pp.c:13663)
            TypeDecl: declname='id', quals=[] (at pp.c:13663)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__1__Resource__default__granted', quals=[] (at pp.c:13663)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13665)
  FuncDef:  (at pp.c:13669)
    Decl: name='ArbiterP__1__Resource__granted', quals=[], storage=['static', 'inline'] (at pp.c:13669)
      FuncDecl: quals=None (at pp.c:13669)
        ParamList:  (at pp.c:13669)
          Decl: name='arg_0x101ede658', quals=[], storage=[] (at pp.c:13669)
            TypeDecl: declname='arg_0x101ede658', quals=[] (at pp.c:13669)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__1__Resource__granted', quals=[] (at pp.c:13669)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13669)
      Switch:  (at pp.c:13671)
        ID: name='arg_0x101ede658' (at pp.c:13671)
        Compound:  (at pp.c:13671)
          Case:  (at pp.c:13673)
            ID: name='Msp430Usart1C__0__CLIENT_ID' (at pp.c:13673)
            FuncCall:  (at None)
              ID: name='Msp430UartP__0__UsartResource__granted' (at pp.c:13675)
              ExprList:  (at pp.c:13675)
                ID: name='Msp430Uart1C__0__CLIENT_ID' (at pp.c:13675)
          Break:  (at pp.c:13677)
          Default:  (at pp.c:13679)
            FuncCall:  (at None)
              ID: name='ArbiterP__1__Resource__default__granted' (at pp.c:13681)
              ExprList:  (at pp.c:13681)
                ID: name='arg_0x101ede658' (at pp.c:13681)
          Break:  (at pp.c:13683)
  FuncDef:  (at pp.c:13690)
    Decl: name='ArbiterP__1__ResourceConfigure__default__configure', quals=[], storage=['inline', 'static'] (at pp.c:13690)
      FuncDecl: quals=None (at pp.c:13690)
        ParamList:  (at pp.c:13690)
          Decl: name='id', quals=[], storage=[] (at pp.c:13690)
            TypeDecl: declname='id', quals=[] (at pp.c:13690)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__1__ResourceConfigure__default__configure', quals=[] (at pp.c:13690)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13692)
  FuncDef:  (at pp.c:13696)
    Decl: name='ArbiterP__1__ResourceConfigure__configure', quals=[], storage=['static', 'inline'] (at pp.c:13696)
      FuncDecl: quals=None (at pp.c:13696)
        ParamList:  (at pp.c:13696)
          Decl: name='arg_0x101f209b8', quals=[], storage=[] (at pp.c:13696)
            TypeDecl: declname='arg_0x101f209b8', quals=[] (at pp.c:13696)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__1__ResourceConfigure__configure', quals=[] (at pp.c:13696)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13696)
      Switch:  (at pp.c:13698)
        ID: name='arg_0x101f209b8' (at pp.c:13698)
        Compound:  (at pp.c:13698)
          Case:  (at pp.c:13700)
            ID: name='Msp430Usart1C__0__CLIENT_ID' (at pp.c:13700)
            FuncCall:  (at None)
              ID: name='Msp430UartP__0__ResourceConfigure__configure' (at pp.c:13702)
              ExprList:  (at pp.c:13702)
                ID: name='Msp430Uart1C__0__CLIENT_ID' (at pp.c:13702)
          Break:  (at pp.c:13704)
          Default:  (at pp.c:13706)
            FuncCall:  (at None)
              ID: name='ArbiterP__1__ResourceConfigure__default__configure' (at pp.c:13708)
              ExprList:  (at pp.c:13708)
                ID: name='arg_0x101f209b8' (at pp.c:13708)
          Break:  (at pp.c:13710)
  FuncDef:  (at pp.c:13717)
    Decl: name='ArbiterP__1__grantedTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:13717)
      FuncDecl: quals=None (at pp.c:13717)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__1__grantedTask__runTask', quals=[] (at pp.c:13717)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13719)
      Compound:  (at pp.c:13720)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:13720)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:13720)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:13720)
        Compound:  (at pp.c:13722)
          Assignment: op='=' (at pp.c:13723)
            ID: name='ArbiterP__1__resId' (at pp.c:13723)
            ID: name='ArbiterP__1__reqResId' (at pp.c:13723)
          Assignment: op='=' (at pp.c:13724)
            ID: name='ArbiterP__1__state' (at pp.c:13724)
            ID: name='ArbiterP__1__RES_BUSY' (at pp.c:13724)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:13727)
          ExprList:  (at pp.c:13727)
            ID: name='__nesc_atomic' (at pp.c:13727)
      FuncCall:  (at None)
        ID: name='ArbiterP__1__ResourceConfigure__configure' (at pp.c:13728)
        ExprList:  (at pp.c:13728)
          ID: name='ArbiterP__1__resId' (at pp.c:13728)
      FuncCall:  (at None)
        ID: name='ArbiterP__1__Resource__granted' (at pp.c:13729)
        ExprList:  (at pp.c:13729)
          ID: name='ArbiterP__1__resId' (at pp.c:13729)
  FuncDef:  (at pp.c:13733)
    Decl: name='TelosSerialP__Msp430UartConfigure__getConfig', quals=[], storage=['inline', 'static'] (at pp.c:13733)
      FuncDecl: quals=None (at pp.c:13733)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        PtrDecl: quals=[] (at pp.c:13733)
          TypeDecl: declname='TelosSerialP__Msp430UartConfigure__getConfig', quals=[] (at pp.c:13733)
            IdentifierType: names=['msp430_uart_union_config_t'] (at None)
    Compound:  (at pp.c:13735)
      Return:  (at pp.c:13736)
        UnaryOp: op='&' (at pp.c:13736)
          ID: name='TelosSerialP__msp430_uart_telos_config' (at pp.c:13736)
  FuncDef:  (at pp.c:13740)
    Decl: name='Msp430UartP__0__Msp430UartConfigure__default__getConfig', quals=[], storage=['inline', 'static'] (at pp.c:13740)
      FuncDecl: quals=None (at pp.c:13740)
        ParamList:  (at pp.c:13740)
          Decl: name='id', quals=[], storage=[] (at pp.c:13740)
            TypeDecl: declname='id', quals=[] (at pp.c:13740)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:13740)
          TypeDecl: declname='Msp430UartP__0__Msp430UartConfigure__default__getConfig', quals=[] (at pp.c:13740)
            IdentifierType: names=['msp430_uart_union_config_t'] (at None)
    Compound:  (at pp.c:13742)
      Return:  (at pp.c:13743)
        UnaryOp: op='&' (at pp.c:13743)
          ID: name='msp430_uart_default_config' (at pp.c:13743)
  FuncDef:  (at pp.c:13747)
    Decl: name='Msp430UartP__0__Msp430UartConfigure__getConfig', quals=[], storage=['static', 'inline'] (at pp.c:13747)
      FuncDecl: quals=None (at pp.c:13747)
        ParamList:  (at pp.c:13747)
          Decl: name='arg_0x1027d8cd0', quals=[], storage=[] (at pp.c:13747)
            TypeDecl: declname='arg_0x1027d8cd0', quals=[] (at pp.c:13747)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:13747)
          TypeDecl: declname='Msp430UartP__0__Msp430UartConfigure__getConfig', quals=[] (at pp.c:13747)
            IdentifierType: names=['msp430_uart_union_config_t'] (at None)
    Compound:  (at pp.c:13747)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:13749)
        PtrDecl: quals=[] (at pp.c:13749)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:13749)
            Union: name='__nesc_unnamed4289', packed=False (at pp.c:13749)
      Switch:  (at pp.c:13753)
        ID: name='arg_0x1027d8cd0' (at pp.c:13753)
        Compound:  (at pp.c:13753)
          Case:  (at pp.c:13755)
            ID: name='Msp430Uart1C__0__CLIENT_ID' (at pp.c:13755)
            Assignment: op='=' (at pp.c:13757)
              ID: name='__nesc_result' (at pp.c:13757)
              FuncCall:  (at None)
                ID: name='TelosSerialP__Msp430UartConfigure__getConfig' (at pp.c:13757)
          Break:  (at pp.c:13759)
          Default:  (at pp.c:13761)
            Assignment: op='=' (at pp.c:13763)
              ID: name='__nesc_result' (at pp.c:13763)
              FuncCall:  (at None)
                ID: name='Msp430UartP__0__Msp430UartConfigure__default__getConfig' (at pp.c:13763)
                ExprList:  (at pp.c:13763)
                  ID: name='arg_0x1027d8cd0' (at pp.c:13763)
          Break:  (at pp.c:13765)
      Return:  (at pp.c:13771)
        ID: name='__nesc_result' (at pp.c:13771)
  FuncDef:  (at pp.c:13776)
    Decl: name='HplMsp430Usart1P__Usart__disableIntr', quals=[], storage=['inline', 'static'] (at pp.c:13776)
      FuncDecl: quals=None (at pp.c:13776)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__Usart__disableIntr', quals=[] (at pp.c:13776)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13778)
      Assignment: op='&=' (at pp.c:13779)
        ID: name='HplMsp430Usart1P__IE2' (at pp.c:13779)
        UnaryOp: op='~' (at pp.c:13779)
          BinaryOp: op='|' (at pp.c:13779)
            BinaryOp: op='<<' (at pp.c:13779)
              Constant: type='int', value='1' (at pp.c:13779)
              Constant: type='int', value='5' (at pp.c:13779)
            BinaryOp: op='<<' (at pp.c:13779)
              Constant: type='int', value='1' (at pp.c:13779)
              Constant: type='int', value='4' (at pp.c:13779)
  FuncDef:  (at pp.c:13783)
    Decl: name='HplMsp430Usart1P__Usart__clrIntr', quals=[], storage=['inline', 'static'] (at pp.c:13783)
      FuncDecl: quals=None (at pp.c:13783)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__Usart__clrIntr', quals=[] (at pp.c:13783)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13785)
      Assignment: op='&=' (at pp.c:13786)
        ID: name='HplMsp430Usart1P__IFG2' (at pp.c:13786)
        UnaryOp: op='~' (at pp.c:13786)
          BinaryOp: op='|' (at pp.c:13786)
            BinaryOp: op='<<' (at pp.c:13786)
              Constant: type='int', value='1' (at pp.c:13786)
              Constant: type='int', value='5' (at pp.c:13786)
            BinaryOp: op='<<' (at pp.c:13786)
              Constant: type='int', value='1' (at pp.c:13786)
              Constant: type='int', value='4' (at pp.c:13786)
  FuncDef:  (at pp.c:13790)
    Decl: name='HplMsp430Usart1P__Usart__resetUsart', quals=[], storage=['inline', 'static'] (at pp.c:13790)
      FuncDecl: quals=None (at pp.c:13790)
        ParamList:  (at pp.c:13790)
          Decl: name='reset', quals=[], storage=[] (at pp.c:13790)
            TypeDecl: declname='reset', quals=[] (at pp.c:13790)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__Usart__resetUsart', quals=[] (at pp.c:13790)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13792)
      If:  (at pp.c:13793)
        ID: name='reset' (at pp.c:13793)
        Compound:  (at pp.c:13793)
          Assignment: op='=' (at pp.c:13794)
            ID: name='U1CTL' (at pp.c:13794)
            Constant: type='int', value='0x01' (at pp.c:13794)
        Compound:  (at pp.c:13796)
          Assignment: op='&=' (at pp.c:13798)
            ID: name='U1CTL' (at pp.c:13798)
            UnaryOp: op='~' (at pp.c:13798)
              Constant: type='int', value='0x01' (at pp.c:13798)
  FuncDef:  (at pp.c:13803)
    Decl: name='HplMsp430GeneralIOP__22__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:13803)
      FuncDecl: quals=None (at pp.c:13803)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__22__IO__selectModuleFunc', quals=[] (at pp.c:13803)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13805)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13808)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='27U' (at pp.c:13808)
        BinaryOp: op='<<' (at pp.c:13808)
          Constant: type='int', value='0x01' (at pp.c:13808)
          Constant: type='int', value='6' (at pp.c:13808)
  FuncDef:  (at pp.c:13812)
    Decl: name='HplMsp430Usart1P__UTXD__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:13812)
      FuncDecl: quals=None (at pp.c:13812)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__UTXD__selectModuleFunc', quals=[] (at pp.c:13812)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13812)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__22__IO__selectModuleFunc' (at pp.c:13814)
  FuncDef:  (at pp.c:13819)
    Decl: name='HplMsp430Usart1P__Usart__enableUartTx', quals=[], storage=['inline', 'static'] (at pp.c:13819)
      FuncDecl: quals=None (at pp.c:13819)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__Usart__enableUartTx', quals=[] (at pp.c:13819)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13821)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart1P__UTXD__selectModuleFunc' (at pp.c:13822)
      Assignment: op='|=' (at pp.c:13823)
        ID: name='HplMsp430Usart1P__ME2' (at pp.c:13823)
        BinaryOp: op='<<' (at pp.c:13823)
          Constant: type='int', value='1' (at pp.c:13823)
          Constant: type='int', value='5' (at pp.c:13823)
  FuncDef:  (at pp.c:13827)
    Decl: name='HplMsp430GeneralIOP__23__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:13827)
      FuncDecl: quals=None (at pp.c:13827)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__23__IO__selectIOFunc', quals=[] (at pp.c:13827)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13829)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13832)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='27U' (at pp.c:13832)
        UnaryOp: op='~' (at pp.c:13832)
          BinaryOp: op='<<' (at pp.c:13832)
            Constant: type='int', value='0x01' (at pp.c:13832)
            Constant: type='int', value='7' (at pp.c:13832)
  FuncDef:  (at pp.c:13836)
    Decl: name='HplMsp430Usart1P__URXD__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:13836)
      FuncDecl: quals=None (at pp.c:13836)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__URXD__selectIOFunc', quals=[] (at pp.c:13836)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13836)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__23__IO__selectIOFunc' (at pp.c:13838)
  FuncDef:  (at pp.c:13843)
    Decl: name='HplMsp430Usart1P__Usart__disableUartRx', quals=[], storage=['inline', 'static'] (at pp.c:13843)
      FuncDecl: quals=None (at pp.c:13843)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__Usart__disableUartRx', quals=[] (at pp.c:13843)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13845)
      Assignment: op='&=' (at pp.c:13846)
        ID: name='HplMsp430Usart1P__ME2' (at pp.c:13846)
        UnaryOp: op='~' (at pp.c:13846)
          BinaryOp: op='<<' (at pp.c:13846)
            Constant: type='int', value='1' (at pp.c:13846)
            Constant: type='int', value='4' (at pp.c:13846)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart1P__URXD__selectIOFunc' (at pp.c:13847)
  FuncDef:  (at pp.c:13851)
    Decl: name='HplMsp430GeneralIOP__23__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:13851)
      FuncDecl: quals=None (at pp.c:13851)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__23__IO__selectModuleFunc', quals=[] (at pp.c:13851)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13853)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13856)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='27U' (at pp.c:13856)
        BinaryOp: op='<<' (at pp.c:13856)
          Constant: type='int', value='0x01' (at pp.c:13856)
          Constant: type='int', value='7' (at pp.c:13856)
  FuncDef:  (at pp.c:13860)
    Decl: name='HplMsp430Usart1P__URXD__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:13860)
      FuncDecl: quals=None (at pp.c:13860)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__URXD__selectModuleFunc', quals=[] (at pp.c:13860)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13860)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__23__IO__selectModuleFunc' (at pp.c:13862)
  FuncDef:  (at pp.c:13867)
    Decl: name='HplMsp430Usart1P__Usart__enableUartRx', quals=[], storage=['inline', 'static'] (at pp.c:13867)
      FuncDecl: quals=None (at pp.c:13867)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__Usart__enableUartRx', quals=[] (at pp.c:13867)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13869)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart1P__URXD__selectModuleFunc' (at pp.c:13870)
      Assignment: op='|=' (at pp.c:13871)
        ID: name='HplMsp430Usart1P__ME2' (at pp.c:13871)
        BinaryOp: op='<<' (at pp.c:13871)
          Constant: type='int', value='1' (at pp.c:13871)
          Constant: type='int', value='4' (at pp.c:13871)
  FuncDef:  (at pp.c:13875)
    Decl: name='HplMsp430GeneralIOP__22__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:13875)
      FuncDecl: quals=None (at pp.c:13875)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__22__IO__selectIOFunc', quals=[] (at pp.c:13875)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13877)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13880)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='27U' (at pp.c:13880)
        UnaryOp: op='~' (at pp.c:13880)
          BinaryOp: op='<<' (at pp.c:13880)
            Constant: type='int', value='0x01' (at pp.c:13880)
            Constant: type='int', value='6' (at pp.c:13880)
  FuncDef:  (at pp.c:13884)
    Decl: name='HplMsp430Usart1P__UTXD__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:13884)
      FuncDecl: quals=None (at pp.c:13884)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__UTXD__selectIOFunc', quals=[] (at pp.c:13884)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13884)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__22__IO__selectIOFunc' (at pp.c:13886)
  FuncDef:  (at pp.c:13891)
    Decl: name='HplMsp430Usart1P__Usart__disableUartTx', quals=[], storage=['inline', 'static'] (at pp.c:13891)
      FuncDecl: quals=None (at pp.c:13891)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__Usart__disableUartTx', quals=[] (at pp.c:13891)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13893)
      Assignment: op='&=' (at pp.c:13894)
        ID: name='HplMsp430Usart1P__ME2' (at pp.c:13894)
        UnaryOp: op='~' (at pp.c:13894)
          BinaryOp: op='<<' (at pp.c:13894)
            Constant: type='int', value='1' (at pp.c:13894)
            Constant: type='int', value='5' (at pp.c:13894)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart1P__UTXD__selectIOFunc' (at pp.c:13895)
  FuncDef:  (at pp.c:13899)
    Decl: name='HplMsp430Usart1P__Usart__enableUart', quals=[], storage=['inline', 'static'] (at pp.c:13899)
      FuncDecl: quals=None (at pp.c:13899)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__Usart__enableUart', quals=[] (at pp.c:13899)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13901)
      Compound:  (at pp.c:13904)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart1P__UTXD__selectModuleFunc' (at pp.c:13905)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart1P__URXD__selectModuleFunc' (at pp.c:13906)
      Assignment: op='|=' (at pp.c:13908)
        ID: name='HplMsp430Usart1P__ME2' (at pp.c:13908)
        BinaryOp: op='|' (at pp.c:13908)
          BinaryOp: op='<<' (at pp.c:13908)
            Constant: type='int', value='1' (at pp.c:13908)
            Constant: type='int', value='5' (at pp.c:13908)
          BinaryOp: op='<<' (at pp.c:13908)
            Constant: type='int', value='1' (at pp.c:13908)
            Constant: type='int', value='4' (at pp.c:13908)
  FuncDef:  (at pp.c:13912)
    Decl: name='HplMsp430Usart1P__Usart__setUmctl', quals=[], storage=['inline', 'static'] (at pp.c:13912)
      FuncDecl: quals=None (at pp.c:13912)
        ParamList:  (at pp.c:13912)
          Decl: name='control', quals=[], storage=[] (at pp.c:13912)
            TypeDecl: declname='control', quals=[] (at pp.c:13912)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__Usart__setUmctl', quals=[] (at pp.c:13912)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13914)
      Assignment: op='=' (at pp.c:13915)
        ID: name='U1MCTL' (at pp.c:13915)
        ID: name='control' (at pp.c:13915)
  FuncDef:  (at pp.c:13919)
    Decl: name='HplMsp430Usart1P__Usart__setUbr', quals=[], storage=['inline', 'static'] (at pp.c:13919)
      FuncDecl: quals=None (at pp.c:13919)
        ParamList:  (at pp.c:13919)
          Decl: name='control', quals=[], storage=[] (at pp.c:13919)
            TypeDecl: declname='control', quals=[] (at pp.c:13919)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__Usart__setUbr', quals=[] (at pp.c:13919)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13921)
      Compound:  (at pp.c:13924)
        Assignment: op='=' (at pp.c:13925)
          ID: name='U1BR0' (at pp.c:13925)
          BinaryOp: op='&' (at pp.c:13925)
            ID: name='control' (at pp.c:13925)
            Constant: type='int', value='0x00FF' (at pp.c:13925)
        Assignment: op='=' (at pp.c:13926)
          ID: name='U1BR1' (at pp.c:13926)
          BinaryOp: op='&' (at pp.c:13926)
            BinaryOp: op='>>' (at pp.c:13926)
              ID: name='control' (at pp.c:13926)
              Constant: type='int', value='8' (at pp.c:13926)
            Constant: type='int', value='0x00FF' (at pp.c:13926)
  FuncDef:  (at pp.c:13931)
    Decl: name='HplMsp430Usart1P__configUart', quals=[], storage=['inline', 'static'] (at pp.c:13931)
      FuncDecl: quals=None (at pp.c:13931)
        ParamList:  (at pp.c:13931)
          Decl: name='config', quals=[], storage=[] (at pp.c:13931)
            PtrDecl: quals=[] (at pp.c:13931)
              TypeDecl: declname='config', quals=[] (at pp.c:13931)
                IdentifierType: names=['msp430_uart_union_config_t'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__configUart', quals=[] (at pp.c:13931)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13933)
      Assignment: op='=' (at pp.c:13935)
        ID: name='U1CTL' (at pp.c:13935)
        BinaryOp: op='|' (at pp.c:13935)
          BinaryOp: op='&' (at pp.c:13935)
            StructRef: type='.' (at pp.c:13935)
              StructRef: type='->' (at pp.c:13935)
                ID: name='config' (at pp.c:13935)
                ID: name='uartRegisters' (at pp.c:13935)
              ID: name='uctl' (at pp.c:13935)
            UnaryOp: op='~' (at pp.c:13935)
              Constant: type='int', value='0x04' (at pp.c:13935)
          Constant: type='int', value='0x01' (at pp.c:13935)
      Assignment: op='=' (at pp.c:13936)
        ID: name='HplMsp430Usart1P__U1TCTL' (at pp.c:13936)
        StructRef: type='.' (at pp.c:13936)
          StructRef: type='->' (at pp.c:13936)
            ID: name='config' (at pp.c:13936)
            ID: name='uartRegisters' (at pp.c:13936)
          ID: name='utctl' (at pp.c:13936)
      Assignment: op='=' (at pp.c:13937)
        ID: name='HplMsp430Usart1P__U1RCTL' (at pp.c:13937)
        StructRef: type='.' (at pp.c:13937)
          StructRef: type='->' (at pp.c:13937)
            ID: name='config' (at pp.c:13937)
            ID: name='uartRegisters' (at pp.c:13937)
          ID: name='urctl' (at pp.c:13937)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart1P__Usart__setUbr' (at pp.c:13939)
        ExprList:  (at pp.c:13939)
          StructRef: type='.' (at pp.c:13939)
            StructRef: type='->' (at pp.c:13939)
              ID: name='config' (at pp.c:13939)
              ID: name='uartRegisters' (at pp.c:13939)
            ID: name='ubr' (at pp.c:13939)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart1P__Usart__setUmctl' (at pp.c:13940)
        ExprList:  (at pp.c:13940)
          StructRef: type='.' (at pp.c:13940)
            StructRef: type='->' (at pp.c:13940)
              ID: name='config' (at pp.c:13940)
              ID: name='uartRegisters' (at pp.c:13940)
            ID: name='umctl' (at pp.c:13940)
  FuncDef:  (at pp.c:13943)
    Decl: name='HplMsp430Usart1P__Usart__setModeUart', quals=[], storage=['inline', 'static'] (at pp.c:13943)
      FuncDecl: quals=None (at pp.c:13943)
        ParamList:  (at pp.c:13943)
          Decl: name='config', quals=[], storage=[] (at pp.c:13943)
            PtrDecl: quals=[] (at pp.c:13943)
              TypeDecl: declname='config', quals=[] (at pp.c:13943)
                IdentifierType: names=['msp430_uart_union_config_t'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__Usart__setModeUart', quals=[] (at pp.c:13943)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13945)
      Compound:  (at pp.c:13947)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:13947)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:13947)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:13947)
        Compound:  (at pp.c:13949)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart1P__Usart__resetUsart' (at pp.c:13950)
            ExprList:  (at pp.c:13950)
              ID: name='TRUE' (at pp.c:13950)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart1P__Usart__disableSpi' (at pp.c:13951)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart1P__configUart' (at pp.c:13952)
            ExprList:  (at pp.c:13952)
              ID: name='config' (at pp.c:13952)
          If:  (at pp.c:13953)
            BinaryOp: op='&&' (at pp.c:13953)
              BinaryOp: op='==' (at pp.c:13953)
                StructRef: type='.' (at pp.c:13953)
                  StructRef: type='->' (at pp.c:13953)
                    ID: name='config' (at pp.c:13953)
                    ID: name='uartConfig' (at pp.c:13953)
                  ID: name='utxe' (at pp.c:13953)
                Constant: type='int', value='1' (at pp.c:13953)
              BinaryOp: op='==' (at pp.c:13953)
                StructRef: type='.' (at pp.c:13953)
                  StructRef: type='->' (at pp.c:13953)
                    ID: name='config' (at pp.c:13953)
                    ID: name='uartConfig' (at pp.c:13953)
                  ID: name='urxe' (at pp.c:13953)
                Constant: type='int', value='1' (at pp.c:13953)
            Compound:  (at pp.c:13953)
              FuncCall:  (at None)
                ID: name='HplMsp430Usart1P__Usart__enableUart' (at pp.c:13954)
            Compound:  (at pp.c:13956)
              If:  (at pp.c:13958)
                BinaryOp: op='&&' (at pp.c:13958)
                  BinaryOp: op='==' (at pp.c:13958)
                    StructRef: type='.' (at pp.c:13958)
                      StructRef: type='->' (at pp.c:13958)
                        ID: name='config' (at pp.c:13958)
                        ID: name='uartConfig' (at pp.c:13958)
                      ID: name='utxe' (at pp.c:13958)
                    Constant: type='int', value='0' (at pp.c:13958)
                  BinaryOp: op='==' (at pp.c:13958)
                    StructRef: type='.' (at pp.c:13958)
                      StructRef: type='->' (at pp.c:13958)
                        ID: name='config' (at pp.c:13958)
                        ID: name='uartConfig' (at pp.c:13958)
                      ID: name='urxe' (at pp.c:13958)
                    Constant: type='int', value='1' (at pp.c:13958)
                Compound:  (at pp.c:13958)
                  FuncCall:  (at None)
                    ID: name='HplMsp430Usart1P__Usart__disableUartTx' (at pp.c:13959)
                  FuncCall:  (at None)
                    ID: name='HplMsp430Usart1P__Usart__enableUartRx' (at pp.c:13960)
                Compound:  (at pp.c:13962)
                  If:  (at pp.c:13964)
                    BinaryOp: op='&&' (at pp.c:13964)
                      BinaryOp: op='==' (at pp.c:13964)
                        StructRef: type='.' (at pp.c:13964)
                          StructRef: type='->' (at pp.c:13964)
                            ID: name='config' (at pp.c:13964)
                            ID: name='uartConfig' (at pp.c:13964)
                          ID: name='utxe' (at pp.c:13964)
                        Constant: type='int', value='1' (at pp.c:13964)
                      BinaryOp: op='==' (at pp.c:13964)
                        StructRef: type='.' (at pp.c:13964)
                          StructRef: type='->' (at pp.c:13964)
                            ID: name='config' (at pp.c:13964)
                            ID: name='uartConfig' (at pp.c:13964)
                          ID: name='urxe' (at pp.c:13964)
                        Constant: type='int', value='0' (at pp.c:13964)
                    Compound:  (at pp.c:13964)
                      FuncCall:  (at None)
                        ID: name='HplMsp430Usart1P__Usart__disableUartRx' (at pp.c:13965)
                      FuncCall:  (at None)
                        ID: name='HplMsp430Usart1P__Usart__enableUartTx' (at pp.c:13966)
                    Compound:  (at pp.c:13970)
                      FuncCall:  (at None)
                        ID: name='HplMsp430Usart1P__Usart__disableUart' (at pp.c:13971)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart1P__Usart__resetUsart' (at pp.c:13976)
            ExprList:  (at pp.c:13976)
              ID: name='FALSE' (at pp.c:13976)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart1P__Usart__clrIntr' (at pp.c:13977)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart1P__Usart__disableIntr' (at pp.c:13978)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:13981)
          ExprList:  (at pp.c:13981)
            ID: name='__nesc_atomic' (at pp.c:13981)
      Return:  (at pp.c:13983)
  FuncDef:  (at pp.c:13987)
    Decl: name='Msp430UartP__0__Usart__setModeUart', quals=[], storage=['static', 'inline'] (at pp.c:13987)
      FuncDecl: quals=None (at pp.c:13987)
        ParamList:  (at pp.c:13987)
          Decl: name='config', quals=[], storage=[] (at pp.c:13987)
            PtrDecl: quals=[] (at pp.c:13987)
              TypeDecl: declname='config', quals=[] (at pp.c:13987)
                IdentifierType: names=['msp430_uart_union_config_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__Usart__setModeUart', quals=[] (at pp.c:13987)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13987)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart1P__Usart__setModeUart' (at pp.c:13989)
        ExprList:  (at pp.c:13989)
          ID: name='config' (at pp.c:13989)
  FuncDef:  (at pp.c:13994)
    Decl: name='HplMsp430GeneralIOP__33__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:13994)
      FuncDecl: quals=None (at pp.c:13994)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__33__IO__selectIOFunc', quals=[] (at pp.c:13994)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13996)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13999)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='51U' (at pp.c:13999)
        UnaryOp: op='~' (at pp.c:13999)
          BinaryOp: op='<<' (at pp.c:13999)
            Constant: type='int', value='0x01' (at pp.c:13999)
            Constant: type='int', value='1' (at pp.c:13999)
  FuncDef:  (at pp.c:14003)
    Decl: name='HplMsp430Usart1P__SIMO__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:14003)
      FuncDecl: quals=None (at pp.c:14003)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__SIMO__selectIOFunc', quals=[] (at pp.c:14003)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14003)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__33__IO__selectIOFunc' (at pp.c:14005)
  FuncDef:  (at pp.c:14010)
    Decl: name='HplMsp430GeneralIOP__34__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:14010)
      FuncDecl: quals=None (at pp.c:14010)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__34__IO__selectIOFunc', quals=[] (at pp.c:14010)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14012)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:14015)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='51U' (at pp.c:14015)
        UnaryOp: op='~' (at pp.c:14015)
          BinaryOp: op='<<' (at pp.c:14015)
            Constant: type='int', value='0x01' (at pp.c:14015)
            Constant: type='int', value='2' (at pp.c:14015)
  FuncDef:  (at pp.c:14019)
    Decl: name='HplMsp430Usart1P__SOMI__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:14019)
      FuncDecl: quals=None (at pp.c:14019)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__SOMI__selectIOFunc', quals=[] (at pp.c:14019)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14019)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__34__IO__selectIOFunc' (at pp.c:14021)
  FuncDef:  (at pp.c:14026)
    Decl: name='HplMsp430GeneralIOP__35__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:14026)
      FuncDecl: quals=None (at pp.c:14026)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__35__IO__selectIOFunc', quals=[] (at pp.c:14026)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14028)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:14031)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='51U' (at pp.c:14031)
        UnaryOp: op='~' (at pp.c:14031)
          BinaryOp: op='<<' (at pp.c:14031)
            Constant: type='int', value='0x01' (at pp.c:14031)
            Constant: type='int', value='3' (at pp.c:14031)
  FuncDef:  (at pp.c:14035)
    Decl: name='HplMsp430Usart1P__UCLK__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:14035)
      FuncDecl: quals=None (at pp.c:14035)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__UCLK__selectIOFunc', quals=[] (at pp.c:14035)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14035)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__35__IO__selectIOFunc' (at pp.c:14037)
  FuncDef:  (at pp.c:14042)
    Decl: name='HplMsp430Usart1P__Usart__enableIntr', quals=[], storage=['inline', 'static'] (at pp.c:14042)
      FuncDecl: quals=None (at pp.c:14042)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__Usart__enableIntr', quals=[] (at pp.c:14042)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14044)
      Compound:  (at pp.c:14045)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:14045)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:14045)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:14045)
        Compound:  (at pp.c:14047)
          Assignment: op='&=' (at pp.c:14048)
            ID: name='HplMsp430Usart1P__IFG2' (at pp.c:14048)
            UnaryOp: op='~' (at pp.c:14048)
              BinaryOp: op='|' (at pp.c:14048)
                BinaryOp: op='<<' (at pp.c:14048)
                  Constant: type='int', value='1' (at pp.c:14048)
                  Constant: type='int', value='5' (at pp.c:14048)
                BinaryOp: op='<<' (at pp.c:14048)
                  Constant: type='int', value='1' (at pp.c:14048)
                  Constant: type='int', value='4' (at pp.c:14048)
          Assignment: op='|=' (at pp.c:14049)
            ID: name='HplMsp430Usart1P__IE2' (at pp.c:14049)
            BinaryOp: op='|' (at pp.c:14049)
              BinaryOp: op='<<' (at pp.c:14049)
                Constant: type='int', value='1' (at pp.c:14049)
                Constant: type='int', value='5' (at pp.c:14049)
              BinaryOp: op='<<' (at pp.c:14049)
                Constant: type='int', value='1' (at pp.c:14049)
                Constant: type='int', value='4' (at pp.c:14049)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:14052)
          ExprList:  (at pp.c:14052)
            ID: name='__nesc_atomic' (at pp.c:14052)
  FuncDef:  (at pp.c:14056)
    Decl: name='Msp430UartP__0__Usart__enableIntr', quals=[], storage=['static', 'inline'] (at pp.c:14056)
      FuncDecl: quals=None (at pp.c:14056)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430UartP__0__Usart__enableIntr', quals=[] (at pp.c:14056)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14056)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart1P__Usart__enableIntr' (at pp.c:14058)
  FuncDef:  (at pp.c:14063)
    Decl: name='SerialActiveMessageP__0__getHeader', quals=[], storage=['inline', 'static'] (at pp.c:14063)
      FuncDecl: quals=None (at pp.c:14063)
        ParamList:  (at pp.c:14063)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14063)
            PtrDecl: quals=[] (at pp.c:14063)
              TypeDecl: declname='msg', quals=[] (at pp.c:14063)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:14063)
          TypeDecl: declname='SerialActiveMessageP__0__getHeader', quals=[] (at pp.c:14063)
            IdentifierType: names=['serial_header_t'] (at None)
    Compound:  (at pp.c:14065)
      Return:  (at pp.c:14066)
        Cast:  (at None)
          Typename: quals=[] (at None)
            PtrDecl: quals=[] (at pp.c:14066)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['serial_header_t'] (at None)
          BinaryOp: op='-' (at None)
            BinaryOp: op='+' (at None)
              Cast:  (at None)
                Typename: quals=[] (at None)
                  PtrDecl: quals=[] (at pp.c:14066)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['uint8_t'] (at None)
                ID: name='msg' (at pp.c:14066)
              Cast:  (at None)
                Typename: quals=[] (at None)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['size_t'] (at None)
                UnaryOp: op='&' (at None)
                  StructRef: type='->' (at None)
                    Cast:  (at None)
                      Typename: quals=[] (at None)
                        PtrDecl: quals=[] (at pp.c:14066)
                          TypeDecl: declname=None, quals=[] (at None)
                            IdentifierType: names=['message_t'] (at None)
                      Constant: type='int', value='0' (at pp.c:14066)
                    ID: name='data' (at pp.c:14066)
            UnaryOp: op='sizeof' (at pp.c:14066)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['serial_header_t'] (at None)
  FuncDef:  (at pp.c:14070)
    Decl: name='SerialActiveMessageP__0__AMPacket__type', quals=[], storage=['inline', 'static'] (at pp.c:14070)
      FuncDecl: quals=None (at pp.c:14070)
        ParamList:  (at pp.c:14070)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:14070)
            PtrDecl: quals=[] (at pp.c:14070)
              TypeDecl: declname='amsg', quals=[] (at pp.c:14070)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='SerialActiveMessageP__0__AMPacket__type', quals=[] (at pp.c:14070)
          IdentifierType: names=['am_id_t'] (at None)
    Compound:  (at pp.c:14072)
      Decl: name='header', quals=[], storage=[] (at pp.c:14073)
        PtrDecl: quals=[] (at pp.c:14073)
          TypeDecl: declname='header', quals=[] (at pp.c:14073)
            IdentifierType: names=['serial_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='SerialActiveMessageP__0__getHeader' (at pp.c:14073)
          ExprList:  (at pp.c:14073)
            ID: name='amsg' (at pp.c:14073)
      Return:  (at pp.c:14076)
        FuncCall:  (at None)
          ID: name='__nesc_ntoh_uint8' (at pp.c:14076)
          ExprList:  (at pp.c:14076)
            StructRef: type='.' (at pp.c:14076)
              StructRef: type='->' (at pp.c:14076)
                ID: name='header' (at pp.c:14076)
                ID: name='type' (at pp.c:14076)
              ID: name='nxdata' (at pp.c:14076)
  FuncDef:  (at pp.c:14080)
    Decl: name='BaseStationP__uartSendTask__postTask', quals=[], storage=['static', 'inline'] (at pp.c:14080)
      FuncDecl: quals=None (at pp.c:14080)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BaseStationP__uartSendTask__postTask', quals=[] (at pp.c:14080)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14080)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14082)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14082)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14086)
        ID: name='__nesc_result' (at pp.c:14086)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:14086)
          ExprList:  (at pp.c:14086)
            ID: name='BaseStationP__uartSendTask' (at pp.c:14086)
      Return:  (at pp.c:14090)
        ID: name='__nesc_result' (at pp.c:14090)
  FuncDef:  (at pp.c:14095)
    Decl: name='Msp430GpioC__2__HplGeneralIO__toggle', quals=[], storage=['static', 'inline'] (at pp.c:14095)
      FuncDecl: quals=None (at pp.c:14095)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__2__HplGeneralIO__toggle', quals=[] (at pp.c:14095)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14095)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__31__IO__toggle' (at pp.c:14097)
  FuncDef:  (at pp.c:14102)
    Decl: name='Msp430GpioC__2__GeneralIO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:14102)
      FuncDecl: quals=None (at pp.c:14102)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__2__GeneralIO__toggle', quals=[] (at pp.c:14102)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14104)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__2__HplGeneralIO__toggle' (at pp.c:14106)
  FuncDef:  (at pp.c:14110)
    Decl: name='LedsP__Led2__toggle', quals=[], storage=['static', 'inline'] (at pp.c:14110)
      FuncDecl: quals=None (at pp.c:14110)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led2__toggle', quals=[] (at pp.c:14110)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14110)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__2__GeneralIO__toggle' (at pp.c:14112)
  FuncDef:  (at pp.c:14117)
    Decl: name='LedsP__Leds__led2Toggle', quals=[], storage=['inline', 'static'] (at pp.c:14117)
      FuncDecl: quals=None (at pp.c:14117)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Leds__led2Toggle', quals=[] (at pp.c:14117)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14119)
      FuncCall:  (at None)
        ID: name='LedsP__Led2__toggle' (at pp.c:14120)
  FuncDef:  (at pp.c:14127)
    Decl: name='BaseStationP__Leds__led2Toggle', quals=[], storage=['static', 'inline'] (at pp.c:14127)
      FuncDecl: quals=None (at pp.c:14127)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BaseStationP__Leds__led2Toggle', quals=[] (at pp.c:14127)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14127)
      FuncCall:  (at None)
        ID: name='LedsP__Leds__led2Toggle' (at pp.c:14129)
  FuncDef:  (at pp.c:14134)
    Decl: name='BaseStationP__failBlink', quals=[], storage=['inline', 'static'] (at pp.c:14134)
      FuncDecl: quals=None (at pp.c:14134)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BaseStationP__failBlink', quals=[] (at pp.c:14134)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14136)
      FuncCall:  (at None)
        ID: name='BaseStationP__Leds__led2Toggle' (at pp.c:14137)
  FuncDef:  (at pp.c:14141)
    Decl: name='BaseStationP__UartSend__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:14141)
      FuncDecl: quals=None (at pp.c:14141)
        ParamList:  (at pp.c:14141)
          Decl: name='id', quals=[], storage=[] (at pp.c:14141)
            TypeDecl: declname='id', quals=[] (at pp.c:14141)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14141)
            PtrDecl: quals=[] (at pp.c:14141)
              TypeDecl: declname='msg', quals=[] (at pp.c:14141)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:14141)
            TypeDecl: declname='error', quals=[] (at pp.c:14141)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='BaseStationP__UartSend__sendDone', quals=[] (at pp.c:14141)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14143)
      If:  (at pp.c:14144)
        BinaryOp: op='!=' (at pp.c:14144)
          ID: name='error' (at pp.c:14144)
          ID: name='SUCCESS' (at pp.c:14144)
        Compound:  (at pp.c:14144)
          FuncCall:  (at None)
            ID: name='BaseStationP__failBlink' (at pp.c:14145)
        Compound:  (at pp.c:14147)
          Compound:  (at pp.c:14149)
            Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:14149)
              TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:14149)
                IdentifierType: names=['__nesc_atomic_t'] (at None)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_start' (at pp.c:14149)
            If:  (at pp.c:14150)
              BinaryOp: op='==' (at pp.c:14150)
                ID: name='msg' (at pp.c:14150)
                ArrayRef:  (at pp.c:14150)
                  ID: name='BaseStationP__uartQueue' (at pp.c:14150)
                  ID: name='BaseStationP__uartOut' (at pp.c:14150)
              Compound:  (at pp.c:14151)
                If:  (at pp.c:14152)
                  BinaryOp: op='>=' (at pp.c:14152)
                    UnaryOp: op='++' (at pp.c:14152)
                      ID: name='BaseStationP__uartOut' (at pp.c:14152)
                    ID: name='BaseStationP__UART_QUEUE_LEN' (at pp.c:14152)
                  Compound:  (at pp.c:14152)
                    Assignment: op='=' (at pp.c:14153)
                      ID: name='BaseStationP__uartOut' (at pp.c:14153)
                      Constant: type='int', value='0' (at pp.c:14153)
                If:  (at pp.c:14156)
                  ID: name='BaseStationP__uartFull' (at pp.c:14156)
                  Compound:  (at pp.c:14156)
                    Assignment: op='=' (at pp.c:14157)
                      ID: name='BaseStationP__uartFull' (at pp.c:14157)
                      ID: name='FALSE' (at pp.c:14157)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:14161)
              ExprList:  (at pp.c:14161)
                ID: name='__nesc_atomic' (at pp.c:14161)
      FuncCall:  (at None)
        ID: name='BaseStationP__uartSendTask__postTask' (at pp.c:14164)
  FuncDef:  (at pp.c:14168)
    Decl: name='SerialActiveMessageP__0__AMSend__sendDone', quals=[], storage=['static', 'inline'] (at pp.c:14168)
      FuncDecl: quals=None (at pp.c:14168)
        ParamList:  (at pp.c:14168)
          Decl: name='arg_0x1025ba220', quals=[], storage=[] (at pp.c:14168)
            TypeDecl: declname='arg_0x1025ba220', quals=[] (at pp.c:14168)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14168)
            PtrDecl: quals=[] (at pp.c:14168)
              TypeDecl: declname='msg', quals=[] (at pp.c:14168)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:14168)
            TypeDecl: declname='error', quals=[] (at pp.c:14168)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='SerialActiveMessageP__0__AMSend__sendDone', quals=[] (at pp.c:14168)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14168)
      FuncCall:  (at None)
        ID: name='BaseStationP__UartSend__sendDone' (at pp.c:14170)
        ExprList:  (at pp.c:14170)
          ID: name='arg_0x1025ba220' (at pp.c:14170)
          ID: name='msg' (at pp.c:14170)
          ID: name='error' (at pp.c:14170)
  FuncDef:  (at pp.c:14175)
    Decl: name='SerialActiveMessageP__0__SubSend__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:14175)
      FuncDecl: quals=None (at pp.c:14175)
        ParamList:  (at pp.c:14175)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14175)
            PtrDecl: quals=[] (at pp.c:14175)
              TypeDecl: declname='msg', quals=[] (at pp.c:14175)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:14175)
            TypeDecl: declname='result', quals=[] (at pp.c:14175)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='SerialActiveMessageP__0__SubSend__sendDone', quals=[] (at pp.c:14175)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14177)
      FuncCall:  (at None)
        ID: name='SerialActiveMessageP__0__AMSend__sendDone' (at pp.c:14178)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='SerialActiveMessageP__0__AMPacket__type' (at pp.c:14178)
            ExprList:  (at pp.c:14178)
              ID: name='msg' (at pp.c:14178)
          ID: name='msg' (at pp.c:14178)
          ID: name='result' (at pp.c:14178)
  FuncDef:  (at pp.c:14182)
    Decl: name='SerialDispatcherP__0__Send__default__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:14182)
      FuncDecl: quals=None (at pp.c:14182)
        ParamList:  (at pp.c:14182)
          Decl: name='idxxx', quals=[], storage=[] (at pp.c:14182)
            TypeDecl: declname='idxxx', quals=[] (at pp.c:14182)
              IdentifierType: names=['uart_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14182)
            PtrDecl: quals=[] (at pp.c:14182)
              TypeDecl: declname='msg', quals=[] (at pp.c:14182)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:14182)
            TypeDecl: declname='error', quals=[] (at pp.c:14182)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__Send__default__sendDone', quals=[] (at pp.c:14182)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14184)
      Return:  (at pp.c:14185)
  FuncDef:  (at pp.c:14189)
    Decl: name='SerialDispatcherP__0__Send__sendDone', quals=[], storage=['static', 'inline'] (at pp.c:14189)
      FuncDecl: quals=None (at pp.c:14189)
        ParamList:  (at pp.c:14189)
          Decl: name='arg_0x1026e9748', quals=[], storage=[] (at pp.c:14189)
            TypeDecl: declname='arg_0x1026e9748', quals=[] (at pp.c:14189)
              IdentifierType: names=['uart_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14189)
            PtrDecl: quals=[] (at pp.c:14189)
              TypeDecl: declname='msg', quals=[] (at pp.c:14189)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:14189)
            TypeDecl: declname='error', quals=[] (at pp.c:14189)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__Send__sendDone', quals=[] (at pp.c:14189)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14189)
      Switch:  (at pp.c:14191)
        ID: name='arg_0x1026e9748' (at pp.c:14191)
        Compound:  (at pp.c:14191)
          Case:  (at pp.c:14193)
            ID: name='TOS_SERIAL_ACTIVE_MESSAGE_ID' (at pp.c:14193)
            FuncCall:  (at None)
              ID: name='SerialActiveMessageP__0__SubSend__sendDone' (at pp.c:14195)
              ExprList:  (at pp.c:14195)
                ID: name='msg' (at pp.c:14195)
                ID: name='error' (at pp.c:14195)
          Break:  (at pp.c:14197)
          Default:  (at pp.c:14199)
            FuncCall:  (at None)
              ID: name='SerialDispatcherP__0__Send__default__sendDone' (at pp.c:14201)
              ExprList:  (at pp.c:14201)
                ID: name='arg_0x1026e9748' (at pp.c:14201)
                ID: name='msg' (at pp.c:14201)
                ID: name='error' (at pp.c:14201)
          Break:  (at pp.c:14203)
  FuncDef:  (at pp.c:14210)
    Decl: name='SerialDispatcherP__0__signalSendDone__runTask', quals=[], storage=['inline', 'static'] (at pp.c:14210)
      FuncDecl: quals=None (at pp.c:14210)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__signalSendDone__runTask', quals=[] (at pp.c:14210)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14212)
      Decl: name='error', quals=[], storage=[] (at pp.c:14213)
        TypeDecl: declname='error', quals=[] (at pp.c:14213)
          IdentifierType: names=['error_t'] (at None)
      Assignment: op='=' (at pp.c:14215)
        ID: name='SerialDispatcherP__0__sendState' (at pp.c:14215)
        ID: name='SerialDispatcherP__0__SEND_STATE_IDLE' (at pp.c:14215)
      Compound:  (at pp.c:14216)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:14216)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:14216)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:14216)
        Assignment: op='=' (at pp.c:14218)
          ID: name='error' (at pp.c:14218)
          ID: name='SerialDispatcherP__0__sendError' (at pp.c:14218)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:14220)
          ExprList:  (at pp.c:14220)
            ID: name='__nesc_atomic' (at pp.c:14220)
      If:  (at pp.c:14222)
        ID: name='SerialDispatcherP__0__sendCancelled' (at pp.c:14222)
        Compound:  (at pp.c:14222)
          Assignment: op='=' (at pp.c:14224)
            ID: name='error' (at pp.c:14224)
            ID: name='ECANCEL' (at pp.c:14224)
      FuncCall:  (at None)
        ID: name='SerialDispatcherP__0__Send__sendDone' (at pp.c:14227)
        ExprList:  (at pp.c:14227)
          ID: name='SerialDispatcherP__0__sendId' (at pp.c:14227)
          Cast:  (at None)
            Typename: quals=[] (at None)
              PtrDecl: quals=[] (at pp.c:14227)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['message_t'] (at None)
            ID: name='SerialDispatcherP__0__sendBuffer' (at pp.c:14227)
          ID: name='error' (at pp.c:14227)
  FuncDef:  (at pp.c:14231)
    Decl: name='SerialDispatcherP__0__unlockBuffer', quals=[], storage=['inline', 'static'] (at pp.c:14231)
      FuncDecl: quals=None (at pp.c:14231)
        ParamList:  (at pp.c:14231)
          Decl: name='which', quals=[], storage=[] (at pp.c:14231)
            TypeDecl: declname='which', quals=[] (at pp.c:14231)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__unlockBuffer', quals=[] (at pp.c:14231)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14233)
      If:  (at pp.c:14234)
        ID: name='which' (at pp.c:14234)
        Compound:  (at pp.c:14234)
          Assignment: op='=' (at pp.c:14235)
            StructRef: type='.' (at pp.c:14235)
              ID: name='SerialDispatcherP__0__receiveState' (at pp.c:14235)
              ID: name='bufOneLocked' (at pp.c:14235)
            Constant: type='int', value='0' (at pp.c:14235)
        Compound:  (at pp.c:14237)
          Assignment: op='=' (at pp.c:14238)
            StructRef: type='.' (at pp.c:14238)
              ID: name='SerialDispatcherP__0__receiveState' (at pp.c:14238)
              ID: name='bufZeroLocked' (at pp.c:14238)
            Constant: type='int', value='0' (at pp.c:14238)
  FuncDef:  (at pp.c:14243)
    Decl: name='BaseStationP__dropBlink', quals=[], storage=['inline', 'static'] (at pp.c:14243)
      FuncDecl: quals=None (at pp.c:14243)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BaseStationP__dropBlink', quals=[] (at pp.c:14243)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14245)
      FuncCall:  (at None)
        ID: name='BaseStationP__Leds__led2Toggle' (at pp.c:14246)
  FuncDef:  (at pp.c:14250)
    Decl: name='BaseStationP__radioSendTask__postTask', quals=[], storage=['static', 'inline'] (at pp.c:14250)
      FuncDecl: quals=None (at pp.c:14250)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BaseStationP__radioSendTask__postTask', quals=[] (at pp.c:14250)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14250)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14252)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14252)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14256)
        ID: name='__nesc_result' (at pp.c:14256)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:14256)
          ExprList:  (at pp.c:14256)
            ID: name='BaseStationP__radioSendTask' (at pp.c:14256)
      Return:  (at pp.c:14260)
        ID: name='__nesc_result' (at pp.c:14260)
  FuncDef:  (at pp.c:14265)
    Decl: name='BaseStationP__UartReceive__receive', quals=[], storage=['inline', 'static'] (at pp.c:14265)
      FuncDecl: quals=None (at pp.c:14265)
        ParamList:  (at pp.c:14265)
          Decl: name='id', quals=[], storage=[] (at pp.c:14265)
            TypeDecl: declname='id', quals=[] (at pp.c:14265)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14265)
            PtrDecl: quals=[] (at pp.c:14265)
              TypeDecl: declname='msg', quals=[] (at pp.c:14265)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:14266)
            PtrDecl: quals=[] (at pp.c:14266)
              TypeDecl: declname='payload', quals=[] (at pp.c:14266)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:14267)
            TypeDecl: declname='len', quals=[] (at pp.c:14267)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:14265)
          TypeDecl: declname='BaseStationP__UartReceive__receive', quals=[] (at pp.c:14265)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:14269)
      Decl: name='ret', quals=[], storage=[] (at pp.c:14270)
        PtrDecl: quals=[] (at pp.c:14270)
          TypeDecl: declname='ret', quals=[] (at pp.c:14270)
            IdentifierType: names=['message_t'] (at None)
        ID: name='msg' (at pp.c:14270)
      Decl: name='reflectToken', quals=[], storage=[] (at pp.c:14271)
        TypeDecl: declname='reflectToken', quals=[] (at pp.c:14271)
          IdentifierType: names=['bool'] (at None)
        ID: name='FALSE' (at pp.c:14271)
      Compound:  (at pp.c:14273)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:14273)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:14273)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:14273)
        If:  (at pp.c:14274)
          UnaryOp: op='!' (at pp.c:14274)
            ID: name='BaseStationP__radioFull' (at pp.c:14274)
          Compound:  (at pp.c:14275)
            Assignment: op='=' (at pp.c:14276)
              ID: name='reflectToken' (at pp.c:14276)
              ID: name='TRUE' (at pp.c:14276)
            Assignment: op='=' (at pp.c:14277)
              ID: name='ret' (at pp.c:14277)
              ArrayRef:  (at pp.c:14277)
                ID: name='BaseStationP__radioQueue' (at pp.c:14277)
                ID: name='BaseStationP__radioIn' (at pp.c:14277)
            Assignment: op='=' (at pp.c:14278)
              ArrayRef:  (at pp.c:14278)
                ID: name='BaseStationP__radioQueue' (at pp.c:14278)
                ID: name='BaseStationP__radioIn' (at pp.c:14278)
              ID: name='msg' (at pp.c:14278)
            If:  (at pp.c:14279)
              BinaryOp: op='>=' (at pp.c:14279)
                UnaryOp: op='++' (at pp.c:14279)
                  ID: name='BaseStationP__radioIn' (at pp.c:14279)
                ID: name='BaseStationP__RADIO_QUEUE_LEN' (at pp.c:14279)
              Compound:  (at pp.c:14279)
                Assignment: op='=' (at pp.c:14280)
                  ID: name='BaseStationP__radioIn' (at pp.c:14280)
                  Constant: type='int', value='0' (at pp.c:14280)
            If:  (at pp.c:14283)
              BinaryOp: op='==' (at pp.c:14283)
                ID: name='BaseStationP__radioIn' (at pp.c:14283)
                ID: name='BaseStationP__radioOut' (at pp.c:14283)
              Compound:  (at pp.c:14283)
                Assignment: op='=' (at pp.c:14284)
                  ID: name='BaseStationP__radioFull' (at pp.c:14284)
                  ID: name='TRUE' (at pp.c:14284)
            If:  (at pp.c:14286)
              UnaryOp: op='!' (at pp.c:14286)
                ID: name='BaseStationP__radioBusy' (at pp.c:14286)
              Compound:  (at pp.c:14287)
                FuncCall:  (at None)
                  ID: name='BaseStationP__radioSendTask__postTask' (at pp.c:14288)
                Assignment: op='=' (at pp.c:14289)
                  ID: name='BaseStationP__radioBusy' (at pp.c:14289)
                  ID: name='TRUE' (at pp.c:14289)
          Compound:  (at pp.c:14292)
            FuncCall:  (at None)
              ID: name='BaseStationP__dropBlink' (at pp.c:14293)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:14296)
          ExprList:  (at pp.c:14296)
            ID: name='__nesc_atomic' (at pp.c:14296)
      If:  (at pp.c:14297)
        ID: name='reflectToken' (at pp.c:14297)
        Compound:  (at pp.c:14297)
      Return:  (at pp.c:14301)
        ID: name='ret' (at pp.c:14301)
  FuncDef:  (at pp.c:14305)
    Decl: name='SerialActiveMessageP__0__Receive__receive', quals=[], storage=['static', 'inline'] (at pp.c:14305)
      FuncDecl: quals=None (at pp.c:14305)
        ParamList:  (at pp.c:14305)
          Decl: name='arg_0x1025b9340', quals=[], storage=[] (at pp.c:14305)
            TypeDecl: declname='arg_0x1025b9340', quals=[] (at pp.c:14305)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14305)
            PtrDecl: quals=[] (at pp.c:14305)
              TypeDecl: declname='msg', quals=[] (at pp.c:14305)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:14305)
            PtrDecl: quals=[] (at pp.c:14305)
              TypeDecl: declname='payload', quals=[] (at pp.c:14305)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:14305)
            TypeDecl: declname='len', quals=[] (at pp.c:14305)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:14305)
          TypeDecl: declname='SerialActiveMessageP__0__Receive__receive', quals=[] (at pp.c:14305)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:14305)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14307)
        PtrDecl: quals=[] (at pp.c:14307)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14307)
            Struct: name='message_t', packed=False (at pp.c:14307)
      Assignment: op='=' (at pp.c:14311)
        ID: name='__nesc_result' (at pp.c:14311)
        FuncCall:  (at None)
          ID: name='BaseStationP__UartReceive__receive' (at pp.c:14311)
          ExprList:  (at pp.c:14311)
            ID: name='arg_0x1025b9340' (at pp.c:14311)
            ID: name='msg' (at pp.c:14311)
            ID: name='payload' (at pp.c:14311)
            ID: name='len' (at pp.c:14311)
      Return:  (at pp.c:14315)
        ID: name='__nesc_result' (at pp.c:14315)
  FuncDef:  (at pp.c:14320)
    Decl: name='SerialActiveMessageP__0__SubReceive__receive', quals=[], storage=['inline', 'static'] (at pp.c:14320)
      FuncDecl: quals=None (at pp.c:14320)
        ParamList:  (at pp.c:14320)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14320)
            PtrDecl: quals=[] (at pp.c:14320)
              TypeDecl: declname='msg', quals=[] (at pp.c:14320)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:14320)
            PtrDecl: quals=[] (at pp.c:14320)
              TypeDecl: declname='payload', quals=[] (at pp.c:14320)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:14320)
            TypeDecl: declname='len', quals=[] (at pp.c:14320)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:14320)
          TypeDecl: declname='SerialActiveMessageP__0__SubReceive__receive', quals=[] (at pp.c:14320)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:14322)
      Return:  (at pp.c:14323)
        FuncCall:  (at None)
          ID: name='SerialActiveMessageP__0__Receive__receive' (at pp.c:14323)
          ExprList:  (at None)
            FuncCall:  (at None)
              ID: name='SerialActiveMessageP__0__AMPacket__type' (at pp.c:14323)
              ExprList:  (at pp.c:14323)
                ID: name='msg' (at pp.c:14323)
            ID: name='msg' (at pp.c:14323)
            StructRef: type='->' (at pp.c:14323)
              ID: name='msg' (at pp.c:14323)
              ID: name='data' (at pp.c:14323)
            ID: name='len' (at pp.c:14323)
  FuncDef:  (at pp.c:14327)
    Decl: name='SerialDispatcherP__0__Receive__default__receive', quals=[], storage=['inline', 'static'] (at pp.c:14327)
      FuncDecl: quals=None (at pp.c:14327)
        ParamList:  (at pp.c:14327)
          Decl: name='idxxx', quals=[], storage=[] (at pp.c:14327)
            TypeDecl: declname='idxxx', quals=[] (at pp.c:14327)
              IdentifierType: names=['uart_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14327)
            PtrDecl: quals=[] (at pp.c:14327)
              TypeDecl: declname='msg', quals=[] (at pp.c:14327)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:14328)
            PtrDecl: quals=[] (at pp.c:14328)
              TypeDecl: declname='payload', quals=[] (at pp.c:14328)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:14329)
            TypeDecl: declname='len', quals=[] (at pp.c:14329)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:14327)
          TypeDecl: declname='SerialDispatcherP__0__Receive__default__receive', quals=[] (at pp.c:14327)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:14331)
      Return:  (at pp.c:14332)
        ID: name='msg' (at pp.c:14332)
  FuncDef:  (at pp.c:14336)
    Decl: name='SerialDispatcherP__0__Receive__receive', quals=[], storage=['static', 'inline'] (at pp.c:14336)
      FuncDecl: quals=None (at pp.c:14336)
        ParamList:  (at pp.c:14336)
          Decl: name='arg_0x1026edc50', quals=[], storage=[] (at pp.c:14336)
            TypeDecl: declname='arg_0x1026edc50', quals=[] (at pp.c:14336)
              IdentifierType: names=['uart_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14336)
            PtrDecl: quals=[] (at pp.c:14336)
              TypeDecl: declname='msg', quals=[] (at pp.c:14336)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:14336)
            PtrDecl: quals=[] (at pp.c:14336)
              TypeDecl: declname='payload', quals=[] (at pp.c:14336)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:14336)
            TypeDecl: declname='len', quals=[] (at pp.c:14336)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:14336)
          TypeDecl: declname='SerialDispatcherP__0__Receive__receive', quals=[] (at pp.c:14336)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:14336)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14338)
        PtrDecl: quals=[] (at pp.c:14338)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14338)
            Struct: name='message_t', packed=False (at pp.c:14338)
      Switch:  (at pp.c:14342)
        ID: name='arg_0x1026edc50' (at pp.c:14342)
        Compound:  (at pp.c:14342)
          Case:  (at pp.c:14344)
            ID: name='TOS_SERIAL_ACTIVE_MESSAGE_ID' (at pp.c:14344)
            Assignment: op='=' (at pp.c:14346)
              ID: name='__nesc_result' (at pp.c:14346)
              FuncCall:  (at None)
                ID: name='SerialActiveMessageP__0__SubReceive__receive' (at pp.c:14346)
                ExprList:  (at pp.c:14346)
                  ID: name='msg' (at pp.c:14346)
                  ID: name='payload' (at pp.c:14346)
                  ID: name='len' (at pp.c:14346)
          Break:  (at pp.c:14348)
          Default:  (at pp.c:14350)
            Assignment: op='=' (at pp.c:14352)
              ID: name='__nesc_result' (at pp.c:14352)
              FuncCall:  (at None)
                ID: name='SerialDispatcherP__0__Receive__default__receive' (at pp.c:14352)
                ExprList:  (at pp.c:14352)
                  ID: name='arg_0x1026edc50' (at pp.c:14352)
                  ID: name='msg' (at pp.c:14352)
                  ID: name='payload' (at pp.c:14352)
                  ID: name='len' (at pp.c:14352)
          Break:  (at pp.c:14354)
      Return:  (at pp.c:14360)
        ID: name='__nesc_result' (at pp.c:14360)
  FuncDef:  (at pp.c:14365)
    Decl: name='SerialPacketInfoActiveMessageP__Info__upperLength', quals=[], storage=['inline', 'static'] (at pp.c:14365)
      FuncDecl: quals=None (at pp.c:14365)
        ParamList:  (at pp.c:14365)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14365)
            PtrDecl: quals=[] (at pp.c:14365)
              TypeDecl: declname='msg', quals=[] (at pp.c:14365)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='dataLinkLen', quals=[], storage=[] (at pp.c:14365)
            TypeDecl: declname='dataLinkLen', quals=[] (at pp.c:14365)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SerialPacketInfoActiveMessageP__Info__upperLength', quals=[] (at pp.c:14365)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:14367)
      Return:  (at pp.c:14368)
        BinaryOp: op='-' (at pp.c:14368)
          ID: name='dataLinkLen' (at pp.c:14368)
          UnaryOp: op='sizeof' (at pp.c:14368)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['serial_header_t'] (at None)
  FuncDef:  (at pp.c:14372)
    Decl: name='SerialDispatcherP__0__PacketInfo__default__upperLength', quals=[], storage=['inline', 'static'] (at pp.c:14372)
      FuncDecl: quals=None (at pp.c:14372)
        ParamList:  (at pp.c:14372)
          Decl: name='id', quals=[], storage=[] (at pp.c:14372)
            TypeDecl: declname='id', quals=[] (at pp.c:14372)
              IdentifierType: names=['uart_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14372)
            PtrDecl: quals=[] (at pp.c:14372)
              TypeDecl: declname='msg', quals=[] (at pp.c:14372)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='dataLinkLen', quals=[], storage=[] (at pp.c:14373)
            TypeDecl: declname='dataLinkLen', quals=[] (at pp.c:14373)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__PacketInfo__default__upperLength', quals=[] (at pp.c:14372)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:14375)
      Return:  (at pp.c:14376)
        Constant: type='int', value='0' (at pp.c:14376)
  FuncDef:  (at pp.c:14380)
    Decl: name='SerialDispatcherP__0__PacketInfo__upperLength', quals=[], storage=['static', 'inline'] (at pp.c:14380)
      FuncDecl: quals=None (at pp.c:14380)
        ParamList:  (at pp.c:14380)
          Decl: name='arg_0x1026e8aa8', quals=[], storage=[] (at pp.c:14380)
            TypeDecl: declname='arg_0x1026e8aa8', quals=[] (at pp.c:14380)
              IdentifierType: names=['uart_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14380)
            PtrDecl: quals=[] (at pp.c:14380)
              TypeDecl: declname='msg', quals=[] (at pp.c:14380)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='dataLinkLen', quals=[], storage=[] (at pp.c:14380)
            TypeDecl: declname='dataLinkLen', quals=[] (at pp.c:14380)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__PacketInfo__upperLength', quals=[] (at pp.c:14380)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:14380)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14382)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14382)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:14386)
        ID: name='arg_0x1026e8aa8' (at pp.c:14386)
        Compound:  (at pp.c:14386)
          Case:  (at pp.c:14388)
            ID: name='TOS_SERIAL_ACTIVE_MESSAGE_ID' (at pp.c:14388)
            Assignment: op='=' (at pp.c:14390)
              ID: name='__nesc_result' (at pp.c:14390)
              FuncCall:  (at None)
                ID: name='SerialPacketInfoActiveMessageP__Info__upperLength' (at pp.c:14390)
                ExprList:  (at pp.c:14390)
                  ID: name='msg' (at pp.c:14390)
                  ID: name='dataLinkLen' (at pp.c:14390)
          Break:  (at pp.c:14392)
          Default:  (at pp.c:14394)
            Assignment: op='=' (at pp.c:14396)
              ID: name='__nesc_result' (at pp.c:14396)
              FuncCall:  (at None)
                ID: name='SerialDispatcherP__0__PacketInfo__default__upperLength' (at pp.c:14396)
                ExprList:  (at pp.c:14396)
                  ID: name='arg_0x1026e8aa8' (at pp.c:14396)
                  ID: name='msg' (at pp.c:14396)
                  ID: name='dataLinkLen' (at pp.c:14396)
          Break:  (at pp.c:14398)
      Return:  (at pp.c:14404)
        ID: name='__nesc_result' (at pp.c:14404)
  FuncDef:  (at pp.c:14409)
    Decl: name='SerialPacketInfoActiveMessageP__Info__offset', quals=[], storage=['inline', 'static'] (at pp.c:14409)
      FuncDecl: quals=None (at pp.c:14409)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialPacketInfoActiveMessageP__Info__offset', quals=[] (at pp.c:14409)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:14411)
      Return:  (at pp.c:14412)
        Cast:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['uint8_t'] (at None)
          BinaryOp: op='-' (at pp.c:14412)
            UnaryOp: op='sizeof' (at pp.c:14412)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['message_header_t'] (at None)
            UnaryOp: op='sizeof' (at pp.c:14412)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['serial_header_t'] (at None)
  FuncDef:  (at pp.c:14416)
    Decl: name='SerialDispatcherP__0__PacketInfo__default__offset', quals=[], storage=['inline', 'static'] (at pp.c:14416)
      FuncDecl: quals=None (at pp.c:14416)
        ParamList:  (at pp.c:14416)
          Decl: name='id', quals=[], storage=[] (at pp.c:14416)
            TypeDecl: declname='id', quals=[] (at pp.c:14416)
              IdentifierType: names=['uart_id_t'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__PacketInfo__default__offset', quals=[] (at pp.c:14416)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:14418)
      Return:  (at pp.c:14419)
        Constant: type='int', value='0' (at pp.c:14419)
  FuncDef:  (at pp.c:14423)
    Decl: name='SerialDispatcherP__0__PacketInfo__offset', quals=[], storage=['static', 'inline'] (at pp.c:14423)
      FuncDecl: quals=None (at pp.c:14423)
        ParamList:  (at pp.c:14423)
          Decl: name='arg_0x1026e8aa8', quals=[], storage=[] (at pp.c:14423)
            TypeDecl: declname='arg_0x1026e8aa8', quals=[] (at pp.c:14423)
              IdentifierType: names=['uart_id_t'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__PacketInfo__offset', quals=[] (at pp.c:14423)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:14423)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14425)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14425)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:14429)
        ID: name='arg_0x1026e8aa8' (at pp.c:14429)
        Compound:  (at pp.c:14429)
          Case:  (at pp.c:14431)
            ID: name='TOS_SERIAL_ACTIVE_MESSAGE_ID' (at pp.c:14431)
            Assignment: op='=' (at pp.c:14433)
              ID: name='__nesc_result' (at pp.c:14433)
              FuncCall:  (at None)
                ID: name='SerialPacketInfoActiveMessageP__Info__offset' (at pp.c:14433)
          Break:  (at pp.c:14435)
          Default:  (at pp.c:14437)
            Assignment: op='=' (at pp.c:14439)
              ID: name='__nesc_result' (at pp.c:14439)
              FuncCall:  (at None)
                ID: name='SerialDispatcherP__0__PacketInfo__default__offset' (at pp.c:14439)
                ExprList:  (at pp.c:14439)
                  ID: name='arg_0x1026e8aa8' (at pp.c:14439)
          Break:  (at pp.c:14441)
      Return:  (at pp.c:14447)
        ID: name='__nesc_result' (at pp.c:14447)
  FuncDef:  (at pp.c:14452)
    Decl: name='SerialDispatcherP__0__receiveTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:14452)
      FuncDecl: quals=None (at pp.c:14452)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__receiveTask__runTask', quals=[] (at pp.c:14452)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14454)
      Decl: name='myType', quals=[], storage=[] (at pp.c:14455)
        TypeDecl: declname='myType', quals=[] (at pp.c:14455)
          IdentifierType: names=['uart_id_t'] (at None)
      Decl: name='myBuf', quals=[], storage=[] (at pp.c:14456)
        PtrDecl: quals=[] (at pp.c:14456)
          TypeDecl: declname='myBuf', quals=[] (at pp.c:14456)
            IdentifierType: names=['message_t'] (at None)
      Decl: name='mySize', quals=[], storage=[] (at pp.c:14457)
        TypeDecl: declname='mySize', quals=[] (at pp.c:14457)
          IdentifierType: names=['uint8_t'] (at None)
      Decl: name='myWhich', quals=[], storage=[] (at pp.c:14458)
        TypeDecl: declname='myWhich', quals=[] (at pp.c:14458)
          IdentifierType: names=['uint8_t'] (at None)
      Compound:  (at pp.c:14461)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:14461)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:14461)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:14461)
        Compound:  (at pp.c:14463)
          Assignment: op='=' (at pp.c:14464)
            ID: name='myType' (at pp.c:14464)
            ID: name='SerialDispatcherP__0__receiveTaskType' (at pp.c:14464)
          Assignment: op='=' (at pp.c:14465)
            ID: name='myBuf' (at pp.c:14465)
            ID: name='SerialDispatcherP__0__receiveTaskBuf' (at pp.c:14465)
          Assignment: op='=' (at pp.c:14466)
            ID: name='mySize' (at pp.c:14466)
            ID: name='SerialDispatcherP__0__receiveTaskSize' (at pp.c:14466)
          Assignment: op='=' (at pp.c:14467)
            ID: name='myWhich' (at pp.c:14467)
            ID: name='SerialDispatcherP__0__receiveTaskWhich' (at pp.c:14467)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:14470)
          ExprList:  (at pp.c:14470)
            ID: name='__nesc_atomic' (at pp.c:14470)
      Assignment: op='-=' (at pp.c:14471)
        ID: name='mySize' (at pp.c:14471)
        FuncCall:  (at None)
          ID: name='SerialDispatcherP__0__PacketInfo__offset' (at pp.c:14471)
          ExprList:  (at pp.c:14471)
            ID: name='myType' (at pp.c:14471)
      Assignment: op='=' (at pp.c:14472)
        ID: name='mySize' (at pp.c:14472)
        FuncCall:  (at None)
          ID: name='SerialDispatcherP__0__PacketInfo__upperLength' (at pp.c:14472)
          ExprList:  (at pp.c:14472)
            ID: name='myType' (at pp.c:14472)
            ID: name='myBuf' (at pp.c:14472)
            ID: name='mySize' (at pp.c:14472)
      Assignment: op='=' (at pp.c:14473)
        ID: name='myBuf' (at pp.c:14473)
        FuncCall:  (at None)
          ID: name='SerialDispatcherP__0__Receive__receive' (at pp.c:14473)
          ExprList:  (at pp.c:14473)
            ID: name='myType' (at pp.c:14473)
            ID: name='myBuf' (at pp.c:14473)
            ID: name='myBuf' (at pp.c:14473)
            ID: name='mySize' (at pp.c:14473)
      Compound:  (at pp.c:14474)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:14474)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:14474)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:14474)
        Compound:  (at pp.c:14476)
          Assignment: op='=' (at pp.c:14477)
            ArrayRef:  (at pp.c:14477)
              ID: name='SerialDispatcherP__0__messagePtrs' (at pp.c:14477)
              ID: name='myWhich' (at pp.c:14477)
            ID: name='myBuf' (at pp.c:14477)
          FuncCall:  (at None)
            ID: name='SerialDispatcherP__0__unlockBuffer' (at pp.c:14478)
            ExprList:  (at pp.c:14478)
              ID: name='myWhich' (at pp.c:14478)
          Assignment: op='=' (at pp.c:14479)
            ID: name='SerialDispatcherP__0__receiveTaskPending' (at pp.c:14479)
            ID: name='FALSE' (at pp.c:14479)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:14482)
          ExprList:  (at pp.c:14482)
            ID: name='__nesc_atomic' (at pp.c:14482)
  FuncDef:  (at pp.c:14486)
    Decl: name='BaseStationP__SerialControl__stopDone', quals=[], storage=['inline', 'static'] (at pp.c:14486)
      FuncDecl: quals=None (at pp.c:14486)
        ParamList:  (at pp.c:14486)
          Decl: name='error', quals=[], storage=[] (at pp.c:14486)
            TypeDecl: declname='error', quals=[] (at pp.c:14486)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='BaseStationP__SerialControl__stopDone', quals=[] (at pp.c:14486)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14488)
  FuncDef:  (at pp.c:14492)
    Decl: name='SerialP__SplitControl__stopDone', quals=[], storage=['static', 'inline'] (at pp.c:14492)
      FuncDecl: quals=None (at pp.c:14492)
        ParamList:  (at pp.c:14492)
          Decl: name='error', quals=[], storage=[] (at pp.c:14492)
            TypeDecl: declname='error', quals=[] (at pp.c:14492)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='SerialP__SplitControl__stopDone', quals=[] (at pp.c:14492)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14492)
      FuncCall:  (at None)
        ID: name='BaseStationP__SerialControl__stopDone' (at pp.c:14494)
        ExprList:  (at pp.c:14494)
          ID: name='error' (at pp.c:14494)
  FuncDef:  (at pp.c:14499)
    Decl: name='HplMsp430Usart1P__AsyncStdControl__stop', quals=[], storage=['inline', 'static'] (at pp.c:14499)
      FuncDecl: quals=None (at pp.c:14499)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__AsyncStdControl__stop', quals=[] (at pp.c:14499)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14501)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart1P__Usart__disableSpi' (at pp.c:14502)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart1P__Usart__disableUart' (at pp.c:14503)
      Return:  (at pp.c:14504)
        ID: name='SUCCESS' (at pp.c:14504)
  FuncDef:  (at pp.c:14508)
    Decl: name='AsyncPowerManagerP__0__AsyncStdControl__stop', quals=[], storage=['static', 'inline'] (at pp.c:14508)
      FuncDecl: quals=None (at pp.c:14508)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AsyncPowerManagerP__0__AsyncStdControl__stop', quals=[] (at pp.c:14508)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14508)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14510)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14510)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14514)
        ID: name='__nesc_result' (at pp.c:14514)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart1P__AsyncStdControl__stop' (at pp.c:14514)
      Return:  (at pp.c:14518)
        ID: name='__nesc_result' (at pp.c:14518)
  FuncDef:  (at pp.c:14523)
    Decl: name='AsyncPowerManagerP__0__PowerDownCleanup__default__cleanup', quals=[], storage=['inline', 'static'] (at pp.c:14523)
      FuncDecl: quals=None (at pp.c:14523)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AsyncPowerManagerP__0__PowerDownCleanup__default__cleanup', quals=[] (at pp.c:14523)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14525)
  FuncDef:  (at pp.c:14529)
    Decl: name='AsyncPowerManagerP__0__PowerDownCleanup__cleanup', quals=[], storage=['static', 'inline'] (at pp.c:14529)
      FuncDecl: quals=None (at pp.c:14529)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AsyncPowerManagerP__0__PowerDownCleanup__cleanup', quals=[] (at pp.c:14529)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14529)
      FuncCall:  (at None)
        ID: name='AsyncPowerManagerP__0__PowerDownCleanup__default__cleanup' (at pp.c:14531)
  FuncDef:  (at pp.c:14536)
    Decl: name='AsyncPowerManagerP__0__ResourceDefaultOwner__granted', quals=[], storage=['inline', 'static'] (at pp.c:14536)
      FuncDecl: quals=None (at pp.c:14536)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AsyncPowerManagerP__0__ResourceDefaultOwner__granted', quals=[] (at pp.c:14536)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14538)
      FuncCall:  (at None)
        ID: name='AsyncPowerManagerP__0__PowerDownCleanup__cleanup' (at pp.c:14539)
      FuncCall:  (at None)
        ID: name='AsyncPowerManagerP__0__AsyncStdControl__stop' (at pp.c:14540)
  FuncDef:  (at pp.c:14544)
    Decl: name='ArbiterP__1__ResourceDefaultOwner__granted', quals=[], storage=['static', 'inline'] (at pp.c:14544)
      FuncDecl: quals=None (at pp.c:14544)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__1__ResourceDefaultOwner__granted', quals=[] (at pp.c:14544)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14544)
      FuncCall:  (at None)
        ID: name='AsyncPowerManagerP__0__ResourceDefaultOwner__granted' (at pp.c:14546)
  FuncDef:  (at pp.c:14551)
    Decl: name='Msp430UartP__0__Usart__disableUart', quals=[], storage=['static', 'inline'] (at pp.c:14551)
      FuncDecl: quals=None (at pp.c:14551)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430UartP__0__Usart__disableUart', quals=[] (at pp.c:14551)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14551)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart1P__Usart__disableUart' (at pp.c:14553)
  FuncDef:  (at pp.c:14558)
    Decl: name='Msp430UartP__0__Usart__disableIntr', quals=[], storage=['static', 'inline'] (at pp.c:14558)
      FuncDecl: quals=None (at pp.c:14558)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430UartP__0__Usart__disableIntr', quals=[] (at pp.c:14558)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14558)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart1P__Usart__disableIntr' (at pp.c:14560)
  FuncDef:  (at pp.c:14565)
    Decl: name='Msp430UartP__0__Usart__resetUsart', quals=[], storage=['static', 'inline'] (at pp.c:14565)
      FuncDecl: quals=None (at pp.c:14565)
        ParamList:  (at pp.c:14565)
          Decl: name='reset', quals=[], storage=[] (at pp.c:14565)
            TypeDecl: declname='reset', quals=[] (at pp.c:14565)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='Msp430UartP__0__Usart__resetUsart', quals=[] (at pp.c:14565)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14565)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart1P__Usart__resetUsart' (at pp.c:14567)
        ExprList:  (at pp.c:14567)
          ID: name='reset' (at pp.c:14567)
  FuncDef:  (at pp.c:14572)
    Decl: name='Msp430UartP__0__ResourceConfigure__unconfigure', quals=[], storage=['inline', 'static'] (at pp.c:14572)
      FuncDecl: quals=None (at pp.c:14572)
        ParamList:  (at pp.c:14572)
          Decl: name='id', quals=[], storage=[] (at pp.c:14572)
            TypeDecl: declname='id', quals=[] (at pp.c:14572)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__ResourceConfigure__unconfigure', quals=[] (at pp.c:14572)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14574)
      FuncCall:  (at None)
        ID: name='Msp430UartP__0__Usart__resetUsart' (at pp.c:14575)
        ExprList:  (at pp.c:14575)
          ID: name='TRUE' (at pp.c:14575)
      FuncCall:  (at None)
        ID: name='Msp430UartP__0__Usart__disableIntr' (at pp.c:14576)
      FuncCall:  (at None)
        ID: name='Msp430UartP__0__Usart__disableUart' (at pp.c:14577)
  FuncDef:  (at pp.c:14581)
    Decl: name='ArbiterP__1__ResourceConfigure__default__unconfigure', quals=[], storage=['inline', 'static'] (at pp.c:14581)
      FuncDecl: quals=None (at pp.c:14581)
        ParamList:  (at pp.c:14581)
          Decl: name='id', quals=[], storage=[] (at pp.c:14581)
            TypeDecl: declname='id', quals=[] (at pp.c:14581)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__1__ResourceConfigure__default__unconfigure', quals=[] (at pp.c:14581)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14583)
  FuncDef:  (at pp.c:14587)
    Decl: name='ArbiterP__1__ResourceConfigure__unconfigure', quals=[], storage=['static', 'inline'] (at pp.c:14587)
      FuncDecl: quals=None (at pp.c:14587)
        ParamList:  (at pp.c:14587)
          Decl: name='arg_0x101f209b8', quals=[], storage=[] (at pp.c:14587)
            TypeDecl: declname='arg_0x101f209b8', quals=[] (at pp.c:14587)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__1__ResourceConfigure__unconfigure', quals=[] (at pp.c:14587)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14587)
      Switch:  (at pp.c:14589)
        ID: name='arg_0x101f209b8' (at pp.c:14589)
        Compound:  (at pp.c:14589)
          Case:  (at pp.c:14591)
            ID: name='Msp430Usart1C__0__CLIENT_ID' (at pp.c:14591)
            FuncCall:  (at None)
              ID: name='Msp430UartP__0__ResourceConfigure__unconfigure' (at pp.c:14593)
              ExprList:  (at pp.c:14593)
                ID: name='Msp430Uart1C__0__CLIENT_ID' (at pp.c:14593)
          Break:  (at pp.c:14595)
          Default:  (at pp.c:14597)
            FuncCall:  (at None)
              ID: name='ArbiterP__1__ResourceConfigure__default__unconfigure' (at pp.c:14599)
              ExprList:  (at pp.c:14599)
                ID: name='arg_0x101f209b8' (at pp.c:14599)
          Break:  (at pp.c:14601)
  FuncDef:  (at pp.c:14608)
    Decl: name='ArbiterP__1__grantedTask__postTask', quals=[], storage=['static', 'inline'] (at pp.c:14608)
      FuncDecl: quals=None (at pp.c:14608)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__1__grantedTask__postTask', quals=[] (at pp.c:14608)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14608)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14610)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14610)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14614)
        ID: name='__nesc_result' (at pp.c:14614)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:14614)
          ExprList:  (at pp.c:14614)
            ID: name='ArbiterP__1__grantedTask' (at pp.c:14614)
      Return:  (at pp.c:14618)
        ID: name='__nesc_result' (at pp.c:14618)
  FuncDef:  (at pp.c:14623)
    Decl: name='FcfsResourceQueueC__2__FcfsQueue__dequeue', quals=[], storage=['inline', 'static'] (at pp.c:14623)
      FuncDecl: quals=None (at pp.c:14623)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__2__FcfsQueue__dequeue', quals=[] (at pp.c:14623)
          IdentifierType: names=['resource_client_id_t'] (at None)
    Compound:  (at pp.c:14625)
      Compound:  (at pp.c:14628)
        If:  (at pp.c:14629)
          BinaryOp: op='!=' (at pp.c:14629)
            ID: name='FcfsResourceQueueC__2__qHead' (at pp.c:14629)
            ID: name='FcfsResourceQueueC__2__NO_ENTRY' (at pp.c:14629)
          Compound:  (at pp.c:14629)
            Decl: name='id', quals=[], storage=[] (at pp.c:14630)
              TypeDecl: declname='id', quals=[] (at pp.c:14630)
                IdentifierType: names=['uint8_t'] (at None)
              ID: name='FcfsResourceQueueC__2__qHead' (at pp.c:14630)
            Assignment: op='=' (at pp.c:14633)
              ID: name='FcfsResourceQueueC__2__qHead' (at pp.c:14633)
              ArrayRef:  (at pp.c:14633)
                ID: name='FcfsResourceQueueC__2__resQ' (at pp.c:14633)
                ID: name='FcfsResourceQueueC__2__qHead' (at pp.c:14633)
            If:  (at pp.c:14634)
              BinaryOp: op='==' (at pp.c:14634)
                ID: name='FcfsResourceQueueC__2__qHead' (at pp.c:14634)
                ID: name='FcfsResourceQueueC__2__NO_ENTRY' (at pp.c:14634)
              Compound:  (at pp.c:14634)
                Assignment: op='=' (at pp.c:14635)
                  ID: name='FcfsResourceQueueC__2__qTail' (at pp.c:14635)
                  ID: name='FcfsResourceQueueC__2__NO_ENTRY' (at pp.c:14635)
            Assignment: op='=' (at pp.c:14638)
              ArrayRef:  (at pp.c:14638)
                ID: name='FcfsResourceQueueC__2__resQ' (at pp.c:14638)
                ID: name='id' (at pp.c:14638)
              ID: name='FcfsResourceQueueC__2__NO_ENTRY' (at pp.c:14638)
            Compound:  (at pp.c:14639)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:14640)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:14640)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='id' (at pp.c:14642)
              Return:  (at pp.c:14645)
                ID: name='__nesc_temp' (at pp.c:14645)
        Compound:  (at pp.c:14649)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:14650)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:14650)
              IdentifierType: names=['char', 'unsigned'] (at None)
            ID: name='FcfsResourceQueueC__2__NO_ENTRY' (at pp.c:14652)
          Return:  (at pp.c:14655)
            ID: name='__nesc_temp' (at pp.c:14655)
  FuncDef:  (at pp.c:14661)
    Decl: name='ArbiterP__1__Queue__dequeue', quals=[], storage=['static', 'inline'] (at pp.c:14661)
      FuncDecl: quals=None (at pp.c:14661)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__1__Queue__dequeue', quals=[] (at pp.c:14661)
          IdentifierType: names=['resource_client_id_t'] (at None)
    Compound:  (at pp.c:14661)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14663)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14663)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14667)
        ID: name='__nesc_result' (at pp.c:14667)
        FuncCall:  (at None)
          ID: name='FcfsResourceQueueC__2__FcfsQueue__dequeue' (at pp.c:14667)
      Return:  (at pp.c:14671)
        ID: name='__nesc_result' (at pp.c:14671)
  FuncDef:  (at pp.c:14676)
    Decl: name='FcfsResourceQueueC__2__FcfsQueue__isEmpty', quals=[], storage=['inline', 'static'] (at pp.c:14676)
      FuncDecl: quals=None (at pp.c:14676)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__2__FcfsQueue__isEmpty', quals=[] (at pp.c:14676)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:14678)
      Compound:  (at pp.c:14681)
        Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:14682)
          TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:14682)
            IdentifierType: names=['char', 'unsigned'] (at None)
          BinaryOp: op='==' (at pp.c:14684)
            ID: name='FcfsResourceQueueC__2__qHead' (at pp.c:14684)
            ID: name='FcfsResourceQueueC__2__NO_ENTRY' (at pp.c:14684)
        Return:  (at pp.c:14687)
          ID: name='__nesc_temp' (at pp.c:14687)
  FuncDef:  (at pp.c:14692)
    Decl: name='ArbiterP__1__Queue__isEmpty', quals=[], storage=['static', 'inline'] (at pp.c:14692)
      FuncDecl: quals=None (at pp.c:14692)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__1__Queue__isEmpty', quals=[] (at pp.c:14692)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:14692)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14694)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14694)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14698)
        ID: name='__nesc_result' (at pp.c:14698)
        FuncCall:  (at None)
          ID: name='FcfsResourceQueueC__2__FcfsQueue__isEmpty' (at pp.c:14698)
      Return:  (at pp.c:14702)
        ID: name='__nesc_result' (at pp.c:14702)
  FuncDef:  (at pp.c:14707)
    Decl: name='ArbiterP__1__Resource__release', quals=[], storage=['inline', 'static'] (at pp.c:14707)
      FuncDecl: quals=None (at pp.c:14707)
        ParamList:  (at pp.c:14707)
          Decl: name='id', quals=[], storage=[] (at pp.c:14707)
            TypeDecl: declname='id', quals=[] (at pp.c:14707)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__1__Resource__release', quals=[] (at pp.c:14707)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14709)
      Compound:  (at pp.c:14710)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:14710)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:14710)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:14710)
        Compound:  (at pp.c:14712)
          If:  (at pp.c:14713)
            BinaryOp: op='&&' (at pp.c:14713)
              BinaryOp: op='==' (at pp.c:14713)
                ID: name='ArbiterP__1__state' (at pp.c:14713)
                ID: name='ArbiterP__1__RES_BUSY' (at pp.c:14713)
              BinaryOp: op='==' (at pp.c:14713)
                ID: name='ArbiterP__1__resId' (at pp.c:14713)
                ID: name='id' (at pp.c:14713)
            Compound:  (at pp.c:14713)
              If:  (at pp.c:14714)
                BinaryOp: op='==' (at None)
                  FuncCall:  (at None)
                    ID: name='ArbiterP__1__Queue__isEmpty' (at pp.c:14714)
                  ID: name='FALSE' (at pp.c:14714)
                Compound:  (at pp.c:14714)
                  Assignment: op='=' (at pp.c:14715)
                    ID: name='ArbiterP__1__reqResId' (at pp.c:14715)
                    FuncCall:  (at None)
                      ID: name='ArbiterP__1__Queue__dequeue' (at pp.c:14715)
                  Assignment: op='=' (at pp.c:14716)
                    ID: name='ArbiterP__1__resId' (at pp.c:14716)
                    ID: name='ArbiterP__1__NO_RES' (at pp.c:14716)
                  Assignment: op='=' (at pp.c:14717)
                    ID: name='ArbiterP__1__state' (at pp.c:14717)
                    ID: name='ArbiterP__1__RES_GRANTING' (at pp.c:14717)
                  FuncCall:  (at None)
                    ID: name='ArbiterP__1__grantedTask__postTask' (at pp.c:14718)
                  FuncCall:  (at None)
                    ID: name='ArbiterP__1__ResourceConfigure__unconfigure' (at pp.c:14719)
                    ExprList:  (at pp.c:14719)
                      ID: name='id' (at pp.c:14719)
                Compound:  (at pp.c:14721)
                  Assignment: op='=' (at pp.c:14722)
                    ID: name='ArbiterP__1__resId' (at pp.c:14722)
                    ID: name='ArbiterP__1__default_owner_id' (at pp.c:14722)
                  Assignment: op='=' (at pp.c:14723)
                    ID: name='ArbiterP__1__state' (at pp.c:14723)
                    ID: name='ArbiterP__1__RES_CONTROLLED' (at pp.c:14723)
                  FuncCall:  (at None)
                    ID: name='ArbiterP__1__ResourceConfigure__unconfigure' (at pp.c:14724)
                    ExprList:  (at pp.c:14724)
                      ID: name='id' (at pp.c:14724)
                  FuncCall:  (at None)
                    ID: name='ArbiterP__1__ResourceDefaultOwner__granted' (at pp.c:14725)
              Compound:  (at pp.c:14727)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:14728)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:14728)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='SUCCESS' (at pp.c:14730)
                Compound:  (at pp.c:14732)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:14734)
                    ExprList:  (at pp.c:14734)
                      ID: name='__nesc_atomic' (at pp.c:14734)
                  Return:  (at pp.c:14736)
                    ID: name='__nesc_temp' (at pp.c:14736)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:14742)
          ExprList:  (at pp.c:14742)
            ID: name='__nesc_atomic' (at pp.c:14742)
      Return:  (at pp.c:14744)
        ID: name='FAIL' (at pp.c:14744)
  FuncDef:  (at pp.c:14748)
    Decl: name='Msp430UartP__0__UsartResource__default__release', quals=[], storage=['inline', 'static'] (at pp.c:14748)
      FuncDecl: quals=None (at pp.c:14748)
        ParamList:  (at pp.c:14748)
          Decl: name='id', quals=[], storage=[] (at pp.c:14748)
            TypeDecl: declname='id', quals=[] (at pp.c:14748)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__UsartResource__default__release', quals=[] (at pp.c:14748)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14750)
      Return:  (at pp.c:14752)
        ID: name='FAIL' (at pp.c:14752)
  FuncDef:  (at pp.c:14756)
    Decl: name='Msp430UartP__0__UsartResource__release', quals=[], storage=['static', 'inline'] (at pp.c:14756)
      FuncDecl: quals=None (at pp.c:14756)
        ParamList:  (at pp.c:14756)
          Decl: name='arg_0x1027daa20', quals=[], storage=[] (at pp.c:14756)
            TypeDecl: declname='arg_0x1027daa20', quals=[] (at pp.c:14756)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__UsartResource__release', quals=[] (at pp.c:14756)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14756)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14758)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14758)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:14762)
        ID: name='arg_0x1027daa20' (at pp.c:14762)
        Compound:  (at pp.c:14762)
          Case:  (at pp.c:14764)
            ID: name='Msp430Uart1C__0__CLIENT_ID' (at pp.c:14764)
            Assignment: op='=' (at pp.c:14766)
              ID: name='__nesc_result' (at pp.c:14766)
              FuncCall:  (at None)
                ID: name='ArbiterP__1__Resource__release' (at pp.c:14766)
                ExprList:  (at pp.c:14766)
                  ID: name='Msp430Usart1C__0__CLIENT_ID' (at pp.c:14766)
          Break:  (at pp.c:14768)
          Default:  (at pp.c:14770)
            Assignment: op='=' (at pp.c:14772)
              ID: name='__nesc_result' (at pp.c:14772)
              FuncCall:  (at None)
                ID: name='Msp430UartP__0__UsartResource__default__release' (at pp.c:14772)
                ExprList:  (at pp.c:14772)
                  ID: name='arg_0x1027daa20' (at pp.c:14772)
          Break:  (at pp.c:14774)
      Return:  (at pp.c:14780)
        ID: name='__nesc_result' (at pp.c:14780)
  FuncDef:  (at pp.c:14785)
    Decl: name='Msp430UartP__0__UsartResource__default__isOwner', quals=[], storage=['inline', 'static'] (at pp.c:14785)
      FuncDecl: quals=None (at pp.c:14785)
        ParamList:  (at pp.c:14785)
          Decl: name='id', quals=[], storage=[] (at pp.c:14785)
            TypeDecl: declname='id', quals=[] (at pp.c:14785)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__UsartResource__default__isOwner', quals=[] (at pp.c:14785)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14787)
      Return:  (at pp.c:14789)
        ID: name='FAIL' (at pp.c:14789)
  FuncDef:  (at pp.c:14793)
    Decl: name='Msp430UartP__0__UsartResource__isOwner', quals=[], storage=['static', 'inline'] (at pp.c:14793)
      FuncDecl: quals=None (at pp.c:14793)
        ParamList:  (at pp.c:14793)
          Decl: name='arg_0x1027daa20', quals=[], storage=[] (at pp.c:14793)
            TypeDecl: declname='arg_0x1027daa20', quals=[] (at pp.c:14793)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__UsartResource__isOwner', quals=[] (at pp.c:14793)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:14793)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14795)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14795)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:14799)
        ID: name='arg_0x1027daa20' (at pp.c:14799)
        Compound:  (at pp.c:14799)
          Case:  (at pp.c:14801)
            ID: name='Msp430Uart1C__0__CLIENT_ID' (at pp.c:14801)
            Assignment: op='=' (at pp.c:14803)
              ID: name='__nesc_result' (at pp.c:14803)
              FuncCall:  (at None)
                ID: name='ArbiterP__1__Resource__isOwner' (at pp.c:14803)
                ExprList:  (at pp.c:14803)
                  ID: name='Msp430Usart1C__0__CLIENT_ID' (at pp.c:14803)
          Break:  (at pp.c:14805)
          Default:  (at pp.c:14807)
            Assignment: op='=' (at pp.c:14809)
              ID: name='__nesc_result' (at pp.c:14809)
              FuncCall:  (at None)
                ID: name='Msp430UartP__0__UsartResource__default__isOwner' (at pp.c:14809)
                ExprList:  (at pp.c:14809)
                  ID: name='arg_0x1027daa20' (at pp.c:14809)
          Break:  (at pp.c:14811)
      Return:  (at pp.c:14817)
        ID: name='__nesc_result' (at pp.c:14817)
  FuncDef:  (at pp.c:14822)
    Decl: name='Msp430UartP__0__Resource__release', quals=[], storage=['inline', 'static'] (at pp.c:14822)
      FuncDecl: quals=None (at pp.c:14822)
        ParamList:  (at pp.c:14822)
          Decl: name='id', quals=[], storage=[] (at pp.c:14822)
            TypeDecl: declname='id', quals=[] (at pp.c:14822)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__Resource__release', quals=[] (at pp.c:14822)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14824)
      If:  (at pp.c:14825)
        BinaryOp: op='==' (at None)
          FuncCall:  (at None)
            ID: name='Msp430UartP__0__UsartResource__isOwner' (at pp.c:14825)
            ExprList:  (at pp.c:14825)
              ID: name='id' (at pp.c:14825)
          ID: name='FALSE' (at pp.c:14825)
        Compound:  (at pp.c:14825)
          Return:  (at pp.c:14826)
            ID: name='FAIL' (at pp.c:14826)
      If:  (at pp.c:14829)
        BinaryOp: op='||' (at pp.c:14829)
          ID: name='Msp430UartP__0__m_rx_buf' (at pp.c:14829)
          ID: name='Msp430UartP__0__m_tx_buf' (at pp.c:14829)
        Compound:  (at pp.c:14829)
          Return:  (at pp.c:14830)
            ID: name='EBUSY' (at pp.c:14830)
      Return:  (at pp.c:14833)
        FuncCall:  (at None)
          ID: name='Msp430UartP__0__UsartResource__release' (at pp.c:14833)
          ExprList:  (at pp.c:14833)
            ID: name='id' (at pp.c:14833)
  FuncDef:  (at pp.c:14837)
    Decl: name='TelosSerialP__Resource__release', quals=[], storage=['static', 'inline'] (at pp.c:14837)
      FuncDecl: quals=None (at pp.c:14837)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TelosSerialP__Resource__release', quals=[] (at pp.c:14837)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14837)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14839)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14839)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14843)
        ID: name='__nesc_result' (at pp.c:14843)
        FuncCall:  (at None)
          ID: name='Msp430UartP__0__Resource__release' (at pp.c:14843)
          ExprList:  (at pp.c:14843)
            ID: name='Msp430Uart1C__0__CLIENT_ID' (at pp.c:14843)
      Return:  (at pp.c:14847)
        ID: name='__nesc_result' (at pp.c:14847)
  FuncDef:  (at pp.c:14852)
    Decl: name='TelosSerialP__StdControl__stop', quals=[], storage=['inline', 'static'] (at pp.c:14852)
      FuncDecl: quals=None (at pp.c:14852)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TelosSerialP__StdControl__stop', quals=[] (at pp.c:14852)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14854)
      FuncCall:  (at None)
        ID: name='TelosSerialP__Resource__release' (at pp.c:14855)
      Return:  (at pp.c:14856)
        ID: name='SUCCESS' (at pp.c:14856)
  FuncDef:  (at pp.c:14860)
    Decl: name='SerialP__SerialControl__stop', quals=[], storage=['static', 'inline'] (at pp.c:14860)
      FuncDecl: quals=None (at pp.c:14860)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__SerialControl__stop', quals=[] (at pp.c:14860)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14860)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14862)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14862)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14866)
        ID: name='__nesc_result' (at pp.c:14866)
        FuncCall:  (at None)
          ID: name='TelosSerialP__StdControl__stop' (at pp.c:14866)
      Return:  (at pp.c:14870)
        ID: name='__nesc_result' (at pp.c:14870)
  FuncDef:  (at pp.c:14875)
    Decl: name='SerialP__SerialFlush__flushDone', quals=[], storage=['inline', 'static'] (at pp.c:14875)
      FuncDecl: quals=None (at pp.c:14875)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__SerialFlush__flushDone', quals=[] (at pp.c:14875)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14877)
      FuncCall:  (at None)
        ID: name='SerialP__SerialControl__stop' (at pp.c:14878)
      FuncCall:  (at None)
        ID: name='SerialP__SplitControl__stopDone' (at pp.c:14879)
        ExprList:  (at pp.c:14879)
          ID: name='SUCCESS' (at pp.c:14879)
  FuncDef:  (at pp.c:14882)
    Decl: name='SerialP__defaultSerialFlushTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:14882)
      FuncDecl: quals=None (at pp.c:14882)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__defaultSerialFlushTask__runTask', quals=[] (at pp.c:14882)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14884)
      FuncCall:  (at None)
        ID: name='SerialP__SerialFlush__flushDone' (at pp.c:14885)
  FuncDef:  (at pp.c:14889)
    Decl: name='SerialP__defaultSerialFlushTask__postTask', quals=[], storage=['static', 'inline'] (at pp.c:14889)
      FuncDecl: quals=None (at pp.c:14889)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__defaultSerialFlushTask__postTask', quals=[] (at pp.c:14889)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14889)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14891)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14891)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14895)
        ID: name='__nesc_result' (at pp.c:14895)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:14895)
          ExprList:  (at pp.c:14895)
            ID: name='SerialP__defaultSerialFlushTask' (at pp.c:14895)
      Return:  (at pp.c:14899)
        ID: name='__nesc_result' (at pp.c:14899)
  FuncDef:  (at pp.c:14904)
    Decl: name='SerialP__SerialFlush__default__flush', quals=[], storage=['inline', 'static'] (at pp.c:14904)
      FuncDecl: quals=None (at pp.c:14904)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__SerialFlush__default__flush', quals=[] (at pp.c:14904)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14906)
      FuncCall:  (at None)
        ID: name='SerialP__defaultSerialFlushTask__postTask' (at pp.c:14907)
  FuncDef:  (at pp.c:14911)
    Decl: name='SerialP__SerialFlush__flush', quals=[], storage=['static', 'inline'] (at pp.c:14911)
      FuncDecl: quals=None (at pp.c:14911)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__SerialFlush__flush', quals=[] (at pp.c:14911)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14911)
      FuncCall:  (at None)
        ID: name='SerialP__SerialFlush__default__flush' (at pp.c:14913)
  FuncDef:  (at pp.c:14918)
    Decl: name='SerialP__stopDoneTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:14918)
      FuncDecl: quals=None (at pp.c:14918)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__stopDoneTask__runTask', quals=[] (at pp.c:14918)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14920)
      FuncCall:  (at None)
        ID: name='SerialP__SerialFlush__flush' (at pp.c:14921)
  FuncDef:  (at pp.c:14925)
    Decl: name='BaseStationP__SerialControl__startDone', quals=[], storage=['inline', 'static'] (at pp.c:14925)
      FuncDecl: quals=None (at pp.c:14925)
        ParamList:  (at pp.c:14925)
          Decl: name='error', quals=[], storage=[] (at pp.c:14925)
            TypeDecl: declname='error', quals=[] (at pp.c:14925)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='BaseStationP__SerialControl__startDone', quals=[] (at pp.c:14925)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14927)
      If:  (at pp.c:14928)
        BinaryOp: op='==' (at pp.c:14928)
          ID: name='error' (at pp.c:14928)
          ID: name='SUCCESS' (at pp.c:14928)
        Compound:  (at pp.c:14928)
          Assignment: op='=' (at pp.c:14929)
            ID: name='BaseStationP__uartFull' (at pp.c:14929)
            ID: name='FALSE' (at pp.c:14929)
  FuncDef:  (at pp.c:14934)
    Decl: name='SerialP__SplitControl__startDone', quals=[], storage=['static', 'inline'] (at pp.c:14934)
      FuncDecl: quals=None (at pp.c:14934)
        ParamList:  (at pp.c:14934)
          Decl: name='error', quals=[], storage=[] (at pp.c:14934)
            TypeDecl: declname='error', quals=[] (at pp.c:14934)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='SerialP__SplitControl__startDone', quals=[] (at pp.c:14934)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14934)
      FuncCall:  (at None)
        ID: name='BaseStationP__SerialControl__startDone' (at pp.c:14936)
        ExprList:  (at pp.c:14936)
          ID: name='error' (at pp.c:14936)
  FuncDef:  (at pp.c:14941)
    Decl: name='ArbiterP__1__ResourceDefaultOwner__release', quals=[], storage=['inline', 'static'] (at pp.c:14941)
      FuncDecl: quals=None (at pp.c:14941)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__1__ResourceDefaultOwner__release', quals=[] (at pp.c:14941)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14943)
      Compound:  (at pp.c:14944)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:14944)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:14944)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:14944)
        Compound:  (at pp.c:14946)
          If:  (at pp.c:14947)
            BinaryOp: op='==' (at pp.c:14947)
              ID: name='ArbiterP__1__resId' (at pp.c:14947)
              ID: name='ArbiterP__1__default_owner_id' (at pp.c:14947)
            Compound:  (at pp.c:14947)
              If:  (at pp.c:14948)
                BinaryOp: op='==' (at pp.c:14948)
                  ID: name='ArbiterP__1__state' (at pp.c:14948)
                  ID: name='ArbiterP__1__RES_GRANTING' (at pp.c:14948)
                Compound:  (at pp.c:14948)
                  FuncCall:  (at None)
                    ID: name='ArbiterP__1__grantedTask__postTask' (at pp.c:14949)
                  Compound:  (at pp.c:14950)
                    Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:14951)
                      TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:14951)
                        IdentifierType: names=['char', 'unsigned'] (at None)
                      ID: name='SUCCESS' (at pp.c:14953)
                    Compound:  (at pp.c:14955)
                      FuncCall:  (at None)
                        ID: name='__nesc_atomic_end' (at pp.c:14957)
                        ExprList:  (at pp.c:14957)
                          ID: name='__nesc_atomic' (at pp.c:14957)
                      Return:  (at pp.c:14959)
                        ID: name='__nesc_temp' (at pp.c:14959)
                Compound:  (at pp.c:14963)
                  If:  (at pp.c:14965)
                    BinaryOp: op='==' (at pp.c:14965)
                      ID: name='ArbiterP__1__state' (at pp.c:14965)
                      ID: name='ArbiterP__1__RES_IMM_GRANTING' (at pp.c:14965)
                    Compound:  (at pp.c:14965)
                      Assignment: op='=' (at pp.c:14966)
                        ID: name='ArbiterP__1__resId' (at pp.c:14966)
                        ID: name='ArbiterP__1__reqResId' (at pp.c:14966)
                      Assignment: op='=' (at pp.c:14967)
                        ID: name='ArbiterP__1__state' (at pp.c:14967)
                        ID: name='ArbiterP__1__RES_BUSY' (at pp.c:14967)
                      Compound:  (at pp.c:14968)
                        Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:14969)
                          TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:14969)
                            IdentifierType: names=['char', 'unsigned'] (at None)
                          ID: name='SUCCESS' (at pp.c:14971)
                        Compound:  (at pp.c:14973)
                          FuncCall:  (at None)
                            ID: name='__nesc_atomic_end' (at pp.c:14975)
                            ExprList:  (at pp.c:14975)
                              ID: name='__nesc_atomic' (at pp.c:14975)
                          Return:  (at pp.c:14977)
                            ID: name='__nesc_temp' (at pp.c:14977)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:14985)
          ExprList:  (at pp.c:14985)
            ID: name='__nesc_atomic' (at pp.c:14985)
      Return:  (at pp.c:14987)
        ID: name='FAIL' (at pp.c:14987)
  FuncDef:  (at pp.c:14991)
    Decl: name='AsyncPowerManagerP__0__ResourceDefaultOwner__release', quals=[], storage=['static', 'inline'] (at pp.c:14991)
      FuncDecl: quals=None (at pp.c:14991)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AsyncPowerManagerP__0__ResourceDefaultOwner__release', quals=[] (at pp.c:14991)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14991)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14993)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14993)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14997)
        ID: name='__nesc_result' (at pp.c:14997)
        FuncCall:  (at None)
          ID: name='ArbiterP__1__ResourceDefaultOwner__release' (at pp.c:14997)
      Return:  (at pp.c:15001)
        ID: name='__nesc_result' (at pp.c:15001)
  FuncDef:  (at pp.c:15006)
    Decl: name='HplMsp430Usart1P__AsyncStdControl__start', quals=[], storage=['inline', 'static'] (at pp.c:15006)
      FuncDecl: quals=None (at pp.c:15006)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__AsyncStdControl__start', quals=[] (at pp.c:15006)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15008)
      Return:  (at pp.c:15009)
        ID: name='SUCCESS' (at pp.c:15009)
  FuncDef:  (at pp.c:15013)
    Decl: name='AsyncPowerManagerP__0__AsyncStdControl__start', quals=[], storage=['static', 'inline'] (at pp.c:15013)
      FuncDecl: quals=None (at pp.c:15013)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AsyncPowerManagerP__0__AsyncStdControl__start', quals=[] (at pp.c:15013)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15013)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15015)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15015)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15019)
        ID: name='__nesc_result' (at pp.c:15019)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart1P__AsyncStdControl__start' (at pp.c:15019)
      Return:  (at pp.c:15023)
        ID: name='__nesc_result' (at pp.c:15023)
  FuncDef:  (at pp.c:15028)
    Decl: name='AsyncPowerManagerP__0__ResourceDefaultOwner__immediateRequested', quals=[], storage=['inline', 'static'] (at pp.c:15028)
      FuncDecl: quals=None (at pp.c:15028)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AsyncPowerManagerP__0__ResourceDefaultOwner__immediateRequested', quals=[] (at pp.c:15028)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15030)
      FuncCall:  (at None)
        ID: name='AsyncPowerManagerP__0__AsyncStdControl__start' (at pp.c:15031)
      FuncCall:  (at None)
        ID: name='AsyncPowerManagerP__0__ResourceDefaultOwner__release' (at pp.c:15032)
  FuncDef:  (at pp.c:15036)
    Decl: name='ArbiterP__1__ResourceDefaultOwner__immediateRequested', quals=[], storage=['static', 'inline'] (at pp.c:15036)
      FuncDecl: quals=None (at pp.c:15036)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__1__ResourceDefaultOwner__immediateRequested', quals=[] (at pp.c:15036)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15036)
      FuncCall:  (at None)
        ID: name='AsyncPowerManagerP__0__ResourceDefaultOwner__immediateRequested' (at pp.c:15038)
  FuncDef:  (at pp.c:15043)
    Decl: name='ArbiterP__1__ResourceRequested__default__immediateRequested', quals=[], storage=['inline', 'static'] (at pp.c:15043)
      FuncDecl: quals=None (at pp.c:15043)
        ParamList:  (at pp.c:15043)
          Decl: name='id', quals=[], storage=[] (at pp.c:15043)
            TypeDecl: declname='id', quals=[] (at pp.c:15043)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__1__ResourceRequested__default__immediateRequested', quals=[] (at pp.c:15043)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15045)
  FuncDef:  (at pp.c:15049)
    Decl: name='ArbiterP__1__ResourceRequested__immediateRequested', quals=[], storage=['static', 'inline'] (at pp.c:15049)
      FuncDecl: quals=None (at pp.c:15049)
        ParamList:  (at pp.c:15049)
          Decl: name='arg_0x101edd7e8', quals=[], storage=[] (at pp.c:15049)
            TypeDecl: declname='arg_0x101edd7e8', quals=[] (at pp.c:15049)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__1__ResourceRequested__immediateRequested', quals=[] (at pp.c:15049)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15049)
      FuncCall:  (at None)
        ID: name='ArbiterP__1__ResourceRequested__default__immediateRequested' (at pp.c:15051)
        ExprList:  (at pp.c:15051)
          ID: name='arg_0x101edd7e8' (at pp.c:15051)
  FuncDef:  (at pp.c:15056)
    Decl: name='ArbiterP__1__Resource__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:15056)
      FuncDecl: quals=None (at pp.c:15056)
        ParamList:  (at pp.c:15056)
          Decl: name='id', quals=[], storage=[] (at pp.c:15056)
            TypeDecl: declname='id', quals=[] (at pp.c:15056)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__1__Resource__immediateRequest', quals=[] (at pp.c:15056)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15058)
      FuncCall:  (at None)
        ID: name='ArbiterP__1__ResourceRequested__immediateRequested' (at pp.c:15059)
        ExprList:  (at pp.c:15059)
          ID: name='ArbiterP__1__resId' (at pp.c:15059)
      Compound:  (at pp.c:15060)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15060)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15060)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:15060)
        Compound:  (at pp.c:15062)
          If:  (at pp.c:15063)
            BinaryOp: op='==' (at pp.c:15063)
              ID: name='ArbiterP__1__state' (at pp.c:15063)
              ID: name='ArbiterP__1__RES_CONTROLLED' (at pp.c:15063)
            Compound:  (at pp.c:15063)
              Assignment: op='=' (at pp.c:15064)
                ID: name='ArbiterP__1__state' (at pp.c:15064)
                ID: name='ArbiterP__1__RES_IMM_GRANTING' (at pp.c:15064)
              Assignment: op='=' (at pp.c:15065)
                ID: name='ArbiterP__1__reqResId' (at pp.c:15065)
                ID: name='id' (at pp.c:15065)
            Compound:  (at pp.c:15067)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:15068)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:15068)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='FAIL' (at pp.c:15070)
              Compound:  (at pp.c:15072)
                FuncCall:  (at None)
                  ID: name='__nesc_atomic_end' (at pp.c:15074)
                  ExprList:  (at pp.c:15074)
                    ID: name='__nesc_atomic' (at pp.c:15074)
                Return:  (at pp.c:15076)
                  ID: name='__nesc_temp' (at pp.c:15076)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:15081)
          ExprList:  (at pp.c:15081)
            ID: name='__nesc_atomic' (at pp.c:15081)
      FuncCall:  (at None)
        ID: name='ArbiterP__1__ResourceDefaultOwner__immediateRequested' (at pp.c:15083)
      If:  (at pp.c:15084)
        BinaryOp: op='==' (at pp.c:15084)
          ID: name='ArbiterP__1__resId' (at pp.c:15084)
          ID: name='id' (at pp.c:15084)
        Compound:  (at pp.c:15084)
          FuncCall:  (at None)
            ID: name='ArbiterP__1__ResourceConfigure__configure' (at pp.c:15085)
            ExprList:  (at pp.c:15085)
              ID: name='ArbiterP__1__resId' (at pp.c:15085)
          Return:  (at pp.c:15086)
            ID: name='SUCCESS' (at pp.c:15086)
      Compound:  (at pp.c:15088)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15088)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15088)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:15088)
        Assignment: op='=' (at pp.c:15090)
          ID: name='ArbiterP__1__state' (at pp.c:15090)
          ID: name='ArbiterP__1__RES_CONTROLLED' (at pp.c:15090)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:15092)
          ExprList:  (at pp.c:15092)
            ID: name='__nesc_atomic' (at pp.c:15092)
      Return:  (at pp.c:15093)
        ID: name='FAIL' (at pp.c:15093)
  FuncDef:  (at pp.c:15097)
    Decl: name='Msp430UartP__0__UsartResource__default__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:15097)
      FuncDecl: quals=None (at pp.c:15097)
        ParamList:  (at pp.c:15097)
          Decl: name='id', quals=[], storage=[] (at pp.c:15097)
            TypeDecl: declname='id', quals=[] (at pp.c:15097)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__UsartResource__default__immediateRequest', quals=[] (at pp.c:15097)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15099)
      Return:  (at pp.c:15101)
        ID: name='FAIL' (at pp.c:15101)
  FuncDef:  (at pp.c:15105)
    Decl: name='Msp430UartP__0__UsartResource__immediateRequest', quals=[], storage=['static', 'inline'] (at pp.c:15105)
      FuncDecl: quals=None (at pp.c:15105)
        ParamList:  (at pp.c:15105)
          Decl: name='arg_0x1027daa20', quals=[], storage=[] (at pp.c:15105)
            TypeDecl: declname='arg_0x1027daa20', quals=[] (at pp.c:15105)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__UsartResource__immediateRequest', quals=[] (at pp.c:15105)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15105)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15107)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15107)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:15111)
        ID: name='arg_0x1027daa20' (at pp.c:15111)
        Compound:  (at pp.c:15111)
          Case:  (at pp.c:15113)
            ID: name='Msp430Uart1C__0__CLIENT_ID' (at pp.c:15113)
            Assignment: op='=' (at pp.c:15115)
              ID: name='__nesc_result' (at pp.c:15115)
              FuncCall:  (at None)
                ID: name='ArbiterP__1__Resource__immediateRequest' (at pp.c:15115)
                ExprList:  (at pp.c:15115)
                  ID: name='Msp430Usart1C__0__CLIENT_ID' (at pp.c:15115)
          Break:  (at pp.c:15117)
          Default:  (at pp.c:15119)
            Assignment: op='=' (at pp.c:15121)
              ID: name='__nesc_result' (at pp.c:15121)
              FuncCall:  (at None)
                ID: name='Msp430UartP__0__UsartResource__default__immediateRequest' (at pp.c:15121)
                ExprList:  (at pp.c:15121)
                  ID: name='arg_0x1027daa20' (at pp.c:15121)
          Break:  (at pp.c:15123)
      Return:  (at pp.c:15129)
        ID: name='__nesc_result' (at pp.c:15129)
  FuncDef:  (at pp.c:15134)
    Decl: name='Msp430UartP__0__Resource__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:15134)
      FuncDecl: quals=None (at pp.c:15134)
        ParamList:  (at pp.c:15134)
          Decl: name='id', quals=[], storage=[] (at pp.c:15134)
            TypeDecl: declname='id', quals=[] (at pp.c:15134)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__Resource__immediateRequest', quals=[] (at pp.c:15134)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15136)
      Return:  (at pp.c:15137)
        FuncCall:  (at None)
          ID: name='Msp430UartP__0__UsartResource__immediateRequest' (at pp.c:15137)
          ExprList:  (at pp.c:15137)
            ID: name='id' (at pp.c:15137)
  FuncDef:  (at pp.c:15141)
    Decl: name='TelosSerialP__Resource__immediateRequest', quals=[], storage=['static', 'inline'] (at pp.c:15141)
      FuncDecl: quals=None (at pp.c:15141)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TelosSerialP__Resource__immediateRequest', quals=[] (at pp.c:15141)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15141)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15143)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15143)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15147)
        ID: name='__nesc_result' (at pp.c:15147)
        FuncCall:  (at None)
          ID: name='Msp430UartP__0__Resource__immediateRequest' (at pp.c:15147)
          ExprList:  (at pp.c:15147)
            ID: name='Msp430Uart1C__0__CLIENT_ID' (at pp.c:15147)
      Return:  (at pp.c:15151)
        ID: name='__nesc_result' (at pp.c:15151)
  FuncDef:  (at pp.c:15156)
    Decl: name='TelosSerialP__StdControl__start', quals=[], storage=['inline', 'static'] (at pp.c:15156)
      FuncDecl: quals=None (at pp.c:15156)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TelosSerialP__StdControl__start', quals=[] (at pp.c:15156)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15158)
      Return:  (at pp.c:15159)
        FuncCall:  (at None)
          ID: name='TelosSerialP__Resource__immediateRequest' (at pp.c:15159)
  FuncDef:  (at pp.c:15163)
    Decl: name='SerialP__SerialControl__start', quals=[], storage=['static', 'inline'] (at pp.c:15163)
      FuncDecl: quals=None (at pp.c:15163)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__SerialControl__start', quals=[] (at pp.c:15163)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15163)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15165)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15165)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15169)
        ID: name='__nesc_result' (at pp.c:15169)
        FuncCall:  (at None)
          ID: name='TelosSerialP__StdControl__start' (at pp.c:15169)
      Return:  (at pp.c:15173)
        ID: name='__nesc_result' (at pp.c:15173)
  FuncDef:  (at pp.c:15178)
    Decl: name='SerialP__startDoneTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:15178)
      FuncDecl: quals=None (at pp.c:15178)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__startDoneTask__runTask', quals=[] (at pp.c:15178)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15180)
      FuncCall:  (at None)
        ID: name='SerialP__SerialControl__start' (at pp.c:15181)
      FuncCall:  (at None)
        ID: name='SerialP__SplitControl__startDone' (at pp.c:15182)
        ExprList:  (at pp.c:15182)
          ID: name='SUCCESS' (at pp.c:15182)
  FuncDef:  (at pp.c:15186)
    Decl: name='SerialP__SerialFrameComm__putDelimiter', quals=[], storage=['static', 'inline'] (at pp.c:15186)
      FuncDecl: quals=None (at pp.c:15186)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__SerialFrameComm__putDelimiter', quals=[] (at pp.c:15186)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15186)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15188)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15188)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15192)
        ID: name='__nesc_result' (at pp.c:15192)
        FuncCall:  (at None)
          ID: name='HdlcTranslateC__SerialFrameComm__putDelimiter' (at pp.c:15192)
      Return:  (at pp.c:15196)
        ID: name='__nesc_result' (at pp.c:15196)
  FuncDef:  (at pp.c:15201)
    Decl: name='SerialDispatcherP__0__signalSendDone__postTask', quals=[], storage=['static', 'inline'] (at pp.c:15201)
      FuncDecl: quals=None (at pp.c:15201)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__signalSendDone__postTask', quals=[] (at pp.c:15201)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15201)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15203)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15203)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15207)
        ID: name='__nesc_result' (at pp.c:15207)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:15207)
          ExprList:  (at pp.c:15207)
            ID: name='SerialDispatcherP__0__signalSendDone' (at pp.c:15207)
      Return:  (at pp.c:15211)
        ID: name='__nesc_result' (at pp.c:15211)
  FuncDef:  (at pp.c:15216)
    Decl: name='SerialDispatcherP__0__SendBytePacket__sendCompleted', quals=[], storage=['inline', 'static'] (at pp.c:15216)
      FuncDecl: quals=None (at pp.c:15216)
        ParamList:  (at pp.c:15216)
          Decl: name='error', quals=[], storage=[] (at pp.c:15216)
            TypeDecl: declname='error', quals=[] (at pp.c:15216)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__SendBytePacket__sendCompleted', quals=[] (at pp.c:15216)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15218)
      Compound:  (at pp.c:15219)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15219)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15219)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:15219)
        Assignment: op='=' (at pp.c:15221)
          ID: name='SerialDispatcherP__0__sendError' (at pp.c:15221)
          ID: name='error' (at pp.c:15221)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:15223)
          ExprList:  (at pp.c:15223)
            ID: name='__nesc_atomic' (at pp.c:15223)
      FuncCall:  (at None)
        ID: name='SerialDispatcherP__0__signalSendDone__postTask' (at pp.c:15224)
  FuncDef:  (at pp.c:15228)
    Decl: name='SerialP__SendBytePacket__sendCompleted', quals=[], storage=['static', 'inline'] (at pp.c:15228)
      FuncDecl: quals=None (at pp.c:15228)
        ParamList:  (at pp.c:15228)
          Decl: name='error', quals=[], storage=[] (at pp.c:15228)
            TypeDecl: declname='error', quals=[] (at pp.c:15228)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='SerialP__SendBytePacket__sendCompleted', quals=[] (at pp.c:15228)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15228)
      FuncCall:  (at None)
        ID: name='SerialDispatcherP__0__SendBytePacket__sendCompleted' (at pp.c:15230)
        ExprList:  (at pp.c:15230)
          ID: name='error' (at pp.c:15230)
  FuncDef:  (at pp.c:15235)
    Decl: name='SerialP__ack_queue_is_empty', quals=[], storage=['__inline', 'static'] (at pp.c:15235)
      FuncDecl: quals=None (at pp.c:15235)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__ack_queue_is_empty', quals=[] (at pp.c:15235)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:15237)
      Decl: name='ret', quals=[], storage=[] (at pp.c:15238)
        TypeDecl: declname='ret', quals=[] (at pp.c:15238)
          IdentifierType: names=['bool'] (at None)
      Compound:  (at pp.c:15241)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15241)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15241)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:15241)
        Assignment: op='=' (at pp.c:15243)
          ID: name='ret' (at pp.c:15243)
          BinaryOp: op='==' (at pp.c:15243)
            StructRef: type='.' (at pp.c:15243)
              ID: name='SerialP__ackQ' (at pp.c:15243)
              ID: name='writePtr' (at pp.c:15243)
            StructRef: type='.' (at pp.c:15243)
              ID: name='SerialP__ackQ' (at pp.c:15243)
              ID: name='readPtr' (at pp.c:15243)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:15245)
          ExprList:  (at pp.c:15245)
            ID: name='__nesc_atomic' (at pp.c:15245)
      Return:  (at pp.c:15246)
        ID: name='ret' (at pp.c:15246)
  FuncDef:  (at pp.c:15259)
    Decl: name='SerialP__ack_queue_top', quals=[], storage=['__inline', 'static'] (at pp.c:15259)
      FuncDecl: quals=None (at pp.c:15259)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__ack_queue_top', quals=[] (at pp.c:15259)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:15261)
      Decl: name='tmp', quals=[], storage=[] (at pp.c:15262)
        TypeDecl: declname='tmp', quals=[] (at pp.c:15262)
          IdentifierType: names=['uint8_t'] (at None)
        Constant: type='int', value='0' (at pp.c:15262)
      Compound:  (at pp.c:15266)
        If:  (at pp.c:15267)
          UnaryOp: op='!' (at None)
            FuncCall:  (at None)
              ID: name='SerialP__ack_queue_is_empty' (at pp.c:15267)
          Compound:  (at pp.c:15267)
            Assignment: op='=' (at pp.c:15268)
              ID: name='tmp' (at pp.c:15268)
              ArrayRef:  (at pp.c:15268)
                StructRef: type='.' (at pp.c:15268)
                  ID: name='SerialP__ackQ' (at pp.c:15268)
                  ID: name='buf' (at pp.c:15268)
                StructRef: type='.' (at pp.c:15268)
                  ID: name='SerialP__ackQ' (at pp.c:15268)
                  ID: name='readPtr' (at pp.c:15268)
      Return:  (at pp.c:15271)
        ID: name='tmp' (at pp.c:15271)
  FuncDef:  (at pp.c:15274)
    Decl: name='SerialP__ack_queue_pop', quals=[], storage=['inline', 'static'] (at pp.c:15274)
      FuncDecl: quals=None (at pp.c:15274)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__ack_queue_pop', quals=[] (at pp.c:15274)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:15276)
      Decl: name='retval', quals=[], storage=[] (at pp.c:15277)
        TypeDecl: declname='retval', quals=[] (at pp.c:15277)
          IdentifierType: names=['uint8_t'] (at None)
        Constant: type='int', value='0' (at pp.c:15277)
      Compound:  (at pp.c:15281)
        If:  (at pp.c:15282)
          BinaryOp: op='!=' (at pp.c:15282)
            StructRef: type='.' (at pp.c:15282)
              ID: name='SerialP__ackQ' (at pp.c:15282)
              ID: name='writePtr' (at pp.c:15282)
            StructRef: type='.' (at pp.c:15282)
              ID: name='SerialP__ackQ' (at pp.c:15282)
              ID: name='readPtr' (at pp.c:15282)
          Compound:  (at pp.c:15282)
            Assignment: op='=' (at pp.c:15283)
              ID: name='retval' (at pp.c:15283)
              ArrayRef:  (at pp.c:15283)
                StructRef: type='.' (at pp.c:15283)
                  ID: name='SerialP__ackQ' (at pp.c:15283)
                  ID: name='buf' (at pp.c:15283)
                StructRef: type='.' (at pp.c:15283)
                  ID: name='SerialP__ackQ' (at pp.c:15283)
                  ID: name='readPtr' (at pp.c:15283)
            If:  (at pp.c:15284)
              BinaryOp: op='>' (at pp.c:15284)
                UnaryOp: op='++' (at pp.c:15284)
                  StructRef: type='.' (at pp.c:15284)
                    ID: name='SerialP__ackQ' (at pp.c:15284)
                    ID: name='readPtr' (at pp.c:15284)
                ID: name='SerialP__ACK_QUEUE_SIZE' (at pp.c:15284)
              Compound:  (at pp.c:15284)
                Assignment: op='=' (at pp.c:15286)
                  StructRef: type='.' (at pp.c:15286)
                    ID: name='SerialP__ackQ' (at pp.c:15286)
                    ID: name='readPtr' (at pp.c:15286)
                  Constant: type='int', value='0' (at pp.c:15286)
      Return:  (at pp.c:15291)
        ID: name='retval' (at pp.c:15291)
  FuncDef:  (at pp.c:15295)
    Decl: name='SerialP__RunTx__runTask', quals=[], storage=['inline', 'static'] (at pp.c:15295)
      FuncDecl: quals=None (at pp.c:15295)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__RunTx__runTask', quals=[] (at pp.c:15295)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15297)
      Decl: name='idle', quals=[], storage=[] (at pp.c:15298)
        TypeDecl: declname='idle', quals=[] (at pp.c:15298)
          IdentifierType: names=['uint8_t'] (at None)
      Decl: name='done', quals=[], storage=[] (at pp.c:15299)
        TypeDecl: declname='done', quals=[] (at pp.c:15299)
          IdentifierType: names=['uint8_t'] (at None)
      Decl: name='fail', quals=[], storage=[] (at pp.c:15300)
        TypeDecl: declname='fail', quals=[] (at pp.c:15300)
          IdentifierType: names=['uint8_t'] (at None)
      Decl: name='result', quals=[], storage=[] (at pp.c:15310)
        TypeDecl: declname='result', quals=[] (at pp.c:15310)
          IdentifierType: names=['error_t'] (at None)
        ID: name='SUCCESS' (at pp.c:15310)
      Decl: name='send_completed', quals=[], storage=[] (at pp.c:15311)
        TypeDecl: declname='send_completed', quals=[] (at pp.c:15311)
          IdentifierType: names=['bool'] (at None)
        ID: name='FALSE' (at pp.c:15311)
      Decl: name='start_it', quals=[], storage=[] (at pp.c:15312)
        TypeDecl: declname='start_it', quals=[] (at pp.c:15312)
          IdentifierType: names=['bool'] (at None)
        ID: name='FALSE' (at pp.c:15312)
      Compound:  (at pp.c:15314)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15314)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15314)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:15314)
        Compound:  (at pp.c:15316)
          Assignment: op='=' (at pp.c:15317)
            ID: name='SerialP__txPending' (at pp.c:15317)
            Constant: type='int', value='0' (at pp.c:15317)
          Assignment: op='=' (at pp.c:15318)
            ID: name='idle' (at pp.c:15318)
            BinaryOp: op='==' (at pp.c:15318)
              ID: name='SerialP__txState' (at pp.c:15318)
              ID: name='SerialP__TXSTATE_IDLE' (at pp.c:15318)
          Assignment: op='=' (at pp.c:15319)
            ID: name='done' (at pp.c:15319)
            BinaryOp: op='==' (at pp.c:15319)
              ID: name='SerialP__txState' (at pp.c:15319)
              ID: name='SerialP__TXSTATE_FINISH' (at pp.c:15319)
          Assignment: op='=' (at pp.c:15320)
            ID: name='fail' (at pp.c:15320)
            BinaryOp: op='==' (at pp.c:15320)
              ID: name='SerialP__txState' (at pp.c:15320)
              ID: name='SerialP__TXSTATE_ERROR' (at pp.c:15320)
          If:  (at pp.c:15321)
            BinaryOp: op='||' (at pp.c:15321)
              ID: name='done' (at pp.c:15321)
              ID: name='fail' (at pp.c:15321)
            Compound:  (at pp.c:15321)
              Assignment: op='=' (at pp.c:15322)
                ID: name='SerialP__txState' (at pp.c:15322)
                ID: name='SerialP__TXSTATE_IDLE' (at pp.c:15322)
              Assignment: op='=' (at pp.c:15323)
                StructRef: type='.' (at pp.c:15323)
                  ArrayRef:  (at pp.c:15323)
                    ID: name='SerialP__txBuf' (at pp.c:15323)
                    ID: name='SerialP__txIndex' (at pp.c:15323)
                  ID: name='state' (at pp.c:15323)
                ID: name='SerialP__BUFFER_AVAILABLE' (at pp.c:15323)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:15327)
          ExprList:  (at pp.c:15327)
            ID: name='__nesc_atomic' (at pp.c:15327)
      If:  (at pp.c:15330)
        BinaryOp: op='||' (at pp.c:15330)
          ID: name='done' (at pp.c:15330)
          ID: name='fail' (at pp.c:15330)
        Compound:  (at pp.c:15330)
          Compound:  (at pp.c:15331)
            Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15331)
              TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15331)
                IdentifierType: names=['__nesc_atomic_t'] (at None)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_start' (at pp.c:15331)
            Compound:  (at pp.c:15333)
              UnaryOp: op='p++' (at pp.c:15334)
                ID: name='SerialP__txSeqno' (at pp.c:15334)
              If:  (at pp.c:15335)
                BinaryOp: op='==' (at pp.c:15335)
                  ID: name='SerialP__txProto' (at pp.c:15335)
                  ID: name='SERIAL_PROTO_ACK' (at pp.c:15335)
                Compound:  (at pp.c:15335)
                  FuncCall:  (at None)
                    ID: name='SerialP__ack_queue_pop' (at pp.c:15336)
                Compound:  (at pp.c:15338)
                  Assignment: op='=' (at pp.c:15339)
                    ID: name='result' (at pp.c:15339)
                    TernaryOp:  (at pp.c:15339)
                      ID: name='done' (at pp.c:15339)
                      ID: name='SUCCESS' (at pp.c:15339)
                      ID: name='FAIL' (at pp.c:15339)
                  Assignment: op='=' (at pp.c:15340)
                    ID: name='send_completed' (at pp.c:15340)
                    ID: name='TRUE' (at pp.c:15340)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:15344)
              ExprList:  (at pp.c:15344)
                ID: name='__nesc_atomic' (at pp.c:15344)
          Assignment: op='=' (at pp.c:15345)
            ID: name='idle' (at pp.c:15345)
            ID: name='TRUE' (at pp.c:15345)
      If:  (at pp.c:15349)
        ID: name='idle' (at pp.c:15349)
        Compound:  (at pp.c:15349)
          Decl: name='goInactive', quals=[], storage=[] (at pp.c:15350)
            TypeDecl: declname='goInactive', quals=[] (at pp.c:15350)
              IdentifierType: names=['bool'] (at None)
          Compound:  (at pp.c:15353)
            Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15353)
              TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15353)
                IdentifierType: names=['__nesc_atomic_t'] (at None)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_start' (at pp.c:15353)
            Assignment: op='=' (at pp.c:15355)
              ID: name='goInactive' (at pp.c:15355)
              ID: name='SerialP__offPending' (at pp.c:15355)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:15357)
              ExprList:  (at pp.c:15357)
                ID: name='__nesc_atomic' (at pp.c:15357)
          If:  (at pp.c:15358)
            ID: name='goInactive' (at pp.c:15358)
            Compound:  (at pp.c:15358)
              Compound:  (at pp.c:15359)
                Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15359)
                  TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15359)
                    IdentifierType: names=['__nesc_atomic_t'] (at None)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_start' (at pp.c:15359)
                Assignment: op='=' (at pp.c:15361)
                  ID: name='SerialP__txState' (at pp.c:15361)
                  ID: name='SerialP__TXSTATE_INACTIVE' (at pp.c:15361)
                FuncCall:  (at None)
                  ID: name='__nesc_atomic_end' (at pp.c:15363)
                  ExprList:  (at pp.c:15363)
                    ID: name='__nesc_atomic' (at pp.c:15363)
            Compound:  (at pp.c:15365)
              Decl: name='myAckState', quals=[], storage=[] (at pp.c:15367)
                TypeDecl: declname='myAckState', quals=[] (at pp.c:15367)
                  IdentifierType: names=['uint8_t'] (at None)
              Decl: name='myDataState', quals=[], storage=[] (at pp.c:15368)
                TypeDecl: declname='myDataState', quals=[] (at pp.c:15368)
                  IdentifierType: names=['uint8_t'] (at None)
              Compound:  (at pp.c:15371)
                Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15371)
                  TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15371)
                    IdentifierType: names=['__nesc_atomic_t'] (at None)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_start' (at pp.c:15371)
                Compound:  (at pp.c:15373)
                  Assignment: op='=' (at pp.c:15374)
                    ID: name='myAckState' (at pp.c:15374)
                    StructRef: type='.' (at pp.c:15374)
                      ArrayRef:  (at pp.c:15374)
                        ID: name='SerialP__txBuf' (at pp.c:15374)
                        ID: name='SerialP__TX_ACK_INDEX' (at pp.c:15374)
                      ID: name='state' (at pp.c:15374)
                  Assignment: op='=' (at pp.c:15375)
                    ID: name='myDataState' (at pp.c:15375)
                    StructRef: type='.' (at pp.c:15375)
                      ArrayRef:  (at pp.c:15375)
                        ID: name='SerialP__txBuf' (at pp.c:15375)
                        ID: name='SerialP__TX_DATA_INDEX' (at pp.c:15375)
                      ID: name='state' (at pp.c:15375)
                FuncCall:  (at None)
                  ID: name='__nesc_atomic_end' (at pp.c:15378)
                  ExprList:  (at pp.c:15378)
                    ID: name='__nesc_atomic' (at pp.c:15378)
              If:  (at pp.c:15379)
                BinaryOp: op='&&' (at None)
                  UnaryOp: op='!' (at None)
                    FuncCall:  (at None)
                      ID: name='SerialP__ack_queue_is_empty' (at pp.c:15379)
                  BinaryOp: op='==' (at pp.c:15379)
                    ID: name='myAckState' (at pp.c:15379)
                    ID: name='SerialP__BUFFER_AVAILABLE' (at pp.c:15379)
                Compound:  (at pp.c:15379)
                  Compound:  (at pp.c:15380)
                    Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15380)
                      TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15380)
                        IdentifierType: names=['__nesc_atomic_t'] (at None)
                      FuncCall:  (at None)
                        ID: name='__nesc_atomic_start' (at pp.c:15380)
                    Compound:  (at pp.c:15382)
                      Assignment: op='=' (at pp.c:15383)
                        StructRef: type='.' (at pp.c:15383)
                          ArrayRef:  (at pp.c:15383)
                            ID: name='SerialP__txBuf' (at pp.c:15383)
                            ID: name='SerialP__TX_ACK_INDEX' (at pp.c:15383)
                          ID: name='state' (at pp.c:15383)
                        ID: name='SerialP__BUFFER_COMPLETE' (at pp.c:15383)
                      Assignment: op='=' (at pp.c:15384)
                        StructRef: type='.' (at pp.c:15384)
                          ArrayRef:  (at pp.c:15384)
                            ID: name='SerialP__txBuf' (at pp.c:15384)
                            ID: name='SerialP__TX_ACK_INDEX' (at pp.c:15384)
                          ID: name='buf' (at pp.c:15384)
                        FuncCall:  (at None)
                          ID: name='SerialP__ack_queue_top' (at pp.c:15384)
                      Assignment: op='=' (at pp.c:15386)
                        ID: name='SerialP__txProto' (at pp.c:15386)
                        ID: name='SERIAL_PROTO_ACK' (at pp.c:15386)
                      Assignment: op='=' (at pp.c:15387)
                        ID: name='SerialP__txIndex' (at pp.c:15387)
                        ID: name='SerialP__TX_ACK_INDEX' (at pp.c:15387)
                      Assignment: op='=' (at pp.c:15388)
                        ID: name='start_it' (at pp.c:15388)
                        ID: name='TRUE' (at pp.c:15388)
                    FuncCall:  (at None)
                      ID: name='__nesc_atomic_end' (at pp.c:15391)
                      ExprList:  (at pp.c:15391)
                        ID: name='__nesc_atomic' (at pp.c:15391)
                Compound:  (at pp.c:15393)
                  If:  (at pp.c:15395)
                    BinaryOp: op='||' (at pp.c:15395)
                      BinaryOp: op='==' (at pp.c:15395)
                        ID: name='myDataState' (at pp.c:15395)
                        ID: name='SerialP__BUFFER_FILLING' (at pp.c:15395)
                      BinaryOp: op='==' (at pp.c:15395)
                        ID: name='myDataState' (at pp.c:15395)
                        ID: name='SerialP__BUFFER_COMPLETE' (at pp.c:15395)
                    Compound:  (at pp.c:15395)
                      Compound:  (at pp.c:15396)
                        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15396)
                          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15396)
                            IdentifierType: names=['__nesc_atomic_t'] (at None)
                          FuncCall:  (at None)
                            ID: name='__nesc_atomic_start' (at pp.c:15396)
                        Compound:  (at pp.c:15398)
                          Assignment: op='=' (at pp.c:15399)
                            ID: name='SerialP__txProto' (at pp.c:15399)
                            ID: name='SERIAL_PROTO_PACKET_NOACK' (at pp.c:15399)
                          Assignment: op='=' (at pp.c:15400)
                            ID: name='SerialP__txIndex' (at pp.c:15400)
                            ID: name='SerialP__TX_DATA_INDEX' (at pp.c:15400)
                          Assignment: op='=' (at pp.c:15401)
                            ID: name='start_it' (at pp.c:15401)
                            ID: name='TRUE' (at pp.c:15401)
                        FuncCall:  (at None)
                          ID: name='__nesc_atomic_end' (at pp.c:15404)
                          ExprList:  (at pp.c:15404)
                            ID: name='__nesc_atomic' (at pp.c:15404)
                    Compound:  (at pp.c:15406)
        Compound:  (at pp.c:15411)
      If:  (at pp.c:15415)
        ID: name='send_completed' (at pp.c:15415)
        Compound:  (at pp.c:15415)
          FuncCall:  (at None)
            ID: name='SerialP__SendBytePacket__sendCompleted' (at pp.c:15416)
            ExprList:  (at pp.c:15416)
              ID: name='result' (at pp.c:15416)
      Compound:  (at pp.c:15418)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15418)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15418)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:15418)
        Compound:  (at pp.c:15420)
          If:  (at pp.c:15421)
            BinaryOp: op='==' (at pp.c:15421)
              ID: name='SerialP__txState' (at pp.c:15421)
              ID: name='SerialP__TXSTATE_INACTIVE' (at pp.c:15421)
            Compound:  (at pp.c:15421)
              FuncCall:  (at None)
                ID: name='SerialP__testOff' (at pp.c:15422)
              Compound:  (at pp.c:15423)
                FuncCall:  (at None)
                  ID: name='__nesc_atomic_end' (at pp.c:15425)
                  ExprList:  (at pp.c:15425)
                    ID: name='__nesc_atomic' (at pp.c:15425)
                Return:  (at pp.c:15427)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:15432)
          ExprList:  (at pp.c:15432)
            ID: name='__nesc_atomic' (at pp.c:15432)
      If:  (at pp.c:15433)
        ID: name='start_it' (at pp.c:15433)
        Compound:  (at pp.c:15433)
          Compound:  (at pp.c:15435)
            Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15435)
              TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15435)
                IdentifierType: names=['__nesc_atomic_t'] (at None)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_start' (at pp.c:15435)
            Compound:  (at pp.c:15437)
              Assignment: op='=' (at pp.c:15438)
                ID: name='SerialP__txCRC' (at pp.c:15438)
                Constant: type='int', value='0' (at pp.c:15438)
              Assignment: op='=' (at pp.c:15439)
                ID: name='SerialP__txByteCnt' (at pp.c:15439)
                Constant: type='int', value='0' (at pp.c:15439)
              Assignment: op='=' (at pp.c:15440)
                ID: name='SerialP__txState' (at pp.c:15440)
                ID: name='SerialP__TXSTATE_PROTO' (at pp.c:15440)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:15443)
              ExprList:  (at pp.c:15443)
                ID: name='__nesc_atomic' (at pp.c:15443)
          If:  (at pp.c:15444)
            BinaryOp: op='!=' (at None)
              FuncCall:  (at None)
                ID: name='SerialP__SerialFrameComm__putDelimiter' (at pp.c:15444)
              ID: name='SUCCESS' (at pp.c:15444)
            Compound:  (at pp.c:15444)
              Compound:  (at pp.c:15445)
                Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15445)
                  TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15445)
                    IdentifierType: names=['__nesc_atomic_t'] (at None)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_start' (at pp.c:15445)
                Assignment: op='=' (at pp.c:15447)
                  ID: name='SerialP__txState' (at pp.c:15447)
                  ID: name='SerialP__TXSTATE_ERROR' (at pp.c:15447)
                FuncCall:  (at None)
                  ID: name='__nesc_atomic_end' (at pp.c:15449)
                  ExprList:  (at pp.c:15449)
                    ID: name='__nesc_atomic' (at pp.c:15449)
              FuncCall:  (at None)
                ID: name='SerialP__MaybeScheduleTx' (at pp.c:15450)
  FuncDef:  (at pp.c:15456)
    Decl: name='SerialP__stopDoneTask__postTask', quals=[], storage=['static', 'inline'] (at pp.c:15456)
      FuncDecl: quals=None (at pp.c:15456)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__stopDoneTask__postTask', quals=[] (at pp.c:15456)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15456)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15458)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15458)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15462)
        ID: name='__nesc_result' (at pp.c:15462)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:15462)
          ExprList:  (at pp.c:15462)
            ID: name='SerialP__stopDoneTask' (at pp.c:15462)
      Return:  (at pp.c:15466)
        ID: name='__nesc_result' (at pp.c:15466)
  FuncDef:  (at pp.c:15471)
    Decl: name='HdlcTranslateC__UartStream__send', quals=[], storage=['static', 'inline'] (at pp.c:15471)
      FuncDecl: quals=None (at pp.c:15471)
        ParamList:  (at pp.c:15471)
          Decl: name='buf', quals=[], storage=[] (at pp.c:15471)
            PtrDecl: quals=[] (at pp.c:15471)
              TypeDecl: declname='buf', quals=[] (at pp.c:15471)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:15471)
            TypeDecl: declname='len', quals=[] (at pp.c:15471)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='HdlcTranslateC__UartStream__send', quals=[] (at pp.c:15471)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15471)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15473)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15473)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15477)
        ID: name='__nesc_result' (at pp.c:15477)
        FuncCall:  (at None)
          ID: name='Msp430UartP__0__UartStream__send' (at pp.c:15477)
          ExprList:  (at pp.c:15477)
            ID: name='Msp430Uart1C__0__CLIENT_ID' (at pp.c:15477)
            ID: name='buf' (at pp.c:15477)
            ID: name='len' (at pp.c:15477)
      Return:  (at pp.c:15481)
        ID: name='__nesc_result' (at pp.c:15481)
  FuncDef:  (at pp.c:15486)
    Decl: name='SerialP__RunTx__postTask', quals=[], storage=['static', 'inline'] (at pp.c:15486)
      FuncDecl: quals=None (at pp.c:15486)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__RunTx__postTask', quals=[] (at pp.c:15486)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15486)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15488)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15488)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15492)
        ID: name='__nesc_result' (at pp.c:15492)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:15492)
          ExprList:  (at pp.c:15492)
            ID: name='SerialP__RunTx' (at pp.c:15492)
      Return:  (at pp.c:15496)
        ID: name='__nesc_result' (at pp.c:15496)
  FuncDef:  (at pp.c:15500)
    Decl: name='CC2420TinyosNetworkP__grantTask__postTask', quals=[], storage=['static', 'inline'] (at pp.c:15500)
      FuncDecl: quals=None (at pp.c:15500)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__grantTask__postTask', quals=[] (at pp.c:15500)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15500)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15502)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15502)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15506)
        ID: name='__nesc_result' (at pp.c:15506)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:15506)
          ExprList:  (at pp.c:15506)
            ID: name='CC2420TinyosNetworkP__grantTask' (at pp.c:15506)
      Return:  (at pp.c:15510)
        ID: name='__nesc_result' (at pp.c:15510)
  FuncDef:  (at pp.c:15515)
    Decl: name='CC2420TinyosNetworkP__Resource__release', quals=[], storage=['inline', 'static'] (at pp.c:15515)
      FuncDecl: quals=None (at pp.c:15515)
        ParamList:  (at pp.c:15515)
          Decl: name='id', quals=[], storage=[] (at pp.c:15515)
            TypeDecl: declname='id', quals=[] (at pp.c:15515)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__Resource__release', quals=[] (at pp.c:15515)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15517)
      If:  (at pp.c:15518)
        BinaryOp: op='>' (at pp.c:15518)
          ID: name='CC2420TinyosNetworkP__TINYOS_N_NETWORKS' (at pp.c:15518)
          Constant: type='int', value='1' (at pp.c:15518)
        Compound:  (at pp.c:15518)
          FuncCall:  (at None)
            ID: name='CC2420TinyosNetworkP__grantTask__postTask' (at pp.c:15519)
      Assignment: op='=' (at pp.c:15521)
        ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:15521)
        ID: name='CC2420TinyosNetworkP__OWNER_NONE' (at pp.c:15521)
      Return:  (at pp.c:15522)
        ID: name='SUCCESS' (at pp.c:15522)
  FuncDef:  (at pp.c:15526)
    Decl: name='CC2420TinyosNetworkP__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:15526)
      FuncDecl: quals=None (at pp.c:15526)
        ParamList:  (at pp.c:15526)
          Decl: name='client', quals=[], storage=[] (at pp.c:15526)
            TypeDecl: declname='client', quals=[] (at pp.c:15526)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__Resource__default__granted', quals=[] (at pp.c:15526)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15528)
      FuncCall:  (at None)
        ID: name='CC2420TinyosNetworkP__Resource__release' (at pp.c:15529)
        ExprList:  (at pp.c:15529)
          ID: name='client' (at pp.c:15529)
  FuncDef:  (at pp.c:15533)
    Decl: name='CC2420TinyosNetworkP__Resource__granted', quals=[], storage=['static', 'inline'] (at pp.c:15533)
      FuncDecl: quals=None (at pp.c:15533)
        ParamList:  (at pp.c:15533)
          Decl: name='arg_0x1024aa060', quals=[], storage=[] (at pp.c:15533)
            TypeDecl: declname='arg_0x1024aa060', quals=[] (at pp.c:15533)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__Resource__granted', quals=[] (at pp.c:15533)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15533)
      Switch:  (at pp.c:15535)
        ID: name='arg_0x1024aa060' (at pp.c:15535)
        Compound:  (at pp.c:15535)
          Case:  (at pp.c:15537)
            ID: name='CC2420ActiveMessageC__CC2420_AM_SEND_ID' (at pp.c:15537)
            FuncCall:  (at None)
              ID: name='CC2420ActiveMessageP__RadioResource__granted' (at pp.c:15539)
          Break:  (at pp.c:15541)
          Default:  (at pp.c:15543)
            FuncCall:  (at None)
              ID: name='CC2420TinyosNetworkP__Resource__default__granted' (at pp.c:15545)
              ExprList:  (at pp.c:15545)
                ID: name='arg_0x1024aa060' (at pp.c:15545)
          Break:  (at pp.c:15547)
  FuncDef:  (at pp.c:15554)
    Decl: name='FcfsResourceQueueC__0__FcfsQueue__dequeue', quals=[], storage=['inline', 'static'] (at pp.c:15554)
      FuncDecl: quals=None (at pp.c:15554)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__dequeue', quals=[] (at pp.c:15554)
          IdentifierType: names=['resource_client_id_t'] (at None)
    Compound:  (at pp.c:15556)
      Compound:  (at pp.c:15557)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15557)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15557)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:15557)
        Compound:  (at pp.c:15559)
          If:  (at pp.c:15560)
            BinaryOp: op='!=' (at pp.c:15560)
              ID: name='FcfsResourceQueueC__0__qHead' (at pp.c:15560)
              ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:15560)
            Compound:  (at pp.c:15560)
              Decl: name='id', quals=[], storage=[] (at pp.c:15561)
                TypeDecl: declname='id', quals=[] (at pp.c:15561)
                  IdentifierType: names=['uint8_t'] (at None)
                ID: name='FcfsResourceQueueC__0__qHead' (at pp.c:15561)
              Assignment: op='=' (at pp.c:15564)
                ID: name='FcfsResourceQueueC__0__qHead' (at pp.c:15564)
                ArrayRef:  (at pp.c:15564)
                  ID: name='FcfsResourceQueueC__0__resQ' (at pp.c:15564)
                  ID: name='FcfsResourceQueueC__0__qHead' (at pp.c:15564)
              If:  (at pp.c:15565)
                BinaryOp: op='==' (at pp.c:15565)
                  ID: name='FcfsResourceQueueC__0__qHead' (at pp.c:15565)
                  ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:15565)
                Compound:  (at pp.c:15565)
                  Assignment: op='=' (at pp.c:15566)
                    ID: name='FcfsResourceQueueC__0__qTail' (at pp.c:15566)
                    ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:15566)
              Assignment: op='=' (at pp.c:15569)
                ArrayRef:  (at pp.c:15569)
                  ID: name='FcfsResourceQueueC__0__resQ' (at pp.c:15569)
                  ID: name='id' (at pp.c:15569)
                ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:15569)
              Compound:  (at pp.c:15570)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:15571)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:15571)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='id' (at pp.c:15573)
                Compound:  (at pp.c:15575)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:15577)
                    ExprList:  (at pp.c:15577)
                      ID: name='__nesc_atomic' (at pp.c:15577)
                  Return:  (at pp.c:15579)
                    ID: name='__nesc_temp' (at pp.c:15579)
          Compound:  (at pp.c:15584)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:15585)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:15585)
                IdentifierType: names=['char', 'unsigned'] (at None)
              ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:15587)
            Compound:  (at pp.c:15589)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_end' (at pp.c:15591)
                ExprList:  (at pp.c:15591)
                  ID: name='__nesc_atomic' (at pp.c:15591)
              Return:  (at pp.c:15593)
                ID: name='__nesc_temp' (at pp.c:15593)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:15598)
          ExprList:  (at pp.c:15598)
            ID: name='__nesc_atomic' (at pp.c:15598)
  FuncDef:  (at pp.c:15602)
    Decl: name='CC2420TinyosNetworkP__Queue__dequeue', quals=[], storage=['static', 'inline'] (at pp.c:15602)
      FuncDecl: quals=None (at pp.c:15602)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__Queue__dequeue', quals=[] (at pp.c:15602)
          IdentifierType: names=['resource_client_id_t'] (at None)
    Compound:  (at pp.c:15602)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15604)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15604)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15608)
        ID: name='__nesc_result' (at pp.c:15608)
        FuncCall:  (at None)
          ID: name='FcfsResourceQueueC__0__FcfsQueue__dequeue' (at pp.c:15608)
      Return:  (at pp.c:15612)
        ID: name='__nesc_result' (at pp.c:15612)
  FuncDef:  (at pp.c:15617)
    Decl: name='CC2420TinyosNetworkP__Queue__isEmpty', quals=[], storage=['static', 'inline'] (at pp.c:15617)
      FuncDecl: quals=None (at pp.c:15617)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__Queue__isEmpty', quals=[] (at pp.c:15617)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:15617)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15619)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15619)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15623)
        ID: name='__nesc_result' (at pp.c:15623)
        FuncCall:  (at None)
          ID: name='FcfsResourceQueueC__0__FcfsQueue__isEmpty' (at pp.c:15623)
      Return:  (at pp.c:15627)
        ID: name='__nesc_result' (at pp.c:15627)
  FuncDef:  (at pp.c:15632)
    Decl: name='CC2420TinyosNetworkP__grantTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:15632)
      FuncDecl: quals=None (at pp.c:15632)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__grantTask__runTask', quals=[] (at pp.c:15632)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15634)
      If:  (at pp.c:15637)
        BinaryOp: op='>' (at pp.c:15637)
          ID: name='CC2420TinyosNetworkP__TINYOS_N_NETWORKS' (at pp.c:15637)
          Constant: type='int', value='1' (at pp.c:15637)
        Compound:  (at pp.c:15637)
          If:  (at pp.c:15638)
            BinaryOp: op='&&' (at pp.c:15638)
              BinaryOp: op='==' (at pp.c:15638)
                ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:15638)
                ID: name='CC2420TinyosNetworkP__OWNER_NONE' (at pp.c:15638)
              UnaryOp: op='!' (at None)
                FuncCall:  (at None)
                  ID: name='CC2420TinyosNetworkP__Queue__isEmpty' (at pp.c:15638)
            Compound:  (at pp.c:15638)
              Assignment: op='=' (at pp.c:15639)
                ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:15639)
                FuncCall:  (at None)
                  ID: name='CC2420TinyosNetworkP__Queue__dequeue' (at pp.c:15639)
              If:  (at pp.c:15641)
                BinaryOp: op='!=' (at pp.c:15641)
                  ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:15641)
                  ID: name='CC2420TinyosNetworkP__OWNER_NONE' (at pp.c:15641)
                Compound:  (at pp.c:15641)
                  FuncCall:  (at None)
                    ID: name='CC2420TinyosNetworkP__Resource__granted' (at pp.c:15642)
                    ExprList:  (at pp.c:15642)
                      ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:15642)
        Compound:  (at pp.c:15648)
          If:  (at pp.c:15649)
            BinaryOp: op='!=' (at pp.c:15649)
              ID: name='CC2420TinyosNetworkP__next_owner' (at pp.c:15649)
              ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:15649)
            Compound:  (at pp.c:15649)
              Assignment: op='=' (at pp.c:15650)
                ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:15650)
                ID: name='CC2420TinyosNetworkP__next_owner' (at pp.c:15650)
              FuncCall:  (at None)
                ID: name='CC2420TinyosNetworkP__Resource__granted' (at pp.c:15651)
                ExprList:  (at pp.c:15651)
                  ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:15651)
  FuncDef:  (at pp.c:15657)
    Decl: name='CC2420PacketP__CC2420Packet__setNetwork', quals=[], storage=['inline', 'static'] (at pp.c:15657)
      FuncDecl: quals=None (at pp.c:15657)
        ParamList:  (at pp.c:15657)
          Decl: name='p_msg', quals=[], storage=[] (at pp.c:15657)
            PtrDecl: quals=[] (at pp.c:15657)
              TypeDecl: declname='p_msg', quals=[] (at pp.c:15657)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='networkId', quals=[], storage=[] (at pp.c:15657)
            TypeDecl: declname='networkId', quals=[] (at pp.c:15657)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420PacketP__CC2420Packet__setNetwork', quals=[] (at pp.c:15657)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15659)
      Compound:  (at pp.c:15661)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15661)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15661)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:15661)
        Assignment: op='=' (at None)
          UnaryOp: op='*' (at None)
            FuncCall:  (at None)
              ID: name='CC2420PacketP__getNetwork' (at pp.c:15662)
              ExprList:  (at pp.c:15662)
                ID: name='p_msg' (at pp.c:15662)
          ID: name='networkId' (at pp.c:15662)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:15664)
          ExprList:  (at pp.c:15664)
            ID: name='__nesc_atomic' (at pp.c:15664)
  FuncDef:  (at pp.c:15668)
    Decl: name='CC2420TinyosNetworkP__CC2420Packet__setNetwork', quals=[], storage=['static', 'inline'] (at pp.c:15668)
      FuncDecl: quals=None (at pp.c:15668)
        ParamList:  (at pp.c:15668)
          Decl: name='p_msg', quals=[], storage=[] (at pp.c:15668)
            PtrDecl: quals=[] (at pp.c:15668)
              TypeDecl: declname='p_msg', quals=[] (at pp.c:15668)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='networkId', quals=[], storage=[] (at pp.c:15668)
            TypeDecl: declname='networkId', quals=[] (at pp.c:15668)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__CC2420Packet__setNetwork', quals=[] (at pp.c:15668)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15668)
      FuncCall:  (at None)
        ID: name='CC2420PacketP__CC2420Packet__setNetwork' (at pp.c:15670)
        ExprList:  (at pp.c:15670)
          ID: name='p_msg' (at pp.c:15670)
          ID: name='networkId' (at pp.c:15670)
  FuncDef:  (at pp.c:15675)
    Decl: name='CC2420PacketP__getAddressLength', quals=[], storage=['inline', 'static'] (at pp.c:15675)
      FuncDecl: quals=None (at pp.c:15675)
        ParamList:  (at pp.c:15675)
          Decl: name='type', quals=[], storage=[] (at pp.c:15675)
            TypeDecl: declname='type', quals=[] (at pp.c:15675)
              IdentifierType: names=['int'] (at None)
        TypeDecl: declname='CC2420PacketP__getAddressLength', quals=[] (at pp.c:15675)
          IdentifierType: names=['int'] (at None)
    Compound:  (at pp.c:15677)
      Switch:  (at pp.c:15678)
        ID: name='type' (at pp.c:15678)
        Compound:  (at pp.c:15678)
          Case:  (at pp.c:15679)
            ID: name='IEEE154_ADDR_SHORT' (at pp.c:15679)
            Return:  (at pp.c:15679)
              Constant: type='int', value='2' (at pp.c:15679)
          Case:  (at pp.c:15680)
            ID: name='IEEE154_ADDR_EXT' (at pp.c:15680)
            Return:  (at pp.c:15680)
              Constant: type='int', value='8' (at pp.c:15680)
          Case:  (at pp.c:15681)
            ID: name='IEEE154_ADDR_NONE' (at pp.c:15681)
            Return:  (at pp.c:15681)
              Constant: type='int', value='0' (at pp.c:15681)
          Default:  (at pp.c:15682)
            Return:  (at pp.c:15682)
              UnaryOp: op='-' (at pp.c:15682)
                Constant: type='int', value='100' (at pp.c:15682)
  FuncDef:  (at pp.c:15687)
    Decl: name='__nesc_hton_leuint8', quals=[], storage=['__inline', 'static'] (at pp.c:15687)
      FuncDecl: quals=None (at pp.c:15687)
        ParamList:  (at pp.c:15687)
          Decl: name='target', quals=[], storage=[] (at pp.c:15687)
            PtrDecl: quals=[] (at pp.c:15687)
              TypeDecl: declname='target', quals=[] (at pp.c:15687)
                IdentifierType: names=['void'] (at None)
          Decl: name='value', quals=[], storage=[] (at pp.c:15687)
            TypeDecl: declname='value', quals=[] (at pp.c:15687)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='__nesc_hton_leuint8', quals=[] (at pp.c:15687)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:15689)
      Decl: name='base', quals=[], storage=[] (at pp.c:15690)
        PtrDecl: quals=[] (at pp.c:15690)
          TypeDecl: declname='base', quals=[] (at pp.c:15690)
            IdentifierType: names=['uint8_t'] (at None)
        ID: name='target' (at pp.c:15690)
      Assignment: op='=' (at pp.c:15693)
        ArrayRef:  (at pp.c:15693)
          ID: name='base' (at pp.c:15693)
          Constant: type='int', value='0' (at pp.c:15693)
        ID: name='value' (at pp.c:15693)
      Return:  (at pp.c:15694)
        ID: name='value' (at pp.c:15694)
  FuncDef:  (at pp.c:15698)
    Decl: name='__nesc_hton_uint8', quals=[], storage=['__inline', 'static'] (at pp.c:15698)
      FuncDecl: quals=None (at pp.c:15698)
        ParamList:  (at pp.c:15698)
          Decl: name='target', quals=[], storage=[] (at pp.c:15698)
            PtrDecl: quals=[] (at pp.c:15698)
              TypeDecl: declname='target', quals=[] (at pp.c:15698)
                IdentifierType: names=['void'] (at None)
          Decl: name='value', quals=[], storage=[] (at pp.c:15698)
            TypeDecl: declname='value', quals=[] (at pp.c:15698)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='__nesc_hton_uint8', quals=[] (at pp.c:15698)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:15700)
      Decl: name='base', quals=[], storage=[] (at pp.c:15701)
        PtrDecl: quals=[] (at pp.c:15701)
          TypeDecl: declname='base', quals=[] (at pp.c:15701)
            IdentifierType: names=['uint8_t'] (at None)
        ID: name='target' (at pp.c:15701)
      Assignment: op='=' (at pp.c:15704)
        ArrayRef:  (at pp.c:15704)
          ID: name='base' (at pp.c:15704)
          Constant: type='int', value='0' (at pp.c:15704)
        ID: name='value' (at pp.c:15704)
      Return:  (at pp.c:15705)
        ID: name='value' (at pp.c:15705)
  FuncDef:  (at pp.c:15709)
    Decl: name='__nesc_hton_int8', quals=[], storage=['__inline', 'static'] (at pp.c:15709)
      FuncDecl: quals=None (at pp.c:15709)
        ParamList:  (at pp.c:15709)
          Decl: name='target', quals=[], storage=[] (at pp.c:15709)
            PtrDecl: quals=[] (at pp.c:15709)
              TypeDecl: declname='target', quals=[] (at pp.c:15709)
                IdentifierType: names=['void'] (at None)
          Decl: name='value', quals=[], storage=[] (at pp.c:15709)
            TypeDecl: declname='value', quals=[] (at pp.c:15709)
              IdentifierType: names=['int8_t'] (at None)
        TypeDecl: declname='__nesc_hton_int8', quals=[] (at pp.c:15709)
          IdentifierType: names=['int8_t'] (at None)
    Compound:  (at pp.c:15711)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint8' (at pp.c:15713)
        ExprList:  (at pp.c:15713)
          ID: name='target' (at pp.c:15713)
          ID: name='value' (at pp.c:15713)
      Return:  (at pp.c:15715)
        ID: name='value' (at pp.c:15715)
  FuncDef:  (at pp.c:15719)
    Decl: name='__nesc_hton_leuint16', quals=[], storage=['__inline', 'static'] (at pp.c:15719)
      FuncDecl: quals=None (at pp.c:15719)
        ParamList:  (at pp.c:15719)
          Decl: name='target', quals=[], storage=[] (at pp.c:15719)
            PtrDecl: quals=[] (at pp.c:15719)
              TypeDecl: declname='target', quals=[] (at pp.c:15719)
                IdentifierType: names=['void'] (at None)
          Decl: name='value', quals=[], storage=[] (at pp.c:15719)
            TypeDecl: declname='value', quals=[] (at pp.c:15719)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='__nesc_hton_leuint16', quals=[] (at pp.c:15719)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:15721)
      Decl: name='base', quals=[], storage=[] (at pp.c:15722)
        PtrDecl: quals=[] (at pp.c:15722)
          TypeDecl: declname='base', quals=[] (at pp.c:15722)
            IdentifierType: names=['uint8_t'] (at None)
        ID: name='target' (at pp.c:15722)
      Assignment: op='=' (at pp.c:15725)
        ArrayRef:  (at pp.c:15725)
          ID: name='base' (at pp.c:15725)
          Constant: type='int', value='0' (at pp.c:15725)
        ID: name='value' (at pp.c:15725)
      Assignment: op='=' (at pp.c:15726)
        ArrayRef:  (at pp.c:15726)
          ID: name='base' (at pp.c:15726)
          Constant: type='int', value='1' (at pp.c:15726)
        BinaryOp: op='>>' (at pp.c:15726)
          ID: name='value' (at pp.c:15726)
          Constant: type='int', value='8' (at pp.c:15726)
      Return:  (at pp.c:15727)
        ID: name='value' (at pp.c:15727)
  FuncDef:  (at pp.c:15731)
    Decl: name='CC2420TransmitP__send', quals=[], storage=['inline', 'static'] (at pp.c:15731)
      FuncDecl: quals=None (at pp.c:15731)
        ParamList:  (at pp.c:15731)
          Decl: name='p_msg', quals=[], storage=[] (at pp.c:15731)
            PtrDecl: quals=[] (at pp.c:15731)
              TypeDecl: declname='p_msg', quals=[] (at pp.c:15731)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='cca', quals=[], storage=[] (at pp.c:15731)
            TypeDecl: declname='cca', quals=[] (at pp.c:15731)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='CC2420TransmitP__send', quals=[] (at pp.c:15731)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15733)
      Compound:  (at pp.c:15734)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15734)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15734)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:15734)
        Compound:  (at pp.c:15736)
          If:  (at pp.c:15737)
            BinaryOp: op='==' (at pp.c:15737)
              ID: name='CC2420TransmitP__m_state' (at pp.c:15737)
              ID: name='CC2420TransmitP__S_CANCEL' (at pp.c:15737)
            Compound:  (at pp.c:15737)
              Compound:  (at pp.c:15738)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:15739)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:15739)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='ECANCEL' (at pp.c:15741)
                Compound:  (at pp.c:15743)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:15745)
                    ExprList:  (at pp.c:15745)
                      ID: name='__nesc_atomic' (at pp.c:15745)
                  Return:  (at pp.c:15747)
                    ID: name='__nesc_temp' (at pp.c:15747)
          If:  (at pp.c:15752)
            BinaryOp: op='!=' (at pp.c:15752)
              ID: name='CC2420TransmitP__m_state' (at pp.c:15752)
              ID: name='CC2420TransmitP__S_STARTED' (at pp.c:15752)
            Compound:  (at pp.c:15752)
              Compound:  (at pp.c:15753)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:15754)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:15754)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='FAIL' (at pp.c:15756)
                Compound:  (at pp.c:15758)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:15760)
                    ExprList:  (at pp.c:15760)
                      ID: name='__nesc_atomic' (at pp.c:15760)
                  Return:  (at pp.c:15762)
                    ID: name='__nesc_temp' (at pp.c:15762)
          Assignment: op='=' (at pp.c:15768)
            ID: name='CC2420TransmitP__m_state' (at pp.c:15768)
            ID: name='CC2420TransmitP__S_LOAD' (at pp.c:15768)
          Assignment: op='=' (at pp.c:15769)
            ID: name='CC2420TransmitP__m_cca' (at pp.c:15769)
            ID: name='cca' (at pp.c:15769)
          Assignment: op='=' (at pp.c:15770)
            ID: name='CC2420TransmitP__m_msg' (at pp.c:15770)
            ID: name='p_msg' (at pp.c:15770)
          Assignment: op='=' (at pp.c:15771)
            ID: name='CC2420TransmitP__totalCcaChecks' (at pp.c:15771)
            Constant: type='int', value='0' (at pp.c:15771)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:15774)
          ExprList:  (at pp.c:15774)
            ID: name='__nesc_atomic' (at pp.c:15774)
      If:  (at pp.c:15776)
        BinaryOp: op='==' (at None)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__acquireSpiResource' (at pp.c:15776)
          ID: name='SUCCESS' (at pp.c:15776)
        Compound:  (at pp.c:15776)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__loadTXFIFO' (at pp.c:15777)
      Return:  (at pp.c:15780)
        ID: name='SUCCESS' (at pp.c:15780)
  FuncDef:  (at pp.c:15784)
    Decl: name='CC2420TransmitP__Send__send', quals=[], storage=['inline', 'static'] (at pp.c:15784)
      FuncDecl: quals=None (at pp.c:15784)
        ParamList:  (at pp.c:15784)
          Decl: name='p_msg', quals=[], storage=[] (at pp.c:15784)
            PtrDecl: quals=[] (at pp.c:15784)
              TypeDecl: declname='p_msg', quals=[] (at pp.c:15784)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='useCca', quals=[], storage=[] (at pp.c:15784)
            TypeDecl: declname='useCca', quals=[] (at pp.c:15784)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='CC2420TransmitP__Send__send', quals=[] (at pp.c:15784)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15786)
      Return:  (at pp.c:15787)
        FuncCall:  (at None)
          ID: name='CC2420TransmitP__send' (at pp.c:15787)
          ExprList:  (at pp.c:15787)
            ID: name='p_msg' (at pp.c:15787)
            ID: name='useCca' (at pp.c:15787)
  FuncDef:  (at pp.c:15791)
    Decl: name='CC2420CsmaP__CC2420Transmit__send', quals=[], storage=['static', 'inline'] (at pp.c:15791)
      FuncDecl: quals=None (at pp.c:15791)
        ParamList:  (at pp.c:15791)
          Decl: name='p_msg', quals=[], storage=[] (at pp.c:15791)
            PtrDecl: quals=[] (at pp.c:15791)
              TypeDecl: declname='p_msg', quals=[] (at pp.c:15791)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='useCca', quals=[], storage=[] (at pp.c:15791)
            TypeDecl: declname='useCca', quals=[] (at pp.c:15791)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='CC2420CsmaP__CC2420Transmit__send', quals=[] (at pp.c:15791)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15791)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15793)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15793)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15797)
        ID: name='__nesc_result' (at pp.c:15797)
        FuncCall:  (at None)
          ID: name='CC2420TransmitP__Send__send' (at pp.c:15797)
          ExprList:  (at pp.c:15797)
            ID: name='p_msg' (at pp.c:15797)
            ID: name='useCca' (at pp.c:15797)
      Return:  (at pp.c:15801)
        ID: name='__nesc_result' (at pp.c:15801)
  FuncDef:  (at pp.c:15806)
    Decl: name='CC2420ActiveMessageP__RadioBackoff__default__requestCca', quals=[], storage=['inline', 'static'] (at pp.c:15806)
      FuncDecl: quals=None (at pp.c:15806)
        ParamList:  (at pp.c:15806)
          Decl: name='id', quals=[], storage=[] (at pp.c:15806)
            TypeDecl: declname='id', quals=[] (at pp.c:15806)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:15807)
            PtrDecl: quals=[] (at pp.c:15807)
              TypeDecl: declname='msg', quals=[] (at pp.c:15807)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__default__requestCca', quals=[] (at pp.c:15806)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15809)
  FuncDef:  (at pp.c:15813)
    Decl: name='CC2420ActiveMessageP__RadioBackoff__requestCca', quals=[], storage=['static', 'inline'] (at pp.c:15813)
      FuncDecl: quals=None (at pp.c:15813)
        ParamList:  (at pp.c:15813)
          Decl: name='arg_0x102533d60', quals=[], storage=[] (at pp.c:15813)
            TypeDecl: declname='arg_0x102533d60', quals=[] (at pp.c:15813)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:15813)
            PtrDecl: quals=[] (at pp.c:15813)
              TypeDecl: declname='msg', quals=[] (at pp.c:15813)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__requestCca', quals=[] (at pp.c:15813)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15813)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__RadioBackoff__default__requestCca' (at pp.c:15815)
        ExprList:  (at pp.c:15815)
          ID: name='arg_0x102533d60' (at pp.c:15815)
          ID: name='msg' (at pp.c:15815)
  FuncDef:  (at pp.c:15820)
    Decl: name='CC2420ActiveMessageP__SubBackoff__requestCca', quals=[], storage=['inline', 'static'] (at pp.c:15820)
      FuncDecl: quals=None (at pp.c:15820)
        ParamList:  (at pp.c:15820)
          Decl: name='msg', quals=[], storage=[] (at pp.c:15820)
            PtrDecl: quals=[] (at pp.c:15820)
              TypeDecl: declname='msg', quals=[] (at pp.c:15820)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__SubBackoff__requestCca', quals=[] (at pp.c:15820)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15822)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__RadioBackoff__requestCca' (at pp.c:15824)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='__nesc_ntoh_leuint8' (at pp.c:15824)
            ExprList:  (at None)
              StructRef: type='.' (at None)
                StructRef: type='->' (at None)
                  Cast:  (at None)
                    Typename: quals=[] (at None)
                      PtrDecl: quals=[] (at pp.c:15824)
                        TypeDecl: declname=None, quals=[] (at None)
                          IdentifierType: names=['cc2420_header_t'] (at None)
                    BinaryOp: op='-' (at None)
                      BinaryOp: op='+' (at None)
                        Cast:  (at None)
                          Typename: quals=[] (at None)
                            PtrDecl: quals=[] (at pp.c:15824)
                              TypeDecl: declname=None, quals=[] (at None)
                                IdentifierType: names=['uint8_t'] (at None)
                          ID: name='msg' (at pp.c:15824)
                        Cast:  (at None)
                          Typename: quals=[] (at None)
                            TypeDecl: declname=None, quals=[] (at None)
                              IdentifierType: names=['size_t'] (at None)
                          UnaryOp: op='&' (at None)
                            StructRef: type='->' (at None)
                              Cast:  (at None)
                                Typename: quals=[] (at None)
                                  PtrDecl: quals=[] (at pp.c:15824)
                                    TypeDecl: declname=None, quals=[] (at None)
                                      IdentifierType: names=['message_t'] (at None)
                                Constant: type='int', value='0' (at pp.c:15824)
                              ID: name='data' (at pp.c:15824)
                      UnaryOp: op='sizeof' (at pp.c:15824)
                        Typename: quals=[] (at None)
                          TypeDecl: declname=None, quals=[] (at None)
                            IdentifierType: names=['cc2420_header_t'] (at None)
                  ID: name='type' (at pp.c:15824)
                ID: name='nxdata' (at pp.c:15824)
          ID: name='msg' (at pp.c:15824)
  FuncDef:  (at pp.c:15828)
    Decl: name='CC2420CsmaP__RadioBackoff__requestCca', quals=[], storage=['static', 'inline'] (at pp.c:15828)
      FuncDecl: quals=None (at pp.c:15828)
        ParamList:  (at pp.c:15828)
          Decl: name='msg', quals=[], storage=[] (at pp.c:15828)
            PtrDecl: quals=[] (at pp.c:15828)
              TypeDecl: declname='msg', quals=[] (at pp.c:15828)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__RadioBackoff__requestCca', quals=[] (at pp.c:15828)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15828)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__SubBackoff__requestCca' (at pp.c:15830)
        ExprList:  (at pp.c:15830)
          ID: name='msg' (at pp.c:15830)
  FuncDef:  (at pp.c:15835)
    Decl: name='StateImplP__State__forceState', quals=[], storage=['inline', 'static'] (at pp.c:15835)
      FuncDecl: quals=None (at pp.c:15835)
        ParamList:  (at pp.c:15835)
          Decl: name='id', quals=[], storage=[] (at pp.c:15835)
            TypeDecl: declname='id', quals=[] (at pp.c:15835)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='reqState', quals=[], storage=[] (at pp.c:15835)
            TypeDecl: declname='reqState', quals=[] (at pp.c:15835)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='StateImplP__State__forceState', quals=[] (at pp.c:15835)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15837)
      Compound:  (at pp.c:15838)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15838)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15838)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:15838)
        Assignment: op='=' (at pp.c:15840)
          ArrayRef:  (at pp.c:15840)
            ID: name='StateImplP__state' (at pp.c:15840)
            ID: name='id' (at pp.c:15840)
          ID: name='reqState' (at pp.c:15840)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:15842)
          ExprList:  (at pp.c:15842)
            ID: name='__nesc_atomic' (at pp.c:15842)
  FuncDef:  (at pp.c:15846)
    Decl: name='CC2420CsmaP__SplitControlState__forceState', quals=[], storage=['static', 'inline'] (at pp.c:15846)
      FuncDecl: quals=None (at pp.c:15846)
        ParamList:  (at pp.c:15846)
          Decl: name='reqState', quals=[], storage=[] (at pp.c:15846)
            TypeDecl: declname='reqState', quals=[] (at pp.c:15846)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__SplitControlState__forceState', quals=[] (at pp.c:15846)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15846)
      FuncCall:  (at None)
        ID: name='StateImplP__State__forceState' (at pp.c:15848)
        ExprList:  (at pp.c:15848)
          Constant: type='int', value='1U' (at pp.c:15848)
          ID: name='reqState' (at pp.c:15848)
  FuncDef:  (at pp.c:15853)
    Decl: name='CC2420CsmaP__SplitControlState__isState', quals=[], storage=['static', 'inline'] (at pp.c:15853)
      FuncDecl: quals=None (at pp.c:15853)
        ParamList:  (at pp.c:15853)
          Decl: name='myState', quals=[], storage=[] (at pp.c:15853)
            TypeDecl: declname='myState', quals=[] (at pp.c:15853)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__SplitControlState__isState', quals=[] (at pp.c:15853)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:15853)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15855)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15855)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15859)
        ID: name='__nesc_result' (at pp.c:15859)
        FuncCall:  (at None)
          ID: name='StateImplP__State__isState' (at pp.c:15859)
          ExprList:  (at pp.c:15859)
            Constant: type='int', value='1U' (at pp.c:15859)
            ID: name='myState' (at pp.c:15859)
      Return:  (at pp.c:15863)
        ID: name='__nesc_result' (at pp.c:15863)
  FuncDef:  (at pp.c:15868)
    Decl: name='CC2420CsmaP__CC2420PacketBody__getMetadata', quals=[], storage=['static', 'inline'] (at pp.c:15868)
      FuncDecl: quals=None (at pp.c:15868)
        ParamList:  (at pp.c:15868)
          Decl: name='msg', quals=[], storage=[] (at pp.c:15868)
            PtrDecl: quals=[] (at pp.c:15868)
              TypeDecl: declname='msg', quals=[] (at pp.c:15868)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:15868)
          TypeDecl: declname='CC2420CsmaP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:15868)
            IdentifierType: names=['cc2420_metadata_t'] (at None)
    Compound:  (at pp.c:15868)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15870)
        PtrDecl: quals=[] (at pp.c:15870)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15870)
            Struct: name='cc2420_metadata_t', packed=False (at pp.c:15870)
      Assignment: op='=' (at pp.c:15874)
        ID: name='__nesc_result' (at pp.c:15874)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getMetadata' (at pp.c:15874)
          ExprList:  (at pp.c:15874)
            ID: name='msg' (at pp.c:15874)
      Return:  (at pp.c:15878)
        ID: name='__nesc_result' (at pp.c:15878)
  FuncDef:  (at pp.c:15883)
    Decl: name='CC2420CsmaP__CC2420PacketBody__getHeader', quals=[], storage=['static', 'inline'] (at pp.c:15883)
      FuncDecl: quals=None (at pp.c:15883)
        ParamList:  (at pp.c:15883)
          Decl: name='msg', quals=[], storage=[] (at pp.c:15883)
            PtrDecl: quals=[] (at pp.c:15883)
              TypeDecl: declname='msg', quals=[] (at pp.c:15883)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:15883)
          TypeDecl: declname='CC2420CsmaP__CC2420PacketBody__getHeader', quals=[] (at pp.c:15883)
            IdentifierType: names=['cc2420_header_t'] (at None)
    Compound:  (at pp.c:15883)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15885)
        PtrDecl: quals=[] (at pp.c:15885)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15885)
            Struct: name='cc2420_header_t', packed=False (at pp.c:15885)
      Assignment: op='=' (at pp.c:15889)
        ID: name='__nesc_result' (at pp.c:15889)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getHeader' (at pp.c:15889)
          ExprList:  (at pp.c:15889)
            ID: name='msg' (at pp.c:15889)
      Return:  (at pp.c:15893)
        ID: name='__nesc_result' (at pp.c:15893)
  FuncDef:  (at pp.c:15898)
    Decl: name='CC2420CsmaP__Send__send', quals=[], storage=['inline', 'static'] (at pp.c:15898)
      FuncDecl: quals=None (at pp.c:15898)
        ParamList:  (at pp.c:15898)
          Decl: name='p_msg', quals=[], storage=[] (at pp.c:15898)
            PtrDecl: quals=[] (at pp.c:15898)
              TypeDecl: declname='p_msg', quals=[] (at pp.c:15898)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:15898)
            TypeDecl: declname='len', quals=[] (at pp.c:15898)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__Send__send', quals=[] (at pp.c:15898)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15900)
      Decl: name='__nesc_temp43', quals=[], storage=[] (at pp.c:15901)
        PtrDecl: quals=[] (at pp.c:15901)
          TypeDecl: declname='__nesc_temp43', quals=[] (at pp.c:15901)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='__nesc_temp42', quals=[], storage=[] (at pp.c:15902)
        PtrDecl: quals=[] (at pp.c:15902)
          TypeDecl: declname='__nesc_temp42', quals=[] (at pp.c:15902)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='header', quals=[], storage=[] (at pp.c:15904)
        PtrDecl: quals=[] (at pp.c:15904)
          TypeDecl: declname='header', quals=[] (at pp.c:15904)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420CsmaP__CC2420PacketBody__getHeader' (at pp.c:15904)
          ExprList:  (at pp.c:15904)
            ID: name='p_msg' (at pp.c:15904)
      Decl: name='metadata', quals=[], storage=[] (at pp.c:15905)
        PtrDecl: quals=[] (at pp.c:15905)
          TypeDecl: declname='metadata', quals=[] (at pp.c:15905)
            IdentifierType: names=['cc2420_metadata_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420CsmaP__CC2420PacketBody__getMetadata' (at pp.c:15905)
          ExprList:  (at pp.c:15905)
            ID: name='p_msg' (at pp.c:15905)
      Compound:  (at pp.c:15907)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15907)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15907)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:15907)
        Compound:  (at pp.c:15909)
          If:  (at pp.c:15910)
            UnaryOp: op='!' (at None)
              FuncCall:  (at None)
                ID: name='CC2420CsmaP__SplitControlState__isState' (at pp.c:15910)
                ExprList:  (at pp.c:15910)
                  ID: name='CC2420CsmaP__S_STARTED' (at pp.c:15910)
            Compound:  (at pp.c:15910)
              Compound:  (at pp.c:15911)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:15912)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:15912)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='FAIL' (at pp.c:15914)
                Compound:  (at pp.c:15916)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:15918)
                    ExprList:  (at pp.c:15918)
                      ID: name='__nesc_atomic' (at pp.c:15918)
                  Return:  (at pp.c:15920)
                    ID: name='__nesc_temp' (at pp.c:15920)
          FuncCall:  (at None)
            ID: name='CC2420CsmaP__SplitControlState__forceState' (at pp.c:15925)
            ExprList:  (at pp.c:15925)
              ID: name='CC2420CsmaP__S_TRANSMITTING' (at pp.c:15925)
          Assignment: op='=' (at pp.c:15926)
            ID: name='CC2420CsmaP__m_msg' (at pp.c:15926)
            ID: name='p_msg' (at pp.c:15926)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:15929)
          ExprList:  (at pp.c:15929)
            ID: name='__nesc_atomic' (at pp.c:15929)
      ExprList:  (at pp.c:15938)
        Assignment: op='=' (at pp.c:15938)
          ID: name='__nesc_temp42' (at pp.c:15938)
          StructRef: type='.' (at pp.c:15938)
            StructRef: type='->' (at pp.c:15938)
              ID: name='header' (at pp.c:15938)
              ID: name='fcf' (at pp.c:15938)
            ID: name='nxdata' (at pp.c:15938)
        FuncCall:  (at None)
          ID: name='__nesc_hton_leuint16' (at pp.c:15938)
          ExprList:  (at pp.c:15938)
            ID: name='__nesc_temp42' (at pp.c:15938)
            BinaryOp: op='&' (at None)
              FuncCall:  (at None)
                ID: name='__nesc_ntoh_leuint16' (at pp.c:15938)
                ExprList:  (at pp.c:15938)
                  ID: name='__nesc_temp42' (at pp.c:15938)
              BinaryOp: op='|' (at pp.c:15938)
                BinaryOp: op='|' (at pp.c:15938)
                  BinaryOp: op='<<' (at pp.c:15938)
                    Constant: type='int', value='1' (at pp.c:15938)
                    ID: name='IEEE154_FCF_ACK_REQ' (at pp.c:15938)
                  BinaryOp: op='<<' (at pp.c:15939)
                    Constant: type='int', value='0x3' (at pp.c:15939)
                    ID: name='IEEE154_FCF_SRC_ADDR_MODE' (at pp.c:15939)
                BinaryOp: op='<<' (at pp.c:15940)
                  Constant: type='int', value='0x3' (at pp.c:15940)
                  ID: name='IEEE154_FCF_DEST_ADDR_MODE' (at pp.c:15940)
      ExprList:  (at pp.c:15942)
        Assignment: op='=' (at pp.c:15942)
          ID: name='__nesc_temp43' (at pp.c:15942)
          StructRef: type='.' (at pp.c:15942)
            StructRef: type='->' (at pp.c:15942)
              ID: name='header' (at pp.c:15942)
              ID: name='fcf' (at pp.c:15942)
            ID: name='nxdata' (at pp.c:15942)
        FuncCall:  (at None)
          ID: name='__nesc_hton_leuint16' (at pp.c:15942)
          ExprList:  (at pp.c:15942)
            ID: name='__nesc_temp43' (at pp.c:15942)
            BinaryOp: op='|' (at None)
              FuncCall:  (at None)
                ID: name='__nesc_ntoh_leuint16' (at pp.c:15942)
                ExprList:  (at pp.c:15942)
                  ID: name='__nesc_temp43' (at pp.c:15942)
              BinaryOp: op='|' (at pp.c:15942)
                BinaryOp: op='<<' (at pp.c:15942)
                  ID: name='IEEE154_TYPE_DATA' (at pp.c:15942)
                  ID: name='IEEE154_FCF_FRAME_TYPE' (at pp.c:15942)
                BinaryOp: op='<<' (at pp.c:15943)
                  Constant: type='int', value='1' (at pp.c:15943)
                  ID: name='IEEE154_FCF_INTRAPAN' (at pp.c:15943)
      FuncCall:  (at None)
        ID: name='__nesc_hton_int8' (at pp.c:15945)
        ExprList:  (at pp.c:15945)
          StructRef: type='.' (at pp.c:15945)
            StructRef: type='->' (at pp.c:15945)
              ID: name='metadata' (at pp.c:15945)
              ID: name='ack' (at pp.c:15945)
            ID: name='nxdata' (at pp.c:15945)
          ID: name='FALSE' (at pp.c:15945)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint8' (at pp.c:15946)
        ExprList:  (at pp.c:15946)
          StructRef: type='.' (at pp.c:15946)
            StructRef: type='->' (at pp.c:15946)
              ID: name='metadata' (at pp.c:15946)
              ID: name='rssi' (at pp.c:15946)
            ID: name='nxdata' (at pp.c:15946)
          Constant: type='int', value='0' (at pp.c:15946)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint8' (at pp.c:15947)
        ExprList:  (at pp.c:15947)
          StructRef: type='.' (at pp.c:15947)
            StructRef: type='->' (at pp.c:15947)
              ID: name='metadata' (at pp.c:15947)
              ID: name='lqi' (at pp.c:15947)
            ID: name='nxdata' (at pp.c:15947)
          Constant: type='int', value='0' (at pp.c:15947)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint32' (at pp.c:15949)
        ExprList:  (at pp.c:15949)
          StructRef: type='.' (at pp.c:15949)
            StructRef: type='->' (at pp.c:15949)
              ID: name='metadata' (at pp.c:15949)
              ID: name='timestamp' (at pp.c:15949)
            ID: name='nxdata' (at pp.c:15949)
          ID: name='CC2420_INVALID_TIMESTAMP' (at pp.c:15949)
      Assignment: op='=' (at pp.c:15951)
        ID: name='CC2420CsmaP__ccaOn' (at pp.c:15951)
        ID: name='TRUE' (at pp.c:15951)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__RadioBackoff__requestCca' (at pp.c:15952)
        ExprList:  (at pp.c:15952)
          ID: name='CC2420CsmaP__m_msg' (at pp.c:15952)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__CC2420Transmit__send' (at pp.c:15954)
        ExprList:  (at pp.c:15954)
          ID: name='CC2420CsmaP__m_msg' (at pp.c:15954)
          ID: name='CC2420CsmaP__ccaOn' (at pp.c:15954)
      Return:  (at pp.c:15955)
        ID: name='SUCCESS' (at pp.c:15955)
  FuncDef:  (at pp.c:15959)
    Decl: name='UniqueSendP__SubSend__send', quals=[], storage=['static', 'inline'] (at pp.c:15959)
      FuncDecl: quals=None (at pp.c:15959)
        ParamList:  (at pp.c:15959)
          Decl: name='msg', quals=[], storage=[] (at pp.c:15959)
            PtrDecl: quals=[] (at pp.c:15959)
              TypeDecl: declname='msg', quals=[] (at pp.c:15959)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:15959)
            TypeDecl: declname='len', quals=[] (at pp.c:15959)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='UniqueSendP__SubSend__send', quals=[] (at pp.c:15959)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15959)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15961)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15961)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15965)
        ID: name='__nesc_result' (at pp.c:15965)
        FuncCall:  (at None)
          ID: name='CC2420CsmaP__Send__send' (at pp.c:15965)
          ExprList:  (at pp.c:15965)
            ID: name='msg' (at pp.c:15965)
            ID: name='len' (at pp.c:15965)
      Return:  (at pp.c:15969)
        ID: name='__nesc_result' (at pp.c:15969)
  FuncDef:  (at pp.c:15974)
    Decl: name='UniqueSendP__CC2420PacketBody__getHeader', quals=[], storage=['static', 'inline'] (at pp.c:15974)
      FuncDecl: quals=None (at pp.c:15974)
        ParamList:  (at pp.c:15974)
          Decl: name='msg', quals=[], storage=[] (at pp.c:15974)
            PtrDecl: quals=[] (at pp.c:15974)
              TypeDecl: declname='msg', quals=[] (at pp.c:15974)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:15974)
          TypeDecl: declname='UniqueSendP__CC2420PacketBody__getHeader', quals=[] (at pp.c:15974)
            IdentifierType: names=['cc2420_header_t'] (at None)
    Compound:  (at pp.c:15974)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15976)
        PtrDecl: quals=[] (at pp.c:15976)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15976)
            Struct: name='cc2420_header_t', packed=False (at pp.c:15976)
      Assignment: op='=' (at pp.c:15980)
        ID: name='__nesc_result' (at pp.c:15980)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getHeader' (at pp.c:15980)
          ExprList:  (at pp.c:15980)
            ID: name='msg' (at pp.c:15980)
      Return:  (at pp.c:15984)
        ID: name='__nesc_result' (at pp.c:15984)
  FuncDef:  (at pp.c:15989)
    Decl: name='UniqueSendP__State__requestState', quals=[], storage=['static', 'inline'] (at pp.c:15989)
      FuncDecl: quals=None (at pp.c:15989)
        ParamList:  (at pp.c:15989)
          Decl: name='reqState', quals=[], storage=[] (at pp.c:15989)
            TypeDecl: declname='reqState', quals=[] (at pp.c:15989)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='UniqueSendP__State__requestState', quals=[] (at pp.c:15989)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15989)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15991)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15991)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15995)
        ID: name='__nesc_result' (at pp.c:15995)
        FuncCall:  (at None)
          ID: name='StateImplP__State__requestState' (at pp.c:15995)
          ExprList:  (at pp.c:15995)
            Constant: type='int', value='2U' (at pp.c:15995)
            ID: name='reqState' (at pp.c:15995)
      Return:  (at pp.c:15999)
        ID: name='__nesc_result' (at pp.c:15999)
  FuncDef:  (at pp.c:16004)
    Decl: name='UniqueSendP__Send__send', quals=[], storage=['inline', 'static'] (at pp.c:16004)
      FuncDecl: quals=None (at pp.c:16004)
        ParamList:  (at pp.c:16004)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16004)
            PtrDecl: quals=[] (at pp.c:16004)
              TypeDecl: declname='msg', quals=[] (at pp.c:16004)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:16004)
            TypeDecl: declname='len', quals=[] (at pp.c:16004)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='UniqueSendP__Send__send', quals=[] (at pp.c:16004)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16006)
      Decl: name='error', quals=[], storage=[] (at pp.c:16007)
        TypeDecl: declname='error', quals=[] (at pp.c:16007)
          IdentifierType: names=['error_t'] (at None)
      If:  (at pp.c:16010)
        BinaryOp: op='==' (at None)
          FuncCall:  (at None)
            ID: name='UniqueSendP__State__requestState' (at pp.c:16010)
            ExprList:  (at pp.c:16010)
              ID: name='UniqueSendP__S_SENDING' (at pp.c:16010)
          ID: name='SUCCESS' (at pp.c:16010)
        Compound:  (at pp.c:16010)
          FuncCall:  (at None)
            ID: name='__nesc_hton_leuint8' (at pp.c:16011)
            ExprList:  (at None)
              StructRef: type='.' (at None)
                StructRef: type='->' (at None)
                  FuncCall:  (at None)
                    ID: name='UniqueSendP__CC2420PacketBody__getHeader' (at pp.c:16011)
                    ExprList:  (at pp.c:16011)
                      ID: name='msg' (at pp.c:16011)
                  ID: name='dsn' (at pp.c:16011)
                ID: name='nxdata' (at pp.c:16011)
              UnaryOp: op='p++' (at pp.c:16011)
                ID: name='UniqueSendP__localSendId' (at pp.c:16011)
          If:  (at pp.c:16013)
            BinaryOp: op='!=' (at pp.c:16013)
              Assignment: op='=' (at pp.c:16013)
                ID: name='error' (at pp.c:16013)
                FuncCall:  (at None)
                  ID: name='UniqueSendP__SubSend__send' (at pp.c:16013)
                  ExprList:  (at pp.c:16013)
                    ID: name='msg' (at pp.c:16013)
                    ID: name='len' (at pp.c:16013)
              ID: name='SUCCESS' (at pp.c:16013)
            Compound:  (at pp.c:16013)
              FuncCall:  (at None)
                ID: name='UniqueSendP__State__toIdle' (at pp.c:16014)
          Return:  (at pp.c:16017)
            ID: name='error' (at pp.c:16017)
      Return:  (at pp.c:16020)
        ID: name='EBUSY' (at pp.c:16020)
  FuncDef:  (at pp.c:16024)
    Decl: name='CC2420TinyosNetworkP__SubSend__send', quals=[], storage=['static', 'inline'] (at pp.c:16024)
      FuncDecl: quals=None (at pp.c:16024)
        ParamList:  (at pp.c:16024)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16024)
            PtrDecl: quals=[] (at pp.c:16024)
              TypeDecl: declname='msg', quals=[] (at pp.c:16024)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:16024)
            TypeDecl: declname='len', quals=[] (at pp.c:16024)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__SubSend__send', quals=[] (at pp.c:16024)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16024)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16026)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16026)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16030)
        ID: name='__nesc_result' (at pp.c:16030)
        FuncCall:  (at None)
          ID: name='UniqueSendP__Send__send' (at pp.c:16030)
          ExprList:  (at pp.c:16030)
            ID: name='msg' (at pp.c:16030)
            ID: name='len' (at pp.c:16030)
      Return:  (at pp.c:16034)
        ID: name='__nesc_result' (at pp.c:16034)
  FuncDef:  (at pp.c:16039)
    Decl: name='CC2420TransmitP__TXCTRL__write', quals=[], storage=['static', 'inline'] (at pp.c:16039)
      FuncDecl: quals=None (at pp.c:16039)
        ParamList:  (at pp.c:16039)
          Decl: name='data', quals=[], storage=[] (at pp.c:16039)
            TypeDecl: declname='data', quals=[] (at pp.c:16039)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__TXCTRL__write', quals=[] (at pp.c:16039)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:16039)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16041)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16041)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16045)
        ID: name='__nesc_result' (at pp.c:16045)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Reg__write' (at pp.c:16045)
          ExprList:  (at pp.c:16045)
            ID: name='CC2420_TXCTRL' (at pp.c:16045)
            ID: name='data' (at pp.c:16045)
      Return:  (at pp.c:16049)
        ID: name='__nesc_result' (at pp.c:16049)
  FuncDef:  (at pp.c:16054)
    Decl: name='CC2420SpiP__SpiPacket__send', quals=[], storage=['static', 'inline'] (at pp.c:16054)
      FuncDecl: quals=None (at pp.c:16054)
        ParamList:  (at pp.c:16054)
          Decl: name='txBuf', quals=[], storage=[] (at pp.c:16054)
            PtrDecl: quals=[] (at pp.c:16054)
              TypeDecl: declname='txBuf', quals=[] (at pp.c:16054)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='rxBuf', quals=[], storage=[] (at pp.c:16054)
            PtrDecl: quals=[] (at pp.c:16054)
              TypeDecl: declname='rxBuf', quals=[] (at pp.c:16054)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:16054)
            TypeDecl: declname='len', quals=[] (at pp.c:16054)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420SpiP__SpiPacket__send', quals=[] (at pp.c:16054)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16054)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16056)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16056)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16060)
        ID: name='__nesc_result' (at pp.c:16060)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__SpiPacket__send' (at pp.c:16060)
          ExprList:  (at pp.c:16060)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:16060)
            ID: name='txBuf' (at pp.c:16060)
            ID: name='rxBuf' (at pp.c:16060)
            ID: name='len' (at pp.c:16060)
      Return:  (at pp.c:16064)
        ID: name='__nesc_result' (at pp.c:16064)
  FuncDef:  (at pp.c:16069)
    Decl: name='CC2420SpiP__SpiByte__write', quals=[], storage=['static', 'inline'] (at pp.c:16069)
      FuncDecl: quals=None (at pp.c:16069)
        ParamList:  (at pp.c:16069)
          Decl: name='tx', quals=[], storage=[] (at pp.c:16069)
            TypeDecl: declname='tx', quals=[] (at pp.c:16069)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__SpiByte__write', quals=[] (at pp.c:16069)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:16069)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16071)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16071)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16075)
        ID: name='__nesc_result' (at pp.c:16075)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__SpiByte__write' (at pp.c:16075)
          ExprList:  (at pp.c:16075)
            ID: name='tx' (at pp.c:16075)
      Return:  (at pp.c:16079)
        ID: name='__nesc_result' (at pp.c:16079)
  FuncDef:  (at pp.c:16084)
    Decl: name='StateImplP__State__isIdle', quals=[], storage=['inline', 'static'] (at pp.c:16084)
      FuncDecl: quals=None (at pp.c:16084)
        ParamList:  (at pp.c:16084)
          Decl: name='id', quals=[], storage=[] (at pp.c:16084)
            TypeDecl: declname='id', quals=[] (at pp.c:16084)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='StateImplP__State__isIdle', quals=[] (at pp.c:16084)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:16086)
      Return:  (at pp.c:16087)
        FuncCall:  (at None)
          ID: name='StateImplP__State__isState' (at pp.c:16087)
          ExprList:  (at pp.c:16087)
            ID: name='id' (at pp.c:16087)
            ID: name='StateImplP__S_IDLE' (at pp.c:16087)
  FuncDef:  (at pp.c:16091)
    Decl: name='CC2420SpiP__WorkingState__isIdle', quals=[], storage=['static', 'inline'] (at pp.c:16091)
      FuncDecl: quals=None (at pp.c:16091)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__WorkingState__isIdle', quals=[] (at pp.c:16091)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:16091)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16093)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16093)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16097)
        ID: name='__nesc_result' (at pp.c:16097)
        FuncCall:  (at None)
          ID: name='StateImplP__State__isIdle' (at pp.c:16097)
          ExprList:  (at pp.c:16097)
            Constant: type='int', value='0U' (at pp.c:16097)
      Return:  (at pp.c:16101)
        ID: name='__nesc_result' (at pp.c:16101)
  FuncDef:  (at pp.c:16106)
    Decl: name='CC2420SpiP__Fifo__write', quals=[], storage=['inline', 'static'] (at pp.c:16106)
      FuncDecl: quals=None (at pp.c:16106)
        ParamList:  (at pp.c:16106)
          Decl: name='addr', quals=[], storage=[] (at pp.c:16106)
            TypeDecl: declname='addr', quals=[] (at pp.c:16106)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:16106)
            PtrDecl: quals=[] (at pp.c:16106)
              TypeDecl: declname='data', quals=[] (at pp.c:16106)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:16107)
            TypeDecl: declname='len', quals=[] (at pp.c:16107)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Fifo__write', quals=[] (at pp.c:16106)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:16109)
      Decl: name='status', quals=[], storage=[] (at pp.c:16111)
        TypeDecl: declname='status', quals=[] (at pp.c:16111)
          IdentifierType: names=['uint8_t'] (at None)
        Constant: type='int', value='0' (at pp.c:16111)
      Compound:  (at pp.c:16113)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:16113)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:16113)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:16113)
        Compound:  (at pp.c:16115)
          If:  (at pp.c:16116)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__WorkingState__isIdle' (at pp.c:16116)
            Compound:  (at pp.c:16116)
              Compound:  (at pp.c:16117)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:16118)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:16118)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='status' (at pp.c:16120)
                Compound:  (at pp.c:16122)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:16124)
                    ExprList:  (at pp.c:16124)
                      ID: name='__nesc_atomic' (at pp.c:16124)
                  Return:  (at pp.c:16126)
                    ID: name='__nesc_temp' (at pp.c:16126)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:16132)
          ExprList:  (at pp.c:16132)
            ID: name='__nesc_atomic' (at pp.c:16132)
      Assignment: op='=' (at pp.c:16134)
        ID: name='CC2420SpiP__m_addr' (at pp.c:16134)
        ID: name='addr' (at pp.c:16134)
      Assignment: op='=' (at pp.c:16136)
        ID: name='status' (at pp.c:16136)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__SpiByte__write' (at pp.c:16136)
          ExprList:  (at pp.c:16136)
            ID: name='CC2420SpiP__m_addr' (at pp.c:16136)
      FuncCall:  (at None)
        ID: name='CC2420SpiP__SpiPacket__send' (at pp.c:16137)
        ExprList:  (at pp.c:16137)
          ID: name='data' (at pp.c:16137)
          Cast:  (at None)
            Typename: quals=[] (at None)
              PtrDecl: quals=[] (at pp.c:16137)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['void'] (at None)
            Constant: type='int', value='0' (at pp.c:16137)
          ID: name='len' (at pp.c:16137)
      Return:  (at pp.c:16139)
        ID: name='status' (at pp.c:16139)
  FuncDef:  (at pp.c:16143)
    Decl: name='CC2420TransmitP__TXFIFO__write', quals=[], storage=['static', 'inline'] (at pp.c:16143)
      FuncDecl: quals=None (at pp.c:16143)
        ParamList:  (at pp.c:16143)
          Decl: name='data', quals=[], storage=[] (at pp.c:16143)
            PtrDecl: quals=[] (at pp.c:16143)
              TypeDecl: declname='data', quals=[] (at pp.c:16143)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='length', quals=[], storage=[] (at pp.c:16143)
            TypeDecl: declname='length', quals=[] (at pp.c:16143)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__TXFIFO__write', quals=[] (at pp.c:16143)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:16143)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16145)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16145)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16149)
        ID: name='__nesc_result' (at pp.c:16149)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Fifo__write' (at pp.c:16149)
          ExprList:  (at pp.c:16149)
            ID: name='CC2420_TXFIFO' (at pp.c:16149)
            ID: name='data' (at pp.c:16149)
            ID: name='length' (at pp.c:16149)
      Return:  (at pp.c:16153)
        ID: name='__nesc_result' (at pp.c:16153)
  FuncDef:  (at pp.c:16158)
    Decl: name='HplMsp430Usart0P__Usart__enableRxIntr', quals=[], storage=['inline', 'static'] (at pp.c:16158)
      FuncDecl: quals=None (at pp.c:16158)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__enableRxIntr', quals=[] (at pp.c:16158)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16160)
      Compound:  (at pp.c:16161)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:16161)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:16161)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:16161)
        Compound:  (at pp.c:16163)
          Assignment: op='&=' (at pp.c:16164)
            ID: name='HplMsp430Usart0P__IFG1' (at pp.c:16164)
            UnaryOp: op='~' (at pp.c:16164)
              BinaryOp: op='<<' (at pp.c:16164)
                Constant: type='int', value='1' (at pp.c:16164)
                Constant: type='int', value='6' (at pp.c:16164)
          Assignment: op='|=' (at pp.c:16165)
            ID: name='HplMsp430Usart0P__IE1' (at pp.c:16165)
            BinaryOp: op='<<' (at pp.c:16165)
              Constant: type='int', value='1' (at pp.c:16165)
              Constant: type='int', value='6' (at pp.c:16165)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:16168)
          ExprList:  (at pp.c:16168)
            ID: name='__nesc_atomic' (at pp.c:16168)
  FuncDef:  (at pp.c:16172)
    Decl: name='Msp430SpiNoDmaP__0__Usart__enableRxIntr', quals=[], storage=['static', 'inline'] (at pp.c:16172)
      FuncDecl: quals=None (at pp.c:16172)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__enableRxIntr', quals=[] (at pp.c:16172)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16172)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Usart__enableRxIntr' (at pp.c:16174)
  FuncDef:  (at pp.c:16179)
    Decl: name='Msp430SpiNoDmaP__0__signalDone_task__postTask', quals=[], storage=['static', 'inline'] (at pp.c:16179)
      FuncDecl: quals=None (at pp.c:16179)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__signalDone_task__postTask', quals=[] (at pp.c:16179)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16179)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16181)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16181)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16185)
        ID: name='__nesc_result' (at pp.c:16185)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:16185)
          ExprList:  (at pp.c:16185)
            ID: name='Msp430SpiNoDmaP__0__signalDone_task' (at pp.c:16185)
      Return:  (at pp.c:16189)
        ID: name='__nesc_result' (at pp.c:16189)
  FuncDef:  (at pp.c:16194)
    Decl: name='AlarmToTimerC__0__Alarm__startAt', quals=[], storage=['static', 'inline'] (at pp.c:16194)
      FuncDecl: quals=None (at pp.c:16194)
        ParamList:  (at pp.c:16194)
          Decl: name='t0', quals=[], storage=[] (at pp.c:16194)
            TypeDecl: declname='t0', quals=[] (at pp.c:16194)
              IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:16194)
            TypeDecl: declname='dt', quals=[] (at pp.c:16194)
              IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Alarm__startAt', quals=[] (at pp.c:16194)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16194)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__1__Alarm__startAt' (at pp.c:16196)
        ExprList:  (at pp.c:16196)
          ID: name='t0' (at pp.c:16196)
          ID: name='dt' (at pp.c:16196)
  FuncDef:  (at pp.c:16201)
    Decl: name='AlarmToTimerC__0__start', quals=[], storage=['inline', 'static'] (at pp.c:16201)
      FuncDecl: quals=None (at pp.c:16201)
        ParamList:  (at pp.c:16201)
          Decl: name='t0', quals=[], storage=[] (at pp.c:16201)
            TypeDecl: declname='t0', quals=[] (at pp.c:16201)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:16201)
            TypeDecl: declname='dt', quals=[] (at pp.c:16201)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='oneshot', quals=[], storage=[] (at pp.c:16201)
            TypeDecl: declname='oneshot', quals=[] (at pp.c:16201)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__start', quals=[] (at pp.c:16201)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16202)
      Assignment: op='=' (at pp.c:16203)
        ID: name='AlarmToTimerC__0__m_dt' (at pp.c:16203)
        ID: name='dt' (at pp.c:16203)
      Assignment: op='=' (at pp.c:16204)
        ID: name='AlarmToTimerC__0__m_oneshot' (at pp.c:16204)
        ID: name='oneshot' (at pp.c:16204)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Alarm__startAt' (at pp.c:16205)
        ExprList:  (at pp.c:16205)
          ID: name='t0' (at pp.c:16205)
          ID: name='dt' (at pp.c:16205)
  FuncDef:  (at pp.c:16209)
    Decl: name='AlarmToTimerC__0__Timer__startOneShotAt', quals=[], storage=['inline', 'static'] (at pp.c:16209)
      FuncDecl: quals=None (at pp.c:16209)
        ParamList:  (at pp.c:16209)
          Decl: name='t0', quals=[], storage=[] (at pp.c:16209)
            TypeDecl: declname='t0', quals=[] (at pp.c:16209)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:16209)
            TypeDecl: declname='dt', quals=[] (at pp.c:16209)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Timer__startOneShotAt', quals=[] (at pp.c:16209)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16210)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__start' (at pp.c:16212)
        ExprList:  (at pp.c:16212)
          ID: name='t0' (at pp.c:16212)
          ID: name='dt' (at pp.c:16212)
          ID: name='TRUE' (at pp.c:16212)
  FuncDef:  (at pp.c:16216)
    Decl: name='VirtualizeTimerC__0__TimerFrom__startOneShotAt', quals=[], storage=['static', 'inline'] (at pp.c:16216)
      FuncDecl: quals=None (at pp.c:16216)
        ParamList:  (at pp.c:16216)
          Decl: name='t0', quals=[], storage=[] (at pp.c:16216)
            TypeDecl: declname='t0', quals=[] (at pp.c:16216)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:16216)
            TypeDecl: declname='dt', quals=[] (at pp.c:16216)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__startOneShotAt', quals=[] (at pp.c:16216)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16216)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Timer__startOneShotAt' (at pp.c:16218)
        ExprList:  (at pp.c:16218)
          ID: name='t0' (at pp.c:16218)
          ID: name='dt' (at pp.c:16218)
  FuncDef:  (at pp.c:16223)
    Decl: name='Msp430AlarmC__1__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:16223)
      FuncDecl: quals=None (at pp.c:16223)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Alarm__stop', quals=[] (at pp.c:16223)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16224)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Msp430TimerControl__disableEvents' (at pp.c:16225)
  FuncDef:  (at pp.c:16229)
    Decl: name='TransformAlarmC__1__AlarmFrom__stop', quals=[], storage=['static', 'inline'] (at pp.c:16229)
      FuncDecl: quals=None (at pp.c:16229)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__AlarmFrom__stop', quals=[] (at pp.c:16229)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16229)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Alarm__stop' (at pp.c:16231)
  FuncDef:  (at pp.c:16236)
    Decl: name='TransformAlarmC__1__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:16236)
      FuncDecl: quals=None (at pp.c:16236)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__Alarm__stop', quals=[] (at pp.c:16236)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16237)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__1__AlarmFrom__stop' (at pp.c:16238)
  FuncDef:  (at pp.c:16242)
    Decl: name='AlarmToTimerC__0__Alarm__stop', quals=[], storage=['static', 'inline'] (at pp.c:16242)
      FuncDecl: quals=None (at pp.c:16242)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Alarm__stop', quals=[] (at pp.c:16242)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16242)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__1__Alarm__stop' (at pp.c:16244)
  FuncDef:  (at pp.c:16249)
    Decl: name='AlarmToTimerC__0__Timer__stop', quals=[], storage=['inline', 'static'] (at pp.c:16249)
      FuncDecl: quals=None (at pp.c:16249)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Timer__stop', quals=[] (at pp.c:16249)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16250)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Alarm__stop' (at pp.c:16252)
  FuncDef:  (at pp.c:16256)
    Decl: name='VirtualizeTimerC__0__TimerFrom__stop', quals=[], storage=['static', 'inline'] (at pp.c:16256)
      FuncDecl: quals=None (at pp.c:16256)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__stop', quals=[] (at pp.c:16256)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16256)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Timer__stop' (at pp.c:16258)
  FuncDef:  (at pp.c:16263)
    Decl: name='TransformAlarmC__1__Counter__get', quals=[], storage=['static', 'inline'] (at pp.c:16263)
      FuncDecl: quals=None (at pp.c:16263)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__Counter__get', quals=[] (at pp.c:16263)
          IdentifierType: names=['TransformAlarmC__1__Counter__size_type'] (at None)
    Compound:  (at pp.c:16263)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16265)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16265)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16269)
        ID: name='__nesc_result' (at pp.c:16269)
        FuncCall:  (at None)
          ID: name='TransformCounterC__1__Counter__get' (at pp.c:16269)
      Return:  (at pp.c:16273)
        ID: name='__nesc_result' (at pp.c:16273)
  FuncDef:  (at pp.c:16278)
    Decl: name='TransformAlarmC__1__Alarm__getNow', quals=[], storage=['inline', 'static'] (at pp.c:16278)
      FuncDecl: quals=None (at pp.c:16278)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__Alarm__getNow', quals=[] (at pp.c:16278)
          IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
    Compound:  (at pp.c:16279)
      Return:  (at pp.c:16280)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__1__Counter__get' (at pp.c:16280)
  FuncDef:  (at pp.c:16284)
    Decl: name='AlarmToTimerC__0__Alarm__getNow', quals=[], storage=['static', 'inline'] (at pp.c:16284)
      FuncDecl: quals=None (at pp.c:16284)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Alarm__getNow', quals=[] (at pp.c:16284)
          IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
    Compound:  (at pp.c:16284)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16286)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16286)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16290)
        ID: name='__nesc_result' (at pp.c:16290)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__1__Alarm__getNow' (at pp.c:16290)
      Return:  (at pp.c:16294)
        ID: name='__nesc_result' (at pp.c:16294)
  FuncDef:  (at pp.c:16299)
    Decl: name='AlarmToTimerC__0__Timer__getNow', quals=[], storage=['inline', 'static'] (at pp.c:16299)
      FuncDecl: quals=None (at pp.c:16299)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Timer__getNow', quals=[] (at pp.c:16299)
          IdentifierType: names=['uint32_t'] (at None)
    Compound:  (at pp.c:16300)
      Return:  (at pp.c:16302)
        FuncCall:  (at None)
          ID: name='AlarmToTimerC__0__Alarm__getNow' (at pp.c:16302)
  FuncDef:  (at pp.c:16306)
    Decl: name='VirtualizeTimerC__0__TimerFrom__getNow', quals=[], storage=['static', 'inline'] (at pp.c:16306)
      FuncDecl: quals=None (at pp.c:16306)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__getNow', quals=[] (at pp.c:16306)
          IdentifierType: names=['uint32_t'] (at None)
    Compound:  (at pp.c:16306)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16308)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16308)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16312)
        ID: name='__nesc_result' (at pp.c:16312)
        FuncCall:  (at None)
          ID: name='AlarmToTimerC__0__Timer__getNow' (at pp.c:16312)
      Return:  (at pp.c:16316)
        ID: name='__nesc_result' (at pp.c:16316)
  FuncDef:  (at pp.c:16321)
    Decl: name='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[], storage=['inline', 'static'] (at pp.c:16321)
      FuncDecl: quals=None (at pp.c:16321)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[] (at pp.c:16321)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16322)
      Decl: name='now', quals=[], storage=[] (at pp.c:16327)
        TypeDecl: declname='now', quals=[] (at pp.c:16327)
          IdentifierType: names=['uint32_t'] (at None)
        FuncCall:  (at None)
          ID: name='VirtualizeTimerC__0__TimerFrom__getNow' (at pp.c:16327)
      Decl: name='min_remaining', quals=[], storage=[] (at pp.c:16328)
        TypeDecl: declname='min_remaining', quals=[] (at pp.c:16328)
          IdentifierType: names=['int32_t'] (at None)
        BinaryOp: op='-' (at pp.c:16328)
          BinaryOp: op='<<' (at pp.c:16328)
            Constant: type='int', value='1UL' (at pp.c:16328)
            Constant: type='int', value='31' (at pp.c:16328)
          Constant: type='int', value='1' (at pp.c:16328)
      Decl: name='min_remaining_isset', quals=[], storage=[] (at pp.c:16329)
        TypeDecl: declname='min_remaining_isset', quals=[] (at pp.c:16329)
          IdentifierType: names=['bool'] (at None)
        ID: name='FALSE' (at pp.c:16329)
      Decl: name='num', quals=[], storage=[] (at pp.c:16330)
        TypeDecl: declname='num', quals=[] (at pp.c:16330)
          IdentifierType: names=['uint8_t'] (at None)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__TimerFrom__stop' (at pp.c:16332)
      For:  (at pp.c:16334)
        Assignment: op='=' (at pp.c:16334)
          ID: name='num' (at pp.c:16334)
          Constant: type='int', value='0' (at pp.c:16334)
        BinaryOp: op='<' (at pp.c:16334)
          ID: name='num' (at pp.c:16334)
          ID: name='VirtualizeTimerC__0__NUM_TIMERS' (at pp.c:16334)
        UnaryOp: op='p++' (at pp.c:16334)
          ID: name='num' (at pp.c:16334)
        Compound:  (at pp.c:16335)
          Decl: name='timer', quals=[], storage=[] (at pp.c:16336)
            PtrDecl: quals=[] (at pp.c:16336)
              TypeDecl: declname='timer', quals=[] (at pp.c:16336)
                IdentifierType: names=['VirtualizeTimerC__0__Timer_t'] (at None)
            UnaryOp: op='&' (at pp.c:16336)
              ArrayRef:  (at pp.c:16336)
                ID: name='VirtualizeTimerC__0__m_timers' (at pp.c:16336)
                ID: name='num' (at pp.c:16336)
          If:  (at pp.c:16338)
            StructRef: type='->' (at pp.c:16338)
              ID: name='timer' (at pp.c:16338)
              ID: name='isrunning' (at pp.c:16338)
            Compound:  (at pp.c:16339)
              Decl: name='elapsed', quals=[], storage=[] (at pp.c:16340)
                TypeDecl: declname='elapsed', quals=[] (at pp.c:16340)
                  IdentifierType: names=['uint32_t'] (at None)
                BinaryOp: op='-' (at pp.c:16340)
                  ID: name='now' (at pp.c:16340)
                  StructRef: type='->' (at pp.c:16340)
                    ID: name='timer' (at pp.c:16340)
                    ID: name='t0' (at pp.c:16340)
              Decl: name='remaining', quals=[], storage=[] (at pp.c:16341)
                TypeDecl: declname='remaining', quals=[] (at pp.c:16341)
                  IdentifierType: names=['int32_t'] (at None)
                BinaryOp: op='-' (at pp.c:16341)
                  StructRef: type='->' (at pp.c:16341)
                    ID: name='timer' (at pp.c:16341)
                    ID: name='dt' (at pp.c:16341)
                  ID: name='elapsed' (at pp.c:16341)
              If:  (at pp.c:16343)
                BinaryOp: op='<' (at pp.c:16343)
                  ID: name='remaining' (at pp.c:16343)
                  ID: name='min_remaining' (at pp.c:16343)
                Compound:  (at pp.c:16344)
                  Assignment: op='=' (at pp.c:16345)
                    ID: name='min_remaining' (at pp.c:16345)
                    ID: name='remaining' (at pp.c:16345)
                  Assignment: op='=' (at pp.c:16346)
                    ID: name='min_remaining_isset' (at pp.c:16346)
                    ID: name='TRUE' (at pp.c:16346)
      If:  (at pp.c:16351)
        ID: name='min_remaining_isset' (at pp.c:16351)
        Compound:  (at pp.c:16352)
          If:  (at pp.c:16353)
            BinaryOp: op='<=' (at pp.c:16353)
              ID: name='min_remaining' (at pp.c:16353)
              Constant: type='int', value='0' (at pp.c:16353)
            Compound:  (at pp.c:16353)
              FuncCall:  (at None)
                ID: name='VirtualizeTimerC__0__fireTimers' (at pp.c:16354)
                ExprList:  (at pp.c:16354)
                  ID: name='now' (at pp.c:16354)
            Compound:  (at pp.c:16356)
              FuncCall:  (at None)
                ID: name='VirtualizeTimerC__0__TimerFrom__startOneShotAt' (at pp.c:16358)
                ExprList:  (at pp.c:16358)
                  ID: name='now' (at pp.c:16358)
                  ID: name='min_remaining' (at pp.c:16358)
  FuncDef:  (at pp.c:16364)
    Decl: name='VirtualizeTimerC__0__Timer__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:16364)
      FuncDecl: quals=None (at pp.c:16364)
        ParamList:  (at pp.c:16364)
          Decl: name='num', quals=[], storage=[] (at pp.c:16364)
            TypeDecl: declname='num', quals=[] (at pp.c:16364)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__Timer__default__fired', quals=[] (at pp.c:16364)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16365)
  FuncDef:  (at pp.c:16369)
    Decl: name='VirtualizeTimerC__0__Timer__fired', quals=[], storage=['static', 'inline'] (at pp.c:16369)
      FuncDecl: quals=None (at pp.c:16369)
        ParamList:  (at pp.c:16369)
          Decl: name='arg_0x1023a62f8', quals=[], storage=[] (at pp.c:16369)
            TypeDecl: declname='arg_0x1023a62f8', quals=[] (at pp.c:16369)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__Timer__fired', quals=[] (at pp.c:16369)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16369)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__Timer__default__fired' (at pp.c:16371)
        ExprList:  (at pp.c:16371)
          ID: name='arg_0x1023a62f8' (at pp.c:16371)
  FuncDef:  (at pp.c:16376)
    Decl: name='VirtualizeTimerC__0__updateFromTimer__postTask', quals=[], storage=['static', 'inline'] (at pp.c:16376)
      FuncDecl: quals=None (at pp.c:16376)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__updateFromTimer__postTask', quals=[] (at pp.c:16376)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16376)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16378)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16378)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16382)
        ID: name='__nesc_result' (at pp.c:16382)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:16382)
          ExprList:  (at pp.c:16382)
            ID: name='VirtualizeTimerC__0__updateFromTimer' (at pp.c:16382)
      Return:  (at pp.c:16386)
        ID: name='__nesc_result' (at pp.c:16386)
  FuncDef:  (at pp.c:16391)
    Decl: name='VirtualizeTimerC__0__TimerFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:16391)
      FuncDecl: quals=None (at pp.c:16391)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__fired', quals=[] (at pp.c:16391)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16392)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__fireTimers' (at pp.c:16393)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='VirtualizeTimerC__0__TimerFrom__getNow' (at pp.c:16393)
  FuncDef:  (at pp.c:16397)
    Decl: name='AlarmToTimerC__0__Timer__fired', quals=[], storage=['static', 'inline'] (at pp.c:16397)
      FuncDecl: quals=None (at pp.c:16397)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Timer__fired', quals=[] (at pp.c:16397)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16397)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__TimerFrom__fired' (at pp.c:16399)
  FuncDef:  (at pp.c:16404)
    Decl: name='TransformAlarmC__1__Alarm__getAlarm', quals=[], storage=['inline', 'static'] (at pp.c:16404)
      FuncDecl: quals=None (at pp.c:16404)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__Alarm__getAlarm', quals=[] (at pp.c:16404)
          IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
    Compound:  (at pp.c:16405)
      Compound:  (at pp.c:16406)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:16406)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:16406)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:16406)
        Compound:  (at pp.c:16408)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:16409)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:16409)
              IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
            BinaryOp: op='+' (at pp.c:16411)
              ID: name='TransformAlarmC__1__m_t0' (at pp.c:16411)
              ID: name='TransformAlarmC__1__m_dt' (at pp.c:16411)
          Compound:  (at pp.c:16413)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:16415)
              ExprList:  (at pp.c:16415)
                ID: name='__nesc_atomic' (at pp.c:16415)
            Return:  (at pp.c:16417)
              ID: name='__nesc_temp' (at pp.c:16417)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:16421)
          ExprList:  (at pp.c:16421)
            ID: name='__nesc_atomic' (at pp.c:16421)
  FuncDef:  (at pp.c:16425)
    Decl: name='AlarmToTimerC__0__Alarm__getAlarm', quals=[], storage=['static', 'inline'] (at pp.c:16425)
      FuncDecl: quals=None (at pp.c:16425)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Alarm__getAlarm', quals=[] (at pp.c:16425)
          IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
    Compound:  (at pp.c:16425)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16427)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16427)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16431)
        ID: name='__nesc_result' (at pp.c:16431)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__1__Alarm__getAlarm' (at pp.c:16431)
      Return:  (at pp.c:16435)
        ID: name='__nesc_result' (at pp.c:16435)
  FuncDef:  (at pp.c:16440)
    Decl: name='AlarmToTimerC__0__fired__runTask', quals=[], storage=['inline', 'static'] (at pp.c:16440)
      FuncDecl: quals=None (at pp.c:16440)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__fired__runTask', quals=[] (at pp.c:16440)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16441)
      If:  (at pp.c:16442)
        BinaryOp: op='==' (at pp.c:16442)
          ID: name='AlarmToTimerC__0__m_oneshot' (at pp.c:16442)
          ID: name='FALSE' (at pp.c:16442)
        Compound:  (at pp.c:16442)
          FuncCall:  (at None)
            ID: name='AlarmToTimerC__0__start' (at pp.c:16443)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='AlarmToTimerC__0__Alarm__getAlarm' (at pp.c:16443)
              ID: name='AlarmToTimerC__0__m_dt' (at pp.c:16443)
              ID: name='FALSE' (at pp.c:16443)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Timer__fired' (at pp.c:16446)
  FuncDef:  (at pp.c:16450)
    Decl: name='CC2420TinyosNetworkP__CC2420PacketBody__getHeader', quals=[], storage=['static', 'inline'] (at pp.c:16450)
      FuncDecl: quals=None (at pp.c:16450)
        ParamList:  (at pp.c:16450)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16450)
            PtrDecl: quals=[] (at pp.c:16450)
              TypeDecl: declname='msg', quals=[] (at pp.c:16450)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:16450)
          TypeDecl: declname='CC2420TinyosNetworkP__CC2420PacketBody__getHeader', quals=[] (at pp.c:16450)
            IdentifierType: names=['cc2420_header_t'] (at None)
    Compound:  (at pp.c:16450)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16452)
        PtrDecl: quals=[] (at pp.c:16452)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16452)
            Struct: name='cc2420_header_t', packed=False (at pp.c:16452)
      Assignment: op='=' (at pp.c:16456)
        ID: name='__nesc_result' (at pp.c:16456)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getHeader' (at pp.c:16456)
          ExprList:  (at pp.c:16456)
            ID: name='msg' (at pp.c:16456)
      Return:  (at pp.c:16460)
        ID: name='__nesc_result' (at pp.c:16460)
  FuncDef:  (at pp.c:16465)
    Decl: name='CC2420TinyosNetworkP__BareSend__getPayload', quals=[], storage=['inline', 'static'] (at pp.c:16465)
      FuncDecl: quals=None (at pp.c:16465)
        ParamList:  (at pp.c:16465)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16465)
            PtrDecl: quals=[] (at pp.c:16465)
              TypeDecl: declname='msg', quals=[] (at pp.c:16465)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:16465)
            TypeDecl: declname='len', quals=[] (at pp.c:16465)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:16465)
          TypeDecl: declname='CC2420TinyosNetworkP__BareSend__getPayload', quals=[] (at pp.c:16465)
            IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16467)
      Decl: name='hdr', quals=[], storage=[] (at pp.c:16469)
        PtrDecl: quals=[] (at pp.c:16469)
          TypeDecl: declname='hdr', quals=[] (at pp.c:16469)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__CC2420PacketBody__getHeader' (at pp.c:16469)
          ExprList:  (at pp.c:16469)
            ID: name='msg' (at pp.c:16469)
      Return:  (at pp.c:16472)
        ID: name='hdr' (at pp.c:16472)
  FuncDef:  (at pp.c:16476)
    Decl: name='CC2420TinyosNetworkP__BareReceive__default__receive', quals=[], storage=['inline', 'static'] (at pp.c:16476)
      FuncDecl: quals=None (at pp.c:16476)
        ParamList:  (at pp.c:16476)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16476)
            PtrDecl: quals=[] (at pp.c:16476)
              TypeDecl: declname='msg', quals=[] (at pp.c:16476)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:16476)
            PtrDecl: quals=[] (at pp.c:16476)
              TypeDecl: declname='payload', quals=[] (at pp.c:16476)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:16476)
            TypeDecl: declname='len', quals=[] (at pp.c:16476)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:16476)
          TypeDecl: declname='CC2420TinyosNetworkP__BareReceive__default__receive', quals=[] (at pp.c:16476)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:16478)
      Return:  (at pp.c:16479)
        ID: name='msg' (at pp.c:16479)
  FuncDef:  (at pp.c:16483)
    Decl: name='CC2420TinyosNetworkP__BareReceive__receive', quals=[], storage=['static', 'inline'] (at pp.c:16483)
      FuncDecl: quals=None (at pp.c:16483)
        ParamList:  (at pp.c:16483)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16483)
            PtrDecl: quals=[] (at pp.c:16483)
              TypeDecl: declname='msg', quals=[] (at pp.c:16483)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:16483)
            PtrDecl: quals=[] (at pp.c:16483)
              TypeDecl: declname='payload', quals=[] (at pp.c:16483)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:16483)
            TypeDecl: declname='len', quals=[] (at pp.c:16483)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:16483)
          TypeDecl: declname='CC2420TinyosNetworkP__BareReceive__receive', quals=[] (at pp.c:16483)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:16483)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16485)
        PtrDecl: quals=[] (at pp.c:16485)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16485)
            Struct: name='message_t', packed=False (at pp.c:16485)
      Assignment: op='=' (at pp.c:16489)
        ID: name='__nesc_result' (at pp.c:16489)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__BareReceive__default__receive' (at pp.c:16489)
          ExprList:  (at pp.c:16489)
            ID: name='msg' (at pp.c:16489)
            ID: name='payload' (at pp.c:16489)
            ID: name='len' (at pp.c:16489)
      Return:  (at pp.c:16493)
        ID: name='__nesc_result' (at pp.c:16493)
  FuncDef:  (at pp.c:16498)
    Decl: name='BaseStationP__RadioSnoop__receive', quals=[], storage=['inline', 'static'] (at pp.c:16498)
      FuncDecl: quals=None (at pp.c:16498)
        ParamList:  (at pp.c:16498)
          Decl: name='id', quals=[], storage=[] (at pp.c:16498)
            TypeDecl: declname='id', quals=[] (at pp.c:16498)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16498)
            PtrDecl: quals=[] (at pp.c:16498)
              TypeDecl: declname='msg', quals=[] (at pp.c:16498)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:16499)
            PtrDecl: quals=[] (at pp.c:16499)
              TypeDecl: declname='payload', quals=[] (at pp.c:16499)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:16500)
            TypeDecl: declname='len', quals=[] (at pp.c:16500)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:16498)
          TypeDecl: declname='BaseStationP__RadioSnoop__receive', quals=[] (at pp.c:16498)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:16502)
      Return:  (at pp.c:16503)
        FuncCall:  (at None)
          ID: name='BaseStationP__receive' (at pp.c:16503)
          ExprList:  (at pp.c:16503)
            ID: name='msg' (at pp.c:16503)
            ID: name='payload' (at pp.c:16503)
            ID: name='len' (at pp.c:16503)
  FuncDef:  (at pp.c:16507)
    Decl: name='CC2420ActiveMessageP__Snoop__receive', quals=[], storage=['static', 'inline'] (at pp.c:16507)
      FuncDecl: quals=None (at pp.c:16507)
        ParamList:  (at pp.c:16507)
          Decl: name='arg_0x102536480', quals=[], storage=[] (at pp.c:16507)
            TypeDecl: declname='arg_0x102536480', quals=[] (at pp.c:16507)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16507)
            PtrDecl: quals=[] (at pp.c:16507)
              TypeDecl: declname='msg', quals=[] (at pp.c:16507)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:16507)
            PtrDecl: quals=[] (at pp.c:16507)
              TypeDecl: declname='payload', quals=[] (at pp.c:16507)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:16507)
            TypeDecl: declname='len', quals=[] (at pp.c:16507)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:16507)
          TypeDecl: declname='CC2420ActiveMessageP__Snoop__receive', quals=[] (at pp.c:16507)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:16507)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16509)
        PtrDecl: quals=[] (at pp.c:16509)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16509)
            Struct: name='message_t', packed=False (at pp.c:16509)
      Assignment: op='=' (at pp.c:16513)
        ID: name='__nesc_result' (at pp.c:16513)
        FuncCall:  (at None)
          ID: name='BaseStationP__RadioSnoop__receive' (at pp.c:16513)
          ExprList:  (at pp.c:16513)
            ID: name='arg_0x102536480' (at pp.c:16513)
            ID: name='msg' (at pp.c:16513)
            ID: name='payload' (at pp.c:16513)
            ID: name='len' (at pp.c:16513)
      Return:  (at pp.c:16517)
        ID: name='__nesc_result' (at pp.c:16517)
  FuncDef:  (at pp.c:16522)
    Decl: name='BaseStationP__RadioReceive__receive', quals=[], storage=['inline', 'static'] (at pp.c:16522)
      FuncDecl: quals=None (at pp.c:16522)
        ParamList:  (at pp.c:16522)
          Decl: name='id', quals=[], storage=[] (at pp.c:16522)
            TypeDecl: declname='id', quals=[] (at pp.c:16522)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16522)
            PtrDecl: quals=[] (at pp.c:16522)
              TypeDecl: declname='msg', quals=[] (at pp.c:16522)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:16523)
            PtrDecl: quals=[] (at pp.c:16523)
              TypeDecl: declname='payload', quals=[] (at pp.c:16523)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:16524)
            TypeDecl: declname='len', quals=[] (at pp.c:16524)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:16522)
          TypeDecl: declname='BaseStationP__RadioReceive__receive', quals=[] (at pp.c:16522)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:16526)
      Return:  (at pp.c:16527)
        FuncCall:  (at None)
          ID: name='BaseStationP__receive' (at pp.c:16527)
          ExprList:  (at pp.c:16527)
            ID: name='msg' (at pp.c:16527)
            ID: name='payload' (at pp.c:16527)
            ID: name='len' (at pp.c:16527)
  FuncDef:  (at pp.c:16531)
    Decl: name='CC2420ActiveMessageP__Receive__receive', quals=[], storage=['static', 'inline'] (at pp.c:16531)
      FuncDecl: quals=None (at pp.c:16531)
        ParamList:  (at pp.c:16531)
          Decl: name='arg_0x102538908', quals=[], storage=[] (at pp.c:16531)
            TypeDecl: declname='arg_0x102538908', quals=[] (at pp.c:16531)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16531)
            PtrDecl: quals=[] (at pp.c:16531)
              TypeDecl: declname='msg', quals=[] (at pp.c:16531)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:16531)
            PtrDecl: quals=[] (at pp.c:16531)
              TypeDecl: declname='payload', quals=[] (at pp.c:16531)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:16531)
            TypeDecl: declname='len', quals=[] (at pp.c:16531)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:16531)
          TypeDecl: declname='CC2420ActiveMessageP__Receive__receive', quals=[] (at pp.c:16531)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:16531)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16533)
        PtrDecl: quals=[] (at pp.c:16533)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16533)
            Struct: name='message_t', packed=False (at pp.c:16533)
      Assignment: op='=' (at pp.c:16537)
        ID: name='__nesc_result' (at pp.c:16537)
        FuncCall:  (at None)
          ID: name='BaseStationP__RadioReceive__receive' (at pp.c:16537)
          ExprList:  (at pp.c:16537)
            ID: name='arg_0x102538908' (at pp.c:16537)
            ID: name='msg' (at pp.c:16537)
            ID: name='payload' (at pp.c:16537)
            ID: name='len' (at pp.c:16537)
      Return:  (at pp.c:16541)
        ID: name='__nesc_result' (at pp.c:16541)
  FuncDef:  (at pp.c:16546)
    Decl: name='ActiveMessageAddressC__ActiveMessageAddress__amAddress', quals=[], storage=['inline', 'static'] (at pp.c:16546)
      FuncDecl: quals=None (at pp.c:16546)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ActiveMessageAddressC__ActiveMessageAddress__amAddress', quals=[] (at pp.c:16546)
          IdentifierType: names=['am_addr_t'] (at None)
    Compound:  (at pp.c:16548)
      Return:  (at pp.c:16549)
        FuncCall:  (at None)
          ID: name='ActiveMessageAddressC__amAddress' (at pp.c:16549)
  FuncDef:  (at pp.c:16553)
    Decl: name='CC2420ActiveMessageP__ActiveMessageAddress__amAddress', quals=[], storage=['static', 'inline'] (at pp.c:16553)
      FuncDecl: quals=None (at pp.c:16553)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__ActiveMessageAddress__amAddress', quals=[] (at pp.c:16553)
          IdentifierType: names=['am_addr_t'] (at None)
    Compound:  (at pp.c:16553)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16555)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16555)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16559)
        ID: name='__nesc_result' (at pp.c:16559)
        FuncCall:  (at None)
          ID: name='ActiveMessageAddressC__ActiveMessageAddress__amAddress' (at pp.c:16559)
      Return:  (at pp.c:16563)
        ID: name='__nesc_result' (at pp.c:16563)
  FuncDef:  (at pp.c:16568)
    Decl: name='CC2420ActiveMessageP__AMPacket__address', quals=[], storage=['inline', 'static'] (at pp.c:16568)
      FuncDecl: quals=None (at pp.c:16568)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__AMPacket__address', quals=[] (at pp.c:16568)
          IdentifierType: names=['am_addr_t'] (at None)
    Compound:  (at pp.c:16570)
      Return:  (at pp.c:16571)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__ActiveMessageAddress__amAddress' (at pp.c:16571)
  FuncDef:  (at pp.c:16575)
    Decl: name='CC2420ActiveMessageP__AMPacket__isForMe', quals=[], storage=['inline', 'static'] (at pp.c:16575)
      FuncDecl: quals=None (at pp.c:16575)
        ParamList:  (at pp.c:16575)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:16575)
            PtrDecl: quals=[] (at pp.c:16575)
              TypeDecl: declname='amsg', quals=[] (at pp.c:16575)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__AMPacket__isForMe', quals=[] (at pp.c:16575)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:16577)
      Return:  (at pp.c:16578)
        BinaryOp: op='||' (at None)
          BinaryOp: op='==' (at None)
            FuncCall:  (at None)
              ID: name='CC2420ActiveMessageP__AMPacket__destination' (at pp.c:16578)
              ExprList:  (at pp.c:16578)
                ID: name='amsg' (at pp.c:16578)
            FuncCall:  (at None)
              ID: name='CC2420ActiveMessageP__AMPacket__address' (at pp.c:16578)
          BinaryOp: op='==' (at None)
            FuncCall:  (at None)
              ID: name='CC2420ActiveMessageP__AMPacket__destination' (at pp.c:16579)
              ExprList:  (at pp.c:16579)
                ID: name='amsg' (at pp.c:16579)
            ID: name='AM_BROADCAST_ADDR' (at pp.c:16579)
  FuncDef:  (at pp.c:16583)
    Decl: name='CC2420ActiveMessageP__SubReceive__receive', quals=[], storage=['inline', 'static'] (at pp.c:16583)
      FuncDecl: quals=None (at pp.c:16583)
        ParamList:  (at pp.c:16583)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16583)
            PtrDecl: quals=[] (at pp.c:16583)
              TypeDecl: declname='msg', quals=[] (at pp.c:16583)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:16583)
            PtrDecl: quals=[] (at pp.c:16583)
              TypeDecl: declname='payload', quals=[] (at pp.c:16583)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:16583)
            TypeDecl: declname='len', quals=[] (at pp.c:16583)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:16583)
          TypeDecl: declname='CC2420ActiveMessageP__SubReceive__receive', quals=[] (at pp.c:16583)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:16585)
      If:  (at pp.c:16587)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__AMPacket__isForMe' (at pp.c:16587)
          ExprList:  (at pp.c:16587)
            ID: name='msg' (at pp.c:16587)
        Compound:  (at pp.c:16587)
          Return:  (at pp.c:16588)
            FuncCall:  (at None)
              ID: name='CC2420ActiveMessageP__Receive__receive' (at pp.c:16588)
              ExprList:  (at None)
                FuncCall:  (at None)
                  ID: name='CC2420ActiveMessageP__AMPacket__type' (at pp.c:16588)
                  ExprList:  (at pp.c:16588)
                    ID: name='msg' (at pp.c:16588)
                ID: name='msg' (at pp.c:16588)
                ID: name='payload' (at pp.c:16588)
                ID: name='len' (at pp.c:16588)
        Compound:  (at pp.c:16590)
          Return:  (at pp.c:16591)
            FuncCall:  (at None)
              ID: name='CC2420ActiveMessageP__Snoop__receive' (at pp.c:16591)
              ExprList:  (at None)
                FuncCall:  (at None)
                  ID: name='CC2420ActiveMessageP__AMPacket__type' (at pp.c:16591)
                  ExprList:  (at pp.c:16591)
                    ID: name='msg' (at pp.c:16591)
                ID: name='msg' (at pp.c:16591)
                ID: name='payload' (at pp.c:16591)
                ID: name='len' (at pp.c:16591)
  FuncDef:  (at pp.c:16596)
    Decl: name='CC2420TinyosNetworkP__ActiveReceive__receive', quals=[], storage=['static', 'inline'] (at pp.c:16596)
      FuncDecl: quals=None (at pp.c:16596)
        ParamList:  (at pp.c:16596)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16596)
            PtrDecl: quals=[] (at pp.c:16596)
              TypeDecl: declname='msg', quals=[] (at pp.c:16596)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:16596)
            PtrDecl: quals=[] (at pp.c:16596)
              TypeDecl: declname='payload', quals=[] (at pp.c:16596)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:16596)
            TypeDecl: declname='len', quals=[] (at pp.c:16596)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:16596)
          TypeDecl: declname='CC2420TinyosNetworkP__ActiveReceive__receive', quals=[] (at pp.c:16596)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:16596)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16598)
        PtrDecl: quals=[] (at pp.c:16598)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16598)
            Struct: name='message_t', packed=False (at pp.c:16598)
      Assignment: op='=' (at pp.c:16602)
        ID: name='__nesc_result' (at pp.c:16602)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__SubReceive__receive' (at pp.c:16602)
          ExprList:  (at pp.c:16602)
            ID: name='msg' (at pp.c:16602)
            ID: name='payload' (at pp.c:16602)
            ID: name='len' (at pp.c:16602)
      Return:  (at pp.c:16606)
        ID: name='__nesc_result' (at pp.c:16606)
  FuncDef:  (at pp.c:16611)
    Decl: name='CC2420TinyosNetworkP__CC2420PacketBody__getMetadata', quals=[], storage=['static', 'inline'] (at pp.c:16611)
      FuncDecl: quals=None (at pp.c:16611)
        ParamList:  (at pp.c:16611)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16611)
            PtrDecl: quals=[] (at pp.c:16611)
              TypeDecl: declname='msg', quals=[] (at pp.c:16611)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:16611)
          TypeDecl: declname='CC2420TinyosNetworkP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:16611)
            IdentifierType: names=['cc2420_metadata_t'] (at None)
    Compound:  (at pp.c:16611)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16613)
        PtrDecl: quals=[] (at pp.c:16613)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16613)
            Struct: name='cc2420_metadata_t', packed=False (at pp.c:16613)
      Assignment: op='=' (at pp.c:16617)
        ID: name='__nesc_result' (at pp.c:16617)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getMetadata' (at pp.c:16617)
          ExprList:  (at pp.c:16617)
            ID: name='msg' (at pp.c:16617)
      Return:  (at pp.c:16621)
        ID: name='__nesc_result' (at pp.c:16621)
  FuncDef:  (at pp.c:16626)
    Decl: name='CC2420PacketP__CC2420Packet__getNetwork', quals=[], storage=['inline', 'static'] (at pp.c:16626)
      FuncDecl: quals=None (at pp.c:16626)
        ParamList:  (at pp.c:16626)
          Decl: name='p_msg', quals=[], storage=[] (at pp.c:16626)
            PtrDecl: quals=[] (at pp.c:16626)
              TypeDecl: declname='p_msg', quals=[] (at pp.c:16626)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420PacketP__CC2420Packet__getNetwork', quals=[] (at pp.c:16626)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:16628)
      Compound:  (at pp.c:16632)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:16632)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:16632)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:16632)
        Compound:  (at pp.c:16633)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:16634)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:16634)
              IdentifierType: names=['char', 'unsigned'] (at None)
            UnaryOp: op='*' (at None)
              FuncCall:  (at None)
                ID: name='CC2420PacketP__getNetwork' (at pp.c:16636)
                ExprList:  (at pp.c:16636)
                  ID: name='p_msg' (at pp.c:16636)
          Compound:  (at pp.c:16638)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:16640)
              ExprList:  (at pp.c:16640)
                ID: name='__nesc_atomic' (at pp.c:16640)
            Return:  (at pp.c:16642)
              ID: name='__nesc_temp' (at pp.c:16642)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:16646)
          ExprList:  (at pp.c:16646)
            ID: name='__nesc_atomic' (at pp.c:16646)
  FuncDef:  (at pp.c:16650)
    Decl: name='CC2420TinyosNetworkP__CC2420Packet__getNetwork', quals=[], storage=['static', 'inline'] (at pp.c:16650)
      FuncDecl: quals=None (at pp.c:16650)
        ParamList:  (at pp.c:16650)
          Decl: name='p_msg', quals=[], storage=[] (at pp.c:16650)
            PtrDecl: quals=[] (at pp.c:16650)
              TypeDecl: declname='p_msg', quals=[] (at pp.c:16650)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__CC2420Packet__getNetwork', quals=[] (at pp.c:16650)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:16650)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16652)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16652)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16656)
        ID: name='__nesc_result' (at pp.c:16656)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420Packet__getNetwork' (at pp.c:16656)
          ExprList:  (at pp.c:16656)
            ID: name='p_msg' (at pp.c:16656)
      Return:  (at pp.c:16660)
        ID: name='__nesc_result' (at pp.c:16660)
  FuncDef:  (at pp.c:16665)
    Decl: name='CC2420TinyosNetworkP__SubReceive__receive', quals=[], storage=['inline', 'static'] (at pp.c:16665)
      FuncDecl: quals=None (at pp.c:16665)
        ParamList:  (at pp.c:16665)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16665)
            PtrDecl: quals=[] (at pp.c:16665)
              TypeDecl: declname='msg', quals=[] (at pp.c:16665)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:16665)
            PtrDecl: quals=[] (at pp.c:16665)
              TypeDecl: declname='payload', quals=[] (at pp.c:16665)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:16665)
            TypeDecl: declname='len', quals=[] (at pp.c:16665)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:16665)
          TypeDecl: declname='CC2420TinyosNetworkP__SubReceive__receive', quals=[] (at pp.c:16665)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:16667)
      Decl: name='network', quals=[], storage=[] (at pp.c:16668)
        TypeDecl: declname='network', quals=[] (at pp.c:16668)
          IdentifierType: names=['uint8_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__CC2420Packet__getNetwork' (at pp.c:16668)
          ExprList:  (at pp.c:16668)
            ID: name='msg' (at pp.c:16668)
      If:  (at pp.c:16670)
        UnaryOp: op='!' (at None)
          FuncCall:  (at None)
            ID: name='__nesc_ntoh_int8' (at pp.c:16670)
            ExprList:  (at None)
              StructRef: type='.' (at None)
                StructRef: type='->' (at None)
                  FuncCall:  (at None)
                    ID: name='CC2420TinyosNetworkP__CC2420PacketBody__getMetadata' (at pp.c:16670)
                    ExprList:  (at pp.c:16670)
                      ID: name='msg' (at pp.c:16670)
                  ID: name='crc' (at pp.c:16670)
                ID: name='nxdata' (at pp.c:16670)
        Compound:  (at pp.c:16670)
          Return:  (at pp.c:16671)
            ID: name='msg' (at pp.c:16671)
      If:  (at pp.c:16674)
        BinaryOp: op='==' (at pp.c:16674)
          ID: name='network' (at pp.c:16674)
          Constant: type='int', value='0x3f' (at pp.c:16674)
        Compound:  (at pp.c:16674)
          Return:  (at pp.c:16675)
            FuncCall:  (at None)
              ID: name='CC2420TinyosNetworkP__ActiveReceive__receive' (at pp.c:16675)
              ExprList:  (at pp.c:16675)
                ID: name='msg' (at pp.c:16675)
                ID: name='payload' (at pp.c:16675)
                ID: name='len' (at pp.c:16675)
        Compound:  (at pp.c:16679)
          Return:  (at pp.c:16680)
            FuncCall:  (at None)
              ID: name='CC2420TinyosNetworkP__BareReceive__receive' (at pp.c:16680)
              ExprList:  (at pp.c:16680)
                ID: name='msg' (at pp.c:16680)
                FuncCall:  (at None)
                  ID: name='CC2420TinyosNetworkP__BareSend__getPayload' (at pp.c:16681)
                  ExprList:  (at pp.c:16681)
                    ID: name='msg' (at pp.c:16681)
                    ID: name='len' (at pp.c:16681)
                BinaryOp: op='+' (at pp.c:16682)
                  ID: name='len' (at pp.c:16682)
                  UnaryOp: op='sizeof' (at pp.c:16682)
                    Typename: quals=[] (at None)
                      TypeDecl: declname=None, quals=[] (at None)
                        IdentifierType: names=['cc2420_header_t'] (at None)
  FuncDef:  (at pp.c:16687)
    Decl: name='UniqueReceiveP__Receive__receive', quals=[], storage=['static', 'inline'] (at pp.c:16687)
      FuncDecl: quals=None (at pp.c:16687)
        ParamList:  (at pp.c:16687)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16687)
            PtrDecl: quals=[] (at pp.c:16687)
              TypeDecl: declname='msg', quals=[] (at pp.c:16687)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:16687)
            PtrDecl: quals=[] (at pp.c:16687)
              TypeDecl: declname='payload', quals=[] (at pp.c:16687)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:16687)
            TypeDecl: declname='len', quals=[] (at pp.c:16687)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:16687)
          TypeDecl: declname='UniqueReceiveP__Receive__receive', quals=[] (at pp.c:16687)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:16687)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16689)
        PtrDecl: quals=[] (at pp.c:16689)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16689)
            Struct: name='message_t', packed=False (at pp.c:16689)
      Assignment: op='=' (at pp.c:16693)
        ID: name='__nesc_result' (at pp.c:16693)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__SubReceive__receive' (at pp.c:16693)
          ExprList:  (at pp.c:16693)
            ID: name='msg' (at pp.c:16693)
            ID: name='payload' (at pp.c:16693)
            ID: name='len' (at pp.c:16693)
      Return:  (at pp.c:16697)
        ID: name='__nesc_result' (at pp.c:16697)
  FuncDef:  (at pp.c:16702)
    Decl: name='UniqueReceiveP__insert', quals=[], storage=['inline', 'static'] (at pp.c:16702)
      FuncDecl: quals=None (at pp.c:16702)
        ParamList:  (at pp.c:16702)
          Decl: name='msgSource', quals=[], storage=[] (at pp.c:16702)
            TypeDecl: declname='msgSource', quals=[] (at pp.c:16702)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='msgDsn', quals=[], storage=[] (at pp.c:16702)
            TypeDecl: declname='msgDsn', quals=[] (at pp.c:16702)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='UniqueReceiveP__insert', quals=[] (at pp.c:16702)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16704)
      Decl: name='element', quals=[], storage=[] (at pp.c:16705)
        TypeDecl: declname='element', quals=[] (at pp.c:16705)
          IdentifierType: names=['uint8_t'] (at None)
        ID: name='UniqueReceiveP__recycleSourceElement' (at pp.c:16705)
      Decl: name='increment', quals=[], storage=[] (at pp.c:16706)
        TypeDecl: declname='increment', quals=[] (at pp.c:16706)
          IdentifierType: names=['bool'] (at None)
        ID: name='FALSE' (at pp.c:16706)
      Compound:  (at pp.c:16708)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:16708)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:16708)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:16708)
        Compound:  (at pp.c:16710)
          If:  (at pp.c:16711)
            BinaryOp: op='||' (at pp.c:16711)
              BinaryOp: op='==' (at pp.c:16711)
                ID: name='element' (at pp.c:16711)
                ID: name='UniqueReceiveP__INVALID_ELEMENT' (at pp.c:16711)
              BinaryOp: op='==' (at pp.c:16711)
                ID: name='UniqueReceiveP__writeIndex' (at pp.c:16711)
                ID: name='element' (at pp.c:16711)
            Compound:  (at pp.c:16711)
              Assignment: op='=' (at pp.c:16713)
                ID: name='element' (at pp.c:16713)
                ID: name='UniqueReceiveP__writeIndex' (at pp.c:16713)
              Assignment: op='=' (at pp.c:16714)
                ID: name='increment' (at pp.c:16714)
                ID: name='TRUE' (at pp.c:16714)
          Assignment: op='=' (at pp.c:16717)
            StructRef: type='.' (at pp.c:16717)
              ArrayRef:  (at pp.c:16717)
                ID: name='UniqueReceiveP__receivedMessages' (at pp.c:16717)
                ID: name='element' (at pp.c:16717)
              ID: name='source' (at pp.c:16717)
            ID: name='msgSource' (at pp.c:16717)
          Assignment: op='=' (at pp.c:16718)
            StructRef: type='.' (at pp.c:16718)
              ArrayRef:  (at pp.c:16718)
                ID: name='UniqueReceiveP__receivedMessages' (at pp.c:16718)
                ID: name='element' (at pp.c:16718)
              ID: name='dsn' (at pp.c:16718)
            ID: name='msgDsn' (at pp.c:16718)
          If:  (at pp.c:16719)
            ID: name='increment' (at pp.c:16719)
            Compound:  (at pp.c:16719)
              UnaryOp: op='p++' (at pp.c:16720)
                ID: name='UniqueReceiveP__writeIndex' (at pp.c:16720)
              Assignment: op='%=' (at pp.c:16721)
                ID: name='UniqueReceiveP__writeIndex' (at pp.c:16721)
                Constant: type='int', value='4' (at pp.c:16721)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:16725)
          ExprList:  (at pp.c:16725)
            ID: name='__nesc_atomic' (at pp.c:16725)
  FuncDef:  (at pp.c:16729)
    Decl: name='UniqueReceiveP__DuplicateReceive__default__receive', quals=[], storage=['inline', 'static'] (at pp.c:16729)
      FuncDecl: quals=None (at pp.c:16729)
        ParamList:  (at pp.c:16729)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16729)
            PtrDecl: quals=[] (at pp.c:16729)
              TypeDecl: declname='msg', quals=[] (at pp.c:16729)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:16729)
            PtrDecl: quals=[] (at pp.c:16729)
              TypeDecl: declname='payload', quals=[] (at pp.c:16729)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:16729)
            TypeDecl: declname='len', quals=[] (at pp.c:16729)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:16729)
          TypeDecl: declname='UniqueReceiveP__DuplicateReceive__default__receive', quals=[] (at pp.c:16729)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:16731)
      Return:  (at pp.c:16732)
        ID: name='msg' (at pp.c:16732)
  FuncDef:  (at pp.c:16736)
    Decl: name='UniqueReceiveP__DuplicateReceive__receive', quals=[], storage=['static', 'inline'] (at pp.c:16736)
      FuncDecl: quals=None (at pp.c:16736)
        ParamList:  (at pp.c:16736)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16736)
            PtrDecl: quals=[] (at pp.c:16736)
              TypeDecl: declname='msg', quals=[] (at pp.c:16736)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:16736)
            PtrDecl: quals=[] (at pp.c:16736)
              TypeDecl: declname='payload', quals=[] (at pp.c:16736)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:16736)
            TypeDecl: declname='len', quals=[] (at pp.c:16736)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:16736)
          TypeDecl: declname='UniqueReceiveP__DuplicateReceive__receive', quals=[] (at pp.c:16736)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:16736)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16738)
        PtrDecl: quals=[] (at pp.c:16738)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16738)
            Struct: name='message_t', packed=False (at pp.c:16738)
      Assignment: op='=' (at pp.c:16742)
        ID: name='__nesc_result' (at pp.c:16742)
        FuncCall:  (at None)
          ID: name='UniqueReceiveP__DuplicateReceive__default__receive' (at pp.c:16742)
          ExprList:  (at pp.c:16742)
            ID: name='msg' (at pp.c:16742)
            ID: name='payload' (at pp.c:16742)
            ID: name='len' (at pp.c:16742)
      Return:  (at pp.c:16746)
        ID: name='__nesc_result' (at pp.c:16746)
  FuncDef:  (at pp.c:16751)
    Decl: name='UniqueReceiveP__hasSeen', quals=[], storage=['inline', 'static'] (at pp.c:16751)
      FuncDecl: quals=None (at pp.c:16751)
        ParamList:  (at pp.c:16751)
          Decl: name='msgSource', quals=[], storage=[] (at pp.c:16751)
            TypeDecl: declname='msgSource', quals=[] (at pp.c:16751)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='msgDsn', quals=[], storage=[] (at pp.c:16751)
            TypeDecl: declname='msgDsn', quals=[] (at pp.c:16751)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='UniqueReceiveP__hasSeen', quals=[] (at pp.c:16751)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:16753)
      Decl: name='i', quals=[], storage=[] (at pp.c:16754)
        TypeDecl: declname='i', quals=[] (at pp.c:16754)
          IdentifierType: names=['int'] (at None)
      Assignment: op='=' (at pp.c:16757)
        ID: name='UniqueReceiveP__recycleSourceElement' (at pp.c:16757)
        ID: name='UniqueReceiveP__INVALID_ELEMENT' (at pp.c:16757)
      Compound:  (at pp.c:16759)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:16759)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:16759)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:16759)
        Compound:  (at pp.c:16761)
          For:  (at pp.c:16762)
            Assignment: op='=' (at pp.c:16762)
              ID: name='i' (at pp.c:16762)
              Constant: type='int', value='0' (at pp.c:16762)
            BinaryOp: op='<' (at pp.c:16762)
              ID: name='i' (at pp.c:16762)
              Constant: type='int', value='4' (at pp.c:16762)
            UnaryOp: op='p++' (at pp.c:16762)
              ID: name='i' (at pp.c:16762)
            Compound:  (at pp.c:16762)
              If:  (at pp.c:16763)
                BinaryOp: op='==' (at pp.c:16763)
                  StructRef: type='.' (at pp.c:16763)
                    ArrayRef:  (at pp.c:16763)
                      ID: name='UniqueReceiveP__receivedMessages' (at pp.c:16763)
                      ID: name='i' (at pp.c:16763)
                    ID: name='source' (at pp.c:16763)
                  ID: name='msgSource' (at pp.c:16763)
                Compound:  (at pp.c:16763)
                  If:  (at pp.c:16764)
                    BinaryOp: op='==' (at pp.c:16764)
                      StructRef: type='.' (at pp.c:16764)
                        ArrayRef:  (at pp.c:16764)
                          ID: name='UniqueReceiveP__receivedMessages' (at pp.c:16764)
                          ID: name='i' (at pp.c:16764)
                        ID: name='dsn' (at pp.c:16764)
                      ID: name='msgDsn' (at pp.c:16764)
                    Compound:  (at pp.c:16764)
                      Compound:  (at pp.c:16766)
                        Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:16767)
                          TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:16767)
                            IdentifierType: names=['char', 'unsigned'] (at None)
                          ID: name='TRUE' (at pp.c:16769)
                        Compound:  (at pp.c:16771)
                          FuncCall:  (at None)
                            ID: name='__nesc_atomic_end' (at pp.c:16773)
                            ExprList:  (at pp.c:16773)
                              ID: name='__nesc_atomic' (at pp.c:16773)
                          Return:  (at pp.c:16775)
                            ID: name='__nesc_temp' (at pp.c:16775)
                  Assignment: op='=' (at pp.c:16780)
                    ID: name='UniqueReceiveP__recycleSourceElement' (at pp.c:16780)
                    ID: name='i' (at pp.c:16780)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:16785)
          ExprList:  (at pp.c:16785)
            ID: name='__nesc_atomic' (at pp.c:16785)
      Return:  (at pp.c:16787)
        ID: name='FALSE' (at pp.c:16787)
  FuncDef:  (at pp.c:16791)
    Decl: name='UniqueReceiveP__CC2420PacketBody__getHeader', quals=[], storage=['static', 'inline'] (at pp.c:16791)
      FuncDecl: quals=None (at pp.c:16791)
        ParamList:  (at pp.c:16791)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16791)
            PtrDecl: quals=[] (at pp.c:16791)
              TypeDecl: declname='msg', quals=[] (at pp.c:16791)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:16791)
          TypeDecl: declname='UniqueReceiveP__CC2420PacketBody__getHeader', quals=[] (at pp.c:16791)
            IdentifierType: names=['cc2420_header_t'] (at None)
    Compound:  (at pp.c:16791)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16793)
        PtrDecl: quals=[] (at pp.c:16793)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16793)
            Struct: name='cc2420_header_t', packed=False (at pp.c:16793)
      Assignment: op='=' (at pp.c:16797)
        ID: name='__nesc_result' (at pp.c:16797)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getHeader' (at pp.c:16797)
          ExprList:  (at pp.c:16797)
            ID: name='msg' (at pp.c:16797)
      Return:  (at pp.c:16801)
        ID: name='__nesc_result' (at pp.c:16801)
  FuncDef:  (at pp.c:16806)
    Decl: name='UniqueReceiveP__getSourceKey', quals=[], storage=['inline', 'static'] (at pp.c:16806)
      FuncDecl: quals=None (at pp.c:16806)
        ParamList:  (at pp.c:16806)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16806)
            PtrDecl: quals=[] (at pp.c:16806)
              TypeDecl: declname='msg', quals=[] (at pp.c:16806)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='UniqueReceiveP__getSourceKey', quals=[] (at pp.c:16806)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:16808)
      Decl: name='hdr', quals=[], storage=[] (at pp.c:16809)
        PtrDecl: quals=[] (at pp.c:16809)
          TypeDecl: declname='hdr', quals=[] (at pp.c:16809)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='UniqueReceiveP__CC2420PacketBody__getHeader' (at pp.c:16809)
          ExprList:  (at pp.c:16809)
            ID: name='msg' (at pp.c:16809)
      Decl: name='s_mode', quals=[], storage=[] (at pp.c:16810)
        TypeDecl: declname='s_mode', quals=[] (at pp.c:16810)
          IdentifierType: names=['int'] (at None)
        BinaryOp: op='&' (at None)
          BinaryOp: op='>>' (at None)
            FuncCall:  (at None)
              ID: name='__nesc_ntoh_leuint16' (at pp.c:16810)
              ExprList:  (at pp.c:16810)
                StructRef: type='.' (at pp.c:16810)
                  StructRef: type='->' (at pp.c:16810)
                    ID: name='hdr' (at pp.c:16810)
                    ID: name='fcf' (at pp.c:16810)
                  ID: name='nxdata' (at pp.c:16810)
            ID: name='IEEE154_FCF_SRC_ADDR_MODE' (at pp.c:16810)
          Constant: type='int', value='0x3' (at pp.c:16810)
      Decl: name='d_mode', quals=[], storage=[] (at pp.c:16811)
        TypeDecl: declname='d_mode', quals=[] (at pp.c:16811)
          IdentifierType: names=['int'] (at None)
        BinaryOp: op='&' (at None)
          BinaryOp: op='>>' (at None)
            FuncCall:  (at None)
              ID: name='__nesc_ntoh_leuint16' (at pp.c:16811)
              ExprList:  (at pp.c:16811)
                StructRef: type='.' (at pp.c:16811)
                  StructRef: type='->' (at pp.c:16811)
                    ID: name='hdr' (at pp.c:16811)
                    ID: name='fcf' (at pp.c:16811)
                  ID: name='nxdata' (at pp.c:16811)
            ID: name='IEEE154_FCF_DEST_ADDR_MODE' (at pp.c:16811)
          Constant: type='int', value='0x3' (at pp.c:16811)
      Decl: name='s_offset', quals=[], storage=[] (at pp.c:16812)
        TypeDecl: declname='s_offset', quals=[] (at pp.c:16812)
          IdentifierType: names=['int'] (at None)
        Constant: type='int', value='2' (at pp.c:16812)
      Decl: name='s_len', quals=[], storage=[] (at pp.c:16814)
        TypeDecl: declname='s_len', quals=[] (at pp.c:16814)
          IdentifierType: names=['int'] (at None)
        Constant: type='int', value='2' (at pp.c:16814)
      Decl: name='key', quals=[], storage=[] (at pp.c:16815)
        TypeDecl: declname='key', quals=[] (at pp.c:16815)
          IdentifierType: names=['uint16_t'] (at None)
        Constant: type='int', value='0' (at pp.c:16815)
      Decl: name='current', quals=[], storage=[] (at pp.c:16816)
        PtrDecl: quals=[] (at pp.c:16816)
          TypeDecl: declname='current', quals=[] (at pp.c:16816)
            IdentifierType: names=['uint8_t'] (at None)
        Cast:  (at None)
          Typename: quals=[] (at None)
            PtrDecl: quals=[] (at pp.c:16816)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['uint8_t'] (at None)
          UnaryOp: op='&' (at pp.c:16816)
            StructRef: type='->' (at pp.c:16816)
              ID: name='hdr' (at pp.c:16816)
              ID: name='dest' (at pp.c:16816)
      Decl: name='i', quals=[], storage=[] (at pp.c:16817)
        TypeDecl: declname='i', quals=[] (at pp.c:16817)
          IdentifierType: names=['int'] (at None)
      If:  (at pp.c:16819)
        BinaryOp: op='==' (at pp.c:16819)
          ID: name='s_mode' (at pp.c:16819)
          ID: name='IEEE154_ADDR_EXT' (at pp.c:16819)
        Compound:  (at pp.c:16819)
          Assignment: op='=' (at pp.c:16820)
            ID: name='s_len' (at pp.c:16820)
            Constant: type='int', value='8' (at pp.c:16820)
      If:  (at pp.c:16822)
        BinaryOp: op='==' (at pp.c:16822)
          ID: name='d_mode' (at pp.c:16822)
          ID: name='IEEE154_ADDR_EXT' (at pp.c:16822)
        Compound:  (at pp.c:16822)
          Assignment: op='=' (at pp.c:16823)
            ID: name='s_offset' (at pp.c:16823)
            Constant: type='int', value='8' (at pp.c:16823)
      Assignment: op='+=' (at pp.c:16826)
        ID: name='current' (at pp.c:16826)
        ID: name='s_offset' (at pp.c:16826)
      For:  (at pp.c:16828)
        Assignment: op='=' (at pp.c:16828)
          ID: name='i' (at pp.c:16828)
          Constant: type='int', value='0' (at pp.c:16828)
        BinaryOp: op='<' (at pp.c:16828)
          ID: name='i' (at pp.c:16828)
          ID: name='s_len' (at pp.c:16828)
        UnaryOp: op='p++' (at pp.c:16828)
          ID: name='i' (at pp.c:16828)
        Compound:  (at pp.c:16828)
          Assignment: op='+=' (at pp.c:16829)
            ID: name='key' (at pp.c:16829)
            ArrayRef:  (at pp.c:16829)
              ID: name='current' (at pp.c:16829)
              ID: name='i' (at pp.c:16829)
      Return:  (at pp.c:16831)
        ID: name='key' (at pp.c:16831)
  FuncDef:  (at pp.c:16835)
    Decl: name='UniqueReceiveP__SubReceive__receive', quals=[], storage=['inline', 'static'] (at pp.c:16835)
      FuncDecl: quals=None (at pp.c:16835)
        ParamList:  (at pp.c:16835)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16835)
            PtrDecl: quals=[] (at pp.c:16835)
              TypeDecl: declname='msg', quals=[] (at pp.c:16835)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:16835)
            PtrDecl: quals=[] (at pp.c:16835)
              TypeDecl: declname='payload', quals=[] (at pp.c:16835)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:16836)
            TypeDecl: declname='len', quals=[] (at pp.c:16836)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:16835)
          TypeDecl: declname='UniqueReceiveP__SubReceive__receive', quals=[] (at pp.c:16835)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:16838)
      Decl: name='msgSource', quals=[], storage=[] (at pp.c:16840)
        TypeDecl: declname='msgSource', quals=[] (at pp.c:16840)
          IdentifierType: names=['uint16_t'] (at None)
        FuncCall:  (at None)
          ID: name='UniqueReceiveP__getSourceKey' (at pp.c:16840)
          ExprList:  (at pp.c:16840)
            ID: name='msg' (at pp.c:16840)
      Decl: name='msgDsn', quals=[], storage=[] (at pp.c:16841)
        TypeDecl: declname='msgDsn', quals=[] (at pp.c:16841)
          IdentifierType: names=['uint8_t'] (at None)
        FuncCall:  (at None)
          ID: name='__nesc_ntoh_leuint8' (at pp.c:16841)
          ExprList:  (at None)
            StructRef: type='.' (at None)
              StructRef: type='->' (at None)
                FuncCall:  (at None)
                  ID: name='UniqueReceiveP__CC2420PacketBody__getHeader' (at pp.c:16841)
                  ExprList:  (at pp.c:16841)
                    ID: name='msg' (at pp.c:16841)
                ID: name='dsn' (at pp.c:16841)
              ID: name='nxdata' (at pp.c:16841)
      If:  (at pp.c:16843)
        FuncCall:  (at None)
          ID: name='UniqueReceiveP__hasSeen' (at pp.c:16843)
          ExprList:  (at pp.c:16843)
            ID: name='msgSource' (at pp.c:16843)
            ID: name='msgDsn' (at pp.c:16843)
        Compound:  (at pp.c:16843)
          Return:  (at pp.c:16844)
            FuncCall:  (at None)
              ID: name='UniqueReceiveP__DuplicateReceive__receive' (at pp.c:16844)
              ExprList:  (at pp.c:16844)
                ID: name='msg' (at pp.c:16844)
                ID: name='payload' (at pp.c:16844)
                ID: name='len' (at pp.c:16844)
        Compound:  (at pp.c:16848)
          FuncCall:  (at None)
            ID: name='UniqueReceiveP__insert' (at pp.c:16849)
            ExprList:  (at pp.c:16849)
              ID: name='msgSource' (at pp.c:16849)
              ID: name='msgDsn' (at pp.c:16849)
          Return:  (at pp.c:16850)
            FuncCall:  (at None)
              ID: name='UniqueReceiveP__Receive__receive' (at pp.c:16850)
              ExprList:  (at pp.c:16850)
                ID: name='msg' (at pp.c:16850)
                ID: name='payload' (at pp.c:16850)
                ID: name='len' (at pp.c:16850)
  FuncDef:  (at pp.c:16855)
    Decl: name='CC2420ReceiveP__Receive__receive', quals=[], storage=['static', 'inline'] (at pp.c:16855)
      FuncDecl: quals=None (at pp.c:16855)
        ParamList:  (at pp.c:16855)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16855)
            PtrDecl: quals=[] (at pp.c:16855)
              TypeDecl: declname='msg', quals=[] (at pp.c:16855)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:16855)
            PtrDecl: quals=[] (at pp.c:16855)
              TypeDecl: declname='payload', quals=[] (at pp.c:16855)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:16855)
            TypeDecl: declname='len', quals=[] (at pp.c:16855)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:16855)
          TypeDecl: declname='CC2420ReceiveP__Receive__receive', quals=[] (at pp.c:16855)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:16855)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16857)
        PtrDecl: quals=[] (at pp.c:16857)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16857)
            Struct: name='message_t', packed=False (at pp.c:16857)
      Assignment: op='=' (at pp.c:16861)
        ID: name='__nesc_result' (at pp.c:16861)
        FuncCall:  (at None)
          ID: name='UniqueReceiveP__SubReceive__receive' (at pp.c:16861)
          ExprList:  (at pp.c:16861)
            ID: name='msg' (at pp.c:16861)
            ID: name='payload' (at pp.c:16861)
            ID: name='len' (at pp.c:16861)
      Return:  (at pp.c:16865)
        ID: name='__nesc_result' (at pp.c:16865)
  FuncDef:  (at pp.c:16870)
    Decl: name='CC2420ControlP__LocalIeeeEui64__getId', quals=[], storage=['static', 'inline'] (at pp.c:16870)
      FuncDecl: quals=None (at pp.c:16870)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__LocalIeeeEui64__getId', quals=[] (at pp.c:16870)
          IdentifierType: names=['ieee_eui64_t'] (at None)
    Compound:  (at pp.c:16870)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16872)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16872)
          Struct: name='ieee_eui64', packed=False (at pp.c:16872)
      Assignment: op='=' (at pp.c:16876)
        ID: name='__nesc_result' (at pp.c:16876)
        FuncCall:  (at None)
          ID: name='DallasId48ToIeeeEui64C__LocalIeeeEui64__getId' (at pp.c:16876)
      Return:  (at pp.c:16880)
        ID: name='__nesc_result' (at pp.c:16880)
  FuncDef:  (at pp.c:16885)
    Decl: name='CC2420ControlP__CC2420Config__getExtAddr', quals=[], storage=['inline', 'static'] (at pp.c:16885)
      FuncDecl: quals=None (at pp.c:16885)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Config__getExtAddr', quals=[] (at pp.c:16885)
          IdentifierType: names=['ieee_eui64_t'] (at None)
    Compound:  (at pp.c:16887)
      Return:  (at pp.c:16888)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__LocalIeeeEui64__getId' (at pp.c:16888)
  FuncDef:  (at pp.c:16892)
    Decl: name='CC2420ReceiveP__CC2420Config__getExtAddr', quals=[], storage=['static', 'inline'] (at pp.c:16892)
      FuncDecl: quals=None (at pp.c:16892)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CC2420Config__getExtAddr', quals=[] (at pp.c:16892)
          IdentifierType: names=['ieee_eui64_t'] (at None)
    Compound:  (at pp.c:16892)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16894)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16894)
          Struct: name='ieee_eui64', packed=False (at pp.c:16894)
      Assignment: op='=' (at pp.c:16898)
        ID: name='__nesc_result' (at pp.c:16898)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__CC2420Config__getExtAddr' (at pp.c:16898)
      Return:  (at pp.c:16902)
        ID: name='__nesc_result' (at pp.c:16902)
  FuncDef:  (at pp.c:16911)
    Decl: name='CC2420ReceiveP__CC2420Config__getShortAddr', quals=[], storage=['static', 'inline'] (at pp.c:16911)
      FuncDecl: quals=None (at pp.c:16911)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CC2420Config__getShortAddr', quals=[] (at pp.c:16911)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:16911)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16913)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16913)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16917)
        ID: name='__nesc_result' (at pp.c:16917)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__CC2420Config__getShortAddr' (at pp.c:16917)
      Return:  (at pp.c:16921)
        ID: name='__nesc_result' (at pp.c:16921)
  FuncDef:  (at pp.c:16926)
    Decl: name='CC2420ControlP__CC2420Config__isAddressRecognitionEnabled', quals=[], storage=['inline', 'static'] (at pp.c:16926)
      FuncDecl: quals=None (at pp.c:16926)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Config__isAddressRecognitionEnabled', quals=[] (at pp.c:16926)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:16928)
      Compound:  (at pp.c:16929)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:16929)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:16929)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:16929)
        Compound:  (at pp.c:16931)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:16932)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:16932)
              IdentifierType: names=['char', 'unsigned'] (at None)
            ID: name='CC2420ControlP__addressRecognition' (at pp.c:16934)
          Compound:  (at pp.c:16936)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:16938)
              ExprList:  (at pp.c:16938)
                ID: name='__nesc_atomic' (at pp.c:16938)
            Return:  (at pp.c:16940)
              ID: name='__nesc_temp' (at pp.c:16940)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:16944)
          ExprList:  (at pp.c:16944)
            ID: name='__nesc_atomic' (at pp.c:16944)
  FuncDef:  (at pp.c:16948)
    Decl: name='CC2420ReceiveP__CC2420Config__isAddressRecognitionEnabled', quals=[], storage=['static', 'inline'] (at pp.c:16948)
      FuncDecl: quals=None (at pp.c:16948)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CC2420Config__isAddressRecognitionEnabled', quals=[] (at pp.c:16948)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:16948)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16950)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16950)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16954)
        ID: name='__nesc_result' (at pp.c:16954)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__CC2420Config__isAddressRecognitionEnabled' (at pp.c:16954)
      Return:  (at pp.c:16958)
        ID: name='__nesc_result' (at pp.c:16958)
  FuncDef:  (at pp.c:16963)
    Decl: name='CC2420ReceiveP__CC2420PacketBody__getHeader', quals=[], storage=['static', 'inline'] (at pp.c:16963)
      FuncDecl: quals=None (at pp.c:16963)
        ParamList:  (at pp.c:16963)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16963)
            PtrDecl: quals=[] (at pp.c:16963)
              TypeDecl: declname='msg', quals=[] (at pp.c:16963)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:16963)
          TypeDecl: declname='CC2420ReceiveP__CC2420PacketBody__getHeader', quals=[] (at pp.c:16963)
            IdentifierType: names=['cc2420_header_t'] (at None)
    Compound:  (at pp.c:16963)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16965)
        PtrDecl: quals=[] (at pp.c:16965)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16965)
            Struct: name='cc2420_header_t', packed=False (at pp.c:16965)
      Assignment: op='=' (at pp.c:16969)
        ID: name='__nesc_result' (at pp.c:16969)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getHeader' (at pp.c:16969)
          ExprList:  (at pp.c:16969)
            ID: name='msg' (at pp.c:16969)
      Return:  (at pp.c:16973)
        ID: name='__nesc_result' (at pp.c:16973)
  FuncDef:  (at pp.c:16978)
    Decl: name='CC2420ReceiveP__passesAddressCheck', quals=[], storage=['inline', 'static'] (at pp.c:16978)
      FuncDecl: quals=None (at pp.c:16978)
        ParamList:  (at pp.c:16978)
          Decl: name='msg', quals=[], storage=[] (at pp.c:16978)
            PtrDecl: quals=[] (at pp.c:16978)
              TypeDecl: declname='msg', quals=[] (at pp.c:16978)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ReceiveP__passesAddressCheck', quals=[] (at pp.c:16978)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:16980)
      Decl: name='header', quals=[], storage=[] (at pp.c:16981)
        PtrDecl: quals=[] (at pp.c:16981)
          TypeDecl: declname='header', quals=[] (at pp.c:16981)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420ReceiveP__CC2420PacketBody__getHeader' (at pp.c:16981)
          ExprList:  (at pp.c:16981)
            ID: name='msg' (at pp.c:16981)
      Decl: name='mode', quals=[], storage=[] (at pp.c:16982)
        TypeDecl: declname='mode', quals=[] (at pp.c:16982)
          IdentifierType: names=['int'] (at None)
        BinaryOp: op='&' (at None)
          BinaryOp: op='>>' (at None)
            FuncCall:  (at None)
              ID: name='__nesc_ntoh_leuint16' (at pp.c:16982)
              ExprList:  (at pp.c:16982)
                StructRef: type='.' (at pp.c:16982)
                  StructRef: type='->' (at pp.c:16982)
                    ID: name='header' (at pp.c:16982)
                    ID: name='fcf' (at pp.c:16982)
                  ID: name='nxdata' (at pp.c:16982)
            ID: name='IEEE154_FCF_DEST_ADDR_MODE' (at pp.c:16982)
          Constant: type='int', value='3' (at pp.c:16982)
      Decl: name='ext_addr', quals=[], storage=[] (at pp.c:16983)
        PtrDecl: quals=[] (at pp.c:16983)
          TypeDecl: declname='ext_addr', quals=[] (at pp.c:16983)
            IdentifierType: names=['ieee_eui64_t'] (at None)
      If:  (at pp.c:16985)
        UnaryOp: op='!' (at None)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__CC2420Config__isAddressRecognitionEnabled' (at pp.c:16985)
        Compound:  (at pp.c:16985)
          Return:  (at pp.c:16986)
            ID: name='TRUE' (at pp.c:16986)
      If:  (at pp.c:16989)
        BinaryOp: op='==' (at pp.c:16989)
          ID: name='mode' (at pp.c:16989)
          ID: name='IEEE154_ADDR_SHORT' (at pp.c:16989)
        Compound:  (at pp.c:16989)
          Return:  (at pp.c:16990)
            BinaryOp: op='||' (at None)
              BinaryOp: op='==' (at None)
                FuncCall:  (at None)
                  ID: name='__nesc_ntoh_leuint16' (at pp.c:16990)
                  ExprList:  (at pp.c:16990)
                    StructRef: type='.' (at pp.c:16990)
                      StructRef: type='->' (at pp.c:16990)
                        ID: name='header' (at pp.c:16990)
                        ID: name='dest' (at pp.c:16990)
                      ID: name='nxdata' (at pp.c:16990)
                FuncCall:  (at None)
                  ID: name='CC2420ReceiveP__CC2420Config__getShortAddr' (at pp.c:16990)
              BinaryOp: op='==' (at None)
                FuncCall:  (at None)
                  ID: name='__nesc_ntoh_leuint16' (at pp.c:16991)
                  ExprList:  (at pp.c:16991)
                    StructRef: type='.' (at pp.c:16991)
                      StructRef: type='->' (at pp.c:16991)
                        ID: name='header' (at pp.c:16991)
                        ID: name='dest' (at pp.c:16991)
                      ID: name='nxdata' (at pp.c:16991)
                ID: name='IEEE154_BROADCAST_ADDR' (at pp.c:16991)
        Compound:  (at pp.c:16993)
          If:  (at pp.c:16995)
            BinaryOp: op='==' (at pp.c:16995)
              ID: name='mode' (at pp.c:16995)
              ID: name='IEEE154_ADDR_EXT' (at pp.c:16995)
            Compound:  (at pp.c:16995)
              Decl: name='local_addr', quals=[], storage=[] (at pp.c:16996)
                TypeDecl: declname='local_addr', quals=[] (at pp.c:16996)
                  IdentifierType: names=['ieee_eui64_t'] (at None)
                FuncCall:  (at None)
                  ID: name='CC2420ReceiveP__CC2420Config__getExtAddr' (at pp.c:16996)
              Assignment: op='=' (at pp.c:16999)
                ID: name='ext_addr' (at pp.c:16999)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    PtrDecl: quals=[] (at pp.c:16999)
                      TypeDecl: declname=None, quals=[] (at None)
                        IdentifierType: names=['ieee_eui64_t'] (at None)
                  UnaryOp: op='&' (at pp.c:16999)
                    StructRef: type='->' (at pp.c:16999)
                      ID: name='header' (at pp.c:16999)
                      ID: name='dest' (at pp.c:16999)
              Return:  (at pp.c:17000)
                BinaryOp: op='==' (at None)
                  FuncCall:  (at None)
                    ID: name='memcmp' (at pp.c:17000)
                    ExprList:  (at pp.c:17000)
                      StructRef: type='->' (at pp.c:17000)
                        ID: name='ext_addr' (at pp.c:17000)
                        ID: name='data' (at pp.c:17000)
                      StructRef: type='.' (at pp.c:17000)
                        ID: name='local_addr' (at pp.c:17000)
                        ID: name='data' (at pp.c:17000)
                      ID: name='IEEE_EUI64_LENGTH' (at pp.c:17000)
                  Constant: type='int', value='0' (at pp.c:17000)
            Compound:  (at pp.c:17004)
              Return:  (at pp.c:17006)
                ID: name='FALSE' (at pp.c:17006)
  FuncDef:  (at pp.c:17012)
    Decl: name='CC2420ReceiveP__CC2420PacketBody__getMetadata', quals=[], storage=['static', 'inline'] (at pp.c:17012)
      FuncDecl: quals=None (at pp.c:17012)
        ParamList:  (at pp.c:17012)
          Decl: name='msg', quals=[], storage=[] (at pp.c:17012)
            PtrDecl: quals=[] (at pp.c:17012)
              TypeDecl: declname='msg', quals=[] (at pp.c:17012)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:17012)
          TypeDecl: declname='CC2420ReceiveP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:17012)
            IdentifierType: names=['cc2420_metadata_t'] (at None)
    Compound:  (at pp.c:17012)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17014)
        PtrDecl: quals=[] (at pp.c:17014)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17014)
            Struct: name='cc2420_metadata_t', packed=False (at pp.c:17014)
      Assignment: op='=' (at pp.c:17018)
        ID: name='__nesc_result' (at pp.c:17018)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getMetadata' (at pp.c:17018)
          ExprList:  (at pp.c:17018)
            ID: name='msg' (at pp.c:17018)
      Return:  (at pp.c:17022)
        ID: name='__nesc_result' (at pp.c:17022)
  FuncDef:  (at pp.c:17027)
    Decl: name='CC2420ReceiveP__receiveDone_task__runTask', quals=[], storage=['inline', 'static'] (at pp.c:17027)
      FuncDecl: quals=None (at pp.c:17027)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__receiveDone_task__runTask', quals=[] (at pp.c:17027)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17029)
      Decl: name='metadata', quals=[], storage=[] (at pp.c:17030)
        PtrDecl: quals=[] (at pp.c:17030)
          TypeDecl: declname='metadata', quals=[] (at pp.c:17030)
            IdentifierType: names=['cc2420_metadata_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420ReceiveP__CC2420PacketBody__getMetadata' (at pp.c:17030)
          ExprList:  (at pp.c:17030)
            ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:17030)
      Decl: name='header', quals=[], storage=[] (at pp.c:17031)
        PtrDecl: quals=[] (at pp.c:17031)
          TypeDecl: declname='header', quals=[] (at pp.c:17031)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420ReceiveP__CC2420PacketBody__getHeader' (at pp.c:17031)
          ExprList:  (at pp.c:17031)
            ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:17031)
      Decl: name='length', quals=[], storage=[] (at pp.c:17032)
        TypeDecl: declname='length', quals=[] (at pp.c:17032)
          IdentifierType: names=['uint8_t'] (at None)
        FuncCall:  (at None)
          ID: name='__nesc_ntoh_leuint8' (at pp.c:17032)
          ExprList:  (at pp.c:17032)
            StructRef: type='.' (at pp.c:17032)
              StructRef: type='->' (at pp.c:17032)
                ID: name='header' (at pp.c:17032)
                ID: name='length' (at pp.c:17032)
              ID: name='nxdata' (at pp.c:17032)
      Decl: name='tmpLen', quals=[], storage=[] (at pp.c:17033)
        TypeDecl: declname='tmpLen', quals=[] (at pp.c:17033)
          IdentifierType: names=['uint8_t'] (at None)
        BinaryOp: op='-' (at pp.c:17033)
          UnaryOp: op='sizeof' (at pp.c:17033)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['message_t'] (at None)
          BinaryOp: op='-' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['size_t'] (at None)
              UnaryOp: op='&' (at None)
                StructRef: type='->' (at None)
                  Cast:  (at None)
                    Typename: quals=[] (at None)
                      PtrDecl: quals=[] (at pp.c:17033)
                        TypeDecl: declname=None, quals=[] (at None)
                          IdentifierType: names=['message_t'] (at None)
                    Constant: type='int', value='0' (at pp.c:17033)
                  ID: name='data' (at pp.c:17033)
            UnaryOp: op='sizeof' (at pp.c:17033)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['cc2420_header_t'] (at None)
      Decl: name='buf', quals=[], storage=[] (at pp.c:17034)
        PtrDecl: quals=[] (at pp.c:17034)
          TypeDecl: declname='buf', quals=[] (at pp.c:17034)
            IdentifierType: names=['uint8_t'] (at None)
        Cast:  (at None)
          Typename: quals=[] (at None)
            PtrDecl: quals=[] (at pp.c:17034)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['uint8_t'] (at None)
          ID: name='header' (at pp.c:17034)
      FuncCall:  (at None)
        ID: name='__nesc_hton_int8' (at pp.c:17036)
        ExprList:  (at pp.c:17036)
          StructRef: type='.' (at pp.c:17036)
            StructRef: type='->' (at pp.c:17036)
              ID: name='metadata' (at pp.c:17036)
              ID: name='crc' (at pp.c:17036)
            ID: name='nxdata' (at pp.c:17036)
          BinaryOp: op='>>' (at pp.c:17036)
            ArrayRef:  (at pp.c:17036)
              ID: name='buf' (at pp.c:17036)
              ID: name='length' (at pp.c:17036)
            Constant: type='int', value='7' (at pp.c:17036)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint8' (at pp.c:17037)
        ExprList:  (at pp.c:17037)
          StructRef: type='.' (at pp.c:17037)
            StructRef: type='->' (at pp.c:17037)
              ID: name='metadata' (at pp.c:17037)
              ID: name='lqi' (at pp.c:17037)
            ID: name='nxdata' (at pp.c:17037)
          BinaryOp: op='&' (at pp.c:17037)
            ArrayRef:  (at pp.c:17037)
              ID: name='buf' (at pp.c:17037)
              ID: name='length' (at pp.c:17037)
            Constant: type='int', value='0x7f' (at pp.c:17037)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint8' (at pp.c:17038)
        ExprList:  (at pp.c:17038)
          StructRef: type='.' (at pp.c:17038)
            StructRef: type='->' (at pp.c:17038)
              ID: name='metadata' (at pp.c:17038)
              ID: name='rssi' (at pp.c:17038)
            ID: name='nxdata' (at pp.c:17038)
          ArrayRef:  (at pp.c:17038)
            ID: name='buf' (at pp.c:17038)
            BinaryOp: op='-' (at pp.c:17038)
              ID: name='length' (at pp.c:17038)
              Constant: type='int', value='1' (at pp.c:17038)
      If:  (at pp.c:17040)
        BinaryOp: op='&&' (at None)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__passesAddressCheck' (at pp.c:17040)
            ExprList:  (at pp.c:17040)
              ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:17040)
          BinaryOp: op='>=' (at pp.c:17040)
            ID: name='length' (at pp.c:17040)
            ID: name='CC2420_SIZE' (at pp.c:17040)
        Compound:  (at pp.c:17040)
          Assignment: op='=' (at pp.c:17042)
            ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:17042)
            FuncCall:  (at None)
              ID: name='CC2420ReceiveP__Receive__receive' (at pp.c:17042)
              ExprList:  (at pp.c:17042)
                ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:17042)
                StructRef: type='->' (at pp.c:17042)
                  ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:17042)
                  ID: name='data' (at pp.c:17042)
                BinaryOp: op='-' (at pp.c:17043)
                  ID: name='length' (at pp.c:17043)
                  ID: name='CC2420_SIZE' (at pp.c:17043)
      Compound:  (at pp.c:17045)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:17045)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:17045)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:17045)
        Assignment: op='=' (at pp.c:17047)
          ID: name='CC2420ReceiveP__receivingPacket' (at pp.c:17047)
          ID: name='FALSE' (at pp.c:17047)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:17049)
          ExprList:  (at pp.c:17049)
            ID: name='__nesc_atomic' (at pp.c:17049)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__waitForNextPacket' (at pp.c:17050)
  FuncDef:  (at pp.c:17054)
    Decl: name='dallasid48checkCrc', quals=[], storage=['inline', 'static'] (at pp.c:17054)
      FuncDecl: quals=None (at pp.c:17054)
        ParamList:  (at pp.c:17054)
          Decl: name='id', quals=['const'], storage=[] (at pp.c:17054)
            PtrDecl: quals=[] (at pp.c:17054)
              TypeDecl: declname='id', quals=['const'] (at pp.c:17054)
                IdentifierType: names=['dallasid48_serial_t'] (at None)
        TypeDecl: declname='dallasid48checkCrc', quals=[] (at pp.c:17054)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:17056)
      Decl: name='crc', quals=[], storage=[] (at pp.c:17057)
        TypeDecl: declname='crc', quals=[] (at pp.c:17057)
          IdentifierType: names=['uint8_t'] (at None)
        Constant: type='int', value='0' (at pp.c:17057)
      Decl: name='idx', quals=[], storage=[] (at pp.c:17058)
        TypeDecl: declname='idx', quals=[] (at pp.c:17058)
          IdentifierType: names=['uint8_t'] (at None)
      For:  (at pp.c:17061)
        Assignment: op='=' (at pp.c:17061)
          ID: name='idx' (at pp.c:17061)
          Constant: type='int', value='0' (at pp.c:17061)
        BinaryOp: op='<' (at pp.c:17061)
          ID: name='idx' (at pp.c:17061)
          ID: name='DALLASID48_DATA_LENGTH' (at pp.c:17061)
        UnaryOp: op='p++' (at pp.c:17061)
          ID: name='idx' (at pp.c:17061)
        Compound:  (at pp.c:17061)
          Decl: name='i', quals=[], storage=[] (at pp.c:17062)
            TypeDecl: declname='i', quals=[] (at pp.c:17062)
              IdentifierType: names=['uint8_t'] (at None)
          Assignment: op='=' (at pp.c:17065)
            ID: name='crc' (at pp.c:17065)
            BinaryOp: op='^' (at pp.c:17065)
              ID: name='crc' (at pp.c:17065)
              ArrayRef:  (at pp.c:17065)
                StructRef: type='->' (at pp.c:17065)
                  ID: name='id' (at pp.c:17065)
                  ID: name='data' (at pp.c:17065)
                ID: name='idx' (at pp.c:17065)
          For:  (at pp.c:17066)
            Assignment: op='=' (at pp.c:17066)
              ID: name='i' (at pp.c:17066)
              Constant: type='int', value='0' (at pp.c:17066)
            BinaryOp: op='<' (at pp.c:17066)
              ID: name='i' (at pp.c:17066)
              Constant: type='int', value='8' (at pp.c:17066)
            UnaryOp: op='p++' (at pp.c:17066)
              ID: name='i' (at pp.c:17066)
            Compound:  (at pp.c:17066)
              If:  (at pp.c:17067)
                BinaryOp: op='&' (at pp.c:17067)
                  ID: name='crc' (at pp.c:17067)
                  Constant: type='int', value='0x01' (at pp.c:17067)
                Compound:  (at pp.c:17067)
                  Assignment: op='=' (at pp.c:17068)
                    ID: name='crc' (at pp.c:17068)
                    BinaryOp: op='^' (at pp.c:17068)
                      BinaryOp: op='>>' (at pp.c:17068)
                        ID: name='crc' (at pp.c:17068)
                        Constant: type='int', value='1' (at pp.c:17068)
                      Constant: type='int', value='0x8C' (at pp.c:17068)
                Compound:  (at pp.c:17070)
                  Assignment: op='>>=' (at pp.c:17071)
                    ID: name='crc' (at pp.c:17071)
                    Constant: type='int', value='1' (at pp.c:17071)
      Return:  (at pp.c:17075)
        BinaryOp: op='==' (at pp.c:17075)
          ID: name='crc' (at pp.c:17075)
          Constant: type='int', value='0' (at pp.c:17075)
  FuncDef:  (at pp.c:17079)
    Decl: name='OneWireMasterC__BusyWait__wait', quals=[], storage=['static', 'inline'] (at pp.c:17079)
      FuncDecl: quals=None (at pp.c:17079)
        ParamList:  (at pp.c:17079)
          Decl: name='dt', quals=[], storage=[] (at pp.c:17079)
            TypeDecl: declname='dt', quals=[] (at pp.c:17079)
              IdentifierType: names=['OneWireMasterC__BusyWait__size_type'] (at None)
        TypeDecl: declname='OneWireMasterC__BusyWait__wait', quals=[] (at pp.c:17079)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17079)
      FuncCall:  (at None)
        ID: name='BusyWaitCounterC__0__BusyWait__wait' (at pp.c:17081)
        ExprList:  (at pp.c:17081)
          ID: name='dt' (at pp.c:17081)
  FuncDef:  (at pp.c:17086)
    Decl: name='HplMsp430GeneralIOP__12__IO__getRaw', quals=[], storage=['inline', 'static'] (at pp.c:17086)
      FuncDecl: quals=None (at pp.c:17086)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__12__IO__getRaw', quals=[] (at pp.c:17086)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:17088)
      Return:  (at pp.c:17090)
        BinaryOp: op='&' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:17090)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='40U' (at pp.c:17090)
          BinaryOp: op='<<' (at pp.c:17090)
            Constant: type='int', value='0x01' (at pp.c:17090)
            Constant: type='int', value='4' (at pp.c:17090)
  FuncDef:  (at pp.c:17094)
    Decl: name='HplMsp430GeneralIOP__12__IO__get', quals=[], storage=['inline', 'static'] (at pp.c:17094)
      FuncDecl: quals=None (at pp.c:17094)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__12__IO__get', quals=[] (at pp.c:17094)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:17096)
      Return:  (at pp.c:17098)
        BinaryOp: op='!=' (at None)
          FuncCall:  (at None)
            ID: name='HplMsp430GeneralIOP__12__IO__getRaw' (at pp.c:17098)
          Constant: type='int', value='0' (at pp.c:17098)
  FuncDef:  (at pp.c:17102)
    Decl: name='Msp430GpioC__11__HplGeneralIO__get', quals=[], storage=['static', 'inline'] (at pp.c:17102)
      FuncDecl: quals=None (at pp.c:17102)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__11__HplGeneralIO__get', quals=[] (at pp.c:17102)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:17102)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17104)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17104)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17108)
        ID: name='__nesc_result' (at pp.c:17108)
        FuncCall:  (at None)
          ID: name='HplMsp430GeneralIOP__12__IO__get' (at pp.c:17108)
      Return:  (at pp.c:17112)
        ID: name='__nesc_result' (at pp.c:17112)
  FuncDef:  (at pp.c:17117)
    Decl: name='Msp430GpioC__11__GeneralIO__get', quals=[], storage=['inline', 'static'] (at pp.c:17117)
      FuncDecl: quals=None (at pp.c:17117)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__11__GeneralIO__get', quals=[] (at pp.c:17117)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:17119)
      Return:  (at pp.c:17121)
        FuncCall:  (at None)
          ID: name='Msp430GpioC__11__HplGeneralIO__get' (at pp.c:17121)
  FuncDef:  (at pp.c:17125)
    Decl: name='OneWireMasterC__Pin__get', quals=[], storage=['static', 'inline'] (at pp.c:17125)
      FuncDecl: quals=None (at pp.c:17125)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OneWireMasterC__Pin__get', quals=[] (at pp.c:17125)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:17125)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17127)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17127)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17131)
        ID: name='__nesc_result' (at pp.c:17131)
        FuncCall:  (at None)
          ID: name='Msp430GpioC__11__GeneralIO__get' (at pp.c:17131)
      Return:  (at pp.c:17135)
        ID: name='__nesc_result' (at pp.c:17135)
  FuncDef:  (at pp.c:17140)
    Decl: name='HplMsp430GeneralIOP__12__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:17140)
      FuncDecl: quals=None (at pp.c:17140)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__12__IO__makeInput', quals=[] (at pp.c:17140)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17142)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:17145)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='42U' (at pp.c:17145)
        UnaryOp: op='~' (at pp.c:17145)
          BinaryOp: op='<<' (at pp.c:17145)
            Constant: type='int', value='0x01' (at pp.c:17145)
            Constant: type='int', value='4' (at pp.c:17145)
  FuncDef:  (at pp.c:17149)
    Decl: name='Msp430GpioC__11__HplGeneralIO__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:17149)
      FuncDecl: quals=None (at pp.c:17149)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__11__HplGeneralIO__makeInput', quals=[] (at pp.c:17149)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17149)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__12__IO__makeInput' (at pp.c:17151)
  FuncDef:  (at pp.c:17156)
    Decl: name='Msp430GpioC__11__GeneralIO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:17156)
      FuncDecl: quals=None (at pp.c:17156)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__11__GeneralIO__makeInput', quals=[] (at pp.c:17156)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17158)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__11__HplGeneralIO__makeInput' (at pp.c:17160)
  FuncDef:  (at pp.c:17164)
    Decl: name='OneWireMasterC__Pin__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:17164)
      FuncDecl: quals=None (at pp.c:17164)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OneWireMasterC__Pin__makeInput', quals=[] (at pp.c:17164)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17164)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__11__GeneralIO__makeInput' (at pp.c:17166)
  FuncDef:  (at pp.c:17171)
    Decl: name='HplMsp430GeneralIOP__12__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:17171)
      FuncDecl: quals=None (at pp.c:17171)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__12__IO__makeOutput', quals=[] (at pp.c:17171)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17173)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:17176)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='42U' (at pp.c:17176)
        BinaryOp: op='<<' (at pp.c:17176)
          Constant: type='int', value='0x01' (at pp.c:17176)
          Constant: type='int', value='4' (at pp.c:17176)
  FuncDef:  (at pp.c:17180)
    Decl: name='Msp430GpioC__11__HplGeneralIO__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:17180)
      FuncDecl: quals=None (at pp.c:17180)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__11__HplGeneralIO__makeOutput', quals=[] (at pp.c:17180)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17180)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__12__IO__makeOutput' (at pp.c:17182)
  FuncDef:  (at pp.c:17187)
    Decl: name='Msp430GpioC__11__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:17187)
      FuncDecl: quals=None (at pp.c:17187)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__11__GeneralIO__makeOutput', quals=[] (at pp.c:17187)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17189)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__11__HplGeneralIO__makeOutput' (at pp.c:17191)
  FuncDef:  (at pp.c:17195)
    Decl: name='OneWireMasterC__Pin__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:17195)
      FuncDecl: quals=None (at pp.c:17195)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OneWireMasterC__Pin__makeOutput', quals=[] (at pp.c:17195)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17195)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__11__GeneralIO__makeOutput' (at pp.c:17197)
  FuncDef:  (at pp.c:17202)
    Decl: name='OneWireMasterC__readBit', quals=[], storage=['inline', 'static'] (at pp.c:17202)
      FuncDecl: quals=None (at pp.c:17202)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OneWireMasterC__readBit', quals=[] (at pp.c:17202)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:17204)
      Decl: name='bit', quals=[], storage=[] (at pp.c:17205)
        TypeDecl: declname='bit', quals=[] (at pp.c:17205)
          IdentifierType: names=['bool'] (at None)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__Pin__makeOutput' (at pp.c:17208)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:17209)
        ExprList:  (at pp.c:17209)
          ID: name='OneWireMasterC__DELAY_5US' (at pp.c:17209)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__Pin__makeInput' (at pp.c:17210)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:17211)
        ExprList:  (at pp.c:17211)
          ID: name='OneWireMasterC__DELAY_5US' (at pp.c:17211)
      Assignment: op='=' (at pp.c:17212)
        ID: name='bit' (at pp.c:17212)
        FuncCall:  (at None)
          ID: name='OneWireMasterC__Pin__get' (at pp.c:17212)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:17213)
        ExprList:  (at pp.c:17213)
          ID: name='OneWireMasterC__SLOT_TIME' (at pp.c:17213)
      Return:  (at pp.c:17214)
        ID: name='bit' (at pp.c:17214)
  FuncDef:  (at pp.c:17218)
    Decl: name='OneWireMasterC__readByte', quals=[], storage=['inline', 'static'] (at pp.c:17218)
      FuncDecl: quals=None (at pp.c:17218)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OneWireMasterC__readByte', quals=[] (at pp.c:17218)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:17220)
      Decl: name='i', quals=[], storage=[] (at pp.c:17221)
        TypeDecl: declname='i', quals=[] (at pp.c:17221)
          IdentifierType: names=['uint8_t'] (at None)
      Decl: name='c', quals=[], storage=[] (at pp.c:17223)
        TypeDecl: declname='c', quals=[] (at pp.c:17223)
          IdentifierType: names=['uint8_t'] (at None)
        Constant: type='int', value='0' (at pp.c:17223)
      For:  (at pp.c:17226)
        Assignment: op='=' (at pp.c:17226)
          ID: name='i' (at pp.c:17226)
          Constant: type='int', value='0' (at pp.c:17226)
        BinaryOp: op='<' (at pp.c:17226)
          ID: name='i' (at pp.c:17226)
          Constant: type='int', value='8' (at pp.c:17226)
        UnaryOp: op='p++' (at pp.c:17226)
          ID: name='i' (at pp.c:17226)
        Compound:  (at pp.c:17226)
          Assignment: op='>>=' (at pp.c:17227)
            ID: name='c' (at pp.c:17227)
            Constant: type='int', value='1' (at pp.c:17227)
          If:  (at pp.c:17228)
            FuncCall:  (at None)
              ID: name='OneWireMasterC__readBit' (at pp.c:17228)
            Compound:  (at pp.c:17228)
              Assignment: op='|=' (at pp.c:17229)
                ID: name='c' (at pp.c:17229)
                Constant: type='int', value='0x80' (at pp.c:17229)
      Return:  (at pp.c:17232)
        ID: name='c' (at pp.c:17232)
  FuncDef:  (at pp.c:17236)
    Decl: name='OneWireMasterC__writeZero', quals=[], storage=['inline', 'static'] (at pp.c:17236)
      FuncDecl: quals=None (at pp.c:17236)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OneWireMasterC__writeZero', quals=[] (at pp.c:17236)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17238)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__Pin__makeOutput' (at pp.c:17239)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:17240)
        ExprList:  (at pp.c:17240)
          ID: name='OneWireMasterC__DELAY_60US' (at pp.c:17240)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__Pin__makeInput' (at pp.c:17241)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:17242)
        ExprList:  (at pp.c:17242)
          ID: name='OneWireMasterC__DELAY_5US' (at pp.c:17242)
  FuncDef:  (at pp.c:17246)
    Decl: name='OneWireMasterC__writeOne', quals=[], storage=['inline', 'static'] (at pp.c:17246)
      FuncDecl: quals=None (at pp.c:17246)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OneWireMasterC__writeOne', quals=[] (at pp.c:17246)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17248)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__Pin__makeOutput' (at pp.c:17249)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:17250)
        ExprList:  (at pp.c:17250)
          ID: name='OneWireMasterC__DELAY_5US' (at pp.c:17250)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__Pin__makeInput' (at pp.c:17251)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:17252)
        ExprList:  (at pp.c:17252)
          ID: name='OneWireMasterC__SLOT_TIME' (at pp.c:17252)
  FuncDef:  (at pp.c:17256)
    Decl: name='OneWireMasterC__writeByte', quals=[], storage=['inline', 'static'] (at pp.c:17256)
      FuncDecl: quals=None (at pp.c:17256)
        ParamList:  (at pp.c:17256)
          Decl: name='c', quals=[], storage=[] (at pp.c:17256)
            TypeDecl: declname='c', quals=[] (at pp.c:17256)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='OneWireMasterC__writeByte', quals=[] (at pp.c:17256)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17258)
      Decl: name='j', quals=[], storage=[] (at pp.c:17259)
        TypeDecl: declname='j', quals=[] (at pp.c:17259)
          IdentifierType: names=['uint8_t'] (at None)
      For:  (at pp.c:17262)
        Assignment: op='=' (at pp.c:17262)
          ID: name='j' (at pp.c:17262)
          Constant: type='int', value='0' (at pp.c:17262)
        BinaryOp: op='<' (at pp.c:17262)
          ID: name='j' (at pp.c:17262)
          Constant: type='int', value='8' (at pp.c:17262)
        UnaryOp: op='p++' (at pp.c:17262)
          ID: name='j' (at pp.c:17262)
        Compound:  (at pp.c:17262)
          If:  (at pp.c:17263)
            BinaryOp: op='&' (at pp.c:17263)
              ID: name='c' (at pp.c:17263)
              Constant: type='int', value='0x01' (at pp.c:17263)
            Compound:  (at pp.c:17263)
              FuncCall:  (at None)
                ID: name='OneWireMasterC__writeOne' (at pp.c:17264)
            Compound:  (at pp.c:17266)
              FuncCall:  (at None)
                ID: name='OneWireMasterC__writeZero' (at pp.c:17267)
          Assignment: op='>>=' (at pp.c:17269)
            ID: name='c' (at pp.c:17269)
            Constant: type='int', value='1' (at pp.c:17269)
  FuncDef:  (at pp.c:17274)
    Decl: name='HplMsp430GeneralIOP__12__IO__clr', quals=[], storage=['inline', 'static'] (at pp.c:17274)
      FuncDecl: quals=None (at pp.c:17274)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__12__IO__clr', quals=[] (at pp.c:17274)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17276)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:17279)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='41U' (at pp.c:17279)
        UnaryOp: op='~' (at pp.c:17279)
          BinaryOp: op='<<' (at pp.c:17279)
            Constant: type='int', value='0x01' (at pp.c:17279)
            Constant: type='int', value='4' (at pp.c:17279)
  FuncDef:  (at pp.c:17283)
    Decl: name='Msp430GpioC__11__HplGeneralIO__clr', quals=[], storage=['static', 'inline'] (at pp.c:17283)
      FuncDecl: quals=None (at pp.c:17283)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__11__HplGeneralIO__clr', quals=[] (at pp.c:17283)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17283)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__12__IO__clr' (at pp.c:17285)
  FuncDef:  (at pp.c:17290)
    Decl: name='Msp430GpioC__11__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:17290)
      FuncDecl: quals=None (at pp.c:17290)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__11__GeneralIO__clr', quals=[] (at pp.c:17290)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17292)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__11__HplGeneralIO__clr' (at pp.c:17294)
  FuncDef:  (at pp.c:17298)
    Decl: name='OneWireMasterC__Pin__clr', quals=[], storage=['static', 'inline'] (at pp.c:17298)
      FuncDecl: quals=None (at pp.c:17298)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OneWireMasterC__Pin__clr', quals=[] (at pp.c:17298)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17298)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__11__GeneralIO__clr' (at pp.c:17300)
  FuncDef:  (at pp.c:17305)
    Decl: name='OneWireMasterC__reset', quals=[], storage=['inline', 'static'] (at pp.c:17305)
      FuncDecl: quals=None (at pp.c:17305)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OneWireMasterC__reset', quals=[] (at pp.c:17305)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:17307)
      Decl: name='i', quals=[], storage=[] (at pp.c:17308)
        TypeDecl: declname='i', quals=[] (at pp.c:17308)
          IdentifierType: names=['uint16_t'] (at None)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__Pin__makeInput' (at pp.c:17311)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__Pin__clr' (at pp.c:17312)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__Pin__makeOutput' (at pp.c:17313)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:17314)
        ExprList:  (at pp.c:17314)
          ID: name='OneWireMasterC__RESET_LOW_TIME' (at pp.c:17314)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__Pin__makeInput' (at pp.c:17315)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:17316)
        ExprList:  (at pp.c:17316)
          ID: name='OneWireMasterC__DELAY_60US' (at pp.c:17316)
      For:  (at pp.c:17318)
        Assignment: op='=' (at pp.c:17318)
          ID: name='i' (at pp.c:17318)
          Constant: type='int', value='0' (at pp.c:17318)
        BinaryOp: op='<' (at pp.c:17318)
          ID: name='i' (at pp.c:17318)
          ID: name='OneWireMasterC__PRESENCE_DETECT_LOW_TIME' (at pp.c:17318)
        ExprList:  (at pp.c:17318)
          Assignment: op='+=' (at pp.c:17318)
            ID: name='i' (at pp.c:17318)
            ID: name='OneWireMasterC__DELAY_5US' (at pp.c:17318)
          FuncCall:  (at None)
            ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:17318)
            ExprList:  (at pp.c:17318)
              ID: name='OneWireMasterC__DELAY_5US' (at pp.c:17318)
        If:  (at pp.c:17319)
          UnaryOp: op='!' (at None)
            FuncCall:  (at None)
              ID: name='OneWireMasterC__Pin__get' (at pp.c:17319)
          Compound:  (at pp.c:17319)
            Break:  (at pp.c:17321)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:17324)
        ExprList:  (at pp.c:17324)
          BinaryOp: op='-' (at pp.c:17324)
            ID: name='OneWireMasterC__PRESENCE_RESET_HIGH_TIME' (at pp.c:17324)
            ID: name='OneWireMasterC__DELAY_60US' (at pp.c:17324)
      Return:  (at pp.c:17325)
        BinaryOp: op='<' (at pp.c:17325)
          ID: name='i' (at pp.c:17325)
          ID: name='OneWireMasterC__PRESENCE_DETECT_LOW_TIME' (at pp.c:17325)
  FuncDef:  (at pp.c:17329)
    Decl: name='OneWireMasterC__OneWire__read', quals=[], storage=['inline', 'static'] (at pp.c:17329)
      FuncDecl: quals=None (at pp.c:17329)
        ParamList:  (at pp.c:17329)
          Decl: name='cmd', quals=[], storage=[] (at pp.c:17329)
            TypeDecl: declname='cmd', quals=[] (at pp.c:17329)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:17329)
            PtrDecl: quals=[] (at pp.c:17329)
              TypeDecl: declname='buf', quals=[] (at pp.c:17329)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:17329)
            TypeDecl: declname='len', quals=[] (at pp.c:17329)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='OneWireMasterC__OneWire__read', quals=[] (at pp.c:17329)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17331)
      Decl: name='e', quals=[], storage=[] (at pp.c:17332)
        TypeDecl: declname='e', quals=[] (at pp.c:17332)
          IdentifierType: names=['error_t'] (at None)
        ID: name='SUCCESS' (at pp.c:17332)
      Compound:  (at pp.c:17335)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:17335)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:17335)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:17335)
        Compound:  (at pp.c:17337)
          If:  (at pp.c:17338)
            FuncCall:  (at None)
              ID: name='OneWireMasterC__reset' (at pp.c:17338)
            Compound:  (at pp.c:17338)
              Decl: name='i', quals=[], storage=[] (at pp.c:17339)
                TypeDecl: declname='i', quals=[] (at pp.c:17339)
                  IdentifierType: names=['uint8_t'] (at None)
              FuncCall:  (at None)
                ID: name='OneWireMasterC__writeByte' (at pp.c:17342)
                ExprList:  (at pp.c:17342)
                  ID: name='cmd' (at pp.c:17342)
              For:  (at pp.c:17343)
                Assignment: op='=' (at pp.c:17343)
                  ID: name='i' (at pp.c:17343)
                  Constant: type='int', value='0' (at pp.c:17343)
                BinaryOp: op='<' (at pp.c:17343)
                  ID: name='i' (at pp.c:17343)
                  ID: name='len' (at pp.c:17343)
                UnaryOp: op='p++' (at pp.c:17343)
                  ID: name='i' (at pp.c:17343)
                Compound:  (at pp.c:17343)
                  Assignment: op='=' (at pp.c:17344)
                    ArrayRef:  (at pp.c:17344)
                      ID: name='buf' (at pp.c:17344)
                      ID: name='i' (at pp.c:17344)
                    FuncCall:  (at None)
                      ID: name='OneWireMasterC__readByte' (at pp.c:17344)
            Compound:  (at pp.c:17347)
              Assignment: op='=' (at pp.c:17348)
                ID: name='e' (at pp.c:17348)
                ID: name='EOFF' (at pp.c:17348)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:17352)
          ExprList:  (at pp.c:17352)
            ID: name='__nesc_atomic' (at pp.c:17352)
      Return:  (at pp.c:17353)
        ID: name='e' (at pp.c:17353)
  FuncDef:  (at pp.c:17357)
    Decl: name='Ds2411P__OneWire__read', quals=[], storage=['static', 'inline'] (at pp.c:17357)
      FuncDecl: quals=None (at pp.c:17357)
        ParamList:  (at pp.c:17357)
          Decl: name='cmd', quals=[], storage=[] (at pp.c:17357)
            TypeDecl: declname='cmd', quals=[] (at pp.c:17357)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:17357)
            PtrDecl: quals=[] (at pp.c:17357)
              TypeDecl: declname='buf', quals=[] (at pp.c:17357)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:17357)
            TypeDecl: declname='len', quals=[] (at pp.c:17357)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Ds2411P__OneWire__read', quals=[] (at pp.c:17357)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17357)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17359)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17359)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17363)
        ID: name='__nesc_result' (at pp.c:17363)
        FuncCall:  (at None)
          ID: name='OneWireMasterC__OneWire__read' (at pp.c:17363)
          ExprList:  (at pp.c:17363)
            ID: name='cmd' (at pp.c:17363)
            ID: name='buf' (at pp.c:17363)
            ID: name='len' (at pp.c:17363)
      Return:  (at pp.c:17367)
        ID: name='__nesc_result' (at pp.c:17367)
  FuncDef:  (at pp.c:17372)
    Decl: name='Ds2411P__readId', quals=[], storage=['inline', 'static'] (at pp.c:17372)
      FuncDecl: quals=None (at pp.c:17372)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Ds2411P__readId', quals=[] (at pp.c:17372)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17374)
      Decl: name='e', quals=[], storage=[] (at pp.c:17375)
        TypeDecl: declname='e', quals=[] (at pp.c:17375)
          IdentifierType: names=['error_t'] (at None)
        FuncCall:  (at None)
          ID: name='Ds2411P__OneWire__read' (at pp.c:17375)
          ExprList:  (at pp.c:17375)
            Constant: type='int', value='0x33' (at pp.c:17375)
            StructRef: type='.' (at pp.c:17375)
              ID: name='Ds2411P__ds2411id' (at pp.c:17375)
              ID: name='data' (at pp.c:17375)
            ID: name='DALLASID48_DATA_LENGTH' (at pp.c:17375)
      If:  (at pp.c:17378)
        BinaryOp: op='==' (at pp.c:17378)
          ID: name='e' (at pp.c:17378)
          ID: name='SUCCESS' (at pp.c:17378)
        Compound:  (at pp.c:17378)
          If:  (at pp.c:17379)
            FuncCall:  (at None)
              ID: name='dallasid48checkCrc' (at pp.c:17379)
              ExprList:  (at pp.c:17379)
                UnaryOp: op='&' (at pp.c:17379)
                  ID: name='Ds2411P__ds2411id' (at pp.c:17379)
            Compound:  (at pp.c:17379)
              Assignment: op='=' (at pp.c:17380)
                ID: name='Ds2411P__haveId' (at pp.c:17380)
                ID: name='TRUE' (at pp.c:17380)
            Compound:  (at pp.c:17382)
              Assignment: op='=' (at pp.c:17383)
                ID: name='e' (at pp.c:17383)
                ID: name='EINVAL' (at pp.c:17383)
      Return:  (at pp.c:17386)
        ID: name='e' (at pp.c:17386)
  FuncDef:  (at pp.c:17389)
    Decl: name='Ds2411P__ReadId48__read', quals=[], storage=['inline', 'static'] (at pp.c:17389)
      FuncDecl: quals=None (at pp.c:17389)
        ParamList:  (at pp.c:17389)
          Decl: name='id', quals=[], storage=[] (at pp.c:17389)
            PtrDecl: quals=[] (at pp.c:17389)
              TypeDecl: declname='id', quals=[] (at pp.c:17389)
                IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Ds2411P__ReadId48__read', quals=[] (at pp.c:17389)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17391)
      Decl: name='e', quals=[], storage=[] (at pp.c:17392)
        TypeDecl: declname='e', quals=[] (at pp.c:17392)
          IdentifierType: names=['error_t'] (at None)
        ID: name='SUCCESS' (at pp.c:17392)
      If:  (at pp.c:17395)
        UnaryOp: op='!' (at pp.c:17395)
          ID: name='Ds2411P__haveId' (at pp.c:17395)
        Compound:  (at pp.c:17395)
          Assignment: op='=' (at pp.c:17396)
            ID: name='e' (at pp.c:17396)
            FuncCall:  (at None)
              ID: name='Ds2411P__readId' (at pp.c:17396)
      If:  (at pp.c:17398)
        ID: name='Ds2411P__haveId' (at pp.c:17398)
        Compound:  (at pp.c:17398)
          Decl: name='i', quals=[], storage=[] (at pp.c:17399)
            TypeDecl: declname='i', quals=[] (at pp.c:17399)
              IdentifierType: names=['uint8_t'] (at None)
          For:  (at pp.c:17402)
            Assignment: op='=' (at pp.c:17402)
              ID: name='i' (at pp.c:17402)
              Constant: type='int', value='0' (at pp.c:17402)
            BinaryOp: op='<' (at pp.c:17402)
              ID: name='i' (at pp.c:17402)
              ID: name='DALLASID48_SERIAL_LENGTH' (at pp.c:17402)
            UnaryOp: op='p++' (at pp.c:17402)
              ID: name='i' (at pp.c:17402)
            Compound:  (at pp.c:17402)
              Assignment: op='=' (at pp.c:17403)
                ArrayRef:  (at pp.c:17403)
                  ID: name='id' (at pp.c:17403)
                  ID: name='i' (at pp.c:17403)
                ArrayRef:  (at pp.c:17403)
                  StructRef: type='.' (at pp.c:17403)
                    ID: name='Ds2411P__ds2411id' (at pp.c:17403)
                    ID: name='serial' (at pp.c:17403)
                  ID: name='i' (at pp.c:17403)
      Return:  (at pp.c:17406)
        ID: name='e' (at pp.c:17406)
  FuncDef:  (at pp.c:17410)
    Decl: name='DallasId48ToIeeeEui64C__ReadId48__read', quals=[], storage=['static', 'inline'] (at pp.c:17410)
      FuncDecl: quals=None (at pp.c:17410)
        ParamList:  (at pp.c:17410)
          Decl: name='id', quals=[], storage=[] (at pp.c:17410)
            PtrDecl: quals=[] (at pp.c:17410)
              TypeDecl: declname='id', quals=[] (at pp.c:17410)
                IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='DallasId48ToIeeeEui64C__ReadId48__read', quals=[] (at pp.c:17410)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17410)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17412)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17412)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17416)
        ID: name='__nesc_result' (at pp.c:17416)
        FuncCall:  (at None)
          ID: name='Ds2411P__ReadId48__read' (at pp.c:17416)
          ExprList:  (at pp.c:17416)
            ID: name='id' (at pp.c:17416)
      Return:  (at pp.c:17420)
        ID: name='__nesc_result' (at pp.c:17420)
  FuncDef:  (at pp.c:17425)
    Decl: name='Msp430TimerP__0__Timer__get', quals=[], storage=['inline', 'static'] (at pp.c:17425)
      FuncDecl: quals=None (at pp.c:17425)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Timer__get', quals=[] (at pp.c:17425)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:17426)
      If:  (at pp.c:17431)
        Constant: type='int', value='0' (at pp.c:17431)
        Compound:  (at pp.c:17431)
          Compound:  (at pp.c:17434)
            Decl: name='t0', quals=[], storage=[] (at pp.c:17435)
              TypeDecl: declname='t0', quals=[] (at pp.c:17435)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t1', quals=[], storage=[] (at pp.c:17436)
              TypeDecl: declname='t1', quals=[] (at pp.c:17436)
                IdentifierType: names=['uint16_t'] (at None)
              UnaryOp: op='*' (at None)
                Cast:  (at None)
                  Typename: quals=['volatile'] (at None)
                    PtrDecl: quals=[] (at pp.c:17436)
                      TypeDecl: declname=None, quals=['volatile'] (at None)
                        IdentifierType: names=['uint16_t'] (at None)
                  Constant: type='int', value='368U' (at pp.c:17436)
            DoWhile:  (at pp.c:17439)
              BinaryOp: op='!=' (at pp.c:17447)
                ID: name='t0' (at pp.c:17447)
                ID: name='t1' (at pp.c:17447)
              Compound:  (at pp.c:17439)
                Assignment: op='=' (at pp.c:17441)
                  ID: name='t0' (at pp.c:17441)
                  ID: name='t1' (at pp.c:17441)
                Assignment: op='=' (at pp.c:17443)
                  ID: name='t1' (at pp.c:17443)
                  UnaryOp: op='*' (at None)
                    Cast:  (at None)
                      Typename: quals=['volatile'] (at None)
                        PtrDecl: quals=[] (at pp.c:17443)
                          TypeDecl: declname=None, quals=['volatile'] (at None)
                            IdentifierType: names=['uint16_t'] (at None)
                      Constant: type='int', value='368U' (at pp.c:17443)
            Compound:  (at pp.c:17448)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:17449)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:17449)
                  IdentifierType: names=['int', 'unsigned'] (at None)
                ID: name='t1' (at pp.c:17451)
              Return:  (at pp.c:17454)
                ID: name='__nesc_temp' (at pp.c:17454)
        Compound:  (at pp.c:17460)
          Return:  (at pp.c:17461)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:17461)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='368U' (at pp.c:17461)
  FuncDef:  (at pp.c:17466)
    Decl: name='Msp430CounterC__1__Msp430Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:17466)
      FuncDecl: quals=None (at pp.c:17466)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__1__Msp430Timer__get', quals=[] (at pp.c:17466)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:17466)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17468)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17468)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17472)
        ID: name='__nesc_result' (at pp.c:17472)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__0__Timer__get' (at pp.c:17472)
      Return:  (at pp.c:17476)
        ID: name='__nesc_result' (at pp.c:17476)
  FuncDef:  (at pp.c:17481)
    Decl: name='Msp430CounterC__1__Counter__get', quals=[], storage=['inline', 'static'] (at pp.c:17481)
      FuncDecl: quals=None (at pp.c:17481)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__1__Counter__get', quals=[] (at pp.c:17481)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:17482)
      Return:  (at pp.c:17483)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__1__Msp430Timer__get' (at pp.c:17483)
  FuncDef:  (at pp.c:17487)
    Decl: name='BusyWaitCounterC__0__Counter__get', quals=[], storage=['static', 'inline'] (at pp.c:17487)
      FuncDecl: quals=None (at pp.c:17487)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BusyWaitCounterC__0__Counter__get', quals=[] (at pp.c:17487)
          IdentifierType: names=['BusyWaitCounterC__0__Counter__size_type'] (at None)
    Compound:  (at pp.c:17487)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17489)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17489)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17493)
        ID: name='__nesc_result' (at pp.c:17493)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__1__Counter__get' (at pp.c:17493)
      Return:  (at pp.c:17497)
        ID: name='__nesc_result' (at pp.c:17497)
  FuncDef:  (at pp.c:17502)
    Decl: name='CC2420SpiP__Resource__isOwner', quals=[], storage=['inline', 'static'] (at pp.c:17502)
      FuncDecl: quals=None (at pp.c:17502)
        ParamList:  (at pp.c:17502)
          Decl: name='id', quals=[], storage=[] (at pp.c:17502)
            TypeDecl: declname='id', quals=[] (at pp.c:17502)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Resource__isOwner', quals=[] (at pp.c:17502)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:17504)
      Compound:  (at pp.c:17507)
        Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:17508)
          TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:17508)
            IdentifierType: names=['char', 'unsigned'] (at None)
          BinaryOp: op='==' (at pp.c:17510)
            ID: name='CC2420SpiP__m_holder' (at pp.c:17510)
            ID: name='id' (at pp.c:17510)
        Return:  (at pp.c:17513)
          ID: name='__nesc_temp' (at pp.c:17513)
  FuncDef:  (at pp.c:17518)
    Decl: name='CC2420ReceiveP__SpiResource__isOwner', quals=[], storage=['static', 'inline'] (at pp.c:17518)
      FuncDecl: quals=None (at pp.c:17518)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__SpiResource__isOwner', quals=[] (at pp.c:17518)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:17518)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17520)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17520)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17524)
        ID: name='__nesc_result' (at pp.c:17524)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__isOwner' (at pp.c:17524)
          ExprList:  (at pp.c:17524)
            ID: name='CC2420SpiC__4__CLIENT_ID' (at pp.c:17524)
      Return:  (at pp.c:17528)
        ID: name='__nesc_result' (at pp.c:17528)
  FuncDef:  (at pp.c:17533)
    Decl: name='CC2420ReceiveP__SpiResource__immediateRequest', quals=[], storage=['static', 'inline'] (at pp.c:17533)
      FuncDecl: quals=None (at pp.c:17533)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__SpiResource__immediateRequest', quals=[] (at pp.c:17533)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17533)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17535)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17535)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17539)
        ID: name='__nesc_result' (at pp.c:17539)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__immediateRequest' (at pp.c:17539)
          ExprList:  (at pp.c:17539)
            ID: name='CC2420SpiC__4__CLIENT_ID' (at pp.c:17539)
      Return:  (at pp.c:17543)
        ID: name='__nesc_result' (at pp.c:17543)
  FuncDef:  (at pp.c:17548)
    Decl: name='CC2420ReceiveP__SpiResource__request', quals=[], storage=['static', 'inline'] (at pp.c:17548)
      FuncDecl: quals=None (at pp.c:17548)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__SpiResource__request', quals=[] (at pp.c:17548)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17548)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17550)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17550)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17554)
        ID: name='__nesc_result' (at pp.c:17554)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__request' (at pp.c:17554)
          ExprList:  (at pp.c:17554)
            ID: name='CC2420SpiC__4__CLIENT_ID' (at pp.c:17554)
      Return:  (at pp.c:17558)
        ID: name='__nesc_result' (at pp.c:17558)
  FuncDef:  (at pp.c:17563)
    Decl: name='CC2420SpiP__grant__postTask', quals=[], storage=['static', 'inline'] (at pp.c:17563)
      FuncDecl: quals=None (at pp.c:17563)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__grant__postTask', quals=[] (at pp.c:17563)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17563)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17565)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17565)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17569)
        ID: name='__nesc_result' (at pp.c:17569)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:17569)
          ExprList:  (at pp.c:17569)
            ID: name='CC2420SpiP__grant' (at pp.c:17569)
      Return:  (at pp.c:17573)
        ID: name='__nesc_result' (at pp.c:17573)
  FuncDef:  (at pp.c:17578)
    Decl: name='CC2420SpiP__SpiResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:17578)
      FuncDecl: quals=None (at pp.c:17578)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__SpiResource__granted', quals=[] (at pp.c:17578)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17580)
      FuncCall:  (at None)
        ID: name='CC2420SpiP__grant__postTask' (at pp.c:17581)
  FuncDef:  (at pp.c:17585)
    Decl: name='Msp430SpiNoDmaP__0__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:17585)
      FuncDecl: quals=None (at pp.c:17585)
        ParamList:  (at pp.c:17585)
          Decl: name='id', quals=[], storage=[] (at pp.c:17585)
            TypeDecl: declname='id', quals=[] (at pp.c:17585)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__default__granted', quals=[] (at pp.c:17585)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17587)
  FuncDef:  (at pp.c:17591)
    Decl: name='Msp430SpiNoDmaP__0__Resource__granted', quals=[], storage=['static', 'inline'] (at pp.c:17591)
      FuncDecl: quals=None (at pp.c:17591)
        ParamList:  (at pp.c:17591)
          Decl: name='arg_0x101d592f0', quals=[], storage=[] (at pp.c:17591)
            TypeDecl: declname='arg_0x101d592f0', quals=[] (at pp.c:17591)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__granted', quals=[] (at pp.c:17591)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17591)
      Switch:  (at pp.c:17593)
        ID: name='arg_0x101d592f0' (at pp.c:17593)
        Compound:  (at pp.c:17593)
          Case:  (at pp.c:17595)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:17595)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__SpiResource__granted' (at pp.c:17597)
          Break:  (at pp.c:17599)
          Default:  (at pp.c:17601)
            FuncCall:  (at None)
              ID: name='Msp430SpiNoDmaP__0__Resource__default__granted' (at pp.c:17603)
              ExprList:  (at pp.c:17603)
                ID: name='arg_0x101d592f0' (at pp.c:17603)
          Break:  (at pp.c:17605)
  FuncDef:  (at pp.c:17612)
    Decl: name='Msp430SpiNoDmaP__0__UsartResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:17612)
      FuncDecl: quals=None (at pp.c:17612)
        ParamList:  (at pp.c:17612)
          Decl: name='id', quals=[], storage=[] (at pp.c:17612)
            TypeDecl: declname='id', quals=[] (at pp.c:17612)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__granted', quals=[] (at pp.c:17612)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17614)
      FuncCall:  (at None)
        ID: name='Msp430SpiNoDmaP__0__Resource__granted' (at pp.c:17615)
        ExprList:  (at pp.c:17615)
          ID: name='id' (at pp.c:17615)
  FuncDef:  (at pp.c:17619)
    Decl: name='ArbiterP__0__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:17619)
      FuncDecl: quals=None (at pp.c:17619)
        ParamList:  (at pp.c:17619)
          Decl: name='id', quals=[], storage=[] (at pp.c:17619)
            TypeDecl: declname='id', quals=[] (at pp.c:17619)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__Resource__default__granted', quals=[] (at pp.c:17619)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17621)
  FuncDef:  (at pp.c:17625)
    Decl: name='ArbiterP__0__Resource__granted', quals=[], storage=['static', 'inline'] (at pp.c:17625)
      FuncDecl: quals=None (at pp.c:17625)
        ParamList:  (at pp.c:17625)
          Decl: name='arg_0x101ede658', quals=[], storage=[] (at pp.c:17625)
            TypeDecl: declname='arg_0x101ede658', quals=[] (at pp.c:17625)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__Resource__granted', quals=[] (at pp.c:17625)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17625)
      Switch:  (at pp.c:17627)
        ID: name='arg_0x101ede658' (at pp.c:17627)
        Compound:  (at pp.c:17627)
          Case:  (at pp.c:17629)
            ID: name='Msp430Usart0C__0__CLIENT_ID' (at pp.c:17629)
            FuncCall:  (at None)
              ID: name='Msp430SpiNoDmaP__0__UsartResource__granted' (at pp.c:17631)
              ExprList:  (at pp.c:17631)
                ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:17631)
          Break:  (at pp.c:17633)
          Default:  (at pp.c:17635)
            FuncCall:  (at None)
              ID: name='ArbiterP__0__Resource__default__granted' (at pp.c:17637)
              ExprList:  (at pp.c:17637)
                ID: name='arg_0x101ede658' (at pp.c:17637)
          Break:  (at pp.c:17639)
  FuncDef:  (at pp.c:17646)
    Decl: name='ArbiterP__0__grantedTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:17646)
      FuncDecl: quals=None (at pp.c:17646)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__grantedTask__runTask', quals=[] (at pp.c:17646)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17648)
      Compound:  (at pp.c:17649)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:17649)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:17649)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:17649)
        Compound:  (at pp.c:17651)
          Assignment: op='=' (at pp.c:17652)
            ID: name='ArbiterP__0__resId' (at pp.c:17652)
            ID: name='ArbiterP__0__reqResId' (at pp.c:17652)
          Assignment: op='=' (at pp.c:17653)
            ID: name='ArbiterP__0__state' (at pp.c:17653)
            ID: name='ArbiterP__0__RES_BUSY' (at pp.c:17653)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:17656)
          ExprList:  (at pp.c:17656)
            ID: name='__nesc_atomic' (at pp.c:17656)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceConfigure__configure' (at pp.c:17657)
        ExprList:  (at pp.c:17657)
          ID: name='ArbiterP__0__resId' (at pp.c:17657)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__Resource__granted' (at pp.c:17658)
        ExprList:  (at pp.c:17658)
          ID: name='ArbiterP__0__resId' (at pp.c:17658)
  FuncDef:  (at pp.c:17662)
    Decl: name='Msp430SpiNoDmaP__0__SpiPacket__default__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:17662)
      FuncDecl: quals=None (at pp.c:17662)
        ParamList:  (at pp.c:17662)
          Decl: name='id', quals=[], storage=[] (at pp.c:17662)
            TypeDecl: declname='id', quals=[] (at pp.c:17662)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='tx_buf', quals=[], storage=[] (at pp.c:17662)
            PtrDecl: quals=[] (at pp.c:17662)
              TypeDecl: declname='tx_buf', quals=[] (at pp.c:17662)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='rx_buf', quals=[], storage=[] (at pp.c:17662)
            PtrDecl: quals=[] (at pp.c:17662)
              TypeDecl: declname='rx_buf', quals=[] (at pp.c:17662)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:17662)
            TypeDecl: declname='len', quals=[] (at pp.c:17662)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:17662)
            TypeDecl: declname='error', quals=[] (at pp.c:17662)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__SpiPacket__default__sendDone', quals=[] (at pp.c:17662)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17664)
  FuncDef:  (at pp.c:17668)
    Decl: name='Msp430SpiNoDmaP__0__SpiPacket__sendDone', quals=[], storage=['static', 'inline'] (at pp.c:17668)
      FuncDecl: quals=None (at pp.c:17668)
        ParamList:  (at pp.c:17668)
          Decl: name='arg_0x101d562f0', quals=[], storage=[] (at pp.c:17668)
            TypeDecl: declname='arg_0x101d562f0', quals=[] (at pp.c:17668)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='txBuf', quals=[], storage=[] (at pp.c:17668)
            PtrDecl: quals=[] (at pp.c:17668)
              TypeDecl: declname='txBuf', quals=[] (at pp.c:17668)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='rxBuf', quals=[], storage=[] (at pp.c:17668)
            PtrDecl: quals=[] (at pp.c:17668)
              TypeDecl: declname='rxBuf', quals=[] (at pp.c:17668)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:17668)
            TypeDecl: declname='len', quals=[] (at pp.c:17668)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:17668)
            TypeDecl: declname='error', quals=[] (at pp.c:17668)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__SpiPacket__sendDone', quals=[] (at pp.c:17668)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17668)
      Switch:  (at pp.c:17670)
        ID: name='arg_0x101d562f0' (at pp.c:17670)
        Compound:  (at pp.c:17670)
          Case:  (at pp.c:17672)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:17672)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__SpiPacket__sendDone' (at pp.c:17674)
              ExprList:  (at pp.c:17674)
                ID: name='txBuf' (at pp.c:17674)
                ID: name='rxBuf' (at pp.c:17674)
                ID: name='len' (at pp.c:17674)
                ID: name='error' (at pp.c:17674)
          Break:  (at pp.c:17676)
          Default:  (at pp.c:17678)
            FuncCall:  (at None)
              ID: name='Msp430SpiNoDmaP__0__SpiPacket__default__sendDone' (at pp.c:17680)
              ExprList:  (at pp.c:17680)
                ID: name='arg_0x101d562f0' (at pp.c:17680)
                ID: name='txBuf' (at pp.c:17680)
                ID: name='rxBuf' (at pp.c:17680)
                ID: name='len' (at pp.c:17680)
                ID: name='error' (at pp.c:17680)
          Break:  (at pp.c:17682)
  FuncDef:  (at pp.c:17689)
    Decl: name='Msp430SpiNoDmaP__0__signalDone', quals=[], storage=['inline', 'static'] (at pp.c:17689)
      FuncDecl: quals=None (at pp.c:17689)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__signalDone', quals=[] (at pp.c:17689)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17691)
      FuncCall:  (at None)
        ID: name='Msp430SpiNoDmaP__0__SpiPacket__sendDone' (at pp.c:17692)
        ExprList:  (at pp.c:17692)
          ID: name='Msp430SpiNoDmaP__0__m_client' (at pp.c:17692)
          ID: name='Msp430SpiNoDmaP__0__m_tx_buf' (at pp.c:17692)
          ID: name='Msp430SpiNoDmaP__0__m_rx_buf' (at pp.c:17692)
          ID: name='Msp430SpiNoDmaP__0__m_len' (at pp.c:17692)
          ID: name='SUCCESS' (at pp.c:17693)
  FuncDef:  (at pp.c:17697)
    Decl: name='Msp430SpiNoDmaP__0__signalDone_task__runTask', quals=[], storage=['inline', 'static'] (at pp.c:17697)
      FuncDecl: quals=None (at pp.c:17697)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__signalDone_task__runTask', quals=[] (at pp.c:17697)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17699)
      Compound:  (at pp.c:17700)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:17700)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:17700)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:17700)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__signalDone' (at pp.c:17702)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:17704)
          ExprList:  (at pp.c:17704)
            ID: name='__nesc_atomic' (at pp.c:17704)
  FuncDef:  (at pp.c:17708)
    Decl: name='CC2420TransmitP__TXFIFO__readDone', quals=[], storage=['inline', 'static'] (at pp.c:17708)
      FuncDecl: quals=None (at pp.c:17708)
        ParamList:  (at pp.c:17708)
          Decl: name='tx_buf', quals=[], storage=[] (at pp.c:17708)
            PtrDecl: quals=[] (at pp.c:17708)
              TypeDecl: declname='tx_buf', quals=[] (at pp.c:17708)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='tx_len', quals=[], storage=[] (at pp.c:17708)
            TypeDecl: declname='tx_len', quals=[] (at pp.c:17708)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:17709)
            TypeDecl: declname='error', quals=[] (at pp.c:17709)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__TXFIFO__readDone', quals=[] (at pp.c:17708)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17711)
  FuncDef:  (at pp.c:17715)
    Decl: name='CC2420ReceiveP__SpiResource__release', quals=[], storage=['static', 'inline'] (at pp.c:17715)
      FuncDecl: quals=None (at pp.c:17715)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__SpiResource__release', quals=[] (at pp.c:17715)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17715)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17717)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17717)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17721)
        ID: name='__nesc_result' (at pp.c:17721)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__release' (at pp.c:17721)
          ExprList:  (at pp.c:17721)
            ID: name='CC2420SpiC__4__CLIENT_ID' (at pp.c:17721)
      Return:  (at pp.c:17725)
        ID: name='__nesc_result' (at pp.c:17725)
  FuncDef:  (at pp.c:17730)
    Decl: name='CC2420ReceiveP__CSN__set', quals=[], storage=['static', 'inline'] (at pp.c:17730)
      FuncDecl: quals=None (at pp.c:17730)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CSN__set', quals=[] (at pp.c:17730)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17730)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__4__GeneralIO__set' (at pp.c:17732)
  FuncDef:  (at pp.c:17737)
    Decl: name='CC2420ReceiveP__receiveDone_task__postTask', quals=[], storage=['static', 'inline'] (at pp.c:17737)
      FuncDecl: quals=None (at pp.c:17737)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__receiveDone_task__postTask', quals=[] (at pp.c:17737)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17737)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17739)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17739)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17743)
        ID: name='__nesc_result' (at pp.c:17743)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:17743)
          ExprList:  (at pp.c:17743)
            ID: name='CC2420ReceiveP__receiveDone_task' (at pp.c:17743)
      Return:  (at pp.c:17747)
        ID: name='__nesc_result' (at pp.c:17747)
  FuncDef:  (at pp.c:17752)
    Decl: name='CC2420TransmitP__CC2420PacketBody__getMetadata', quals=[], storage=['static', 'inline'] (at pp.c:17752)
      FuncDecl: quals=None (at pp.c:17752)
        ParamList:  (at pp.c:17752)
          Decl: name='msg', quals=[], storage=[] (at pp.c:17752)
            PtrDecl: quals=[] (at pp.c:17752)
              TypeDecl: declname='msg', quals=[] (at pp.c:17752)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:17752)
          TypeDecl: declname='CC2420TransmitP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:17752)
            IdentifierType: names=['cc2420_metadata_t'] (at None)
    Compound:  (at pp.c:17752)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17754)
        PtrDecl: quals=[] (at pp.c:17754)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17754)
            Struct: name='cc2420_metadata_t', packed=False (at pp.c:17754)
      Assignment: op='=' (at pp.c:17758)
        ID: name='__nesc_result' (at pp.c:17758)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getMetadata' (at pp.c:17758)
          ExprList:  (at pp.c:17758)
            ID: name='msg' (at pp.c:17758)
      Return:  (at pp.c:17762)
        ID: name='__nesc_result' (at pp.c:17762)
  FuncDef:  (at pp.c:17767)
    Decl: name='CC2420TransmitP__CC2420Receive__receive', quals=[], storage=['inline', 'static'] (at pp.c:17767)
      FuncDecl: quals=None (at pp.c:17767)
        ParamList:  (at pp.c:17767)
          Decl: name='type', quals=[], storage=[] (at pp.c:17767)
            TypeDecl: declname='type', quals=[] (at pp.c:17767)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='ack_msg', quals=[], storage=[] (at pp.c:17767)
            PtrDecl: quals=[] (at pp.c:17767)
              TypeDecl: declname='ack_msg', quals=[] (at pp.c:17767)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__CC2420Receive__receive', quals=[] (at pp.c:17767)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17769)
      Decl: name='ack_header', quals=[], storage=[] (at pp.c:17770)
        PtrDecl: quals=[] (at pp.c:17770)
          TypeDecl: declname='ack_header', quals=[] (at pp.c:17770)
            IdentifierType: names=['cc2420_header_t'] (at None)
      Decl: name='msg_header', quals=[], storage=[] (at pp.c:17771)
        PtrDecl: quals=[] (at pp.c:17771)
          TypeDecl: declname='msg_header', quals=[] (at pp.c:17771)
            IdentifierType: names=['cc2420_header_t'] (at None)
      Decl: name='msg_metadata', quals=[], storage=[] (at pp.c:17772)
        PtrDecl: quals=[] (at pp.c:17772)
          TypeDecl: declname='msg_metadata', quals=[] (at pp.c:17772)
            IdentifierType: names=['cc2420_metadata_t'] (at None)
      Decl: name='ack_buf', quals=[], storage=[] (at pp.c:17773)
        PtrDecl: quals=[] (at pp.c:17773)
          TypeDecl: declname='ack_buf', quals=[] (at pp.c:17773)
            IdentifierType: names=['uint8_t'] (at None)
      Decl: name='length', quals=[], storage=[] (at pp.c:17774)
        TypeDecl: declname='length', quals=[] (at pp.c:17774)
          IdentifierType: names=['uint8_t'] (at None)
      If:  (at pp.c:17776)
        BinaryOp: op='&&' (at pp.c:17776)
          BinaryOp: op='==' (at pp.c:17776)
            ID: name='type' (at pp.c:17776)
            ID: name='IEEE154_TYPE_ACK' (at pp.c:17776)
          ID: name='CC2420TransmitP__m_msg' (at pp.c:17776)
        Compound:  (at pp.c:17776)
          Assignment: op='=' (at pp.c:17777)
            ID: name='ack_header' (at pp.c:17777)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__CC2420PacketBody__getHeader' (at pp.c:17777)
              ExprList:  (at pp.c:17777)
                ID: name='ack_msg' (at pp.c:17777)
          Assignment: op='=' (at pp.c:17778)
            ID: name='msg_header' (at pp.c:17778)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__CC2420PacketBody__getHeader' (at pp.c:17778)
              ExprList:  (at pp.c:17778)
                ID: name='CC2420TransmitP__m_msg' (at pp.c:17778)
          If:  (at pp.c:17780)
            BinaryOp: op='&&' (at pp.c:17780)
              BinaryOp: op='==' (at pp.c:17780)
                ID: name='CC2420TransmitP__m_state' (at pp.c:17780)
                ID: name='CC2420TransmitP__S_ACK_WAIT' (at pp.c:17780)
              BinaryOp: op='==' (at None)
                FuncCall:  (at None)
                  ID: name='__nesc_ntoh_leuint8' (at pp.c:17780)
                  ExprList:  (at pp.c:17780)
                    StructRef: type='.' (at pp.c:17780)
                      StructRef: type='->' (at pp.c:17780)
                        ID: name='msg_header' (at pp.c:17780)
                        ID: name='dsn' (at pp.c:17780)
                      ID: name='nxdata' (at pp.c:17780)
                FuncCall:  (at None)
                  ID: name='__nesc_ntoh_leuint8' (at pp.c:17780)
                  ExprList:  (at pp.c:17780)
                    StructRef: type='.' (at pp.c:17780)
                      StructRef: type='->' (at pp.c:17780)
                        ID: name='ack_header' (at pp.c:17780)
                        ID: name='dsn' (at pp.c:17780)
                      ID: name='nxdata' (at pp.c:17780)
            Compound:  (at pp.c:17780)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__BackoffTimer__stop' (at pp.c:17781)
              Assignment: op='=' (at pp.c:17783)
                ID: name='msg_metadata' (at pp.c:17783)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__CC2420PacketBody__getMetadata' (at pp.c:17783)
                  ExprList:  (at pp.c:17783)
                    ID: name='CC2420TransmitP__m_msg' (at pp.c:17783)
              Assignment: op='=' (at pp.c:17784)
                ID: name='ack_buf' (at pp.c:17784)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    PtrDecl: quals=[] (at pp.c:17784)
                      TypeDecl: declname=None, quals=[] (at None)
                        IdentifierType: names=['uint8_t'] (at None)
                  ID: name='ack_header' (at pp.c:17784)
              Assignment: op='=' (at pp.c:17785)
                ID: name='length' (at pp.c:17785)
                FuncCall:  (at None)
                  ID: name='__nesc_ntoh_leuint8' (at pp.c:17785)
                  ExprList:  (at pp.c:17785)
                    StructRef: type='.' (at pp.c:17785)
                      StructRef: type='->' (at pp.c:17785)
                        ID: name='ack_header' (at pp.c:17785)
                        ID: name='length' (at pp.c:17785)
                      ID: name='nxdata' (at pp.c:17785)
              FuncCall:  (at None)
                ID: name='__nesc_hton_int8' (at pp.c:17787)
                ExprList:  (at pp.c:17787)
                  StructRef: type='.' (at pp.c:17787)
                    StructRef: type='->' (at pp.c:17787)
                      ID: name='msg_metadata' (at pp.c:17787)
                      ID: name='ack' (at pp.c:17787)
                    ID: name='nxdata' (at pp.c:17787)
                  ID: name='TRUE' (at pp.c:17787)
              FuncCall:  (at None)
                ID: name='__nesc_hton_uint8' (at pp.c:17788)
                ExprList:  (at pp.c:17788)
                  StructRef: type='.' (at pp.c:17788)
                    StructRef: type='->' (at pp.c:17788)
                      ID: name='msg_metadata' (at pp.c:17788)
                      ID: name='rssi' (at pp.c:17788)
                    ID: name='nxdata' (at pp.c:17788)
                  ArrayRef:  (at pp.c:17788)
                    ID: name='ack_buf' (at pp.c:17788)
                    BinaryOp: op='-' (at pp.c:17788)
                      ID: name='length' (at pp.c:17788)
                      Constant: type='int', value='1' (at pp.c:17788)
              FuncCall:  (at None)
                ID: name='__nesc_hton_uint8' (at pp.c:17789)
                ExprList:  (at pp.c:17789)
                  StructRef: type='.' (at pp.c:17789)
                    StructRef: type='->' (at pp.c:17789)
                      ID: name='msg_metadata' (at pp.c:17789)
                      ID: name='lqi' (at pp.c:17789)
                    ID: name='nxdata' (at pp.c:17789)
                  BinaryOp: op='&' (at pp.c:17789)
                    ArrayRef:  (at pp.c:17789)
                      ID: name='ack_buf' (at pp.c:17789)
                      ID: name='length' (at pp.c:17789)
                    Constant: type='int', value='0x7f' (at pp.c:17789)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__signalDone' (at pp.c:17790)
                ExprList:  (at pp.c:17790)
                  ID: name='SUCCESS' (at pp.c:17790)
  FuncDef:  (at pp.c:17796)
    Decl: name='CC2420ReceiveP__CC2420Receive__receive', quals=[], storage=['static', 'inline'] (at pp.c:17796)
      FuncDecl: quals=None (at pp.c:17796)
        ParamList:  (at pp.c:17796)
          Decl: name='type', quals=[], storage=[] (at pp.c:17796)
            TypeDecl: declname='type', quals=[] (at pp.c:17796)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='message', quals=[], storage=[] (at pp.c:17796)
            PtrDecl: quals=[] (at pp.c:17796)
              TypeDecl: declname='message', quals=[] (at pp.c:17796)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CC2420Receive__receive', quals=[] (at pp.c:17796)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17796)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__CC2420Receive__receive' (at pp.c:17798)
        ExprList:  (at pp.c:17798)
          ID: name='type' (at pp.c:17798)
          ID: name='message' (at pp.c:17798)
  FuncDef:  (at pp.c:17803)
    Decl: name='CC2420ReceiveP__PacketTimeStamp__clear', quals=[], storage=['static', 'inline'] (at pp.c:17803)
      FuncDecl: quals=None (at pp.c:17803)
        ParamList:  (at pp.c:17803)
          Decl: name='msg', quals=[], storage=[] (at pp.c:17803)
            PtrDecl: quals=[] (at pp.c:17803)
              TypeDecl: declname='msg', quals=[] (at pp.c:17803)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ReceiveP__PacketTimeStamp__clear', quals=[] (at pp.c:17803)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17803)
      FuncCall:  (at None)
        ID: name='CC2420PacketP__PacketTimeStamp32khz__clear' (at pp.c:17805)
        ExprList:  (at pp.c:17805)
          ID: name='msg' (at pp.c:17805)
  FuncDef:  (at pp.c:17817)
    Decl: name='CC2420ReceiveP__PacketTimeStamp__set', quals=[], storage=['static', 'inline'] (at pp.c:17817)
      FuncDecl: quals=None (at pp.c:17817)
        ParamList:  (at pp.c:17817)
          Decl: name='msg', quals=[], storage=[] (at pp.c:17817)
            PtrDecl: quals=[] (at pp.c:17817)
              TypeDecl: declname='msg', quals=[] (at pp.c:17817)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='value', quals=[], storage=[] (at pp.c:17817)
            TypeDecl: declname='value', quals=[] (at pp.c:17817)
              IdentifierType: names=['CC2420ReceiveP__PacketTimeStamp__size_type'] (at None)
        TypeDecl: declname='CC2420ReceiveP__PacketTimeStamp__set', quals=[] (at pp.c:17817)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17817)
      FuncCall:  (at None)
        ID: name='CC2420PacketP__PacketTimeStamp32khz__set' (at pp.c:17819)
        ExprList:  (at pp.c:17819)
          ID: name='msg' (at pp.c:17819)
          ID: name='value' (at pp.c:17819)
  FuncDef:  (at pp.c:17824)
    Decl: name='HplMsp430GeneralIOP__0__IO__getRaw', quals=[], storage=['inline', 'static'] (at pp.c:17824)
      FuncDecl: quals=None (at pp.c:17824)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__0__IO__getRaw', quals=[] (at pp.c:17824)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:17826)
      Return:  (at pp.c:17828)
        BinaryOp: op='&' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:17828)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='32U' (at pp.c:17828)
          BinaryOp: op='<<' (at pp.c:17828)
            Constant: type='int', value='0x01' (at pp.c:17828)
            Constant: type='int', value='0' (at pp.c:17828)
  FuncDef:  (at pp.c:17832)
    Decl: name='HplMsp430GeneralIOP__0__IO__get', quals=[], storage=['inline', 'static'] (at pp.c:17832)
      FuncDecl: quals=None (at pp.c:17832)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__0__IO__get', quals=[] (at pp.c:17832)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:17834)
      Return:  (at pp.c:17836)
        BinaryOp: op='!=' (at None)
          FuncCall:  (at None)
            ID: name='HplMsp430GeneralIOP__0__IO__getRaw' (at pp.c:17836)
          Constant: type='int', value='0' (at pp.c:17836)
  FuncDef:  (at pp.c:17840)
    Decl: name='Msp430GpioC__6__HplGeneralIO__get', quals=[], storage=['static', 'inline'] (at pp.c:17840)
      FuncDecl: quals=None (at pp.c:17840)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__6__HplGeneralIO__get', quals=[] (at pp.c:17840)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:17840)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17842)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17842)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17846)
        ID: name='__nesc_result' (at pp.c:17846)
        FuncCall:  (at None)
          ID: name='HplMsp430GeneralIOP__0__IO__get' (at pp.c:17846)
      Return:  (at pp.c:17850)
        ID: name='__nesc_result' (at pp.c:17850)
  FuncDef:  (at pp.c:17855)
    Decl: name='Msp430GpioC__6__GeneralIO__get', quals=[], storage=['inline', 'static'] (at pp.c:17855)
      FuncDecl: quals=None (at pp.c:17855)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__6__GeneralIO__get', quals=[] (at pp.c:17855)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:17857)
      Return:  (at pp.c:17859)
        FuncCall:  (at None)
          ID: name='Msp430GpioC__6__HplGeneralIO__get' (at pp.c:17859)
  FuncDef:  (at pp.c:17863)
    Decl: name='CC2420ReceiveP__FIFOP__get', quals=[], storage=['static', 'inline'] (at pp.c:17863)
      FuncDecl: quals=None (at pp.c:17863)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__FIFOP__get', quals=[] (at pp.c:17863)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:17863)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17865)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17865)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17869)
        ID: name='__nesc_result' (at pp.c:17869)
        FuncCall:  (at None)
          ID: name='Msp430GpioC__6__GeneralIO__get' (at pp.c:17869)
      Return:  (at pp.c:17873)
        ID: name='__nesc_result' (at pp.c:17873)
  FuncDef:  (at pp.c:17878)
    Decl: name='HplMsp430GeneralIOP__3__IO__getRaw', quals=[], storage=['inline', 'static'] (at pp.c:17878)
      FuncDecl: quals=None (at pp.c:17878)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__3__IO__getRaw', quals=[] (at pp.c:17878)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:17880)
      Return:  (at pp.c:17882)
        BinaryOp: op='&' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:17882)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='32U' (at pp.c:17882)
          BinaryOp: op='<<' (at pp.c:17882)
            Constant: type='int', value='0x01' (at pp.c:17882)
            Constant: type='int', value='3' (at pp.c:17882)
  FuncDef:  (at pp.c:17886)
    Decl: name='HplMsp430GeneralIOP__3__IO__get', quals=[], storage=['inline', 'static'] (at pp.c:17886)
      FuncDecl: quals=None (at pp.c:17886)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__3__IO__get', quals=[] (at pp.c:17886)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:17888)
      Return:  (at pp.c:17890)
        BinaryOp: op='!=' (at None)
          FuncCall:  (at None)
            ID: name='HplMsp430GeneralIOP__3__IO__getRaw' (at pp.c:17890)
          Constant: type='int', value='0' (at pp.c:17890)
  FuncDef:  (at pp.c:17894)
    Decl: name='Msp430GpioC__5__HplGeneralIO__get', quals=[], storage=['static', 'inline'] (at pp.c:17894)
      FuncDecl: quals=None (at pp.c:17894)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__5__HplGeneralIO__get', quals=[] (at pp.c:17894)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:17894)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17896)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17896)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17900)
        ID: name='__nesc_result' (at pp.c:17900)
        FuncCall:  (at None)
          ID: name='HplMsp430GeneralIOP__3__IO__get' (at pp.c:17900)
      Return:  (at pp.c:17904)
        ID: name='__nesc_result' (at pp.c:17904)
  FuncDef:  (at pp.c:17909)
    Decl: name='Msp430GpioC__5__GeneralIO__get', quals=[], storage=['inline', 'static'] (at pp.c:17909)
      FuncDecl: quals=None (at pp.c:17909)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__5__GeneralIO__get', quals=[] (at pp.c:17909)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:17911)
      Return:  (at pp.c:17913)
        FuncCall:  (at None)
          ID: name='Msp430GpioC__5__HplGeneralIO__get' (at pp.c:17913)
  FuncDef:  (at pp.c:17917)
    Decl: name='CC2420ReceiveP__FIFO__get', quals=[], storage=['static', 'inline'] (at pp.c:17917)
      FuncDecl: quals=None (at pp.c:17917)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__FIFO__get', quals=[] (at pp.c:17917)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:17917)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17919)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17919)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17923)
        ID: name='__nesc_result' (at pp.c:17923)
        FuncCall:  (at None)
          ID: name='Msp430GpioC__5__GeneralIO__get' (at pp.c:17923)
      Return:  (at pp.c:17927)
        ID: name='__nesc_result' (at pp.c:17927)
  FuncDef:  (at pp.c:17932)
    Decl: name='CC2420SpiP__Fifo__continueRead', quals=[], storage=['inline', 'static'] (at pp.c:17932)
      FuncDecl: quals=None (at pp.c:17932)
        ParamList:  (at pp.c:17932)
          Decl: name='addr', quals=[], storage=[] (at pp.c:17932)
            TypeDecl: declname='addr', quals=[] (at pp.c:17932)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:17932)
            PtrDecl: quals=[] (at pp.c:17932)
              TypeDecl: declname='data', quals=[] (at pp.c:17932)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:17933)
            TypeDecl: declname='len', quals=[] (at pp.c:17933)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Fifo__continueRead', quals=[] (at pp.c:17932)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17935)
      Return:  (at pp.c:17936)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__SpiPacket__send' (at pp.c:17936)
          ExprList:  (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                PtrDecl: quals=[] (at pp.c:17936)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['void'] (at None)
              Constant: type='int', value='0' (at pp.c:17936)
            ID: name='data' (at pp.c:17936)
            ID: name='len' (at pp.c:17936)
  FuncDef:  (at pp.c:17940)
    Decl: name='CC2420ReceiveP__RXFIFO__continueRead', quals=[], storage=['static', 'inline'] (at pp.c:17940)
      FuncDecl: quals=None (at pp.c:17940)
        ParamList:  (at pp.c:17940)
          Decl: name='data', quals=[], storage=[] (at pp.c:17940)
            PtrDecl: quals=[] (at pp.c:17940)
              TypeDecl: declname='data', quals=[] (at pp.c:17940)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='length', quals=[], storage=[] (at pp.c:17940)
            TypeDecl: declname='length', quals=[] (at pp.c:17940)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420ReceiveP__RXFIFO__continueRead', quals=[] (at pp.c:17940)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17940)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17942)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17942)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17946)
        ID: name='__nesc_result' (at pp.c:17946)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Fifo__continueRead' (at pp.c:17946)
          ExprList:  (at pp.c:17946)
            ID: name='CC2420_RXFIFO' (at pp.c:17946)
            ID: name='data' (at pp.c:17946)
            ID: name='length' (at pp.c:17946)
      Return:  (at pp.c:17950)
        ID: name='__nesc_result' (at pp.c:17950)
  FuncDef:  (at pp.c:17955)
    Decl: name='CC2420ReceiveP__RXFIFO__beginRead', quals=[], storage=['static', 'inline'] (at pp.c:17955)
      FuncDecl: quals=None (at pp.c:17955)
        ParamList:  (at pp.c:17955)
          Decl: name='data', quals=[], storage=[] (at pp.c:17955)
            PtrDecl: quals=[] (at pp.c:17955)
              TypeDecl: declname='data', quals=[] (at pp.c:17955)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='length', quals=[], storage=[] (at pp.c:17955)
            TypeDecl: declname='length', quals=[] (at pp.c:17955)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420ReceiveP__RXFIFO__beginRead', quals=[] (at pp.c:17955)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:17955)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17957)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17957)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17961)
        ID: name='__nesc_result' (at pp.c:17961)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Fifo__beginRead' (at pp.c:17961)
          ExprList:  (at pp.c:17961)
            ID: name='CC2420_RXFIFO' (at pp.c:17961)
            ID: name='data' (at pp.c:17961)
            ID: name='length' (at pp.c:17961)
      Return:  (at pp.c:17965)
        ID: name='__nesc_result' (at pp.c:17965)
  FuncDef:  (at pp.c:17970)
    Decl: name='CC2420ReceiveP__CSN__clr', quals=[], storage=['static', 'inline'] (at pp.c:17970)
      FuncDecl: quals=None (at pp.c:17970)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CSN__clr', quals=[] (at pp.c:17970)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17970)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__4__GeneralIO__clr' (at pp.c:17972)
  FuncDef:  (at pp.c:17977)
    Decl: name='CC2420ReceiveP__SACK__strobe', quals=[], storage=['static', 'inline'] (at pp.c:17977)
      FuncDecl: quals=None (at pp.c:17977)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__SACK__strobe', quals=[] (at pp.c:17977)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:17977)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17979)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17979)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17983)
        ID: name='__nesc_result' (at pp.c:17983)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Strobe__strobe' (at pp.c:17983)
          ExprList:  (at pp.c:17983)
            ID: name='CC2420_SACK' (at pp.c:17983)
      Return:  (at pp.c:17987)
        ID: name='__nesc_result' (at pp.c:17987)
  FuncDef:  (at pp.c:17992)
    Decl: name='CC2420ControlP__CC2420Config__isHwAutoAckDefault', quals=[], storage=['inline', 'static'] (at pp.c:17992)
      FuncDecl: quals=None (at pp.c:17992)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Config__isHwAutoAckDefault', quals=[] (at pp.c:17992)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:17994)
      Compound:  (at pp.c:17997)
        Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:17998)
          TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:17998)
            IdentifierType: names=['char', 'unsigned'] (at None)
          ID: name='CC2420ControlP__hwAutoAckDefault' (at pp.c:18000)
        Return:  (at pp.c:18003)
          ID: name='__nesc_temp' (at pp.c:18003)
  FuncDef:  (at pp.c:18008)
    Decl: name='CC2420ReceiveP__CC2420Config__isHwAutoAckDefault', quals=[], storage=['static', 'inline'] (at pp.c:18008)
      FuncDecl: quals=None (at pp.c:18008)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CC2420Config__isHwAutoAckDefault', quals=[] (at pp.c:18008)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:18008)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18010)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18010)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18014)
        ID: name='__nesc_result' (at pp.c:18014)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__CC2420Config__isHwAutoAckDefault' (at pp.c:18014)
      Return:  (at pp.c:18018)
        ID: name='__nesc_result' (at pp.c:18018)
  FuncDef:  (at pp.c:18023)
    Decl: name='CC2420ControlP__CC2420Config__isAutoAckEnabled', quals=[], storage=['inline', 'static'] (at pp.c:18023)
      FuncDecl: quals=None (at pp.c:18023)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Config__isAutoAckEnabled', quals=[] (at pp.c:18023)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:18025)
      Compound:  (at pp.c:18028)
        Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:18029)
          TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:18029)
            IdentifierType: names=['char', 'unsigned'] (at None)
          ID: name='CC2420ControlP__autoAckEnabled' (at pp.c:18031)
        Return:  (at pp.c:18034)
          ID: name='__nesc_temp' (at pp.c:18034)
  FuncDef:  (at pp.c:18039)
    Decl: name='CC2420ReceiveP__CC2420Config__isAutoAckEnabled', quals=[], storage=['static', 'inline'] (at pp.c:18039)
      FuncDecl: quals=None (at pp.c:18039)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CC2420Config__isAutoAckEnabled', quals=[] (at pp.c:18039)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:18039)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18041)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18041)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18045)
        ID: name='__nesc_result' (at pp.c:18045)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__CC2420Config__isAutoAckEnabled' (at pp.c:18045)
      Return:  (at pp.c:18049)
        ID: name='__nesc_result' (at pp.c:18049)
  FuncDef:  (at pp.c:18054)
    Decl: name='CC2420ReceiveP__RXFIFO__readDone', quals=[], storage=['inline', 'static'] (at pp.c:18054)
      FuncDecl: quals=None (at pp.c:18054)
        ParamList:  (at pp.c:18054)
          Decl: name='rx_buf', quals=[], storage=[] (at pp.c:18054)
            PtrDecl: quals=[] (at pp.c:18054)
              TypeDecl: declname='rx_buf', quals=[] (at pp.c:18054)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='rx_len', quals=[], storage=[] (at pp.c:18054)
            TypeDecl: declname='rx_len', quals=[] (at pp.c:18054)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:18055)
            TypeDecl: declname='error', quals=[] (at pp.c:18055)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420ReceiveP__RXFIFO__readDone', quals=[] (at pp.c:18054)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18057)
      Decl: name='header', quals=[], storage=[] (at pp.c:18058)
        PtrDecl: quals=[] (at pp.c:18058)
          TypeDecl: declname='header', quals=[] (at pp.c:18058)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420ReceiveP__CC2420PacketBody__getHeader' (at pp.c:18058)
          ExprList:  (at pp.c:18058)
            ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:18058)
      Decl: name='tmpLen', quals=[], storage=[] (at pp.c:18059)
        TypeDecl: declname='tmpLen', quals=[] (at pp.c:18059)
          IdentifierType: names=['uint8_t'] (at None)
        BinaryOp: op='-' (at pp.c:18059)
          UnaryOp: op='sizeof' (at pp.c:18059)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['message_t'] (at None)
          BinaryOp: op='-' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['size_t'] (at None)
              UnaryOp: op='&' (at None)
                StructRef: type='->' (at None)
                  Cast:  (at None)
                    Typename: quals=[] (at None)
                      PtrDecl: quals=[] (at pp.c:18059)
                        TypeDecl: declname=None, quals=[] (at None)
                          IdentifierType: names=['message_t'] (at None)
                    Constant: type='int', value='0' (at pp.c:18059)
                  ID: name='data' (at pp.c:18059)
            UnaryOp: op='sizeof' (at pp.c:18059)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['cc2420_header_t'] (at None)
      Decl: name='buf', quals=[], storage=[] (at pp.c:18060)
        PtrDecl: quals=[] (at pp.c:18060)
          TypeDecl: declname='buf', quals=[] (at pp.c:18060)
            IdentifierType: names=['uint8_t'] (at None)
        Cast:  (at None)
          Typename: quals=[] (at None)
            PtrDecl: quals=[] (at pp.c:18060)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['uint8_t'] (at None)
          ID: name='header' (at pp.c:18060)
      Assignment: op='=' (at pp.c:18063)
        ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:18063)
        ArrayRef:  (at pp.c:18063)
          ID: name='buf' (at pp.c:18063)
          Constant: type='int', value='0' (at pp.c:18063)
      Switch:  (at pp.c:18065)
        ID: name='CC2420ReceiveP__m_state' (at pp.c:18065)
        Compound:  (at pp.c:18065)
          Case:  (at pp.c:18067)
            ID: name='CC2420ReceiveP__S_RX_LENGTH' (at pp.c:18067)
            Assignment: op='=' (at pp.c:18068)
              ID: name='CC2420ReceiveP__m_state' (at pp.c:18068)
              ID: name='CC2420ReceiveP__S_RX_FCF' (at pp.c:18068)
          If:  (at pp.c:18072)
            BinaryOp: op='>' (at pp.c:18072)
              BinaryOp: op='+' (at pp.c:18072)
                ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:18072)
                Constant: type='int', value='1' (at pp.c:18072)
              ID: name='CC2420ReceiveP__m_bytes_left' (at pp.c:18072)
            Compound:  (at pp.c:18076)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__flush' (at pp.c:18078)
            Compound:  (at pp.c:18080)
              If:  (at pp.c:18081)
                BinaryOp: op='&&' (at None)
                  UnaryOp: op='!' (at None)
                    FuncCall:  (at None)
                      ID: name='CC2420ReceiveP__FIFO__get' (at pp.c:18081)
                  UnaryOp: op='!' (at None)
                    FuncCall:  (at None)
                      ID: name='CC2420ReceiveP__FIFOP__get' (at pp.c:18081)
                Compound:  (at pp.c:18081)
                  Assignment: op='-=' (at pp.c:18082)
                    ID: name='CC2420ReceiveP__m_bytes_left' (at pp.c:18082)
                    BinaryOp: op='+' (at pp.c:18082)
                      ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:18082)
                      Constant: type='int', value='1' (at pp.c:18082)
              If:  (at pp.c:18085)
                BinaryOp: op='<=' (at pp.c:18085)
                  ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:18085)
                  ID: name='MAC_PACKET_SIZE' (at pp.c:18085)
                Compound:  (at pp.c:18085)
                  If:  (at pp.c:18086)
                    BinaryOp: op='>' (at pp.c:18086)
                      ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:18086)
                      Constant: type='int', value='0' (at pp.c:18086)
                    Compound:  (at pp.c:18086)
                      If:  (at pp.c:18087)
                        BinaryOp: op='>' (at pp.c:18087)
                          ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:18087)
                          ID: name='CC2420ReceiveP__SACK_HEADER_LENGTH' (at pp.c:18087)
                        Compound:  (at pp.c:18087)
                          FuncCall:  (at None)
                            ID: name='CC2420ReceiveP__RXFIFO__continueRead' (at pp.c:18089)
                            ExprList:  (at pp.c:18089)
                              BinaryOp: op='+' (at pp.c:18089)
                                ID: name='buf' (at pp.c:18089)
                                Constant: type='int', value='1' (at pp.c:18089)
                              ID: name='CC2420ReceiveP__SACK_HEADER_LENGTH' (at pp.c:18089)
                        Compound:  (at pp.c:18091)
                          Assignment: op='=' (at pp.c:18093)
                            ID: name='CC2420ReceiveP__m_state' (at pp.c:18093)
                            ID: name='CC2420ReceiveP__S_RX_PAYLOAD' (at pp.c:18093)
                          FuncCall:  (at None)
                            ID: name='CC2420ReceiveP__RXFIFO__continueRead' (at pp.c:18094)
                            ExprList:  (at pp.c:18094)
                              BinaryOp: op='+' (at pp.c:18094)
                                ID: name='buf' (at pp.c:18094)
                                Constant: type='int', value='1' (at pp.c:18094)
                              ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:18094)
                    Compound:  (at pp.c:18097)
                      Assignment: op='=' (at pp.c:18099)
                        ID: name='CC2420ReceiveP__receivingPacket' (at pp.c:18099)
                        ID: name='FALSE' (at pp.c:18099)
                      FuncCall:  (at None)
                        ID: name='CC2420ReceiveP__CSN__set' (at pp.c:18100)
                      FuncCall:  (at None)
                        ID: name='CC2420ReceiveP__SpiResource__release' (at pp.c:18101)
                      FuncCall:  (at None)
                        ID: name='CC2420ReceiveP__waitForNextPacket' (at pp.c:18102)
                Compound:  (at pp.c:18105)
                  FuncCall:  (at None)
                    ID: name='CC2420ReceiveP__flush' (at pp.c:18107)
          Break:  (at pp.c:18110)
          Case:  (at pp.c:18112)
            ID: name='CC2420ReceiveP__S_RX_FCF' (at pp.c:18112)
            Assignment: op='=' (at pp.c:18113)
              ID: name='CC2420ReceiveP__m_state' (at pp.c:18113)
              ID: name='CC2420ReceiveP__S_RX_PAYLOAD' (at pp.c:18113)
          If:  (at pp.c:18124)
            BinaryOp: op='&&' (at None)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__CC2420Config__isAutoAckEnabled' (at pp.c:18124)
              UnaryOp: op='!' (at None)
                FuncCall:  (at None)
                  ID: name='CC2420ReceiveP__CC2420Config__isHwAutoAckDefault' (at pp.c:18124)
            Compound:  (at pp.c:18124)
              If:  (at pp.c:18128)
                BinaryOp: op='&&' (at None)
                  BinaryOp: op='&&' (at None)
                    BinaryOp: op='==' (at None)
                      BinaryOp: op='&' (at None)
                        BinaryOp: op='>>' (at None)
                          FuncCall:  (at None)
                            ID: name='__nesc_ntoh_leuint16' (at pp.c:18128)
                            ExprList:  (at pp.c:18130)
                              StructRef: type='.' (at pp.c:18130)
                                StructRef: type='->' (at pp.c:18130)
                                  ID: name='header' (at pp.c:18130)
                                  ID: name='fcf' (at pp.c:18130)
                                ID: name='nxdata' (at pp.c:18130)
                          ID: name='IEEE154_FCF_ACK_REQ' (at pp.c:18130)
                        Constant: type='int', value='0x01' (at pp.c:18130)
                      Constant: type='int', value='1' (at pp.c:18130)
                    BinaryOp: op='||' (at None)
                      BinaryOp: op='==' (at None)
                        FuncCall:  (at None)
                          ID: name='__nesc_ntoh_leuint16' (at pp.c:18131)
                          ExprList:  (at pp.c:18131)
                            StructRef: type='.' (at pp.c:18131)
                              StructRef: type='->' (at pp.c:18131)
                                ID: name='header' (at pp.c:18131)
                                ID: name='dest' (at pp.c:18131)
                              ID: name='nxdata' (at pp.c:18131)
                        FuncCall:  (at None)
                          ID: name='CC2420ReceiveP__CC2420Config__getShortAddr' (at pp.c:18131)
                      BinaryOp: op='==' (at None)
                        FuncCall:  (at None)
                          ID: name='__nesc_ntoh_leuint16' (at pp.c:18132)
                          ExprList:  (at pp.c:18132)
                            StructRef: type='.' (at pp.c:18132)
                              StructRef: type='->' (at pp.c:18132)
                                ID: name='header' (at pp.c:18132)
                                ID: name='dest' (at pp.c:18132)
                              ID: name='nxdata' (at pp.c:18132)
                        ID: name='AM_BROADCAST_ADDR' (at pp.c:18132)
                  BinaryOp: op='==' (at None)
                    BinaryOp: op='&' (at None)
                      BinaryOp: op='>>' (at None)
                        FuncCall:  (at None)
                          ID: name='__nesc_ntoh_leuint16' (at pp.c:18133)
                          ExprList:  (at pp.c:18133)
                            StructRef: type='.' (at pp.c:18133)
                              StructRef: type='->' (at pp.c:18133)
                                ID: name='header' (at pp.c:18133)
                                ID: name='fcf' (at pp.c:18133)
                              ID: name='nxdata' (at pp.c:18133)
                        ID: name='IEEE154_FCF_FRAME_TYPE' (at pp.c:18133)
                      Constant: type='int', value='7' (at pp.c:18133)
                    ID: name='IEEE154_TYPE_DATA' (at pp.c:18133)
                Compound:  (at pp.c:18133)
                  FuncCall:  (at None)
                    ID: name='CC2420ReceiveP__CSN__set' (at pp.c:18135)
                  FuncCall:  (at None)
                    ID: name='CC2420ReceiveP__CSN__clr' (at pp.c:18136)
                  FuncCall:  (at None)
                    ID: name='CC2420ReceiveP__SACK__strobe' (at pp.c:18137)
                  FuncCall:  (at None)
                    ID: name='CC2420ReceiveP__CSN__set' (at pp.c:18138)
                  FuncCall:  (at None)
                    ID: name='CC2420ReceiveP__CSN__clr' (at pp.c:18139)
                  FuncCall:  (at None)
                    ID: name='CC2420ReceiveP__RXFIFO__beginRead' (at pp.c:18140)
                    ExprList:  (at pp.c:18140)
                      BinaryOp: op='+' (at pp.c:18140)
                        BinaryOp: op='+' (at pp.c:18140)
                          ID: name='buf' (at pp.c:18140)
                          Constant: type='int', value='1' (at pp.c:18140)
                        ID: name='CC2420ReceiveP__SACK_HEADER_LENGTH' (at pp.c:18140)
                      BinaryOp: op='-' (at pp.c:18141)
                        ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:18141)
                        ID: name='CC2420ReceiveP__SACK_HEADER_LENGTH' (at pp.c:18141)
                  Return:  (at pp.c:18142)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__RXFIFO__continueRead' (at pp.c:18146)
            ExprList:  (at pp.c:18146)
              BinaryOp: op='+' (at pp.c:18146)
                BinaryOp: op='+' (at pp.c:18146)
                  ID: name='buf' (at pp.c:18146)
                  Constant: type='int', value='1' (at pp.c:18146)
                ID: name='CC2420ReceiveP__SACK_HEADER_LENGTH' (at pp.c:18146)
              BinaryOp: op='-' (at pp.c:18147)
                ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:18147)
                ID: name='CC2420ReceiveP__SACK_HEADER_LENGTH' (at pp.c:18147)
          Break:  (at pp.c:18148)
          Case:  (at pp.c:18150)
            ID: name='CC2420ReceiveP__S_RX_PAYLOAD' (at pp.c:18150)
            FuncCall:  (at None)
              ID: name='CC2420ReceiveP__CSN__set' (at pp.c:18152)
          If:  (at pp.c:18153)
            UnaryOp: op='!' (at pp.c:18153)
              ID: name='CC2420ReceiveP__m_missed_packets' (at pp.c:18153)
            Compound:  (at pp.c:18153)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__SpiResource__release' (at pp.c:18155)
          If:  (at pp.c:18161)
            BinaryOp: op='||' (at pp.c:18163)
              BinaryOp: op='||' (at pp.c:18163)
                BinaryOp: op='||' (at pp.c:18163)
                  BinaryOp: op='&&' (at pp.c:18163)
                    ID: name='CC2420ReceiveP__m_missed_packets' (at pp.c:18163)
                    FuncCall:  (at None)
                      ID: name='CC2420ReceiveP__FIFO__get' (at pp.c:18163)
                  UnaryOp: op='!' (at None)
                    FuncCall:  (at None)
                      ID: name='CC2420ReceiveP__FIFOP__get' (at pp.c:18163)
                UnaryOp: op='!' (at pp.c:18164)
                  ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:18164)
              BinaryOp: op='<=' (at pp.c:18165)
                ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:18165)
                Constant: type='int', value='10' (at pp.c:18165)
            Compound:  (at pp.c:18165)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__PacketTimeStamp__clear' (at pp.c:18166)
                ExprList:  (at pp.c:18166)
                  ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:18166)
            Compound:  (at pp.c:18168)
              If:  (at pp.c:18169)
                BinaryOp: op='==' (at pp.c:18169)
                  ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:18169)
                  Constant: type='int', value='1' (at pp.c:18169)
                Compound:  (at pp.c:18169)
                  FuncCall:  (at None)
                    ID: name='CC2420ReceiveP__PacketTimeStamp__set' (at pp.c:18170)
                    ExprList:  (at pp.c:18170)
                      ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:18170)
                      ArrayRef:  (at pp.c:18170)
                        ID: name='CC2420ReceiveP__m_timestamp_queue' (at pp.c:18170)
                        ID: name='CC2420ReceiveP__m_timestamp_head' (at pp.c:18170)
              Assignment: op='=' (at pp.c:18173)
                ID: name='CC2420ReceiveP__m_timestamp_head' (at pp.c:18173)
                BinaryOp: op='%' (at pp.c:18173)
                  BinaryOp: op='+' (at pp.c:18173)
                    ID: name='CC2420ReceiveP__m_timestamp_head' (at pp.c:18173)
                    Constant: type='int', value='1' (at pp.c:18173)
                  ID: name='CC2420ReceiveP__TIMESTAMP_QUEUE_SIZE' (at pp.c:18173)
              UnaryOp: op='p--' (at pp.c:18174)
                ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:18174)
              If:  (at pp.c:18176)
                BinaryOp: op='>' (at pp.c:18176)
                  ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:18176)
                  Constant: type='int', value='0' (at pp.c:18176)
                Compound:  (at pp.c:18176)
                  FuncCall:  (at None)
                    ID: name='CC2420ReceiveP__PacketTimeStamp__clear' (at pp.c:18177)
                    ExprList:  (at pp.c:18177)
                      ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:18177)
                  Assignment: op='=' (at pp.c:18178)
                    ID: name='CC2420ReceiveP__m_timestamp_head' (at pp.c:18178)
                    Constant: type='int', value='0' (at pp.c:18178)
                  Assignment: op='=' (at pp.c:18179)
                    ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:18179)
                    Constant: type='int', value='0' (at pp.c:18179)
          If:  (at pp.c:18185)
            BinaryOp: op='&&' (at pp.c:18185)
              BinaryOp: op='>>' (at pp.c:18185)
                ArrayRef:  (at pp.c:18185)
                  ID: name='buf' (at pp.c:18185)
                  ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:18185)
                Constant: type='int', value='7' (at pp.c:18185)
              ID: name='rx_buf' (at pp.c:18185)
            Compound:  (at pp.c:18185)
              Decl: name='type', quals=[], storage=[] (at pp.c:18186)
                TypeDecl: declname='type', quals=[] (at pp.c:18186)
                  IdentifierType: names=['uint8_t'] (at None)
                BinaryOp: op='&' (at None)
                  BinaryOp: op='>>' (at None)
                    FuncCall:  (at None)
                      ID: name='__nesc_ntoh_leuint16' (at pp.c:18186)
                      ExprList:  (at pp.c:18186)
                        StructRef: type='.' (at pp.c:18186)
                          StructRef: type='->' (at pp.c:18186)
                            ID: name='header' (at pp.c:18186)
                            ID: name='fcf' (at pp.c:18186)
                          ID: name='nxdata' (at pp.c:18186)
                    ID: name='IEEE154_FCF_FRAME_TYPE' (at pp.c:18186)
                  Constant: type='int', value='7' (at pp.c:18186)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__CC2420Receive__receive' (at pp.c:18189)
                ExprList:  (at pp.c:18189)
                  ID: name='type' (at pp.c:18189)
                  ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:18189)
              If:  (at pp.c:18190)
                BinaryOp: op='==' (at pp.c:18190)
                  ID: name='type' (at pp.c:18190)
                  ID: name='IEEE154_TYPE_DATA' (at pp.c:18190)
                Compound:  (at pp.c:18190)
                  FuncCall:  (at None)
                    ID: name='CC2420ReceiveP__receiveDone_task__postTask' (at pp.c:18191)
                  Return:  (at pp.c:18192)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__waitForNextPacket' (at pp.c:18196)
          Break:  (at pp.c:18197)
          Default:  (at pp.c:18199)
            Assignment: op='=' (at pp.c:18200)
              ID: name='CC2420ReceiveP__receivingPacket' (at pp.c:18200)
              ID: name='FALSE' (at pp.c:18200)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__CSN__set' (at pp.c:18201)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__SpiResource__release' (at pp.c:18202)
          Break:  (at pp.c:18203)
  FuncDef:  (at pp.c:18208)
    Decl: name='CC2420SpiP__Fifo__default__readDone', quals=[], storage=['inline', 'static'] (at pp.c:18208)
      FuncDecl: quals=None (at pp.c:18208)
        ParamList:  (at pp.c:18208)
          Decl: name='addr', quals=[], storage=[] (at pp.c:18208)
            TypeDecl: declname='addr', quals=[] (at pp.c:18208)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='rx_buf', quals=[], storage=[] (at pp.c:18208)
            PtrDecl: quals=[] (at pp.c:18208)
              TypeDecl: declname='rx_buf', quals=[] (at pp.c:18208)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='rx_len', quals=[], storage=[] (at pp.c:18208)
            TypeDecl: declname='rx_len', quals=[] (at pp.c:18208)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:18208)
            TypeDecl: declname='error', quals=[] (at pp.c:18208)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Fifo__default__readDone', quals=[] (at pp.c:18208)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18210)
  FuncDef:  (at pp.c:18214)
    Decl: name='CC2420SpiP__Fifo__readDone', quals=[], storage=['static', 'inline'] (at pp.c:18214)
      FuncDecl: quals=None (at pp.c:18214)
        ParamList:  (at pp.c:18214)
          Decl: name='arg_0x101c66328', quals=[], storage=[] (at pp.c:18214)
            TypeDecl: declname='arg_0x101c66328', quals=[] (at pp.c:18214)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:18214)
            PtrDecl: quals=[] (at pp.c:18214)
              TypeDecl: declname='data', quals=[] (at pp.c:18214)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='length', quals=[], storage=[] (at pp.c:18214)
            TypeDecl: declname='length', quals=[] (at pp.c:18214)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:18214)
            TypeDecl: declname='error', quals=[] (at pp.c:18214)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Fifo__readDone', quals=[] (at pp.c:18214)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18214)
      Switch:  (at pp.c:18216)
        ID: name='arg_0x101c66328' (at pp.c:18216)
        Compound:  (at pp.c:18216)
          Case:  (at pp.c:18218)
            ID: name='CC2420_TXFIFO' (at pp.c:18218)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__TXFIFO__readDone' (at pp.c:18220)
              ExprList:  (at pp.c:18220)
                ID: name='data' (at pp.c:18220)
                ID: name='length' (at pp.c:18220)
                ID: name='error' (at pp.c:18220)
          Break:  (at pp.c:18222)
          Case:  (at pp.c:18224)
            ID: name='CC2420_RXFIFO' (at pp.c:18224)
            FuncCall:  (at None)
              ID: name='CC2420ReceiveP__RXFIFO__readDone' (at pp.c:18226)
              ExprList:  (at pp.c:18226)
                ID: name='data' (at pp.c:18226)
                ID: name='length' (at pp.c:18226)
                ID: name='error' (at pp.c:18226)
          Break:  (at pp.c:18228)
          Default:  (at pp.c:18230)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__Fifo__default__readDone' (at pp.c:18232)
              ExprList:  (at pp.c:18232)
                ID: name='arg_0x101c66328' (at pp.c:18232)
                ID: name='data' (at pp.c:18232)
                ID: name='length' (at pp.c:18232)
                ID: name='error' (at pp.c:18232)
          Break:  (at pp.c:18234)
  FuncDef:  (at pp.c:18241)
    Decl: name='CC2420ReceiveP__SFLUSHRX__strobe', quals=[], storage=['static', 'inline'] (at pp.c:18241)
      FuncDecl: quals=None (at pp.c:18241)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__SFLUSHRX__strobe', quals=[] (at pp.c:18241)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:18241)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18243)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18243)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18247)
        ID: name='__nesc_result' (at pp.c:18247)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Strobe__strobe' (at pp.c:18247)
          ExprList:  (at pp.c:18247)
            ID: name='CC2420_SFLUSHRX' (at pp.c:18247)
      Return:  (at pp.c:18251)
        ID: name='__nesc_result' (at pp.c:18251)
  FuncDef:  (at pp.c:18256)
    Decl: name='CC2420ActiveMessageP__RadioBackoff__default__requestInitialBackoff', quals=[], storage=['inline', 'static'] (at pp.c:18256)
      FuncDecl: quals=None (at pp.c:18256)
        ParamList:  (at pp.c:18256)
          Decl: name='id', quals=[], storage=[] (at pp.c:18256)
            TypeDecl: declname='id', quals=[] (at pp.c:18256)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18257)
            PtrDecl: quals=[] (at pp.c:18257)
              TypeDecl: declname='msg', quals=[] (at pp.c:18257)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__default__requestInitialBackoff', quals=[] (at pp.c:18256)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18259)
  FuncDef:  (at pp.c:18263)
    Decl: name='CC2420ActiveMessageP__RadioBackoff__requestInitialBackoff', quals=[], storage=['static', 'inline'] (at pp.c:18263)
      FuncDecl: quals=None (at pp.c:18263)
        ParamList:  (at pp.c:18263)
          Decl: name='arg_0x102533d60', quals=[], storage=[] (at pp.c:18263)
            TypeDecl: declname='arg_0x102533d60', quals=[] (at pp.c:18263)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18263)
            PtrDecl: quals=[] (at pp.c:18263)
              TypeDecl: declname='msg', quals=[] (at pp.c:18263)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__requestInitialBackoff', quals=[] (at pp.c:18263)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18263)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__RadioBackoff__default__requestInitialBackoff' (at pp.c:18265)
        ExprList:  (at pp.c:18265)
          ID: name='arg_0x102533d60' (at pp.c:18265)
          ID: name='msg' (at pp.c:18265)
  FuncDef:  (at pp.c:18270)
    Decl: name='CC2420ActiveMessageP__SubBackoff__requestInitialBackoff', quals=[], storage=['inline', 'static'] (at pp.c:18270)
      FuncDecl: quals=None (at pp.c:18270)
        ParamList:  (at pp.c:18270)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18270)
            PtrDecl: quals=[] (at pp.c:18270)
              TypeDecl: declname='msg', quals=[] (at pp.c:18270)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__SubBackoff__requestInitialBackoff', quals=[] (at pp.c:18270)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18272)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__RadioBackoff__requestInitialBackoff' (at pp.c:18273)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='__nesc_ntoh_leuint8' (at pp.c:18273)
            ExprList:  (at None)
              StructRef: type='.' (at None)
                StructRef: type='->' (at None)
                  Cast:  (at None)
                    Typename: quals=[] (at None)
                      PtrDecl: quals=[] (at pp.c:18273)
                        TypeDecl: declname=None, quals=[] (at None)
                          IdentifierType: names=['cc2420_header_t'] (at None)
                    BinaryOp: op='-' (at None)
                      BinaryOp: op='+' (at None)
                        Cast:  (at None)
                          Typename: quals=[] (at None)
                            PtrDecl: quals=[] (at pp.c:18273)
                              TypeDecl: declname=None, quals=[] (at None)
                                IdentifierType: names=['uint8_t'] (at None)
                          ID: name='msg' (at pp.c:18273)
                        Cast:  (at None)
                          Typename: quals=[] (at None)
                            TypeDecl: declname=None, quals=[] (at None)
                              IdentifierType: names=['size_t'] (at None)
                          UnaryOp: op='&' (at None)
                            StructRef: type='->' (at None)
                              Cast:  (at None)
                                Typename: quals=[] (at None)
                                  PtrDecl: quals=[] (at pp.c:18273)
                                    TypeDecl: declname=None, quals=[] (at None)
                                      IdentifierType: names=['message_t'] (at None)
                                Constant: type='int', value='0' (at pp.c:18273)
                              ID: name='data' (at pp.c:18273)
                      UnaryOp: op='sizeof' (at pp.c:18273)
                        Typename: quals=[] (at None)
                          TypeDecl: declname=None, quals=[] (at None)
                            IdentifierType: names=['cc2420_header_t'] (at None)
                  ID: name='type' (at pp.c:18273)
                ID: name='nxdata' (at pp.c:18273)
          ID: name='msg' (at pp.c:18273)
  FuncDef:  (at pp.c:18277)
    Decl: name='CC2420CsmaP__RadioBackoff__requestInitialBackoff', quals=[], storage=['static', 'inline'] (at pp.c:18277)
      FuncDecl: quals=None (at pp.c:18277)
        ParamList:  (at pp.c:18277)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18277)
            PtrDecl: quals=[] (at pp.c:18277)
              TypeDecl: declname='msg', quals=[] (at pp.c:18277)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__RadioBackoff__requestInitialBackoff', quals=[] (at pp.c:18277)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18277)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__SubBackoff__requestInitialBackoff' (at pp.c:18279)
        ExprList:  (at pp.c:18279)
          ID: name='msg' (at pp.c:18279)
  FuncDef:  (at pp.c:18284)
    Decl: name='CC2420TransmitP__RadioBackoff__setInitialBackoff', quals=[], storage=['inline', 'static'] (at pp.c:18284)
      FuncDecl: quals=None (at pp.c:18284)
        ParamList:  (at pp.c:18284)
          Decl: name='backoffTime', quals=[], storage=[] (at pp.c:18284)
            TypeDecl: declname='backoffTime', quals=[] (at pp.c:18284)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__RadioBackoff__setInitialBackoff', quals=[] (at pp.c:18284)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18286)
      Assignment: op='=' (at pp.c:18287)
        ID: name='CC2420TransmitP__myInitialBackoff' (at pp.c:18287)
        BinaryOp: op='+' (at pp.c:18287)
          ID: name='backoffTime' (at pp.c:18287)
          Constant: type='int', value='1' (at pp.c:18287)
  FuncDef:  (at pp.c:18291)
    Decl: name='CC2420CsmaP__SubBackoff__setInitialBackoff', quals=[], storage=['static', 'inline'] (at pp.c:18291)
      FuncDecl: quals=None (at pp.c:18291)
        ParamList:  (at pp.c:18291)
          Decl: name='backoffTime', quals=[], storage=[] (at pp.c:18291)
            TypeDecl: declname='backoffTime', quals=[] (at pp.c:18291)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__SubBackoff__setInitialBackoff', quals=[] (at pp.c:18291)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18291)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__RadioBackoff__setInitialBackoff' (at pp.c:18293)
        ExprList:  (at pp.c:18293)
          ID: name='backoffTime' (at pp.c:18293)
  FuncDef:  (at pp.c:18298)
    Decl: name='CC2420CsmaP__SubBackoff__requestInitialBackoff', quals=[], storage=['inline', 'static'] (at pp.c:18298)
      FuncDecl: quals=None (at pp.c:18298)
        ParamList:  (at pp.c:18298)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18298)
            PtrDecl: quals=[] (at pp.c:18298)
              TypeDecl: declname='msg', quals=[] (at pp.c:18298)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__SubBackoff__requestInitialBackoff', quals=[] (at pp.c:18298)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18300)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__SubBackoff__setInitialBackoff' (at pp.c:18301)
        ExprList:  (at None)
          BinaryOp: op='+' (at None)
            BinaryOp: op='%' (at None)
              FuncCall:  (at None)
                ID: name='CC2420CsmaP__Random__rand16' (at pp.c:18301)
              BinaryOp: op='*' (at pp.c:18302)
                Constant: type='int', value='0x1F' (at pp.c:18302)
                ID: name='CC2420_BACKOFF_PERIOD' (at pp.c:18302)
            ID: name='CC2420_MIN_BACKOFF' (at pp.c:18302)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__RadioBackoff__requestInitialBackoff' (at pp.c:18304)
        ExprList:  (at pp.c:18304)
          ID: name='msg' (at pp.c:18304)
  FuncDef:  (at pp.c:18308)
    Decl: name='CC2420TransmitP__RadioBackoff__requestInitialBackoff', quals=[], storage=['static', 'inline'] (at pp.c:18308)
      FuncDecl: quals=None (at pp.c:18308)
        ParamList:  (at pp.c:18308)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18308)
            PtrDecl: quals=[] (at pp.c:18308)
              TypeDecl: declname='msg', quals=[] (at pp.c:18308)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__RadioBackoff__requestInitialBackoff', quals=[] (at pp.c:18308)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18308)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__SubBackoff__requestInitialBackoff' (at pp.c:18310)
        ExprList:  (at pp.c:18310)
          ID: name='msg' (at pp.c:18310)
  FuncDef:  (at pp.c:18315)
    Decl: name='CC2420CsmaP__sendDone_task__postTask', quals=[], storage=['static', 'inline'] (at pp.c:18315)
      FuncDecl: quals=None (at pp.c:18315)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__sendDone_task__postTask', quals=[] (at pp.c:18315)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:18315)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18317)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18317)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18321)
        ID: name='__nesc_result' (at pp.c:18321)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:18321)
          ExprList:  (at pp.c:18321)
            ID: name='CC2420CsmaP__sendDone_task' (at pp.c:18321)
      Return:  (at pp.c:18325)
        ID: name='__nesc_result' (at pp.c:18325)
  FuncDef:  (at pp.c:18330)
    Decl: name='CC2420CsmaP__CC2420Transmit__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:18330)
      FuncDecl: quals=None (at pp.c:18330)
        ParamList:  (at pp.c:18330)
          Decl: name='p_msg', quals=[], storage=[] (at pp.c:18330)
            PtrDecl: quals=[] (at pp.c:18330)
              TypeDecl: declname='p_msg', quals=[] (at pp.c:18330)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='err', quals=[], storage=[] (at pp.c:18330)
            TypeDecl: declname='err', quals=[] (at pp.c:18330)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__CC2420Transmit__sendDone', quals=[] (at pp.c:18330)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18332)
      Compound:  (at pp.c:18333)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:18333)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:18333)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:18333)
        Assignment: op='=' (at pp.c:18335)
          ID: name='CC2420CsmaP__sendErr' (at pp.c:18335)
          ID: name='err' (at pp.c:18335)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:18337)
          ExprList:  (at pp.c:18337)
            ID: name='__nesc_atomic' (at pp.c:18337)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__sendDone_task__postTask' (at pp.c:18338)
  FuncDef:  (at pp.c:18342)
    Decl: name='CC2420TransmitP__Send__sendDone', quals=[], storage=['static', 'inline'] (at pp.c:18342)
      FuncDecl: quals=None (at pp.c:18342)
        ParamList:  (at pp.c:18342)
          Decl: name='p_msg', quals=[], storage=[] (at pp.c:18342)
            PtrDecl: quals=[] (at pp.c:18342)
              TypeDecl: declname='p_msg', quals=[] (at pp.c:18342)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:18342)
            TypeDecl: declname='error', quals=[] (at pp.c:18342)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__Send__sendDone', quals=[] (at pp.c:18342)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18342)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__CC2420Transmit__sendDone' (at pp.c:18344)
        ExprList:  (at pp.c:18344)
          ID: name='p_msg' (at pp.c:18344)
          ID: name='error' (at pp.c:18344)
  FuncDef:  (at pp.c:18349)
    Decl: name='CC2420TransmitP__TXFIFO__writeDone', quals=[], storage=['inline', 'static'] (at pp.c:18349)
      FuncDecl: quals=None (at pp.c:18349)
        ParamList:  (at pp.c:18349)
          Decl: name='tx_buf', quals=[], storage=[] (at pp.c:18349)
            PtrDecl: quals=[] (at pp.c:18349)
              TypeDecl: declname='tx_buf', quals=[] (at pp.c:18349)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='tx_len', quals=[], storage=[] (at pp.c:18349)
            TypeDecl: declname='tx_len', quals=[] (at pp.c:18349)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:18350)
            TypeDecl: declname='error', quals=[] (at pp.c:18350)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__TXFIFO__writeDone', quals=[] (at pp.c:18349)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18352)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__CSN__set' (at pp.c:18354)
      If:  (at pp.c:18355)
        BinaryOp: op='==' (at pp.c:18355)
          ID: name='CC2420TransmitP__m_state' (at pp.c:18355)
          ID: name='CC2420TransmitP__S_CANCEL' (at pp.c:18355)
        Compound:  (at pp.c:18355)
          Compound:  (at pp.c:18358)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__CSN__clr' (at pp.c:18359)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__SFLUSHTX__strobe' (at pp.c:18360)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__CSN__set' (at pp.c:18361)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__releaseSpiResource' (at pp.c:18363)
          Assignment: op='=' (at pp.c:18364)
            ID: name='CC2420TransmitP__m_state' (at pp.c:18364)
            ID: name='CC2420TransmitP__S_STARTED' (at pp.c:18364)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__Send__sendDone' (at pp.c:18365)
            ExprList:  (at pp.c:18365)
              ID: name='CC2420TransmitP__m_msg' (at pp.c:18365)
              ID: name='ECANCEL' (at pp.c:18365)
        Compound:  (at pp.c:18367)
          If:  (at pp.c:18369)
            UnaryOp: op='!' (at pp.c:18369)
              ID: name='CC2420TransmitP__m_cca' (at pp.c:18369)
            Compound:  (at pp.c:18369)
              Compound:  (at pp.c:18372)
                Assignment: op='=' (at pp.c:18373)
                  ID: name='CC2420TransmitP__m_state' (at pp.c:18373)
                  ID: name='CC2420TransmitP__S_BEGIN_TRANSMIT' (at pp.c:18373)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__attemptSend' (at pp.c:18375)
            Compound:  (at pp.c:18377)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__releaseSpiResource' (at pp.c:18378)
              Compound:  (at pp.c:18381)
                Assignment: op='=' (at pp.c:18382)
                  ID: name='CC2420TransmitP__m_state' (at pp.c:18382)
                  ID: name='CC2420TransmitP__S_SAMPLE_CCA' (at pp.c:18382)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__RadioBackoff__requestInitialBackoff' (at pp.c:18385)
                ExprList:  (at pp.c:18385)
                  ID: name='CC2420TransmitP__m_msg' (at pp.c:18385)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__BackoffTimer__start' (at pp.c:18386)
                ExprList:  (at pp.c:18386)
                  ID: name='CC2420TransmitP__myInitialBackoff' (at pp.c:18386)
  FuncDef:  (at pp.c:18392)
    Decl: name='CC2420ReceiveP__RXFIFO__writeDone', quals=[], storage=['inline', 'static'] (at pp.c:18392)
      FuncDecl: quals=None (at pp.c:18392)
        ParamList:  (at pp.c:18392)
          Decl: name='tx_buf', quals=[], storage=[] (at pp.c:18392)
            PtrDecl: quals=[] (at pp.c:18392)
              TypeDecl: declname='tx_buf', quals=[] (at pp.c:18392)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='tx_len', quals=[], storage=[] (at pp.c:18392)
            TypeDecl: declname='tx_len', quals=[] (at pp.c:18392)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:18392)
            TypeDecl: declname='error', quals=[] (at pp.c:18392)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420ReceiveP__RXFIFO__writeDone', quals=[] (at pp.c:18392)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18394)
  FuncDef:  (at pp.c:18398)
    Decl: name='CC2420SpiP__Fifo__default__writeDone', quals=[], storage=['inline', 'static'] (at pp.c:18398)
      FuncDecl: quals=None (at pp.c:18398)
        ParamList:  (at pp.c:18398)
          Decl: name='addr', quals=[], storage=[] (at pp.c:18398)
            TypeDecl: declname='addr', quals=[] (at pp.c:18398)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='tx_buf', quals=[], storage=[] (at pp.c:18398)
            PtrDecl: quals=[] (at pp.c:18398)
              TypeDecl: declname='tx_buf', quals=[] (at pp.c:18398)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='tx_len', quals=[], storage=[] (at pp.c:18398)
            TypeDecl: declname='tx_len', quals=[] (at pp.c:18398)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:18398)
            TypeDecl: declname='error', quals=[] (at pp.c:18398)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Fifo__default__writeDone', quals=[] (at pp.c:18398)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18400)
  FuncDef:  (at pp.c:18404)
    Decl: name='CC2420SpiP__Fifo__writeDone', quals=[], storage=['static', 'inline'] (at pp.c:18404)
      FuncDecl: quals=None (at pp.c:18404)
        ParamList:  (at pp.c:18404)
          Decl: name='arg_0x101c66328', quals=[], storage=[] (at pp.c:18404)
            TypeDecl: declname='arg_0x101c66328', quals=[] (at pp.c:18404)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:18404)
            PtrDecl: quals=[] (at pp.c:18404)
              TypeDecl: declname='data', quals=[] (at pp.c:18404)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='length', quals=[], storage=[] (at pp.c:18404)
            TypeDecl: declname='length', quals=[] (at pp.c:18404)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:18404)
            TypeDecl: declname='error', quals=[] (at pp.c:18404)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Fifo__writeDone', quals=[] (at pp.c:18404)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18404)
      Switch:  (at pp.c:18406)
        ID: name='arg_0x101c66328' (at pp.c:18406)
        Compound:  (at pp.c:18406)
          Case:  (at pp.c:18408)
            ID: name='CC2420_TXFIFO' (at pp.c:18408)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__TXFIFO__writeDone' (at pp.c:18410)
              ExprList:  (at pp.c:18410)
                ID: name='data' (at pp.c:18410)
                ID: name='length' (at pp.c:18410)
                ID: name='error' (at pp.c:18410)
          Break:  (at pp.c:18412)
          Case:  (at pp.c:18414)
            ID: name='CC2420_RXFIFO' (at pp.c:18414)
            FuncCall:  (at None)
              ID: name='CC2420ReceiveP__RXFIFO__writeDone' (at pp.c:18416)
              ExprList:  (at pp.c:18416)
                ID: name='data' (at pp.c:18416)
                ID: name='length' (at pp.c:18416)
                ID: name='error' (at pp.c:18416)
          Break:  (at pp.c:18418)
          Default:  (at pp.c:18420)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__Fifo__default__writeDone' (at pp.c:18422)
              ExprList:  (at pp.c:18422)
                ID: name='arg_0x101c66328' (at pp.c:18422)
                ID: name='data' (at pp.c:18422)
                ID: name='length' (at pp.c:18422)
                ID: name='error' (at pp.c:18422)
          Break:  (at pp.c:18424)
  FuncDef:  (at pp.c:18431)
    Decl: name='CC2420ControlP__RXCTRL1__write', quals=[], storage=['static', 'inline'] (at pp.c:18431)
      FuncDecl: quals=None (at pp.c:18431)
        ParamList:  (at pp.c:18431)
          Decl: name='data', quals=[], storage=[] (at pp.c:18431)
            TypeDecl: declname='data', quals=[] (at pp.c:18431)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420ControlP__RXCTRL1__write', quals=[] (at pp.c:18431)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:18431)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18433)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18433)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18437)
        ID: name='__nesc_result' (at pp.c:18437)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Reg__write' (at pp.c:18437)
          ExprList:  (at pp.c:18437)
            ID: name='CC2420_RXCTRL1' (at pp.c:18437)
            ID: name='data' (at pp.c:18437)
      Return:  (at pp.c:18441)
        ID: name='__nesc_result' (at pp.c:18441)
  FuncDef:  (at pp.c:18445)
    Decl: name='CC2420ControlP__IOCFG0__write', quals=[], storage=['static', 'inline'] (at pp.c:18445)
      FuncDecl: quals=None (at pp.c:18445)
        ParamList:  (at pp.c:18445)
          Decl: name='data', quals=[], storage=[] (at pp.c:18445)
            TypeDecl: declname='data', quals=[] (at pp.c:18445)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420ControlP__IOCFG0__write', quals=[] (at pp.c:18445)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:18445)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18447)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18447)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18451)
        ID: name='__nesc_result' (at pp.c:18451)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Reg__write' (at pp.c:18451)
          ExprList:  (at pp.c:18451)
            ID: name='CC2420_IOCFG0' (at pp.c:18451)
            ID: name='data' (at pp.c:18451)
      Return:  (at pp.c:18455)
        ID: name='__nesc_result' (at pp.c:18455)
  FuncDef:  (at pp.c:18460)
    Decl: name='CC2420ControlP__SXOSCON__strobe', quals=[], storage=['static', 'inline'] (at pp.c:18460)
      FuncDecl: quals=None (at pp.c:18460)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__SXOSCON__strobe', quals=[] (at pp.c:18460)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:18460)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18462)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18462)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18466)
        ID: name='__nesc_result' (at pp.c:18466)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Strobe__strobe' (at pp.c:18466)
          ExprList:  (at pp.c:18466)
            ID: name='CC2420_SXOSCON' (at pp.c:18466)
      Return:  (at pp.c:18470)
        ID: name='__nesc_result' (at pp.c:18470)
  FuncDef:  (at pp.c:18475)
    Decl: name='HplMsp430InterruptP__Port14__enable', quals=[], storage=['inline', 'static'] (at pp.c:18475)
      FuncDecl: quals=None (at pp.c:18475)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port14__enable', quals=[] (at pp.c:18475)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18477)
      Assignment: op='|=' (at pp.c:18479)
        ID: name='P1IE' (at pp.c:18479)
        BinaryOp: op='<<' (at pp.c:18479)
          Constant: type='int', value='1' (at pp.c:18479)
          Constant: type='int', value='4' (at pp.c:18479)
  FuncDef:  (at pp.c:18483)
    Decl: name='Msp430InterruptC__0__HplInterrupt__enable', quals=[], storage=['static', 'inline'] (at pp.c:18483)
      FuncDecl: quals=None (at pp.c:18483)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__enable', quals=[] (at pp.c:18483)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18483)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port14__enable' (at pp.c:18485)
  FuncDef:  (at pp.c:18490)
    Decl: name='HplMsp430InterruptP__Port14__edge', quals=[], storage=['inline', 'static'] (at pp.c:18490)
      FuncDecl: quals=None (at pp.c:18490)
        ParamList:  (at pp.c:18490)
          Decl: name='l2h', quals=[], storage=[] (at pp.c:18490)
            TypeDecl: declname='l2h', quals=[] (at pp.c:18490)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port14__edge', quals=[] (at pp.c:18490)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18492)
      Compound:  (at pp.c:18495)
        If:  (at pp.c:18496)
          ID: name='l2h' (at pp.c:18496)
          Compound:  (at pp.c:18496)
            Assignment: op='&=' (at pp.c:18498)
              ID: name='P1IES' (at pp.c:18498)
              UnaryOp: op='~' (at pp.c:18498)
                BinaryOp: op='<<' (at pp.c:18498)
                  Constant: type='int', value='1' (at pp.c:18498)
                  Constant: type='int', value='4' (at pp.c:18498)
          Compound:  (at pp.c:18500)
            Assignment: op='|=' (at pp.c:18502)
              ID: name='P1IES' (at pp.c:18502)
              BinaryOp: op='<<' (at pp.c:18502)
                Constant: type='int', value='1' (at pp.c:18502)
                Constant: type='int', value='4' (at pp.c:18502)
  FuncDef:  (at pp.c:18508)
    Decl: name='Msp430InterruptC__0__HplInterrupt__edge', quals=[], storage=['static', 'inline'] (at pp.c:18508)
      FuncDecl: quals=None (at pp.c:18508)
        ParamList:  (at pp.c:18508)
          Decl: name='low_to_high', quals=[], storage=[] (at pp.c:18508)
            TypeDecl: declname='low_to_high', quals=[] (at pp.c:18508)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__edge', quals=[] (at pp.c:18508)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18508)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port14__edge' (at pp.c:18510)
        ExprList:  (at pp.c:18510)
          ID: name='low_to_high' (at pp.c:18510)
  FuncDef:  (at pp.c:18515)
    Decl: name='HplMsp430InterruptP__Port14__clear', quals=[], storage=['inline', 'static'] (at pp.c:18515)
      FuncDecl: quals=None (at pp.c:18515)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port14__clear', quals=[] (at pp.c:18515)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18517)
      Assignment: op='&=' (at pp.c:18519)
        ID: name='P1IFG' (at pp.c:18519)
        UnaryOp: op='~' (at pp.c:18519)
          BinaryOp: op='<<' (at pp.c:18519)
            Constant: type='int', value='1' (at pp.c:18519)
            Constant: type='int', value='4' (at pp.c:18519)
  FuncDef:  (at pp.c:18523)
    Decl: name='Msp430InterruptC__0__HplInterrupt__clear', quals=[], storage=['static', 'inline'] (at pp.c:18523)
      FuncDecl: quals=None (at pp.c:18523)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__clear', quals=[] (at pp.c:18523)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18523)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port14__clear' (at pp.c:18525)
  FuncDef:  (at pp.c:18530)
    Decl: name='HplMsp430InterruptP__Port14__disable', quals=[], storage=['inline', 'static'] (at pp.c:18530)
      FuncDecl: quals=None (at pp.c:18530)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port14__disable', quals=[] (at pp.c:18530)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18532)
      Assignment: op='&=' (at pp.c:18534)
        ID: name='P1IE' (at pp.c:18534)
        UnaryOp: op='~' (at pp.c:18534)
          BinaryOp: op='<<' (at pp.c:18534)
            Constant: type='int', value='1' (at pp.c:18534)
            Constant: type='int', value='4' (at pp.c:18534)
  FuncDef:  (at pp.c:18538)
    Decl: name='Msp430InterruptC__0__HplInterrupt__disable', quals=[], storage=['static', 'inline'] (at pp.c:18538)
      FuncDecl: quals=None (at pp.c:18538)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__disable', quals=[] (at pp.c:18538)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18538)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port14__disable' (at pp.c:18540)
  FuncDef:  (at pp.c:18545)
    Decl: name='Msp430InterruptC__0__Interrupt__disable', quals=[], storage=['inline', 'static'] (at pp.c:18545)
      FuncDecl: quals=None (at pp.c:18545)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__0__Interrupt__disable', quals=[] (at pp.c:18545)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:18547)
      Compound:  (at pp.c:18550)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__0__HplInterrupt__disable' (at pp.c:18551)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__0__HplInterrupt__clear' (at pp.c:18552)
      Return:  (at pp.c:18554)
        ID: name='SUCCESS' (at pp.c:18554)
  FuncDef:  (at pp.c:18558)
    Decl: name='Msp430InterruptC__0__enable', quals=[], storage=['inline', 'static'] (at pp.c:18558)
      FuncDecl: quals=None (at pp.c:18558)
        ParamList:  (at pp.c:18558)
          Decl: name='rising', quals=[], storage=[] (at pp.c:18558)
            TypeDecl: declname='rising', quals=[] (at pp.c:18558)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='Msp430InterruptC__0__enable', quals=[] (at pp.c:18558)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:18560)
      Compound:  (at pp.c:18563)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__0__Interrupt__disable' (at pp.c:18564)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__0__HplInterrupt__edge' (at pp.c:18565)
          ExprList:  (at pp.c:18565)
            ID: name='rising' (at pp.c:18565)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__0__HplInterrupt__enable' (at pp.c:18566)
      Return:  (at pp.c:18568)
        ID: name='SUCCESS' (at pp.c:18568)
  FuncDef:  (at pp.c:18571)
    Decl: name='Msp430InterruptC__0__Interrupt__enableRisingEdge', quals=[], storage=['inline', 'static'] (at pp.c:18571)
      FuncDecl: quals=None (at pp.c:18571)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__0__Interrupt__enableRisingEdge', quals=[] (at pp.c:18571)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:18573)
      Return:  (at pp.c:18574)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__0__enable' (at pp.c:18574)
          ExprList:  (at pp.c:18574)
            ID: name='TRUE' (at pp.c:18574)
  FuncDef:  (at pp.c:18578)
    Decl: name='CC2420ControlP__InterruptCCA__enableRisingEdge', quals=[], storage=['static', 'inline'] (at pp.c:18578)
      FuncDecl: quals=None (at pp.c:18578)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__InterruptCCA__enableRisingEdge', quals=[] (at pp.c:18578)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:18578)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18580)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18580)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18584)
        ID: name='__nesc_result' (at pp.c:18584)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__0__Interrupt__enableRisingEdge' (at pp.c:18584)
      Return:  (at pp.c:18588)
        ID: name='__nesc_result' (at pp.c:18588)
  FuncDef:  (at pp.c:18593)
    Decl: name='CC2420ControlP__IOCFG1__write', quals=[], storage=['static', 'inline'] (at pp.c:18593)
      FuncDecl: quals=None (at pp.c:18593)
        ParamList:  (at pp.c:18593)
          Decl: name='data', quals=[], storage=[] (at pp.c:18593)
            TypeDecl: declname='data', quals=[] (at pp.c:18593)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420ControlP__IOCFG1__write', quals=[] (at pp.c:18593)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:18593)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18595)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18595)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18599)
        ID: name='__nesc_result' (at pp.c:18599)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Reg__write' (at pp.c:18599)
          ExprList:  (at pp.c:18599)
            ID: name='CC2420_IOCFG1' (at pp.c:18599)
            ID: name='data' (at pp.c:18599)
      Return:  (at pp.c:18603)
        ID: name='__nesc_result' (at pp.c:18603)
  FuncDef:  (at pp.c:18608)
    Decl: name='CC2420ControlP__CC2420Power__startOscillator', quals=[], storage=['inline', 'static'] (at pp.c:18608)
      FuncDecl: quals=None (at pp.c:18608)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Power__startOscillator', quals=[] (at pp.c:18608)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:18610)
      Compound:  (at pp.c:18611)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:18611)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:18611)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:18611)
        Compound:  (at pp.c:18613)
          If:  (at pp.c:18614)
            BinaryOp: op='!=' (at pp.c:18614)
              ID: name='CC2420ControlP__m_state' (at pp.c:18614)
              ID: name='CC2420ControlP__S_VREG_STARTED' (at pp.c:18614)
            Compound:  (at pp.c:18614)
              Compound:  (at pp.c:18615)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:18616)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:18616)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='FAIL' (at pp.c:18618)
                Compound:  (at pp.c:18620)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:18622)
                    ExprList:  (at pp.c:18622)
                      ID: name='__nesc_atomic' (at pp.c:18622)
                  Return:  (at pp.c:18624)
                    ID: name='__nesc_temp' (at pp.c:18624)
          Assignment: op='=' (at pp.c:18629)
            ID: name='CC2420ControlP__m_state' (at pp.c:18629)
            ID: name='CC2420ControlP__S_XOSC_STARTING' (at pp.c:18629)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__IOCFG1__write' (at pp.c:18630)
            ExprList:  (at pp.c:18630)
              BinaryOp: op='<<' (at pp.c:18630)
                ID: name='CC2420_SFDMUX_XOSC16M_STABLE' (at pp.c:18630)
                ID: name='CC2420_IOCFG1_CCAMUX' (at pp.c:18631)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__InterruptCCA__enableRisingEdge' (at pp.c:18633)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__SXOSCON__strobe' (at pp.c:18634)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__IOCFG0__write' (at pp.c:18636)
            ExprList:  (at pp.c:18636)
              BinaryOp: op='|' (at pp.c:18636)
                BinaryOp: op='<<' (at pp.c:18636)
                  Constant: type='int', value='1' (at pp.c:18636)
                  ID: name='CC2420_IOCFG0_FIFOP_POLARITY' (at pp.c:18636)
                BinaryOp: op='<<' (at pp.c:18637)
                  Constant: type='int', value='127' (at pp.c:18637)
                  ID: name='CC2420_IOCFG0_FIFOP_THR' (at pp.c:18637)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__writeFsctrl' (at pp.c:18639)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__writeMdmctrl0' (at pp.c:18640)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__RXCTRL1__write' (at pp.c:18642)
            ExprList:  (at pp.c:18642)
              BinaryOp: op='|' (at pp.c:18642)
                BinaryOp: op='|' (at pp.c:18642)
                  BinaryOp: op='|' (at pp.c:18642)
                    BinaryOp: op='|' (at pp.c:18642)
                      BinaryOp: op='|' (at pp.c:18642)
                        BinaryOp: op='|' (at pp.c:18642)
                          BinaryOp: op='<<' (at pp.c:18642)
                            Constant: type='int', value='1' (at pp.c:18642)
                            ID: name='CC2420_RXCTRL1_RXBPF_LOCUR' (at pp.c:18642)
                          BinaryOp: op='<<' (at pp.c:18643)
                            Constant: type='int', value='1' (at pp.c:18643)
                            ID: name='CC2420_RXCTRL1_LOW_LOWGAIN' (at pp.c:18643)
                        BinaryOp: op='<<' (at pp.c:18644)
                          Constant: type='int', value='1' (at pp.c:18644)
                          ID: name='CC2420_RXCTRL1_HIGH_HGM' (at pp.c:18644)
                      BinaryOp: op='<<' (at pp.c:18645)
                        Constant: type='int', value='1' (at pp.c:18645)
                        ID: name='CC2420_RXCTRL1_LNA_CAP_ARRAY' (at pp.c:18645)
                    BinaryOp: op='<<' (at pp.c:18646)
                      Constant: type='int', value='1' (at pp.c:18646)
                      ID: name='CC2420_RXCTRL1_RXMIX_TAIL' (at pp.c:18646)
                  BinaryOp: op='<<' (at pp.c:18647)
                    Constant: type='int', value='1' (at pp.c:18647)
                    ID: name='CC2420_RXCTRL1_RXMIX_VCM' (at pp.c:18647)
                BinaryOp: op='<<' (at pp.c:18648)
                  Constant: type='int', value='2' (at pp.c:18648)
                  ID: name='CC2420_RXCTRL1_RXMIX_CURRENT' (at pp.c:18648)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:18651)
          ExprList:  (at pp.c:18651)
            ID: name='__nesc_atomic' (at pp.c:18651)
      Return:  (at pp.c:18652)
        ID: name='SUCCESS' (at pp.c:18652)
  FuncDef:  (at pp.c:18656)
    Decl: name='CC2420CsmaP__CC2420Power__startOscillator', quals=[], storage=['static', 'inline'] (at pp.c:18656)
      FuncDecl: quals=None (at pp.c:18656)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__CC2420Power__startOscillator', quals=[] (at pp.c:18656)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:18656)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18658)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18658)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18662)
        ID: name='__nesc_result' (at pp.c:18662)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__CC2420Power__startOscillator' (at pp.c:18662)
      Return:  (at pp.c:18666)
        ID: name='__nesc_result' (at pp.c:18666)
  FuncDef:  (at pp.c:18671)
    Decl: name='CC2420CsmaP__Resource__granted', quals=[], storage=['inline', 'static'] (at pp.c:18671)
      FuncDecl: quals=None (at pp.c:18671)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__Resource__granted', quals=[] (at pp.c:18671)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18673)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__CC2420Power__startOscillator' (at pp.c:18674)
  FuncDef:  (at pp.c:18678)
    Decl: name='CC2420ControlP__Resource__granted', quals=[], storage=['static', 'inline'] (at pp.c:18678)
      FuncDecl: quals=None (at pp.c:18678)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__Resource__granted', quals=[] (at pp.c:18678)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18678)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__Resource__granted' (at pp.c:18680)
  FuncDef:  (at pp.c:18685)
    Decl: name='CC2420ControlP__CSN__clr', quals=[], storage=['static', 'inline'] (at pp.c:18685)
      FuncDecl: quals=None (at pp.c:18685)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CSN__clr', quals=[] (at pp.c:18685)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18685)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__4__GeneralIO__clr' (at pp.c:18687)
  FuncDef:  (at pp.c:18692)
    Decl: name='CC2420ControlP__SpiResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:18692)
      FuncDecl: quals=None (at pp.c:18692)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__SpiResource__granted', quals=[] (at pp.c:18692)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18694)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CSN__clr' (at pp.c:18695)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__Resource__granted' (at pp.c:18696)
  FuncDef:  (at pp.c:18700)
    Decl: name='CC2420ControlP__syncDone__postTask', quals=[], storage=['static', 'inline'] (at pp.c:18700)
      FuncDecl: quals=None (at pp.c:18700)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__syncDone__postTask', quals=[] (at pp.c:18700)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:18700)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18702)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18702)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18706)
        ID: name='__nesc_result' (at pp.c:18706)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:18706)
          ExprList:  (at pp.c:18706)
            ID: name='CC2420ControlP__syncDone' (at pp.c:18706)
      Return:  (at pp.c:18710)
        ID: name='__nesc_result' (at pp.c:18710)
  FuncDef:  (at pp.c:18715)
    Decl: name='CC2420ControlP__SyncResource__release', quals=[], storage=['static', 'inline'] (at pp.c:18715)
      FuncDecl: quals=None (at pp.c:18715)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__SyncResource__release', quals=[] (at pp.c:18715)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:18715)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18717)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18717)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18721)
        ID: name='__nesc_result' (at pp.c:18721)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__release' (at pp.c:18721)
          ExprList:  (at pp.c:18721)
            ID: name='CC2420SpiC__1__CLIENT_ID' (at pp.c:18721)
      Return:  (at pp.c:18725)
        ID: name='__nesc_result' (at pp.c:18725)
  FuncDef:  (at pp.c:18730)
    Decl: name='CC2420ControlP__CSN__set', quals=[], storage=['static', 'inline'] (at pp.c:18730)
      FuncDecl: quals=None (at pp.c:18730)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CSN__set', quals=[] (at pp.c:18730)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18730)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__4__GeneralIO__set' (at pp.c:18732)
  FuncDef:  (at pp.c:18737)
    Decl: name='CC2420ControlP__SRXON__strobe', quals=[], storage=['static', 'inline'] (at pp.c:18737)
      FuncDecl: quals=None (at pp.c:18737)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__SRXON__strobe', quals=[] (at pp.c:18737)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:18737)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18739)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18739)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18743)
        ID: name='__nesc_result' (at pp.c:18743)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Strobe__strobe' (at pp.c:18743)
          ExprList:  (at pp.c:18743)
            ID: name='CC2420_SRXON' (at pp.c:18743)
      Return:  (at pp.c:18747)
        ID: name='__nesc_result' (at pp.c:18747)
  FuncDef:  (at pp.c:18751)
    Decl: name='CC2420ControlP__SRFOFF__strobe', quals=[], storage=['static', 'inline'] (at pp.c:18751)
      FuncDecl: quals=None (at pp.c:18751)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__SRFOFF__strobe', quals=[] (at pp.c:18751)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:18751)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18753)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18753)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18757)
        ID: name='__nesc_result' (at pp.c:18757)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Strobe__strobe' (at pp.c:18757)
          ExprList:  (at pp.c:18757)
            ID: name='CC2420_SRFOFF' (at pp.c:18757)
      Return:  (at pp.c:18761)
        ID: name='__nesc_result' (at pp.c:18761)
  FuncDef:  (at pp.c:18766)
    Decl: name='CC2420ControlP__SyncResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:18766)
      FuncDecl: quals=None (at pp.c:18766)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__SyncResource__granted', quals=[] (at pp.c:18766)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18768)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CSN__clr' (at pp.c:18769)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__SRFOFF__strobe' (at pp.c:18770)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__writeFsctrl' (at pp.c:18771)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__writeMdmctrl0' (at pp.c:18772)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__writeId' (at pp.c:18773)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CSN__set' (at pp.c:18774)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CSN__clr' (at pp.c:18775)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__SRXON__strobe' (at pp.c:18776)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CSN__set' (at pp.c:18777)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__SyncResource__release' (at pp.c:18778)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__syncDone__postTask' (at pp.c:18779)
  FuncDef:  (at pp.c:18783)
    Decl: name='CC2420ControlP__ReadRssi__default__readDone', quals=[], storage=['inline', 'static'] (at pp.c:18783)
      FuncDecl: quals=None (at pp.c:18783)
        ParamList:  (at pp.c:18783)
          Decl: name='error', quals=[], storage=[] (at pp.c:18783)
            TypeDecl: declname='error', quals=[] (at pp.c:18783)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:18783)
            TypeDecl: declname='data', quals=[] (at pp.c:18783)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420ControlP__ReadRssi__default__readDone', quals=[] (at pp.c:18783)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18785)
  FuncDef:  (at pp.c:18789)
    Decl: name='CC2420ControlP__ReadRssi__readDone', quals=[], storage=['static', 'inline'] (at pp.c:18789)
      FuncDecl: quals=None (at pp.c:18789)
        ParamList:  (at pp.c:18789)
          Decl: name='result', quals=[], storage=[] (at pp.c:18789)
            TypeDecl: declname='result', quals=[] (at pp.c:18789)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='val', quals=[], storage=[] (at pp.c:18789)
            TypeDecl: declname='val', quals=[] (at pp.c:18789)
              IdentifierType: names=['CC2420ControlP__ReadRssi__val_t'] (at None)
        TypeDecl: declname='CC2420ControlP__ReadRssi__readDone', quals=[] (at pp.c:18789)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18789)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__ReadRssi__default__readDone' (at pp.c:18791)
        ExprList:  (at pp.c:18791)
          ID: name='result' (at pp.c:18791)
          ID: name='val' (at pp.c:18791)
  FuncDef:  (at pp.c:18796)
    Decl: name='CC2420ControlP__RssiResource__release', quals=[], storage=['static', 'inline'] (at pp.c:18796)
      FuncDecl: quals=None (at pp.c:18796)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__RssiResource__release', quals=[] (at pp.c:18796)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:18796)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18798)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18798)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18802)
        ID: name='__nesc_result' (at pp.c:18802)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__release' (at pp.c:18802)
          ExprList:  (at pp.c:18802)
            ID: name='CC2420SpiC__2__CLIENT_ID' (at pp.c:18802)
      Return:  (at pp.c:18806)
        ID: name='__nesc_result' (at pp.c:18806)
  FuncDef:  (at pp.c:18811)
    Decl: name='CC2420SpiP__Reg__read', quals=[], storage=['inline', 'static'] (at pp.c:18811)
      FuncDecl: quals=None (at pp.c:18811)
        ParamList:  (at pp.c:18811)
          Decl: name='addr', quals=[], storage=[] (at pp.c:18811)
            TypeDecl: declname='addr', quals=[] (at pp.c:18811)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:18811)
            PtrDecl: quals=[] (at pp.c:18811)
              TypeDecl: declname='data', quals=[] (at pp.c:18811)
                IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Reg__read', quals=[] (at pp.c:18811)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:18813)
      Decl: name='status', quals=[], storage=[] (at pp.c:18815)
        TypeDecl: declname='status', quals=[] (at pp.c:18815)
          IdentifierType: names=['cc2420_status_t'] (at None)
        Constant: type='int', value='0' (at pp.c:18815)
      Compound:  (at pp.c:18817)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:18817)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:18817)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:18817)
        Compound:  (at pp.c:18819)
          If:  (at pp.c:18820)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__WorkingState__isIdle' (at pp.c:18820)
            Compound:  (at pp.c:18820)
              Compound:  (at pp.c:18821)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:18822)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:18822)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='status' (at pp.c:18824)
                Compound:  (at pp.c:18826)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:18828)
                    ExprList:  (at pp.c:18828)
                      ID: name='__nesc_atomic' (at pp.c:18828)
                  Return:  (at pp.c:18830)
                    ID: name='__nesc_temp' (at pp.c:18830)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:18836)
          ExprList:  (at pp.c:18836)
            ID: name='__nesc_atomic' (at pp.c:18836)
      Assignment: op='=' (at pp.c:18838)
        ID: name='status' (at pp.c:18838)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__SpiByte__write' (at pp.c:18838)
          ExprList:  (at pp.c:18838)
            BinaryOp: op='|' (at pp.c:18838)
              ID: name='addr' (at pp.c:18838)
              Constant: type='int', value='0x40' (at pp.c:18838)
      Assignment: op='=' (at pp.c:18839)
        UnaryOp: op='*' (at pp.c:18839)
          ID: name='data' (at pp.c:18839)
        BinaryOp: op='<<' (at None)
          Cast:  (at None)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['uint16_t'] (at None)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__SpiByte__write' (at pp.c:18839)
              ExprList:  (at pp.c:18839)
                Constant: type='int', value='0' (at pp.c:18839)
          Constant: type='int', value='8' (at pp.c:18839)
      Assignment: op='|=' (at pp.c:18840)
        UnaryOp: op='*' (at pp.c:18840)
          ID: name='data' (at pp.c:18840)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__SpiByte__write' (at pp.c:18840)
          ExprList:  (at pp.c:18840)
            Constant: type='int', value='0' (at pp.c:18840)
      Return:  (at pp.c:18842)
        ID: name='status' (at pp.c:18842)
  FuncDef:  (at pp.c:18846)
    Decl: name='CC2420ControlP__RSSI__read', quals=[], storage=['static', 'inline'] (at pp.c:18846)
      FuncDecl: quals=None (at pp.c:18846)
        ParamList:  (at pp.c:18846)
          Decl: name='data', quals=[], storage=[] (at pp.c:18846)
            PtrDecl: quals=[] (at pp.c:18846)
              TypeDecl: declname='data', quals=[] (at pp.c:18846)
                IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420ControlP__RSSI__read', quals=[] (at pp.c:18846)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:18846)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18848)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18848)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18852)
        ID: name='__nesc_result' (at pp.c:18852)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Reg__read' (at pp.c:18852)
          ExprList:  (at pp.c:18852)
            ID: name='CC2420_RSSI' (at pp.c:18852)
            ID: name='data' (at pp.c:18852)
      Return:  (at pp.c:18856)
        ID: name='__nesc_result' (at pp.c:18856)
  FuncDef:  (at pp.c:18861)
    Decl: name='CC2420ControlP__RssiResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:18861)
      FuncDecl: quals=None (at pp.c:18861)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__RssiResource__granted', quals=[] (at pp.c:18861)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18863)
      Decl: name='data', quals=[], storage=[] (at pp.c:18864)
        TypeDecl: declname='data', quals=[] (at pp.c:18864)
          IdentifierType: names=['uint16_t'] (at None)
        Constant: type='int', value='0' (at pp.c:18864)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CSN__clr' (at pp.c:18867)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__RSSI__read' (at pp.c:18868)
        ExprList:  (at pp.c:18868)
          UnaryOp: op='&' (at pp.c:18868)
            ID: name='data' (at pp.c:18868)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CSN__set' (at pp.c:18869)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__RssiResource__release' (at pp.c:18871)
      Assignment: op='+=' (at pp.c:18872)
        ID: name='data' (at pp.c:18872)
        Constant: type='int', value='0x7f' (at pp.c:18872)
      Assignment: op='&=' (at pp.c:18873)
        ID: name='data' (at pp.c:18873)
        Constant: type='int', value='0x00ff' (at pp.c:18873)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__ReadRssi__readDone' (at pp.c:18874)
        ExprList:  (at pp.c:18874)
          ID: name='SUCCESS' (at pp.c:18874)
          ID: name='data' (at pp.c:18874)
  FuncDef:  (at pp.c:18878)
    Decl: name='CC2420TransmitP__SpiResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:18878)
      FuncDecl: quals=None (at pp.c:18878)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__SpiResource__granted', quals=[] (at pp.c:18878)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18880)
      Decl: name='cur_state', quals=[], storage=[] (at pp.c:18881)
        TypeDecl: declname='cur_state', quals=[] (at pp.c:18881)
          IdentifierType: names=['uint8_t'] (at None)
      Compound:  (at pp.c:18883)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:18883)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:18883)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:18883)
        Compound:  (at pp.c:18885)
          Assignment: op='=' (at pp.c:18886)
            ID: name='cur_state' (at pp.c:18886)
            ID: name='CC2420TransmitP__m_state' (at pp.c:18886)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:18889)
          ExprList:  (at pp.c:18889)
            ID: name='__nesc_atomic' (at pp.c:18889)
      Switch:  (at pp.c:18891)
        ID: name='cur_state' (at pp.c:18891)
        Compound:  (at pp.c:18891)
          Case:  (at pp.c:18892)
            ID: name='CC2420TransmitP__S_LOAD' (at pp.c:18892)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__loadTXFIFO' (at pp.c:18893)
          Break:  (at pp.c:18894)
          Case:  (at pp.c:18896)
            ID: name='CC2420TransmitP__S_BEGIN_TRANSMIT' (at pp.c:18896)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__attemptSend' (at pp.c:18897)
          Break:  (at pp.c:18898)
          Case:  (at pp.c:18900)
            ID: name='CC2420TransmitP__S_CANCEL' (at pp.c:18900)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__CSN__clr' (at pp.c:18901)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__SFLUSHTX__strobe' (at pp.c:18902)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__CSN__set' (at pp.c:18903)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__releaseSpiResource' (at pp.c:18904)
          Compound:  (at pp.c:18905)
            Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:18905)
              TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:18905)
                IdentifierType: names=['__nesc_atomic_t'] (at None)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_start' (at pp.c:18905)
            Compound:  (at pp.c:18907)
              Assignment: op='=' (at pp.c:18908)
                ID: name='CC2420TransmitP__m_state' (at pp.c:18908)
                ID: name='CC2420TransmitP__S_STARTED' (at pp.c:18908)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:18911)
              ExprList:  (at pp.c:18911)
                ID: name='__nesc_atomic' (at pp.c:18911)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__Send__sendDone' (at pp.c:18912)
            ExprList:  (at pp.c:18912)
              ID: name='CC2420TransmitP__m_msg' (at pp.c:18912)
              ID: name='ECANCEL' (at pp.c:18912)
          Break:  (at pp.c:18913)
          Default:  (at pp.c:18915)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__releaseSpiResource' (at pp.c:18916)
          Break:  (at pp.c:18917)
  FuncDef:  (at pp.c:18922)
    Decl: name='CC2420ReceiveP__SpiResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:18922)
      FuncDecl: quals=None (at pp.c:18922)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__SpiResource__granted', quals=[] (at pp.c:18922)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18924)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__receive' (at pp.c:18932)
  FuncDef:  (at pp.c:18936)
    Decl: name='CC2420SpiP__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:18936)
      FuncDecl: quals=None (at pp.c:18936)
        ParamList:  (at pp.c:18936)
          Decl: name='id', quals=[], storage=[] (at pp.c:18936)
            TypeDecl: declname='id', quals=[] (at pp.c:18936)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Resource__default__granted', quals=[] (at pp.c:18936)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18938)
  FuncDef:  (at pp.c:18942)
    Decl: name='CC2420SpiP__Resource__granted', quals=[], storage=['static', 'inline'] (at pp.c:18942)
      FuncDecl: quals=None (at pp.c:18942)
        ParamList:  (at pp.c:18942)
          Decl: name='arg_0x101c67158', quals=[], storage=[] (at pp.c:18942)
            TypeDecl: declname='arg_0x101c67158', quals=[] (at pp.c:18942)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Resource__granted', quals=[] (at pp.c:18942)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18942)
      Switch:  (at pp.c:18944)
        ID: name='arg_0x101c67158' (at pp.c:18944)
        Compound:  (at pp.c:18944)
          Case:  (at pp.c:18946)
            ID: name='CC2420SpiC__0__CLIENT_ID' (at pp.c:18946)
            FuncCall:  (at None)
              ID: name='CC2420ControlP__SpiResource__granted' (at pp.c:18948)
          Break:  (at pp.c:18950)
          Case:  (at pp.c:18952)
            ID: name='CC2420SpiC__1__CLIENT_ID' (at pp.c:18952)
            FuncCall:  (at None)
              ID: name='CC2420ControlP__SyncResource__granted' (at pp.c:18954)
          Break:  (at pp.c:18956)
          Case:  (at pp.c:18958)
            ID: name='CC2420SpiC__2__CLIENT_ID' (at pp.c:18958)
            FuncCall:  (at None)
              ID: name='CC2420ControlP__RssiResource__granted' (at pp.c:18960)
          Break:  (at pp.c:18962)
          Case:  (at pp.c:18964)
            ID: name='CC2420SpiC__3__CLIENT_ID' (at pp.c:18964)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__SpiResource__granted' (at pp.c:18966)
          Break:  (at pp.c:18968)
          Case:  (at pp.c:18970)
            ID: name='CC2420SpiC__4__CLIENT_ID' (at pp.c:18970)
            FuncCall:  (at None)
              ID: name='CC2420ReceiveP__SpiResource__granted' (at pp.c:18972)
          Break:  (at pp.c:18974)
          Default:  (at pp.c:18976)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__Resource__default__granted' (at pp.c:18978)
              ExprList:  (at pp.c:18978)
                ID: name='arg_0x101c67158' (at pp.c:18978)
          Break:  (at pp.c:18980)
  FuncDef:  (at pp.c:18987)
    Decl: name='CC2420SpiP__grant__runTask', quals=[], storage=['inline', 'static'] (at pp.c:18987)
      FuncDecl: quals=None (at pp.c:18987)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__grant__runTask', quals=[] (at pp.c:18987)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18989)
      Decl: name='holder', quals=[], storage=[] (at pp.c:18990)
        TypeDecl: declname='holder', quals=[] (at pp.c:18990)
          IdentifierType: names=['uint8_t'] (at None)
      Compound:  (at pp.c:18993)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:18993)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:18993)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:18993)
        Compound:  (at pp.c:18995)
          Assignment: op='=' (at pp.c:18996)
            ID: name='holder' (at pp.c:18996)
            ID: name='CC2420SpiP__m_holder' (at pp.c:18996)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:18999)
          ExprList:  (at pp.c:18999)
            ID: name='__nesc_atomic' (at pp.c:18999)
      FuncCall:  (at None)
        ID: name='CC2420SpiP__Resource__granted' (at pp.c:19000)
        ExprList:  (at pp.c:19000)
          ID: name='holder' (at pp.c:19000)
  FuncDef:  (at pp.c:19004)
    Decl: name='CC2420ControlP__FSCTRL__write', quals=[], storage=['static', 'inline'] (at pp.c:19004)
      FuncDecl: quals=None (at pp.c:19004)
        ParamList:  (at pp.c:19004)
          Decl: name='data', quals=[], storage=[] (at pp.c:19004)
            TypeDecl: declname='data', quals=[] (at pp.c:19004)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420ControlP__FSCTRL__write', quals=[] (at pp.c:19004)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:19004)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19006)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19006)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19010)
        ID: name='__nesc_result' (at pp.c:19010)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Reg__write' (at pp.c:19010)
          ExprList:  (at pp.c:19010)
            ID: name='CC2420_FSCTRL' (at pp.c:19010)
            ID: name='data' (at pp.c:19010)
      Return:  (at pp.c:19014)
        ID: name='__nesc_result' (at pp.c:19014)
  FuncDef:  (at pp.c:19018)
    Decl: name='CC2420ControlP__MDMCTRL0__write', quals=[], storage=['static', 'inline'] (at pp.c:19018)
      FuncDecl: quals=None (at pp.c:19018)
        ParamList:  (at pp.c:19018)
          Decl: name='data', quals=[], storage=[] (at pp.c:19018)
            TypeDecl: declname='data', quals=[] (at pp.c:19018)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420ControlP__MDMCTRL0__write', quals=[] (at pp.c:19018)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:19018)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19020)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19020)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19024)
        ID: name='__nesc_result' (at pp.c:19024)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Reg__write' (at pp.c:19024)
          ExprList:  (at pp.c:19024)
            ID: name='CC2420_MDMCTRL0' (at pp.c:19024)
            ID: name='data' (at pp.c:19024)
      Return:  (at pp.c:19028)
        ID: name='__nesc_result' (at pp.c:19028)
  FuncDef:  (at pp.c:19033)
    Decl: name='CC2420ControlP__IEEEADR__write', quals=[], storage=['static', 'inline'] (at pp.c:19033)
      FuncDecl: quals=None (at pp.c:19033)
        ParamList:  (at pp.c:19033)
          Decl: name='offset', quals=[], storage=[] (at pp.c:19033)
            TypeDecl: declname='offset', quals=[] (at pp.c:19033)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:19033)
            PtrDecl: quals=[] (at pp.c:19033)
              TypeDecl: declname='data', quals=[] (at pp.c:19033)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='length', quals=[], storage=[] (at pp.c:19033)
            TypeDecl: declname='length', quals=[] (at pp.c:19033)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420ControlP__IEEEADR__write', quals=[] (at pp.c:19033)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:19033)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19035)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19035)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19039)
        ID: name='__nesc_result' (at pp.c:19039)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Ram__write' (at pp.c:19039)
          ExprList:  (at pp.c:19039)
            ID: name='CC2420_RAM_IEEEADR' (at pp.c:19039)
            ID: name='offset' (at pp.c:19039)
            ID: name='data' (at pp.c:19039)
            ID: name='length' (at pp.c:19039)
      Return:  (at pp.c:19043)
        ID: name='__nesc_result' (at pp.c:19043)
  FuncDef:  (at pp.c:19048)
    Decl: name='CC2420ActiveMessageP__CC2420Config__syncDone', quals=[], storage=['inline', 'static'] (at pp.c:19048)
      FuncDecl: quals=None (at pp.c:19048)
        ParamList:  (at pp.c:19048)
          Decl: name='error', quals=[], storage=[] (at pp.c:19048)
            TypeDecl: declname='error', quals=[] (at pp.c:19048)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__CC2420Config__syncDone', quals=[] (at pp.c:19048)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19050)
  FuncDef:  (at pp.c:19054)
    Decl: name='CC2420ReceiveP__CC2420Config__syncDone', quals=[], storage=['inline', 'static'] (at pp.c:19054)
      FuncDecl: quals=None (at pp.c:19054)
        ParamList:  (at pp.c:19054)
          Decl: name='error', quals=[], storage=[] (at pp.c:19054)
            TypeDecl: declname='error', quals=[] (at pp.c:19054)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CC2420Config__syncDone', quals=[] (at pp.c:19054)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19056)
  FuncDef:  (at pp.c:19060)
    Decl: name='CC2420ControlP__CC2420Config__syncDone', quals=[], storage=['static', 'inline'] (at pp.c:19060)
      FuncDecl: quals=None (at pp.c:19060)
        ParamList:  (at pp.c:19060)
          Decl: name='error', quals=[], storage=[] (at pp.c:19060)
            TypeDecl: declname='error', quals=[] (at pp.c:19060)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Config__syncDone', quals=[] (at pp.c:19060)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19060)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__CC2420Config__syncDone' (at pp.c:19062)
        ExprList:  (at pp.c:19062)
          ID: name='error' (at pp.c:19062)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__CC2420Config__syncDone' (at pp.c:19064)
        ExprList:  (at pp.c:19064)
          ID: name='error' (at pp.c:19064)
  FuncDef:  (at pp.c:19069)
    Decl: name='CC2420ControlP__syncDone__runTask', quals=[], storage=['inline', 'static'] (at pp.c:19069)
      FuncDecl: quals=None (at pp.c:19069)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__syncDone__runTask', quals=[] (at pp.c:19069)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19071)
      Compound:  (at pp.c:19072)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:19072)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:19072)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:19072)
        Assignment: op='=' (at pp.c:19074)
          ID: name='CC2420ControlP__m_sync_busy' (at pp.c:19074)
          ID: name='FALSE' (at pp.c:19074)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:19076)
          ExprList:  (at pp.c:19076)
            ID: name='__nesc_atomic' (at pp.c:19076)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CC2420Config__syncDone' (at pp.c:19077)
        ExprList:  (at pp.c:19077)
          ID: name='SUCCESS' (at pp.c:19077)
  FuncDef:  (at pp.c:19081)
    Decl: name='CC2420ControlP__SyncResource__request', quals=[], storage=['static', 'inline'] (at pp.c:19081)
      FuncDecl: quals=None (at pp.c:19081)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__SyncResource__request', quals=[] (at pp.c:19081)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19081)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19083)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19083)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19087)
        ID: name='__nesc_result' (at pp.c:19087)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__request' (at pp.c:19087)
          ExprList:  (at pp.c:19087)
            ID: name='CC2420SpiC__1__CLIENT_ID' (at pp.c:19087)
      Return:  (at pp.c:19091)
        ID: name='__nesc_result' (at pp.c:19091)
  FuncDef:  (at pp.c:19096)
    Decl: name='CC2420ControlP__CC2420Config__sync', quals=[], storage=['inline', 'static'] (at pp.c:19096)
      FuncDecl: quals=None (at pp.c:19096)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Config__sync', quals=[] (at pp.c:19096)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19098)
      Compound:  (at pp.c:19099)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:19099)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:19099)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:19099)
        Compound:  (at pp.c:19101)
          If:  (at pp.c:19102)
            ID: name='CC2420ControlP__m_sync_busy' (at pp.c:19102)
            Compound:  (at pp.c:19102)
              Compound:  (at pp.c:19103)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:19104)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:19104)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='FAIL' (at pp.c:19106)
                Compound:  (at pp.c:19108)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:19110)
                    ExprList:  (at pp.c:19110)
                      ID: name='__nesc_atomic' (at pp.c:19110)
                  Return:  (at pp.c:19112)
                    ID: name='__nesc_temp' (at pp.c:19112)
          Assignment: op='=' (at pp.c:19117)
            ID: name='CC2420ControlP__m_sync_busy' (at pp.c:19117)
            ID: name='TRUE' (at pp.c:19117)
          If:  (at pp.c:19118)
            BinaryOp: op='==' (at pp.c:19118)
              ID: name='CC2420ControlP__m_state' (at pp.c:19118)
              ID: name='CC2420ControlP__S_XOSC_STARTED' (at pp.c:19118)
            Compound:  (at pp.c:19118)
              FuncCall:  (at None)
                ID: name='CC2420ControlP__SyncResource__request' (at pp.c:19119)
            Compound:  (at pp.c:19123)
              FuncCall:  (at None)
                ID: name='CC2420ControlP__syncDone__postTask' (at pp.c:19124)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:19128)
          ExprList:  (at pp.c:19128)
            ID: name='__nesc_atomic' (at pp.c:19128)
      Return:  (at pp.c:19129)
        ID: name='SUCCESS' (at pp.c:19129)
  FuncDef:  (at pp.c:19133)
    Decl: name='CC2420ControlP__sync__runTask', quals=[], storage=['inline', 'static'] (at pp.c:19133)
      FuncDecl: quals=None (at pp.c:19133)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__sync__runTask', quals=[] (at pp.c:19133)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19135)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CC2420Config__sync' (at pp.c:19136)
  FuncDef:  (at pp.c:19140)
    Decl: name='CC2420TinyosNetworkP__BareSend__default__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:19140)
      FuncDecl: quals=None (at pp.c:19140)
        ParamList:  (at pp.c:19140)
          Decl: name='msg', quals=[], storage=[] (at pp.c:19140)
            PtrDecl: quals=[] (at pp.c:19140)
              TypeDecl: declname='msg', quals=[] (at pp.c:19140)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:19140)
            TypeDecl: declname='error', quals=[] (at pp.c:19140)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__BareSend__default__sendDone', quals=[] (at pp.c:19140)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19142)
  FuncDef:  (at pp.c:19146)
    Decl: name='CC2420TinyosNetworkP__BareSend__sendDone', quals=[], storage=['static', 'inline'] (at pp.c:19146)
      FuncDecl: quals=None (at pp.c:19146)
        ParamList:  (at pp.c:19146)
          Decl: name='msg', quals=[], storage=[] (at pp.c:19146)
            PtrDecl: quals=[] (at pp.c:19146)
              TypeDecl: declname='msg', quals=[] (at pp.c:19146)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:19146)
            TypeDecl: declname='error', quals=[] (at pp.c:19146)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__BareSend__sendDone', quals=[] (at pp.c:19146)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19146)
      FuncCall:  (at None)
        ID: name='CC2420TinyosNetworkP__BareSend__default__sendDone' (at pp.c:19148)
        ExprList:  (at pp.c:19148)
          ID: name='msg' (at pp.c:19148)
          ID: name='error' (at pp.c:19148)
  FuncDef:  (at pp.c:19153)
    Decl: name='CC2420ActiveMessageP__AMSend__sendDone', quals=[], storage=['static', 'inline'] (at pp.c:19153)
      FuncDecl: quals=None (at pp.c:19153)
        ParamList:  (at pp.c:19153)
          Decl: name='arg_0x1025397d8', quals=[], storage=[] (at pp.c:19153)
            TypeDecl: declname='arg_0x1025397d8', quals=[] (at pp.c:19153)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:19153)
            PtrDecl: quals=[] (at pp.c:19153)
              TypeDecl: declname='msg', quals=[] (at pp.c:19153)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:19153)
            TypeDecl: declname='error', quals=[] (at pp.c:19153)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__AMSend__sendDone', quals=[] (at pp.c:19153)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19153)
      FuncCall:  (at None)
        ID: name='BaseStationP__RadioSend__sendDone' (at pp.c:19155)
        ExprList:  (at pp.c:19155)
          ID: name='arg_0x1025397d8' (at pp.c:19155)
          ID: name='msg' (at pp.c:19155)
          ID: name='error' (at pp.c:19155)
  FuncDef:  (at pp.c:19160)
    Decl: name='CC2420ActiveMessageP__RadioResource__release', quals=[], storage=['static', 'inline'] (at pp.c:19160)
      FuncDecl: quals=None (at pp.c:19160)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__RadioResource__release', quals=[] (at pp.c:19160)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19160)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19162)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19162)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19166)
        ID: name='__nesc_result' (at pp.c:19166)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__Resource__release' (at pp.c:19166)
          ExprList:  (at pp.c:19166)
            ID: name='CC2420ActiveMessageC__CC2420_AM_SEND_ID' (at pp.c:19166)
      Return:  (at pp.c:19170)
        ID: name='__nesc_result' (at pp.c:19170)
  FuncDef:  (at pp.c:19175)
    Decl: name='CC2420ActiveMessageP__SubSend__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:19175)
      FuncDecl: quals=None (at pp.c:19175)
        ParamList:  (at pp.c:19175)
          Decl: name='msg', quals=[], storage=[] (at pp.c:19175)
            PtrDecl: quals=[] (at pp.c:19175)
              TypeDecl: declname='msg', quals=[] (at pp.c:19175)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:19175)
            TypeDecl: declname='result', quals=[] (at pp.c:19175)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__SubSend__sendDone', quals=[] (at pp.c:19175)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19177)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__RadioResource__release' (at pp.c:19178)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__AMSend__sendDone' (at pp.c:19179)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='CC2420ActiveMessageP__AMPacket__type' (at pp.c:19179)
            ExprList:  (at pp.c:19179)
              ID: name='msg' (at pp.c:19179)
          ID: name='msg' (at pp.c:19179)
          ID: name='result' (at pp.c:19179)
  FuncDef:  (at pp.c:19183)
    Decl: name='CC2420TinyosNetworkP__ActiveSend__sendDone', quals=[], storage=['static', 'inline'] (at pp.c:19183)
      FuncDecl: quals=None (at pp.c:19183)
        ParamList:  (at pp.c:19183)
          Decl: name='msg', quals=[], storage=[] (at pp.c:19183)
            PtrDecl: quals=[] (at pp.c:19183)
              TypeDecl: declname='msg', quals=[] (at pp.c:19183)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:19183)
            TypeDecl: declname='error', quals=[] (at pp.c:19183)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__ActiveSend__sendDone', quals=[] (at pp.c:19183)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19183)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__SubSend__sendDone' (at pp.c:19185)
        ExprList:  (at pp.c:19185)
          ID: name='msg' (at pp.c:19185)
          ID: name='error' (at pp.c:19185)
  FuncDef:  (at pp.c:19190)
    Decl: name='CC2420TinyosNetworkP__SubSend__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:19190)
      FuncDecl: quals=None (at pp.c:19190)
        ParamList:  (at pp.c:19190)
          Decl: name='msg', quals=[], storage=[] (at pp.c:19190)
            PtrDecl: quals=[] (at pp.c:19190)
              TypeDecl: declname='msg', quals=[] (at pp.c:19190)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:19190)
            TypeDecl: declname='error', quals=[] (at pp.c:19190)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__SubSend__sendDone', quals=[] (at pp.c:19190)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19192)
      If:  (at pp.c:19193)
        BinaryOp: op='==' (at pp.c:19193)
          ID: name='CC2420TinyosNetworkP__m_busy_client' (at pp.c:19193)
          ID: name='CC2420TinyosNetworkP__CLIENT_AM' (at pp.c:19193)
        Compound:  (at pp.c:19193)
          FuncCall:  (at None)
            ID: name='CC2420TinyosNetworkP__ActiveSend__sendDone' (at pp.c:19194)
            ExprList:  (at pp.c:19194)
              ID: name='msg' (at pp.c:19194)
              ID: name='error' (at pp.c:19194)
        Compound:  (at pp.c:19198)
          FuncCall:  (at None)
            ID: name='CC2420TinyosNetworkP__BareSend__sendDone' (at pp.c:19199)
            ExprList:  (at pp.c:19199)
              ID: name='msg' (at pp.c:19199)
              ID: name='error' (at pp.c:19199)
  FuncDef:  (at pp.c:19204)
    Decl: name='UniqueSendP__Send__sendDone', quals=[], storage=['static', 'inline'] (at pp.c:19204)
      FuncDecl: quals=None (at pp.c:19204)
        ParamList:  (at pp.c:19204)
          Decl: name='msg', quals=[], storage=[] (at pp.c:19204)
            PtrDecl: quals=[] (at pp.c:19204)
              TypeDecl: declname='msg', quals=[] (at pp.c:19204)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:19204)
            TypeDecl: declname='error', quals=[] (at pp.c:19204)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='UniqueSendP__Send__sendDone', quals=[] (at pp.c:19204)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19204)
      FuncCall:  (at None)
        ID: name='CC2420TinyosNetworkP__SubSend__sendDone' (at pp.c:19206)
        ExprList:  (at pp.c:19206)
          ID: name='msg' (at pp.c:19206)
          ID: name='error' (at pp.c:19206)
  FuncDef:  (at pp.c:19211)
    Decl: name='UniqueSendP__SubSend__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:19211)
      FuncDecl: quals=None (at pp.c:19211)
        ParamList:  (at pp.c:19211)
          Decl: name='msg', quals=[], storage=[] (at pp.c:19211)
            PtrDecl: quals=[] (at pp.c:19211)
              TypeDecl: declname='msg', quals=[] (at pp.c:19211)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:19211)
            TypeDecl: declname='error', quals=[] (at pp.c:19211)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='UniqueSendP__SubSend__sendDone', quals=[] (at pp.c:19211)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19213)
      FuncCall:  (at None)
        ID: name='UniqueSendP__State__toIdle' (at pp.c:19214)
      FuncCall:  (at None)
        ID: name='UniqueSendP__Send__sendDone' (at pp.c:19215)
        ExprList:  (at pp.c:19215)
          ID: name='msg' (at pp.c:19215)
          ID: name='error' (at pp.c:19215)
  FuncDef:  (at pp.c:19219)
    Decl: name='CC2420CsmaP__Send__sendDone', quals=[], storage=['static', 'inline'] (at pp.c:19219)
      FuncDecl: quals=None (at pp.c:19219)
        ParamList:  (at pp.c:19219)
          Decl: name='msg', quals=[], storage=[] (at pp.c:19219)
            PtrDecl: quals=[] (at pp.c:19219)
              TypeDecl: declname='msg', quals=[] (at pp.c:19219)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:19219)
            TypeDecl: declname='error', quals=[] (at pp.c:19219)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__Send__sendDone', quals=[] (at pp.c:19219)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19219)
      FuncCall:  (at None)
        ID: name='UniqueSendP__SubSend__sendDone' (at pp.c:19221)
        ExprList:  (at pp.c:19221)
          ID: name='msg' (at pp.c:19221)
          ID: name='error' (at pp.c:19221)
  FuncDef:  (at pp.c:19226)
    Decl: name='CC2420CsmaP__stopDone_task__postTask', quals=[], storage=['static', 'inline'] (at pp.c:19226)
      FuncDecl: quals=None (at pp.c:19226)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__stopDone_task__postTask', quals=[] (at pp.c:19226)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19226)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19228)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19228)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19232)
        ID: name='__nesc_result' (at pp.c:19232)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:19232)
          ExprList:  (at pp.c:19232)
            ID: name='CC2420CsmaP__stopDone_task' (at pp.c:19232)
      Return:  (at pp.c:19236)
        ID: name='__nesc_result' (at pp.c:19236)
  FuncDef:  (at pp.c:19241)
    Decl: name='HplMsp430GeneralIOP__29__IO__clr', quals=[], storage=['inline', 'static'] (at pp.c:19241)
      FuncDecl: quals=None (at pp.c:19241)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__29__IO__clr', quals=[] (at pp.c:19241)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19243)
      Compound:  (at pp.c:19245)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:19245)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:19245)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:19245)
        Assignment: op='&=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:19247)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:19247)
          UnaryOp: op='~' (at pp.c:19247)
            BinaryOp: op='<<' (at pp.c:19247)
              Constant: type='int', value='0x01' (at pp.c:19247)
              Constant: type='int', value='5' (at pp.c:19247)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:19249)
          ExprList:  (at pp.c:19249)
            ID: name='__nesc_atomic' (at pp.c:19249)
  FuncDef:  (at pp.c:19253)
    Decl: name='Msp430GpioC__9__HplGeneralIO__clr', quals=[], storage=['static', 'inline'] (at pp.c:19253)
      FuncDecl: quals=None (at pp.c:19253)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__9__HplGeneralIO__clr', quals=[] (at pp.c:19253)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19253)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__29__IO__clr' (at pp.c:19255)
  FuncDef:  (at pp.c:19260)
    Decl: name='Msp430GpioC__9__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:19260)
      FuncDecl: quals=None (at pp.c:19260)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__9__GeneralIO__clr', quals=[] (at pp.c:19260)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19262)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__9__HplGeneralIO__clr' (at pp.c:19264)
  FuncDef:  (at pp.c:19268)
    Decl: name='CC2420ControlP__VREN__clr', quals=[], storage=['static', 'inline'] (at pp.c:19268)
      FuncDecl: quals=None (at pp.c:19268)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__VREN__clr', quals=[] (at pp.c:19268)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19268)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__9__GeneralIO__clr' (at pp.c:19270)
  FuncDef:  (at pp.c:19275)
    Decl: name='CC2420ControlP__CC2420Power__stopVReg', quals=[], storage=['inline', 'static'] (at pp.c:19275)
      FuncDecl: quals=None (at pp.c:19275)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Power__stopVReg', quals=[] (at pp.c:19275)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19277)
      Assignment: op='=' (at pp.c:19278)
        ID: name='CC2420ControlP__m_state' (at pp.c:19278)
        ID: name='CC2420ControlP__S_VREG_STOPPED' (at pp.c:19278)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__RSTN__clr' (at pp.c:19279)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__VREN__clr' (at pp.c:19280)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__RSTN__set' (at pp.c:19281)
      Return:  (at pp.c:19282)
        ID: name='SUCCESS' (at pp.c:19282)
  FuncDef:  (at pp.c:19286)
    Decl: name='CC2420CsmaP__CC2420Power__stopVReg', quals=[], storage=['static', 'inline'] (at pp.c:19286)
      FuncDecl: quals=None (at pp.c:19286)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__CC2420Power__stopVReg', quals=[] (at pp.c:19286)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19286)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19288)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19288)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19292)
        ID: name='__nesc_result' (at pp.c:19292)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__CC2420Power__stopVReg' (at pp.c:19292)
      Return:  (at pp.c:19296)
        ID: name='__nesc_result' (at pp.c:19296)
  FuncDef:  (at pp.c:19301)
    Decl: name='ecombine', quals=[], storage=['inline', 'static'] (at pp.c:19301)
      FuncDecl: quals=None (at pp.c:19301)
        ParamList:  (at pp.c:19301)
          Decl: name='r1', quals=[], storage=[] (at pp.c:19301)
            TypeDecl: declname='r1', quals=[] (at pp.c:19301)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='r2', quals=[], storage=[] (at pp.c:19301)
            TypeDecl: declname='r2', quals=[] (at pp.c:19301)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='ecombine', quals=[] (at pp.c:19301)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19306)
      Return:  (at pp.c:19307)
        TernaryOp:  (at pp.c:19307)
          BinaryOp: op='==' (at pp.c:19307)
            ID: name='r1' (at pp.c:19307)
            ID: name='r2' (at pp.c:19307)
          ID: name='r1' (at pp.c:19307)
          ID: name='FAIL' (at pp.c:19307)
  FuncDef:  (at pp.c:19311)
    Decl: name='HplMsp430InterruptP__Port10__clear', quals=[], storage=['inline', 'static'] (at pp.c:19311)
      FuncDecl: quals=None (at pp.c:19311)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port10__clear', quals=[] (at pp.c:19311)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19313)
      Assignment: op='&=' (at pp.c:19315)
        ID: name='P1IFG' (at pp.c:19315)
        UnaryOp: op='~' (at pp.c:19315)
          BinaryOp: op='<<' (at pp.c:19315)
            Constant: type='int', value='1' (at pp.c:19315)
            Constant: type='int', value='0' (at pp.c:19315)
  FuncDef:  (at pp.c:19319)
    Decl: name='Msp430InterruptC__1__HplInterrupt__clear', quals=[], storage=['static', 'inline'] (at pp.c:19319)
      FuncDecl: quals=None (at pp.c:19319)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__clear', quals=[] (at pp.c:19319)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19319)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port10__clear' (at pp.c:19321)
  FuncDef:  (at pp.c:19326)
    Decl: name='HplMsp430InterruptP__Port10__disable', quals=[], storage=['inline', 'static'] (at pp.c:19326)
      FuncDecl: quals=None (at pp.c:19326)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port10__disable', quals=[] (at pp.c:19326)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19328)
      Assignment: op='&=' (at pp.c:19330)
        ID: name='P1IE' (at pp.c:19330)
        UnaryOp: op='~' (at pp.c:19330)
          BinaryOp: op='<<' (at pp.c:19330)
            Constant: type='int', value='1' (at pp.c:19330)
            Constant: type='int', value='0' (at pp.c:19330)
  FuncDef:  (at pp.c:19334)
    Decl: name='Msp430InterruptC__1__HplInterrupt__disable', quals=[], storage=['static', 'inline'] (at pp.c:19334)
      FuncDecl: quals=None (at pp.c:19334)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__disable', quals=[] (at pp.c:19334)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19334)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port10__disable' (at pp.c:19336)
  FuncDef:  (at pp.c:19341)
    Decl: name='Msp430InterruptC__1__Interrupt__disable', quals=[], storage=['inline', 'static'] (at pp.c:19341)
      FuncDecl: quals=None (at pp.c:19341)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__1__Interrupt__disable', quals=[] (at pp.c:19341)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19343)
      Compound:  (at pp.c:19346)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__1__HplInterrupt__disable' (at pp.c:19347)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__1__HplInterrupt__clear' (at pp.c:19348)
      Return:  (at pp.c:19350)
        ID: name='SUCCESS' (at pp.c:19350)
  FuncDef:  (at pp.c:19354)
    Decl: name='CC2420ReceiveP__InterruptFIFOP__disable', quals=[], storage=['static', 'inline'] (at pp.c:19354)
      FuncDecl: quals=None (at pp.c:19354)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__InterruptFIFOP__disable', quals=[] (at pp.c:19354)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19354)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19356)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19356)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19360)
        ID: name='__nesc_result' (at pp.c:19360)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__1__Interrupt__disable' (at pp.c:19360)
      Return:  (at pp.c:19364)
        ID: name='__nesc_result' (at pp.c:19364)
  FuncDef:  (at pp.c:19369)
    Decl: name='CC2420ReceiveP__StdControl__stop', quals=[], storage=['inline', 'static'] (at pp.c:19369)
      FuncDecl: quals=None (at pp.c:19369)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__StdControl__stop', quals=[] (at pp.c:19369)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19371)
      Compound:  (at pp.c:19372)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:19372)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:19372)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:19372)
        Compound:  (at pp.c:19374)
          Assignment: op='=' (at pp.c:19375)
            ID: name='CC2420ReceiveP__m_state' (at pp.c:19375)
            ID: name='CC2420ReceiveP__S_STOPPED' (at pp.c:19375)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__reset_state' (at pp.c:19376)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__CSN__set' (at pp.c:19377)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__InterruptFIFOP__disable' (at pp.c:19378)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:19381)
          ExprList:  (at pp.c:19381)
            ID: name='__nesc_atomic' (at pp.c:19381)
      Return:  (at pp.c:19382)
        ID: name='SUCCESS' (at pp.c:19382)
  FuncDef:  (at pp.c:19386)
    Decl: name='HplMsp430GeneralIOP__25__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:19386)
      FuncDecl: quals=None (at pp.c:19386)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__25__IO__selectIOFunc', quals=[] (at pp.c:19386)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19388)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:19391)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='31U' (at pp.c:19391)
        UnaryOp: op='~' (at pp.c:19391)
          BinaryOp: op='<<' (at pp.c:19391)
            Constant: type='int', value='0x01' (at pp.c:19391)
            Constant: type='int', value='1' (at pp.c:19391)
  FuncDef:  (at pp.c:19395)
    Decl: name='GpioCaptureC__0__GeneralIO__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:19395)
      FuncDecl: quals=None (at pp.c:19395)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='GpioCaptureC__0__GeneralIO__selectIOFunc', quals=[] (at pp.c:19395)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19395)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__25__IO__selectIOFunc' (at pp.c:19397)
  FuncDef:  (at pp.c:19402)
    Decl: name='Msp430TimerCapComP__4__Control__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:19402)
      FuncDecl: quals=None (at pp.c:19402)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Control__disableEvents', quals=[] (at pp.c:19402)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19403)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:19404)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='388U' (at pp.c:19404)
        UnaryOp: op='~' (at pp.c:19404)
          Constant: type='int', value='0x0010' (at pp.c:19404)
  FuncDef:  (at pp.c:19408)
    Decl: name='GpioCaptureC__0__Msp430TimerControl__disableEvents', quals=[], storage=['static', 'inline'] (at pp.c:19408)
      FuncDecl: quals=None (at pp.c:19408)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='GpioCaptureC__0__Msp430TimerControl__disableEvents', quals=[] (at pp.c:19408)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19408)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__4__Control__disableEvents' (at pp.c:19410)
  FuncDef:  (at pp.c:19415)
    Decl: name='GpioCaptureC__0__Capture__disable', quals=[], storage=['inline', 'static'] (at pp.c:19415)
      FuncDecl: quals=None (at pp.c:19415)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='GpioCaptureC__0__Capture__disable', quals=[] (at pp.c:19415)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19417)
      Compound:  (at pp.c:19420)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__Msp430TimerControl__disableEvents' (at pp.c:19421)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__GeneralIO__selectIOFunc' (at pp.c:19422)
  FuncDef:  (at pp.c:19427)
    Decl: name='CC2420TransmitP__CaptureSFD__disable', quals=[], storage=['static', 'inline'] (at pp.c:19427)
      FuncDecl: quals=None (at pp.c:19427)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__CaptureSFD__disable', quals=[] (at pp.c:19427)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19427)
      FuncCall:  (at None)
        ID: name='GpioCaptureC__0__Capture__disable' (at pp.c:19429)
  FuncDef:  (at pp.c:19434)
    Decl: name='CC2420TransmitP__StdControl__stop', quals=[], storage=['inline', 'static'] (at pp.c:19434)
      FuncDecl: quals=None (at pp.c:19434)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__StdControl__stop', quals=[] (at pp.c:19434)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19436)
      Compound:  (at pp.c:19437)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:19437)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:19437)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:19437)
        Compound:  (at pp.c:19439)
          Assignment: op='=' (at pp.c:19440)
            ID: name='CC2420TransmitP__m_state' (at pp.c:19440)
            ID: name='CC2420TransmitP__S_STOPPED' (at pp.c:19440)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__BackoffTimer__stop' (at pp.c:19441)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__CaptureSFD__disable' (at pp.c:19442)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__SpiResource__release' (at pp.c:19443)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__CSN__set' (at pp.c:19444)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:19447)
          ExprList:  (at pp.c:19447)
            ID: name='__nesc_atomic' (at pp.c:19447)
      Return:  (at pp.c:19448)
        ID: name='SUCCESS' (at pp.c:19448)
  FuncDef:  (at pp.c:19452)
    Decl: name='CC2420CsmaP__SubControl__stop', quals=[], storage=['static', 'inline'] (at pp.c:19452)
      FuncDecl: quals=None (at pp.c:19452)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__SubControl__stop', quals=[] (at pp.c:19452)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19452)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19454)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19454)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19458)
        ID: name='__nesc_result' (at pp.c:19458)
        FuncCall:  (at None)
          ID: name='CC2420TransmitP__StdControl__stop' (at pp.c:19458)
      Assignment: op='=' (at pp.c:19460)
        ID: name='__nesc_result' (at pp.c:19460)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:19460)
          ExprList:  (at pp.c:19460)
            ID: name='__nesc_result' (at pp.c:19460)
            FuncCall:  (at None)
              ID: name='CC2420ReceiveP__StdControl__stop' (at pp.c:19460)
      Return:  (at pp.c:19464)
        ID: name='__nesc_result' (at pp.c:19464)
  FuncDef:  (at pp.c:19469)
    Decl: name='CC2420CsmaP__shutdown', quals=[], storage=['inline', 'static'] (at pp.c:19469)
      FuncDecl: quals=None (at pp.c:19469)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__shutdown', quals=[] (at pp.c:19469)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19471)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__SubControl__stop' (at pp.c:19472)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__CC2420Power__stopVReg' (at pp.c:19473)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__stopDone_task__postTask' (at pp.c:19474)
  FuncDef:  (at pp.c:19478)
    Decl: name='CC2420CsmaP__sendDone_task__runTask', quals=[], storage=['inline', 'static'] (at pp.c:19478)
      FuncDecl: quals=None (at pp.c:19478)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__sendDone_task__runTask', quals=[] (at pp.c:19478)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19480)
      Decl: name='packetErr', quals=[], storage=[] (at pp.c:19481)
        TypeDecl: declname='packetErr', quals=[] (at pp.c:19481)
          IdentifierType: names=['error_t'] (at None)
      Compound:  (at pp.c:19484)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:19484)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:19484)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:19484)
        Assignment: op='=' (at pp.c:19486)
          ID: name='packetErr' (at pp.c:19486)
          ID: name='CC2420CsmaP__sendErr' (at pp.c:19486)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:19488)
          ExprList:  (at pp.c:19488)
            ID: name='__nesc_atomic' (at pp.c:19488)
      If:  (at pp.c:19489)
        FuncCall:  (at None)
          ID: name='CC2420CsmaP__SplitControlState__isState' (at pp.c:19489)
          ExprList:  (at pp.c:19489)
            ID: name='CC2420CsmaP__S_STOPPING' (at pp.c:19489)
        Compound:  (at pp.c:19489)
          FuncCall:  (at None)
            ID: name='CC2420CsmaP__shutdown' (at pp.c:19490)
        Compound:  (at pp.c:19492)
          FuncCall:  (at None)
            ID: name='CC2420CsmaP__SplitControlState__forceState' (at pp.c:19493)
            ExprList:  (at pp.c:19493)
              ID: name='CC2420CsmaP__S_STARTED' (at pp.c:19493)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__Send__sendDone' (at pp.c:19496)
        ExprList:  (at pp.c:19496)
          ID: name='CC2420CsmaP__m_msg' (at pp.c:19496)
          ID: name='packetErr' (at pp.c:19496)
  FuncDef:  (at pp.c:19500)
    Decl: name='BaseStationP__RadioControl__stopDone', quals=[], storage=['inline', 'static'] (at pp.c:19500)
      FuncDecl: quals=None (at pp.c:19500)
        ParamList:  (at pp.c:19500)
          Decl: name='error', quals=[], storage=[] (at pp.c:19500)
            TypeDecl: declname='error', quals=[] (at pp.c:19500)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='BaseStationP__RadioControl__stopDone', quals=[] (at pp.c:19500)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19502)
  FuncDef:  (at pp.c:19506)
    Decl: name='CC2420CsmaP__SplitControl__stopDone', quals=[], storage=['static', 'inline'] (at pp.c:19506)
      FuncDecl: quals=None (at pp.c:19506)
        ParamList:  (at pp.c:19506)
          Decl: name='error', quals=[], storage=[] (at pp.c:19506)
            TypeDecl: declname='error', quals=[] (at pp.c:19506)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__SplitControl__stopDone', quals=[] (at pp.c:19506)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19506)
      FuncCall:  (at None)
        ID: name='BaseStationP__RadioControl__stopDone' (at pp.c:19508)
        ExprList:  (at pp.c:19508)
          ID: name='error' (at pp.c:19508)
  FuncDef:  (at pp.c:19513)
    Decl: name='CC2420CsmaP__stopDone_task__runTask', quals=[], storage=['inline', 'static'] (at pp.c:19513)
      FuncDecl: quals=None (at pp.c:19513)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__stopDone_task__runTask', quals=[] (at pp.c:19513)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19515)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__SplitControlState__forceState' (at pp.c:19516)
        ExprList:  (at pp.c:19516)
          ID: name='CC2420CsmaP__S_STOPPED' (at pp.c:19516)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__SplitControl__stopDone' (at pp.c:19517)
        ExprList:  (at pp.c:19517)
          ID: name='SUCCESS' (at pp.c:19517)
  FuncDef:  (at pp.c:19521)
    Decl: name='BaseStationP__RadioControl__startDone', quals=[], storage=['inline', 'static'] (at pp.c:19521)
      FuncDecl: quals=None (at pp.c:19521)
        ParamList:  (at pp.c:19521)
          Decl: name='error', quals=[], storage=[] (at pp.c:19521)
            TypeDecl: declname='error', quals=[] (at pp.c:19521)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='BaseStationP__RadioControl__startDone', quals=[] (at pp.c:19521)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19523)
      If:  (at pp.c:19524)
        BinaryOp: op='==' (at pp.c:19524)
          ID: name='error' (at pp.c:19524)
          ID: name='SUCCESS' (at pp.c:19524)
        Compound:  (at pp.c:19524)
          Assignment: op='=' (at pp.c:19525)
            ID: name='BaseStationP__radioFull' (at pp.c:19525)
            ID: name='FALSE' (at pp.c:19525)
  FuncDef:  (at pp.c:19530)
    Decl: name='CC2420CsmaP__SplitControl__startDone', quals=[], storage=['static', 'inline'] (at pp.c:19530)
      FuncDecl: quals=None (at pp.c:19530)
        ParamList:  (at pp.c:19530)
          Decl: name='error', quals=[], storage=[] (at pp.c:19530)
            TypeDecl: declname='error', quals=[] (at pp.c:19530)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__SplitControl__startDone', quals=[] (at pp.c:19530)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19530)
      FuncCall:  (at None)
        ID: name='BaseStationP__RadioControl__startDone' (at pp.c:19532)
        ExprList:  (at pp.c:19532)
          ID: name='error' (at pp.c:19532)
  FuncDef:  (at pp.c:19537)
    Decl: name='CC2420ControlP__SpiResource__release', quals=[], storage=['static', 'inline'] (at pp.c:19537)
      FuncDecl: quals=None (at pp.c:19537)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__SpiResource__release', quals=[] (at pp.c:19537)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19537)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19539)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19539)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19543)
        ID: name='__nesc_result' (at pp.c:19543)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__release' (at pp.c:19543)
          ExprList:  (at pp.c:19543)
            ID: name='CC2420SpiC__0__CLIENT_ID' (at pp.c:19543)
      Return:  (at pp.c:19547)
        ID: name='__nesc_result' (at pp.c:19547)
  FuncDef:  (at pp.c:19552)
    Decl: name='CC2420ControlP__Resource__release', quals=[], storage=['inline', 'static'] (at pp.c:19552)
      FuncDecl: quals=None (at pp.c:19552)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__Resource__release', quals=[] (at pp.c:19552)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19554)
      Compound:  (at pp.c:19555)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:19555)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:19555)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:19555)
        Compound:  (at pp.c:19557)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__CSN__set' (at pp.c:19558)
          Compound:  (at pp.c:19559)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:19560)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:19560)
                IdentifierType: names=['char', 'unsigned'] (at None)
              FuncCall:  (at None)
                ID: name='CC2420ControlP__SpiResource__release' (at pp.c:19562)
            Compound:  (at pp.c:19564)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_end' (at pp.c:19566)
                ExprList:  (at pp.c:19566)
                  ID: name='__nesc_atomic' (at pp.c:19566)
              Return:  (at pp.c:19568)
                ID: name='__nesc_temp' (at pp.c:19568)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:19573)
          ExprList:  (at pp.c:19573)
            ID: name='__nesc_atomic' (at pp.c:19573)
  FuncDef:  (at pp.c:19577)
    Decl: name='CC2420CsmaP__Resource__release', quals=[], storage=['static', 'inline'] (at pp.c:19577)
      FuncDecl: quals=None (at pp.c:19577)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__Resource__release', quals=[] (at pp.c:19577)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19577)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19579)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19579)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19583)
        ID: name='__nesc_result' (at pp.c:19583)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__Resource__release' (at pp.c:19583)
      Return:  (at pp.c:19587)
        ID: name='__nesc_result' (at pp.c:19587)
  FuncDef:  (at pp.c:19592)
    Decl: name='CC2420ControlP__CC2420Power__rxOn', quals=[], storage=['inline', 'static'] (at pp.c:19592)
      FuncDecl: quals=None (at pp.c:19592)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Power__rxOn', quals=[] (at pp.c:19592)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19594)
      Compound:  (at pp.c:19595)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:19595)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:19595)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:19595)
        Compound:  (at pp.c:19597)
          If:  (at pp.c:19598)
            BinaryOp: op='!=' (at pp.c:19598)
              ID: name='CC2420ControlP__m_state' (at pp.c:19598)
              ID: name='CC2420ControlP__S_XOSC_STARTED' (at pp.c:19598)
            Compound:  (at pp.c:19598)
              Compound:  (at pp.c:19599)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:19600)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:19600)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='FAIL' (at pp.c:19602)
                Compound:  (at pp.c:19604)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:19606)
                    ExprList:  (at pp.c:19606)
                      ID: name='__nesc_atomic' (at pp.c:19606)
                  Return:  (at pp.c:19608)
                    ID: name='__nesc_temp' (at pp.c:19608)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__SRXON__strobe' (at pp.c:19613)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:19616)
          ExprList:  (at pp.c:19616)
            ID: name='__nesc_atomic' (at pp.c:19616)
      Return:  (at pp.c:19617)
        ID: name='SUCCESS' (at pp.c:19617)
  FuncDef:  (at pp.c:19621)
    Decl: name='CC2420CsmaP__CC2420Power__rxOn', quals=[], storage=['static', 'inline'] (at pp.c:19621)
      FuncDecl: quals=None (at pp.c:19621)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__CC2420Power__rxOn', quals=[] (at pp.c:19621)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19621)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19623)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19623)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19627)
        ID: name='__nesc_result' (at pp.c:19627)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__CC2420Power__rxOn' (at pp.c:19627)
      Return:  (at pp.c:19631)
        ID: name='__nesc_result' (at pp.c:19631)
  FuncDef:  (at pp.c:19636)
    Decl: name='HplMsp430InterruptP__Port10__enable', quals=[], storage=['inline', 'static'] (at pp.c:19636)
      FuncDecl: quals=None (at pp.c:19636)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port10__enable', quals=[] (at pp.c:19636)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19638)
      Assignment: op='|=' (at pp.c:19640)
        ID: name='P1IE' (at pp.c:19640)
        BinaryOp: op='<<' (at pp.c:19640)
          Constant: type='int', value='1' (at pp.c:19640)
          Constant: type='int', value='0' (at pp.c:19640)
  FuncDef:  (at pp.c:19644)
    Decl: name='Msp430InterruptC__1__HplInterrupt__enable', quals=[], storage=['static', 'inline'] (at pp.c:19644)
      FuncDecl: quals=None (at pp.c:19644)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__enable', quals=[] (at pp.c:19644)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19644)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port10__enable' (at pp.c:19646)
  FuncDef:  (at pp.c:19651)
    Decl: name='HplMsp430InterruptP__Port10__edge', quals=[], storage=['inline', 'static'] (at pp.c:19651)
      FuncDecl: quals=None (at pp.c:19651)
        ParamList:  (at pp.c:19651)
          Decl: name='l2h', quals=[], storage=[] (at pp.c:19651)
            TypeDecl: declname='l2h', quals=[] (at pp.c:19651)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port10__edge', quals=[] (at pp.c:19651)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19653)
      Compound:  (at pp.c:19656)
        If:  (at pp.c:19657)
          ID: name='l2h' (at pp.c:19657)
          Compound:  (at pp.c:19657)
            Assignment: op='&=' (at pp.c:19659)
              ID: name='P1IES' (at pp.c:19659)
              UnaryOp: op='~' (at pp.c:19659)
                BinaryOp: op='<<' (at pp.c:19659)
                  Constant: type='int', value='1' (at pp.c:19659)
                  Constant: type='int', value='0' (at pp.c:19659)
          Compound:  (at pp.c:19661)
            Assignment: op='|=' (at pp.c:19663)
              ID: name='P1IES' (at pp.c:19663)
              BinaryOp: op='<<' (at pp.c:19663)
                Constant: type='int', value='1' (at pp.c:19663)
                Constant: type='int', value='0' (at pp.c:19663)
  FuncDef:  (at pp.c:19669)
    Decl: name='Msp430InterruptC__1__HplInterrupt__edge', quals=[], storage=['static', 'inline'] (at pp.c:19669)
      FuncDecl: quals=None (at pp.c:19669)
        ParamList:  (at pp.c:19669)
          Decl: name='low_to_high', quals=[], storage=[] (at pp.c:19669)
            TypeDecl: declname='low_to_high', quals=[] (at pp.c:19669)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__edge', quals=[] (at pp.c:19669)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19669)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port10__edge' (at pp.c:19671)
        ExprList:  (at pp.c:19671)
          ID: name='low_to_high' (at pp.c:19671)
  FuncDef:  (at pp.c:19676)
    Decl: name='Msp430InterruptC__1__enable', quals=[], storage=['inline', 'static'] (at pp.c:19676)
      FuncDecl: quals=None (at pp.c:19676)
        ParamList:  (at pp.c:19676)
          Decl: name='rising', quals=[], storage=[] (at pp.c:19676)
            TypeDecl: declname='rising', quals=[] (at pp.c:19676)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='Msp430InterruptC__1__enable', quals=[] (at pp.c:19676)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19678)
      Compound:  (at pp.c:19681)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__1__Interrupt__disable' (at pp.c:19682)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__1__HplInterrupt__edge' (at pp.c:19683)
          ExprList:  (at pp.c:19683)
            ID: name='rising' (at pp.c:19683)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__1__HplInterrupt__enable' (at pp.c:19684)
      Return:  (at pp.c:19686)
        ID: name='SUCCESS' (at pp.c:19686)
  FuncDef:  (at pp.c:19693)
    Decl: name='Msp430InterruptC__1__Interrupt__enableFallingEdge', quals=[], storage=['inline', 'static'] (at pp.c:19693)
      FuncDecl: quals=None (at pp.c:19693)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__1__Interrupt__enableFallingEdge', quals=[] (at pp.c:19693)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19695)
      Return:  (at pp.c:19696)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__1__enable' (at pp.c:19696)
          ExprList:  (at pp.c:19696)
            ID: name='FALSE' (at pp.c:19696)
  FuncDef:  (at pp.c:19700)
    Decl: name='CC2420ReceiveP__InterruptFIFOP__enableFallingEdge', quals=[], storage=['static', 'inline'] (at pp.c:19700)
      FuncDecl: quals=None (at pp.c:19700)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__InterruptFIFOP__enableFallingEdge', quals=[] (at pp.c:19700)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19700)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19702)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19702)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19706)
        ID: name='__nesc_result' (at pp.c:19706)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__1__Interrupt__enableFallingEdge' (at pp.c:19706)
      Return:  (at pp.c:19710)
        ID: name='__nesc_result' (at pp.c:19710)
  FuncDef:  (at pp.c:19715)
    Decl: name='CC2420ReceiveP__StdControl__start', quals=[], storage=['inline', 'static'] (at pp.c:19715)
      FuncDecl: quals=None (at pp.c:19715)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__StdControl__start', quals=[] (at pp.c:19715)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19717)
      Compound:  (at pp.c:19718)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:19718)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:19718)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:19718)
        Compound:  (at pp.c:19720)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__reset_state' (at pp.c:19721)
          Assignment: op='=' (at pp.c:19722)
            ID: name='CC2420ReceiveP__m_state' (at pp.c:19722)
            ID: name='CC2420ReceiveP__S_STARTED' (at pp.c:19722)
          Assignment: op='=' (at pp.c:19723)
            ID: name='CC2420ReceiveP__receivingPacket' (at pp.c:19723)
            ID: name='FALSE' (at pp.c:19723)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__InterruptFIFOP__enableFallingEdge' (at pp.c:19728)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:19731)
          ExprList:  (at pp.c:19731)
            ID: name='__nesc_atomic' (at pp.c:19731)
      Return:  (at pp.c:19732)
        ID: name='SUCCESS' (at pp.c:19732)
  FuncDef:  (at pp.c:19736)
    Decl: name='CC2420TransmitP__StdControl__start', quals=[], storage=['inline', 'static'] (at pp.c:19736)
      FuncDecl: quals=None (at pp.c:19736)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__StdControl__start', quals=[] (at pp.c:19736)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19738)
      Compound:  (at pp.c:19739)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:19739)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:19739)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:19739)
        Compound:  (at pp.c:19741)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__CaptureSFD__captureRisingEdge' (at pp.c:19742)
          Assignment: op='=' (at pp.c:19743)
            ID: name='CC2420TransmitP__m_state' (at pp.c:19743)
            ID: name='CC2420TransmitP__S_STARTED' (at pp.c:19743)
          Assignment: op='=' (at pp.c:19744)
            ID: name='CC2420TransmitP__m_receiving' (at pp.c:19744)
            ID: name='FALSE' (at pp.c:19744)
          Assignment: op='=' (at pp.c:19745)
            ID: name='CC2420TransmitP__abortSpiRelease' (at pp.c:19745)
            ID: name='FALSE' (at pp.c:19745)
          Assignment: op='=' (at pp.c:19746)
            ID: name='CC2420TransmitP__m_tx_power' (at pp.c:19746)
            Constant: type='int', value='0' (at pp.c:19746)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:19749)
          ExprList:  (at pp.c:19749)
            ID: name='__nesc_atomic' (at pp.c:19749)
      Return:  (at pp.c:19750)
        ID: name='SUCCESS' (at pp.c:19750)
  FuncDef:  (at pp.c:19754)
    Decl: name='CC2420CsmaP__SubControl__start', quals=[], storage=['static', 'inline'] (at pp.c:19754)
      FuncDecl: quals=None (at pp.c:19754)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__SubControl__start', quals=[] (at pp.c:19754)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19754)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19756)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19756)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19760)
        ID: name='__nesc_result' (at pp.c:19760)
        FuncCall:  (at None)
          ID: name='CC2420TransmitP__StdControl__start' (at pp.c:19760)
      Assignment: op='=' (at pp.c:19762)
        ID: name='__nesc_result' (at pp.c:19762)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:19762)
          ExprList:  (at pp.c:19762)
            ID: name='__nesc_result' (at pp.c:19762)
            FuncCall:  (at None)
              ID: name='CC2420ReceiveP__StdControl__start' (at pp.c:19762)
      Return:  (at pp.c:19766)
        ID: name='__nesc_result' (at pp.c:19766)
  FuncDef:  (at pp.c:19771)
    Decl: name='CC2420CsmaP__startDone_task__runTask', quals=[], storage=['inline', 'static'] (at pp.c:19771)
      FuncDecl: quals=None (at pp.c:19771)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__startDone_task__runTask', quals=[] (at pp.c:19771)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19773)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__SubControl__start' (at pp.c:19774)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__CC2420Power__rxOn' (at pp.c:19775)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__Resource__release' (at pp.c:19776)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__SplitControlState__forceState' (at pp.c:19777)
        ExprList:  (at pp.c:19777)
          ID: name='CC2420CsmaP__S_STARTED' (at pp.c:19777)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__SplitControl__startDone' (at pp.c:19778)
        ExprList:  (at pp.c:19778)
          ID: name='SUCCESS' (at pp.c:19778)
  FuncDef:  (at pp.c:19782)
    Decl: name='HplMsp430GeneralIOP__24__IO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:19782)
      FuncDecl: quals=None (at pp.c:19782)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__24__IO__toggle', quals=[] (at pp.c:19782)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19784)
      Compound:  (at pp.c:19786)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:19786)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:19786)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:19786)
        Assignment: op='^=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:19788)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:19788)
          BinaryOp: op='<<' (at pp.c:19788)
            Constant: type='int', value='0x01' (at pp.c:19788)
            Constant: type='int', value='0' (at pp.c:19788)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:19790)
          ExprList:  (at pp.c:19790)
            ID: name='__nesc_atomic' (at pp.c:19790)
  FuncDef:  (at pp.c:19794)
    Decl: name='Msp430GpioC__0__HplGeneralIO__toggle', quals=[], storage=['static', 'inline'] (at pp.c:19794)
      FuncDecl: quals=None (at pp.c:19794)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__toggle', quals=[] (at pp.c:19794)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19794)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__24__IO__toggle' (at pp.c:19796)
  FuncDef:  (at pp.c:19801)
    Decl: name='Msp430GpioC__0__GeneralIO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:19801)
      FuncDecl: quals=None (at pp.c:19801)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__GeneralIO__toggle', quals=[] (at pp.c:19801)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19803)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__0__HplGeneralIO__toggle' (at pp.c:19805)
  FuncDef:  (at pp.c:19809)
    Decl: name='LedsP__Led0__toggle', quals=[], storage=['static', 'inline'] (at pp.c:19809)
      FuncDecl: quals=None (at pp.c:19809)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led0__toggle', quals=[] (at pp.c:19809)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19809)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__0__GeneralIO__toggle' (at pp.c:19811)
  FuncDef:  (at pp.c:19816)
    Decl: name='LedsP__Leds__led0Toggle', quals=[], storage=['inline', 'static'] (at pp.c:19816)
      FuncDecl: quals=None (at pp.c:19816)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Leds__led0Toggle', quals=[] (at pp.c:19816)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19818)
      FuncCall:  (at None)
        ID: name='LedsP__Led0__toggle' (at pp.c:19819)
  FuncDef:  (at pp.c:19826)
    Decl: name='BaseStationP__Leds__led0Toggle', quals=[], storage=['static', 'inline'] (at pp.c:19826)
      FuncDecl: quals=None (at pp.c:19826)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BaseStationP__Leds__led0Toggle', quals=[] (at pp.c:19826)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19826)
      FuncCall:  (at None)
        ID: name='LedsP__Leds__led0Toggle' (at pp.c:19828)
  FuncDef:  (at pp.c:19833)
    Decl: name='FcfsResourceQueueC__0__FcfsQueue__isEnqueued', quals=[], storage=['inline', 'static'] (at pp.c:19833)
      FuncDecl: quals=None (at pp.c:19833)
        ParamList:  (at pp.c:19833)
          Decl: name='id', quals=[], storage=[] (at pp.c:19833)
            TypeDecl: declname='id', quals=[] (at pp.c:19833)
              IdentifierType: names=['resource_client_id_t'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__isEnqueued', quals=[] (at pp.c:19833)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:19835)
      Compound:  (at pp.c:19838)
        Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:19839)
          TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:19839)
            IdentifierType: names=['char', 'unsigned'] (at None)
          BinaryOp: op='||' (at pp.c:19841)
            BinaryOp: op='!=' (at pp.c:19841)
              ArrayRef:  (at pp.c:19841)
                ID: name='FcfsResourceQueueC__0__resQ' (at pp.c:19841)
                ID: name='id' (at pp.c:19841)
              ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:19841)
            BinaryOp: op='==' (at pp.c:19841)
              ID: name='FcfsResourceQueueC__0__qTail' (at pp.c:19841)
              ID: name='id' (at pp.c:19841)
        Return:  (at pp.c:19844)
          ID: name='__nesc_temp' (at pp.c:19844)
  FuncDef:  (at pp.c:19849)
    Decl: name='FcfsResourceQueueC__0__FcfsQueue__enqueue', quals=[], storage=['inline', 'static'] (at pp.c:19849)
      FuncDecl: quals=None (at pp.c:19849)
        ParamList:  (at pp.c:19849)
          Decl: name='id', quals=[], storage=[] (at pp.c:19849)
            TypeDecl: declname='id', quals=[] (at pp.c:19849)
              IdentifierType: names=['resource_client_id_t'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__enqueue', quals=[] (at pp.c:19849)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19851)
      Compound:  (at pp.c:19852)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:19852)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:19852)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:19852)
        Compound:  (at pp.c:19854)
          If:  (at pp.c:19855)
            UnaryOp: op='!' (at None)
              FuncCall:  (at None)
                ID: name='FcfsResourceQueueC__0__FcfsQueue__isEnqueued' (at pp.c:19855)
                ExprList:  (at pp.c:19855)
                  ID: name='id' (at pp.c:19855)
            Compound:  (at pp.c:19855)
              If:  (at pp.c:19856)
                BinaryOp: op='==' (at pp.c:19856)
                  ID: name='FcfsResourceQueueC__0__qHead' (at pp.c:19856)
                  ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:19856)
                Compound:  (at pp.c:19856)
                  Assignment: op='=' (at pp.c:19857)
                    ID: name='FcfsResourceQueueC__0__qHead' (at pp.c:19857)
                    ID: name='id' (at pp.c:19857)
                Compound:  (at pp.c:19859)
                  Assignment: op='=' (at pp.c:19861)
                    ArrayRef:  (at pp.c:19861)
                      ID: name='FcfsResourceQueueC__0__resQ' (at pp.c:19861)
                      ID: name='FcfsResourceQueueC__0__qTail' (at pp.c:19861)
                    ID: name='id' (at pp.c:19861)
              Assignment: op='=' (at pp.c:19864)
                ID: name='FcfsResourceQueueC__0__qTail' (at pp.c:19864)
                ID: name='id' (at pp.c:19864)
              Compound:  (at pp.c:19865)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:19866)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:19866)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='SUCCESS' (at pp.c:19868)
                Compound:  (at pp.c:19870)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:19872)
                    ExprList:  (at pp.c:19872)
                      ID: name='__nesc_atomic' (at pp.c:19872)
                  Return:  (at pp.c:19874)
                    ID: name='__nesc_temp' (at pp.c:19874)
          Compound:  (at pp.c:19879)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:19880)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:19880)
                IdentifierType: names=['char', 'unsigned'] (at None)
              ID: name='EBUSY' (at pp.c:19882)
            Compound:  (at pp.c:19884)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_end' (at pp.c:19886)
                ExprList:  (at pp.c:19886)
                  ID: name='__nesc_atomic' (at pp.c:19886)
              Return:  (at pp.c:19888)
                ID: name='__nesc_temp' (at pp.c:19888)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:19893)
          ExprList:  (at pp.c:19893)
            ID: name='__nesc_atomic' (at pp.c:19893)
  FuncDef:  (at pp.c:19897)
    Decl: name='CC2420TinyosNetworkP__Queue__enqueue', quals=[], storage=['static', 'inline'] (at pp.c:19897)
      FuncDecl: quals=None (at pp.c:19897)
        ParamList:  (at pp.c:19897)
          Decl: name='id', quals=[], storage=[] (at pp.c:19897)
            TypeDecl: declname='id', quals=[] (at pp.c:19897)
              IdentifierType: names=['resource_client_id_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__Queue__enqueue', quals=[] (at pp.c:19897)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19897)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19899)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19899)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19903)
        ID: name='__nesc_result' (at pp.c:19903)
        FuncCall:  (at None)
          ID: name='FcfsResourceQueueC__0__FcfsQueue__enqueue' (at pp.c:19903)
          ExprList:  (at pp.c:19903)
            ID: name='id' (at pp.c:19903)
      Return:  (at pp.c:19907)
        ID: name='__nesc_result' (at pp.c:19907)
  FuncDef:  (at pp.c:19912)
    Decl: name='CC2420TinyosNetworkP__Resource__request', quals=[], storage=['inline', 'static'] (at pp.c:19912)
      FuncDecl: quals=None (at pp.c:19912)
        ParamList:  (at pp.c:19912)
          Decl: name='id', quals=[], storage=[] (at pp.c:19912)
            TypeDecl: declname='id', quals=[] (at pp.c:19912)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__Resource__request', quals=[] (at pp.c:19912)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19914)
      FuncCall:  (at None)
        ID: name='CC2420TinyosNetworkP__grantTask__postTask' (at pp.c:19916)
      If:  (at pp.c:19918)
        BinaryOp: op='>' (at pp.c:19918)
          ID: name='CC2420TinyosNetworkP__TINYOS_N_NETWORKS' (at pp.c:19918)
          Constant: type='int', value='1' (at pp.c:19918)
        Compound:  (at pp.c:19918)
          Return:  (at pp.c:19919)
            FuncCall:  (at None)
              ID: name='CC2420TinyosNetworkP__Queue__enqueue' (at pp.c:19919)
              ExprList:  (at pp.c:19919)
                ID: name='id' (at pp.c:19919)
        Compound:  (at pp.c:19923)
          If:  (at pp.c:19924)
            BinaryOp: op='==' (at pp.c:19924)
              ID: name='id' (at pp.c:19924)
              ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:19924)
            Compound:  (at pp.c:19924)
              Return:  (at pp.c:19925)
                ID: name='EALREADY' (at pp.c:19925)
            Compound:  (at pp.c:19929)
              Assignment: op='=' (at pp.c:19930)
                ID: name='CC2420TinyosNetworkP__next_owner' (at pp.c:19930)
                ID: name='id' (at pp.c:19930)
              Return:  (at pp.c:19931)
                ID: name='SUCCESS' (at pp.c:19931)
  FuncDef:  (at pp.c:19937)
    Decl: name='CC2420ActiveMessageP__RadioResource__request', quals=[], storage=['static', 'inline'] (at pp.c:19937)
      FuncDecl: quals=None (at pp.c:19937)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__RadioResource__request', quals=[] (at pp.c:19937)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19937)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19939)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19939)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19943)
        ID: name='__nesc_result' (at pp.c:19943)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__Resource__request' (at pp.c:19943)
          ExprList:  (at pp.c:19943)
            ID: name='CC2420ActiveMessageC__CC2420_AM_SEND_ID' (at pp.c:19943)
      Return:  (at pp.c:19947)
        ID: name='__nesc_result' (at pp.c:19947)
  FuncDef:  (at pp.c:19952)
    Decl: name='CC2420ActiveMessageP__SubSend__send', quals=[], storage=['static', 'inline'] (at pp.c:19952)
      FuncDecl: quals=None (at pp.c:19952)
        ParamList:  (at pp.c:19952)
          Decl: name='msg', quals=[], storage=[] (at pp.c:19952)
            PtrDecl: quals=[] (at pp.c:19952)
              TypeDecl: declname='msg', quals=[] (at pp.c:19952)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:19952)
            TypeDecl: declname='len', quals=[] (at pp.c:19952)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__SubSend__send', quals=[] (at pp.c:19952)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19952)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19954)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19954)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19958)
        ID: name='__nesc_result' (at pp.c:19958)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__ActiveSend__send' (at pp.c:19958)
          ExprList:  (at pp.c:19958)
            ID: name='msg' (at pp.c:19958)
            ID: name='len' (at pp.c:19958)
      Return:  (at pp.c:19962)
        ID: name='__nesc_result' (at pp.c:19962)
  FuncDef:  (at pp.c:19967)
    Decl: name='CC2420ActiveMessageP__SendNotifier__default__aboutToSend', quals=[], storage=['inline', 'static'] (at pp.c:19967)
      FuncDecl: quals=None (at pp.c:19967)
        ParamList:  (at pp.c:19967)
          Decl: name='amId', quals=[], storage=[] (at pp.c:19967)
            TypeDecl: declname='amId', quals=[] (at pp.c:19967)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='addr', quals=[], storage=[] (at pp.c:19967)
            TypeDecl: declname='addr', quals=[] (at pp.c:19967)
              IdentifierType: names=['am_addr_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:19967)
            PtrDecl: quals=[] (at pp.c:19967)
              TypeDecl: declname='msg', quals=[] (at pp.c:19967)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__SendNotifier__default__aboutToSend', quals=[] (at pp.c:19967)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19969)
  FuncDef:  (at pp.c:19973)
    Decl: name='CC2420ActiveMessageP__SendNotifier__aboutToSend', quals=[], storage=['static', 'inline'] (at pp.c:19973)
      FuncDecl: quals=None (at pp.c:19973)
        ParamList:  (at pp.c:19973)
          Decl: name='arg_0x102533258', quals=[], storage=[] (at pp.c:19973)
            TypeDecl: declname='arg_0x102533258', quals=[] (at pp.c:19973)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='dest', quals=[], storage=[] (at pp.c:19973)
            TypeDecl: declname='dest', quals=[] (at pp.c:19973)
              IdentifierType: names=['am_addr_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:19973)
            PtrDecl: quals=[] (at pp.c:19973)
              TypeDecl: declname='msg', quals=[] (at pp.c:19973)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__SendNotifier__aboutToSend', quals=[] (at pp.c:19973)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19973)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__SendNotifier__default__aboutToSend' (at pp.c:19975)
        ExprList:  (at pp.c:19975)
          ID: name='arg_0x102533258' (at pp.c:19975)
          ID: name='dest' (at pp.c:19975)
          ID: name='msg' (at pp.c:19975)
  FuncDef:  (at pp.c:19980)
    Decl: name='CC2420TinyosNetworkP__Resource__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:19980)
      FuncDecl: quals=None (at pp.c:19980)
        ParamList:  (at pp.c:19980)
          Decl: name='id', quals=[], storage=[] (at pp.c:19980)
            TypeDecl: declname='id', quals=[] (at pp.c:19980)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__Resource__immediateRequest', quals=[] (at pp.c:19980)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19982)
      If:  (at pp.c:19983)
        BinaryOp: op='==' (at pp.c:19983)
          ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:19983)
          ID: name='id' (at pp.c:19983)
        Compound:  (at pp.c:19983)
          Return:  (at pp.c:19985)
            ID: name='EALREADY' (at pp.c:19985)
      If:  (at pp.c:19987)
        BinaryOp: op='>' (at pp.c:19987)
          ID: name='CC2420TinyosNetworkP__TINYOS_N_NETWORKS' (at pp.c:19987)
          Constant: type='int', value='1' (at pp.c:19987)
        Compound:  (at pp.c:19987)
          If:  (at pp.c:19988)
            BinaryOp: op='&&' (at pp.c:19988)
              BinaryOp: op='==' (at pp.c:19988)
                ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:19988)
                ID: name='CC2420TinyosNetworkP__OWNER_NONE' (at pp.c:19988)
              FuncCall:  (at None)
                ID: name='CC2420TinyosNetworkP__Queue__isEmpty' (at pp.c:19988)
            Compound:  (at pp.c:19988)
              Assignment: op='=' (at pp.c:19989)
                ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:19989)
                ID: name='id' (at pp.c:19989)
              Return:  (at pp.c:19990)
                ID: name='SUCCESS' (at pp.c:19990)
          Return:  (at pp.c:19992)
            ID: name='FAIL' (at pp.c:19992)
        Compound:  (at pp.c:19996)
          Assignment: op='=' (at pp.c:19997)
            ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:19997)
            ID: name='id' (at pp.c:19997)
          Return:  (at pp.c:19998)
            ID: name='SUCCESS' (at pp.c:19998)
  FuncDef:  (at pp.c:20003)
    Decl: name='CC2420ActiveMessageP__RadioResource__immediateRequest', quals=[], storage=['static', 'inline'] (at pp.c:20003)
      FuncDecl: quals=None (at pp.c:20003)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__RadioResource__immediateRequest', quals=[] (at pp.c:20003)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20003)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20005)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20005)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20009)
        ID: name='__nesc_result' (at pp.c:20009)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__Resource__immediateRequest' (at pp.c:20009)
          ExprList:  (at pp.c:20009)
            ID: name='CC2420ActiveMessageC__CC2420_AM_SEND_ID' (at pp.c:20009)
      Return:  (at pp.c:20013)
        ID: name='__nesc_result' (at pp.c:20013)
  FuncDef:  (at pp.c:20018)
    Decl: name='CC2420ControlP__CC2420Config__getPanAddr', quals=[], storage=['inline', 'static'] (at pp.c:20018)
      FuncDecl: quals=None (at pp.c:20018)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Config__getPanAddr', quals=[] (at pp.c:20018)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:20020)
      Compound:  (at pp.c:20021)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:20021)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:20021)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:20021)
        Compound:  (at pp.c:20023)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:20024)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:20024)
              IdentifierType: names=['int', 'unsigned'] (at None)
            ID: name='CC2420ControlP__m_pan' (at pp.c:20026)
          Compound:  (at pp.c:20028)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:20030)
              ExprList:  (at pp.c:20030)
                ID: name='__nesc_atomic' (at pp.c:20030)
            Return:  (at pp.c:20032)
              ID: name='__nesc_temp' (at pp.c:20032)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:20036)
          ExprList:  (at pp.c:20036)
            ID: name='__nesc_atomic' (at pp.c:20036)
  FuncDef:  (at pp.c:20040)
    Decl: name='CC2420ActiveMessageP__CC2420Config__getPanAddr', quals=[], storage=['static', 'inline'] (at pp.c:20040)
      FuncDecl: quals=None (at pp.c:20040)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__CC2420Config__getPanAddr', quals=[] (at pp.c:20040)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:20040)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20042)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20042)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20046)
        ID: name='__nesc_result' (at pp.c:20046)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__CC2420Config__getPanAddr' (at pp.c:20046)
      Return:  (at pp.c:20050)
        ID: name='__nesc_result' (at pp.c:20050)
  FuncDef:  (at pp.c:20055)
    Decl: name='CC2420CsmaP__Send__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:20055)
      FuncDecl: quals=None (at pp.c:20055)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__Send__maxPayloadLength', quals=[] (at pp.c:20055)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:20057)
      Return:  (at pp.c:20058)
        Constant: type='int', value='28' (at pp.c:20058)
  FuncDef:  (at pp.c:20062)
    Decl: name='UniqueSendP__SubSend__maxPayloadLength', quals=[], storage=['static', 'inline'] (at pp.c:20062)
      FuncDecl: quals=None (at pp.c:20062)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='UniqueSendP__SubSend__maxPayloadLength', quals=[] (at pp.c:20062)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:20062)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20064)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20064)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20068)
        ID: name='__nesc_result' (at pp.c:20068)
        FuncCall:  (at None)
          ID: name='CC2420CsmaP__Send__maxPayloadLength' (at pp.c:20068)
      Return:  (at pp.c:20072)
        ID: name='__nesc_result' (at pp.c:20072)
  FuncDef:  (at pp.c:20077)
    Decl: name='UniqueSendP__Send__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:20077)
      FuncDecl: quals=None (at pp.c:20077)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='UniqueSendP__Send__maxPayloadLength', quals=[] (at pp.c:20077)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:20079)
      Return:  (at pp.c:20080)
        FuncCall:  (at None)
          ID: name='UniqueSendP__SubSend__maxPayloadLength' (at pp.c:20080)
  FuncDef:  (at pp.c:20084)
    Decl: name='CC2420TinyosNetworkP__SubSend__maxPayloadLength', quals=[], storage=['static', 'inline'] (at pp.c:20084)
      FuncDecl: quals=None (at pp.c:20084)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__SubSend__maxPayloadLength', quals=[] (at pp.c:20084)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:20084)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20086)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20086)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20090)
        ID: name='__nesc_result' (at pp.c:20090)
        FuncCall:  (at None)
          ID: name='UniqueSendP__Send__maxPayloadLength' (at pp.c:20090)
      Return:  (at pp.c:20094)
        ID: name='__nesc_result' (at pp.c:20094)
  FuncDef:  (at pp.c:20099)
    Decl: name='CC2420TinyosNetworkP__ActiveSend__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:20099)
      FuncDecl: quals=None (at pp.c:20099)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__ActiveSend__maxPayloadLength', quals=[] (at pp.c:20099)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:20101)
      Return:  (at pp.c:20102)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__SubSend__maxPayloadLength' (at pp.c:20102)
  FuncDef:  (at pp.c:20106)
    Decl: name='CC2420ActiveMessageP__SubSend__maxPayloadLength', quals=[], storage=['static', 'inline'] (at pp.c:20106)
      FuncDecl: quals=None (at pp.c:20106)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__SubSend__maxPayloadLength', quals=[] (at pp.c:20106)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:20106)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20108)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20108)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20112)
        ID: name='__nesc_result' (at pp.c:20112)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__ActiveSend__maxPayloadLength' (at pp.c:20112)
      Return:  (at pp.c:20116)
        ID: name='__nesc_result' (at pp.c:20116)
  FuncDef:  (at pp.c:20121)
    Decl: name='CC2420ActiveMessageP__Packet__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:20121)
      FuncDecl: quals=None (at pp.c:20121)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__Packet__maxPayloadLength', quals=[] (at pp.c:20121)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:20123)
      Return:  (at pp.c:20124)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__SubSend__maxPayloadLength' (at pp.c:20124)
  FuncDef:  (at pp.c:20128)
    Decl: name='CC2420ActiveMessageP__CC2420PacketBody__getHeader', quals=[], storage=['static', 'inline'] (at pp.c:20128)
      FuncDecl: quals=None (at pp.c:20128)
        ParamList:  (at pp.c:20128)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20128)
            PtrDecl: quals=[] (at pp.c:20128)
              TypeDecl: declname='msg', quals=[] (at pp.c:20128)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:20128)
          TypeDecl: declname='CC2420ActiveMessageP__CC2420PacketBody__getHeader', quals=[] (at pp.c:20128)
            IdentifierType: names=['cc2420_header_t'] (at None)
    Compound:  (at pp.c:20128)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20130)
        PtrDecl: quals=[] (at pp.c:20130)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20130)
            Struct: name='cc2420_header_t', packed=False (at pp.c:20130)
      Assignment: op='=' (at pp.c:20134)
        ID: name='__nesc_result' (at pp.c:20134)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getHeader' (at pp.c:20134)
          ExprList:  (at pp.c:20134)
            ID: name='msg' (at pp.c:20134)
      Return:  (at pp.c:20138)
        ID: name='__nesc_result' (at pp.c:20138)
  FuncDef:  (at pp.c:20143)
    Decl: name='CC2420ActiveMessageP__AMSend__send', quals=[], storage=['inline', 'static'] (at pp.c:20143)
      FuncDecl: quals=None (at pp.c:20143)
        ParamList:  (at pp.c:20143)
          Decl: name='id', quals=[], storage=[] (at pp.c:20143)
            TypeDecl: declname='id', quals=[] (at pp.c:20143)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='addr', quals=[], storage=[] (at pp.c:20143)
            TypeDecl: declname='addr', quals=[] (at pp.c:20143)
              IdentifierType: names=['am_addr_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20144)
            PtrDecl: quals=[] (at pp.c:20144)
              TypeDecl: declname='msg', quals=[] (at pp.c:20144)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:20145)
            TypeDecl: declname='len', quals=[] (at pp.c:20145)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__AMSend__send', quals=[] (at pp.c:20143)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20147)
      Decl: name='__nesc_temp48', quals=[], storage=[] (at pp.c:20148)
        PtrDecl: quals=[] (at pp.c:20148)
          TypeDecl: declname='__nesc_temp48', quals=[] (at pp.c:20148)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='header', quals=[], storage=[] (at pp.c:20150)
        PtrDecl: quals=[] (at pp.c:20150)
          TypeDecl: declname='header', quals=[] (at pp.c:20150)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__CC2420PacketBody__getHeader' (at pp.c:20150)
          ExprList:  (at pp.c:20150)
            ID: name='msg' (at pp.c:20150)
      If:  (at pp.c:20152)
        BinaryOp: op='>' (at pp.c:20152)
          ID: name='len' (at pp.c:20152)
          FuncCall:  (at None)
            ID: name='CC2420ActiveMessageP__Packet__maxPayloadLength' (at pp.c:20152)
        Compound:  (at pp.c:20152)
          Return:  (at pp.c:20153)
            ID: name='ESIZE' (at pp.c:20153)
      FuncCall:  (at None)
        ID: name='__nesc_hton_leuint8' (at pp.c:20156)
        ExprList:  (at pp.c:20156)
          StructRef: type='.' (at pp.c:20156)
            StructRef: type='->' (at pp.c:20156)
              ID: name='header' (at pp.c:20156)
              ID: name='type' (at pp.c:20156)
            ID: name='nxdata' (at pp.c:20156)
          ID: name='id' (at pp.c:20156)
      FuncCall:  (at None)
        ID: name='__nesc_hton_leuint16' (at pp.c:20157)
        ExprList:  (at pp.c:20157)
          StructRef: type='.' (at pp.c:20157)
            StructRef: type='->' (at pp.c:20157)
              ID: name='header' (at pp.c:20157)
              ID: name='dest' (at pp.c:20157)
            ID: name='nxdata' (at pp.c:20157)
          ID: name='addr' (at pp.c:20157)
      FuncCall:  (at None)
        ID: name='__nesc_hton_leuint16' (at pp.c:20158)
        ExprList:  (at pp.c:20158)
          StructRef: type='.' (at pp.c:20158)
            StructRef: type='->' (at pp.c:20158)
              ID: name='header' (at pp.c:20158)
              ID: name='destpan' (at pp.c:20158)
            ID: name='nxdata' (at pp.c:20158)
          FuncCall:  (at None)
            ID: name='CC2420ActiveMessageP__CC2420Config__getPanAddr' (at pp.c:20158)
      FuncCall:  (at None)
        ID: name='__nesc_hton_leuint16' (at pp.c:20159)
        ExprList:  (at pp.c:20159)
          StructRef: type='.' (at pp.c:20159)
            StructRef: type='->' (at pp.c:20159)
              ID: name='header' (at pp.c:20159)
              ID: name='src' (at pp.c:20159)
            ID: name='nxdata' (at pp.c:20159)
          FuncCall:  (at None)
            ID: name='CC2420ActiveMessageP__AMPacket__address' (at pp.c:20159)
      ExprList:  (at pp.c:20160)
        Assignment: op='=' (at pp.c:20160)
          ID: name='__nesc_temp48' (at pp.c:20160)
          StructRef: type='.' (at pp.c:20160)
            StructRef: type='->' (at pp.c:20160)
              ID: name='header' (at pp.c:20160)
              ID: name='fcf' (at pp.c:20160)
            ID: name='nxdata' (at pp.c:20160)
        FuncCall:  (at None)
          ID: name='__nesc_hton_leuint16' (at pp.c:20160)
          ExprList:  (at pp.c:20160)
            ID: name='__nesc_temp48' (at pp.c:20160)
            BinaryOp: op='|' (at None)
              FuncCall:  (at None)
                ID: name='__nesc_ntoh_leuint16' (at pp.c:20160)
                ExprList:  (at pp.c:20160)
                  ID: name='__nesc_temp48' (at pp.c:20160)
              BinaryOp: op='|' (at pp.c:20160)
                BinaryOp: op='|' (at pp.c:20160)
                  BinaryOp: op='<<' (at pp.c:20160)
                    Constant: type='int', value='1' (at pp.c:20160)
                    ID: name='IEEE154_FCF_INTRAPAN' (at pp.c:20160)
                  BinaryOp: op='<<' (at pp.c:20161)
                    ID: name='IEEE154_ADDR_SHORT' (at pp.c:20161)
                    ID: name='IEEE154_FCF_DEST_ADDR_MODE' (at pp.c:20161)
                BinaryOp: op='<<' (at pp.c:20162)
                  ID: name='IEEE154_ADDR_SHORT' (at pp.c:20162)
                  ID: name='IEEE154_FCF_SRC_ADDR_MODE' (at pp.c:20162)
      FuncCall:  (at None)
        ID: name='__nesc_hton_leuint8' (at pp.c:20163)
        ExprList:  (at pp.c:20163)
          StructRef: type='.' (at pp.c:20163)
            StructRef: type='->' (at pp.c:20163)
              ID: name='header' (at pp.c:20163)
              ID: name='length' (at pp.c:20163)
            ID: name='nxdata' (at pp.c:20163)
          BinaryOp: op='+' (at pp.c:20163)
            ID: name='len' (at pp.c:20163)
            ID: name='CC2420_SIZE' (at pp.c:20163)
      If:  (at pp.c:20165)
        BinaryOp: op='==' (at None)
          FuncCall:  (at None)
            ID: name='CC2420ActiveMessageP__RadioResource__immediateRequest' (at pp.c:20165)
          ID: name='SUCCESS' (at pp.c:20165)
        Compound:  (at pp.c:20165)
          Decl: name='rc', quals=[], storage=[] (at pp.c:20166)
            TypeDecl: declname='rc', quals=[] (at pp.c:20166)
              IdentifierType: names=['error_t'] (at None)
          FuncCall:  (at None)
            ID: name='CC2420ActiveMessageP__SendNotifier__aboutToSend' (at pp.c:20169)
            ExprList:  (at pp.c:20169)
              ID: name='id' (at pp.c:20169)
              ID: name='addr' (at pp.c:20169)
              ID: name='msg' (at pp.c:20169)
          Assignment: op='=' (at pp.c:20171)
            ID: name='rc' (at pp.c:20171)
            FuncCall:  (at None)
              ID: name='CC2420ActiveMessageP__SubSend__send' (at pp.c:20171)
              ExprList:  (at pp.c:20171)
                ID: name='msg' (at pp.c:20171)
                ID: name='len' (at pp.c:20171)
          If:  (at pp.c:20172)
            BinaryOp: op='!=' (at pp.c:20172)
              ID: name='rc' (at pp.c:20172)
              ID: name='SUCCESS' (at pp.c:20172)
            Compound:  (at pp.c:20172)
              FuncCall:  (at None)
                ID: name='CC2420ActiveMessageP__RadioResource__release' (at pp.c:20173)
          Return:  (at pp.c:20176)
            ID: name='rc' (at pp.c:20176)
        Compound:  (at pp.c:20180)
          Assignment: op='=' (at pp.c:20181)
            ID: name='CC2420ActiveMessageP__pending_length' (at pp.c:20181)
            ID: name='len' (at pp.c:20181)
          Assignment: op='=' (at pp.c:20182)
            ID: name='CC2420ActiveMessageP__pending_message' (at pp.c:20182)
            ID: name='msg' (at pp.c:20182)
          Return:  (at pp.c:20183)
            FuncCall:  (at None)
              ID: name='CC2420ActiveMessageP__RadioResource__request' (at pp.c:20183)
  FuncDef:  (at pp.c:20188)
    Decl: name='BaseStationP__RadioSend__send', quals=[], storage=['static', 'inline'] (at pp.c:20188)
      FuncDecl: quals=None (at pp.c:20188)
        ParamList:  (at pp.c:20188)
          Decl: name='arg_0x101591b28', quals=[], storage=[] (at pp.c:20188)
            TypeDecl: declname='arg_0x101591b28', quals=[] (at pp.c:20188)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='addr', quals=[], storage=[] (at pp.c:20188)
            TypeDecl: declname='addr', quals=[] (at pp.c:20188)
              IdentifierType: names=['am_addr_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20188)
            PtrDecl: quals=[] (at pp.c:20188)
              TypeDecl: declname='msg', quals=[] (at pp.c:20188)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:20188)
            TypeDecl: declname='len', quals=[] (at pp.c:20188)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='BaseStationP__RadioSend__send', quals=[] (at pp.c:20188)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20188)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20190)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20190)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20194)
        ID: name='__nesc_result' (at pp.c:20194)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__AMSend__send' (at pp.c:20194)
          ExprList:  (at pp.c:20194)
            ID: name='arg_0x101591b28' (at pp.c:20194)
            ID: name='addr' (at pp.c:20194)
            ID: name='msg' (at pp.c:20194)
            ID: name='len' (at pp.c:20194)
      Return:  (at pp.c:20198)
        ID: name='__nesc_result' (at pp.c:20198)
  FuncDef:  (at pp.c:20203)
    Decl: name='CC2420ActiveMessageP__AMPacket__setSource', quals=[], storage=['inline', 'static'] (at pp.c:20203)
      FuncDecl: quals=None (at pp.c:20203)
        ParamList:  (at pp.c:20203)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:20203)
            PtrDecl: quals=[] (at pp.c:20203)
              TypeDecl: declname='amsg', quals=[] (at pp.c:20203)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='addr', quals=[], storage=[] (at pp.c:20203)
            TypeDecl: declname='addr', quals=[] (at pp.c:20203)
              IdentifierType: names=['am_addr_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__AMPacket__setSource', quals=[] (at pp.c:20203)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20205)
      Decl: name='header', quals=[], storage=[] (at pp.c:20206)
        PtrDecl: quals=[] (at pp.c:20206)
          TypeDecl: declname='header', quals=[] (at pp.c:20206)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__CC2420PacketBody__getHeader' (at pp.c:20206)
          ExprList:  (at pp.c:20206)
            ID: name='amsg' (at pp.c:20206)
      FuncCall:  (at None)
        ID: name='__nesc_hton_leuint16' (at pp.c:20209)
        ExprList:  (at pp.c:20209)
          StructRef: type='.' (at pp.c:20209)
            StructRef: type='->' (at pp.c:20209)
              ID: name='header' (at pp.c:20209)
              ID: name='src' (at pp.c:20209)
            ID: name='nxdata' (at pp.c:20209)
          ID: name='addr' (at pp.c:20209)
  FuncDef:  (at pp.c:20213)
    Decl: name='BaseStationP__RadioAMPacket__setSource', quals=[], storage=['static', 'inline'] (at pp.c:20213)
      FuncDecl: quals=None (at pp.c:20213)
        ParamList:  (at pp.c:20213)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:20213)
            PtrDecl: quals=[] (at pp.c:20213)
              TypeDecl: declname='amsg', quals=[] (at pp.c:20213)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='addr', quals=[], storage=[] (at pp.c:20213)
            TypeDecl: declname='addr', quals=[] (at pp.c:20213)
              IdentifierType: names=['am_addr_t'] (at None)
        TypeDecl: declname='BaseStationP__RadioAMPacket__setSource', quals=[] (at pp.c:20213)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20213)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__AMPacket__setSource' (at pp.c:20215)
        ExprList:  (at pp.c:20215)
          ID: name='amsg' (at pp.c:20215)
          ID: name='addr' (at pp.c:20215)
  FuncDef:  (at pp.c:20220)
    Decl: name='CC2420ActiveMessageP__CC2420PacketBody__getMetadata', quals=[], storage=['static', 'inline'] (at pp.c:20220)
      FuncDecl: quals=None (at pp.c:20220)
        ParamList:  (at pp.c:20220)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20220)
            PtrDecl: quals=[] (at pp.c:20220)
              TypeDecl: declname='msg', quals=[] (at pp.c:20220)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:20220)
          TypeDecl: declname='CC2420ActiveMessageP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:20220)
            IdentifierType: names=['cc2420_metadata_t'] (at None)
    Compound:  (at pp.c:20220)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20222)
        PtrDecl: quals=[] (at pp.c:20222)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20222)
            Struct: name='cc2420_metadata_t', packed=False (at pp.c:20222)
      Assignment: op='=' (at pp.c:20226)
        ID: name='__nesc_result' (at pp.c:20226)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getMetadata' (at pp.c:20226)
          ExprList:  (at pp.c:20226)
            ID: name='msg' (at pp.c:20226)
      Return:  (at pp.c:20230)
        ID: name='__nesc_result' (at pp.c:20230)
  FuncDef:  (at pp.c:20235)
    Decl: name='CC2420ActiveMessageP__Packet__clear', quals=[], storage=['inline', 'static'] (at pp.c:20235)
      FuncDecl: quals=None (at pp.c:20235)
        ParamList:  (at pp.c:20235)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20235)
            PtrDecl: quals=[] (at pp.c:20235)
              TypeDecl: declname='msg', quals=[] (at pp.c:20235)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__Packet__clear', quals=[] (at pp.c:20235)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20237)
      FuncCall:  (at None)
        ID: name='memset' (at pp.c:20238)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='CC2420ActiveMessageP__CC2420PacketBody__getHeader' (at pp.c:20238)
            ExprList:  (at pp.c:20238)
              ID: name='msg' (at pp.c:20238)
          Constant: type='int', value='0x0' (at pp.c:20238)
          UnaryOp: op='sizeof' (at pp.c:20238)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['cc2420_header_t'] (at None)
      FuncCall:  (at None)
        ID: name='memset' (at pp.c:20239)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='CC2420ActiveMessageP__CC2420PacketBody__getMetadata' (at pp.c:20239)
            ExprList:  (at pp.c:20239)
              ID: name='msg' (at pp.c:20239)
          Constant: type='int', value='0x0' (at pp.c:20239)
          UnaryOp: op='sizeof' (at pp.c:20239)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['cc2420_metadata_t'] (at None)
  FuncDef:  (at pp.c:20243)
    Decl: name='BaseStationP__RadioPacket__clear', quals=[], storage=['static', 'inline'] (at pp.c:20243)
      FuncDecl: quals=None (at pp.c:20243)
        ParamList:  (at pp.c:20243)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20243)
            PtrDecl: quals=[] (at pp.c:20243)
              TypeDecl: declname='msg', quals=[] (at pp.c:20243)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='BaseStationP__RadioPacket__clear', quals=[] (at pp.c:20243)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20243)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__Packet__clear' (at pp.c:20245)
        ExprList:  (at pp.c:20245)
          ID: name='msg' (at pp.c:20245)
  FuncDef:  (at pp.c:20250)
    Decl: name='BaseStationP__UartAMPacket__type', quals=[], storage=['static', 'inline'] (at pp.c:20250)
      FuncDecl: quals=None (at pp.c:20250)
        ParamList:  (at pp.c:20250)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:20250)
            PtrDecl: quals=[] (at pp.c:20250)
              TypeDecl: declname='amsg', quals=[] (at pp.c:20250)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='BaseStationP__UartAMPacket__type', quals=[] (at pp.c:20250)
          IdentifierType: names=['am_id_t'] (at None)
    Compound:  (at pp.c:20250)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20252)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20252)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20256)
        ID: name='__nesc_result' (at pp.c:20256)
        FuncCall:  (at None)
          ID: name='SerialActiveMessageP__0__AMPacket__type' (at pp.c:20256)
          ExprList:  (at pp.c:20256)
            ID: name='amsg' (at pp.c:20256)
      Return:  (at pp.c:20260)
        ID: name='__nesc_result' (at pp.c:20260)
  FuncDef:  (at pp.c:20265)
    Decl: name='__nesc_ntoh_uint16', quals=[], storage=['__inline', 'static'] (at pp.c:20265)
      FuncDecl: quals=None (at pp.c:20265)
        ParamList:  (at pp.c:20265)
          Decl: name='source', quals=['const'], storage=[] (at pp.c:20265)
            PtrDecl: quals=[] (at pp.c:20265)
              TypeDecl: declname='source', quals=['const'] (at pp.c:20265)
                IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_ntoh_uint16', quals=[] (at pp.c:20265)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:20267)
      Decl: name='base', quals=['const'], storage=[] (at pp.c:20268)
        PtrDecl: quals=[] (at pp.c:20268)
          TypeDecl: declname='base', quals=['const'] (at pp.c:20268)
            IdentifierType: names=['uint8_t'] (at None)
        ID: name='source' (at pp.c:20268)
      Return:  (at pp.c:20271)
        BinaryOp: op='|' (at None)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
              ArrayRef:  (at pp.c:20271)
                ID: name='base' (at pp.c:20271)
                Constant: type='int', value='0' (at pp.c:20271)
            Constant: type='int', value='8' (at pp.c:20271)
          ArrayRef:  (at pp.c:20271)
            ID: name='base' (at pp.c:20271)
            Constant: type='int', value='1' (at pp.c:20271)
  FuncDef:  (at pp.c:20275)
    Decl: name='SerialActiveMessageP__0__AMPacket__source', quals=[], storage=['inline', 'static'] (at pp.c:20275)
      FuncDecl: quals=None (at pp.c:20275)
        ParamList:  (at pp.c:20275)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:20275)
            PtrDecl: quals=[] (at pp.c:20275)
              TypeDecl: declname='amsg', quals=[] (at pp.c:20275)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='SerialActiveMessageP__0__AMPacket__source', quals=[] (at pp.c:20275)
          IdentifierType: names=['am_addr_t'] (at None)
    Compound:  (at pp.c:20277)
      Decl: name='header', quals=[], storage=[] (at pp.c:20278)
        PtrDecl: quals=[] (at pp.c:20278)
          TypeDecl: declname='header', quals=[] (at pp.c:20278)
            IdentifierType: names=['serial_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='SerialActiveMessageP__0__getHeader' (at pp.c:20278)
          ExprList:  (at pp.c:20278)
            ID: name='amsg' (at pp.c:20278)
      Return:  (at pp.c:20281)
        FuncCall:  (at None)
          ID: name='__nesc_ntoh_uint16' (at pp.c:20281)
          ExprList:  (at pp.c:20281)
            StructRef: type='.' (at pp.c:20281)
              StructRef: type='->' (at pp.c:20281)
                ID: name='header' (at pp.c:20281)
                ID: name='src' (at pp.c:20281)
              ID: name='nxdata' (at pp.c:20281)
  FuncDef:  (at pp.c:20285)
    Decl: name='BaseStationP__UartAMPacket__source', quals=[], storage=['static', 'inline'] (at pp.c:20285)
      FuncDecl: quals=None (at pp.c:20285)
        ParamList:  (at pp.c:20285)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:20285)
            PtrDecl: quals=[] (at pp.c:20285)
              TypeDecl: declname='amsg', quals=[] (at pp.c:20285)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='BaseStationP__UartAMPacket__source', quals=[] (at pp.c:20285)
          IdentifierType: names=['am_addr_t'] (at None)
    Compound:  (at pp.c:20285)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20287)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20287)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20291)
        ID: name='__nesc_result' (at pp.c:20291)
        FuncCall:  (at None)
          ID: name='SerialActiveMessageP__0__AMPacket__source' (at pp.c:20291)
          ExprList:  (at pp.c:20291)
            ID: name='amsg' (at pp.c:20291)
      Return:  (at pp.c:20295)
        ID: name='__nesc_result' (at pp.c:20295)
  FuncDef:  (at pp.c:20300)
    Decl: name='SerialActiveMessageP__0__AMPacket__destination', quals=[], storage=['inline', 'static'] (at pp.c:20300)
      FuncDecl: quals=None (at pp.c:20300)
        ParamList:  (at pp.c:20300)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:20300)
            PtrDecl: quals=[] (at pp.c:20300)
              TypeDecl: declname='amsg', quals=[] (at pp.c:20300)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='SerialActiveMessageP__0__AMPacket__destination', quals=[] (at pp.c:20300)
          IdentifierType: names=['am_addr_t'] (at None)
    Compound:  (at pp.c:20302)
      Decl: name='header', quals=[], storage=[] (at pp.c:20303)
        PtrDecl: quals=[] (at pp.c:20303)
          TypeDecl: declname='header', quals=[] (at pp.c:20303)
            IdentifierType: names=['serial_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='SerialActiveMessageP__0__getHeader' (at pp.c:20303)
          ExprList:  (at pp.c:20303)
            ID: name='amsg' (at pp.c:20303)
      Return:  (at pp.c:20306)
        FuncCall:  (at None)
          ID: name='__nesc_ntoh_uint16' (at pp.c:20306)
          ExprList:  (at pp.c:20306)
            StructRef: type='.' (at pp.c:20306)
              StructRef: type='->' (at pp.c:20306)
                ID: name='header' (at pp.c:20306)
                ID: name='dest' (at pp.c:20306)
              ID: name='nxdata' (at pp.c:20306)
  FuncDef:  (at pp.c:20310)
    Decl: name='BaseStationP__UartAMPacket__destination', quals=[], storage=['static', 'inline'] (at pp.c:20310)
      FuncDecl: quals=None (at pp.c:20310)
        ParamList:  (at pp.c:20310)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:20310)
            PtrDecl: quals=[] (at pp.c:20310)
              TypeDecl: declname='amsg', quals=[] (at pp.c:20310)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='BaseStationP__UartAMPacket__destination', quals=[] (at pp.c:20310)
          IdentifierType: names=['am_addr_t'] (at None)
    Compound:  (at pp.c:20310)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20312)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20312)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20316)
        ID: name='__nesc_result' (at pp.c:20316)
        FuncCall:  (at None)
          ID: name='SerialActiveMessageP__0__AMPacket__destination' (at pp.c:20316)
          ExprList:  (at pp.c:20316)
            ID: name='amsg' (at pp.c:20316)
      Return:  (at pp.c:20320)
        ID: name='__nesc_result' (at pp.c:20320)
  FuncDef:  (at pp.c:20325)
    Decl: name='SerialActiveMessageP__0__Packet__payloadLength', quals=[], storage=['inline', 'static'] (at pp.c:20325)
      FuncDecl: quals=None (at pp.c:20325)
        ParamList:  (at pp.c:20325)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20325)
            PtrDecl: quals=[] (at pp.c:20325)
              TypeDecl: declname='msg', quals=[] (at pp.c:20325)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='SerialActiveMessageP__0__Packet__payloadLength', quals=[] (at pp.c:20325)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:20327)
      Decl: name='header', quals=[], storage=[] (at pp.c:20328)
        PtrDecl: quals=[] (at pp.c:20328)
          TypeDecl: declname='header', quals=[] (at pp.c:20328)
            IdentifierType: names=['serial_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='SerialActiveMessageP__0__getHeader' (at pp.c:20328)
          ExprList:  (at pp.c:20328)
            ID: name='msg' (at pp.c:20328)
      Return:  (at pp.c:20331)
        FuncCall:  (at None)
          ID: name='__nesc_ntoh_uint8' (at pp.c:20331)
          ExprList:  (at pp.c:20331)
            StructRef: type='.' (at pp.c:20331)
              StructRef: type='->' (at pp.c:20331)
                ID: name='header' (at pp.c:20331)
                ID: name='length' (at pp.c:20331)
              ID: name='nxdata' (at pp.c:20331)
  FuncDef:  (at pp.c:20335)
    Decl: name='BaseStationP__UartPacket__payloadLength', quals=[], storage=['static', 'inline'] (at pp.c:20335)
      FuncDecl: quals=None (at pp.c:20335)
        ParamList:  (at pp.c:20335)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20335)
            PtrDecl: quals=[] (at pp.c:20335)
              TypeDecl: declname='msg', quals=[] (at pp.c:20335)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='BaseStationP__UartPacket__payloadLength', quals=[] (at pp.c:20335)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:20335)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20337)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20337)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20341)
        ID: name='__nesc_result' (at pp.c:20341)
        FuncCall:  (at None)
          ID: name='SerialActiveMessageP__0__Packet__payloadLength' (at pp.c:20341)
          ExprList:  (at pp.c:20341)
            ID: name='msg' (at pp.c:20341)
      Return:  (at pp.c:20345)
        ID: name='__nesc_result' (at pp.c:20345)
  FuncDef:  (at pp.c:20350)
    Decl: name='BaseStationP__radioSendTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:20350)
      FuncDecl: quals=None (at pp.c:20350)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BaseStationP__radioSendTask__runTask', quals=[] (at pp.c:20350)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20352)
      Decl: name='len', quals=[], storage=[] (at pp.c:20353)
        TypeDecl: declname='len', quals=[] (at pp.c:20353)
          IdentifierType: names=['uint8_t'] (at None)
      Decl: name='id', quals=[], storage=[] (at pp.c:20354)
        TypeDecl: declname='id', quals=[] (at pp.c:20354)
          IdentifierType: names=['am_id_t'] (at None)
      Decl: name='addr', quals=[], storage=[] (at pp.c:20355)
        TypeDecl: declname='addr', quals=[] (at pp.c:20355)
          IdentifierType: names=['am_addr_t'] (at None)
      Decl: name='source', quals=[], storage=[] (at pp.c:20357)
        TypeDecl: declname='source', quals=[] (at pp.c:20357)
          IdentifierType: names=['am_addr_t'] (at None)
      Decl: name='msg', quals=[], storage=[] (at pp.c:20358)
        PtrDecl: quals=[] (at pp.c:20358)
          TypeDecl: declname='msg', quals=[] (at pp.c:20358)
            IdentifierType: names=['message_t'] (at None)
      Compound:  (at pp.c:20360)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:20360)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:20360)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:20360)
        If:  (at pp.c:20361)
          BinaryOp: op='&&' (at pp.c:20361)
            BinaryOp: op='==' (at pp.c:20361)
              ID: name='BaseStationP__radioIn' (at pp.c:20361)
              ID: name='BaseStationP__radioOut' (at pp.c:20361)
            UnaryOp: op='!' (at pp.c:20361)
              ID: name='BaseStationP__radioFull' (at pp.c:20361)
          Compound:  (at pp.c:20362)
            Assignment: op='=' (at pp.c:20363)
              ID: name='BaseStationP__radioBusy' (at pp.c:20363)
              ID: name='FALSE' (at pp.c:20363)
            Compound:  (at pp.c:20364)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_end' (at pp.c:20366)
                ExprList:  (at pp.c:20366)
                  ID: name='__nesc_atomic' (at pp.c:20366)
              Return:  (at pp.c:20368)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:20372)
          ExprList:  (at pp.c:20372)
            ID: name='__nesc_atomic' (at pp.c:20372)
      Assignment: op='=' (at pp.c:20373)
        ID: name='msg' (at pp.c:20373)
        ArrayRef:  (at pp.c:20373)
          ID: name='BaseStationP__radioQueue' (at pp.c:20373)
          ID: name='BaseStationP__radioOut' (at pp.c:20373)
      Assignment: op='=' (at pp.c:20374)
        ID: name='len' (at pp.c:20374)
        FuncCall:  (at None)
          ID: name='BaseStationP__UartPacket__payloadLength' (at pp.c:20374)
          ExprList:  (at pp.c:20374)
            ID: name='msg' (at pp.c:20374)
      Assignment: op='=' (at pp.c:20375)
        ID: name='addr' (at pp.c:20375)
        FuncCall:  (at None)
          ID: name='BaseStationP__UartAMPacket__destination' (at pp.c:20375)
          ExprList:  (at pp.c:20375)
            ID: name='msg' (at pp.c:20375)
      Assignment: op='=' (at pp.c:20376)
        ID: name='source' (at pp.c:20376)
        FuncCall:  (at None)
          ID: name='BaseStationP__UartAMPacket__source' (at pp.c:20376)
          ExprList:  (at pp.c:20376)
            ID: name='msg' (at pp.c:20376)
      Assignment: op='=' (at pp.c:20377)
        ID: name='id' (at pp.c:20377)
        FuncCall:  (at None)
          ID: name='BaseStationP__UartAMPacket__type' (at pp.c:20377)
          ExprList:  (at pp.c:20377)
            ID: name='msg' (at pp.c:20377)
      FuncCall:  (at None)
        ID: name='BaseStationP__RadioPacket__clear' (at pp.c:20379)
        ExprList:  (at pp.c:20379)
          ID: name='msg' (at pp.c:20379)
      FuncCall:  (at None)
        ID: name='BaseStationP__RadioAMPacket__setSource' (at pp.c:20380)
        ExprList:  (at pp.c:20380)
          ID: name='msg' (at pp.c:20380)
          ID: name='source' (at pp.c:20380)
      If:  (at pp.c:20382)
        BinaryOp: op='==' (at None)
          FuncCall:  (at None)
            ID: name='BaseStationP__RadioSend__send' (at pp.c:20382)
            ExprList:  (at pp.c:20382)
              ID: name='id' (at pp.c:20382)
              ID: name='addr' (at pp.c:20382)
              ID: name='msg' (at pp.c:20382)
              ID: name='len' (at pp.c:20382)
          ID: name='SUCCESS' (at pp.c:20382)
        Compound:  (at pp.c:20382)
          FuncCall:  (at None)
            ID: name='BaseStationP__Leds__led0Toggle' (at pp.c:20383)
        Compound:  (at pp.c:20385)
          FuncCall:  (at None)
            ID: name='BaseStationP__failBlink' (at pp.c:20386)
          FuncCall:  (at None)
            ID: name='BaseStationP__radioSendTask__postTask' (at pp.c:20387)
  FuncDef:  (at pp.c:20392)
    Decl: name='HplMsp430GeneralIOP__27__IO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:20392)
      FuncDecl: quals=None (at pp.c:20392)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__27__IO__toggle', quals=[] (at pp.c:20392)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20394)
      Compound:  (at pp.c:20396)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:20396)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:20396)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:20396)
        Assignment: op='^=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:20398)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:20398)
          BinaryOp: op='<<' (at pp.c:20398)
            Constant: type='int', value='0x01' (at pp.c:20398)
            Constant: type='int', value='3' (at pp.c:20398)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:20400)
          ExprList:  (at pp.c:20400)
            ID: name='__nesc_atomic' (at pp.c:20400)
  FuncDef:  (at pp.c:20404)
    Decl: name='Msp430GpioC__1__HplGeneralIO__toggle', quals=[], storage=['static', 'inline'] (at pp.c:20404)
      FuncDecl: quals=None (at pp.c:20404)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__toggle', quals=[] (at pp.c:20404)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20404)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__27__IO__toggle' (at pp.c:20406)
  FuncDef:  (at pp.c:20411)
    Decl: name='Msp430GpioC__1__GeneralIO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:20411)
      FuncDecl: quals=None (at pp.c:20411)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__GeneralIO__toggle', quals=[] (at pp.c:20411)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20413)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__HplGeneralIO__toggle' (at pp.c:20415)
  FuncDef:  (at pp.c:20419)
    Decl: name='LedsP__Led1__toggle', quals=[], storage=['static', 'inline'] (at pp.c:20419)
      FuncDecl: quals=None (at pp.c:20419)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led1__toggle', quals=[] (at pp.c:20419)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20419)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__GeneralIO__toggle' (at pp.c:20421)
  FuncDef:  (at pp.c:20426)
    Decl: name='LedsP__Leds__led1Toggle', quals=[], storage=['inline', 'static'] (at pp.c:20426)
      FuncDecl: quals=None (at pp.c:20426)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Leds__led1Toggle', quals=[] (at pp.c:20426)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20428)
      FuncCall:  (at None)
        ID: name='LedsP__Led1__toggle' (at pp.c:20429)
  FuncDef:  (at pp.c:20436)
    Decl: name='BaseStationP__Leds__led1Toggle', quals=[], storage=['static', 'inline'] (at pp.c:20436)
      FuncDecl: quals=None (at pp.c:20436)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BaseStationP__Leds__led1Toggle', quals=[] (at pp.c:20436)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20436)
      FuncCall:  (at None)
        ID: name='LedsP__Leds__led1Toggle' (at pp.c:20438)
  FuncDef:  (at pp.c:20443)
    Decl: name='__nesc_hton_uint16', quals=[], storage=['__inline', 'static'] (at pp.c:20443)
      FuncDecl: quals=None (at pp.c:20443)
        ParamList:  (at pp.c:20443)
          Decl: name='target', quals=[], storage=[] (at pp.c:20443)
            PtrDecl: quals=[] (at pp.c:20443)
              TypeDecl: declname='target', quals=[] (at pp.c:20443)
                IdentifierType: names=['void'] (at None)
          Decl: name='value', quals=[], storage=[] (at pp.c:20443)
            TypeDecl: declname='value', quals=[] (at pp.c:20443)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='__nesc_hton_uint16', quals=[] (at pp.c:20443)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:20445)
      Decl: name='base', quals=[], storage=[] (at pp.c:20446)
        PtrDecl: quals=[] (at pp.c:20446)
          TypeDecl: declname='base', quals=[] (at pp.c:20446)
            IdentifierType: names=['uint8_t'] (at None)
        ID: name='target' (at pp.c:20446)
      Assignment: op='=' (at pp.c:20449)
        ArrayRef:  (at pp.c:20449)
          ID: name='base' (at pp.c:20449)
          Constant: type='int', value='1' (at pp.c:20449)
        ID: name='value' (at pp.c:20449)
      Assignment: op='=' (at pp.c:20450)
        ArrayRef:  (at pp.c:20450)
          ID: name='base' (at pp.c:20450)
          Constant: type='int', value='0' (at pp.c:20450)
        BinaryOp: op='>>' (at pp.c:20450)
          ID: name='value' (at pp.c:20450)
          Constant: type='int', value='8' (at pp.c:20450)
      Return:  (at pp.c:20451)
        ID: name='value' (at pp.c:20451)
  FuncDef:  (at pp.c:20455)
    Decl: name='SerialP__SendBytePacket__startSend', quals=[], storage=['inline', 'static'] (at pp.c:20455)
      FuncDecl: quals=None (at pp.c:20455)
        ParamList:  (at pp.c:20455)
          Decl: name='b', quals=[], storage=[] (at pp.c:20455)
            TypeDecl: declname='b', quals=[] (at pp.c:20455)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SerialP__SendBytePacket__startSend', quals=[] (at pp.c:20455)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20457)
      Decl: name='not_busy', quals=[], storage=[] (at pp.c:20458)
        TypeDecl: declname='not_busy', quals=[] (at pp.c:20458)
          IdentifierType: names=['bool'] (at None)
        ID: name='FALSE' (at pp.c:20458)
      Compound:  (at pp.c:20461)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:20461)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:20461)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:20461)
        Compound:  (at pp.c:20463)
          If:  (at pp.c:20464)
            BinaryOp: op='==' (at pp.c:20464)
              StructRef: type='.' (at pp.c:20464)
                ArrayRef:  (at pp.c:20464)
                  ID: name='SerialP__txBuf' (at pp.c:20464)
                  ID: name='SerialP__TX_DATA_INDEX' (at pp.c:20464)
                ID: name='state' (at pp.c:20464)
              ID: name='SerialP__BUFFER_AVAILABLE' (at pp.c:20464)
            Compound:  (at pp.c:20464)
              Assignment: op='=' (at pp.c:20465)
                StructRef: type='.' (at pp.c:20465)
                  ArrayRef:  (at pp.c:20465)
                    ID: name='SerialP__txBuf' (at pp.c:20465)
                    ID: name='SerialP__TX_DATA_INDEX' (at pp.c:20465)
                  ID: name='state' (at pp.c:20465)
                ID: name='SerialP__BUFFER_FILLING' (at pp.c:20465)
              Assignment: op='=' (at pp.c:20466)
                StructRef: type='.' (at pp.c:20466)
                  ArrayRef:  (at pp.c:20466)
                    ID: name='SerialP__txBuf' (at pp.c:20466)
                    ID: name='SerialP__TX_DATA_INDEX' (at pp.c:20466)
                  ID: name='buf' (at pp.c:20466)
                ID: name='b' (at pp.c:20466)
              Assignment: op='=' (at pp.c:20467)
                ID: name='not_busy' (at pp.c:20467)
                ID: name='TRUE' (at pp.c:20467)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:20471)
          ExprList:  (at pp.c:20471)
            ID: name='__nesc_atomic' (at pp.c:20471)
      If:  (at pp.c:20472)
        ID: name='not_busy' (at pp.c:20472)
        Compound:  (at pp.c:20472)
          FuncCall:  (at None)
            ID: name='SerialP__MaybeScheduleTx' (at pp.c:20473)
          Return:  (at pp.c:20474)
            ID: name='SUCCESS' (at pp.c:20474)
      Return:  (at pp.c:20476)
        ID: name='EBUSY' (at pp.c:20476)
  FuncDef:  (at pp.c:20480)
    Decl: name='SerialDispatcherP__0__SendBytePacket__startSend', quals=[], storage=['static', 'inline'] (at pp.c:20480)
      FuncDecl: quals=None (at pp.c:20480)
        ParamList:  (at pp.c:20480)
          Decl: name='first_byte', quals=[], storage=[] (at pp.c:20480)
            TypeDecl: declname='first_byte', quals=[] (at pp.c:20480)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__SendBytePacket__startSend', quals=[] (at pp.c:20480)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20480)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20482)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20482)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20486)
        ID: name='__nesc_result' (at pp.c:20486)
        FuncCall:  (at None)
          ID: name='SerialP__SendBytePacket__startSend' (at pp.c:20486)
          ExprList:  (at pp.c:20486)
            ID: name='first_byte' (at pp.c:20486)
      Return:  (at pp.c:20490)
        ID: name='__nesc_result' (at pp.c:20490)
  FuncDef:  (at pp.c:20495)
    Decl: name='SerialPacketInfoActiveMessageP__Info__dataLinkLength', quals=[], storage=['inline', 'static'] (at pp.c:20495)
      FuncDecl: quals=None (at pp.c:20495)
        ParamList:  (at pp.c:20495)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20495)
            PtrDecl: quals=[] (at pp.c:20495)
              TypeDecl: declname='msg', quals=[] (at pp.c:20495)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='upperLen', quals=[], storage=[] (at pp.c:20495)
            TypeDecl: declname='upperLen', quals=[] (at pp.c:20495)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SerialPacketInfoActiveMessageP__Info__dataLinkLength', quals=[] (at pp.c:20495)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:20497)
      Return:  (at pp.c:20498)
        BinaryOp: op='+' (at pp.c:20498)
          ID: name='upperLen' (at pp.c:20498)
          UnaryOp: op='sizeof' (at pp.c:20498)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['serial_header_t'] (at None)
  FuncDef:  (at pp.c:20502)
    Decl: name='SerialDispatcherP__0__PacketInfo__default__dataLinkLength', quals=[], storage=['inline', 'static'] (at pp.c:20502)
      FuncDecl: quals=None (at pp.c:20502)
        ParamList:  (at pp.c:20502)
          Decl: name='id', quals=[], storage=[] (at pp.c:20502)
            TypeDecl: declname='id', quals=[] (at pp.c:20502)
              IdentifierType: names=['uart_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20502)
            PtrDecl: quals=[] (at pp.c:20502)
              TypeDecl: declname='msg', quals=[] (at pp.c:20502)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='upperLen', quals=[], storage=[] (at pp.c:20503)
            TypeDecl: declname='upperLen', quals=[] (at pp.c:20503)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__PacketInfo__default__dataLinkLength', quals=[] (at pp.c:20502)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:20505)
      Return:  (at pp.c:20506)
        Constant: type='int', value='0' (at pp.c:20506)
  FuncDef:  (at pp.c:20510)
    Decl: name='SerialDispatcherP__0__PacketInfo__dataLinkLength', quals=[], storage=['static', 'inline'] (at pp.c:20510)
      FuncDecl: quals=None (at pp.c:20510)
        ParamList:  (at pp.c:20510)
          Decl: name='arg_0x1026e8aa8', quals=[], storage=[] (at pp.c:20510)
            TypeDecl: declname='arg_0x1026e8aa8', quals=[] (at pp.c:20510)
              IdentifierType: names=['uart_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20510)
            PtrDecl: quals=[] (at pp.c:20510)
              TypeDecl: declname='msg', quals=[] (at pp.c:20510)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='upperLen', quals=[], storage=[] (at pp.c:20510)
            TypeDecl: declname='upperLen', quals=[] (at pp.c:20510)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__PacketInfo__dataLinkLength', quals=[] (at pp.c:20510)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:20510)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20512)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20512)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:20516)
        ID: name='arg_0x1026e8aa8' (at pp.c:20516)
        Compound:  (at pp.c:20516)
          Case:  (at pp.c:20518)
            ID: name='TOS_SERIAL_ACTIVE_MESSAGE_ID' (at pp.c:20518)
            Assignment: op='=' (at pp.c:20520)
              ID: name='__nesc_result' (at pp.c:20520)
              FuncCall:  (at None)
                ID: name='SerialPacketInfoActiveMessageP__Info__dataLinkLength' (at pp.c:20520)
                ExprList:  (at pp.c:20520)
                  ID: name='msg' (at pp.c:20520)
                  ID: name='upperLen' (at pp.c:20520)
          Break:  (at pp.c:20522)
          Default:  (at pp.c:20524)
            Assignment: op='=' (at pp.c:20526)
              ID: name='__nesc_result' (at pp.c:20526)
              FuncCall:  (at None)
                ID: name='SerialDispatcherP__0__PacketInfo__default__dataLinkLength' (at pp.c:20526)
                ExprList:  (at pp.c:20526)
                  ID: name='arg_0x1026e8aa8' (at pp.c:20526)
                  ID: name='msg' (at pp.c:20526)
                  ID: name='upperLen' (at pp.c:20526)
          Break:  (at pp.c:20528)
      Return:  (at pp.c:20534)
        ID: name='__nesc_result' (at pp.c:20534)
  FuncDef:  (at pp.c:20539)
    Decl: name='SerialDispatcherP__0__Send__send', quals=[], storage=['inline', 'static'] (at pp.c:20539)
      FuncDecl: quals=None (at pp.c:20539)
        ParamList:  (at pp.c:20539)
          Decl: name='id', quals=[], storage=[] (at pp.c:20539)
            TypeDecl: declname='id', quals=[] (at pp.c:20539)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20539)
            PtrDecl: quals=[] (at pp.c:20539)
              TypeDecl: declname='msg', quals=[] (at pp.c:20539)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:20539)
            TypeDecl: declname='len', quals=[] (at pp.c:20539)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__Send__send', quals=[] (at pp.c:20539)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20541)
      If:  (at pp.c:20542)
        BinaryOp: op='!=' (at pp.c:20542)
          ID: name='SerialDispatcherP__0__sendState' (at pp.c:20542)
          ID: name='SerialDispatcherP__0__SEND_STATE_IDLE' (at pp.c:20542)
        Compound:  (at pp.c:20542)
          Return:  (at pp.c:20543)
            ID: name='EBUSY' (at pp.c:20543)
      Compound:  (at pp.c:20546)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:20546)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:20546)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:20546)
        Compound:  (at pp.c:20548)
          Assignment: op='=' (at pp.c:20549)
            ID: name='SerialDispatcherP__0__sendIndex' (at pp.c:20549)
            FuncCall:  (at None)
              ID: name='SerialDispatcherP__0__PacketInfo__offset' (at pp.c:20549)
              ExprList:  (at pp.c:20549)
                ID: name='id' (at pp.c:20549)
          If:  (at pp.c:20550)
            BinaryOp: op='>' (at pp.c:20550)
              ID: name='SerialDispatcherP__0__sendIndex' (at pp.c:20550)
              UnaryOp: op='sizeof' (at pp.c:20550)
                Typename: quals=[] (at None)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['message_header_t'] (at None)
            Compound:  (at pp.c:20550)
              Compound:  (at pp.c:20551)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:20552)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:20552)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='ESIZE' (at pp.c:20554)
                Compound:  (at pp.c:20556)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:20558)
                    ExprList:  (at pp.c:20558)
                      ID: name='__nesc_atomic' (at pp.c:20558)
                  Return:  (at pp.c:20560)
                    ID: name='__nesc_temp' (at pp.c:20560)
          Assignment: op='=' (at pp.c:20565)
            ID: name='SerialDispatcherP__0__sendError' (at pp.c:20565)
            ID: name='SUCCESS' (at pp.c:20565)
          Assignment: op='=' (at pp.c:20566)
            ID: name='SerialDispatcherP__0__sendBuffer' (at pp.c:20566)
            Cast:  (at None)
              Typename: quals=[] (at None)
                PtrDecl: quals=[] (at pp.c:20566)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              ID: name='msg' (at pp.c:20566)
          Assignment: op='=' (at pp.c:20567)
            ID: name='SerialDispatcherP__0__sendState' (at pp.c:20567)
            ID: name='SerialDispatcherP__0__SEND_STATE_DATA' (at pp.c:20567)
          Assignment: op='=' (at pp.c:20568)
            ID: name='SerialDispatcherP__0__sendId' (at pp.c:20568)
            ID: name='id' (at pp.c:20568)
          Assignment: op='=' (at pp.c:20569)
            ID: name='SerialDispatcherP__0__sendCancelled' (at pp.c:20569)
            ID: name='FALSE' (at pp.c:20569)
          Assignment: op='=' (at pp.c:20576)
            ID: name='SerialDispatcherP__0__sendLen' (at pp.c:20576)
            BinaryOp: op='+' (at None)
              FuncCall:  (at None)
                ID: name='SerialDispatcherP__0__PacketInfo__dataLinkLength' (at pp.c:20576)
                ExprList:  (at pp.c:20576)
                  ID: name='id' (at pp.c:20576)
                  ID: name='msg' (at pp.c:20576)
                  ID: name='len' (at pp.c:20576)
              ID: name='SerialDispatcherP__0__sendIndex' (at pp.c:20576)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:20579)
          ExprList:  (at pp.c:20579)
            ID: name='__nesc_atomic' (at pp.c:20579)
      If:  (at pp.c:20580)
        BinaryOp: op='==' (at None)
          FuncCall:  (at None)
            ID: name='SerialDispatcherP__0__SendBytePacket__startSend' (at pp.c:20580)
            ExprList:  (at pp.c:20580)
              ID: name='id' (at pp.c:20580)
          ID: name='SUCCESS' (at pp.c:20580)
        Compound:  (at pp.c:20580)
          Return:  (at pp.c:20581)
            ID: name='SUCCESS' (at pp.c:20581)
        Compound:  (at pp.c:20583)
          Assignment: op='=' (at pp.c:20584)
            ID: name='SerialDispatcherP__0__sendState' (at pp.c:20584)
            ID: name='SerialDispatcherP__0__SEND_STATE_IDLE' (at pp.c:20584)
          Return:  (at pp.c:20585)
            ID: name='FAIL' (at pp.c:20585)
  FuncDef:  (at pp.c:20590)
    Decl: name='SerialActiveMessageP__0__SubSend__send', quals=[], storage=['static', 'inline'] (at pp.c:20590)
      FuncDecl: quals=None (at pp.c:20590)
        ParamList:  (at pp.c:20590)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20590)
            PtrDecl: quals=[] (at pp.c:20590)
              TypeDecl: declname='msg', quals=[] (at pp.c:20590)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:20590)
            TypeDecl: declname='len', quals=[] (at pp.c:20590)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SerialActiveMessageP__0__SubSend__send', quals=[] (at pp.c:20590)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20590)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20592)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20592)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20596)
        ID: name='__nesc_result' (at pp.c:20596)
        FuncCall:  (at None)
          ID: name='SerialDispatcherP__0__Send__send' (at pp.c:20596)
          ExprList:  (at pp.c:20596)
            ID: name='TOS_SERIAL_ACTIVE_MESSAGE_ID' (at pp.c:20596)
            ID: name='msg' (at pp.c:20596)
            ID: name='len' (at pp.c:20596)
      Return:  (at pp.c:20600)
        ID: name='__nesc_result' (at pp.c:20600)
  FuncDef:  (at pp.c:20605)
    Decl: name='SerialActiveMessageP__0__Packet__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:20605)
      FuncDecl: quals=None (at pp.c:20605)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialActiveMessageP__0__Packet__maxPayloadLength', quals=[] (at pp.c:20605)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:20607)
      Return:  (at pp.c:20608)
        Constant: type='int', value='28' (at pp.c:20608)
  FuncDef:  (at pp.c:20612)
    Decl: name='SerialActiveMessageP__0__AMSend__send', quals=[], storage=['inline', 'static'] (at pp.c:20612)
      FuncDecl: quals=None (at pp.c:20612)
        ParamList:  (at pp.c:20612)
          Decl: name='id', quals=[], storage=[] (at pp.c:20612)
            TypeDecl: declname='id', quals=[] (at pp.c:20612)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='dest', quals=[], storage=[] (at pp.c:20612)
            TypeDecl: declname='dest', quals=[] (at pp.c:20612)
              IdentifierType: names=['am_addr_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20613)
            PtrDecl: quals=[] (at pp.c:20613)
              TypeDecl: declname='msg', quals=[] (at pp.c:20613)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:20614)
            TypeDecl: declname='len', quals=[] (at pp.c:20614)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SerialActiveMessageP__0__AMSend__send', quals=[] (at pp.c:20612)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20616)
      Decl: name='header', quals=[], storage=[] (at pp.c:20617)
        PtrDecl: quals=[] (at pp.c:20617)
          TypeDecl: declname='header', quals=[] (at pp.c:20617)
            IdentifierType: names=['serial_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='SerialActiveMessageP__0__getHeader' (at pp.c:20617)
          ExprList:  (at pp.c:20617)
            ID: name='msg' (at pp.c:20617)
      If:  (at pp.c:20619)
        BinaryOp: op='>' (at pp.c:20619)
          ID: name='len' (at pp.c:20619)
          FuncCall:  (at None)
            ID: name='SerialActiveMessageP__0__Packet__maxPayloadLength' (at pp.c:20619)
        Compound:  (at pp.c:20619)
          Return:  (at pp.c:20620)
            ID: name='ESIZE' (at pp.c:20620)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint16' (at pp.c:20623)
        ExprList:  (at pp.c:20623)
          StructRef: type='.' (at pp.c:20623)
            StructRef: type='->' (at pp.c:20623)
              ID: name='header' (at pp.c:20623)
              ID: name='dest' (at pp.c:20623)
            ID: name='nxdata' (at pp.c:20623)
          ID: name='dest' (at pp.c:20623)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint8' (at pp.c:20629)
        ExprList:  (at pp.c:20629)
          StructRef: type='.' (at pp.c:20629)
            StructRef: type='->' (at pp.c:20629)
              ID: name='header' (at pp.c:20629)
              ID: name='type' (at pp.c:20629)
            ID: name='nxdata' (at pp.c:20629)
          ID: name='id' (at pp.c:20629)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint8' (at pp.c:20630)
        ExprList:  (at pp.c:20630)
          StructRef: type='.' (at pp.c:20630)
            StructRef: type='->' (at pp.c:20630)
              ID: name='header' (at pp.c:20630)
              ID: name='length' (at pp.c:20630)
            ID: name='nxdata' (at pp.c:20630)
          ID: name='len' (at pp.c:20630)
      Return:  (at pp.c:20632)
        FuncCall:  (at None)
          ID: name='SerialActiveMessageP__0__SubSend__send' (at pp.c:20632)
          ExprList:  (at pp.c:20632)
            ID: name='msg' (at pp.c:20632)
            ID: name='len' (at pp.c:20632)
  FuncDef:  (at pp.c:20636)
    Decl: name='BaseStationP__UartSend__send', quals=[], storage=['static', 'inline'] (at pp.c:20636)
      FuncDecl: quals=None (at pp.c:20636)
        ParamList:  (at pp.c:20636)
          Decl: name='arg_0x101594578', quals=[], storage=[] (at pp.c:20636)
            TypeDecl: declname='arg_0x101594578', quals=[] (at pp.c:20636)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='addr', quals=[], storage=[] (at pp.c:20636)
            TypeDecl: declname='addr', quals=[] (at pp.c:20636)
              IdentifierType: names=['am_addr_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20636)
            PtrDecl: quals=[] (at pp.c:20636)
              TypeDecl: declname='msg', quals=[] (at pp.c:20636)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:20636)
            TypeDecl: declname='len', quals=[] (at pp.c:20636)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='BaseStationP__UartSend__send', quals=[] (at pp.c:20636)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20636)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20638)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20638)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20642)
        ID: name='__nesc_result' (at pp.c:20642)
        FuncCall:  (at None)
          ID: name='SerialActiveMessageP__0__AMSend__send' (at pp.c:20642)
          ExprList:  (at pp.c:20642)
            ID: name='arg_0x101594578' (at pp.c:20642)
            ID: name='addr' (at pp.c:20642)
            ID: name='msg' (at pp.c:20642)
            ID: name='len' (at pp.c:20642)
      Return:  (at pp.c:20646)
        ID: name='__nesc_result' (at pp.c:20646)
  FuncDef:  (at pp.c:20651)
    Decl: name='SerialActiveMessageP__0__AMPacket__setGroup', quals=[], storage=['inline', 'static'] (at pp.c:20651)
      FuncDecl: quals=None (at pp.c:20651)
        ParamList:  (at pp.c:20651)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20651)
            PtrDecl: quals=[] (at pp.c:20651)
              TypeDecl: declname='msg', quals=[] (at pp.c:20651)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='group', quals=[], storage=[] (at pp.c:20651)
            TypeDecl: declname='group', quals=[] (at pp.c:20651)
              IdentifierType: names=['am_group_t'] (at None)
        TypeDecl: declname='SerialActiveMessageP__0__AMPacket__setGroup', quals=[] (at pp.c:20651)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20653)
      Decl: name='header', quals=[], storage=[] (at pp.c:20654)
        PtrDecl: quals=[] (at pp.c:20654)
          TypeDecl: declname='header', quals=[] (at pp.c:20654)
            IdentifierType: names=['serial_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='SerialActiveMessageP__0__getHeader' (at pp.c:20654)
          ExprList:  (at pp.c:20654)
            ID: name='msg' (at pp.c:20654)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint8' (at pp.c:20657)
        ExprList:  (at pp.c:20657)
          StructRef: type='.' (at pp.c:20657)
            StructRef: type='->' (at pp.c:20657)
              ID: name='header' (at pp.c:20657)
              ID: name='group' (at pp.c:20657)
            ID: name='nxdata' (at pp.c:20657)
          ID: name='group' (at pp.c:20657)
  FuncDef:  (at pp.c:20661)
    Decl: name='BaseStationP__UartAMPacket__setGroup', quals=[], storage=['static', 'inline'] (at pp.c:20661)
      FuncDecl: quals=None (at pp.c:20661)
        ParamList:  (at pp.c:20661)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:20661)
            PtrDecl: quals=[] (at pp.c:20661)
              TypeDecl: declname='amsg', quals=[] (at pp.c:20661)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='grp', quals=[], storage=[] (at pp.c:20661)
            TypeDecl: declname='grp', quals=[] (at pp.c:20661)
              IdentifierType: names=['am_group_t'] (at None)
        TypeDecl: declname='BaseStationP__UartAMPacket__setGroup', quals=[] (at pp.c:20661)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20661)
      FuncCall:  (at None)
        ID: name='SerialActiveMessageP__0__AMPacket__setGroup' (at pp.c:20663)
        ExprList:  (at pp.c:20663)
          ID: name='amsg' (at pp.c:20663)
          ID: name='grp' (at pp.c:20663)
  FuncDef:  (at pp.c:20668)
    Decl: name='SerialActiveMessageP__0__AMPacket__setSource', quals=[], storage=['inline', 'static'] (at pp.c:20668)
      FuncDecl: quals=None (at pp.c:20668)
        ParamList:  (at pp.c:20668)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:20668)
            PtrDecl: quals=[] (at pp.c:20668)
              TypeDecl: declname='amsg', quals=[] (at pp.c:20668)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='addr', quals=[], storage=[] (at pp.c:20668)
            TypeDecl: declname='addr', quals=[] (at pp.c:20668)
              IdentifierType: names=['am_addr_t'] (at None)
        TypeDecl: declname='SerialActiveMessageP__0__AMPacket__setSource', quals=[] (at pp.c:20668)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20670)
      Decl: name='header', quals=[], storage=[] (at pp.c:20671)
        PtrDecl: quals=[] (at pp.c:20671)
          TypeDecl: declname='header', quals=[] (at pp.c:20671)
            IdentifierType: names=['serial_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='SerialActiveMessageP__0__getHeader' (at pp.c:20671)
          ExprList:  (at pp.c:20671)
            ID: name='amsg' (at pp.c:20671)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint16' (at pp.c:20674)
        ExprList:  (at pp.c:20674)
          StructRef: type='.' (at pp.c:20674)
            StructRef: type='->' (at pp.c:20674)
              ID: name='header' (at pp.c:20674)
              ID: name='src' (at pp.c:20674)
            ID: name='nxdata' (at pp.c:20674)
          ID: name='addr' (at pp.c:20674)
  FuncDef:  (at pp.c:20678)
    Decl: name='BaseStationP__UartAMPacket__setSource', quals=[], storage=['static', 'inline'] (at pp.c:20678)
      FuncDecl: quals=None (at pp.c:20678)
        ParamList:  (at pp.c:20678)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:20678)
            PtrDecl: quals=[] (at pp.c:20678)
              TypeDecl: declname='amsg', quals=[] (at pp.c:20678)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='addr', quals=[], storage=[] (at pp.c:20678)
            TypeDecl: declname='addr', quals=[] (at pp.c:20678)
              IdentifierType: names=['am_addr_t'] (at None)
        TypeDecl: declname='BaseStationP__UartAMPacket__setSource', quals=[] (at pp.c:20678)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20678)
      FuncCall:  (at None)
        ID: name='SerialActiveMessageP__0__AMPacket__setSource' (at pp.c:20680)
        ExprList:  (at pp.c:20680)
          ID: name='amsg' (at pp.c:20680)
          ID: name='addr' (at pp.c:20680)
  FuncDef:  (at pp.c:20685)
    Decl: name='SerialActiveMessageP__0__Packet__clear', quals=[], storage=['inline', 'static'] (at pp.c:20685)
      FuncDecl: quals=None (at pp.c:20685)
        ParamList:  (at pp.c:20685)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20685)
            PtrDecl: quals=[] (at pp.c:20685)
              TypeDecl: declname='msg', quals=[] (at pp.c:20685)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='SerialActiveMessageP__0__Packet__clear', quals=[] (at pp.c:20685)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20687)
      FuncCall:  (at None)
        ID: name='memset' (at pp.c:20688)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='SerialActiveMessageP__0__getHeader' (at pp.c:20688)
            ExprList:  (at pp.c:20688)
              ID: name='msg' (at pp.c:20688)
          Constant: type='int', value='0' (at pp.c:20688)
          UnaryOp: op='sizeof' (at pp.c:20688)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['serial_header_t'] (at None)
      Return:  (at pp.c:20689)
  FuncDef:  (at pp.c:20693)
    Decl: name='BaseStationP__UartPacket__clear', quals=[], storage=['static', 'inline'] (at pp.c:20693)
      FuncDecl: quals=None (at pp.c:20693)
        ParamList:  (at pp.c:20693)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20693)
            PtrDecl: quals=[] (at pp.c:20693)
              TypeDecl: declname='msg', quals=[] (at pp.c:20693)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='BaseStationP__UartPacket__clear', quals=[] (at pp.c:20693)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20693)
      FuncCall:  (at None)
        ID: name='SerialActiveMessageP__0__Packet__clear' (at pp.c:20695)
        ExprList:  (at pp.c:20695)
          ID: name='msg' (at pp.c:20695)
  FuncDef:  (at pp.c:20700)
    Decl: name='CC2420ActiveMessageP__AMPacket__group', quals=[], storage=['inline', 'static'] (at pp.c:20700)
      FuncDecl: quals=None (at pp.c:20700)
        ParamList:  (at pp.c:20700)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:20700)
            PtrDecl: quals=[] (at pp.c:20700)
              TypeDecl: declname='amsg', quals=[] (at pp.c:20700)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__AMPacket__group', quals=[] (at pp.c:20700)
          IdentifierType: names=['am_group_t'] (at None)
    Compound:  (at pp.c:20702)
      Return:  (at pp.c:20703)
        FuncCall:  (at None)
          ID: name='__nesc_ntoh_leuint16' (at pp.c:20703)
          ExprList:  (at None)
            StructRef: type='.' (at None)
              StructRef: type='->' (at None)
                FuncCall:  (at None)
                  ID: name='CC2420ActiveMessageP__CC2420PacketBody__getHeader' (at pp.c:20703)
                  ExprList:  (at pp.c:20703)
                    ID: name='amsg' (at pp.c:20703)
                ID: name='destpan' (at pp.c:20703)
              ID: name='nxdata' (at pp.c:20703)
  FuncDef:  (at pp.c:20707)
    Decl: name='BaseStationP__RadioAMPacket__group', quals=[], storage=['static', 'inline'] (at pp.c:20707)
      FuncDecl: quals=None (at pp.c:20707)
        ParamList:  (at pp.c:20707)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:20707)
            PtrDecl: quals=[] (at pp.c:20707)
              TypeDecl: declname='amsg', quals=[] (at pp.c:20707)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='BaseStationP__RadioAMPacket__group', quals=[] (at pp.c:20707)
          IdentifierType: names=['am_group_t'] (at None)
    Compound:  (at pp.c:20707)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20709)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20709)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20713)
        ID: name='__nesc_result' (at pp.c:20713)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__AMPacket__group' (at pp.c:20713)
          ExprList:  (at pp.c:20713)
            ID: name='amsg' (at pp.c:20713)
      Return:  (at pp.c:20717)
        ID: name='__nesc_result' (at pp.c:20717)
  FuncDef:  (at pp.c:20722)
    Decl: name='CC2420ActiveMessageP__AMPacket__source', quals=[], storage=['inline', 'static'] (at pp.c:20722)
      FuncDecl: quals=None (at pp.c:20722)
        ParamList:  (at pp.c:20722)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:20722)
            PtrDecl: quals=[] (at pp.c:20722)
              TypeDecl: declname='amsg', quals=[] (at pp.c:20722)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__AMPacket__source', quals=[] (at pp.c:20722)
          IdentifierType: names=['am_addr_t'] (at None)
    Compound:  (at pp.c:20724)
      Decl: name='header', quals=[], storage=[] (at pp.c:20725)
        PtrDecl: quals=[] (at pp.c:20725)
          TypeDecl: declname='header', quals=[] (at pp.c:20725)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__CC2420PacketBody__getHeader' (at pp.c:20725)
          ExprList:  (at pp.c:20725)
            ID: name='amsg' (at pp.c:20725)
      Return:  (at pp.c:20728)
        FuncCall:  (at None)
          ID: name='__nesc_ntoh_leuint16' (at pp.c:20728)
          ExprList:  (at pp.c:20728)
            StructRef: type='.' (at pp.c:20728)
              StructRef: type='->' (at pp.c:20728)
                ID: name='header' (at pp.c:20728)
                ID: name='src' (at pp.c:20728)
              ID: name='nxdata' (at pp.c:20728)
  FuncDef:  (at pp.c:20732)
    Decl: name='BaseStationP__RadioAMPacket__source', quals=[], storage=['static', 'inline'] (at pp.c:20732)
      FuncDecl: quals=None (at pp.c:20732)
        ParamList:  (at pp.c:20732)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:20732)
            PtrDecl: quals=[] (at pp.c:20732)
              TypeDecl: declname='amsg', quals=[] (at pp.c:20732)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='BaseStationP__RadioAMPacket__source', quals=[] (at pp.c:20732)
          IdentifierType: names=['am_addr_t'] (at None)
    Compound:  (at pp.c:20732)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20734)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20734)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20738)
        ID: name='__nesc_result' (at pp.c:20738)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__AMPacket__source' (at pp.c:20738)
          ExprList:  (at pp.c:20738)
            ID: name='amsg' (at pp.c:20738)
      Return:  (at pp.c:20742)
        ID: name='__nesc_result' (at pp.c:20742)
  FuncDef:  (at pp.c:20747)
    Decl: name='BaseStationP__RadioAMPacket__destination', quals=[], storage=['static', 'inline'] (at pp.c:20747)
      FuncDecl: quals=None (at pp.c:20747)
        ParamList:  (at pp.c:20747)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:20747)
            PtrDecl: quals=[] (at pp.c:20747)
              TypeDecl: declname='amsg', quals=[] (at pp.c:20747)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='BaseStationP__RadioAMPacket__destination', quals=[] (at pp.c:20747)
          IdentifierType: names=['am_addr_t'] (at None)
    Compound:  (at pp.c:20747)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20749)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20749)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20753)
        ID: name='__nesc_result' (at pp.c:20753)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__AMPacket__destination' (at pp.c:20753)
          ExprList:  (at pp.c:20753)
            ID: name='amsg' (at pp.c:20753)
      Return:  (at pp.c:20757)
        ID: name='__nesc_result' (at pp.c:20757)
  FuncDef:  (at pp.c:20762)
    Decl: name='BaseStationP__RadioAMPacket__type', quals=[], storage=['static', 'inline'] (at pp.c:20762)
      FuncDecl: quals=None (at pp.c:20762)
        ParamList:  (at pp.c:20762)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:20762)
            PtrDecl: quals=[] (at pp.c:20762)
              TypeDecl: declname='amsg', quals=[] (at pp.c:20762)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='BaseStationP__RadioAMPacket__type', quals=[] (at pp.c:20762)
          IdentifierType: names=['am_id_t'] (at None)
    Compound:  (at pp.c:20762)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20764)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20764)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20768)
        ID: name='__nesc_result' (at pp.c:20768)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__AMPacket__type' (at pp.c:20768)
          ExprList:  (at pp.c:20768)
            ID: name='amsg' (at pp.c:20768)
      Return:  (at pp.c:20772)
        ID: name='__nesc_result' (at pp.c:20772)
  FuncDef:  (at pp.c:20777)
    Decl: name='CC2420ActiveMessageP__Packet__payloadLength', quals=[], storage=['inline', 'static'] (at pp.c:20777)
      FuncDecl: quals=None (at pp.c:20777)
        ParamList:  (at pp.c:20777)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20777)
            PtrDecl: quals=[] (at pp.c:20777)
              TypeDecl: declname='msg', quals=[] (at pp.c:20777)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__Packet__payloadLength', quals=[] (at pp.c:20777)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:20779)
      Return:  (at pp.c:20780)
        BinaryOp: op='-' (at None)
          FuncCall:  (at None)
            ID: name='__nesc_ntoh_leuint8' (at pp.c:20780)
            ExprList:  (at None)
              StructRef: type='.' (at None)
                StructRef: type='->' (at None)
                  FuncCall:  (at None)
                    ID: name='CC2420ActiveMessageP__CC2420PacketBody__getHeader' (at pp.c:20780)
                    ExprList:  (at pp.c:20780)
                      ID: name='msg' (at pp.c:20780)
                  ID: name='length' (at pp.c:20780)
                ID: name='nxdata' (at pp.c:20780)
          ID: name='CC2420_SIZE' (at pp.c:20780)
  FuncDef:  (at pp.c:20784)
    Decl: name='BaseStationP__RadioPacket__payloadLength', quals=[], storage=['static', 'inline'] (at pp.c:20784)
      FuncDecl: quals=None (at pp.c:20784)
        ParamList:  (at pp.c:20784)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20784)
            PtrDecl: quals=[] (at pp.c:20784)
              TypeDecl: declname='msg', quals=[] (at pp.c:20784)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='BaseStationP__RadioPacket__payloadLength', quals=[] (at pp.c:20784)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:20784)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20786)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20786)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20790)
        ID: name='__nesc_result' (at pp.c:20790)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__Packet__payloadLength' (at pp.c:20790)
          ExprList:  (at pp.c:20790)
            ID: name='msg' (at pp.c:20790)
      Return:  (at pp.c:20794)
        ID: name='__nesc_result' (at pp.c:20794)
  FuncDef:  (at pp.c:20799)
    Decl: name='BaseStationP__uartSendTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:20799)
      FuncDecl: quals=None (at pp.c:20799)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BaseStationP__uartSendTask__runTask', quals=[] (at pp.c:20799)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20801)
      Decl: name='len', quals=[], storage=[] (at pp.c:20802)
        TypeDecl: declname='len', quals=[] (at pp.c:20802)
          IdentifierType: names=['uint8_t'] (at None)
      Decl: name='id', quals=[], storage=[] (at pp.c:20803)
        TypeDecl: declname='id', quals=[] (at pp.c:20803)
          IdentifierType: names=['am_id_t'] (at None)
      Decl: name='addr', quals=[], storage=[] (at pp.c:20804)
        TypeDecl: declname='addr', quals=[] (at pp.c:20804)
          IdentifierType: names=['am_addr_t'] (at None)
      Decl: name='src', quals=[], storage=[] (at pp.c:20806)
        TypeDecl: declname='src', quals=[] (at pp.c:20806)
          IdentifierType: names=['am_addr_t'] (at None)
      Decl: name='msg', quals=[], storage=[] (at pp.c:20807)
        PtrDecl: quals=[] (at pp.c:20807)
          TypeDecl: declname='msg', quals=[] (at pp.c:20807)
            IdentifierType: names=['message_t'] (at None)
      Decl: name='grp', quals=[], storage=[] (at pp.c:20808)
        TypeDecl: declname='grp', quals=[] (at pp.c:20808)
          IdentifierType: names=['am_group_t'] (at None)
      Compound:  (at pp.c:20811)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:20811)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:20811)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:20811)
        If:  (at pp.c:20812)
          BinaryOp: op='&&' (at pp.c:20812)
            BinaryOp: op='==' (at pp.c:20812)
              ID: name='BaseStationP__uartIn' (at pp.c:20812)
              ID: name='BaseStationP__uartOut' (at pp.c:20812)
            UnaryOp: op='!' (at pp.c:20812)
              ID: name='BaseStationP__uartFull' (at pp.c:20812)
          Compound:  (at pp.c:20813)
            Assignment: op='=' (at pp.c:20814)
              ID: name='BaseStationP__uartBusy' (at pp.c:20814)
              ID: name='FALSE' (at pp.c:20814)
            Compound:  (at pp.c:20815)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_end' (at pp.c:20817)
                ExprList:  (at pp.c:20817)
                  ID: name='__nesc_atomic' (at pp.c:20817)
              Return:  (at pp.c:20819)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:20823)
          ExprList:  (at pp.c:20823)
            ID: name='__nesc_atomic' (at pp.c:20823)
      Assignment: op='=' (at pp.c:20824)
        ID: name='msg' (at pp.c:20824)
        ArrayRef:  (at pp.c:20824)
          ID: name='BaseStationP__uartQueue' (at pp.c:20824)
          ID: name='BaseStationP__uartOut' (at pp.c:20824)
      Assignment: op='=' (at pp.c:20825)
        ID: name='BaseStationP__tmpLen' (at pp.c:20825)
        Assignment: op='=' (at pp.c:20825)
          ID: name='len' (at pp.c:20825)
          FuncCall:  (at None)
            ID: name='BaseStationP__RadioPacket__payloadLength' (at pp.c:20825)
            ExprList:  (at pp.c:20825)
              ID: name='msg' (at pp.c:20825)
      Assignment: op='=' (at pp.c:20826)
        ID: name='id' (at pp.c:20826)
        FuncCall:  (at None)
          ID: name='BaseStationP__RadioAMPacket__type' (at pp.c:20826)
          ExprList:  (at pp.c:20826)
            ID: name='msg' (at pp.c:20826)
      Assignment: op='=' (at pp.c:20827)
        ID: name='addr' (at pp.c:20827)
        FuncCall:  (at None)
          ID: name='BaseStationP__RadioAMPacket__destination' (at pp.c:20827)
          ExprList:  (at pp.c:20827)
            ID: name='msg' (at pp.c:20827)
      Assignment: op='=' (at pp.c:20828)
        ID: name='src' (at pp.c:20828)
        FuncCall:  (at None)
          ID: name='BaseStationP__RadioAMPacket__source' (at pp.c:20828)
          ExprList:  (at pp.c:20828)
            ID: name='msg' (at pp.c:20828)
      Assignment: op='=' (at pp.c:20829)
        ID: name='grp' (at pp.c:20829)
        FuncCall:  (at None)
          ID: name='BaseStationP__RadioAMPacket__group' (at pp.c:20829)
          ExprList:  (at pp.c:20829)
            ID: name='msg' (at pp.c:20829)
      FuncCall:  (at None)
        ID: name='BaseStationP__UartPacket__clear' (at pp.c:20830)
        ExprList:  (at pp.c:20830)
          ID: name='msg' (at pp.c:20830)
      FuncCall:  (at None)
        ID: name='BaseStationP__UartAMPacket__setSource' (at pp.c:20831)
        ExprList:  (at pp.c:20831)
          ID: name='msg' (at pp.c:20831)
          ID: name='src' (at pp.c:20831)
      FuncCall:  (at None)
        ID: name='BaseStationP__UartAMPacket__setGroup' (at pp.c:20832)
        ExprList:  (at pp.c:20832)
          ID: name='msg' (at pp.c:20832)
          ID: name='grp' (at pp.c:20832)
      If:  (at pp.c:20834)
        BinaryOp: op='==' (at None)
          FuncCall:  (at None)
            ID: name='BaseStationP__UartSend__send' (at pp.c:20834)
            ExprList:  (at pp.c:20834)
              ID: name='id' (at pp.c:20834)
              ID: name='addr' (at pp.c:20834)
              ArrayRef:  (at pp.c:20834)
                ID: name='BaseStationP__uartQueue' (at pp.c:20834)
                ID: name='BaseStationP__uartOut' (at pp.c:20834)
              ID: name='len' (at pp.c:20834)
          ID: name='SUCCESS' (at pp.c:20834)
        Compound:  (at pp.c:20834)
          FuncCall:  (at None)
            ID: name='BaseStationP__Leds__led1Toggle' (at pp.c:20835)
        Compound:  (at pp.c:20837)
          FuncCall:  (at None)
            ID: name='BaseStationP__failBlink' (at pp.c:20838)
          FuncCall:  (at None)
            ID: name='BaseStationP__uartSendTask__postTask' (at pp.c:20839)
  FuncDef:  (at pp.c:20844)
    Decl: name='ActiveMessageAddressC__ActiveMessageAddress__amGroup', quals=[], storage=['inline', 'static'] (at pp.c:20844)
      FuncDecl: quals=None (at pp.c:20844)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ActiveMessageAddressC__ActiveMessageAddress__amGroup', quals=[] (at pp.c:20844)
          IdentifierType: names=['am_group_t'] (at None)
    Compound:  (at pp.c:20846)
      Decl: name='myGroup', quals=[], storage=[] (at pp.c:20847)
        TypeDecl: declname='myGroup', quals=[] (at pp.c:20847)
          IdentifierType: names=['am_group_t'] (at None)
      Assignment: op='=' (at pp.c:20851)
        ID: name='myGroup' (at pp.c:20851)
        ID: name='ActiveMessageAddressC__group' (at pp.c:20851)
      Return:  (at pp.c:20852)
        ID: name='myGroup' (at pp.c:20852)
  FuncDef:  (at pp.c:20856)
    Decl: name='CC2420ControlP__ActiveMessageAddress__amGroup', quals=[], storage=['static', 'inline'] (at pp.c:20856)
      FuncDecl: quals=None (at pp.c:20856)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__ActiveMessageAddress__amGroup', quals=[] (at pp.c:20856)
          IdentifierType: names=['am_group_t'] (at None)
    Compound:  (at pp.c:20856)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20858)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20858)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20862)
        ID: name='__nesc_result' (at pp.c:20862)
        FuncCall:  (at None)
          ID: name='ActiveMessageAddressC__ActiveMessageAddress__amGroup' (at pp.c:20862)
      Return:  (at pp.c:20866)
        ID: name='__nesc_result' (at pp.c:20866)
  FuncDef:  (at pp.c:20871)
    Decl: name='CC2420ControlP__ActiveMessageAddress__amAddress', quals=[], storage=['static', 'inline'] (at pp.c:20871)
      FuncDecl: quals=None (at pp.c:20871)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__ActiveMessageAddress__amAddress', quals=[] (at pp.c:20871)
          IdentifierType: names=['am_addr_t'] (at None)
    Compound:  (at pp.c:20871)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20873)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20873)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20877)
        ID: name='__nesc_result' (at pp.c:20877)
        FuncCall:  (at None)
          ID: name='ActiveMessageAddressC__ActiveMessageAddress__amAddress' (at pp.c:20877)
      Return:  (at pp.c:20881)
        ID: name='__nesc_result' (at pp.c:20881)
  FuncDef:  (at pp.c:20886)
    Decl: name='HplMsp430GeneralIOP__29__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:20886)
      FuncDecl: quals=None (at pp.c:20886)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__29__IO__makeOutput', quals=[] (at pp.c:20886)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20888)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:20891)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='30U' (at pp.c:20891)
        BinaryOp: op='<<' (at pp.c:20891)
          Constant: type='int', value='0x01' (at pp.c:20891)
          Constant: type='int', value='5' (at pp.c:20891)
  FuncDef:  (at pp.c:20895)
    Decl: name='Msp430GpioC__9__HplGeneralIO__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:20895)
      FuncDecl: quals=None (at pp.c:20895)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__9__HplGeneralIO__makeOutput', quals=[] (at pp.c:20895)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20895)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__29__IO__makeOutput' (at pp.c:20897)
  FuncDef:  (at pp.c:20902)
    Decl: name='Msp430GpioC__9__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:20902)
      FuncDecl: quals=None (at pp.c:20902)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__9__GeneralIO__makeOutput', quals=[] (at pp.c:20902)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20904)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__9__HplGeneralIO__makeOutput' (at pp.c:20906)
  FuncDef:  (at pp.c:20910)
    Decl: name='CC2420ControlP__VREN__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:20910)
      FuncDecl: quals=None (at pp.c:20910)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__VREN__makeOutput', quals=[] (at pp.c:20910)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20910)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__9__GeneralIO__makeOutput' (at pp.c:20912)
  FuncDef:  (at pp.c:20917)
    Decl: name='HplMsp430GeneralIOP__30__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:20917)
      FuncDecl: quals=None (at pp.c:20917)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__30__IO__makeOutput', quals=[] (at pp.c:20917)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20919)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:20922)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='30U' (at pp.c:20922)
        BinaryOp: op='<<' (at pp.c:20922)
          Constant: type='int', value='0x01' (at pp.c:20922)
          Constant: type='int', value='6' (at pp.c:20922)
  FuncDef:  (at pp.c:20926)
    Decl: name='Msp430GpioC__7__HplGeneralIO__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:20926)
      FuncDecl: quals=None (at pp.c:20926)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__7__HplGeneralIO__makeOutput', quals=[] (at pp.c:20926)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20926)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__30__IO__makeOutput' (at pp.c:20928)
  FuncDef:  (at pp.c:20933)
    Decl: name='Msp430GpioC__7__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:20933)
      FuncDecl: quals=None (at pp.c:20933)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__7__GeneralIO__makeOutput', quals=[] (at pp.c:20933)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20935)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__7__HplGeneralIO__makeOutput' (at pp.c:20937)
  FuncDef:  (at pp.c:20941)
    Decl: name='CC2420ControlP__RSTN__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:20941)
      FuncDecl: quals=None (at pp.c:20941)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__RSTN__makeOutput', quals=[] (at pp.c:20941)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20941)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__7__GeneralIO__makeOutput' (at pp.c:20943)
  FuncDef:  (at pp.c:20948)
    Decl: name='HplMsp430GeneralIOP__26__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:20948)
      FuncDecl: quals=None (at pp.c:20948)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__26__IO__makeOutput', quals=[] (at pp.c:20948)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20950)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:20953)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='30U' (at pp.c:20953)
        BinaryOp: op='<<' (at pp.c:20953)
          Constant: type='int', value='0x01' (at pp.c:20953)
          Constant: type='int', value='2' (at pp.c:20953)
  FuncDef:  (at pp.c:20957)
    Decl: name='Msp430GpioC__4__HplGeneralIO__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:20957)
      FuncDecl: quals=None (at pp.c:20957)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__4__HplGeneralIO__makeOutput', quals=[] (at pp.c:20957)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20957)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__26__IO__makeOutput' (at pp.c:20959)
  FuncDef:  (at pp.c:20964)
    Decl: name='Msp430GpioC__4__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:20964)
      FuncDecl: quals=None (at pp.c:20964)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__4__GeneralIO__makeOutput', quals=[] (at pp.c:20964)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20966)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__4__HplGeneralIO__makeOutput' (at pp.c:20968)
  FuncDef:  (at pp.c:20972)
    Decl: name='CC2420ControlP__CSN__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:20972)
      FuncDecl: quals=None (at pp.c:20972)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CSN__makeOutput', quals=[] (at pp.c:20972)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20972)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__4__GeneralIO__makeOutput' (at pp.c:20974)
  FuncDef:  (at pp.c:20979)
    Decl: name='CC2420ControlP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:20979)
      FuncDecl: quals=None (at pp.c:20979)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__Init__init', quals=[] (at pp.c:20979)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20981)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CSN__makeOutput' (at pp.c:20982)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__RSTN__makeOutput' (at pp.c:20983)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__VREN__makeOutput' (at pp.c:20984)
      Assignment: op='=' (at pp.c:20986)
        ID: name='CC2420ControlP__m_short_addr' (at pp.c:20986)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__ActiveMessageAddress__amAddress' (at pp.c:20986)
      Assignment: op='=' (at pp.c:20987)
        ID: name='CC2420ControlP__m_ext_addr' (at pp.c:20987)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__LocalIeeeEui64__getId' (at pp.c:20987)
      Assignment: op='=' (at pp.c:20988)
        ID: name='CC2420ControlP__m_pan' (at pp.c:20988)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__ActiveMessageAddress__amGroup' (at pp.c:20988)
      Assignment: op='=' (at pp.c:20989)
        ID: name='CC2420ControlP__m_tx_power' (at pp.c:20989)
        Constant: type='int', value='31' (at pp.c:20989)
      Assignment: op='=' (at pp.c:20990)
        ID: name='CC2420ControlP__m_channel' (at pp.c:20990)
        Constant: type='int', value='26' (at pp.c:20990)
      Assignment: op='=' (at pp.c:20994)
        ID: name='CC2420ControlP__addressRecognition' (at pp.c:20994)
        ID: name='FALSE' (at pp.c:20994)
      Assignment: op='=' (at pp.c:21002)
        ID: name='CC2420ControlP__hwAddressRecognition' (at pp.c:21002)
        ID: name='FALSE' (at pp.c:21002)
      Assignment: op='=' (at pp.c:21007)
        ID: name='CC2420ControlP__autoAckEnabled' (at pp.c:21007)
        ID: name='FALSE' (at pp.c:21007)
      Assignment: op='=' (at pp.c:21016)
        ID: name='CC2420ControlP__hwAutoAckDefault' (at pp.c:21016)
        ID: name='FALSE' (at pp.c:21016)
      Return:  (at pp.c:21020)
        ID: name='SUCCESS' (at pp.c:21020)
  FuncDef:  (at pp.c:21024)
    Decl: name='StateImplP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:21024)
      FuncDecl: quals=None (at pp.c:21024)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='StateImplP__Init__init', quals=[] (at pp.c:21024)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21026)
      Decl: name='i', quals=[], storage=[] (at pp.c:21027)
        TypeDecl: declname='i', quals=[] (at pp.c:21027)
          IdentifierType: names=['int'] (at None)
      For:  (at pp.c:21030)
        Assignment: op='=' (at pp.c:21030)
          ID: name='i' (at pp.c:21030)
          Constant: type='int', value='0' (at pp.c:21030)
        BinaryOp: op='<' (at pp.c:21030)
          ID: name='i' (at pp.c:21030)
          Constant: type='int', value='4U' (at pp.c:21030)
        UnaryOp: op='p++' (at pp.c:21030)
          ID: name='i' (at pp.c:21030)
        Compound:  (at pp.c:21030)
          Assignment: op='=' (at pp.c:21031)
            ArrayRef:  (at pp.c:21031)
              ID: name='StateImplP__state' (at pp.c:21031)
              ID: name='i' (at pp.c:21031)
            ID: name='StateImplP__S_IDLE' (at pp.c:21031)
      Return:  (at pp.c:21033)
        ID: name='SUCCESS' (at pp.c:21033)
  FuncDef:  (at pp.c:21037)
    Decl: name='FcfsResourceQueueC__1__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:21037)
      FuncDecl: quals=None (at pp.c:21037)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__1__Init__init', quals=[] (at pp.c:21037)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21039)
      FuncCall:  (at None)
        ID: name='memset' (at pp.c:21040)
        ExprList:  (at pp.c:21040)
          ID: name='FcfsResourceQueueC__1__resQ' (at pp.c:21040)
          ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:21040)
          UnaryOp: op='sizeof' (at pp.c:21040)
            ID: name='FcfsResourceQueueC__1__resQ' (at pp.c:21040)
      Return:  (at pp.c:21041)
        ID: name='SUCCESS' (at pp.c:21041)
  FuncDef:  (at pp.c:21045)
    Decl: name='Msp430TimerCapComP__3__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:21045)
      FuncDecl: quals=None (at pp.c:21045)
        ParamList:  (at pp.c:21045)
          Decl: name='x', quals=[], storage=[] (at pp.c:21045)
            TypeDecl: declname='x', quals=[] (at pp.c:21045)
              IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__CC2int', quals=[] (at pp.c:21045)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:21047)
      Decl: name='c', quals=[], storage=[] (at pp.c:21056)
        TypeDecl: declname='c', quals=[] (at pp.c:21056)
          Union: name='Msp430TimerCapComP__3____nesc_unnamed4391', packed=False (at pp.c:21049)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:21051)
                IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:21053)
                IdentifierType: names=['uint16_t'] (at None)
        ExprList:  (at pp.c:21056)
          Assignment: op='=' (at pp.c:21056)
            StructRef: type='.' (at pp.c:21056)
              ID: name='f' (at pp.c:21056)
            ID: name='x' (at pp.c:21056)
      Return:  (at pp.c:21059)
        StructRef: type='.' (at pp.c:21059)
          ID: name='c' (at pp.c:21059)
          ID: name='t' (at pp.c:21059)
  FuncDef:  (at pp.c:21062)
    Decl: name='Msp430TimerCapComP__3__compareControl', quals=[], storage=['inline', 'static'] (at pp.c:21062)
      FuncDecl: quals=None (at pp.c:21062)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__compareControl', quals=[] (at pp.c:21062)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:21063)
      Decl: name='x', quals=[], storage=[] (at pp.c:21064)
        TypeDecl: declname='x', quals=[] (at pp.c:21064)
          IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
        ExprList:  (at pp.c:21065)
          Assignment: op='=' (at pp.c:21065)
            StructRef: type='.' (at pp.c:21065)
              ID: name='cm' (at pp.c:21065)
            Constant: type='int', value='1' (at pp.c:21065)
          Assignment: op='=' (at pp.c:21066)
            StructRef: type='.' (at pp.c:21066)
              ID: name='ccis' (at pp.c:21066)
            Constant: type='int', value='0' (at pp.c:21066)
          Assignment: op='=' (at pp.c:21067)
            StructRef: type='.' (at pp.c:21067)
              ID: name='clld' (at pp.c:21067)
            Constant: type='int', value='0' (at pp.c:21067)
          Assignment: op='=' (at pp.c:21068)
            StructRef: type='.' (at pp.c:21068)
              ID: name='cap' (at pp.c:21068)
            Constant: type='int', value='0' (at pp.c:21068)
          Assignment: op='=' (at pp.c:21069)
            StructRef: type='.' (at pp.c:21069)
              ID: name='ccie' (at pp.c:21069)
            Constant: type='int', value='0' (at pp.c:21069)
      Return:  (at pp.c:21071)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__3__CC2int' (at pp.c:21071)
          ExprList:  (at pp.c:21071)
            ID: name='x' (at pp.c:21071)
  FuncDef:  (at pp.c:21075)
    Decl: name='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[], storage=['inline', 'static'] (at pp.c:21075)
      FuncDecl: quals=None (at pp.c:21075)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[] (at pp.c:21075)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21076)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:21077)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='386U' (at pp.c:21077)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__3__compareControl' (at pp.c:21077)
  FuncDef:  (at pp.c:21081)
    Decl: name='Msp430AlarmC__0__Msp430TimerControl__setControlAsCompare', quals=[], storage=['static', 'inline'] (at pp.c:21081)
      FuncDecl: quals=None (at pp.c:21081)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__setControlAsCompare', quals=[] (at pp.c:21081)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21081)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Control__setControlAsCompare' (at pp.c:21083)
  FuncDef:  (at pp.c:21088)
    Decl: name='Msp430AlarmC__0__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:21088)
      FuncDecl: quals=None (at pp.c:21088)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Init__init', quals=[] (at pp.c:21088)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21089)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430TimerControl__disableEvents' (at pp.c:21090)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430TimerControl__setControlAsCompare' (at pp.c:21091)
      Return:  (at pp.c:21092)
        ID: name='SUCCESS' (at pp.c:21092)
  FuncDef:  (at pp.c:21096)
    Decl: name='HplMsp430GeneralIOP__25__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:21096)
      FuncDecl: quals=None (at pp.c:21096)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__25__IO__makeInput', quals=[] (at pp.c:21096)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21098)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:21101)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='30U' (at pp.c:21101)
        UnaryOp: op='~' (at pp.c:21101)
          BinaryOp: op='<<' (at pp.c:21101)
            Constant: type='int', value='0x01' (at pp.c:21101)
            Constant: type='int', value='1' (at pp.c:21101)
  FuncDef:  (at pp.c:21105)
    Decl: name='Msp430GpioC__8__HplGeneralIO__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:21105)
      FuncDecl: quals=None (at pp.c:21105)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__8__HplGeneralIO__makeInput', quals=[] (at pp.c:21105)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21105)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__25__IO__makeInput' (at pp.c:21107)
  FuncDef:  (at pp.c:21112)
    Decl: name='Msp430GpioC__8__GeneralIO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:21112)
      FuncDecl: quals=None (at pp.c:21112)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__8__GeneralIO__makeInput', quals=[] (at pp.c:21112)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21114)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__8__HplGeneralIO__makeInput' (at pp.c:21116)
  FuncDef:  (at pp.c:21120)
    Decl: name='CC2420TransmitP__SFD__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:21120)
      FuncDecl: quals=None (at pp.c:21120)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__SFD__makeInput', quals=[] (at pp.c:21120)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21120)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__8__GeneralIO__makeInput' (at pp.c:21122)
  FuncDef:  (at pp.c:21128)
    Decl: name='CC2420TransmitP__CSN__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:21128)
      FuncDecl: quals=None (at pp.c:21128)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__CSN__makeOutput', quals=[] (at pp.c:21128)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21128)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__4__GeneralIO__makeOutput' (at pp.c:21130)
  FuncDef:  (at pp.c:21135)
    Decl: name='HplMsp430GeneralIOP__4__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:21135)
      FuncDecl: quals=None (at pp.c:21135)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__4__IO__makeInput', quals=[] (at pp.c:21135)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21137)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:21140)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='34U' (at pp.c:21140)
        UnaryOp: op='~' (at pp.c:21140)
          BinaryOp: op='<<' (at pp.c:21140)
            Constant: type='int', value='0x01' (at pp.c:21140)
            Constant: type='int', value='4' (at pp.c:21140)
  FuncDef:  (at pp.c:21144)
    Decl: name='Msp430GpioC__3__HplGeneralIO__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:21144)
      FuncDecl: quals=None (at pp.c:21144)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__3__HplGeneralIO__makeInput', quals=[] (at pp.c:21144)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21144)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__4__IO__makeInput' (at pp.c:21146)
  FuncDef:  (at pp.c:21151)
    Decl: name='Msp430GpioC__3__GeneralIO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:21151)
      FuncDecl: quals=None (at pp.c:21151)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__3__GeneralIO__makeInput', quals=[] (at pp.c:21151)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21153)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__3__HplGeneralIO__makeInput' (at pp.c:21155)
  FuncDef:  (at pp.c:21159)
    Decl: name='CC2420TransmitP__CCA__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:21159)
      FuncDecl: quals=None (at pp.c:21159)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__CCA__makeInput', quals=[] (at pp.c:21159)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21159)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__3__GeneralIO__makeInput' (at pp.c:21161)
  FuncDef:  (at pp.c:21166)
    Decl: name='CC2420TransmitP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:21166)
      FuncDecl: quals=None (at pp.c:21166)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__Init__init', quals=[] (at pp.c:21166)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21168)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__CCA__makeInput' (at pp.c:21169)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__CSN__makeOutput' (at pp.c:21170)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__SFD__makeInput' (at pp.c:21171)
      Return:  (at pp.c:21172)
        ID: name='SUCCESS' (at pp.c:21172)
  FuncDef:  (at pp.c:21176)
    Decl: name='CC2420ReceiveP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:21176)
      FuncDecl: quals=None (at pp.c:21176)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__Init__init', quals=[] (at pp.c:21176)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21178)
      Assignment: op='=' (at pp.c:21179)
        ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:21179)
        UnaryOp: op='&' (at pp.c:21179)
          ID: name='CC2420ReceiveP__m_rx_buf' (at pp.c:21179)
      Return:  (at pp.c:21180)
        ID: name='SUCCESS' (at pp.c:21180)
  FuncDef:  (at pp.c:21184)
    Decl: name='Msp430TimerCapComP__5__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:21184)
      FuncDecl: quals=None (at pp.c:21184)
        ParamList:  (at pp.c:21184)
          Decl: name='x', quals=[], storage=[] (at pp.c:21184)
            TypeDecl: declname='x', quals=[] (at pp.c:21184)
              IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__CC2int', quals=[] (at pp.c:21184)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:21186)
      Decl: name='c', quals=[], storage=[] (at pp.c:21195)
        TypeDecl: declname='c', quals=[] (at pp.c:21195)
          Union: name='Msp430TimerCapComP__5____nesc_unnamed4392', packed=False (at pp.c:21188)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:21190)
                IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:21192)
                IdentifierType: names=['uint16_t'] (at None)
        ExprList:  (at pp.c:21195)
          Assignment: op='=' (at pp.c:21195)
            StructRef: type='.' (at pp.c:21195)
              ID: name='f' (at pp.c:21195)
            ID: name='x' (at pp.c:21195)
      Return:  (at pp.c:21198)
        StructRef: type='.' (at pp.c:21198)
          ID: name='c' (at pp.c:21198)
          ID: name='t' (at pp.c:21198)
  FuncDef:  (at pp.c:21201)
    Decl: name='Msp430TimerCapComP__5__compareControl', quals=[], storage=['inline', 'static'] (at pp.c:21201)
      FuncDecl: quals=None (at pp.c:21201)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__compareControl', quals=[] (at pp.c:21201)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:21202)
      Decl: name='x', quals=[], storage=[] (at pp.c:21203)
        TypeDecl: declname='x', quals=[] (at pp.c:21203)
          IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
        ExprList:  (at pp.c:21204)
          Assignment: op='=' (at pp.c:21204)
            StructRef: type='.' (at pp.c:21204)
              ID: name='cm' (at pp.c:21204)
            Constant: type='int', value='1' (at pp.c:21204)
          Assignment: op='=' (at pp.c:21205)
            StructRef: type='.' (at pp.c:21205)
              ID: name='ccis' (at pp.c:21205)
            Constant: type='int', value='0' (at pp.c:21205)
          Assignment: op='=' (at pp.c:21206)
            StructRef: type='.' (at pp.c:21206)
              ID: name='clld' (at pp.c:21206)
            Constant: type='int', value='0' (at pp.c:21206)
          Assignment: op='=' (at pp.c:21207)
            StructRef: type='.' (at pp.c:21207)
              ID: name='cap' (at pp.c:21207)
            Constant: type='int', value='0' (at pp.c:21207)
          Assignment: op='=' (at pp.c:21208)
            StructRef: type='.' (at pp.c:21208)
              ID: name='ccie' (at pp.c:21208)
            Constant: type='int', value='0' (at pp.c:21208)
      Return:  (at pp.c:21210)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__5__CC2int' (at pp.c:21210)
          ExprList:  (at pp.c:21210)
            ID: name='x' (at pp.c:21210)
  FuncDef:  (at pp.c:21214)
    Decl: name='Msp430TimerCapComP__5__Control__setControlAsCompare', quals=[], storage=['inline', 'static'] (at pp.c:21214)
      FuncDecl: quals=None (at pp.c:21214)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Control__setControlAsCompare', quals=[] (at pp.c:21214)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21215)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:21216)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='390U' (at pp.c:21216)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__5__compareControl' (at pp.c:21216)
  FuncDef:  (at pp.c:21220)
    Decl: name='Msp430AlarmC__1__Msp430TimerControl__setControlAsCompare', quals=[], storage=['static', 'inline'] (at pp.c:21220)
      FuncDecl: quals=None (at pp.c:21220)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__setControlAsCompare', quals=[] (at pp.c:21220)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21220)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Control__setControlAsCompare' (at pp.c:21222)
  FuncDef:  (at pp.c:21227)
    Decl: name='Msp430AlarmC__1__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:21227)
      FuncDecl: quals=None (at pp.c:21227)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Init__init', quals=[] (at pp.c:21227)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21228)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Msp430TimerControl__disableEvents' (at pp.c:21229)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Msp430TimerControl__setControlAsCompare' (at pp.c:21230)
      Return:  (at pp.c:21231)
        ID: name='SUCCESS' (at pp.c:21231)
  FuncDef:  (at pp.c:21235)
    Decl: name='RandomMlcgC__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:21235)
      FuncDecl: quals=None (at pp.c:21235)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RandomMlcgC__Init__init', quals=[] (at pp.c:21235)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21237)
      Assignment: op='=' (at pp.c:21240)
        ID: name='RandomMlcgC__seed' (at pp.c:21240)
        Cast:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['uint32_t'] (at None)
          BinaryOp: op='+' (at pp.c:21240)
            ID: name='TOS_NODE_ID' (at pp.c:21240)
            Constant: type='int', value='1' (at pp.c:21240)
      Return:  (at pp.c:21242)
        ID: name='SUCCESS' (at pp.c:21242)
  FuncDef:  (at pp.c:21246)
    Decl: name='UniqueSendP__Random__rand16', quals=[], storage=['static', 'inline'] (at pp.c:21246)
      FuncDecl: quals=None (at pp.c:21246)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='UniqueSendP__Random__rand16', quals=[] (at pp.c:21246)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:21246)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21248)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21248)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21252)
        ID: name='__nesc_result' (at pp.c:21252)
        FuncCall:  (at None)
          ID: name='RandomMlcgC__Random__rand16' (at pp.c:21252)
      Return:  (at pp.c:21256)
        ID: name='__nesc_result' (at pp.c:21256)
  FuncDef:  (at pp.c:21261)
    Decl: name='UniqueSendP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:21261)
      FuncDecl: quals=None (at pp.c:21261)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='UniqueSendP__Init__init', quals=[] (at pp.c:21261)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21263)
      Assignment: op='=' (at pp.c:21264)
        ID: name='UniqueSendP__localSendId' (at pp.c:21264)
        FuncCall:  (at None)
          ID: name='UniqueSendP__Random__rand16' (at pp.c:21264)
      Return:  (at pp.c:21265)
        ID: name='SUCCESS' (at pp.c:21265)
  FuncDef:  (at pp.c:21269)
    Decl: name='UniqueReceiveP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:21269)
      FuncDecl: quals=None (at pp.c:21269)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='UniqueReceiveP__Init__init', quals=[] (at pp.c:21269)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21271)
      Decl: name='i', quals=[], storage=[] (at pp.c:21272)
        TypeDecl: declname='i', quals=[] (at pp.c:21272)
          IdentifierType: names=['int'] (at None)
      For:  (at pp.c:21275)
        Assignment: op='=' (at pp.c:21275)
          ID: name='i' (at pp.c:21275)
          Constant: type='int', value='0' (at pp.c:21275)
        BinaryOp: op='<' (at pp.c:21275)
          ID: name='i' (at pp.c:21275)
          Constant: type='int', value='4' (at pp.c:21275)
        UnaryOp: op='p++' (at pp.c:21275)
          ID: name='i' (at pp.c:21275)
        Compound:  (at pp.c:21275)
          Assignment: op='=' (at pp.c:21276)
            StructRef: type='.' (at pp.c:21276)
              ArrayRef:  (at pp.c:21276)
                ID: name='UniqueReceiveP__receivedMessages' (at pp.c:21276)
                ID: name='i' (at pp.c:21276)
              ID: name='source' (at pp.c:21276)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['am_addr_t'] (at None)
              Constant: type='int', value='0xFFFF' (at pp.c:21276)
          Assignment: op='=' (at pp.c:21277)
            StructRef: type='.' (at pp.c:21277)
              ArrayRef:  (at pp.c:21277)
                ID: name='UniqueReceiveP__receivedMessages' (at pp.c:21277)
                ID: name='i' (at pp.c:21277)
              ID: name='dsn' (at pp.c:21277)
            Constant: type='int', value='0' (at pp.c:21277)
      Return:  (at pp.c:21279)
        ID: name='SUCCESS' (at pp.c:21279)
  FuncDef:  (at pp.c:21283)
    Decl: name='FcfsResourceQueueC__0__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:21283)
      FuncDecl: quals=None (at pp.c:21283)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__0__Init__init', quals=[] (at pp.c:21283)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21285)
      FuncCall:  (at None)
        ID: name='memset' (at pp.c:21286)
        ExprList:  (at pp.c:21286)
          ID: name='FcfsResourceQueueC__0__resQ' (at pp.c:21286)
          ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:21286)
          UnaryOp: op='sizeof' (at pp.c:21286)
            ID: name='FcfsResourceQueueC__0__resQ' (at pp.c:21286)
      Return:  (at pp.c:21287)
        ID: name='SUCCESS' (at pp.c:21287)
  FuncDef:  (at pp.c:21291)
    Decl: name='SerialP__ackInit', quals=[], storage=['__inline', 'static'] (at pp.c:21291)
      FuncDecl: quals=None (at pp.c:21291)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__ackInit', quals=[] (at pp.c:21291)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21293)
      Assignment: op='=' (at pp.c:21294)
        StructRef: type='.' (at pp.c:21294)
          ID: name='SerialP__ackQ' (at pp.c:21294)
          ID: name='writePtr' (at pp.c:21294)
        Assignment: op='=' (at pp.c:21294)
          StructRef: type='.' (at pp.c:21294)
            ID: name='SerialP__ackQ' (at pp.c:21294)
            ID: name='readPtr' (at pp.c:21294)
          Constant: type='int', value='0' (at pp.c:21294)
  FuncDef:  (at pp.c:21298)
    Decl: name='SerialP__rxInit', quals=[], storage=['__inline', 'static'] (at pp.c:21298)
      FuncDecl: quals=None (at pp.c:21298)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__rxInit', quals=[] (at pp.c:21298)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21300)
      Assignment: op='=' (at pp.c:21301)
        StructRef: type='.' (at pp.c:21301)
          ID: name='SerialP__rxBuf' (at pp.c:21301)
          ID: name='writePtr' (at pp.c:21301)
        Assignment: op='=' (at pp.c:21301)
          StructRef: type='.' (at pp.c:21301)
            ID: name='SerialP__rxBuf' (at pp.c:21301)
            ID: name='readPtr' (at pp.c:21301)
          Constant: type='int', value='0' (at pp.c:21301)
      Assignment: op='=' (at pp.c:21302)
        ID: name='SerialP__rxState' (at pp.c:21302)
        ID: name='SerialP__RXSTATE_NOSYNC' (at pp.c:21302)
      Assignment: op='=' (at pp.c:21303)
        ID: name='SerialP__rxByteCnt' (at pp.c:21303)
        Constant: type='int', value='0' (at pp.c:21303)
      Assignment: op='=' (at pp.c:21304)
        ID: name='SerialP__rxProto' (at pp.c:21304)
        Constant: type='int', value='0' (at pp.c:21304)
      Assignment: op='=' (at pp.c:21305)
        ID: name='SerialP__rxSeqno' (at pp.c:21305)
        Constant: type='int', value='0' (at pp.c:21305)
      Assignment: op='=' (at pp.c:21306)
        ID: name='SerialP__rxCRC' (at pp.c:21306)
        Constant: type='int', value='0' (at pp.c:21306)
  FuncDef:  (at pp.c:21310)
    Decl: name='SerialP__txInit', quals=[], storage=['__inline', 'static'] (at pp.c:21310)
      FuncDecl: quals=None (at pp.c:21310)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__txInit', quals=[] (at pp.c:21310)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21312)
      Decl: name='i', quals=[], storage=[] (at pp.c:21313)
        TypeDecl: declname='i', quals=[] (at pp.c:21313)
          IdentifierType: names=['uint8_t'] (at None)
      For:  (at pp.c:21317)
        Assignment: op='=' (at pp.c:21317)
          ID: name='i' (at pp.c:21317)
          Constant: type='int', value='0' (at pp.c:21317)
        BinaryOp: op='<' (at pp.c:21317)
          ID: name='i' (at pp.c:21317)
          ID: name='SerialP__TX_BUFFER_COUNT' (at pp.c:21317)
        UnaryOp: op='p++' (at pp.c:21317)
          ID: name='i' (at pp.c:21317)
        Assignment: op='=' (at pp.c:21317)
          StructRef: type='.' (at pp.c:21317)
            ArrayRef:  (at pp.c:21317)
              ID: name='SerialP__txBuf' (at pp.c:21317)
              ID: name='i' (at pp.c:21317)
            ID: name='state' (at pp.c:21317)
          ID: name='SerialP__BUFFER_AVAILABLE' (at pp.c:21317)
      Assignment: op='=' (at pp.c:21318)
        ID: name='SerialP__txState' (at pp.c:21318)
        ID: name='SerialP__TXSTATE_IDLE' (at pp.c:21318)
      Assignment: op='=' (at pp.c:21319)
        ID: name='SerialP__txByteCnt' (at pp.c:21319)
        Constant: type='int', value='0' (at pp.c:21319)
      Assignment: op='=' (at pp.c:21320)
        ID: name='SerialP__txProto' (at pp.c:21320)
        Constant: type='int', value='0' (at pp.c:21320)
      Assignment: op='=' (at pp.c:21321)
        ID: name='SerialP__txSeqno' (at pp.c:21321)
        Constant: type='int', value='0' (at pp.c:21321)
      Assignment: op='=' (at pp.c:21322)
        ID: name='SerialP__txCRC' (at pp.c:21322)
        Constant: type='int', value='0' (at pp.c:21322)
      Assignment: op='=' (at pp.c:21323)
        ID: name='SerialP__txPending' (at pp.c:21323)
        ID: name='FALSE' (at pp.c:21323)
      Assignment: op='=' (at pp.c:21324)
        ID: name='SerialP__txIndex' (at pp.c:21324)
        Constant: type='int', value='0' (at pp.c:21324)
  FuncDef:  (at pp.c:21328)
    Decl: name='SerialP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:21328)
      FuncDecl: quals=None (at pp.c:21328)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__Init__init', quals=[] (at pp.c:21328)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21330)
      FuncCall:  (at None)
        ID: name='SerialP__txInit' (at pp.c:21332)
      FuncCall:  (at None)
        ID: name='SerialP__rxInit' (at pp.c:21333)
      FuncCall:  (at None)
        ID: name='SerialP__ackInit' (at pp.c:21334)
      Return:  (at pp.c:21336)
        ID: name='SUCCESS' (at pp.c:21336)
  FuncDef:  (at pp.c:21340)
    Decl: name='FcfsResourceQueueC__2__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:21340)
      FuncDecl: quals=None (at pp.c:21340)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__2__Init__init', quals=[] (at pp.c:21340)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21342)
      FuncCall:  (at None)
        ID: name='memset' (at pp.c:21343)
        ExprList:  (at pp.c:21343)
          ID: name='FcfsResourceQueueC__2__resQ' (at pp.c:21343)
          ID: name='FcfsResourceQueueC__2__NO_ENTRY' (at pp.c:21343)
          UnaryOp: op='sizeof' (at pp.c:21343)
            ID: name='FcfsResourceQueueC__2__resQ' (at pp.c:21343)
      Return:  (at pp.c:21344)
        ID: name='SUCCESS' (at pp.c:21344)
  FuncDef:  (at pp.c:21348)
    Decl: name='RealMainP__SoftwareInit__init', quals=[], storage=['static', 'inline'] (at pp.c:21348)
      FuncDecl: quals=None (at pp.c:21348)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__SoftwareInit__init', quals=[] (at pp.c:21348)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21348)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21350)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21350)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21354)
        ID: name='__nesc_result' (at pp.c:21354)
        FuncCall:  (at None)
          ID: name='FcfsResourceQueueC__2__Init__init' (at pp.c:21354)
      Assignment: op='=' (at pp.c:21356)
        ID: name='__nesc_result' (at pp.c:21356)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:21356)
          ExprList:  (at pp.c:21356)
            ID: name='__nesc_result' (at pp.c:21356)
            FuncCall:  (at None)
              ID: name='SerialP__Init__init' (at pp.c:21356)
      Assignment: op='=' (at pp.c:21358)
        ID: name='__nesc_result' (at pp.c:21358)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:21358)
          ExprList:  (at pp.c:21358)
            ID: name='__nesc_result' (at pp.c:21358)
            FuncCall:  (at None)
              ID: name='FcfsResourceQueueC__0__Init__init' (at pp.c:21358)
      Assignment: op='=' (at pp.c:21360)
        ID: name='__nesc_result' (at pp.c:21360)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:21360)
          ExprList:  (at pp.c:21360)
            ID: name='__nesc_result' (at pp.c:21360)
            FuncCall:  (at None)
              ID: name='UniqueReceiveP__Init__init' (at pp.c:21360)
      Assignment: op='=' (at pp.c:21362)
        ID: name='__nesc_result' (at pp.c:21362)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:21362)
          ExprList:  (at pp.c:21362)
            ID: name='__nesc_result' (at pp.c:21362)
            FuncCall:  (at None)
              ID: name='UniqueSendP__Init__init' (at pp.c:21362)
      Assignment: op='=' (at pp.c:21364)
        ID: name='__nesc_result' (at pp.c:21364)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:21364)
          ExprList:  (at pp.c:21364)
            ID: name='__nesc_result' (at pp.c:21364)
            FuncCall:  (at None)
              ID: name='RandomMlcgC__Init__init' (at pp.c:21364)
      Assignment: op='=' (at pp.c:21366)
        ID: name='__nesc_result' (at pp.c:21366)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:21366)
          ExprList:  (at pp.c:21366)
            ID: name='__nesc_result' (at pp.c:21366)
            FuncCall:  (at None)
              ID: name='Msp430AlarmC__1__Init__init' (at pp.c:21366)
      Assignment: op='=' (at pp.c:21368)
        ID: name='__nesc_result' (at pp.c:21368)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:21368)
          ExprList:  (at pp.c:21368)
            ID: name='__nesc_result' (at pp.c:21368)
            FuncCall:  (at None)
              ID: name='CC2420ReceiveP__Init__init' (at pp.c:21368)
      Assignment: op='=' (at pp.c:21370)
        ID: name='__nesc_result' (at pp.c:21370)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:21370)
          ExprList:  (at pp.c:21370)
            ID: name='__nesc_result' (at pp.c:21370)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__Init__init' (at pp.c:21370)
      Assignment: op='=' (at pp.c:21372)
        ID: name='__nesc_result' (at pp.c:21372)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:21372)
          ExprList:  (at pp.c:21372)
            ID: name='__nesc_result' (at pp.c:21372)
            FuncCall:  (at None)
              ID: name='Msp430AlarmC__0__Init__init' (at pp.c:21372)
      Assignment: op='=' (at pp.c:21374)
        ID: name='__nesc_result' (at pp.c:21374)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:21374)
          ExprList:  (at pp.c:21374)
            ID: name='__nesc_result' (at pp.c:21374)
            FuncCall:  (at None)
              ID: name='FcfsResourceQueueC__1__Init__init' (at pp.c:21374)
      Assignment: op='=' (at pp.c:21376)
        ID: name='__nesc_result' (at pp.c:21376)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:21376)
          ExprList:  (at pp.c:21376)
            ID: name='__nesc_result' (at pp.c:21376)
            FuncCall:  (at None)
              ID: name='StateImplP__Init__init' (at pp.c:21376)
      Assignment: op='=' (at pp.c:21378)
        ID: name='__nesc_result' (at pp.c:21378)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:21378)
          ExprList:  (at pp.c:21378)
            ID: name='__nesc_result' (at pp.c:21378)
            FuncCall:  (at None)
              ID: name='CC2420ControlP__Init__init' (at pp.c:21378)
      Return:  (at pp.c:21382)
        ID: name='__nesc_result' (at pp.c:21382)
  FuncDef:  (at pp.c:21387)
    Decl: name='SerialP__startDoneTask__postTask', quals=[], storage=['static', 'inline'] (at pp.c:21387)
      FuncDecl: quals=None (at pp.c:21387)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__startDoneTask__postTask', quals=[] (at pp.c:21387)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21387)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21389)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21389)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21393)
        ID: name='__nesc_result' (at pp.c:21393)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:21393)
          ExprList:  (at pp.c:21393)
            ID: name='SerialP__startDoneTask' (at pp.c:21393)
      Return:  (at pp.c:21397)
        ID: name='__nesc_result' (at pp.c:21397)
  FuncDef:  (at pp.c:21402)
    Decl: name='SerialP__SplitControl__start', quals=[], storage=['inline', 'static'] (at pp.c:21402)
      FuncDecl: quals=None (at pp.c:21402)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__SplitControl__start', quals=[] (at pp.c:21402)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21404)
      FuncCall:  (at None)
        ID: name='SerialP__startDoneTask__postTask' (at pp.c:21405)
      Return:  (at pp.c:21406)
        ID: name='SUCCESS' (at pp.c:21406)
  FuncDef:  (at pp.c:21410)
    Decl: name='BaseStationP__SerialControl__start', quals=[], storage=['static', 'inline'] (at pp.c:21410)
      FuncDecl: quals=None (at pp.c:21410)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BaseStationP__SerialControl__start', quals=[] (at pp.c:21410)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21410)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21412)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21412)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21416)
        ID: name='__nesc_result' (at pp.c:21416)
        FuncCall:  (at None)
          ID: name='SerialP__SplitControl__start' (at pp.c:21416)
      Return:  (at pp.c:21420)
        ID: name='__nesc_result' (at pp.c:21420)
  FuncDef:  (at pp.c:21425)
    Decl: name='CC2420ControlP__StartupTimer__start', quals=[], storage=['static', 'inline'] (at pp.c:21425)
      FuncDecl: quals=None (at pp.c:21425)
        ParamList:  (at pp.c:21425)
          Decl: name='dt', quals=[], storage=[] (at pp.c:21425)
            TypeDecl: declname='dt', quals=[] (at pp.c:21425)
              IdentifierType: names=['CC2420ControlP__StartupTimer__size_type'] (at None)
        TypeDecl: declname='CC2420ControlP__StartupTimer__start', quals=[] (at pp.c:21425)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21425)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__Alarm__start' (at pp.c:21427)
        ExprList:  (at pp.c:21427)
          ID: name='dt' (at pp.c:21427)
  FuncDef:  (at pp.c:21432)
    Decl: name='HplMsp430GeneralIOP__29__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:21432)
      FuncDecl: quals=None (at pp.c:21432)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__29__IO__set', quals=[] (at pp.c:21432)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21434)
      Compound:  (at pp.c:21436)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:21436)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:21436)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:21436)
        Assignment: op='|=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:21438)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:21438)
          BinaryOp: op='<<' (at pp.c:21438)
            Constant: type='int', value='0x01' (at pp.c:21438)
            Constant: type='int', value='5' (at pp.c:21438)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:21440)
          ExprList:  (at pp.c:21440)
            ID: name='__nesc_atomic' (at pp.c:21440)
  FuncDef:  (at pp.c:21444)
    Decl: name='Msp430GpioC__9__HplGeneralIO__set', quals=[], storage=['static', 'inline'] (at pp.c:21444)
      FuncDecl: quals=None (at pp.c:21444)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__9__HplGeneralIO__set', quals=[] (at pp.c:21444)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21444)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__29__IO__set' (at pp.c:21446)
  FuncDef:  (at pp.c:21451)
    Decl: name='Msp430GpioC__9__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:21451)
      FuncDecl: quals=None (at pp.c:21451)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__9__GeneralIO__set', quals=[] (at pp.c:21451)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21453)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__9__HplGeneralIO__set' (at pp.c:21455)
  FuncDef:  (at pp.c:21459)
    Decl: name='CC2420ControlP__VREN__set', quals=[], storage=['static', 'inline'] (at pp.c:21459)
      FuncDecl: quals=None (at pp.c:21459)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__VREN__set', quals=[] (at pp.c:21459)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21459)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__9__GeneralIO__set' (at pp.c:21461)
  FuncDef:  (at pp.c:21466)
    Decl: name='CC2420ControlP__CC2420Power__startVReg', quals=[], storage=['inline', 'static'] (at pp.c:21466)
      FuncDecl: quals=None (at pp.c:21466)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Power__startVReg', quals=[] (at pp.c:21466)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21468)
      Compound:  (at pp.c:21469)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:21469)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:21469)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:21469)
        Compound:  (at pp.c:21471)
          If:  (at pp.c:21472)
            BinaryOp: op='!=' (at pp.c:21472)
              ID: name='CC2420ControlP__m_state' (at pp.c:21472)
              ID: name='CC2420ControlP__S_VREG_STOPPED' (at pp.c:21472)
            Compound:  (at pp.c:21472)
              Compound:  (at pp.c:21473)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:21474)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:21474)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='FAIL' (at pp.c:21476)
                Compound:  (at pp.c:21478)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:21480)
                    ExprList:  (at pp.c:21480)
                      ID: name='__nesc_atomic' (at pp.c:21480)
                  Return:  (at pp.c:21482)
                    ID: name='__nesc_temp' (at pp.c:21482)
          Assignment: op='=' (at pp.c:21487)
            ID: name='CC2420ControlP__m_state' (at pp.c:21487)
            ID: name='CC2420ControlP__S_VREG_STARTING' (at pp.c:21487)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:21490)
          ExprList:  (at pp.c:21490)
            ID: name='__nesc_atomic' (at pp.c:21490)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__VREN__set' (at pp.c:21491)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__StartupTimer__start' (at pp.c:21492)
        ExprList:  (at pp.c:21492)
          ID: name='CC2420_TIME_VREN' (at pp.c:21492)
      Return:  (at pp.c:21493)
        ID: name='SUCCESS' (at pp.c:21493)
  FuncDef:  (at pp.c:21497)
    Decl: name='CC2420CsmaP__CC2420Power__startVReg', quals=[], storage=['static', 'inline'] (at pp.c:21497)
      FuncDecl: quals=None (at pp.c:21497)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__CC2420Power__startVReg', quals=[] (at pp.c:21497)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21497)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21499)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21499)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21503)
        ID: name='__nesc_result' (at pp.c:21503)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__CC2420Power__startVReg' (at pp.c:21503)
      Return:  (at pp.c:21507)
        ID: name='__nesc_result' (at pp.c:21507)
  FuncDef:  (at pp.c:21512)
    Decl: name='CC2420CsmaP__SplitControlState__requestState', quals=[], storage=['static', 'inline'] (at pp.c:21512)
      FuncDecl: quals=None (at pp.c:21512)
        ParamList:  (at pp.c:21512)
          Decl: name='reqState', quals=[], storage=[] (at pp.c:21512)
            TypeDecl: declname='reqState', quals=[] (at pp.c:21512)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__SplitControlState__requestState', quals=[] (at pp.c:21512)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21512)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21514)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21514)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21518)
        ID: name='__nesc_result' (at pp.c:21518)
        FuncCall:  (at None)
          ID: name='StateImplP__State__requestState' (at pp.c:21518)
          ExprList:  (at pp.c:21518)
            Constant: type='int', value='1U' (at pp.c:21518)
            ID: name='reqState' (at pp.c:21518)
      Return:  (at pp.c:21522)
        ID: name='__nesc_result' (at pp.c:21522)
  FuncDef:  (at pp.c:21527)
    Decl: name='CC2420CsmaP__SplitControl__start', quals=[], storage=['inline', 'static'] (at pp.c:21527)
      FuncDecl: quals=None (at pp.c:21527)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__SplitControl__start', quals=[] (at pp.c:21527)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21529)
      If:  (at pp.c:21530)
        BinaryOp: op='==' (at None)
          FuncCall:  (at None)
            ID: name='CC2420CsmaP__SplitControlState__requestState' (at pp.c:21530)
            ExprList:  (at pp.c:21530)
              ID: name='CC2420CsmaP__S_STARTING' (at pp.c:21530)
          ID: name='SUCCESS' (at pp.c:21530)
        Compound:  (at pp.c:21530)
          FuncCall:  (at None)
            ID: name='CC2420CsmaP__CC2420Power__startVReg' (at pp.c:21531)
          Return:  (at pp.c:21532)
            ID: name='SUCCESS' (at pp.c:21532)
        Compound:  (at pp.c:21534)
          If:  (at pp.c:21536)
            FuncCall:  (at None)
              ID: name='CC2420CsmaP__SplitControlState__isState' (at pp.c:21536)
              ExprList:  (at pp.c:21536)
                ID: name='CC2420CsmaP__S_STARTED' (at pp.c:21536)
            Compound:  (at pp.c:21536)
              Return:  (at pp.c:21537)
                ID: name='EALREADY' (at pp.c:21537)
            Compound:  (at pp.c:21539)
              If:  (at pp.c:21541)
                FuncCall:  (at None)
                  ID: name='CC2420CsmaP__SplitControlState__isState' (at pp.c:21541)
                  ExprList:  (at pp.c:21541)
                    ID: name='CC2420CsmaP__S_STARTING' (at pp.c:21541)
                Compound:  (at pp.c:21541)
                  Return:  (at pp.c:21542)
                    ID: name='SUCCESS' (at pp.c:21542)
      Return:  (at pp.c:21547)
        ID: name='EBUSY' (at pp.c:21547)
  FuncDef:  (at pp.c:21551)
    Decl: name='BaseStationP__RadioControl__start', quals=[], storage=['static', 'inline'] (at pp.c:21551)
      FuncDecl: quals=None (at pp.c:21551)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BaseStationP__RadioControl__start', quals=[] (at pp.c:21551)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21551)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21553)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21553)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21557)
        ID: name='__nesc_result' (at pp.c:21557)
        FuncCall:  (at None)
          ID: name='CC2420CsmaP__SplitControl__start' (at pp.c:21557)
      Return:  (at pp.c:21561)
        ID: name='__nesc_result' (at pp.c:21561)
  FuncDef:  (at pp.c:21566)
    Decl: name='BaseStationP__Boot__booted', quals=[], storage=['inline', 'static'] (at pp.c:21566)
      FuncDecl: quals=None (at pp.c:21566)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BaseStationP__Boot__booted', quals=[] (at pp.c:21566)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21568)
      Decl: name='i', quals=[], storage=[] (at pp.c:21569)
        TypeDecl: declname='i', quals=[] (at pp.c:21569)
          IdentifierType: names=['uint8_t'] (at None)
      For:  (at pp.c:21571)
        Assignment: op='=' (at pp.c:21571)
          ID: name='i' (at pp.c:21571)
          Constant: type='int', value='0' (at pp.c:21571)
        BinaryOp: op='<' (at pp.c:21571)
          ID: name='i' (at pp.c:21571)
          ID: name='BaseStationP__UART_QUEUE_LEN' (at pp.c:21571)
        UnaryOp: op='p++' (at pp.c:21571)
          ID: name='i' (at pp.c:21571)
        Assignment: op='=' (at pp.c:21572)
          ArrayRef:  (at pp.c:21572)
            ID: name='BaseStationP__uartQueue' (at pp.c:21572)
            ID: name='i' (at pp.c:21572)
          UnaryOp: op='&' (at pp.c:21572)
            ArrayRef:  (at pp.c:21572)
              ID: name='BaseStationP__uartQueueBufs' (at pp.c:21572)
              ID: name='i' (at pp.c:21572)
      Assignment: op='=' (at pp.c:21573)
        ID: name='BaseStationP__uartIn' (at pp.c:21573)
        Assignment: op='=' (at pp.c:21573)
          ID: name='BaseStationP__uartOut' (at pp.c:21573)
          Constant: type='int', value='0' (at pp.c:21573)
      Assignment: op='=' (at pp.c:21574)
        ID: name='BaseStationP__uartBusy' (at pp.c:21574)
        ID: name='FALSE' (at pp.c:21574)
      Assignment: op='=' (at pp.c:21575)
        ID: name='BaseStationP__uartFull' (at pp.c:21575)
        ID: name='TRUE' (at pp.c:21575)
      For:  (at pp.c:21577)
        Assignment: op='=' (at pp.c:21577)
          ID: name='i' (at pp.c:21577)
          Constant: type='int', value='0' (at pp.c:21577)
        BinaryOp: op='<' (at pp.c:21577)
          ID: name='i' (at pp.c:21577)
          ID: name='BaseStationP__RADIO_QUEUE_LEN' (at pp.c:21577)
        UnaryOp: op='p++' (at pp.c:21577)
          ID: name='i' (at pp.c:21577)
        Assignment: op='=' (at pp.c:21578)
          ArrayRef:  (at pp.c:21578)
            ID: name='BaseStationP__radioQueue' (at pp.c:21578)
            ID: name='i' (at pp.c:21578)
          UnaryOp: op='&' (at pp.c:21578)
            ArrayRef:  (at pp.c:21578)
              ID: name='BaseStationP__radioQueueBufs' (at pp.c:21578)
              ID: name='i' (at pp.c:21578)
      Assignment: op='=' (at pp.c:21579)
        ID: name='BaseStationP__radioIn' (at pp.c:21579)
        Assignment: op='=' (at pp.c:21579)
          ID: name='BaseStationP__radioOut' (at pp.c:21579)
          Constant: type='int', value='0' (at pp.c:21579)
      Assignment: op='=' (at pp.c:21580)
        ID: name='BaseStationP__radioBusy' (at pp.c:21580)
        ID: name='FALSE' (at pp.c:21580)
      Assignment: op='=' (at pp.c:21581)
        ID: name='BaseStationP__radioFull' (at pp.c:21581)
        ID: name='TRUE' (at pp.c:21581)
      FuncCall:  (at None)
        ID: name='BaseStationP__RadioControl__start' (at pp.c:21583)
      FuncCall:  (at None)
        ID: name='BaseStationP__SerialControl__start' (at pp.c:21584)
  FuncDef:  (at pp.c:21588)
    Decl: name='RealMainP__Boot__booted', quals=[], storage=['static', 'inline'] (at pp.c:21588)
      FuncDecl: quals=None (at pp.c:21588)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__Boot__booted', quals=[] (at pp.c:21588)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21588)
      FuncCall:  (at None)
        ID: name='BaseStationP__Boot__booted' (at pp.c:21590)
  FuncDef:  (at pp.c:21595)
    Decl: name='__nesc_disable_interrupt', quals=[], storage=['inline', 'static'] (at pp.c:21595)
      FuncDecl: quals=None (at pp.c:21595)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_disable_interrupt', quals=[] (at pp.c:21595)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21596)
      Assignment: op='&=' (at pp.c:21597)
        ID: name='_R2' (at pp.c:21597)
        Constant: type='int', value='0xfff7' (at pp.c:21597)
  FuncDef:  (at pp.c:21601)
    Decl: name='Msp430ClockP__McuPowerOverride__lowestState', quals=[], storage=['inline', 'static'] (at pp.c:21601)
      FuncDecl: quals=None (at pp.c:21601)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__McuPowerOverride__lowestState', quals=[] (at pp.c:21601)
          IdentifierType: names=['mcu_power_t'] (at None)
    Compound:  (at pp.c:21603)
      Return:  (at pp.c:21604)
        ID: name='MSP430_POWER_LPM3' (at pp.c:21604)
  FuncDef:  (at pp.c:21608)
    Decl: name='McuSleepC__McuPowerOverride__lowestState', quals=[], storage=['static', 'inline'] (at pp.c:21608)
      FuncDecl: quals=None (at pp.c:21608)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='McuSleepC__McuPowerOverride__lowestState', quals=[] (at pp.c:21608)
          IdentifierType: names=['mcu_power_t'] (at None)
    Compound:  (at pp.c:21608)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21610)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21610)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21614)
        ID: name='__nesc_result' (at pp.c:21614)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__McuPowerOverride__lowestState' (at pp.c:21614)
      Return:  (at pp.c:21618)
        ID: name='__nesc_result' (at pp.c:21618)
  FuncDef:  (at pp.c:21623)
    Decl: name='McuSleepC__getPowerState', quals=[], storage=['inline', 'static'] (at pp.c:21623)
      FuncDecl: quals=None (at pp.c:21623)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='McuSleepC__getPowerState', quals=[] (at pp.c:21623)
          IdentifierType: names=['mcu_power_t'] (at None)
    Compound:  (at pp.c:21625)
      Decl: name='pState', quals=[], storage=[] (at pp.c:21626)
        TypeDecl: declname='pState', quals=[] (at pp.c:21626)
          IdentifierType: names=['mcu_power_t'] (at None)
        ID: name='MSP430_POWER_LPM4' (at pp.c:21626)
      If:  (at pp.c:21636)
        BinaryOp: op='||' (at pp.c:21638)
          BinaryOp: op='||' (at pp.c:21638)
            BinaryOp: op='||' (at pp.c:21638)
              BinaryOp: op='&&' (at pp.c:21638)
                BinaryOp: op='||' (at pp.c:21638)
                  BinaryOp: op='||' (at pp.c:21638)
                    BinaryOp: op='&' (at pp.c:21638)
                      ID: name='TA0CCTL0' (at pp.c:21638)
                      Constant: type='int', value='0x0010' (at pp.c:21638)
                    BinaryOp: op='&' (at pp.c:21639)
                      ID: name='TA0CCTL1' (at pp.c:21639)
                      Constant: type='int', value='0x0010' (at pp.c:21639)
                  BinaryOp: op='&' (at pp.c:21640)
                    ID: name='TA0CCTL2' (at pp.c:21640)
                    Constant: type='int', value='0x0010' (at pp.c:21640)
                BinaryOp: op='==' (at pp.c:21641)
                  BinaryOp: op='&' (at pp.c:21641)
                    ID: name='TA0CTL' (at pp.c:21641)
                    BinaryOp: op='<<' (at pp.c:21641)
                      Constant: type='int', value='3' (at pp.c:21641)
                      Constant: type='int', value='8' (at pp.c:21641)
                  BinaryOp: op='<<' (at pp.c:21641)
                    Constant: type='int', value='2' (at pp.c:21641)
                    Constant: type='int', value='8' (at pp.c:21641)
              BinaryOp: op='&&' (at pp.c:21642)
                BinaryOp: op='&' (at pp.c:21642)
                  ID: name='ME1' (at pp.c:21642)
                  BinaryOp: op='|' (at pp.c:21642)
                    BinaryOp: op='<<' (at pp.c:21642)
                      Constant: type='int', value='1' (at pp.c:21642)
                      Constant: type='int', value='7' (at pp.c:21642)
                    BinaryOp: op='<<' (at pp.c:21642)
                      Constant: type='int', value='1' (at pp.c:21642)
                      Constant: type='int', value='6' (at pp.c:21642)
                BinaryOp: op='&' (at pp.c:21642)
                  ID: name='U0TCTL' (at pp.c:21642)
                  Constant: type='int', value='0x20' (at pp.c:21642)
            BinaryOp: op='&&' (at pp.c:21643)
              BinaryOp: op='&' (at pp.c:21643)
                ID: name='ME2' (at pp.c:21643)
                BinaryOp: op='|' (at pp.c:21643)
                  BinaryOp: op='<<' (at pp.c:21643)
                    Constant: type='int', value='1' (at pp.c:21643)
                    Constant: type='int', value='5' (at pp.c:21643)
                  BinaryOp: op='<<' (at pp.c:21643)
                    Constant: type='int', value='1' (at pp.c:21643)
                    Constant: type='int', value='4' (at pp.c:21643)
              BinaryOp: op='&' (at pp.c:21643)
                ID: name='U1TCTL' (at pp.c:21643)
                Constant: type='int', value='0x20' (at pp.c:21643)
          BinaryOp: op='&&' (at pp.c:21646)
            BinaryOp: op='&&' (at pp.c:21646)
              BinaryOp: op='&&' (at pp.c:21646)
                BinaryOp: op='&&' (at pp.c:21646)
                  BinaryOp: op='&' (at pp.c:21646)
                    ID: name='U0CTLnr' (at pp.c:21646)
                    Constant: type='int', value='0x01' (at pp.c:21646)
                  BinaryOp: op='&' (at pp.c:21646)
                    ID: name='I2CTCTLnr' (at pp.c:21646)
                    Constant: type='int', value='0x20' (at pp.c:21646)
                BinaryOp: op='&' (at pp.c:21647)
                  ID: name='I2CDCTLnr' (at pp.c:21647)
                  Constant: type='int', value='0x20' (at pp.c:21647)
              BinaryOp: op='&' (at pp.c:21647)
                ID: name='U0CTLnr' (at pp.c:21647)
                Constant: type='int', value='0x04' (at pp.c:21647)
            BinaryOp: op='&' (at pp.c:21647)
              ID: name='U0CTLnr' (at pp.c:21647)
              Constant: type='int', value='0x20' (at pp.c:21647)
        Compound:  (at pp.c:21647)
          Assignment: op='=' (at pp.c:21650)
            ID: name='pState' (at pp.c:21650)
            ID: name='MSP430_POWER_LPM1' (at pp.c:21650)
      If:  (at pp.c:21654)
        BinaryOp: op='&' (at pp.c:21654)
          ID: name='ADC12CTL0' (at pp.c:21654)
          Constant: type='int', value='0x0010' (at pp.c:21654)
        Compound:  (at pp.c:21654)
          If:  (at pp.c:21655)
            BinaryOp: op='&' (at pp.c:21655)
              ID: name='ADC12CTL1' (at pp.c:21655)
              BinaryOp: op='<<' (at pp.c:21655)
                Constant: type='int', value='2' (at pp.c:21655)
                Constant: type='int', value='3' (at pp.c:21655)
            Compound:  (at pp.c:21655)
              If:  (at pp.c:21657)
                BinaryOp: op='&' (at pp.c:21657)
                  ID: name='ADC12CTL1' (at pp.c:21657)
                  BinaryOp: op='<<' (at pp.c:21657)
                    Constant: type='int', value='1' (at pp.c:21657)
                    Constant: type='int', value='3' (at pp.c:21657)
                Compound:  (at pp.c:21657)
                  Assignment: op='=' (at pp.c:21658)
                    ID: name='pState' (at pp.c:21658)
                    ID: name='MSP430_POWER_LPM1' (at pp.c:21658)
                Compound:  (at pp.c:21660)
                  Assignment: op='=' (at pp.c:21662)
                    ID: name='pState' (at pp.c:21662)
                    ID: name='MSP430_POWER_ACTIVE' (at pp.c:21662)
            Compound:  (at pp.c:21665)
              If:  (at pp.c:21667)
                BinaryOp: op='&&' (at pp.c:21667)
                  BinaryOp: op='&' (at pp.c:21667)
                    ID: name='ADC12CTL1' (at pp.c:21667)
                    Constant: type='int', value='0x0400' (at pp.c:21667)
                  BinaryOp: op='==' (at pp.c:21667)
                    BinaryOp: op='&' (at pp.c:21667)
                      ID: name='TA0CTL' (at pp.c:21667)
                      BinaryOp: op='<<' (at pp.c:21667)
                        Constant: type='int', value='3' (at pp.c:21667)
                        Constant: type='int', value='8' (at pp.c:21667)
                    BinaryOp: op='<<' (at pp.c:21667)
                      Constant: type='int', value='2' (at pp.c:21667)
                      Constant: type='int', value='8' (at pp.c:21667)
                Compound:  (at pp.c:21667)
                  Assignment: op='=' (at pp.c:21671)
                    ID: name='pState' (at pp.c:21671)
                    ID: name='MSP430_POWER_LPM1' (at pp.c:21671)
      Return:  (at pp.c:21676)
        ID: name='pState' (at pp.c:21676)
  FuncDef:  (at pp.c:21680)
    Decl: name='mcombine', quals=[], storage=['inline', 'static'] (at pp.c:21680)
      FuncDecl: quals=None (at pp.c:21680)
        ParamList:  (at pp.c:21680)
          Decl: name='m1', quals=[], storage=[] (at pp.c:21680)
            TypeDecl: declname='m1', quals=[] (at pp.c:21680)
              IdentifierType: names=['mcu_power_t'] (at None)
          Decl: name='m2', quals=[], storage=[] (at pp.c:21680)
            TypeDecl: declname='m2', quals=[] (at pp.c:21680)
              IdentifierType: names=['mcu_power_t'] (at None)
        TypeDecl: declname='mcombine', quals=[] (at pp.c:21680)
          IdentifierType: names=['mcu_power_t'] (at None)
    Compound:  (at pp.c:21682)
      Return:  (at pp.c:21683)
        TernaryOp:  (at pp.c:21683)
          BinaryOp: op='<' (at pp.c:21683)
            ID: name='m1' (at pp.c:21683)
            ID: name='m2' (at pp.c:21683)
          ID: name='m1' (at pp.c:21683)
          ID: name='m2' (at pp.c:21683)
  FuncDef:  (at pp.c:21687)
    Decl: name='McuSleepC__computePowerState', quals=[], storage=['inline', 'static'] (at pp.c:21687)
      FuncDecl: quals=None (at pp.c:21687)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='McuSleepC__computePowerState', quals=[] (at pp.c:21687)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21689)
      Assignment: op='=' (at pp.c:21690)
        ID: name='McuSleepC__powerState' (at pp.c:21690)
        FuncCall:  (at None)
          ID: name='mcombine' (at pp.c:21690)
          ExprList:  (at None)
            FuncCall:  (at None)
              ID: name='McuSleepC__getPowerState' (at pp.c:21690)
            FuncCall:  (at None)
              ID: name='McuSleepC__McuPowerOverride__lowestState' (at pp.c:21691)
  FuncDef:  (at pp.c:21694)
    Decl: name='McuSleepC__McuSleep__sleep', quals=[], storage=['inline', 'static'] (at pp.c:21694)
      FuncDecl: quals=None (at pp.c:21694)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='McuSleepC__McuSleep__sleep', quals=[] (at pp.c:21694)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21696)
      Decl: name='temp', quals=[], storage=[] (at pp.c:21697)
        TypeDecl: declname='temp', quals=[] (at pp.c:21697)
          IdentifierType: names=['uint16_t'] (at None)
      If:  (at pp.c:21700)
        ID: name='McuSleepC__dirty' (at pp.c:21700)
        Compound:  (at pp.c:21700)
          FuncCall:  (at None)
            ID: name='McuSleepC__computePowerState' (at pp.c:21701)
      Assignment: op='=' (at pp.c:21704)
        ID: name='temp' (at pp.c:21704)
        BinaryOp: op='|' (at pp.c:21704)
          ArrayRef:  (at pp.c:21704)
            ID: name='McuSleepC__msp430PowerBits' (at pp.c:21704)
            ID: name='McuSleepC__powerState' (at pp.c:21704)
          Constant: type='int', value='0x0008' (at pp.c:21704)
      Assignment: op='|=' (at pp.c:21705)
        ID: name='_R2' (at pp.c:21705)
        ID: name='temp' (at pp.c:21705)
      FuncCall:  (at None)
        ID: name='__nesc_disable_interrupt' (at pp.c:21708)
  FuncDef:  (at pp.c:21712)
    Decl: name='SchedulerBasicP__McuSleep__sleep', quals=[], storage=['static', 'inline'] (at pp.c:21712)
      FuncDecl: quals=None (at pp.c:21712)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SchedulerBasicP__McuSleep__sleep', quals=[] (at pp.c:21712)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21712)
      FuncCall:  (at None)
        ID: name='McuSleepC__McuSleep__sleep' (at pp.c:21714)
  FuncDef:  (at pp.c:21719)
    Decl: name='SchedulerBasicP__popTask', quals=[], storage=['__inline', 'static'] (at pp.c:21719)
      FuncDecl: quals=None (at pp.c:21719)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SchedulerBasicP__popTask', quals=[] (at pp.c:21719)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:21720)
      If:  (at pp.c:21721)
        BinaryOp: op='!=' (at pp.c:21721)
          ID: name='SchedulerBasicP__m_head' (at pp.c:21721)
          ID: name='SchedulerBasicP__NO_TASK' (at pp.c:21721)
        Compound:  (at pp.c:21722)
          Decl: name='id', quals=[], storage=[] (at pp.c:21723)
            TypeDecl: declname='id', quals=[] (at pp.c:21723)
              IdentifierType: names=['uint8_t'] (at None)
            ID: name='SchedulerBasicP__m_head' (at pp.c:21723)
          Assignment: op='=' (at pp.c:21726)
            ID: name='SchedulerBasicP__m_head' (at pp.c:21726)
            ArrayRef:  (at pp.c:21726)
              ID: name='SchedulerBasicP__m_next' (at pp.c:21726)
              ID: name='SchedulerBasicP__m_head' (at pp.c:21726)
          If:  (at pp.c:21727)
            BinaryOp: op='==' (at pp.c:21727)
              ID: name='SchedulerBasicP__m_head' (at pp.c:21727)
              ID: name='SchedulerBasicP__NO_TASK' (at pp.c:21727)
            Compound:  (at pp.c:21728)
              Assignment: op='=' (at pp.c:21729)
                ID: name='SchedulerBasicP__m_tail' (at pp.c:21729)
                ID: name='SchedulerBasicP__NO_TASK' (at pp.c:21729)
          Assignment: op='=' (at pp.c:21731)
            ArrayRef:  (at pp.c:21731)
              ID: name='SchedulerBasicP__m_next' (at pp.c:21731)
              ID: name='id' (at pp.c:21731)
            ID: name='SchedulerBasicP__NO_TASK' (at pp.c:21731)
          Return:  (at pp.c:21732)
            ID: name='id' (at pp.c:21732)
        Compound:  (at pp.c:21735)
          Return:  (at pp.c:21736)
            ID: name='SchedulerBasicP__NO_TASK' (at pp.c:21736)
  FuncDef:  (at pp.c:21741)
    Decl: name='SchedulerBasicP__Scheduler__taskLoop', quals=[], storage=['inline', 'static'] (at pp.c:21741)
      FuncDecl: quals=None (at pp.c:21741)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SchedulerBasicP__Scheduler__taskLoop', quals=[] (at pp.c:21741)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21742)
      For:  (at pp.c:21743)
        Compound:  (at pp.c:21744)
          Decl: name='nextTask', quals=[], storage=[] (at pp.c:21745)
            TypeDecl: declname='nextTask', quals=[] (at pp.c:21745)
              IdentifierType: names=['uint8_t'] (at None)
          Compound:  (at pp.c:21747)
            Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:21747)
              TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:21747)
                IdentifierType: names=['__nesc_atomic_t'] (at None)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_start' (at pp.c:21747)
            Compound:  (at pp.c:21748)
              While:  (at pp.c:21749)
                BinaryOp: op='==' (at pp.c:21749)
                  Assignment: op='=' (at pp.c:21749)
                    ID: name='nextTask' (at pp.c:21749)
                    FuncCall:  (at None)
                      ID: name='SchedulerBasicP__popTask' (at pp.c:21749)
                  ID: name='SchedulerBasicP__NO_TASK' (at pp.c:21749)
                Compound:  (at pp.c:21750)
                  FuncCall:  (at None)
                    ID: name='SchedulerBasicP__McuSleep__sleep' (at pp.c:21751)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:21755)
              ExprList:  (at pp.c:21755)
                ID: name='__nesc_atomic' (at pp.c:21755)
          FuncCall:  (at None)
            ID: name='SchedulerBasicP__TaskBasic__runTask' (at pp.c:21756)
            ExprList:  (at pp.c:21756)
              ID: name='nextTask' (at pp.c:21756)
  FuncDef:  (at pp.c:21761)
    Decl: name='RealMainP__Scheduler__taskLoop', quals=[], storage=['static', 'inline'] (at pp.c:21761)
      FuncDecl: quals=None (at pp.c:21761)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__Scheduler__taskLoop', quals=[] (at pp.c:21761)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21761)
      FuncCall:  (at None)
        ID: name='SchedulerBasicP__Scheduler__taskLoop' (at pp.c:21763)
  FuncDef:  (at pp.c:21768)
    Decl: name='CC2420ReceiveP__InterruptFIFOP__fired', quals=[], storage=['inline', 'static'] (at pp.c:21768)
      FuncDecl: quals=None (at pp.c:21768)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__InterruptFIFOP__fired', quals=[] (at pp.c:21768)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21770)
      If:  (at pp.c:21771)
        BinaryOp: op='==' (at pp.c:21771)
          ID: name='CC2420ReceiveP__m_state' (at pp.c:21771)
          ID: name='CC2420ReceiveP__S_STARTED' (at pp.c:21771)
        Compound:  (at pp.c:21771)
          Assignment: op='=' (at pp.c:21773)
            ID: name='CC2420ReceiveP__m_state' (at pp.c:21773)
            ID: name='CC2420ReceiveP__S_RX_LENGTH' (at pp.c:21773)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__beginReceive' (at pp.c:21774)
        Compound:  (at pp.c:21780)
          UnaryOp: op='p++' (at pp.c:21781)
            ID: name='CC2420ReceiveP__m_missed_packets' (at pp.c:21781)
  FuncDef:  (at pp.c:21786)
    Decl: name='Msp430InterruptC__1__Interrupt__fired', quals=[], storage=['static', 'inline'] (at pp.c:21786)
      FuncDecl: quals=None (at pp.c:21786)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__1__Interrupt__fired', quals=[] (at pp.c:21786)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21786)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__InterruptFIFOP__fired' (at pp.c:21788)
  FuncDef:  (at pp.c:21793)
    Decl: name='Msp430InterruptC__1__HplInterrupt__fired', quals=[], storage=['inline', 'static'] (at pp.c:21793)
      FuncDecl: quals=None (at pp.c:21793)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__fired', quals=[] (at pp.c:21793)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21795)
      FuncCall:  (at None)
        ID: name='Msp430InterruptC__1__HplInterrupt__clear' (at pp.c:21796)
      FuncCall:  (at None)
        ID: name='Msp430InterruptC__1__Interrupt__fired' (at pp.c:21797)
  FuncDef:  (at pp.c:21801)
    Decl: name='HplMsp430InterruptP__Port10__fired', quals=[], storage=['static', 'inline'] (at pp.c:21801)
      FuncDecl: quals=None (at pp.c:21801)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port10__fired', quals=[] (at pp.c:21801)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21801)
      FuncCall:  (at None)
        ID: name='Msp430InterruptC__1__HplInterrupt__fired' (at pp.c:21803)
  FuncDef:  (at pp.c:21808)
    Decl: name='HplMsp430InterruptP__Port11__clear', quals=[], storage=['inline', 'static'] (at pp.c:21808)
      FuncDecl: quals=None (at pp.c:21808)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port11__clear', quals=[] (at pp.c:21808)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21810)
      Assignment: op='&=' (at pp.c:21812)
        ID: name='P1IFG' (at pp.c:21812)
        UnaryOp: op='~' (at pp.c:21812)
          BinaryOp: op='<<' (at pp.c:21812)
            Constant: type='int', value='1' (at pp.c:21812)
            Constant: type='int', value='1' (at pp.c:21812)
  FuncDef:  (at pp.c:21816)
    Decl: name='HplMsp430InterruptP__Port11__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:21816)
      FuncDecl: quals=None (at pp.c:21816)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port11__default__fired', quals=[] (at pp.c:21816)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21818)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port11__clear' (at pp.c:21820)
  FuncDef:  (at pp.c:21824)
    Decl: name='HplMsp430InterruptP__Port11__fired', quals=[], storage=['static', 'inline'] (at pp.c:21824)
      FuncDecl: quals=None (at pp.c:21824)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port11__fired', quals=[] (at pp.c:21824)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21824)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port11__default__fired' (at pp.c:21826)
  FuncDef:  (at pp.c:21831)
    Decl: name='HplMsp430InterruptP__Port12__clear', quals=[], storage=['inline', 'static'] (at pp.c:21831)
      FuncDecl: quals=None (at pp.c:21831)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port12__clear', quals=[] (at pp.c:21831)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21833)
      Assignment: op='&=' (at pp.c:21835)
        ID: name='P1IFG' (at pp.c:21835)
        UnaryOp: op='~' (at pp.c:21835)
          BinaryOp: op='<<' (at pp.c:21835)
            Constant: type='int', value='1' (at pp.c:21835)
            Constant: type='int', value='2' (at pp.c:21835)
  FuncDef:  (at pp.c:21839)
    Decl: name='HplMsp430InterruptP__Port12__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:21839)
      FuncDecl: quals=None (at pp.c:21839)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port12__default__fired', quals=[] (at pp.c:21839)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21841)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port12__clear' (at pp.c:21843)
  FuncDef:  (at pp.c:21847)
    Decl: name='HplMsp430InterruptP__Port12__fired', quals=[], storage=['static', 'inline'] (at pp.c:21847)
      FuncDecl: quals=None (at pp.c:21847)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port12__fired', quals=[] (at pp.c:21847)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21847)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port12__default__fired' (at pp.c:21849)
  FuncDef:  (at pp.c:21854)
    Decl: name='HplMsp430InterruptP__Port13__clear', quals=[], storage=['inline', 'static'] (at pp.c:21854)
      FuncDecl: quals=None (at pp.c:21854)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port13__clear', quals=[] (at pp.c:21854)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21856)
      Assignment: op='&=' (at pp.c:21858)
        ID: name='P1IFG' (at pp.c:21858)
        UnaryOp: op='~' (at pp.c:21858)
          BinaryOp: op='<<' (at pp.c:21858)
            Constant: type='int', value='1' (at pp.c:21858)
            Constant: type='int', value='3' (at pp.c:21858)
  FuncDef:  (at pp.c:21862)
    Decl: name='HplMsp430InterruptP__Port13__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:21862)
      FuncDecl: quals=None (at pp.c:21862)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port13__default__fired', quals=[] (at pp.c:21862)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21864)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port13__clear' (at pp.c:21866)
  FuncDef:  (at pp.c:21870)
    Decl: name='HplMsp430InterruptP__Port13__fired', quals=[], storage=['static', 'inline'] (at pp.c:21870)
      FuncDecl: quals=None (at pp.c:21870)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port13__fired', quals=[] (at pp.c:21870)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21870)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port13__default__fired' (at pp.c:21872)
  FuncDef:  (at pp.c:21877)
    Decl: name='CC2420CsmaP__startDone_task__postTask', quals=[], storage=['static', 'inline'] (at pp.c:21877)
      FuncDecl: quals=None (at pp.c:21877)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__startDone_task__postTask', quals=[] (at pp.c:21877)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21877)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21879)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21879)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21883)
        ID: name='__nesc_result' (at pp.c:21883)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:21883)
          ExprList:  (at pp.c:21883)
            ID: name='CC2420CsmaP__startDone_task' (at pp.c:21883)
      Return:  (at pp.c:21887)
        ID: name='__nesc_result' (at pp.c:21887)
  FuncDef:  (at pp.c:21892)
    Decl: name='CC2420CsmaP__CC2420Power__startOscillatorDone', quals=[], storage=['inline', 'static'] (at pp.c:21892)
      FuncDecl: quals=None (at pp.c:21892)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__CC2420Power__startOscillatorDone', quals=[] (at pp.c:21892)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21894)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__startDone_task__postTask' (at pp.c:21895)
  FuncDef:  (at pp.c:21899)
    Decl: name='CC2420ControlP__CC2420Power__startOscillatorDone', quals=[], storage=['static', 'inline'] (at pp.c:21899)
      FuncDecl: quals=None (at pp.c:21899)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Power__startOscillatorDone', quals=[] (at pp.c:21899)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21899)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__CC2420Power__startOscillatorDone' (at pp.c:21901)
  FuncDef:  (at pp.c:21906)
    Decl: name='CC2420ControlP__InterruptCCA__disable', quals=[], storage=['static', 'inline'] (at pp.c:21906)
      FuncDecl: quals=None (at pp.c:21906)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__InterruptCCA__disable', quals=[] (at pp.c:21906)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21906)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21908)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21908)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21912)
        ID: name='__nesc_result' (at pp.c:21912)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__0__Interrupt__disable' (at pp.c:21912)
      Return:  (at pp.c:21916)
        ID: name='__nesc_result' (at pp.c:21916)
  FuncDef:  (at pp.c:21921)
    Decl: name='CC2420ControlP__InterruptCCA__fired', quals=[], storage=['inline', 'static'] (at pp.c:21921)
      FuncDecl: quals=None (at pp.c:21921)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__InterruptCCA__fired', quals=[] (at pp.c:21921)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21923)
      Assignment: op='=' (at pp.c:21924)
        ID: name='CC2420ControlP__m_state' (at pp.c:21924)
        ID: name='CC2420ControlP__S_XOSC_STARTED' (at pp.c:21924)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__InterruptCCA__disable' (at pp.c:21925)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__IOCFG1__write' (at pp.c:21926)
        ExprList:  (at pp.c:21926)
          Constant: type='int', value='0' (at pp.c:21926)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__writeId' (at pp.c:21927)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CSN__set' (at pp.c:21928)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CSN__clr' (at pp.c:21929)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CC2420Power__startOscillatorDone' (at pp.c:21930)
  FuncDef:  (at pp.c:21934)
    Decl: name='Msp430InterruptC__0__Interrupt__fired', quals=[], storage=['static', 'inline'] (at pp.c:21934)
      FuncDecl: quals=None (at pp.c:21934)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__0__Interrupt__fired', quals=[] (at pp.c:21934)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21934)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__InterruptCCA__fired' (at pp.c:21936)
  FuncDef:  (at pp.c:21941)
    Decl: name='Msp430InterruptC__0__HplInterrupt__fired', quals=[], storage=['inline', 'static'] (at pp.c:21941)
      FuncDecl: quals=None (at pp.c:21941)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__fired', quals=[] (at pp.c:21941)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21943)
      FuncCall:  (at None)
        ID: name='Msp430InterruptC__0__HplInterrupt__clear' (at pp.c:21944)
      FuncCall:  (at None)
        ID: name='Msp430InterruptC__0__Interrupt__fired' (at pp.c:21945)
  FuncDef:  (at pp.c:21949)
    Decl: name='HplMsp430InterruptP__Port14__fired', quals=[], storage=['static', 'inline'] (at pp.c:21949)
      FuncDecl: quals=None (at pp.c:21949)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port14__fired', quals=[] (at pp.c:21949)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21949)
      FuncCall:  (at None)
        ID: name='Msp430InterruptC__0__HplInterrupt__fired' (at pp.c:21951)
  FuncDef:  (at pp.c:21956)
    Decl: name='HplMsp430InterruptP__Port15__clear', quals=[], storage=['inline', 'static'] (at pp.c:21956)
      FuncDecl: quals=None (at pp.c:21956)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port15__clear', quals=[] (at pp.c:21956)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21958)
      Assignment: op='&=' (at pp.c:21960)
        ID: name='P1IFG' (at pp.c:21960)
        UnaryOp: op='~' (at pp.c:21960)
          BinaryOp: op='<<' (at pp.c:21960)
            Constant: type='int', value='1' (at pp.c:21960)
            Constant: type='int', value='5' (at pp.c:21960)
  FuncDef:  (at pp.c:21964)
    Decl: name='HplMsp430InterruptP__Port15__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:21964)
      FuncDecl: quals=None (at pp.c:21964)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port15__default__fired', quals=[] (at pp.c:21964)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21966)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port15__clear' (at pp.c:21968)
  FuncDef:  (at pp.c:21972)
    Decl: name='HplMsp430InterruptP__Port15__fired', quals=[], storage=['static', 'inline'] (at pp.c:21972)
      FuncDecl: quals=None (at pp.c:21972)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port15__fired', quals=[] (at pp.c:21972)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21972)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port15__default__fired' (at pp.c:21974)
  FuncDef:  (at pp.c:21979)
    Decl: name='HplMsp430InterruptP__Port16__clear', quals=[], storage=['inline', 'static'] (at pp.c:21979)
      FuncDecl: quals=None (at pp.c:21979)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port16__clear', quals=[] (at pp.c:21979)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21981)
      Assignment: op='&=' (at pp.c:21983)
        ID: name='P1IFG' (at pp.c:21983)
        UnaryOp: op='~' (at pp.c:21983)
          BinaryOp: op='<<' (at pp.c:21983)
            Constant: type='int', value='1' (at pp.c:21983)
            Constant: type='int', value='6' (at pp.c:21983)
  FuncDef:  (at pp.c:21987)
    Decl: name='HplMsp430InterruptP__Port16__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:21987)
      FuncDecl: quals=None (at pp.c:21987)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port16__default__fired', quals=[] (at pp.c:21987)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21989)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port16__clear' (at pp.c:21991)
  FuncDef:  (at pp.c:21995)
    Decl: name='HplMsp430InterruptP__Port16__fired', quals=[], storage=['static', 'inline'] (at pp.c:21995)
      FuncDecl: quals=None (at pp.c:21995)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port16__fired', quals=[] (at pp.c:21995)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21995)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port16__default__fired' (at pp.c:21997)
  FuncDef:  (at pp.c:22002)
    Decl: name='HplMsp430InterruptP__Port17__clear', quals=[], storage=['inline', 'static'] (at pp.c:22002)
      FuncDecl: quals=None (at pp.c:22002)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port17__clear', quals=[] (at pp.c:22002)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22004)
      Assignment: op='&=' (at pp.c:22006)
        ID: name='P1IFG' (at pp.c:22006)
        UnaryOp: op='~' (at pp.c:22006)
          BinaryOp: op='<<' (at pp.c:22006)
            Constant: type='int', value='1' (at pp.c:22006)
            Constant: type='int', value='7' (at pp.c:22006)
  FuncDef:  (at pp.c:22010)
    Decl: name='HplMsp430InterruptP__Port17__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:22010)
      FuncDecl: quals=None (at pp.c:22010)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port17__default__fired', quals=[] (at pp.c:22010)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22012)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port17__clear' (at pp.c:22014)
  FuncDef:  (at pp.c:22018)
    Decl: name='HplMsp430InterruptP__Port17__fired', quals=[], storage=['static', 'inline'] (at pp.c:22018)
      FuncDecl: quals=None (at pp.c:22018)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port17__fired', quals=[] (at pp.c:22018)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22018)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port17__default__fired' (at pp.c:22020)
  FuncDef:  (at pp.c:22025)
    Decl: name='HplMsp430InterruptP__Port20__clear', quals=[], storage=['inline', 'static'] (at pp.c:22025)
      FuncDecl: quals=None (at pp.c:22025)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port20__clear', quals=[] (at pp.c:22025)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22027)
      Assignment: op='&=' (at pp.c:22029)
        ID: name='P2IFG' (at pp.c:22029)
        UnaryOp: op='~' (at pp.c:22029)
          BinaryOp: op='<<' (at pp.c:22029)
            Constant: type='int', value='1' (at pp.c:22029)
            Constant: type='int', value='0' (at pp.c:22029)
  FuncDef:  (at pp.c:22033)
    Decl: name='HplMsp430InterruptP__Port20__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:22033)
      FuncDecl: quals=None (at pp.c:22033)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port20__default__fired', quals=[] (at pp.c:22033)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22035)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port20__clear' (at pp.c:22037)
  FuncDef:  (at pp.c:22041)
    Decl: name='HplMsp430InterruptP__Port20__fired', quals=[], storage=['static', 'inline'] (at pp.c:22041)
      FuncDecl: quals=None (at pp.c:22041)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port20__fired', quals=[] (at pp.c:22041)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22041)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port20__default__fired' (at pp.c:22043)
  FuncDef:  (at pp.c:22048)
    Decl: name='HplMsp430InterruptP__Port21__clear', quals=[], storage=['inline', 'static'] (at pp.c:22048)
      FuncDecl: quals=None (at pp.c:22048)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port21__clear', quals=[] (at pp.c:22048)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22050)
      Assignment: op='&=' (at pp.c:22052)
        ID: name='P2IFG' (at pp.c:22052)
        UnaryOp: op='~' (at pp.c:22052)
          BinaryOp: op='<<' (at pp.c:22052)
            Constant: type='int', value='1' (at pp.c:22052)
            Constant: type='int', value='1' (at pp.c:22052)
  FuncDef:  (at pp.c:22056)
    Decl: name='HplMsp430InterruptP__Port21__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:22056)
      FuncDecl: quals=None (at pp.c:22056)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port21__default__fired', quals=[] (at pp.c:22056)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22058)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port21__clear' (at pp.c:22060)
  FuncDef:  (at pp.c:22064)
    Decl: name='HplMsp430InterruptP__Port21__fired', quals=[], storage=['static', 'inline'] (at pp.c:22064)
      FuncDecl: quals=None (at pp.c:22064)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port21__fired', quals=[] (at pp.c:22064)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22064)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port21__default__fired' (at pp.c:22066)
  FuncDef:  (at pp.c:22071)
    Decl: name='HplMsp430InterruptP__Port22__clear', quals=[], storage=['inline', 'static'] (at pp.c:22071)
      FuncDecl: quals=None (at pp.c:22071)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port22__clear', quals=[] (at pp.c:22071)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22073)
      Assignment: op='&=' (at pp.c:22075)
        ID: name='P2IFG' (at pp.c:22075)
        UnaryOp: op='~' (at pp.c:22075)
          BinaryOp: op='<<' (at pp.c:22075)
            Constant: type='int', value='1' (at pp.c:22075)
            Constant: type='int', value='2' (at pp.c:22075)
  FuncDef:  (at pp.c:22079)
    Decl: name='HplMsp430InterruptP__Port22__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:22079)
      FuncDecl: quals=None (at pp.c:22079)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port22__default__fired', quals=[] (at pp.c:22079)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22081)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port22__clear' (at pp.c:22083)
  FuncDef:  (at pp.c:22087)
    Decl: name='HplMsp430InterruptP__Port22__fired', quals=[], storage=['static', 'inline'] (at pp.c:22087)
      FuncDecl: quals=None (at pp.c:22087)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port22__fired', quals=[] (at pp.c:22087)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22087)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port22__default__fired' (at pp.c:22089)
  FuncDef:  (at pp.c:22094)
    Decl: name='HplMsp430InterruptP__Port23__clear', quals=[], storage=['inline', 'static'] (at pp.c:22094)
      FuncDecl: quals=None (at pp.c:22094)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port23__clear', quals=[] (at pp.c:22094)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22096)
      Assignment: op='&=' (at pp.c:22098)
        ID: name='P2IFG' (at pp.c:22098)
        UnaryOp: op='~' (at pp.c:22098)
          BinaryOp: op='<<' (at pp.c:22098)
            Constant: type='int', value='1' (at pp.c:22098)
            Constant: type='int', value='3' (at pp.c:22098)
  FuncDef:  (at pp.c:22102)
    Decl: name='HplMsp430InterruptP__Port23__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:22102)
      FuncDecl: quals=None (at pp.c:22102)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port23__default__fired', quals=[] (at pp.c:22102)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22104)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port23__clear' (at pp.c:22106)
  FuncDef:  (at pp.c:22110)
    Decl: name='HplMsp430InterruptP__Port23__fired', quals=[], storage=['static', 'inline'] (at pp.c:22110)
      FuncDecl: quals=None (at pp.c:22110)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port23__fired', quals=[] (at pp.c:22110)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22110)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port23__default__fired' (at pp.c:22112)
  FuncDef:  (at pp.c:22117)
    Decl: name='HplMsp430InterruptP__Port24__clear', quals=[], storage=['inline', 'static'] (at pp.c:22117)
      FuncDecl: quals=None (at pp.c:22117)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port24__clear', quals=[] (at pp.c:22117)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22119)
      Assignment: op='&=' (at pp.c:22121)
        ID: name='P2IFG' (at pp.c:22121)
        UnaryOp: op='~' (at pp.c:22121)
          BinaryOp: op='<<' (at pp.c:22121)
            Constant: type='int', value='1' (at pp.c:22121)
            Constant: type='int', value='4' (at pp.c:22121)
  FuncDef:  (at pp.c:22125)
    Decl: name='HplMsp430InterruptP__Port24__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:22125)
      FuncDecl: quals=None (at pp.c:22125)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port24__default__fired', quals=[] (at pp.c:22125)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22127)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port24__clear' (at pp.c:22129)
  FuncDef:  (at pp.c:22133)
    Decl: name='HplMsp430InterruptP__Port24__fired', quals=[], storage=['static', 'inline'] (at pp.c:22133)
      FuncDecl: quals=None (at pp.c:22133)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port24__fired', quals=[] (at pp.c:22133)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22133)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port24__default__fired' (at pp.c:22135)
  FuncDef:  (at pp.c:22140)
    Decl: name='HplMsp430InterruptP__Port25__clear', quals=[], storage=['inline', 'static'] (at pp.c:22140)
      FuncDecl: quals=None (at pp.c:22140)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port25__clear', quals=[] (at pp.c:22140)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22142)
      Assignment: op='&=' (at pp.c:22144)
        ID: name='P2IFG' (at pp.c:22144)
        UnaryOp: op='~' (at pp.c:22144)
          BinaryOp: op='<<' (at pp.c:22144)
            Constant: type='int', value='1' (at pp.c:22144)
            Constant: type='int', value='5' (at pp.c:22144)
  FuncDef:  (at pp.c:22148)
    Decl: name='HplMsp430InterruptP__Port25__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:22148)
      FuncDecl: quals=None (at pp.c:22148)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port25__default__fired', quals=[] (at pp.c:22148)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22150)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port25__clear' (at pp.c:22152)
  FuncDef:  (at pp.c:22156)
    Decl: name='HplMsp430InterruptP__Port25__fired', quals=[], storage=['static', 'inline'] (at pp.c:22156)
      FuncDecl: quals=None (at pp.c:22156)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port25__fired', quals=[] (at pp.c:22156)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22156)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port25__default__fired' (at pp.c:22158)
  FuncDef:  (at pp.c:22163)
    Decl: name='HplMsp430InterruptP__Port26__clear', quals=[], storage=['inline', 'static'] (at pp.c:22163)
      FuncDecl: quals=None (at pp.c:22163)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port26__clear', quals=[] (at pp.c:22163)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22165)
      Assignment: op='&=' (at pp.c:22167)
        ID: name='P2IFG' (at pp.c:22167)
        UnaryOp: op='~' (at pp.c:22167)
          BinaryOp: op='<<' (at pp.c:22167)
            Constant: type='int', value='1' (at pp.c:22167)
            Constant: type='int', value='6' (at pp.c:22167)
  FuncDef:  (at pp.c:22171)
    Decl: name='HplMsp430InterruptP__Port26__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:22171)
      FuncDecl: quals=None (at pp.c:22171)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port26__default__fired', quals=[] (at pp.c:22171)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22173)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port26__clear' (at pp.c:22175)
  FuncDef:  (at pp.c:22179)
    Decl: name='HplMsp430InterruptP__Port26__fired', quals=[], storage=['static', 'inline'] (at pp.c:22179)
      FuncDecl: quals=None (at pp.c:22179)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port26__fired', quals=[] (at pp.c:22179)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22179)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port26__default__fired' (at pp.c:22181)
  FuncDef:  (at pp.c:22186)
    Decl: name='HplMsp430InterruptP__Port27__clear', quals=[], storage=['inline', 'static'] (at pp.c:22186)
      FuncDecl: quals=None (at pp.c:22186)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port27__clear', quals=[] (at pp.c:22186)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22188)
      Assignment: op='&=' (at pp.c:22190)
        ID: name='P2IFG' (at pp.c:22190)
        UnaryOp: op='~' (at pp.c:22190)
          BinaryOp: op='<<' (at pp.c:22190)
            Constant: type='int', value='1' (at pp.c:22190)
            Constant: type='int', value='7' (at pp.c:22190)
  FuncDef:  (at pp.c:22194)
    Decl: name='HplMsp430InterruptP__Port27__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:22194)
      FuncDecl: quals=None (at pp.c:22194)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port27__default__fired', quals=[] (at pp.c:22194)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22196)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port27__clear' (at pp.c:22198)
  FuncDef:  (at pp.c:22202)
    Decl: name='HplMsp430InterruptP__Port27__fired', quals=[], storage=['static', 'inline'] (at pp.c:22202)
      FuncDecl: quals=None (at pp.c:22202)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port27__fired', quals=[] (at pp.c:22202)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22202)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port27__default__fired' (at pp.c:22204)
  FuncDef:  (at pp.c:22209)
    Decl: name='Msp430UsartShareP__0__ArbiterInfo__userId', quals=[], storage=['static', 'inline'] (at pp.c:22209)
      FuncDecl: quals=None (at pp.c:22209)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__ArbiterInfo__userId', quals=[] (at pp.c:22209)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:22209)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:22211)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:22211)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:22215)
        ID: name='__nesc_result' (at pp.c:22215)
        FuncCall:  (at None)
          ID: name='ArbiterP__0__ArbiterInfo__userId' (at pp.c:22215)
      Return:  (at pp.c:22219)
        ID: name='__nesc_result' (at pp.c:22219)
  FuncDef:  (at pp.c:22224)
    Decl: name='HplMsp430Usart0P__Usart__disableRxIntr', quals=[], storage=['inline', 'static'] (at pp.c:22224)
      FuncDecl: quals=None (at pp.c:22224)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__disableRxIntr', quals=[] (at pp.c:22224)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22226)
      Assignment: op='&=' (at pp.c:22227)
        ID: name='HplMsp430Usart0P__IE1' (at pp.c:22227)
        UnaryOp: op='~' (at pp.c:22227)
          BinaryOp: op='<<' (at pp.c:22227)
            Constant: type='int', value='1' (at pp.c:22227)
            Constant: type='int', value='6' (at pp.c:22227)
  FuncDef:  (at pp.c:22231)
    Decl: name='Msp430SpiNoDmaP__0__Usart__disableRxIntr', quals=[], storage=['static', 'inline'] (at pp.c:22231)
      FuncDecl: quals=None (at pp.c:22231)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__disableRxIntr', quals=[] (at pp.c:22231)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22231)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Usart__disableRxIntr' (at pp.c:22233)
  FuncDef:  (at pp.c:22238)
    Decl: name='Msp430SpiNoDmaP__0__UsartInterrupts__rxDone', quals=[], storage=['inline', 'static'] (at pp.c:22238)
      FuncDecl: quals=None (at pp.c:22238)
        ParamList:  (at pp.c:22238)
          Decl: name='data', quals=[], storage=[] (at pp.c:22238)
            TypeDecl: declname='data', quals=[] (at pp.c:22238)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartInterrupts__rxDone', quals=[] (at pp.c:22238)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22240)
      If:  (at pp.c:22242)
        ID: name='Msp430SpiNoDmaP__0__m_rx_buf' (at pp.c:22242)
        Compound:  (at pp.c:22242)
          Assignment: op='=' (at pp.c:22243)
            ArrayRef:  (at pp.c:22243)
              ID: name='Msp430SpiNoDmaP__0__m_rx_buf' (at pp.c:22243)
              BinaryOp: op='-' (at pp.c:22243)
                ID: name='Msp430SpiNoDmaP__0__m_pos' (at pp.c:22243)
                Constant: type='int', value='1' (at pp.c:22243)
            ID: name='data' (at pp.c:22243)
      If:  (at pp.c:22245)
        BinaryOp: op='<' (at pp.c:22245)
          ID: name='Msp430SpiNoDmaP__0__m_pos' (at pp.c:22245)
          ID: name='Msp430SpiNoDmaP__0__m_len' (at pp.c:22245)
        Compound:  (at pp.c:22245)
          FuncCall:  (at None)
            ID: name='Msp430SpiNoDmaP__0__continueOp' (at pp.c:22246)
        Compound:  (at pp.c:22250)
          FuncCall:  (at None)
            ID: name='Msp430SpiNoDmaP__0__Usart__disableRxIntr' (at pp.c:22251)
          FuncCall:  (at None)
            ID: name='Msp430SpiNoDmaP__0__signalDone' (at pp.c:22252)
  FuncDef:  (at pp.c:22257)
    Decl: name='Msp430UsartShareP__0__Interrupts__default__rxDone', quals=[], storage=['inline', 'static'] (at pp.c:22257)
      FuncDecl: quals=None (at pp.c:22257)
        ParamList:  (at pp.c:22257)
          Decl: name='id', quals=[], storage=[] (at pp.c:22257)
            TypeDecl: declname='id', quals=[] (at pp.c:22257)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:22257)
            TypeDecl: declname='data', quals=[] (at pp.c:22257)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__Interrupts__default__rxDone', quals=[] (at pp.c:22257)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22259)
  FuncDef:  (at pp.c:22263)
    Decl: name='Msp430UsartShareP__0__Interrupts__rxDone', quals=[], storage=['static', 'inline'] (at pp.c:22263)
      FuncDecl: quals=None (at pp.c:22263)
        ParamList:  (at pp.c:22263)
          Decl: name='arg_0x101ed5800', quals=[], storage=[] (at pp.c:22263)
            TypeDecl: declname='arg_0x101ed5800', quals=[] (at pp.c:22263)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:22263)
            TypeDecl: declname='data', quals=[] (at pp.c:22263)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__Interrupts__rxDone', quals=[] (at pp.c:22263)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22263)
      Switch:  (at pp.c:22265)
        ID: name='arg_0x101ed5800' (at pp.c:22265)
        Compound:  (at pp.c:22265)
          Case:  (at pp.c:22267)
            ID: name='Msp430Usart0C__0__CLIENT_ID' (at pp.c:22267)
            FuncCall:  (at None)
              ID: name='Msp430SpiNoDmaP__0__UsartInterrupts__rxDone' (at pp.c:22269)
              ExprList:  (at pp.c:22269)
                ID: name='data' (at pp.c:22269)
          Break:  (at pp.c:22271)
          Default:  (at pp.c:22273)
            FuncCall:  (at None)
              ID: name='Msp430UsartShareP__0__Interrupts__default__rxDone' (at pp.c:22275)
              ExprList:  (at pp.c:22275)
                ID: name='arg_0x101ed5800' (at pp.c:22275)
                ID: name='data' (at pp.c:22275)
          Break:  (at pp.c:22277)
  FuncDef:  (at pp.c:22284)
    Decl: name='Msp430UsartShareP__0__ArbiterInfo__inUse', quals=[], storage=['static', 'inline'] (at pp.c:22284)
      FuncDecl: quals=None (at pp.c:22284)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__ArbiterInfo__inUse', quals=[] (at pp.c:22284)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:22284)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:22286)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:22286)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:22290)
        ID: name='__nesc_result' (at pp.c:22290)
        FuncCall:  (at None)
          ID: name='ArbiterP__0__ArbiterInfo__inUse' (at pp.c:22290)
      Return:  (at pp.c:22294)
        ID: name='__nesc_result' (at pp.c:22294)
  FuncDef:  (at pp.c:22299)
    Decl: name='Msp430UsartShareP__0__RawInterrupts__rxDone', quals=[], storage=['inline', 'static'] (at pp.c:22299)
      FuncDecl: quals=None (at pp.c:22299)
        ParamList:  (at pp.c:22299)
          Decl: name='data', quals=[], storage=[] (at pp.c:22299)
            TypeDecl: declname='data', quals=[] (at pp.c:22299)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__RawInterrupts__rxDone', quals=[] (at pp.c:22299)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22301)
      If:  (at pp.c:22302)
        FuncCall:  (at None)
          ID: name='Msp430UsartShareP__0__ArbiterInfo__inUse' (at pp.c:22302)
        Compound:  (at pp.c:22302)
          FuncCall:  (at None)
            ID: name='Msp430UsartShareP__0__Interrupts__rxDone' (at pp.c:22303)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430UsartShareP__0__ArbiterInfo__userId' (at pp.c:22303)
              ID: name='data' (at pp.c:22303)
  FuncDef:  (at pp.c:22308)
    Decl: name='HplMsp430Usart0P__Interrupts__rxDone', quals=[], storage=['static', 'inline'] (at pp.c:22308)
      FuncDecl: quals=None (at pp.c:22308)
        ParamList:  (at pp.c:22308)
          Decl: name='data', quals=[], storage=[] (at pp.c:22308)
            TypeDecl: declname='data', quals=[] (at pp.c:22308)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Interrupts__rxDone', quals=[] (at pp.c:22308)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22308)
      FuncCall:  (at None)
        ID: name='Msp430UsartShareP__0__RawInterrupts__rxDone' (at pp.c:22310)
        ExprList:  (at pp.c:22310)
          ID: name='data' (at pp.c:22310)
  FuncDef:  (at pp.c:22315)
    Decl: name='HplMsp430I2C0P__HplI2C__isI2C', quals=[], storage=['inline', 'static'] (at pp.c:22315)
      FuncDecl: quals=None (at pp.c:22315)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430I2C0P__HplI2C__isI2C', quals=[] (at pp.c:22315)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:22317)
      Compound:  (at pp.c:22320)
        Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:22321)
          TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:22321)
            IdentifierType: names=['char', 'unsigned'] (at None)
          BinaryOp: op='&&' (at pp.c:22323)
            BinaryOp: op='&&' (at pp.c:22323)
              BinaryOp: op='&' (at pp.c:22323)
                ID: name='HplMsp430I2C0P__U0CTL' (at pp.c:22323)
                Constant: type='int', value='0x20' (at pp.c:22323)
              BinaryOp: op='&' (at pp.c:22323)
                ID: name='HplMsp430I2C0P__U0CTL' (at pp.c:22323)
                Constant: type='int', value='0x04' (at pp.c:22323)
            BinaryOp: op='&' (at pp.c:22323)
              ID: name='HplMsp430I2C0P__U0CTL' (at pp.c:22323)
              Constant: type='int', value='0x01' (at pp.c:22323)
        Return:  (at pp.c:22326)
          ID: name='__nesc_temp' (at pp.c:22326)
  FuncDef:  (at pp.c:22331)
    Decl: name='HplMsp430Usart0P__HplI2C__isI2C', quals=[], storage=['static', 'inline'] (at pp.c:22331)
      FuncDecl: quals=None (at pp.c:22331)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__HplI2C__isI2C', quals=[] (at pp.c:22331)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:22331)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:22333)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:22333)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:22337)
        ID: name='__nesc_result' (at pp.c:22337)
        FuncCall:  (at None)
          ID: name='HplMsp430I2C0P__HplI2C__isI2C' (at pp.c:22337)
      Return:  (at pp.c:22341)
        ID: name='__nesc_result' (at pp.c:22341)
  FuncDef:  (at pp.c:22346)
    Decl: name='Msp430UsartShareP__0__I2CInterrupts__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:22346)
      FuncDecl: quals=None (at pp.c:22346)
        ParamList:  (at pp.c:22346)
          Decl: name='id', quals=[], storage=[] (at pp.c:22346)
            TypeDecl: declname='id', quals=[] (at pp.c:22346)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__I2CInterrupts__default__fired', quals=[] (at pp.c:22346)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22348)
  FuncDef:  (at pp.c:22352)
    Decl: name='Msp430UsartShareP__0__I2CInterrupts__fired', quals=[], storage=['static', 'inline'] (at pp.c:22352)
      FuncDecl: quals=None (at pp.c:22352)
        ParamList:  (at pp.c:22352)
          Decl: name='arg_0x101ed4620', quals=[], storage=[] (at pp.c:22352)
            TypeDecl: declname='arg_0x101ed4620', quals=[] (at pp.c:22352)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__I2CInterrupts__fired', quals=[] (at pp.c:22352)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22352)
      FuncCall:  (at None)
        ID: name='Msp430UsartShareP__0__I2CInterrupts__default__fired' (at pp.c:22354)
        ExprList:  (at pp.c:22354)
          ID: name='arg_0x101ed4620' (at pp.c:22354)
  FuncDef:  (at pp.c:22359)
    Decl: name='Msp430UsartShareP__0__RawI2CInterrupts__fired', quals=[], storage=['inline', 'static'] (at pp.c:22359)
      FuncDecl: quals=None (at pp.c:22359)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__RawI2CInterrupts__fired', quals=[] (at pp.c:22359)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22361)
      If:  (at pp.c:22362)
        FuncCall:  (at None)
          ID: name='Msp430UsartShareP__0__ArbiterInfo__inUse' (at pp.c:22362)
        Compound:  (at pp.c:22362)
          FuncCall:  (at None)
            ID: name='Msp430UsartShareP__0__I2CInterrupts__fired' (at pp.c:22363)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430UsartShareP__0__ArbiterInfo__userId' (at pp.c:22363)
  FuncDef:  (at pp.c:22368)
    Decl: name='HplMsp430Usart0P__I2CInterrupts__fired', quals=[], storage=['static', 'inline'] (at pp.c:22368)
      FuncDecl: quals=None (at pp.c:22368)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__I2CInterrupts__fired', quals=[] (at pp.c:22368)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22368)
      FuncCall:  (at None)
        ID: name='Msp430UsartShareP__0__RawI2CInterrupts__fired' (at pp.c:22370)
  FuncDef:  (at pp.c:22375)
    Decl: name='Msp430SpiNoDmaP__0__UsartInterrupts__txDone', quals=[], storage=['inline', 'static'] (at pp.c:22375)
      FuncDecl: quals=None (at pp.c:22375)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartInterrupts__txDone', quals=[] (at pp.c:22375)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22377)
  FuncDef:  (at pp.c:22381)
    Decl: name='Msp430UsartShareP__0__Interrupts__default__txDone', quals=[], storage=['inline', 'static'] (at pp.c:22381)
      FuncDecl: quals=None (at pp.c:22381)
        ParamList:  (at pp.c:22381)
          Decl: name='id', quals=[], storage=[] (at pp.c:22381)
            TypeDecl: declname='id', quals=[] (at pp.c:22381)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__Interrupts__default__txDone', quals=[] (at pp.c:22381)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22383)
  FuncDef:  (at pp.c:22387)
    Decl: name='Msp430UsartShareP__0__Interrupts__txDone', quals=[], storage=['static', 'inline'] (at pp.c:22387)
      FuncDecl: quals=None (at pp.c:22387)
        ParamList:  (at pp.c:22387)
          Decl: name='arg_0x101ed5800', quals=[], storage=[] (at pp.c:22387)
            TypeDecl: declname='arg_0x101ed5800', quals=[] (at pp.c:22387)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__Interrupts__txDone', quals=[] (at pp.c:22387)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22387)
      Switch:  (at pp.c:22389)
        ID: name='arg_0x101ed5800' (at pp.c:22389)
        Compound:  (at pp.c:22389)
          Case:  (at pp.c:22391)
            ID: name='Msp430Usart0C__0__CLIENT_ID' (at pp.c:22391)
            FuncCall:  (at None)
              ID: name='Msp430SpiNoDmaP__0__UsartInterrupts__txDone' (at pp.c:22393)
          Break:  (at pp.c:22395)
          Default:  (at pp.c:22397)
            FuncCall:  (at None)
              ID: name='Msp430UsartShareP__0__Interrupts__default__txDone' (at pp.c:22399)
              ExprList:  (at pp.c:22399)
                ID: name='arg_0x101ed5800' (at pp.c:22399)
          Break:  (at pp.c:22401)
  FuncDef:  (at pp.c:22408)
    Decl: name='Msp430UsartShareP__0__RawInterrupts__txDone', quals=[], storage=['inline', 'static'] (at pp.c:22408)
      FuncDecl: quals=None (at pp.c:22408)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__RawInterrupts__txDone', quals=[] (at pp.c:22408)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22410)
      If:  (at pp.c:22411)
        FuncCall:  (at None)
          ID: name='Msp430UsartShareP__0__ArbiterInfo__inUse' (at pp.c:22411)
        Compound:  (at pp.c:22411)
          FuncCall:  (at None)
            ID: name='Msp430UsartShareP__0__Interrupts__txDone' (at pp.c:22412)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430UsartShareP__0__ArbiterInfo__userId' (at pp.c:22412)
  FuncDef:  (at pp.c:22417)
    Decl: name='HplMsp430Usart0P__Interrupts__txDone', quals=[], storage=['static', 'inline'] (at pp.c:22417)
      FuncDecl: quals=None (at pp.c:22417)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Interrupts__txDone', quals=[] (at pp.c:22417)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22417)
      FuncCall:  (at None)
        ID: name='Msp430UsartShareP__0__RawInterrupts__txDone' (at pp.c:22419)
  FuncDef:  (at pp.c:22424)
    Decl: name='Msp430UsartShareP__1__ArbiterInfo__userId', quals=[], storage=['static', 'inline'] (at pp.c:22424)
      FuncDecl: quals=None (at pp.c:22424)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430UsartShareP__1__ArbiterInfo__userId', quals=[] (at pp.c:22424)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:22424)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:22426)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:22426)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:22430)
        ID: name='__nesc_result' (at pp.c:22430)
        FuncCall:  (at None)
          ID: name='ArbiterP__1__ArbiterInfo__userId' (at pp.c:22430)
      Return:  (at pp.c:22434)
        ID: name='__nesc_result' (at pp.c:22434)
  FuncDef:  (at pp.c:22439)
    Decl: name='SerialP__SerialFrameComm__dataReceived', quals=[], storage=['inline', 'static'] (at pp.c:22439)
      FuncDecl: quals=None (at pp.c:22439)
        ParamList:  (at pp.c:22439)
          Decl: name='data', quals=[], storage=[] (at pp.c:22439)
            TypeDecl: declname='data', quals=[] (at pp.c:22439)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SerialP__SerialFrameComm__dataReceived', quals=[] (at pp.c:22439)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22441)
      FuncCall:  (at None)
        ID: name='SerialP__rx_state_machine' (at pp.c:22442)
        ExprList:  (at pp.c:22442)
          ID: name='FALSE' (at pp.c:22442)
          ID: name='data' (at pp.c:22442)
  FuncDef:  (at pp.c:22446)
    Decl: name='HdlcTranslateC__SerialFrameComm__dataReceived', quals=[], storage=['static', 'inline'] (at pp.c:22446)
      FuncDecl: quals=None (at pp.c:22446)
        ParamList:  (at pp.c:22446)
          Decl: name='data', quals=[], storage=[] (at pp.c:22446)
            TypeDecl: declname='data', quals=[] (at pp.c:22446)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='HdlcTranslateC__SerialFrameComm__dataReceived', quals=[] (at pp.c:22446)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22446)
      FuncCall:  (at None)
        ID: name='SerialP__SerialFrameComm__dataReceived' (at pp.c:22448)
        ExprList:  (at pp.c:22448)
          ID: name='data' (at pp.c:22448)
  FuncDef:  (at pp.c:22453)
    Decl: name='SerialP__SerialFrameComm__delimiterReceived', quals=[], storage=['inline', 'static'] (at pp.c:22453)
      FuncDecl: quals=None (at pp.c:22453)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__SerialFrameComm__delimiterReceived', quals=[] (at pp.c:22453)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22455)
      FuncCall:  (at None)
        ID: name='SerialP__rx_state_machine' (at pp.c:22456)
        ExprList:  (at pp.c:22456)
          ID: name='TRUE' (at pp.c:22456)
          Constant: type='int', value='0' (at pp.c:22456)
  FuncDef:  (at pp.c:22460)
    Decl: name='HdlcTranslateC__SerialFrameComm__delimiterReceived', quals=[], storage=['static', 'inline'] (at pp.c:22460)
      FuncDecl: quals=None (at pp.c:22460)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HdlcTranslateC__SerialFrameComm__delimiterReceived', quals=[] (at pp.c:22460)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22460)
      FuncCall:  (at None)
        ID: name='SerialP__SerialFrameComm__delimiterReceived' (at pp.c:22462)
  FuncDef:  (at pp.c:22467)
    Decl: name='HdlcTranslateC__UartStream__receivedByte', quals=[], storage=['inline', 'static'] (at pp.c:22467)
      FuncDecl: quals=None (at pp.c:22467)
        ParamList:  (at pp.c:22467)
          Decl: name='data', quals=[], storage=[] (at pp.c:22467)
            TypeDecl: declname='data', quals=[] (at pp.c:22467)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='HdlcTranslateC__UartStream__receivedByte', quals=[] (at pp.c:22467)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22469)
      If:  (at pp.c:22476)
        BinaryOp: op='==' (at pp.c:22476)
          ID: name='data' (at pp.c:22476)
          ID: name='HDLC_FLAG_BYTE' (at pp.c:22476)
        Compound:  (at pp.c:22476)
          FuncCall:  (at None)
            ID: name='HdlcTranslateC__SerialFrameComm__delimiterReceived' (at pp.c:22478)
          Return:  (at pp.c:22479)
        Compound:  (at pp.c:22481)
          If:  (at pp.c:22483)
            BinaryOp: op='==' (at pp.c:22483)
              ID: name='data' (at pp.c:22483)
              ID: name='HDLC_CTLESC_BYTE' (at pp.c:22483)
            Compound:  (at pp.c:22483)
              Assignment: op='=' (at pp.c:22485)
                StructRef: type='.' (at pp.c:22485)
                  ID: name='HdlcTranslateC__state' (at pp.c:22485)
                  ID: name='receiveEscape' (at pp.c:22485)
                Constant: type='int', value='1' (at pp.c:22485)
              Return:  (at pp.c:22486)
            Compound:  (at pp.c:22488)
              If:  (at pp.c:22490)
                StructRef: type='.' (at pp.c:22490)
                  ID: name='HdlcTranslateC__state' (at pp.c:22490)
                  ID: name='receiveEscape' (at pp.c:22490)
                Compound:  (at pp.c:22490)
                  Assignment: op='=' (at pp.c:22492)
                    StructRef: type='.' (at pp.c:22492)
                      ID: name='HdlcTranslateC__state' (at pp.c:22492)
                      ID: name='receiveEscape' (at pp.c:22492)
                    Constant: type='int', value='0' (at pp.c:22492)
                  Assignment: op='=' (at pp.c:22493)
                    ID: name='data' (at pp.c:22493)
                    BinaryOp: op='^' (at pp.c:22493)
                      ID: name='data' (at pp.c:22493)
                      Constant: type='int', value='0x20' (at pp.c:22493)
      FuncCall:  (at None)
        ID: name='HdlcTranslateC__SerialFrameComm__dataReceived' (at pp.c:22498)
        ExprList:  (at pp.c:22498)
          ID: name='data' (at pp.c:22498)
  FuncDef:  (at pp.c:22502)
    Decl: name='Msp430UartP__0__UartStream__default__receivedByte', quals=[], storage=['inline', 'static'] (at pp.c:22502)
      FuncDecl: quals=None (at pp.c:22502)
        ParamList:  (at pp.c:22502)
          Decl: name='id', quals=[], storage=[] (at pp.c:22502)
            TypeDecl: declname='id', quals=[] (at pp.c:22502)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='byte', quals=[], storage=[] (at pp.c:22502)
            TypeDecl: declname='byte', quals=[] (at pp.c:22502)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__UartStream__default__receivedByte', quals=[] (at pp.c:22502)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22504)
  FuncDef:  (at pp.c:22508)
    Decl: name='Msp430UartP__0__UartStream__receivedByte', quals=[], storage=['static', 'inline'] (at pp.c:22508)
      FuncDecl: quals=None (at pp.c:22508)
        ParamList:  (at pp.c:22508)
          Decl: name='arg_0x1027dc7e0', quals=[], storage=[] (at pp.c:22508)
            TypeDecl: declname='arg_0x1027dc7e0', quals=[] (at pp.c:22508)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='byte', quals=[], storage=[] (at pp.c:22508)
            TypeDecl: declname='byte', quals=[] (at pp.c:22508)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__UartStream__receivedByte', quals=[] (at pp.c:22508)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22508)
      Switch:  (at pp.c:22510)
        ID: name='arg_0x1027dc7e0' (at pp.c:22510)
        Compound:  (at pp.c:22510)
          Case:  (at pp.c:22512)
            ID: name='Msp430Uart1C__0__CLIENT_ID' (at pp.c:22512)
            FuncCall:  (at None)
              ID: name='HdlcTranslateC__UartStream__receivedByte' (at pp.c:22514)
              ExprList:  (at pp.c:22514)
                ID: name='byte' (at pp.c:22514)
          Break:  (at pp.c:22516)
          Default:  (at pp.c:22518)
            FuncCall:  (at None)
              ID: name='Msp430UartP__0__UartStream__default__receivedByte' (at pp.c:22520)
              ExprList:  (at pp.c:22520)
                ID: name='arg_0x1027dc7e0' (at pp.c:22520)
                ID: name='byte' (at pp.c:22520)
          Break:  (at pp.c:22522)
  FuncDef:  (at pp.c:22529)
    Decl: name='HdlcTranslateC__UartStream__receiveDone', quals=[], storage=['inline', 'static'] (at pp.c:22529)
      FuncDecl: quals=None (at pp.c:22529)
        ParamList:  (at pp.c:22529)
          Decl: name='buf', quals=[], storage=[] (at pp.c:22529)
            PtrDecl: quals=[] (at pp.c:22529)
              TypeDecl: declname='buf', quals=[] (at pp.c:22529)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:22529)
            TypeDecl: declname='len', quals=[] (at pp.c:22529)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:22529)
            TypeDecl: declname='error', quals=[] (at pp.c:22529)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='HdlcTranslateC__UartStream__receiveDone', quals=[] (at pp.c:22529)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22531)
  FuncDef:  (at pp.c:22535)
    Decl: name='Msp430UartP__0__UartStream__default__receiveDone', quals=[], storage=['inline', 'static'] (at pp.c:22535)
      FuncDecl: quals=None (at pp.c:22535)
        ParamList:  (at pp.c:22535)
          Decl: name='id', quals=[], storage=[] (at pp.c:22535)
            TypeDecl: declname='id', quals=[] (at pp.c:22535)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:22535)
            PtrDecl: quals=[] (at pp.c:22535)
              TypeDecl: declname='buf', quals=[] (at pp.c:22535)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:22535)
            TypeDecl: declname='len', quals=[] (at pp.c:22535)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:22535)
            TypeDecl: declname='error', quals=[] (at pp.c:22535)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__UartStream__default__receiveDone', quals=[] (at pp.c:22535)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22537)
  FuncDef:  (at pp.c:22541)
    Decl: name='Msp430UartP__0__UartStream__receiveDone', quals=[], storage=['static', 'inline'] (at pp.c:22541)
      FuncDecl: quals=None (at pp.c:22541)
        ParamList:  (at pp.c:22541)
          Decl: name='arg_0x1027dc7e0', quals=[], storage=[] (at pp.c:22541)
            TypeDecl: declname='arg_0x1027dc7e0', quals=[] (at pp.c:22541)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:22541)
            PtrDecl: quals=[] (at pp.c:22541)
              TypeDecl: declname='buf', quals=[] (at pp.c:22541)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:22541)
            TypeDecl: declname='len', quals=[] (at pp.c:22541)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:22541)
            TypeDecl: declname='error', quals=[] (at pp.c:22541)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__UartStream__receiveDone', quals=[] (at pp.c:22541)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22541)
      Switch:  (at pp.c:22543)
        ID: name='arg_0x1027dc7e0' (at pp.c:22543)
        Compound:  (at pp.c:22543)
          Case:  (at pp.c:22545)
            ID: name='Msp430Uart1C__0__CLIENT_ID' (at pp.c:22545)
            FuncCall:  (at None)
              ID: name='HdlcTranslateC__UartStream__receiveDone' (at pp.c:22547)
              ExprList:  (at pp.c:22547)
                ID: name='buf' (at pp.c:22547)
                ID: name='len' (at pp.c:22547)
                ID: name='error' (at pp.c:22547)
          Break:  (at pp.c:22549)
          Default:  (at pp.c:22551)
            FuncCall:  (at None)
              ID: name='Msp430UartP__0__UartStream__default__receiveDone' (at pp.c:22553)
              ExprList:  (at pp.c:22553)
                ID: name='arg_0x1027dc7e0' (at pp.c:22553)
                ID: name='buf' (at pp.c:22553)
                ID: name='len' (at pp.c:22553)
                ID: name='error' (at pp.c:22553)
          Break:  (at pp.c:22555)
  FuncDef:  (at pp.c:22562)
    Decl: name='Msp430UartP__0__UsartInterrupts__rxDone', quals=[], storage=['inline', 'static'] (at pp.c:22562)
      FuncDecl: quals=None (at pp.c:22562)
        ParamList:  (at pp.c:22562)
          Decl: name='id', quals=[], storage=[] (at pp.c:22562)
            TypeDecl: declname='id', quals=[] (at pp.c:22562)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:22562)
            TypeDecl: declname='data', quals=[] (at pp.c:22562)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__UsartInterrupts__rxDone', quals=[] (at pp.c:22562)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22564)
      If:  (at pp.c:22565)
        ID: name='Msp430UartP__0__m_rx_buf' (at pp.c:22565)
        Compound:  (at pp.c:22565)
          Assignment: op='=' (at pp.c:22566)
            ArrayRef:  (at pp.c:22566)
              ID: name='Msp430UartP__0__m_rx_buf' (at pp.c:22566)
              UnaryOp: op='p++' (at pp.c:22566)
                ID: name='Msp430UartP__0__m_rx_pos' (at pp.c:22566)
            ID: name='data' (at pp.c:22566)
          If:  (at pp.c:22567)
            BinaryOp: op='>=' (at pp.c:22567)
              ID: name='Msp430UartP__0__m_rx_pos' (at pp.c:22567)
              ID: name='Msp430UartP__0__m_rx_len' (at pp.c:22567)
            Compound:  (at pp.c:22567)
              Decl: name='buf', quals=[], storage=[] (at pp.c:22568)
                PtrDecl: quals=[] (at pp.c:22568)
                  TypeDecl: declname='buf', quals=[] (at pp.c:22568)
                    IdentifierType: names=['uint8_t'] (at None)
                ID: name='Msp430UartP__0__m_rx_buf' (at pp.c:22568)
              Assignment: op='=' (at pp.c:22571)
                ID: name='Msp430UartP__0__m_rx_buf' (at pp.c:22571)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    PtrDecl: quals=[] (at pp.c:22571)
                      TypeDecl: declname=None, quals=[] (at None)
                        IdentifierType: names=['void'] (at None)
                  Constant: type='int', value='0' (at pp.c:22571)
              FuncCall:  (at None)
                ID: name='Msp430UartP__0__UartStream__receiveDone' (at pp.c:22572)
                ExprList:  (at pp.c:22572)
                  ID: name='id' (at pp.c:22572)
                  ID: name='buf' (at pp.c:22572)
                  ID: name='Msp430UartP__0__m_rx_len' (at pp.c:22572)
                  ID: name='SUCCESS' (at pp.c:22572)
        Compound:  (at pp.c:22577)
          FuncCall:  (at None)
            ID: name='Msp430UartP__0__UartStream__receivedByte' (at pp.c:22578)
            ExprList:  (at pp.c:22578)
              ID: name='id' (at pp.c:22578)
              ID: name='data' (at pp.c:22578)
  FuncDef:  (at pp.c:22583)
    Decl: name='Msp430UsartShareP__1__Interrupts__default__rxDone', quals=[], storage=['inline', 'static'] (at pp.c:22583)
      FuncDecl: quals=None (at pp.c:22583)
        ParamList:  (at pp.c:22583)
          Decl: name='id', quals=[], storage=[] (at pp.c:22583)
            TypeDecl: declname='id', quals=[] (at pp.c:22583)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:22583)
            TypeDecl: declname='data', quals=[] (at pp.c:22583)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UsartShareP__1__Interrupts__default__rxDone', quals=[] (at pp.c:22583)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22585)
  FuncDef:  (at pp.c:22589)
    Decl: name='Msp430UsartShareP__1__Interrupts__rxDone', quals=[], storage=['static', 'inline'] (at pp.c:22589)
      FuncDecl: quals=None (at pp.c:22589)
        ParamList:  (at pp.c:22589)
          Decl: name='arg_0x101ed5800', quals=[], storage=[] (at pp.c:22589)
            TypeDecl: declname='arg_0x101ed5800', quals=[] (at pp.c:22589)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:22589)
            TypeDecl: declname='data', quals=[] (at pp.c:22589)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UsartShareP__1__Interrupts__rxDone', quals=[] (at pp.c:22589)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22589)
      Switch:  (at pp.c:22591)
        ID: name='arg_0x101ed5800' (at pp.c:22591)
        Compound:  (at pp.c:22591)
          Case:  (at pp.c:22593)
            ID: name='Msp430Usart1C__0__CLIENT_ID' (at pp.c:22593)
            FuncCall:  (at None)
              ID: name='Msp430UartP__0__UsartInterrupts__rxDone' (at pp.c:22595)
              ExprList:  (at pp.c:22595)
                ID: name='Msp430Uart1C__0__CLIENT_ID' (at pp.c:22595)
                ID: name='data' (at pp.c:22595)
          Break:  (at pp.c:22597)
          Default:  (at pp.c:22599)
            FuncCall:  (at None)
              ID: name='Msp430UsartShareP__1__Interrupts__default__rxDone' (at pp.c:22601)
              ExprList:  (at pp.c:22601)
                ID: name='arg_0x101ed5800' (at pp.c:22601)
                ID: name='data' (at pp.c:22601)
          Break:  (at pp.c:22603)
  FuncDef:  (at pp.c:22610)
    Decl: name='Msp430UsartShareP__1__ArbiterInfo__inUse', quals=[], storage=['static', 'inline'] (at pp.c:22610)
      FuncDecl: quals=None (at pp.c:22610)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430UsartShareP__1__ArbiterInfo__inUse', quals=[] (at pp.c:22610)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:22610)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:22612)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:22612)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:22616)
        ID: name='__nesc_result' (at pp.c:22616)
        FuncCall:  (at None)
          ID: name='ArbiterP__1__ArbiterInfo__inUse' (at pp.c:22616)
      Return:  (at pp.c:22620)
        ID: name='__nesc_result' (at pp.c:22620)
  FuncDef:  (at pp.c:22625)
    Decl: name='Msp430UsartShareP__1__RawInterrupts__rxDone', quals=[], storage=['inline', 'static'] (at pp.c:22625)
      FuncDecl: quals=None (at pp.c:22625)
        ParamList:  (at pp.c:22625)
          Decl: name='data', quals=[], storage=[] (at pp.c:22625)
            TypeDecl: declname='data', quals=[] (at pp.c:22625)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UsartShareP__1__RawInterrupts__rxDone', quals=[] (at pp.c:22625)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22627)
      If:  (at pp.c:22628)
        FuncCall:  (at None)
          ID: name='Msp430UsartShareP__1__ArbiterInfo__inUse' (at pp.c:22628)
        Compound:  (at pp.c:22628)
          FuncCall:  (at None)
            ID: name='Msp430UsartShareP__1__Interrupts__rxDone' (at pp.c:22629)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430UsartShareP__1__ArbiterInfo__userId' (at pp.c:22629)
              ID: name='data' (at pp.c:22629)
  FuncDef:  (at pp.c:22634)
    Decl: name='HplMsp430Usart1P__Interrupts__rxDone', quals=[], storage=['static', 'inline'] (at pp.c:22634)
      FuncDecl: quals=None (at pp.c:22634)
        ParamList:  (at pp.c:22634)
          Decl: name='data', quals=[], storage=[] (at pp.c:22634)
            TypeDecl: declname='data', quals=[] (at pp.c:22634)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__Interrupts__rxDone', quals=[] (at pp.c:22634)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22634)
      FuncCall:  (at None)
        ID: name='Msp430UsartShareP__1__RawInterrupts__rxDone' (at pp.c:22636)
        ExprList:  (at pp.c:22636)
          ID: name='data' (at pp.c:22636)
  FuncDef:  (at pp.c:22641)
    Decl: name='SerialP__valid_rx_proto', quals=[], storage=['inline', 'static'] (at pp.c:22641)
      FuncDecl: quals=None (at pp.c:22641)
        ParamList:  (at pp.c:22641)
          Decl: name='proto', quals=[], storage=[] (at pp.c:22641)
            TypeDecl: declname='proto', quals=[] (at pp.c:22641)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SerialP__valid_rx_proto', quals=[] (at pp.c:22641)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:22643)
      Switch:  (at pp.c:22644)
        ID: name='proto' (at pp.c:22644)
        Compound:  (at pp.c:22644)
          Case:  (at pp.c:22645)
            ID: name='SERIAL_PROTO_PACKET_ACK' (at pp.c:22645)
            Return:  (at pp.c:22646)
              ID: name='TRUE' (at pp.c:22646)
          Case:  (at pp.c:22647)
            ID: name='SERIAL_PROTO_ACK' (at pp.c:22647)
            Case:  (at pp.c:22648)
              ID: name='SERIAL_PROTO_PACKET_NOACK' (at pp.c:22648)
              Default:  (at pp.c:22649)
                Return:  (at pp.c:22650)
                  ID: name='FALSE' (at pp.c:22650)
  FuncDef:  (at pp.c:22655)
    Decl: name='SerialDispatcherP__0__lockCurrentBuffer', quals=[], storage=['inline', 'static'] (at pp.c:22655)
      FuncDecl: quals=None (at pp.c:22655)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__lockCurrentBuffer', quals=[] (at pp.c:22655)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22657)
      If:  (at pp.c:22658)
        StructRef: type='.' (at pp.c:22658)
          ID: name='SerialDispatcherP__0__receiveState' (at pp.c:22658)
          ID: name='which' (at pp.c:22658)
        Compound:  (at pp.c:22658)
          Assignment: op='=' (at pp.c:22659)
            StructRef: type='.' (at pp.c:22659)
              ID: name='SerialDispatcherP__0__receiveState' (at pp.c:22659)
              ID: name='bufOneLocked' (at pp.c:22659)
            Constant: type='int', value='1' (at pp.c:22659)
        Compound:  (at pp.c:22661)
          Assignment: op='=' (at pp.c:22662)
            StructRef: type='.' (at pp.c:22662)
              ID: name='SerialDispatcherP__0__receiveState' (at pp.c:22662)
              ID: name='bufZeroLocked' (at pp.c:22662)
            Constant: type='int', value='1' (at pp.c:22662)
  FuncDef:  (at pp.c:22667)
    Decl: name='SerialDispatcherP__0__isCurrentBufferLocked', quals=[], storage=['inline', 'static'] (at pp.c:22667)
      FuncDecl: quals=None (at pp.c:22667)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__isCurrentBufferLocked', quals=[] (at pp.c:22667)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:22669)
      Return:  (at pp.c:22670)
        TernaryOp:  (at pp.c:22670)
          StructRef: type='.' (at pp.c:22670)
            ID: name='SerialDispatcherP__0__receiveState' (at pp.c:22670)
            ID: name='which' (at pp.c:22670)
          StructRef: type='.' (at pp.c:22670)
            ID: name='SerialDispatcherP__0__receiveState' (at pp.c:22670)
            ID: name='bufOneLocked' (at pp.c:22670)
          StructRef: type='.' (at pp.c:22670)
            ID: name='SerialDispatcherP__0__receiveState' (at pp.c:22670)
            ID: name='bufZeroLocked' (at pp.c:22670)
  FuncDef:  (at pp.c:22674)
    Decl: name='SerialDispatcherP__0__ReceiveBytePacket__startPacket', quals=[], storage=['inline', 'static'] (at pp.c:22674)
      FuncDecl: quals=None (at pp.c:22674)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__ReceiveBytePacket__startPacket', quals=[] (at pp.c:22674)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22676)
      Decl: name='result', quals=[], storage=[] (at pp.c:22677)
        TypeDecl: declname='result', quals=[] (at pp.c:22677)
          IdentifierType: names=['error_t'] (at None)
        ID: name='SUCCESS' (at pp.c:22677)
      Compound:  (at pp.c:22681)
        If:  (at pp.c:22682)
          UnaryOp: op='!' (at None)
            FuncCall:  (at None)
              ID: name='SerialDispatcherP__0__isCurrentBufferLocked' (at pp.c:22682)
          Compound:  (at pp.c:22682)
            FuncCall:  (at None)
              ID: name='SerialDispatcherP__0__lockCurrentBuffer' (at pp.c:22685)
            Assignment: op='=' (at pp.c:22686)
              StructRef: type='.' (at pp.c:22686)
                ID: name='SerialDispatcherP__0__receiveState' (at pp.c:22686)
                ID: name='state' (at pp.c:22686)
              ID: name='SerialDispatcherP__0__RECV_STATE_BEGIN' (at pp.c:22686)
            Assignment: op='=' (at pp.c:22687)
              ID: name='SerialDispatcherP__0__recvIndex' (at pp.c:22687)
              Constant: type='int', value='0' (at pp.c:22687)
            Assignment: op='=' (at pp.c:22688)
              ID: name='SerialDispatcherP__0__recvType' (at pp.c:22688)
              ID: name='TOS_SERIAL_UNKNOWN_ID' (at pp.c:22688)
          Compound:  (at pp.c:22690)
            Assignment: op='=' (at pp.c:22691)
              ID: name='result' (at pp.c:22691)
              ID: name='EBUSY' (at pp.c:22691)
      Return:  (at pp.c:22694)
        ID: name='result' (at pp.c:22694)
  FuncDef:  (at pp.c:22698)
    Decl: name='SerialP__ReceiveBytePacket__startPacket', quals=[], storage=['static', 'inline'] (at pp.c:22698)
      FuncDecl: quals=None (at pp.c:22698)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__ReceiveBytePacket__startPacket', quals=[] (at pp.c:22698)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22698)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:22700)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:22700)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:22704)
        ID: name='__nesc_result' (at pp.c:22704)
        FuncCall:  (at None)
          ID: name='SerialDispatcherP__0__ReceiveBytePacket__startPacket' (at pp.c:22704)
      Return:  (at pp.c:22708)
        ID: name='__nesc_result' (at pp.c:22708)
  FuncDef:  (at pp.c:22713)
    Decl: name='SerialP__rx_current_crc', quals=[], storage=['__inline', 'static'] (at pp.c:22713)
      FuncDecl: quals=None (at pp.c:22713)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__rx_current_crc', quals=[] (at pp.c:22713)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:22715)
      Decl: name='crc', quals=[], storage=[] (at pp.c:22716)
        TypeDecl: declname='crc', quals=[] (at pp.c:22716)
          IdentifierType: names=['uint16_t'] (at None)
      Decl: name='tmp', quals=[], storage=[] (at pp.c:22717)
        TypeDecl: declname='tmp', quals=[] (at pp.c:22717)
          IdentifierType: names=['uint8_t'] (at None)
        StructRef: type='.' (at pp.c:22717)
          ID: name='SerialP__rxBuf' (at pp.c:22717)
          ID: name='writePtr' (at pp.c:22717)
      Assignment: op='=' (at pp.c:22720)
        ID: name='tmp' (at pp.c:22720)
        TernaryOp:  (at pp.c:22720)
          BinaryOp: op='==' (at pp.c:22720)
            ID: name='tmp' (at pp.c:22720)
            Constant: type='int', value='0' (at pp.c:22720)
          ID: name='SerialP__RX_DATA_BUFFER_SIZE' (at pp.c:22720)
          BinaryOp: op='-' (at pp.c:22720)
            ID: name='tmp' (at pp.c:22720)
            Constant: type='int', value='1' (at pp.c:22720)
      Assignment: op='=' (at pp.c:22721)
        ID: name='crc' (at pp.c:22721)
        BinaryOp: op='&' (at pp.c:22721)
          ArrayRef:  (at pp.c:22721)
            StructRef: type='.' (at pp.c:22721)
              ID: name='SerialP__rxBuf' (at pp.c:22721)
              ID: name='buf' (at pp.c:22721)
            ID: name='tmp' (at pp.c:22721)
          Constant: type='int', value='0x00ff' (at pp.c:22721)
      Assignment: op='=' (at pp.c:22722)
        ID: name='crc' (at pp.c:22722)
        BinaryOp: op='&' (at pp.c:22722)
          BinaryOp: op='<<' (at pp.c:22722)
            ID: name='crc' (at pp.c:22722)
            Constant: type='int', value='8' (at pp.c:22722)
          Constant: type='int', value='0xFF00' (at pp.c:22722)
      Assignment: op='=' (at pp.c:22723)
        ID: name='tmp' (at pp.c:22723)
        TernaryOp:  (at pp.c:22723)
          BinaryOp: op='==' (at pp.c:22723)
            ID: name='tmp' (at pp.c:22723)
            Constant: type='int', value='0' (at pp.c:22723)
          ID: name='SerialP__RX_DATA_BUFFER_SIZE' (at pp.c:22723)
          BinaryOp: op='-' (at pp.c:22723)
            ID: name='tmp' (at pp.c:22723)
            Constant: type='int', value='1' (at pp.c:22723)
      Assignment: op='|=' (at pp.c:22724)
        ID: name='crc' (at pp.c:22724)
        BinaryOp: op='&' (at pp.c:22724)
          ArrayRef:  (at pp.c:22724)
            StructRef: type='.' (at pp.c:22724)
              ID: name='SerialP__rxBuf' (at pp.c:22724)
              ID: name='buf' (at pp.c:22724)
            ID: name='tmp' (at pp.c:22724)
          Constant: type='int', value='0x00FF' (at pp.c:22724)
      Return:  (at pp.c:22725)
        ID: name='crc' (at pp.c:22725)
  FuncDef:  (at pp.c:22729)
    Decl: name='SerialP__ReceiveBytePacket__endPacket', quals=[], storage=['static', 'inline'] (at pp.c:22729)
      FuncDecl: quals=None (at pp.c:22729)
        ParamList:  (at pp.c:22729)
          Decl: name='result', quals=[], storage=[] (at pp.c:22729)
            TypeDecl: declname='result', quals=[] (at pp.c:22729)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='SerialP__ReceiveBytePacket__endPacket', quals=[] (at pp.c:22729)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22729)
      FuncCall:  (at None)
        ID: name='SerialDispatcherP__0__ReceiveBytePacket__endPacket' (at pp.c:22731)
        ExprList:  (at pp.c:22731)
          ID: name='result' (at pp.c:22731)
  FuncDef:  (at pp.c:22736)
    Decl: name='SerialDispatcherP__0__receiveBufferSwap', quals=[], storage=['inline', 'static'] (at pp.c:22736)
      FuncDecl: quals=None (at pp.c:22736)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__receiveBufferSwap', quals=[] (at pp.c:22736)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22738)
      Assignment: op='=' (at pp.c:22739)
        StructRef: type='.' (at pp.c:22739)
          ID: name='SerialDispatcherP__0__receiveState' (at pp.c:22739)
          ID: name='which' (at pp.c:22739)
        TernaryOp:  (at pp.c:22739)
          StructRef: type='.' (at pp.c:22739)
            ID: name='SerialDispatcherP__0__receiveState' (at pp.c:22739)
            ID: name='which' (at pp.c:22739)
          Constant: type='int', value='0' (at pp.c:22739)
          Constant: type='int', value='1' (at pp.c:22739)
      Assignment: op='=' (at pp.c:22740)
        ID: name='SerialDispatcherP__0__receiveBuffer' (at pp.c:22740)
        Cast:  (at None)
          Typename: quals=[] (at None)
            PtrDecl: quals=[] (at pp.c:22740)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['uint8_t'] (at None)
          ArrayRef:  (at pp.c:22740)
            ID: name='SerialDispatcherP__0__messagePtrs' (at pp.c:22740)
            StructRef: type='.' (at pp.c:22740)
              ID: name='SerialDispatcherP__0__receiveState' (at pp.c:22740)
              ID: name='which' (at pp.c:22740)
  FuncDef:  (at pp.c:22744)
    Decl: name='SerialDispatcherP__0__receiveTask__postTask', quals=[], storage=['static', 'inline'] (at pp.c:22744)
      FuncDecl: quals=None (at pp.c:22744)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__receiveTask__postTask', quals=[] (at pp.c:22744)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22744)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:22746)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:22746)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:22750)
        ID: name='__nesc_result' (at pp.c:22750)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:22750)
          ExprList:  (at pp.c:22750)
            ID: name='SerialDispatcherP__0__receiveTask' (at pp.c:22750)
      Return:  (at pp.c:22754)
        ID: name='__nesc_result' (at pp.c:22754)
  FuncDef:  (at pp.c:22759)
    Decl: name='SerialP__ack_queue_is_full', quals=[], storage=['__inline', 'static'] (at pp.c:22759)
      FuncDecl: quals=None (at pp.c:22759)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__ack_queue_is_full', quals=[] (at pp.c:22759)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:22761)
      Decl: name='tmp', quals=[], storage=[] (at pp.c:22762)
        TypeDecl: declname='tmp', quals=[] (at pp.c:22762)
          IdentifierType: names=['uint8_t'] (at None)
      Decl: name='tmp2', quals=[], storage=[] (at pp.c:22764)
        TypeDecl: declname='tmp2', quals=[] (at pp.c:22764)
          IdentifierType: names=['uint8_t'] (at None)
      Compound:  (at pp.c:22768)
        Assignment: op='=' (at pp.c:22769)
          ID: name='tmp' (at pp.c:22769)
          StructRef: type='.' (at pp.c:22769)
            ID: name='SerialP__ackQ' (at pp.c:22769)
            ID: name='writePtr' (at pp.c:22769)
        Assignment: op='=' (at pp.c:22770)
          ID: name='tmp2' (at pp.c:22770)
          StructRef: type='.' (at pp.c:22770)
            ID: name='SerialP__ackQ' (at pp.c:22770)
            ID: name='readPtr' (at pp.c:22770)
      If:  (at pp.c:22772)
        BinaryOp: op='>' (at pp.c:22772)
          UnaryOp: op='++' (at pp.c:22772)
            ID: name='tmp' (at pp.c:22772)
          ID: name='SerialP__ACK_QUEUE_SIZE' (at pp.c:22772)
        Compound:  (at pp.c:22772)
          Assignment: op='=' (at pp.c:22774)
            ID: name='tmp' (at pp.c:22774)
            Constant: type='int', value='0' (at pp.c:22774)
      Return:  (at pp.c:22777)
        BinaryOp: op='==' (at pp.c:22777)
          ID: name='tmp' (at pp.c:22777)
          ID: name='tmp2' (at pp.c:22777)
  FuncDef:  (at pp.c:22786)
    Decl: name='SerialP__ack_queue_push', quals=[], storage=['__inline', 'static'] (at pp.c:22786)
      FuncDecl: quals=None (at pp.c:22786)
        ParamList:  (at pp.c:22786)
          Decl: name='token', quals=[], storage=[] (at pp.c:22786)
            TypeDecl: declname='token', quals=[] (at pp.c:22786)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SerialP__ack_queue_push', quals=[] (at pp.c:22786)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22788)
      If:  (at pp.c:22789)
        UnaryOp: op='!' (at None)
          FuncCall:  (at None)
            ID: name='SerialP__ack_queue_is_full' (at pp.c:22789)
        Compound:  (at pp.c:22789)
          Compound:  (at pp.c:22792)
            Assignment: op='=' (at pp.c:22793)
              ArrayRef:  (at pp.c:22793)
                StructRef: type='.' (at pp.c:22793)
                  ID: name='SerialP__ackQ' (at pp.c:22793)
                  ID: name='buf' (at pp.c:22793)
                StructRef: type='.' (at pp.c:22793)
                  ID: name='SerialP__ackQ' (at pp.c:22793)
                  ID: name='writePtr' (at pp.c:22793)
              ID: name='token' (at pp.c:22793)
            If:  (at pp.c:22794)
              BinaryOp: op='>' (at pp.c:22794)
                UnaryOp: op='++' (at pp.c:22794)
                  StructRef: type='.' (at pp.c:22794)
                    ID: name='SerialP__ackQ' (at pp.c:22794)
                    ID: name='writePtr' (at pp.c:22794)
                ID: name='SerialP__ACK_QUEUE_SIZE' (at pp.c:22794)
              Compound:  (at pp.c:22794)
                Assignment: op='=' (at pp.c:22796)
                  StructRef: type='.' (at pp.c:22796)
                    ID: name='SerialP__ackQ' (at pp.c:22796)
                    ID: name='writePtr' (at pp.c:22796)
                  Constant: type='int', value='0' (at pp.c:22796)
          FuncCall:  (at None)
            ID: name='SerialP__MaybeScheduleTx' (at pp.c:22800)
  FuncDef:  (at pp.c:22805)
    Decl: name='HdlcTranslateC__SerialFrameComm__resetReceive', quals=[], storage=['inline', 'static'] (at pp.c:22805)
      FuncDecl: quals=None (at pp.c:22805)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HdlcTranslateC__SerialFrameComm__resetReceive', quals=[] (at pp.c:22805)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22807)
      Assignment: op='=' (at pp.c:22808)
        StructRef: type='.' (at pp.c:22808)
          ID: name='HdlcTranslateC__state' (at pp.c:22808)
          ID: name='receiveEscape' (at pp.c:22808)
        Constant: type='int', value='0' (at pp.c:22808)
  FuncDef:  (at pp.c:22812)
    Decl: name='SerialP__SerialFrameComm__resetReceive', quals=[], storage=['static', 'inline'] (at pp.c:22812)
      FuncDecl: quals=None (at pp.c:22812)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__SerialFrameComm__resetReceive', quals=[] (at pp.c:22812)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22812)
      FuncCall:  (at None)
        ID: name='HdlcTranslateC__SerialFrameComm__resetReceive' (at pp.c:22814)
  FuncDef:  (at pp.c:22819)
    Decl: name='SerialDispatcherP__0__ReceiveBytePacket__byteReceived', quals=[], storage=['inline', 'static'] (at pp.c:22819)
      FuncDecl: quals=None (at pp.c:22819)
        ParamList:  (at pp.c:22819)
          Decl: name='b', quals=[], storage=[] (at pp.c:22819)
            TypeDecl: declname='b', quals=[] (at pp.c:22819)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__ReceiveBytePacket__byteReceived', quals=[] (at pp.c:22819)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22821)
      Compound:  (at pp.c:22824)
        Switch:  (at pp.c:22825)
          StructRef: type='.' (at pp.c:22825)
            ID: name='SerialDispatcherP__0__receiveState' (at pp.c:22825)
            ID: name='state' (at pp.c:22825)
          Compound:  (at pp.c:22825)
            Case:  (at pp.c:22826)
              ID: name='SerialDispatcherP__0__RECV_STATE_BEGIN' (at pp.c:22826)
              Assignment: op='=' (at pp.c:22827)
                StructRef: type='.' (at pp.c:22827)
                  ID: name='SerialDispatcherP__0__receiveState' (at pp.c:22827)
                  ID: name='state' (at pp.c:22827)
                ID: name='SerialDispatcherP__0__RECV_STATE_DATA' (at pp.c:22827)
            Assignment: op='=' (at pp.c:22828)
              ID: name='SerialDispatcherP__0__recvIndex' (at pp.c:22828)
              FuncCall:  (at None)
                ID: name='SerialDispatcherP__0__PacketInfo__offset' (at pp.c:22828)
                ExprList:  (at pp.c:22828)
                  ID: name='b' (at pp.c:22828)
            Assignment: op='=' (at pp.c:22829)
              ID: name='SerialDispatcherP__0__recvType' (at pp.c:22829)
              ID: name='b' (at pp.c:22829)
            Break:  (at pp.c:22830)
            Case:  (at pp.c:22832)
              ID: name='SerialDispatcherP__0__RECV_STATE_DATA' (at pp.c:22832)
              If:  (at pp.c:22833)
                BinaryOp: op='<' (at pp.c:22833)
                  ID: name='SerialDispatcherP__0__recvIndex' (at pp.c:22833)
                  UnaryOp: op='sizeof' (at pp.c:22833)
                    Typename: quals=[] (at None)
                      TypeDecl: declname=None, quals=[] (at None)
                        IdentifierType: names=['message_t'] (at None)
                Compound:  (at pp.c:22833)
                  Assignment: op='=' (at pp.c:22834)
                    ArrayRef:  (at pp.c:22834)
                      ID: name='SerialDispatcherP__0__receiveBuffer' (at pp.c:22834)
                      ID: name='SerialDispatcherP__0__recvIndex' (at pp.c:22834)
                    ID: name='b' (at pp.c:22834)
                  UnaryOp: op='p++' (at pp.c:22835)
                    ID: name='SerialDispatcherP__0__recvIndex' (at pp.c:22835)
                Compound:  (at pp.c:22837)
            Break:  (at pp.c:22843)
            Case:  (at pp.c:22845)
              ID: name='SerialDispatcherP__0__RECV_STATE_IDLE' (at pp.c:22845)
              Default:  (at pp.c:22846)
  FuncDef:  (at pp.c:22854)
    Decl: name='SerialP__ReceiveBytePacket__byteReceived', quals=[], storage=['static', 'inline'] (at pp.c:22854)
      FuncDecl: quals=None (at pp.c:22854)
        ParamList:  (at pp.c:22854)
          Decl: name='data', quals=[], storage=[] (at pp.c:22854)
            TypeDecl: declname='data', quals=[] (at pp.c:22854)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SerialP__ReceiveBytePacket__byteReceived', quals=[] (at pp.c:22854)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22854)
      FuncCall:  (at None)
        ID: name='SerialDispatcherP__0__ReceiveBytePacket__byteReceived' (at pp.c:22856)
        ExprList:  (at pp.c:22856)
          ID: name='data' (at pp.c:22856)
  FuncDef:  (at pp.c:22861)
    Decl: name='SerialP__rx_buffer_top', quals=[], storage=['__inline', 'static'] (at pp.c:22861)
      FuncDecl: quals=None (at pp.c:22861)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__rx_buffer_top', quals=[] (at pp.c:22861)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:22863)
      Decl: name='tmp', quals=[], storage=[] (at pp.c:22864)
        TypeDecl: declname='tmp', quals=[] (at pp.c:22864)
          IdentifierType: names=['uint8_t'] (at None)
        ArrayRef:  (at pp.c:22864)
          StructRef: type='.' (at pp.c:22864)
            ID: name='SerialP__rxBuf' (at pp.c:22864)
            ID: name='buf' (at pp.c:22864)
          StructRef: type='.' (at pp.c:22864)
            ID: name='SerialP__rxBuf' (at pp.c:22864)
            ID: name='readPtr' (at pp.c:22864)
      Return:  (at pp.c:22867)
        ID: name='tmp' (at pp.c:22867)
  FuncDef:  (at pp.c:22871)
    Decl: name='SerialP__rx_buffer_pop', quals=[], storage=['__inline', 'static'] (at pp.c:22871)
      FuncDecl: quals=None (at pp.c:22871)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__rx_buffer_pop', quals=[] (at pp.c:22871)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:22873)
      Decl: name='tmp', quals=[], storage=[] (at pp.c:22874)
        TypeDecl: declname='tmp', quals=[] (at pp.c:22874)
          IdentifierType: names=['uint8_t'] (at None)
        ArrayRef:  (at pp.c:22874)
          StructRef: type='.' (at pp.c:22874)
            ID: name='SerialP__rxBuf' (at pp.c:22874)
            ID: name='buf' (at pp.c:22874)
          StructRef: type='.' (at pp.c:22874)
            ID: name='SerialP__rxBuf' (at pp.c:22874)
            ID: name='readPtr' (at pp.c:22874)
      If:  (at pp.c:22877)
        BinaryOp: op='>' (at pp.c:22877)
          UnaryOp: op='++' (at pp.c:22877)
            StructRef: type='.' (at pp.c:22877)
              ID: name='SerialP__rxBuf' (at pp.c:22877)
              ID: name='readPtr' (at pp.c:22877)
          ID: name='SerialP__RX_DATA_BUFFER_SIZE' (at pp.c:22877)
        Compound:  (at pp.c:22877)
          Assignment: op='=' (at pp.c:22879)
            StructRef: type='.' (at pp.c:22879)
              ID: name='SerialP__rxBuf' (at pp.c:22879)
              ID: name='readPtr' (at pp.c:22879)
            Constant: type='int', value='0' (at pp.c:22879)
      Return:  (at pp.c:22882)
        ID: name='tmp' (at pp.c:22882)
  FuncDef:  (at pp.c:22886)
    Decl: name='SerialP__rx_buffer_push', quals=[], storage=['__inline', 'static'] (at pp.c:22886)
      FuncDecl: quals=None (at pp.c:22886)
        ParamList:  (at pp.c:22886)
          Decl: name='data', quals=[], storage=[] (at pp.c:22886)
            TypeDecl: declname='data', quals=[] (at pp.c:22886)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SerialP__rx_buffer_push', quals=[] (at pp.c:22886)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22888)
      Assignment: op='=' (at pp.c:22889)
        ArrayRef:  (at pp.c:22889)
          StructRef: type='.' (at pp.c:22889)
            ID: name='SerialP__rxBuf' (at pp.c:22889)
            ID: name='buf' (at pp.c:22889)
          StructRef: type='.' (at pp.c:22889)
            ID: name='SerialP__rxBuf' (at pp.c:22889)
            ID: name='writePtr' (at pp.c:22889)
        ID: name='data' (at pp.c:22889)
      If:  (at pp.c:22890)
        BinaryOp: op='>' (at pp.c:22890)
          UnaryOp: op='++' (at pp.c:22890)
            StructRef: type='.' (at pp.c:22890)
              ID: name='SerialP__rxBuf' (at pp.c:22890)
              ID: name='writePtr' (at pp.c:22890)
          ID: name='SerialP__RX_DATA_BUFFER_SIZE' (at pp.c:22890)
        Compound:  (at pp.c:22890)
          Assignment: op='=' (at pp.c:22892)
            StructRef: type='.' (at pp.c:22892)
              ID: name='SerialP__rxBuf' (at pp.c:22892)
              ID: name='writePtr' (at pp.c:22892)
            Constant: type='int', value='0' (at pp.c:22892)
  FuncDef:  (at pp.c:22897)
    Decl: name='Msp430UartP__0__UartStream__default__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:22897)
      FuncDecl: quals=None (at pp.c:22897)
        ParamList:  (at pp.c:22897)
          Decl: name='id', quals=[], storage=[] (at pp.c:22897)
            TypeDecl: declname='id', quals=[] (at pp.c:22897)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:22897)
            PtrDecl: quals=[] (at pp.c:22897)
              TypeDecl: declname='buf', quals=[] (at pp.c:22897)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:22897)
            TypeDecl: declname='len', quals=[] (at pp.c:22897)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:22897)
            TypeDecl: declname='error', quals=[] (at pp.c:22897)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__UartStream__default__sendDone', quals=[] (at pp.c:22897)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22899)
  FuncDef:  (at pp.c:22903)
    Decl: name='Msp430UartP__0__UartStream__sendDone', quals=[], storage=['static', 'inline'] (at pp.c:22903)
      FuncDecl: quals=None (at pp.c:22903)
        ParamList:  (at pp.c:22903)
          Decl: name='arg_0x1027dc7e0', quals=[], storage=[] (at pp.c:22903)
            TypeDecl: declname='arg_0x1027dc7e0', quals=[] (at pp.c:22903)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:22903)
            PtrDecl: quals=[] (at pp.c:22903)
              TypeDecl: declname='buf', quals=[] (at pp.c:22903)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:22903)
            TypeDecl: declname='len', quals=[] (at pp.c:22903)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:22903)
            TypeDecl: declname='error', quals=[] (at pp.c:22903)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__UartStream__sendDone', quals=[] (at pp.c:22903)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22903)
      Switch:  (at pp.c:22905)
        ID: name='arg_0x1027dc7e0' (at pp.c:22905)
        Compound:  (at pp.c:22905)
          Case:  (at pp.c:22907)
            ID: name='Msp430Uart1C__0__CLIENT_ID' (at pp.c:22907)
            FuncCall:  (at None)
              ID: name='HdlcTranslateC__UartStream__sendDone' (at pp.c:22909)
              ExprList:  (at pp.c:22909)
                ID: name='buf' (at pp.c:22909)
                ID: name='len' (at pp.c:22909)
                ID: name='error' (at pp.c:22909)
          Break:  (at pp.c:22911)
          Default:  (at pp.c:22913)
            FuncCall:  (at None)
              ID: name='Msp430UartP__0__UartStream__default__sendDone' (at pp.c:22915)
              ExprList:  (at pp.c:22915)
                ID: name='arg_0x1027dc7e0' (at pp.c:22915)
                ID: name='buf' (at pp.c:22915)
                ID: name='len' (at pp.c:22915)
                ID: name='error' (at pp.c:22915)
          Break:  (at pp.c:22917)
  FuncDef:  (at pp.c:22924)
    Decl: name='HplMsp430Usart1P__Usart__tx', quals=[], storage=['inline', 'static'] (at pp.c:22924)
      FuncDecl: quals=None (at pp.c:22924)
        ParamList:  (at pp.c:22924)
          Decl: name='data', quals=[], storage=[] (at pp.c:22924)
            TypeDecl: declname='data', quals=[] (at pp.c:22924)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__Usart__tx', quals=[] (at pp.c:22924)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22926)
      Assignment: op='=' (at pp.c:22927)
        ID: name='HplMsp430Usart1P__U1TXBUF' (at pp.c:22927)
        ID: name='data' (at pp.c:22927)
  FuncDef:  (at pp.c:22931)
    Decl: name='Msp430UartP__0__Usart__tx', quals=[], storage=['static', 'inline'] (at pp.c:22931)
      FuncDecl: quals=None (at pp.c:22931)
        ParamList:  (at pp.c:22931)
          Decl: name='data', quals=[], storage=[] (at pp.c:22931)
            TypeDecl: declname='data', quals=[] (at pp.c:22931)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__Usart__tx', quals=[] (at pp.c:22931)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22931)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart1P__Usart__tx' (at pp.c:22933)
        ExprList:  (at pp.c:22933)
          ID: name='data' (at pp.c:22933)
  FuncDef:  (at pp.c:22938)
    Decl: name='Msp430UartP__0__UsartInterrupts__txDone', quals=[], storage=['inline', 'static'] (at pp.c:22938)
      FuncDecl: quals=None (at pp.c:22938)
        ParamList:  (at pp.c:22938)
          Decl: name='id', quals=[], storage=[] (at pp.c:22938)
            TypeDecl: declname='id', quals=[] (at pp.c:22938)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__UsartInterrupts__txDone', quals=[] (at pp.c:22938)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22940)
      If:  (at pp.c:22941)
        BinaryOp: op='!=' (at pp.c:22941)
          ID: name='Msp430UartP__0__current_owner' (at pp.c:22941)
          ID: name='id' (at pp.c:22941)
        Compound:  (at pp.c:22941)
          Decl: name='buf', quals=[], storage=[] (at pp.c:22942)
            PtrDecl: quals=[] (at pp.c:22942)
              TypeDecl: declname='buf', quals=[] (at pp.c:22942)
                IdentifierType: names=['uint8_t'] (at None)
            ID: name='Msp430UartP__0__m_tx_buf' (at pp.c:22942)
          Assignment: op='=' (at pp.c:22945)
            ID: name='Msp430UartP__0__m_tx_buf' (at pp.c:22945)
            Cast:  (at None)
              Typename: quals=[] (at None)
                PtrDecl: quals=[] (at pp.c:22945)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['void'] (at None)
              Constant: type='int', value='0' (at pp.c:22945)
          FuncCall:  (at None)
            ID: name='Msp430UartP__0__UartStream__sendDone' (at pp.c:22946)
            ExprList:  (at pp.c:22946)
              ID: name='id' (at pp.c:22946)
              ID: name='buf' (at pp.c:22946)
              ID: name='Msp430UartP__0__m_tx_len' (at pp.c:22946)
              ID: name='FAIL' (at pp.c:22946)
        Compound:  (at pp.c:22948)
          If:  (at pp.c:22950)
            BinaryOp: op='<' (at pp.c:22950)
              ID: name='Msp430UartP__0__m_tx_pos' (at pp.c:22950)
              ID: name='Msp430UartP__0__m_tx_len' (at pp.c:22950)
            Compound:  (at pp.c:22950)
              FuncCall:  (at None)
                ID: name='Msp430UartP__0__Usart__tx' (at pp.c:22951)
                ExprList:  (at pp.c:22951)
                  ArrayRef:  (at pp.c:22951)
                    ID: name='Msp430UartP__0__m_tx_buf' (at pp.c:22951)
                    UnaryOp: op='p++' (at pp.c:22951)
                      ID: name='Msp430UartP__0__m_tx_pos' (at pp.c:22951)
            Compound:  (at pp.c:22953)
              Decl: name='buf', quals=[], storage=[] (at pp.c:22954)
                PtrDecl: quals=[] (at pp.c:22954)
                  TypeDecl: declname='buf', quals=[] (at pp.c:22954)
                    IdentifierType: names=['uint8_t'] (at None)
                ID: name='Msp430UartP__0__m_tx_buf' (at pp.c:22954)
              Assignment: op='=' (at pp.c:22957)
                ID: name='Msp430UartP__0__m_tx_buf' (at pp.c:22957)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    PtrDecl: quals=[] (at pp.c:22957)
                      TypeDecl: declname=None, quals=[] (at None)
                        IdentifierType: names=['void'] (at None)
                  Constant: type='int', value='0' (at pp.c:22957)
              FuncCall:  (at None)
                ID: name='Msp430UartP__0__UartStream__sendDone' (at pp.c:22958)
                ExprList:  (at pp.c:22958)
                  ID: name='id' (at pp.c:22958)
                  ID: name='buf' (at pp.c:22958)
                  ID: name='Msp430UartP__0__m_tx_len' (at pp.c:22958)
                  ID: name='SUCCESS' (at pp.c:22958)
  FuncDef:  (at pp.c:22964)
    Decl: name='Msp430UsartShareP__1__Interrupts__default__txDone', quals=[], storage=['inline', 'static'] (at pp.c:22964)
      FuncDecl: quals=None (at pp.c:22964)
        ParamList:  (at pp.c:22964)
          Decl: name='id', quals=[], storage=[] (at pp.c:22964)
            TypeDecl: declname='id', quals=[] (at pp.c:22964)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UsartShareP__1__Interrupts__default__txDone', quals=[] (at pp.c:22964)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22966)
  FuncDef:  (at pp.c:22970)
    Decl: name='Msp430UsartShareP__1__Interrupts__txDone', quals=[], storage=['static', 'inline'] (at pp.c:22970)
      FuncDecl: quals=None (at pp.c:22970)
        ParamList:  (at pp.c:22970)
          Decl: name='arg_0x101ed5800', quals=[], storage=[] (at pp.c:22970)
            TypeDecl: declname='arg_0x101ed5800', quals=[] (at pp.c:22970)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UsartShareP__1__Interrupts__txDone', quals=[] (at pp.c:22970)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22970)
      Switch:  (at pp.c:22972)
        ID: name='arg_0x101ed5800' (at pp.c:22972)
        Compound:  (at pp.c:22972)
          Case:  (at pp.c:22974)
            ID: name='Msp430Usart1C__0__CLIENT_ID' (at pp.c:22974)
            FuncCall:  (at None)
              ID: name='Msp430UartP__0__UsartInterrupts__txDone' (at pp.c:22976)
              ExprList:  (at pp.c:22976)
                ID: name='Msp430Uart1C__0__CLIENT_ID' (at pp.c:22976)
          Break:  (at pp.c:22978)
          Default:  (at pp.c:22980)
            FuncCall:  (at None)
              ID: name='Msp430UsartShareP__1__Interrupts__default__txDone' (at pp.c:22982)
              ExprList:  (at pp.c:22982)
                ID: name='arg_0x101ed5800' (at pp.c:22982)
          Break:  (at pp.c:22984)
  FuncDef:  (at pp.c:22991)
    Decl: name='Msp430UsartShareP__1__RawInterrupts__txDone', quals=[], storage=['inline', 'static'] (at pp.c:22991)
      FuncDecl: quals=None (at pp.c:22991)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430UsartShareP__1__RawInterrupts__txDone', quals=[] (at pp.c:22991)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22993)
      If:  (at pp.c:22994)
        FuncCall:  (at None)
          ID: name='Msp430UsartShareP__1__ArbiterInfo__inUse' (at pp.c:22994)
        Compound:  (at pp.c:22994)
          FuncCall:  (at None)
            ID: name='Msp430UsartShareP__1__Interrupts__txDone' (at pp.c:22995)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430UsartShareP__1__ArbiterInfo__userId' (at pp.c:22995)
  FuncDef:  (at pp.c:23000)
    Decl: name='HplMsp430Usart1P__Interrupts__txDone', quals=[], storage=['static', 'inline'] (at pp.c:23000)
      FuncDecl: quals=None (at pp.c:23000)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__Interrupts__txDone', quals=[] (at pp.c:23000)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23000)
      FuncCall:  (at None)
        ID: name='Msp430UsartShareP__1__RawInterrupts__txDone' (at pp.c:23002)
  FuncDef:  (at pp.c:23007)
    Decl: name='SerialP__SerialFrameComm__putData', quals=[], storage=['static', 'inline'] (at pp.c:23007)
      FuncDecl: quals=None (at pp.c:23007)
        ParamList:  (at pp.c:23007)
          Decl: name='data', quals=[], storage=[] (at pp.c:23007)
            TypeDecl: declname='data', quals=[] (at pp.c:23007)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SerialP__SerialFrameComm__putData', quals=[] (at pp.c:23007)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:23007)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:23009)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:23009)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:23013)
        ID: name='__nesc_result' (at pp.c:23013)
        FuncCall:  (at None)
          ID: name='HdlcTranslateC__SerialFrameComm__putData' (at pp.c:23013)
          ExprList:  (at pp.c:23013)
            ID: name='data' (at pp.c:23013)
      Return:  (at pp.c:23017)
        ID: name='__nesc_result' (at pp.c:23017)
  FuncDef:  (at pp.c:23022)
    Decl: name='SerialP__SendBytePacket__completeSend', quals=[], storage=['inline', 'static'] (at pp.c:23022)
      FuncDecl: quals=None (at pp.c:23022)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__SendBytePacket__completeSend', quals=[] (at pp.c:23022)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:23024)
      Decl: name='ret', quals=[], storage=[] (at pp.c:23025)
        TypeDecl: declname='ret', quals=[] (at pp.c:23025)
          IdentifierType: names=['bool'] (at None)
        ID: name='FAIL' (at pp.c:23025)
      Compound:  (at pp.c:23029)
        Assignment: op='=' (at pp.c:23030)
          StructRef: type='.' (at pp.c:23030)
            ArrayRef:  (at pp.c:23030)
              ID: name='SerialP__txBuf' (at pp.c:23030)
              ID: name='SerialP__TX_DATA_INDEX' (at pp.c:23030)
            ID: name='state' (at pp.c:23030)
          ID: name='SerialP__BUFFER_COMPLETE' (at pp.c:23030)
        Assignment: op='=' (at pp.c:23031)
          ID: name='ret' (at pp.c:23031)
          ID: name='SUCCESS' (at pp.c:23031)
      Return:  (at pp.c:23033)
        ID: name='ret' (at pp.c:23033)
  FuncDef:  (at pp.c:23037)
    Decl: name='SerialDispatcherP__0__SendBytePacket__completeSend', quals=[], storage=['static', 'inline'] (at pp.c:23037)
      FuncDecl: quals=None (at pp.c:23037)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__SendBytePacket__completeSend', quals=[] (at pp.c:23037)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:23037)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:23039)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:23039)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:23043)
        ID: name='__nesc_result' (at pp.c:23043)
        FuncCall:  (at None)
          ID: name='SerialP__SendBytePacket__completeSend' (at pp.c:23043)
      Return:  (at pp.c:23047)
        ID: name='__nesc_result' (at pp.c:23047)
  FuncDef:  (at pp.c:23052)
    Decl: name='SerialDispatcherP__0__SendBytePacket__nextByte', quals=[], storage=['inline', 'static'] (at pp.c:23052)
      FuncDecl: quals=None (at pp.c:23052)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__SendBytePacket__nextByte', quals=[] (at pp.c:23052)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:23054)
      Decl: name='b', quals=[], storage=[] (at pp.c:23055)
        TypeDecl: declname='b', quals=[] (at pp.c:23055)
          IdentifierType: names=['uint8_t'] (at None)
      Decl: name='indx', quals=[], storage=[] (at pp.c:23056)
        TypeDecl: declname='indx', quals=[] (at pp.c:23056)
          IdentifierType: names=['uint8_t'] (at None)
      Compound:  (at pp.c:23060)
        Assignment: op='=' (at pp.c:23061)
          ID: name='b' (at pp.c:23061)
          ArrayRef:  (at pp.c:23061)
            ID: name='SerialDispatcherP__0__sendBuffer' (at pp.c:23061)
            ID: name='SerialDispatcherP__0__sendIndex' (at pp.c:23061)
        UnaryOp: op='p++' (at pp.c:23062)
          ID: name='SerialDispatcherP__0__sendIndex' (at pp.c:23062)
        Assignment: op='=' (at pp.c:23063)
          ID: name='indx' (at pp.c:23063)
          ID: name='SerialDispatcherP__0__sendIndex' (at pp.c:23063)
      If:  (at pp.c:23065)
        BinaryOp: op='>' (at pp.c:23065)
          ID: name='indx' (at pp.c:23065)
          ID: name='SerialDispatcherP__0__sendLen' (at pp.c:23065)
        Compound:  (at pp.c:23065)
          FuncCall:  (at None)
            ID: name='SerialDispatcherP__0__SendBytePacket__completeSend' (at pp.c:23066)
          Return:  (at pp.c:23067)
            Constant: type='int', value='0' (at pp.c:23067)
        Compound:  (at pp.c:23069)
          Return:  (at pp.c:23070)
            ID: name='b' (at pp.c:23070)
  FuncDef:  (at pp.c:23075)
    Decl: name='SerialP__SendBytePacket__nextByte', quals=[], storage=['static', 'inline'] (at pp.c:23075)
      FuncDecl: quals=None (at pp.c:23075)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__SendBytePacket__nextByte', quals=[] (at pp.c:23075)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:23075)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:23077)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:23077)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:23081)
        ID: name='__nesc_result' (at pp.c:23081)
        FuncCall:  (at None)
          ID: name='SerialDispatcherP__0__SendBytePacket__nextByte' (at pp.c:23081)
      Return:  (at pp.c:23085)
        ID: name='__nesc_result' (at pp.c:23085)
  FuncDef:  (at pp.c:23090)
    Decl: name='SerialP__SerialFrameComm__putDone', quals=[], storage=['inline', 'static'] (at pp.c:23090)
      FuncDecl: quals=None (at pp.c:23090)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__SerialFrameComm__putDone', quals=[] (at pp.c:23090)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23092)
      Compound:  (at pp.c:23093)
        Decl: name='txResult', quals=[], storage=[] (at pp.c:23094)
          TypeDecl: declname='txResult', quals=[] (at pp.c:23094)
            IdentifierType: names=['error_t'] (at None)
          ID: name='SUCCESS' (at pp.c:23094)
        Compound:  (at pp.c:23098)
          Switch:  (at pp.c:23099)
            ID: name='SerialP__txState' (at pp.c:23099)
            Compound:  (at pp.c:23099)
              Case:  (at pp.c:23101)
                ID: name='SerialP__TXSTATE_PROTO' (at pp.c:23101)
                Assignment: op='=' (at pp.c:23103)
                  ID: name='txResult' (at pp.c:23103)
                  FuncCall:  (at None)
                    ID: name='SerialP__SerialFrameComm__putData' (at pp.c:23103)
                    ExprList:  (at pp.c:23103)
                      ID: name='SerialP__txProto' (at pp.c:23103)
              Assignment: op='=' (at pp.c:23105)
                ID: name='SerialP__txState' (at pp.c:23105)
                ID: name='SerialP__TXSTATE_INFO' (at pp.c:23105)
              Assignment: op='=' (at pp.c:23109)
                ID: name='SerialP__txCRC' (at pp.c:23109)
                FuncCall:  (at None)
                  ID: name='crcByte' (at pp.c:23109)
                  ExprList:  (at pp.c:23109)
                    ID: name='SerialP__txCRC' (at pp.c:23109)
                    ID: name='SerialP__txProto' (at pp.c:23109)
              Break:  (at pp.c:23110)
              Case:  (at pp.c:23112)
                ID: name='SerialP__TXSTATE_SEQNO' (at pp.c:23112)
                Assignment: op='=' (at pp.c:23113)
                  ID: name='txResult' (at pp.c:23113)
                  FuncCall:  (at None)
                    ID: name='SerialP__SerialFrameComm__putData' (at pp.c:23113)
                    ExprList:  (at pp.c:23113)
                      ID: name='SerialP__txSeqno' (at pp.c:23113)
              Assignment: op='=' (at pp.c:23114)
                ID: name='SerialP__txState' (at pp.c:23114)
                ID: name='SerialP__TXSTATE_INFO' (at pp.c:23114)
              Assignment: op='=' (at pp.c:23115)
                ID: name='SerialP__txCRC' (at pp.c:23115)
                FuncCall:  (at None)
                  ID: name='crcByte' (at pp.c:23115)
                  ExprList:  (at pp.c:23115)
                    ID: name='SerialP__txCRC' (at pp.c:23115)
                    ID: name='SerialP__txSeqno' (at pp.c:23115)
              Break:  (at pp.c:23116)
              Case:  (at pp.c:23118)
                ID: name='SerialP__TXSTATE_INFO' (at pp.c:23118)
                Compound:  (at pp.c:23119)
                  Assignment: op='=' (at pp.c:23120)
                    ID: name='txResult' (at pp.c:23120)
                    FuncCall:  (at None)
                      ID: name='SerialP__SerialFrameComm__putData' (at pp.c:23120)
                      ExprList:  (at pp.c:23120)
                        StructRef: type='.' (at pp.c:23120)
                          ArrayRef:  (at pp.c:23120)
                            ID: name='SerialP__txBuf' (at pp.c:23120)
                            ID: name='SerialP__txIndex' (at pp.c:23120)
                          ID: name='buf' (at pp.c:23120)
                  Assignment: op='=' (at pp.c:23121)
                    ID: name='SerialP__txCRC' (at pp.c:23121)
                    FuncCall:  (at None)
                      ID: name='crcByte' (at pp.c:23121)
                      ExprList:  (at pp.c:23121)
                        ID: name='SerialP__txCRC' (at pp.c:23121)
                        StructRef: type='.' (at pp.c:23121)
                          ArrayRef:  (at pp.c:23121)
                            ID: name='SerialP__txBuf' (at pp.c:23121)
                            ID: name='SerialP__txIndex' (at pp.c:23121)
                          ID: name='buf' (at pp.c:23121)
                  UnaryOp: op='++' (at pp.c:23122)
                    ID: name='SerialP__txByteCnt' (at pp.c:23122)
                  If:  (at pp.c:23124)
                    BinaryOp: op='==' (at pp.c:23124)
                      ID: name='SerialP__txIndex' (at pp.c:23124)
                      ID: name='SerialP__TX_DATA_INDEX' (at pp.c:23124)
                    Compound:  (at pp.c:23124)
                      Decl: name='nextByte', quals=[], storage=[] (at pp.c:23125)
                        TypeDecl: declname='nextByte', quals=[] (at pp.c:23125)
                          IdentifierType: names=['uint8_t'] (at None)
                      Assignment: op='=' (at pp.c:23128)
                        ID: name='nextByte' (at pp.c:23128)
                        FuncCall:  (at None)
                          ID: name='SerialP__SendBytePacket__nextByte' (at pp.c:23128)
                      If:  (at pp.c:23129)
                        BinaryOp: op='||' (at pp.c:23129)
                          BinaryOp: op='==' (at pp.c:23129)
                            StructRef: type='.' (at pp.c:23129)
                              ArrayRef:  (at pp.c:23129)
                                ID: name='SerialP__txBuf' (at pp.c:23129)
                                ID: name='SerialP__txIndex' (at pp.c:23129)
                              ID: name='state' (at pp.c:23129)
                            ID: name='SerialP__BUFFER_COMPLETE' (at pp.c:23129)
                          BinaryOp: op='>=' (at pp.c:23129)
                            ID: name='SerialP__txByteCnt' (at pp.c:23129)
                            ID: name='SerialP__SERIAL_MTU' (at pp.c:23129)
                        Compound:  (at pp.c:23129)
                          Assignment: op='=' (at pp.c:23130)
                            ID: name='SerialP__txState' (at pp.c:23130)
                            ID: name='SerialP__TXSTATE_FCS1' (at pp.c:23130)
                        Compound:  (at pp.c:23132)
                          Assignment: op='=' (at pp.c:23133)
                            StructRef: type='.' (at pp.c:23133)
                              ArrayRef:  (at pp.c:23133)
                                ID: name='SerialP__txBuf' (at pp.c:23133)
                                ID: name='SerialP__txIndex' (at pp.c:23133)
                              ID: name='buf' (at pp.c:23133)
                            ID: name='nextByte' (at pp.c:23133)
                    Compound:  (at pp.c:23136)
                      Assignment: op='=' (at pp.c:23137)
                        ID: name='SerialP__txState' (at pp.c:23137)
                        ID: name='SerialP__TXSTATE_FCS1' (at pp.c:23137)
              Break:  (at pp.c:23140)
              Case:  (at pp.c:23142)
                ID: name='SerialP__TXSTATE_FCS1' (at pp.c:23142)
                Assignment: op='=' (at pp.c:23143)
                  ID: name='txResult' (at pp.c:23143)
                  FuncCall:  (at None)
                    ID: name='SerialP__SerialFrameComm__putData' (at pp.c:23143)
                    ExprList:  (at pp.c:23143)
                      BinaryOp: op='&' (at pp.c:23143)
                        ID: name='SerialP__txCRC' (at pp.c:23143)
                        Constant: type='int', value='0xff' (at pp.c:23143)
              Assignment: op='=' (at pp.c:23144)
                ID: name='SerialP__txState' (at pp.c:23144)
                ID: name='SerialP__TXSTATE_FCS2' (at pp.c:23144)
              Break:  (at pp.c:23145)
              Case:  (at pp.c:23147)
                ID: name='SerialP__TXSTATE_FCS2' (at pp.c:23147)
                Assignment: op='=' (at pp.c:23148)
                  ID: name='txResult' (at pp.c:23148)
                  FuncCall:  (at None)
                    ID: name='SerialP__SerialFrameComm__putData' (at pp.c:23148)
                    ExprList:  (at pp.c:23148)
                      BinaryOp: op='&' (at pp.c:23148)
                        BinaryOp: op='>>' (at pp.c:23148)
                          ID: name='SerialP__txCRC' (at pp.c:23148)
                          Constant: type='int', value='8' (at pp.c:23148)
                        Constant: type='int', value='0xff' (at pp.c:23148)
              Assignment: op='=' (at pp.c:23149)
                ID: name='SerialP__txState' (at pp.c:23149)
                ID: name='SerialP__TXSTATE_ENDFLAG' (at pp.c:23149)
              Break:  (at pp.c:23150)
              Case:  (at pp.c:23152)
                ID: name='SerialP__TXSTATE_ENDFLAG' (at pp.c:23152)
                Assignment: op='=' (at pp.c:23153)
                  ID: name='txResult' (at pp.c:23153)
                  FuncCall:  (at None)
                    ID: name='SerialP__SerialFrameComm__putDelimiter' (at pp.c:23153)
              Assignment: op='=' (at pp.c:23154)
                ID: name='SerialP__txState' (at pp.c:23154)
                ID: name='SerialP__TXSTATE_ENDWAIT' (at pp.c:23154)
              Break:  (at pp.c:23155)
              Case:  (at pp.c:23157)
                ID: name='SerialP__TXSTATE_ENDWAIT' (at pp.c:23157)
                Assignment: op='=' (at pp.c:23158)
                  ID: name='SerialP__txState' (at pp.c:23158)
                  ID: name='SerialP__TXSTATE_FINISH' (at pp.c:23158)
              Case:  (at pp.c:23159)
                ID: name='SerialP__TXSTATE_FINISH' (at pp.c:23159)
                FuncCall:  (at None)
                  ID: name='SerialP__MaybeScheduleTx' (at pp.c:23160)
              Break:  (at pp.c:23161)
              Case:  (at pp.c:23162)
                ID: name='SerialP__TXSTATE_ERROR' (at pp.c:23162)
                Default:  (at pp.c:23163)
                  Assignment: op='=' (at pp.c:23164)
                    ID: name='txResult' (at pp.c:23164)
                    ID: name='FAIL' (at pp.c:23164)
              Break:  (at pp.c:23165)
          If:  (at pp.c:23168)
            BinaryOp: op='!=' (at pp.c:23168)
              ID: name='txResult' (at pp.c:23168)
              ID: name='SUCCESS' (at pp.c:23168)
            Compound:  (at pp.c:23168)
              Assignment: op='=' (at pp.c:23169)
                ID: name='SerialP__txState' (at pp.c:23169)
                ID: name='SerialP__TXSTATE_ERROR' (at pp.c:23169)
              FuncCall:  (at None)
                ID: name='SerialP__MaybeScheduleTx' (at pp.c:23170)
  FuncDef:  (at pp.c:23177)
    Decl: name='HdlcTranslateC__SerialFrameComm__putDone', quals=[], storage=['static', 'inline'] (at pp.c:23177)
      FuncDecl: quals=None (at pp.c:23177)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HdlcTranslateC__SerialFrameComm__putDone', quals=[] (at pp.c:23177)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23177)
      FuncCall:  (at None)
        ID: name='SerialP__SerialFrameComm__putDone' (at pp.c:23179)
  FuncDef:  (at pp.c:23184)
    Decl: name='__nesc_atomic_start', quals=[], storage=[] (at pp.c:23184)
      FuncDecl: quals=None (at pp.c:23184)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_atomic_start', quals=[] (at pp.c:23184)
          IdentifierType: names=['__nesc_atomic_t'] (at None)
    Compound:  (at pp.c:23185)
      Decl: name='result', quals=[], storage=[] (at pp.c:23186)
        TypeDecl: declname='result', quals=[] (at pp.c:23186)
          IdentifierType: names=['__nesc_atomic_t'] (at None)
        BinaryOp: op='!=' (at pp.c:23186)
          BinaryOp: op='&' (at pp.c:23186)
            Compound:  (at pp.c:23186)
              Decl: name='__x', quals=[], storage=[] (at pp.c:23188)
                TypeDecl: declname='__x', quals=[] (at pp.c:23188)
                  IdentifierType: names=['uint16_t'] (at None)
              Assignment: op='=' (at None)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                  ID: name='__x' (at pp.c:23191)
                ID: name='_R2' (at pp.c:23191)
              ID: name='__x' (at pp.c:23191)
            Constant: type='int', value='0x0008' (at pp.c:23195)
          Constant: type='int', value='0' (at pp.c:23195)
      FuncCall:  (at None)
        ID: name='__nesc_disable_interrupt' (at pp.c:23198)
      Return:  (at pp.c:23200)
        ID: name='result' (at pp.c:23200)
  FuncDef:  (at pp.c:23203)
    Decl: name='__nesc_atomic_end', quals=[], storage=[] (at pp.c:23203)
      FuncDecl: quals=None (at pp.c:23203)
        ParamList:  (at pp.c:23203)
          Decl: name='reenable_interrupts', quals=[], storage=[] (at pp.c:23203)
            TypeDecl: declname='reenable_interrupts', quals=[] (at pp.c:23203)
              IdentifierType: names=['__nesc_atomic_t'] (at None)
        TypeDecl: declname='__nesc_atomic_end', quals=[] (at pp.c:23203)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23204)
      If:  (at pp.c:23206)
        ID: name='reenable_interrupts' (at pp.c:23206)
        Compound:  (at pp.c:23206)
          FuncCall:  (at None)
            ID: name='__nesc_enable_interrupt' (at pp.c:23207)
  FuncDef:  (at pp.c:23212)
    Decl: name='sig_TIMERA0_VECTOR', quals=[], storage=[] (at pp.c:23212)
      FuncDecl: quals=None (at pp.c:23212)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_TIMERA0_VECTOR', quals=[] (at pp.c:23212)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23214)
      FuncCall:  (at None)
        ID: name='Msp430TimerCommonP__VectorTimerA0__fired' (at pp.c:23216)
  FuncDef:  (at pp.c:23220)
    Decl: name='Msp430TimerCapComP__0__Event__fired', quals=[], storage=['static'] (at pp.c:23220)
      FuncDecl: quals=None (at pp.c:23220)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Event__fired', quals=[] (at pp.c:23220)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23221)
      If:  (at pp.c:23222)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__0__Control__getControl' (at pp.c:23222)
          ID: name='cap' (at pp.c:23222)
        Compound:  (at pp.c:23222)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__0__Capture__captured' (at pp.c:23223)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__0__Capture__getEvent' (at pp.c:23223)
        Compound:  (at pp.c:23225)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__0__Compare__fired' (at pp.c:23227)
  FuncDef:  (at pp.c:23232)
    Decl: name='Msp430TimerCapComP__1__Event__fired', quals=[], storage=['static'] (at pp.c:23232)
      FuncDecl: quals=None (at pp.c:23232)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Event__fired', quals=[] (at pp.c:23232)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23233)
      If:  (at pp.c:23234)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__1__Control__getControl' (at pp.c:23234)
          ID: name='cap' (at pp.c:23234)
        Compound:  (at pp.c:23234)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__1__Capture__captured' (at pp.c:23235)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__1__Capture__getEvent' (at pp.c:23235)
        Compound:  (at pp.c:23237)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__1__Compare__fired' (at pp.c:23239)
  FuncDef:  (at pp.c:23244)
    Decl: name='Msp430TimerCapComP__2__Event__fired', quals=[], storage=['static'] (at pp.c:23244)
      FuncDecl: quals=None (at pp.c:23244)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Event__fired', quals=[] (at pp.c:23244)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23245)
      If:  (at pp.c:23246)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__2__Control__getControl' (at pp.c:23246)
          ID: name='cap' (at pp.c:23246)
        Compound:  (at pp.c:23246)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__2__Capture__captured' (at pp.c:23247)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__2__Capture__getEvent' (at pp.c:23247)
        Compound:  (at pp.c:23249)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__2__Compare__fired' (at pp.c:23251)
  FuncDef:  (at pp.c:23256)
    Decl: name='sig_TIMERA1_VECTOR', quals=[], storage=[] (at pp.c:23256)
      FuncDecl: quals=None (at pp.c:23256)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_TIMERA1_VECTOR', quals=[] (at pp.c:23256)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23258)
      FuncCall:  (at None)
        ID: name='Msp430TimerCommonP__VectorTimerA1__fired' (at pp.c:23260)
  FuncDef:  (at pp.c:23264)
    Decl: name='sig_TIMERB0_VECTOR', quals=[], storage=[] (at pp.c:23264)
      FuncDecl: quals=None (at pp.c:23264)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_TIMERB0_VECTOR', quals=[] (at pp.c:23264)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23266)
      FuncCall:  (at None)
        ID: name='Msp430TimerCommonP__VectorTimerB0__fired' (at pp.c:23268)
  FuncDef:  (at pp.c:23272)
    Decl: name='Msp430TimerP__1__Event__default__fired', quals=[], storage=['static'] (at pp.c:23272)
      FuncDecl: quals=None (at pp.c:23272)
        ParamList:  (at pp.c:23272)
          Decl: name='n', quals=[], storage=[] (at pp.c:23272)
            TypeDecl: declname='n', quals=[] (at pp.c:23272)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Event__default__fired', quals=[] (at pp.c:23272)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23273)
  FuncDef:  (at pp.c:23277)
    Decl: name='Msp430TimerP__1__Event__fired', quals=[], storage=['static'] (at pp.c:23277)
      FuncDecl: quals=None (at pp.c:23277)
        ParamList:  (at pp.c:23277)
          Decl: name='arg_0x101409020', quals=[], storage=[] (at pp.c:23277)
            TypeDecl: declname='arg_0x101409020', quals=[] (at pp.c:23277)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Event__fired', quals=[] (at pp.c:23277)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23277)
      Switch:  (at pp.c:23279)
        ID: name='arg_0x101409020' (at pp.c:23279)
        Compound:  (at pp.c:23279)
          Case:  (at pp.c:23281)
            Constant: type='int', value='0' (at pp.c:23281)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__3__Event__fired' (at pp.c:23283)
          Break:  (at pp.c:23285)
          Case:  (at pp.c:23287)
            Constant: type='int', value='1' (at pp.c:23287)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__4__Event__fired' (at pp.c:23289)
          Break:  (at pp.c:23291)
          Case:  (at pp.c:23293)
            Constant: type='int', value='2' (at pp.c:23293)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__5__Event__fired' (at pp.c:23295)
          Break:  (at pp.c:23297)
          Case:  (at pp.c:23299)
            Constant: type='int', value='3' (at pp.c:23299)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__6__Event__fired' (at pp.c:23301)
          Break:  (at pp.c:23303)
          Case:  (at pp.c:23305)
            Constant: type='int', value='4' (at pp.c:23305)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__7__Event__fired' (at pp.c:23307)
          Break:  (at pp.c:23309)
          Case:  (at pp.c:23311)
            Constant: type='int', value='5' (at pp.c:23311)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__8__Event__fired' (at pp.c:23313)
          Break:  (at pp.c:23315)
          Case:  (at pp.c:23317)
            Constant: type='int', value='6' (at pp.c:23317)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__9__Event__fired' (at pp.c:23319)
          Break:  (at pp.c:23321)
          Case:  (at pp.c:23323)
            Constant: type='int', value='7' (at pp.c:23323)
            FuncCall:  (at None)
              ID: name='Msp430TimerP__1__Overflow__fired' (at pp.c:23325)
          Break:  (at pp.c:23327)
          Default:  (at pp.c:23329)
            FuncCall:  (at None)
              ID: name='Msp430TimerP__1__Event__default__fired' (at pp.c:23331)
              ExprList:  (at pp.c:23331)
                ID: name='arg_0x101409020' (at pp.c:23331)
          Break:  (at pp.c:23333)
  FuncDef:  (at pp.c:23340)
    Decl: name='TransformAlarmC__0__Alarm__startAt', quals=[], storage=['static'] (at pp.c:23340)
      FuncDecl: quals=None (at pp.c:23340)
        ParamList:  (at pp.c:23340)
          Decl: name='t0', quals=[], storage=[] (at pp.c:23340)
            TypeDecl: declname='t0', quals=[] (at pp.c:23340)
              IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:23340)
            TypeDecl: declname='dt', quals=[] (at pp.c:23340)
              IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Alarm__startAt', quals=[] (at pp.c:23340)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23341)
      Compound:  (at pp.c:23342)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:23342)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:23342)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:23342)
        Compound:  (at pp.c:23343)
          Assignment: op='=' (at pp.c:23344)
            ID: name='TransformAlarmC__0__m_t0' (at pp.c:23344)
            ID: name='t0' (at pp.c:23344)
          Assignment: op='=' (at pp.c:23345)
            ID: name='TransformAlarmC__0__m_dt' (at pp.c:23345)
            ID: name='dt' (at pp.c:23345)
          FuncCall:  (at None)
            ID: name='TransformAlarmC__0__set_alarm' (at pp.c:23346)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:23349)
          ExprList:  (at pp.c:23349)
            ID: name='__nesc_atomic' (at pp.c:23349)
  FuncDef:  (at pp.c:23353)
    Decl: name='TransformAlarmC__0__set_alarm', quals=[], storage=['static'] (at pp.c:23353)
      FuncDecl: quals=None (at pp.c:23353)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__set_alarm', quals=[] (at pp.c:23353)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23354)
      Decl: name='now', quals=[], storage=[] (at pp.c:23355)
        TypeDecl: declname='now', quals=[] (at pp.c:23355)
          IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__0__Counter__get' (at pp.c:23355)
      Decl: name='expires', quals=[], storage=[] (at pp.c:23357)
        TypeDecl: declname='expires', quals=[] (at pp.c:23357)
          IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
      Decl: name='remaining', quals=[], storage=[] (at pp.c:23359)
        TypeDecl: declname='remaining', quals=[] (at pp.c:23359)
          IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
      Assignment: op='=' (at pp.c:23364)
        ID: name='expires' (at pp.c:23364)
        BinaryOp: op='+' (at pp.c:23364)
          ID: name='TransformAlarmC__0__m_t0' (at pp.c:23364)
          ID: name='TransformAlarmC__0__m_dt' (at pp.c:23364)
      Assignment: op='=' (at pp.c:23367)
        ID: name='remaining' (at pp.c:23367)
        Cast:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
          BinaryOp: op='-' (at pp.c:23367)
            ID: name='expires' (at pp.c:23367)
            ID: name='now' (at pp.c:23367)
      If:  (at pp.c:23370)
        BinaryOp: op='<=' (at pp.c:23370)
          ID: name='TransformAlarmC__0__m_t0' (at pp.c:23370)
          ID: name='now' (at pp.c:23370)
        Compound:  (at pp.c:23371)
          If:  (at pp.c:23372)
            BinaryOp: op='&&' (at pp.c:23372)
              BinaryOp: op='>=' (at pp.c:23372)
                ID: name='expires' (at pp.c:23372)
                ID: name='TransformAlarmC__0__m_t0' (at pp.c:23372)
              BinaryOp: op='<=' (at pp.c:23373)
                ID: name='expires' (at pp.c:23373)
                ID: name='now' (at pp.c:23373)
            Compound:  (at pp.c:23373)
              Assignment: op='=' (at pp.c:23374)
                ID: name='remaining' (at pp.c:23374)
                Constant: type='int', value='0' (at pp.c:23374)
        Compound:  (at pp.c:23377)
          If:  (at pp.c:23378)
            BinaryOp: op='||' (at pp.c:23378)
              BinaryOp: op='>=' (at pp.c:23378)
                ID: name='expires' (at pp.c:23378)
                ID: name='TransformAlarmC__0__m_t0' (at pp.c:23378)
              BinaryOp: op='<=' (at pp.c:23379)
                ID: name='expires' (at pp.c:23379)
                ID: name='now' (at pp.c:23379)
            Compound:  (at pp.c:23379)
              Assignment: op='=' (at pp.c:23380)
                ID: name='remaining' (at pp.c:23380)
                Constant: type='int', value='0' (at pp.c:23380)
      If:  (at pp.c:23384)
        BinaryOp: op='>' (at pp.c:23384)
          ID: name='remaining' (at pp.c:23384)
          ID: name='TransformAlarmC__0__MAX_DELAY' (at pp.c:23384)
        Compound:  (at pp.c:23385)
          Assignment: op='=' (at pp.c:23386)
            ID: name='TransformAlarmC__0__m_t0' (at pp.c:23386)
            BinaryOp: op='+' (at pp.c:23386)
              ID: name='now' (at pp.c:23386)
              ID: name='TransformAlarmC__0__MAX_DELAY' (at pp.c:23386)
          Assignment: op='=' (at pp.c:23387)
            ID: name='TransformAlarmC__0__m_dt' (at pp.c:23387)
            BinaryOp: op='-' (at pp.c:23387)
              ID: name='remaining' (at pp.c:23387)
              ID: name='TransformAlarmC__0__MAX_DELAY' (at pp.c:23387)
          Assignment: op='=' (at pp.c:23388)
            ID: name='remaining' (at pp.c:23388)
            ID: name='TransformAlarmC__0__MAX_DELAY' (at pp.c:23388)
        Compound:  (at pp.c:23391)
          Assignment: op='+=' (at pp.c:23392)
            ID: name='TransformAlarmC__0__m_t0' (at pp.c:23392)
            ID: name='TransformAlarmC__0__m_dt' (at pp.c:23392)
          Assignment: op='=' (at pp.c:23393)
            ID: name='TransformAlarmC__0__m_dt' (at pp.c:23393)
            Constant: type='int', value='0' (at pp.c:23393)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__AlarmFrom__startAt' (at pp.c:23395)
        ExprList:  (at None)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__0__from_size_type'] (at None)
              ID: name='now' (at pp.c:23395)
            Constant: type='int', value='0' (at pp.c:23395)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__0__from_size_type'] (at None)
              ID: name='remaining' (at pp.c:23396)
            Constant: type='int', value='0' (at pp.c:23396)
  FuncDef:  (at pp.c:23400)
    Decl: name='TransformCounterC__0__Counter__get', quals=[], storage=['static'] (at pp.c:23400)
      FuncDecl: quals=None (at pp.c:23400)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__0__Counter__get', quals=[] (at pp.c:23400)
          IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
    Compound:  (at pp.c:23401)
      Decl: name='rv', quals=[], storage=[] (at pp.c:23402)
        TypeDecl: declname='rv', quals=[] (at pp.c:23402)
          IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
        Constant: type='int', value='0' (at pp.c:23402)
      Compound:  (at pp.c:23405)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:23405)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:23405)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:23405)
        Compound:  (at pp.c:23406)
          Decl: name='high', quals=[], storage=[] (at pp.c:23407)
            TypeDecl: declname='high', quals=[] (at pp.c:23407)
              IdentifierType: names=['TransformCounterC__0__upper_count_type'] (at None)
            ID: name='TransformCounterC__0__m_upper' (at pp.c:23407)
          Decl: name='low', quals=[], storage=[] (at pp.c:23408)
            TypeDecl: declname='low', quals=[] (at pp.c:23408)
              IdentifierType: names=['TransformCounterC__0__from_size_type'] (at None)
            FuncCall:  (at None)
              ID: name='TransformCounterC__0__CounterFrom__get' (at pp.c:23408)
          If:  (at pp.c:23411)
            FuncCall:  (at None)
              ID: name='TransformCounterC__0__CounterFrom__isOverflowPending' (at pp.c:23411)
            Compound:  (at pp.c:23412)
              UnaryOp: op='p++' (at pp.c:23419)
                ID: name='high' (at pp.c:23419)
              Assignment: op='=' (at pp.c:23420)
                ID: name='low' (at pp.c:23420)
                FuncCall:  (at None)
                  ID: name='TransformCounterC__0__CounterFrom__get' (at pp.c:23420)
          Compound:  (at pp.c:23422)
            Decl: name='high_to', quals=[], storage=[] (at pp.c:23423)
              TypeDecl: declname='high_to', quals=[] (at pp.c:23423)
                IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
              ID: name='high' (at pp.c:23423)
            Decl: name='low_to', quals=[], storage=[] (at pp.c:23424)
              TypeDecl: declname='low_to', quals=[] (at pp.c:23424)
                IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
              BinaryOp: op='>>' (at pp.c:23424)
                ID: name='low' (at pp.c:23424)
                ID: name='TransformCounterC__0__LOW_SHIFT_RIGHT' (at pp.c:23424)
            Assignment: op='=' (at pp.c:23427)
              ID: name='rv' (at pp.c:23427)
              BinaryOp: op='|' (at pp.c:23427)
                BinaryOp: op='<<' (at pp.c:23427)
                  ID: name='high_to' (at pp.c:23427)
                  ID: name='TransformCounterC__0__HIGH_SHIFT_LEFT' (at pp.c:23427)
                ID: name='low_to' (at pp.c:23427)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:23431)
          ExprList:  (at pp.c:23431)
            ID: name='__nesc_atomic' (at pp.c:23431)
      Return:  (at pp.c:23432)
        ID: name='rv' (at pp.c:23432)
  FuncDef:  (at pp.c:23436)
    Decl: name='Msp430TimerP__1__Timer__get', quals=[], storage=['static'] (at pp.c:23436)
      FuncDecl: quals=None (at pp.c:23436)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Timer__get', quals=[] (at pp.c:23436)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:23437)
      If:  (at pp.c:23442)
        Constant: type='int', value='1' (at pp.c:23442)
        Compound:  (at pp.c:23442)
          Compound:  (at pp.c:23445)
            Decl: name='t0', quals=[], storage=[] (at pp.c:23446)
              TypeDecl: declname='t0', quals=[] (at pp.c:23446)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t1', quals=[], storage=[] (at pp.c:23447)
              TypeDecl: declname='t1', quals=[] (at pp.c:23447)
                IdentifierType: names=['uint16_t'] (at None)
              UnaryOp: op='*' (at None)
                Cast:  (at None)
                  Typename: quals=['volatile'] (at None)
                    PtrDecl: quals=[] (at pp.c:23447)
                      TypeDecl: declname=None, quals=['volatile'] (at None)
                        IdentifierType: names=['uint16_t'] (at None)
                  Constant: type='int', value='400U' (at pp.c:23447)
            DoWhile:  (at pp.c:23450)
              BinaryOp: op='!=' (at pp.c:23458)
                ID: name='t0' (at pp.c:23458)
                ID: name='t1' (at pp.c:23458)
              Compound:  (at pp.c:23450)
                Assignment: op='=' (at pp.c:23452)
                  ID: name='t0' (at pp.c:23452)
                  ID: name='t1' (at pp.c:23452)
                Assignment: op='=' (at pp.c:23454)
                  ID: name='t1' (at pp.c:23454)
                  UnaryOp: op='*' (at None)
                    Cast:  (at None)
                      Typename: quals=['volatile'] (at None)
                        PtrDecl: quals=[] (at pp.c:23454)
                          TypeDecl: declname=None, quals=['volatile'] (at None)
                            IdentifierType: names=['uint16_t'] (at None)
                      Constant: type='int', value='400U' (at pp.c:23454)
            Compound:  (at pp.c:23459)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:23460)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:23460)
                  IdentifierType: names=['int', 'unsigned'] (at None)
                ID: name='t1' (at pp.c:23462)
              Return:  (at pp.c:23465)
                ID: name='__nesc_temp' (at pp.c:23465)
        Compound:  (at pp.c:23471)
          Return:  (at pp.c:23472)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:23472)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='400U' (at pp.c:23472)
  FuncDef:  (at pp.c:23477)
    Decl: name='CC2420TransmitP__congestionBackoff', quals=[], storage=['static'] (at pp.c:23477)
      FuncDecl: quals=None (at pp.c:23477)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__congestionBackoff', quals=[] (at pp.c:23477)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23479)
      Compound:  (at pp.c:23480)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:23480)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:23480)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:23480)
        Compound:  (at pp.c:23482)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__RadioBackoff__requestCongestionBackoff' (at pp.c:23483)
            ExprList:  (at pp.c:23483)
              ID: name='CC2420TransmitP__m_msg' (at pp.c:23483)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__BackoffTimer__start' (at pp.c:23484)
            ExprList:  (at pp.c:23484)
              ID: name='CC2420TransmitP__myCongestionBackoff' (at pp.c:23484)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:23487)
          ExprList:  (at pp.c:23487)
            ID: name='__nesc_atomic' (at pp.c:23487)
  FuncDef:  (at pp.c:23491)
    Decl: name='RandomMlcgC__Random__rand32', quals=[], storage=['static'] (at pp.c:23491)
      FuncDecl: quals=None (at pp.c:23491)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RandomMlcgC__Random__rand32', quals=[] (at pp.c:23491)
          IdentifierType: names=['uint32_t'] (at None)
    Compound:  (at pp.c:23493)
      Decl: name='mlcg', quals=[], storage=[] (at pp.c:23494)
        TypeDecl: declname='mlcg', quals=[] (at pp.c:23494)
          IdentifierType: names=['uint32_t'] (at None)
      Decl: name='p', quals=[], storage=[] (at pp.c:23496)
        TypeDecl: declname='p', quals=[] (at pp.c:23496)
          IdentifierType: names=['uint32_t'] (at None)
      Decl: name='q', quals=[], storage=[] (at pp.c:23498)
        TypeDecl: declname='q', quals=[] (at pp.c:23498)
          IdentifierType: names=['uint32_t'] (at None)
      Decl: name='tmpseed', quals=[], storage=[] (at pp.c:23499)
        TypeDecl: declname='tmpseed', quals=[] (at pp.c:23499)
          IdentifierType: names=['uint64_t'] (at None)
      Compound:  (at pp.c:23503)
        Assignment: op='=' (at pp.c:23504)
          ID: name='tmpseed' (at pp.c:23504)
          BinaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['uint64_t'] (at None)
              Constant: type='int', value='33614U' (at pp.c:23504)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['uint64_t'] (at None)
              ID: name='RandomMlcgC__seed' (at pp.c:23504)
        Assignment: op='=' (at pp.c:23505)
          ID: name='q' (at pp.c:23505)
          ID: name='tmpseed' (at pp.c:23505)
        Assignment: op='=' (at pp.c:23506)
          ID: name='q' (at pp.c:23506)
          BinaryOp: op='>>' (at pp.c:23506)
            ID: name='q' (at pp.c:23506)
            Constant: type='int', value='1' (at pp.c:23506)
        Assignment: op='=' (at pp.c:23507)
          ID: name='p' (at pp.c:23507)
          BinaryOp: op='>>' (at pp.c:23507)
            ID: name='tmpseed' (at pp.c:23507)
            Constant: type='int', value='32' (at pp.c:23507)
        Assignment: op='=' (at pp.c:23508)
          ID: name='mlcg' (at pp.c:23508)
          BinaryOp: op='+' (at pp.c:23508)
            ID: name='p' (at pp.c:23508)
            ID: name='q' (at pp.c:23508)
        If:  (at pp.c:23509)
          BinaryOp: op='&' (at pp.c:23509)
            ID: name='mlcg' (at pp.c:23509)
            Constant: type='int', value='0x80000000' (at pp.c:23509)
          Compound:  (at pp.c:23509)
            Assignment: op='=' (at pp.c:23510)
              ID: name='mlcg' (at pp.c:23510)
              BinaryOp: op='&' (at pp.c:23510)
                ID: name='mlcg' (at pp.c:23510)
                Constant: type='int', value='0x7FFFFFFF' (at pp.c:23510)
            UnaryOp: op='p++' (at pp.c:23511)
              ID: name='mlcg' (at pp.c:23511)
        Assignment: op='=' (at pp.c:23513)
          ID: name='RandomMlcgC__seed' (at pp.c:23513)
          ID: name='mlcg' (at pp.c:23513)
      Return:  (at pp.c:23515)
        ID: name='mlcg' (at pp.c:23515)
  FuncDef:  (at pp.c:23519)
    Decl: name='CC2420TransmitP__acquireSpiResource', quals=[], storage=['static'] (at pp.c:23519)
      FuncDecl: quals=None (at pp.c:23519)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__acquireSpiResource', quals=[] (at pp.c:23519)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:23521)
      Decl: name='error', quals=[], storage=[] (at pp.c:23522)
        TypeDecl: declname='error', quals=[] (at pp.c:23522)
          IdentifierType: names=['error_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420TransmitP__SpiResource__immediateRequest' (at pp.c:23522)
      If:  (at pp.c:23525)
        BinaryOp: op='!=' (at pp.c:23525)
          ID: name='error' (at pp.c:23525)
          ID: name='SUCCESS' (at pp.c:23525)
        Compound:  (at pp.c:23525)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__SpiResource__request' (at pp.c:23526)
      Return:  (at pp.c:23528)
        ID: name='error' (at pp.c:23528)
  FuncDef:  (at pp.c:23532)
    Decl: name='CC2420SpiP__Resource__immediateRequest', quals=[], storage=['static'] (at pp.c:23532)
      FuncDecl: quals=None (at pp.c:23532)
        ParamList:  (at pp.c:23532)
          Decl: name='id', quals=[], storage=[] (at pp.c:23532)
            TypeDecl: declname='id', quals=[] (at pp.c:23532)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Resource__immediateRequest', quals=[] (at pp.c:23532)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:23534)
      Decl: name='error', quals=[], storage=[] (at pp.c:23535)
        TypeDecl: declname='error', quals=[] (at pp.c:23535)
          IdentifierType: names=['error_t'] (at None)
      Compound:  (at pp.c:23537)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:23537)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:23537)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:23537)
        Compound:  (at pp.c:23539)
          If:  (at pp.c:23540)
            BinaryOp: op='!=' (at None)
              FuncCall:  (at None)
                ID: name='CC2420SpiP__WorkingState__requestState' (at pp.c:23540)
                ExprList:  (at pp.c:23540)
                  ID: name='CC2420SpiP__S_BUSY' (at pp.c:23540)
              ID: name='SUCCESS' (at pp.c:23540)
            Compound:  (at pp.c:23540)
              Compound:  (at pp.c:23541)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:23542)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:23542)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='EBUSY' (at pp.c:23544)
                Compound:  (at pp.c:23546)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:23548)
                    ExprList:  (at pp.c:23548)
                      ID: name='__nesc_atomic' (at pp.c:23548)
                  Return:  (at pp.c:23550)
                    ID: name='__nesc_temp' (at pp.c:23550)
          If:  (at pp.c:23554)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__SpiResource__isOwner' (at pp.c:23554)
            Compound:  (at pp.c:23554)
              Assignment: op='=' (at pp.c:23555)
                ID: name='CC2420SpiP__m_holder' (at pp.c:23555)
                ID: name='id' (at pp.c:23555)
              Assignment: op='=' (at pp.c:23556)
                ID: name='error' (at pp.c:23556)
                ID: name='SUCCESS' (at pp.c:23556)
            Compound:  (at pp.c:23558)
              If:  (at pp.c:23560)
                BinaryOp: op='==' (at pp.c:23560)
                  Assignment: op='=' (at pp.c:23560)
                    ID: name='error' (at pp.c:23560)
                    FuncCall:  (at None)
                      ID: name='CC2420SpiP__SpiResource__immediateRequest' (at pp.c:23560)
                  ID: name='SUCCESS' (at pp.c:23560)
                Compound:  (at pp.c:23560)
                  Assignment: op='=' (at pp.c:23561)
                    ID: name='CC2420SpiP__m_holder' (at pp.c:23561)
                    ID: name='id' (at pp.c:23561)
                Compound:  (at pp.c:23563)
                  FuncCall:  (at None)
                    ID: name='CC2420SpiP__WorkingState__toIdle' (at pp.c:23564)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:23569)
          ExprList:  (at pp.c:23569)
            ID: name='__nesc_atomic' (at pp.c:23569)
      Return:  (at pp.c:23571)
        ID: name='error' (at pp.c:23571)
  FuncDef:  (at pp.c:23575)
    Decl: name='StateImplP__State__requestState', quals=[], storage=['static'] (at pp.c:23575)
      FuncDecl: quals=None (at pp.c:23575)
        ParamList:  (at pp.c:23575)
          Decl: name='id', quals=[], storage=[] (at pp.c:23575)
            TypeDecl: declname='id', quals=[] (at pp.c:23575)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='reqState', quals=[], storage=[] (at pp.c:23575)
            TypeDecl: declname='reqState', quals=[] (at pp.c:23575)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='StateImplP__State__requestState', quals=[] (at pp.c:23575)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:23577)
      Decl: name='returnVal', quals=[], storage=[] (at pp.c:23578)
        TypeDecl: declname='returnVal', quals=[] (at pp.c:23578)
          IdentifierType: names=['error_t'] (at None)
        ID: name='FAIL' (at pp.c:23578)
      Compound:  (at pp.c:23581)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:23581)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:23581)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:23581)
        Compound:  (at pp.c:23583)
          If:  (at pp.c:23584)
            BinaryOp: op='||' (at pp.c:23584)
              BinaryOp: op='==' (at pp.c:23584)
                ID: name='reqState' (at pp.c:23584)
                ID: name='StateImplP__S_IDLE' (at pp.c:23584)
              BinaryOp: op='==' (at pp.c:23584)
                ArrayRef:  (at pp.c:23584)
                  ID: name='StateImplP__state' (at pp.c:23584)
                  ID: name='id' (at pp.c:23584)
                ID: name='StateImplP__S_IDLE' (at pp.c:23584)
            Compound:  (at pp.c:23584)
              Assignment: op='=' (at pp.c:23585)
                ArrayRef:  (at pp.c:23585)
                  ID: name='StateImplP__state' (at pp.c:23585)
                  ID: name='id' (at pp.c:23585)
                ID: name='reqState' (at pp.c:23585)
              Assignment: op='=' (at pp.c:23586)
                ID: name='returnVal' (at pp.c:23586)
                ID: name='SUCCESS' (at pp.c:23586)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:23590)
          ExprList:  (at pp.c:23590)
            ID: name='__nesc_atomic' (at pp.c:23590)
      Return:  (at pp.c:23591)
        ID: name='returnVal' (at pp.c:23591)
  FuncDef:  (at pp.c:23595)
    Decl: name='ArbiterP__0__Resource__isOwner', quals=[], storage=['static'] (at pp.c:23595)
      FuncDecl: quals=None (at pp.c:23595)
        ParamList:  (at pp.c:23595)
          Decl: name='id', quals=[], storage=[] (at pp.c:23595)
            TypeDecl: declname='id', quals=[] (at pp.c:23595)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__Resource__isOwner', quals=[] (at pp.c:23595)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:23597)
      Compound:  (at pp.c:23600)
        If:  (at pp.c:23601)
          BinaryOp: op='&&' (at pp.c:23601)
            BinaryOp: op='==' (at pp.c:23601)
              ID: name='ArbiterP__0__resId' (at pp.c:23601)
              ID: name='id' (at pp.c:23601)
            BinaryOp: op='==' (at pp.c:23601)
              ID: name='ArbiterP__0__state' (at pp.c:23601)
              ID: name='ArbiterP__0__RES_BUSY' (at pp.c:23601)
          Compound:  (at pp.c:23601)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:23602)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:23602)
                IdentifierType: names=['char', 'unsigned'] (at None)
              ID: name='TRUE' (at pp.c:23604)
            Return:  (at pp.c:23607)
              ID: name='__nesc_temp' (at pp.c:23607)
          Compound:  (at pp.c:23611)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:23612)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:23612)
                IdentifierType: names=['char', 'unsigned'] (at None)
              ID: name='FALSE' (at pp.c:23614)
            Return:  (at pp.c:23617)
              ID: name='__nesc_temp' (at pp.c:23617)
  FuncDef:  (at pp.c:23623)
    Decl: name='ArbiterP__0__ResourceDefaultOwner__release', quals=[], storage=['static'] (at pp.c:23623)
      FuncDecl: quals=None (at pp.c:23623)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__release', quals=[] (at pp.c:23623)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:23625)
      Compound:  (at pp.c:23628)
        If:  (at pp.c:23629)
          BinaryOp: op='==' (at pp.c:23629)
            ID: name='ArbiterP__0__resId' (at pp.c:23629)
            ID: name='ArbiterP__0__default_owner_id' (at pp.c:23629)
          Compound:  (at pp.c:23629)
            If:  (at pp.c:23630)
              BinaryOp: op='==' (at pp.c:23630)
                ID: name='ArbiterP__0__state' (at pp.c:23630)
                ID: name='ArbiterP__0__RES_GRANTING' (at pp.c:23630)
              Compound:  (at pp.c:23630)
                FuncCall:  (at None)
                  ID: name='ArbiterP__0__grantedTask__postTask' (at pp.c:23631)
                Compound:  (at pp.c:23632)
                  Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:23633)
                    TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:23633)
                      IdentifierType: names=['char', 'unsigned'] (at None)
                    ID: name='SUCCESS' (at pp.c:23635)
                  Return:  (at pp.c:23638)
                    ID: name='__nesc_temp' (at pp.c:23638)
              Compound:  (at pp.c:23641)
                If:  (at pp.c:23643)
                  BinaryOp: op='==' (at pp.c:23643)
                    ID: name='ArbiterP__0__state' (at pp.c:23643)
                    ID: name='ArbiterP__0__RES_IMM_GRANTING' (at pp.c:23643)
                  Compound:  (at pp.c:23643)
                    Assignment: op='=' (at pp.c:23644)
                      ID: name='ArbiterP__0__resId' (at pp.c:23644)
                      ID: name='ArbiterP__0__reqResId' (at pp.c:23644)
                    Assignment: op='=' (at pp.c:23645)
                      ID: name='ArbiterP__0__state' (at pp.c:23645)
                      ID: name='ArbiterP__0__RES_BUSY' (at pp.c:23645)
                    Compound:  (at pp.c:23646)
                      Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:23647)
                        TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:23647)
                          IdentifierType: names=['char', 'unsigned'] (at None)
                        ID: name='SUCCESS' (at pp.c:23649)
                      Return:  (at pp.c:23652)
                        ID: name='__nesc_temp' (at pp.c:23652)
      Return:  (at pp.c:23659)
        ID: name='FAIL' (at pp.c:23659)
  FuncDef:  (at pp.c:23663)
    Decl: name='SchedulerBasicP__TaskBasic__postTask', quals=[], storage=['static'] (at pp.c:23663)
      FuncDecl: quals=None (at pp.c:23663)
        ParamList:  (at pp.c:23663)
          Decl: name='id', quals=[], storage=[] (at pp.c:23663)
            TypeDecl: declname='id', quals=[] (at pp.c:23663)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SchedulerBasicP__TaskBasic__postTask', quals=[] (at pp.c:23663)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:23664)
      Compound:  (at pp.c:23665)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:23665)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:23665)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:23665)
        Compound:  (at pp.c:23667)
          Compound:  (at pp.c:23669)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:23670)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:23670)
                IdentifierType: names=['char', 'unsigned'] (at None)
              TernaryOp:  (at None)
                FuncCall:  (at None)
                  ID: name='SchedulerBasicP__pushTask' (at pp.c:23672)
                  ExprList:  (at pp.c:23672)
                    ID: name='id' (at pp.c:23672)
                ID: name='SUCCESS' (at pp.c:23672)
                ID: name='EBUSY' (at pp.c:23672)
            Compound:  (at pp.c:23674)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_end' (at pp.c:23676)
                ExprList:  (at pp.c:23676)
                  ID: name='__nesc_atomic' (at pp.c:23676)
              Return:  (at pp.c:23678)
                ID: name='__nesc_temp' (at pp.c:23678)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:23683)
          ExprList:  (at pp.c:23683)
            ID: name='__nesc_atomic' (at pp.c:23683)
  FuncDef:  (at pp.c:23687)
    Decl: name='HplMsp430Usart0P__Usart__setModeSpi', quals=[], storage=['static'] (at pp.c:23687)
      FuncDecl: quals=None (at pp.c:23687)
        ParamList:  (at pp.c:23687)
          Decl: name='config', quals=[], storage=[] (at pp.c:23687)
            PtrDecl: quals=[] (at pp.c:23687)
              TypeDecl: declname='config', quals=[] (at pp.c:23687)
                IdentifierType: names=['msp430_spi_union_config_t'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__setModeSpi', quals=[] (at pp.c:23687)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23689)
      Compound:  (at pp.c:23691)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:23691)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:23691)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:23691)
        Compound:  (at pp.c:23693)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart0P__Usart__resetUsart' (at pp.c:23694)
            ExprList:  (at pp.c:23694)
              ID: name='TRUE' (at pp.c:23694)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart0P__HplI2C__clearModeI2C' (at pp.c:23695)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart0P__Usart__disableUart' (at pp.c:23696)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart0P__configSpi' (at pp.c:23697)
            ExprList:  (at pp.c:23697)
              ID: name='config' (at pp.c:23697)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart0P__Usart__enableSpi' (at pp.c:23698)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart0P__Usart__resetUsart' (at pp.c:23699)
            ExprList:  (at pp.c:23699)
              ID: name='FALSE' (at pp.c:23699)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart0P__Usart__clrIntr' (at pp.c:23700)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart0P__Usart__disableIntr' (at pp.c:23701)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:23704)
          ExprList:  (at pp.c:23704)
            ID: name='__nesc_atomic' (at pp.c:23704)
      Return:  (at pp.c:23705)
  FuncDef:  (at pp.c:23709)
    Decl: name='CC2420SpiP__Resource__request', quals=[], storage=['static'] (at pp.c:23709)
      FuncDecl: quals=None (at pp.c:23709)
        ParamList:  (at pp.c:23709)
          Decl: name='id', quals=[], storage=[] (at pp.c:23709)
            TypeDecl: declname='id', quals=[] (at pp.c:23709)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Resource__request', quals=[] (at pp.c:23709)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:23711)
      Compound:  (at pp.c:23713)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:23713)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:23713)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:23713)
        Compound:  (at pp.c:23715)
          If:  (at pp.c:23716)
            BinaryOp: op='==' (at None)
              FuncCall:  (at None)
                ID: name='CC2420SpiP__WorkingState__requestState' (at pp.c:23716)
                ExprList:  (at pp.c:23716)
                  ID: name='CC2420SpiP__S_BUSY' (at pp.c:23716)
              ID: name='SUCCESS' (at pp.c:23716)
            Compound:  (at pp.c:23716)
              Assignment: op='=' (at pp.c:23717)
                ID: name='CC2420SpiP__m_holder' (at pp.c:23717)
                ID: name='id' (at pp.c:23717)
              If:  (at pp.c:23718)
                FuncCall:  (at None)
                  ID: name='CC2420SpiP__SpiResource__isOwner' (at pp.c:23718)
                Compound:  (at pp.c:23718)
                  FuncCall:  (at None)
                    ID: name='CC2420SpiP__grant__postTask' (at pp.c:23719)
                Compound:  (at pp.c:23721)
                  FuncCall:  (at None)
                    ID: name='CC2420SpiP__SpiResource__request' (at pp.c:23722)
            Compound:  (at pp.c:23725)
              Assignment: op='|=' (at pp.c:23726)
                ID: name='CC2420SpiP__m_requests' (at pp.c:23726)
                BinaryOp: op='<<' (at pp.c:23726)
                  Constant: type='int', value='1' (at pp.c:23726)
                  ID: name='id' (at pp.c:23726)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:23730)
          ExprList:  (at pp.c:23730)
            ID: name='__nesc_atomic' (at pp.c:23730)
      Return:  (at pp.c:23731)
        ID: name='SUCCESS' (at pp.c:23731)
  FuncDef:  (at pp.c:23735)
    Decl: name='CC2420TransmitP__attemptSend', quals=[], storage=['static'] (at pp.c:23735)
      FuncDecl: quals=None (at pp.c:23735)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__attemptSend', quals=[] (at pp.c:23735)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23737)
      Decl: name='status', quals=[], storage=[] (at pp.c:23738)
        TypeDecl: declname='status', quals=[] (at pp.c:23738)
          IdentifierType: names=['uint8_t'] (at None)
      Decl: name='congestion', quals=[], storage=[] (at pp.c:23739)
        TypeDecl: declname='congestion', quals=[] (at pp.c:23739)
          IdentifierType: names=['bool'] (at None)
        ID: name='TRUE' (at pp.c:23739)
      Compound:  (at pp.c:23741)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:23741)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:23741)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:23741)
        Compound:  (at pp.c:23743)
          If:  (at pp.c:23744)
            BinaryOp: op='==' (at pp.c:23744)
              ID: name='CC2420TransmitP__m_state' (at pp.c:23744)
              ID: name='CC2420TransmitP__S_CANCEL' (at pp.c:23744)
            Compound:  (at pp.c:23744)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__SFLUSHTX__strobe' (at pp.c:23745)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__releaseSpiResource' (at pp.c:23746)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__CSN__set' (at pp.c:23747)
              Assignment: op='=' (at pp.c:23748)
                ID: name='CC2420TransmitP__m_state' (at pp.c:23748)
                ID: name='CC2420TransmitP__S_STARTED' (at pp.c:23748)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__Send__sendDone' (at pp.c:23749)
                ExprList:  (at pp.c:23749)
                  ID: name='CC2420TransmitP__m_msg' (at pp.c:23749)
                  ID: name='ECANCEL' (at pp.c:23749)
              Compound:  (at pp.c:23750)
                FuncCall:  (at None)
                  ID: name='__nesc_atomic_end' (at pp.c:23752)
                  ExprList:  (at pp.c:23752)
                    ID: name='__nesc_atomic' (at pp.c:23752)
                Return:  (at pp.c:23754)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__CSN__clr' (at pp.c:23762)
          Assignment: op='=' (at pp.c:23763)
            ID: name='status' (at pp.c:23763)
            TernaryOp:  (at pp.c:23763)
              ID: name='CC2420TransmitP__m_cca' (at pp.c:23763)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__STXONCCA__strobe' (at pp.c:23763)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__STXON__strobe' (at pp.c:23763)
          If:  (at pp.c:23764)
            UnaryOp: op='!' (at pp.c:23764)
              BinaryOp: op='&' (at pp.c:23764)
                ID: name='status' (at pp.c:23764)
                ID: name='CC2420_STATUS_TX_ACTIVE' (at pp.c:23764)
            Compound:  (at pp.c:23764)
              Assignment: op='=' (at pp.c:23765)
                ID: name='status' (at pp.c:23765)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__SNOP__strobe' (at pp.c:23765)
              If:  (at pp.c:23766)
                BinaryOp: op='&' (at pp.c:23766)
                  ID: name='status' (at pp.c:23766)
                  ID: name='CC2420_STATUS_TX_ACTIVE' (at pp.c:23766)
                Compound:  (at pp.c:23766)
                  Assignment: op='=' (at pp.c:23767)
                    ID: name='congestion' (at pp.c:23767)
                    ID: name='FALSE' (at pp.c:23767)
          Assignment: op='=' (at pp.c:23771)
            ID: name='CC2420TransmitP__m_state' (at pp.c:23771)
            TernaryOp:  (at pp.c:23771)
              ID: name='congestion' (at pp.c:23771)
              ID: name='CC2420TransmitP__S_SAMPLE_CCA' (at pp.c:23771)
              ID: name='CC2420TransmitP__S_SFD' (at pp.c:23771)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__CSN__set' (at pp.c:23772)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:23775)
          ExprList:  (at pp.c:23775)
            ID: name='__nesc_atomic' (at pp.c:23775)
      If:  (at pp.c:23777)
        ID: name='congestion' (at pp.c:23777)
        Compound:  (at pp.c:23777)
          Assignment: op='=' (at pp.c:23778)
            ID: name='CC2420TransmitP__totalCcaChecks' (at pp.c:23778)
            Constant: type='int', value='0' (at pp.c:23778)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__releaseSpiResource' (at pp.c:23779)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__congestionBackoff' (at pp.c:23780)
        Compound:  (at pp.c:23784)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__BackoffTimer__start' (at pp.c:23785)
            ExprList:  (at pp.c:23785)
              ID: name='CC2420TransmitP__CC2420_ABORT_PERIOD' (at pp.c:23785)
  FuncDef:  (at pp.c:23790)
    Decl: name='CC2420SpiP__Strobe__strobe', quals=[], storage=['static'] (at pp.c:23790)
      FuncDecl: quals=None (at pp.c:23790)
        ParamList:  (at pp.c:23790)
          Decl: name='addr', quals=[], storage=[] (at pp.c:23790)
            TypeDecl: declname='addr', quals=[] (at pp.c:23790)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Strobe__strobe', quals=[] (at pp.c:23790)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:23792)
      Compound:  (at pp.c:23793)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:23793)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:23793)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:23793)
        Compound:  (at pp.c:23795)
          If:  (at pp.c:23796)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__WorkingState__isIdle' (at pp.c:23796)
            Compound:  (at pp.c:23796)
              Compound:  (at pp.c:23797)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:23798)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:23798)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  Constant: type='int', value='0' (at pp.c:23800)
                Compound:  (at pp.c:23802)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:23804)
                    ExprList:  (at pp.c:23804)
                      ID: name='__nesc_atomic' (at pp.c:23804)
                  Return:  (at pp.c:23806)
                    ID: name='__nesc_temp' (at pp.c:23806)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:23812)
          ExprList:  (at pp.c:23812)
            ID: name='__nesc_atomic' (at pp.c:23812)
      Return:  (at pp.c:23814)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__SpiByte__write' (at pp.c:23814)
          ExprList:  (at pp.c:23814)
            ID: name='addr' (at pp.c:23814)
  FuncDef:  (at pp.c:23818)
    Decl: name='StateImplP__State__isState', quals=[], storage=['static'] (at pp.c:23818)
      FuncDecl: quals=None (at pp.c:23818)
        ParamList:  (at pp.c:23818)
          Decl: name='id', quals=[], storage=[] (at pp.c:23818)
            TypeDecl: declname='id', quals=[] (at pp.c:23818)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='myState', quals=[], storage=[] (at pp.c:23818)
            TypeDecl: declname='myState', quals=[] (at pp.c:23818)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='StateImplP__State__isState', quals=[] (at pp.c:23818)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:23820)
      Decl: name='isState', quals=[], storage=[] (at pp.c:23821)
        TypeDecl: declname='isState', quals=[] (at pp.c:23821)
          IdentifierType: names=['bool'] (at None)
      Compound:  (at pp.c:23824)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:23824)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:23824)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:23824)
        Assignment: op='=' (at pp.c:23826)
          ID: name='isState' (at pp.c:23826)
          BinaryOp: op='==' (at pp.c:23826)
            ArrayRef:  (at pp.c:23826)
              ID: name='StateImplP__state' (at pp.c:23826)
              ID: name='id' (at pp.c:23826)
            ID: name='myState' (at pp.c:23826)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:23828)
          ExprList:  (at pp.c:23828)
            ID: name='__nesc_atomic' (at pp.c:23828)
      Return:  (at pp.c:23829)
        ID: name='isState' (at pp.c:23829)
  FuncDef:  (at pp.c:23833)
    Decl: name='Msp430SpiNoDmaP__0__SpiByte__write', quals=[], storage=['static'] (at pp.c:23833)
      FuncDecl: quals=None (at pp.c:23833)
        ParamList:  (at pp.c:23833)
          Decl: name='tx', quals=[], storage=[] (at pp.c:23833)
            TypeDecl: declname='tx', quals=[] (at pp.c:23833)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__SpiByte__write', quals=[] (at pp.c:23833)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:23835)
      Decl: name='byte', quals=[], storage=[] (at pp.c:23836)
        TypeDecl: declname='byte', quals=[] (at pp.c:23836)
          IdentifierType: names=['uint8_t'] (at None)
      FuncCall:  (at None)
        ID: name='Msp430SpiNoDmaP__0__Usart__tx' (at pp.c:23839)
        ExprList:  (at pp.c:23839)
          ID: name='tx' (at pp.c:23839)
      While:  (at pp.c:23840)
        UnaryOp: op='!' (at None)
          FuncCall:  (at None)
            ID: name='Msp430SpiNoDmaP__0__Usart__isRxIntrPending' (at pp.c:23840)
      FuncCall:  (at None)
        ID: name='Msp430SpiNoDmaP__0__Usart__clrRxIntr' (at pp.c:23841)
      Assignment: op='=' (at pp.c:23842)
        ID: name='byte' (at pp.c:23842)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__Usart__rx' (at pp.c:23842)
      Return:  (at pp.c:23844)
        ID: name='byte' (at pp.c:23844)
  FuncDef:  (at pp.c:23848)
    Decl: name='CC2420SpiP__Resource__release', quals=[], storage=['static'] (at pp.c:23848)
      FuncDecl: quals=None (at pp.c:23848)
        ParamList:  (at pp.c:23848)
          Decl: name='id', quals=[], storage=[] (at pp.c:23848)
            TypeDecl: declname='id', quals=[] (at pp.c:23848)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Resource__release', quals=[] (at pp.c:23848)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:23850)
      Decl: name='i', quals=[], storage=[] (at pp.c:23851)
        TypeDecl: declname='i', quals=[] (at pp.c:23851)
          IdentifierType: names=['uint8_t'] (at None)
      Compound:  (at pp.c:23854)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:23854)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:23854)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:23854)
        Compound:  (at pp.c:23856)
          If:  (at pp.c:23857)
            BinaryOp: op='!=' (at pp.c:23857)
              ID: name='CC2420SpiP__m_holder' (at pp.c:23857)
              ID: name='id' (at pp.c:23857)
            Compound:  (at pp.c:23857)
              Compound:  (at pp.c:23858)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:23859)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:23859)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='FAIL' (at pp.c:23861)
                Compound:  (at pp.c:23863)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:23865)
                    ExprList:  (at pp.c:23865)
                      ID: name='__nesc_atomic' (at pp.c:23865)
                  Return:  (at pp.c:23867)
                    ID: name='__nesc_temp' (at pp.c:23867)
          Assignment: op='=' (at pp.c:23872)
            ID: name='CC2420SpiP__m_holder' (at pp.c:23872)
            ID: name='CC2420SpiP__NO_HOLDER' (at pp.c:23872)
          If:  (at pp.c:23873)
            UnaryOp: op='!' (at pp.c:23873)
              ID: name='CC2420SpiP__m_requests' (at pp.c:23873)
            Compound:  (at pp.c:23873)
              FuncCall:  (at None)
                ID: name='CC2420SpiP__WorkingState__toIdle' (at pp.c:23874)
              FuncCall:  (at None)
                ID: name='CC2420SpiP__attemptRelease' (at pp.c:23875)
            Compound:  (at pp.c:23877)
              For:  (at pp.c:23878)
                Assignment: op='=' (at pp.c:23878)
                  ID: name='i' (at pp.c:23878)
                  BinaryOp: op='+' (at pp.c:23878)
                    ID: name='CC2420SpiP__m_holder' (at pp.c:23878)
                    Constant: type='int', value='1' (at pp.c:23878)
                UnaryOp: op='p++' (at pp.c:23878)
                  ID: name='i' (at pp.c:23878)
                Compound:  (at pp.c:23878)
                  Assignment: op='%=' (at pp.c:23879)
                    ID: name='i' (at pp.c:23879)
                    ID: name='CC2420SpiP__RESOURCE_COUNT' (at pp.c:23879)
                  If:  (at pp.c:23881)
                    BinaryOp: op='&' (at pp.c:23881)
                      ID: name='CC2420SpiP__m_requests' (at pp.c:23881)
                      BinaryOp: op='<<' (at pp.c:23881)
                        Constant: type='int', value='1' (at pp.c:23881)
                        ID: name='i' (at pp.c:23881)
                    Compound:  (at pp.c:23881)
                      Assignment: op='=' (at pp.c:23882)
                        ID: name='CC2420SpiP__m_holder' (at pp.c:23882)
                        ID: name='i' (at pp.c:23882)
                      Assignment: op='&=' (at pp.c:23883)
                        ID: name='CC2420SpiP__m_requests' (at pp.c:23883)
                        UnaryOp: op='~' (at pp.c:23883)
                          BinaryOp: op='<<' (at pp.c:23883)
                            Constant: type='int', value='1' (at pp.c:23883)
                            ID: name='i' (at pp.c:23883)
                      FuncCall:  (at None)
                        ID: name='CC2420SpiP__grant__postTask' (at pp.c:23884)
                      Compound:  (at pp.c:23885)
                        Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:23886)
                          TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:23886)
                            IdentifierType: names=['char', 'unsigned'] (at None)
                          ID: name='SUCCESS' (at pp.c:23888)
                        Compound:  (at pp.c:23890)
                          FuncCall:  (at None)
                            ID: name='__nesc_atomic_end' (at pp.c:23892)
                            ExprList:  (at pp.c:23892)
                              ID: name='__nesc_atomic' (at pp.c:23892)
                          Return:  (at pp.c:23894)
                            ID: name='__nesc_temp' (at pp.c:23894)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:23902)
          ExprList:  (at pp.c:23902)
            ID: name='__nesc_atomic' (at pp.c:23902)
      Return:  (at pp.c:23904)
        ID: name='SUCCESS' (at pp.c:23904)
  FuncDef:  (at pp.c:23908)
    Decl: name='CC2420SpiP__attemptRelease', quals=[], storage=['static'] (at pp.c:23908)
      FuncDecl: quals=None (at pp.c:23908)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__attemptRelease', quals=[] (at pp.c:23908)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:23910)
      If:  (at pp.c:23913)
        BinaryOp: op='||' (at pp.c:23915)
          BinaryOp: op='||' (at pp.c:23915)
            BinaryOp: op='>' (at pp.c:23915)
              ID: name='CC2420SpiP__m_requests' (at pp.c:23915)
              Constant: type='int', value='0' (at pp.c:23915)
            BinaryOp: op='!=' (at pp.c:23916)
              ID: name='CC2420SpiP__m_holder' (at pp.c:23916)
              ID: name='CC2420SpiP__NO_HOLDER' (at pp.c:23916)
          UnaryOp: op='!' (at None)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__WorkingState__isIdle' (at pp.c:23917)
        Compound:  (at pp.c:23917)
          Return:  (at pp.c:23918)
            ID: name='FAIL' (at pp.c:23918)
      Assignment: op='=' (at pp.c:23921)
        ID: name='CC2420SpiP__release' (at pp.c:23921)
        ID: name='TRUE' (at pp.c:23921)
      FuncCall:  (at None)
        ID: name='CC2420SpiP__ChipSpiResource__releasing' (at pp.c:23922)
      Compound:  (at pp.c:23925)
        If:  (at pp.c:23926)
          ID: name='CC2420SpiP__release' (at pp.c:23926)
          Compound:  (at pp.c:23926)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__SpiResource__release' (at pp.c:23927)
            Compound:  (at pp.c:23928)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:23929)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:23929)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='SUCCESS' (at pp.c:23931)
              Return:  (at pp.c:23934)
                ID: name='__nesc_temp' (at pp.c:23934)
      Return:  (at pp.c:23938)
        ID: name='EBUSY' (at pp.c:23938)
  FuncDef:  (at pp.c:23942)
    Decl: name='HplMsp430Usart0P__Usart__disableSpi', quals=[], storage=['static'] (at pp.c:23942)
      FuncDecl: quals=None (at pp.c:23942)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__disableSpi', quals=[] (at pp.c:23942)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23944)
      Compound:  (at pp.c:23947)
        Assignment: op='&=' (at pp.c:23948)
          ID: name='HplMsp430Usart0P__ME1' (at pp.c:23948)
          UnaryOp: op='~' (at pp.c:23948)
            BinaryOp: op='<<' (at pp.c:23948)
              Constant: type='int', value='1' (at pp.c:23948)
              Constant: type='int', value='6' (at pp.c:23948)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__SIMO__selectIOFunc' (at pp.c:23949)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__SOMI__selectIOFunc' (at pp.c:23950)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__UCLK__selectIOFunc' (at pp.c:23951)
  FuncDef:  (at pp.c:23956)
    Decl: name='HplMsp430GeneralIOP__26__IO__set', quals=[], storage=['static'] (at pp.c:23956)
      FuncDecl: quals=None (at pp.c:23956)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__26__IO__set', quals=[] (at pp.c:23956)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23958)
      Compound:  (at pp.c:23960)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:23960)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:23960)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:23960)
        Assignment: op='|=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:23962)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:23962)
          BinaryOp: op='<<' (at pp.c:23962)
            Constant: type='int', value='0x01' (at pp.c:23962)
            Constant: type='int', value='2' (at pp.c:23962)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:23964)
          ExprList:  (at pp.c:23964)
            ID: name='__nesc_atomic' (at pp.c:23964)
  FuncDef:  (at pp.c:23968)
    Decl: name='HplMsp430GeneralIOP__26__IO__clr', quals=[], storage=['static'] (at pp.c:23968)
      FuncDecl: quals=None (at pp.c:23968)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__26__IO__clr', quals=[] (at pp.c:23968)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23970)
      Compound:  (at pp.c:23972)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:23972)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:23972)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:23972)
        Assignment: op='&=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:23974)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:23974)
          UnaryOp: op='~' (at pp.c:23974)
            BinaryOp: op='<<' (at pp.c:23974)
              Constant: type='int', value='0x01' (at pp.c:23974)
              Constant: type='int', value='2' (at pp.c:23974)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:23976)
          ExprList:  (at pp.c:23976)
            ID: name='__nesc_atomic' (at pp.c:23976)
  FuncDef:  (at pp.c:23980)
    Decl: name='CC2420TransmitP__signalDone', quals=[], storage=['static'] (at pp.c:23980)
      FuncDecl: quals=None (at pp.c:23980)
        ParamList:  (at pp.c:23980)
          Decl: name='err', quals=[], storage=[] (at pp.c:23980)
            TypeDecl: declname='err', quals=[] (at pp.c:23980)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__signalDone', quals=[] (at pp.c:23980)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23982)
      Assignment: op='=' (at pp.c:23985)
        ID: name='CC2420TransmitP__m_state' (at pp.c:23985)
        ID: name='CC2420TransmitP__S_STARTED' (at pp.c:23985)
      Assignment: op='=' (at pp.c:23986)
        ID: name='CC2420TransmitP__abortSpiRelease' (at pp.c:23986)
        ID: name='FALSE' (at pp.c:23986)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__ChipSpiResource__attemptRelease' (at pp.c:23987)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__Send__sendDone' (at pp.c:23988)
        ExprList:  (at pp.c:23988)
          ID: name='CC2420TransmitP__m_msg' (at pp.c:23988)
          ID: name='err' (at pp.c:23988)
  FuncDef:  (at pp.c:23992)
    Decl: name='GpioCaptureC__0__enableCapture', quals=[], storage=['static'] (at pp.c:23992)
      FuncDecl: quals=None (at pp.c:23992)
        ParamList:  (at pp.c:23992)
          Decl: name='mode', quals=[], storage=[] (at pp.c:23992)
            TypeDecl: declname='mode', quals=[] (at pp.c:23992)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='GpioCaptureC__0__enableCapture', quals=[] (at pp.c:23992)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:23994)
      Compound:  (at pp.c:23997)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__Msp430TimerControl__disableEvents' (at pp.c:23998)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__GeneralIO__selectModuleFunc' (at pp.c:23999)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__Msp430TimerControl__clearPendingInterrupt' (at pp.c:24000)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__Msp430Capture__clearOverflow' (at pp.c:24001)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__Msp430TimerControl__setControlAsCapture' (at pp.c:24002)
          ExprList:  (at pp.c:24002)
            ID: name='mode' (at pp.c:24002)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__Msp430TimerControl__enableEvents' (at pp.c:24003)
      Return:  (at pp.c:24005)
        ID: name='SUCCESS' (at pp.c:24005)
  FuncDef:  (at pp.c:24009)
    Decl: name='HplMsp430GeneralIOP__30__IO__clr', quals=[], storage=['static'] (at pp.c:24009)
      FuncDecl: quals=None (at pp.c:24009)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__30__IO__clr', quals=[] (at pp.c:24009)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24011)
      Compound:  (at pp.c:24013)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24013)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24013)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24013)
        Assignment: op='&=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:24015)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:24015)
          UnaryOp: op='~' (at pp.c:24015)
            BinaryOp: op='<<' (at pp.c:24015)
              Constant: type='int', value='0x01' (at pp.c:24015)
              Constant: type='int', value='6' (at pp.c:24015)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24017)
          ExprList:  (at pp.c:24017)
            ID: name='__nesc_atomic' (at pp.c:24017)
  FuncDef:  (at pp.c:24021)
    Decl: name='HplMsp430GeneralIOP__30__IO__set', quals=[], storage=['static'] (at pp.c:24021)
      FuncDecl: quals=None (at pp.c:24021)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__30__IO__set', quals=[] (at pp.c:24021)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24023)
      Compound:  (at pp.c:24025)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24025)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24025)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24025)
        Assignment: op='|=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:24027)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:24027)
          BinaryOp: op='<<' (at pp.c:24027)
            Constant: type='int', value='0x01' (at pp.c:24027)
            Constant: type='int', value='6' (at pp.c:24027)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24029)
          ExprList:  (at pp.c:24029)
            ID: name='__nesc_atomic' (at pp.c:24029)
  FuncDef:  (at pp.c:24033)
    Decl: name='CC2420SpiP__Ram__write', quals=[], storage=['static'] (at pp.c:24033)
      FuncDecl: quals=None (at pp.c:24033)
        ParamList:  (at pp.c:24033)
          Decl: name='addr', quals=[], storage=[] (at pp.c:24033)
            TypeDecl: declname='addr', quals=[] (at pp.c:24033)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='offset', quals=[], storage=[] (at pp.c:24033)
            TypeDecl: declname='offset', quals=[] (at pp.c:24033)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:24034)
            PtrDecl: quals=[] (at pp.c:24034)
              TypeDecl: declname='data', quals=[] (at pp.c:24034)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:24035)
            TypeDecl: declname='len', quals=[] (at pp.c:24035)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Ram__write', quals=[] (at pp.c:24033)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:24037)
      Decl: name='status', quals=[], storage=[] (at pp.c:24039)
        TypeDecl: declname='status', quals=[] (at pp.c:24039)
          IdentifierType: names=['cc2420_status_t'] (at None)
        Constant: type='int', value='0' (at pp.c:24039)
      Decl: name='tmpLen', quals=[], storage=[] (at pp.c:24040)
        TypeDecl: declname='tmpLen', quals=[] (at pp.c:24040)
          IdentifierType: names=['uint8_t'] (at None)
        ID: name='len' (at pp.c:24040)
      Decl: name='tmpData', quals=[], storage=[] (at pp.c:24041)
        PtrDecl: quals=[] (at pp.c:24041)
          TypeDecl: declname='tmpData', quals=[] (at pp.c:24041)
            IdentifierType: names=['uint8_t'] (at None)
        Cast:  (at None)
          Typename: quals=[] (at None)
            PtrDecl: quals=[] (at pp.c:24041)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['uint8_t'] (at None)
          ID: name='data' (at pp.c:24041)
      Compound:  (at pp.c:24043)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24043)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24043)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24043)
        Compound:  (at pp.c:24045)
          If:  (at pp.c:24046)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__WorkingState__isIdle' (at pp.c:24046)
            Compound:  (at pp.c:24046)
              Compound:  (at pp.c:24047)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:24048)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:24048)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='status' (at pp.c:24050)
                Compound:  (at pp.c:24052)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:24054)
                    ExprList:  (at pp.c:24054)
                      ID: name='__nesc_atomic' (at pp.c:24054)
                  Return:  (at pp.c:24056)
                    ID: name='__nesc_temp' (at pp.c:24056)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24062)
          ExprList:  (at pp.c:24062)
            ID: name='__nesc_atomic' (at pp.c:24062)
      Assignment: op='+=' (at pp.c:24064)
        ID: name='addr' (at pp.c:24064)
        ID: name='offset' (at pp.c:24064)
      Assignment: op='=' (at pp.c:24066)
        ID: name='status' (at pp.c:24066)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__SpiByte__write' (at pp.c:24066)
          ExprList:  (at pp.c:24066)
            BinaryOp: op='|' (at pp.c:24066)
              ID: name='addr' (at pp.c:24066)
              Constant: type='int', value='0x80' (at pp.c:24066)
      FuncCall:  (at None)
        ID: name='CC2420SpiP__SpiByte__write' (at pp.c:24067)
        ExprList:  (at pp.c:24067)
          BinaryOp: op='&' (at pp.c:24067)
            BinaryOp: op='>>' (at pp.c:24067)
              ID: name='addr' (at pp.c:24067)
              Constant: type='int', value='1' (at pp.c:24067)
            Constant: type='int', value='0xc0' (at pp.c:24067)
      For:  (at pp.c:24068)
        ID: name='len' (at pp.c:24068)
        UnaryOp: op='p--' (at pp.c:24068)
          ID: name='len' (at pp.c:24068)
        Compound:  (at pp.c:24068)
          FuncCall:  (at None)
            ID: name='CC2420SpiP__SpiByte__write' (at pp.c:24069)
            ExprList:  (at pp.c:24069)
              ArrayRef:  (at pp.c:24069)
                ID: name='tmpData' (at pp.c:24069)
                BinaryOp: op='-' (at pp.c:24069)
                  ID: name='tmpLen' (at pp.c:24069)
                  ID: name='len' (at pp.c:24069)
      Return:  (at pp.c:24072)
        ID: name='status' (at pp.c:24072)
  FuncDef:  (at pp.c:24076)
    Decl: name='CC2420PacketP__PacketTimeStamp32khz__clear', quals=[], storage=['static'] (at pp.c:24076)
      FuncDecl: quals=None (at pp.c:24076)
        ParamList:  (at pp.c:24076)
          Decl: name='msg', quals=[], storage=[] (at pp.c:24076)
            PtrDecl: quals=[] (at pp.c:24076)
              TypeDecl: declname='msg', quals=[] (at pp.c:24076)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420PacketP__PacketTimeStamp32khz__clear', quals=[] (at pp.c:24076)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24077)
      FuncCall:  (at None)
        ID: name='__nesc_hton_int8' (at pp.c:24078)
        ExprList:  (at None)
          StructRef: type='.' (at None)
            StructRef: type='->' (at None)
              FuncCall:  (at None)
                ID: name='CC2420PacketP__CC2420PacketBody__getMetadata' (at pp.c:24078)
                ExprList:  (at pp.c:24078)
                  ID: name='msg' (at pp.c:24078)
              ID: name='timesync' (at pp.c:24078)
            ID: name='nxdata' (at pp.c:24078)
          ID: name='FALSE' (at pp.c:24078)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint32' (at pp.c:24079)
        ExprList:  (at None)
          StructRef: type='.' (at None)
            StructRef: type='->' (at None)
              FuncCall:  (at None)
                ID: name='CC2420PacketP__CC2420PacketBody__getMetadata' (at pp.c:24079)
                ExprList:  (at pp.c:24079)
                  ID: name='msg' (at pp.c:24079)
              ID: name='timestamp' (at pp.c:24079)
            ID: name='nxdata' (at pp.c:24079)
          ID: name='CC2420_INVALID_TIMESTAMP' (at pp.c:24079)
  FuncDef:  (at pp.c:24083)
    Decl: name='TransformAlarmC__1__set_alarm', quals=[], storage=['static'] (at pp.c:24083)
      FuncDecl: quals=None (at pp.c:24083)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__set_alarm', quals=[] (at pp.c:24083)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24084)
      Decl: name='now', quals=[], storage=[] (at pp.c:24085)
        TypeDecl: declname='now', quals=[] (at pp.c:24085)
          IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__1__Counter__get' (at pp.c:24085)
      Decl: name='expires', quals=[], storage=[] (at pp.c:24087)
        TypeDecl: declname='expires', quals=[] (at pp.c:24087)
          IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
      Decl: name='remaining', quals=[], storage=[] (at pp.c:24089)
        TypeDecl: declname='remaining', quals=[] (at pp.c:24089)
          IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
      Assignment: op='=' (at pp.c:24094)
        ID: name='expires' (at pp.c:24094)
        BinaryOp: op='+' (at pp.c:24094)
          ID: name='TransformAlarmC__1__m_t0' (at pp.c:24094)
          ID: name='TransformAlarmC__1__m_dt' (at pp.c:24094)
      Assignment: op='=' (at pp.c:24097)
        ID: name='remaining' (at pp.c:24097)
        Cast:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
          BinaryOp: op='-' (at pp.c:24097)
            ID: name='expires' (at pp.c:24097)
            ID: name='now' (at pp.c:24097)
      If:  (at pp.c:24100)
        BinaryOp: op='<=' (at pp.c:24100)
          ID: name='TransformAlarmC__1__m_t0' (at pp.c:24100)
          ID: name='now' (at pp.c:24100)
        Compound:  (at pp.c:24101)
          If:  (at pp.c:24102)
            BinaryOp: op='&&' (at pp.c:24102)
              BinaryOp: op='>=' (at pp.c:24102)
                ID: name='expires' (at pp.c:24102)
                ID: name='TransformAlarmC__1__m_t0' (at pp.c:24102)
              BinaryOp: op='<=' (at pp.c:24103)
                ID: name='expires' (at pp.c:24103)
                ID: name='now' (at pp.c:24103)
            Compound:  (at pp.c:24103)
              Assignment: op='=' (at pp.c:24104)
                ID: name='remaining' (at pp.c:24104)
                Constant: type='int', value='0' (at pp.c:24104)
        Compound:  (at pp.c:24107)
          If:  (at pp.c:24108)
            BinaryOp: op='||' (at pp.c:24108)
              BinaryOp: op='>=' (at pp.c:24108)
                ID: name='expires' (at pp.c:24108)
                ID: name='TransformAlarmC__1__m_t0' (at pp.c:24108)
              BinaryOp: op='<=' (at pp.c:24109)
                ID: name='expires' (at pp.c:24109)
                ID: name='now' (at pp.c:24109)
            Compound:  (at pp.c:24109)
              Assignment: op='=' (at pp.c:24110)
                ID: name='remaining' (at pp.c:24110)
                Constant: type='int', value='0' (at pp.c:24110)
      If:  (at pp.c:24114)
        BinaryOp: op='>' (at pp.c:24114)
          ID: name='remaining' (at pp.c:24114)
          ID: name='TransformAlarmC__1__MAX_DELAY' (at pp.c:24114)
        Compound:  (at pp.c:24115)
          Assignment: op='=' (at pp.c:24116)
            ID: name='TransformAlarmC__1__m_t0' (at pp.c:24116)
            BinaryOp: op='+' (at pp.c:24116)
              ID: name='now' (at pp.c:24116)
              ID: name='TransformAlarmC__1__MAX_DELAY' (at pp.c:24116)
          Assignment: op='=' (at pp.c:24117)
            ID: name='TransformAlarmC__1__m_dt' (at pp.c:24117)
            BinaryOp: op='-' (at pp.c:24117)
              ID: name='remaining' (at pp.c:24117)
              ID: name='TransformAlarmC__1__MAX_DELAY' (at pp.c:24117)
          Assignment: op='=' (at pp.c:24118)
            ID: name='remaining' (at pp.c:24118)
            ID: name='TransformAlarmC__1__MAX_DELAY' (at pp.c:24118)
        Compound:  (at pp.c:24121)
          Assignment: op='+=' (at pp.c:24122)
            ID: name='TransformAlarmC__1__m_t0' (at pp.c:24122)
            ID: name='TransformAlarmC__1__m_dt' (at pp.c:24122)
          Assignment: op='=' (at pp.c:24123)
            ID: name='TransformAlarmC__1__m_dt' (at pp.c:24123)
            Constant: type='int', value='0' (at pp.c:24123)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__1__AlarmFrom__startAt' (at pp.c:24125)
        ExprList:  (at None)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__1__from_size_type'] (at None)
              ID: name='now' (at pp.c:24125)
            Constant: type='int', value='5' (at pp.c:24125)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__1__from_size_type'] (at None)
              ID: name='remaining' (at pp.c:24126)
            Constant: type='int', value='5' (at pp.c:24126)
  FuncDef:  (at pp.c:24130)
    Decl: name='TransformCounterC__1__Counter__get', quals=[], storage=['static'] (at pp.c:24130)
      FuncDecl: quals=None (at pp.c:24130)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__1__Counter__get', quals=[] (at pp.c:24130)
          IdentifierType: names=['TransformCounterC__1__to_size_type'] (at None)
    Compound:  (at pp.c:24131)
      Decl: name='rv', quals=[], storage=[] (at pp.c:24132)
        TypeDecl: declname='rv', quals=[] (at pp.c:24132)
          IdentifierType: names=['TransformCounterC__1__to_size_type'] (at None)
        Constant: type='int', value='0' (at pp.c:24132)
      Compound:  (at pp.c:24135)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24135)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24135)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24135)
        Compound:  (at pp.c:24136)
          Decl: name='high', quals=[], storage=[] (at pp.c:24137)
            TypeDecl: declname='high', quals=[] (at pp.c:24137)
              IdentifierType: names=['TransformCounterC__1__upper_count_type'] (at None)
            ID: name='TransformCounterC__1__m_upper' (at pp.c:24137)
          Decl: name='low', quals=[], storage=[] (at pp.c:24138)
            TypeDecl: declname='low', quals=[] (at pp.c:24138)
              IdentifierType: names=['TransformCounterC__1__from_size_type'] (at None)
            FuncCall:  (at None)
              ID: name='TransformCounterC__1__CounterFrom__get' (at pp.c:24138)
          If:  (at pp.c:24141)
            FuncCall:  (at None)
              ID: name='TransformCounterC__1__CounterFrom__isOverflowPending' (at pp.c:24141)
            Compound:  (at pp.c:24142)
              UnaryOp: op='p++' (at pp.c:24149)
                ID: name='high' (at pp.c:24149)
              Assignment: op='=' (at pp.c:24150)
                ID: name='low' (at pp.c:24150)
                FuncCall:  (at None)
                  ID: name='TransformCounterC__1__CounterFrom__get' (at pp.c:24150)
          Compound:  (at pp.c:24152)
            Decl: name='high_to', quals=[], storage=[] (at pp.c:24153)
              TypeDecl: declname='high_to', quals=[] (at pp.c:24153)
                IdentifierType: names=['TransformCounterC__1__to_size_type'] (at None)
              ID: name='high' (at pp.c:24153)
            Decl: name='low_to', quals=[], storage=[] (at pp.c:24154)
              TypeDecl: declname='low_to', quals=[] (at pp.c:24154)
                IdentifierType: names=['TransformCounterC__1__to_size_type'] (at None)
              BinaryOp: op='>>' (at pp.c:24154)
                ID: name='low' (at pp.c:24154)
                ID: name='TransformCounterC__1__LOW_SHIFT_RIGHT' (at pp.c:24154)
            Assignment: op='=' (at pp.c:24157)
              ID: name='rv' (at pp.c:24157)
              BinaryOp: op='|' (at pp.c:24157)
                BinaryOp: op='<<' (at pp.c:24157)
                  ID: name='high_to' (at pp.c:24157)
                  ID: name='TransformCounterC__1__HIGH_SHIFT_LEFT' (at pp.c:24157)
                ID: name='low_to' (at pp.c:24157)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24161)
          ExprList:  (at pp.c:24161)
            ID: name='__nesc_atomic' (at pp.c:24161)
      Return:  (at pp.c:24162)
        ID: name='rv' (at pp.c:24162)
  FuncDef:  (at pp.c:24166)
    Decl: name='sig_TIMERB1_VECTOR', quals=[], storage=[] (at pp.c:24166)
      FuncDecl: quals=None (at pp.c:24166)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_TIMERB1_VECTOR', quals=[] (at pp.c:24166)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24168)
      FuncCall:  (at None)
        ID: name='Msp430TimerCommonP__VectorTimerB1__fired' (at pp.c:24170)
  FuncDef:  (at pp.c:24174)
    Decl: name='main', quals=[], storage=[] (at pp.c:24174)
      FuncDecl: quals=None (at pp.c:24174)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='main', quals=[] (at pp.c:24174)
          IdentifierType: names=['int'] (at None)
    Compound:  (at pp.c:24176)
      Compound:  (at pp.c:24177)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24177)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24177)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24177)
        Compound:  (at pp.c:24178)
          Compound:  (at pp.c:24184)
          FuncCall:  (at None)
            ID: name='RealMainP__Scheduler__init' (at pp.c:24189)
          FuncCall:  (at None)
            ID: name='RealMainP__PlatformInit__init' (at pp.c:24195)
          While:  (at pp.c:24196)
            FuncCall:  (at None)
              ID: name='RealMainP__Scheduler__runNextTask' (at pp.c:24196)
          FuncCall:  (at None)
            ID: name='RealMainP__SoftwareInit__init' (at pp.c:24202)
          While:  (at pp.c:24203)
            FuncCall:  (at None)
              ID: name='RealMainP__Scheduler__runNextTask' (at pp.c:24203)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24206)
          ExprList:  (at pp.c:24206)
            ID: name='__nesc_atomic' (at pp.c:24206)
      FuncCall:  (at None)
        ID: name='__nesc_enable_interrupt' (at pp.c:24209)
      FuncCall:  (at None)
        ID: name='RealMainP__Boot__booted' (at pp.c:24211)
      FuncCall:  (at None)
        ID: name='RealMainP__Scheduler__taskLoop' (at pp.c:24214)
      Return:  (at pp.c:24219)
        UnaryOp: op='-' (at pp.c:24219)
          Constant: type='int', value='1' (at pp.c:24219)
  FuncDef:  (at pp.c:24223)
    Decl: name='Msp430ClockP__set_dco_calib', quals=[], storage=['static'] (at pp.c:24223)
      FuncDecl: quals=None (at pp.c:24223)
        ParamList:  (at pp.c:24223)
          Decl: name='calib', quals=[], storage=[] (at pp.c:24223)
            TypeDecl: declname='calib', quals=[] (at pp.c:24223)
              IdentifierType: names=['int'] (at None)
        TypeDecl: declname='Msp430ClockP__set_dco_calib', quals=[] (at pp.c:24223)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24224)
      Assignment: op='=' (at pp.c:24225)
        ID: name='BCSCTL1' (at pp.c:24225)
        BinaryOp: op='|' (at pp.c:24225)
          BinaryOp: op='&' (at pp.c:24225)
            ID: name='BCSCTL1' (at pp.c:24225)
            UnaryOp: op='~' (at pp.c:24225)
              Constant: type='int', value='0x07' (at pp.c:24225)
          BinaryOp: op='&' (at pp.c:24225)
            BinaryOp: op='>>' (at pp.c:24225)
              ID: name='calib' (at pp.c:24225)
              Constant: type='int', value='8' (at pp.c:24225)
            Constant: type='int', value='0x07' (at pp.c:24225)
      Assignment: op='=' (at pp.c:24226)
        ID: name='DCOCTL' (at pp.c:24226)
        BinaryOp: op='&' (at pp.c:24226)
          ID: name='calib' (at pp.c:24226)
          Constant: type='int', value='0xff' (at pp.c:24226)
  FuncDef:  (at pp.c:24230)
    Decl: name='SchedulerBasicP__Scheduler__runNextTask', quals=[], storage=['static'] (at pp.c:24230)
      FuncDecl: quals=None (at pp.c:24230)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SchedulerBasicP__Scheduler__runNextTask', quals=[] (at pp.c:24230)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:24231)
      Decl: name='nextTask', quals=[], storage=[] (at pp.c:24232)
        TypeDecl: declname='nextTask', quals=[] (at pp.c:24232)
          IdentifierType: names=['uint8_t'] (at None)
      Compound:  (at pp.c:24236)
        Assignment: op='=' (at pp.c:24237)
          ID: name='nextTask' (at pp.c:24237)
          FuncCall:  (at None)
            ID: name='SchedulerBasicP__popTask' (at pp.c:24237)
        If:  (at pp.c:24238)
          BinaryOp: op='==' (at pp.c:24238)
            ID: name='nextTask' (at pp.c:24238)
            ID: name='SchedulerBasicP__NO_TASK' (at pp.c:24238)
          Compound:  (at pp.c:24239)
            Compound:  (at pp.c:24240)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:24241)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:24241)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='FALSE' (at pp.c:24243)
              Return:  (at pp.c:24246)
                ID: name='__nesc_temp' (at pp.c:24246)
      FuncCall:  (at None)
        ID: name='SchedulerBasicP__TaskBasic__runTask' (at pp.c:24251)
        ExprList:  (at pp.c:24251)
          ID: name='nextTask' (at pp.c:24251)
      Return:  (at pp.c:24252)
        ID: name='TRUE' (at pp.c:24252)
  FuncDef:  (at pp.c:24256)
    Decl: name='SchedulerBasicP__TaskBasic__default__runTask', quals=[], storage=['static'] (at pp.c:24256)
      FuncDecl: quals=None (at pp.c:24256)
        ParamList:  (at pp.c:24256)
          Decl: name='id', quals=[], storage=[] (at pp.c:24256)
            TypeDecl: declname='id', quals=[] (at pp.c:24256)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SchedulerBasicP__TaskBasic__default__runTask', quals=[] (at pp.c:24256)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24257)
  FuncDef:  (at pp.c:24261)
    Decl: name='SchedulerBasicP__TaskBasic__runTask', quals=[], storage=['static'] (at pp.c:24261)
      FuncDecl: quals=None (at pp.c:24261)
        ParamList:  (at pp.c:24261)
          Decl: name='arg_0x101333340', quals=[], storage=[] (at pp.c:24261)
            TypeDecl: declname='arg_0x101333340', quals=[] (at pp.c:24261)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SchedulerBasicP__TaskBasic__runTask', quals=[] (at pp.c:24261)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24261)
      Switch:  (at pp.c:24263)
        ID: name='arg_0x101333340' (at pp.c:24263)
        Compound:  (at pp.c:24263)
          Case:  (at pp.c:24265)
            ID: name='BaseStationP__uartSendTask' (at pp.c:24265)
            FuncCall:  (at None)
              ID: name='BaseStationP__uartSendTask__runTask' (at pp.c:24267)
          Break:  (at pp.c:24269)
          Case:  (at pp.c:24271)
            ID: name='BaseStationP__radioSendTask' (at pp.c:24271)
            FuncCall:  (at None)
              ID: name='BaseStationP__radioSendTask__runTask' (at pp.c:24273)
          Break:  (at pp.c:24275)
          Case:  (at pp.c:24277)
            ID: name='CC2420CsmaP__startDone_task' (at pp.c:24277)
            FuncCall:  (at None)
              ID: name='CC2420CsmaP__startDone_task__runTask' (at pp.c:24279)
          Break:  (at pp.c:24281)
          Case:  (at pp.c:24283)
            ID: name='CC2420CsmaP__stopDone_task' (at pp.c:24283)
            FuncCall:  (at None)
              ID: name='CC2420CsmaP__stopDone_task__runTask' (at pp.c:24285)
          Break:  (at pp.c:24287)
          Case:  (at pp.c:24289)
            ID: name='CC2420CsmaP__sendDone_task' (at pp.c:24289)
            FuncCall:  (at None)
              ID: name='CC2420CsmaP__sendDone_task__runTask' (at pp.c:24291)
          Break:  (at pp.c:24293)
          Case:  (at pp.c:24295)
            ID: name='CC2420ControlP__sync' (at pp.c:24295)
            FuncCall:  (at None)
              ID: name='CC2420ControlP__sync__runTask' (at pp.c:24297)
          Break:  (at pp.c:24299)
          Case:  (at pp.c:24301)
            ID: name='CC2420ControlP__syncDone' (at pp.c:24301)
            FuncCall:  (at None)
              ID: name='CC2420ControlP__syncDone__runTask' (at pp.c:24303)
          Break:  (at pp.c:24305)
          Case:  (at pp.c:24307)
            ID: name='CC2420SpiP__grant' (at pp.c:24307)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__grant__runTask' (at pp.c:24309)
          Break:  (at pp.c:24311)
          Case:  (at pp.c:24313)
            ID: name='Msp430SpiNoDmaP__0__signalDone_task' (at pp.c:24313)
            FuncCall:  (at None)
              ID: name='Msp430SpiNoDmaP__0__signalDone_task__runTask' (at pp.c:24315)
          Break:  (at pp.c:24317)
          Case:  (at pp.c:24319)
            ID: name='ArbiterP__0__grantedTask' (at pp.c:24319)
            FuncCall:  (at None)
              ID: name='ArbiterP__0__grantedTask__runTask' (at pp.c:24321)
          Break:  (at pp.c:24323)
          Case:  (at pp.c:24325)
            ID: name='CC2420ReceiveP__receiveDone_task' (at pp.c:24325)
            FuncCall:  (at None)
              ID: name='CC2420ReceiveP__receiveDone_task__runTask' (at pp.c:24327)
          Break:  (at pp.c:24329)
          Case:  (at pp.c:24331)
            ID: name='AlarmToTimerC__0__fired' (at pp.c:24331)
            FuncCall:  (at None)
              ID: name='AlarmToTimerC__0__fired__runTask' (at pp.c:24333)
          Break:  (at pp.c:24335)
          Case:  (at pp.c:24337)
            ID: name='VirtualizeTimerC__0__updateFromTimer' (at pp.c:24337)
            FuncCall:  (at None)
              ID: name='VirtualizeTimerC__0__updateFromTimer__runTask' (at pp.c:24339)
          Break:  (at pp.c:24341)
          Case:  (at pp.c:24343)
            ID: name='CC2420TinyosNetworkP__grantTask' (at pp.c:24343)
            FuncCall:  (at None)
              ID: name='CC2420TinyosNetworkP__grantTask__runTask' (at pp.c:24345)
          Break:  (at pp.c:24347)
          Case:  (at pp.c:24349)
            ID: name='SerialP__RunTx' (at pp.c:24349)
            FuncCall:  (at None)
              ID: name='SerialP__RunTx__runTask' (at pp.c:24351)
          Break:  (at pp.c:24353)
          Case:  (at pp.c:24355)
            ID: name='SerialP__startDoneTask' (at pp.c:24355)
            FuncCall:  (at None)
              ID: name='SerialP__startDoneTask__runTask' (at pp.c:24357)
          Break:  (at pp.c:24359)
          Case:  (at pp.c:24361)
            ID: name='SerialP__stopDoneTask' (at pp.c:24361)
            FuncCall:  (at None)
              ID: name='SerialP__stopDoneTask__runTask' (at pp.c:24363)
          Break:  (at pp.c:24365)
          Case:  (at pp.c:24367)
            ID: name='SerialP__defaultSerialFlushTask' (at pp.c:24367)
            FuncCall:  (at None)
              ID: name='SerialP__defaultSerialFlushTask__runTask' (at pp.c:24369)
          Break:  (at pp.c:24371)
          Case:  (at pp.c:24373)
            ID: name='SerialDispatcherP__0__signalSendDone' (at pp.c:24373)
            FuncCall:  (at None)
              ID: name='SerialDispatcherP__0__signalSendDone__runTask' (at pp.c:24375)
          Break:  (at pp.c:24377)
          Case:  (at pp.c:24379)
            ID: name='SerialDispatcherP__0__receiveTask' (at pp.c:24379)
            FuncCall:  (at None)
              ID: name='SerialDispatcherP__0__receiveTask__runTask' (at pp.c:24381)
          Break:  (at pp.c:24383)
          Case:  (at pp.c:24385)
            ID: name='ArbiterP__1__grantedTask' (at pp.c:24385)
            FuncCall:  (at None)
              ID: name='ArbiterP__1__grantedTask__runTask' (at pp.c:24387)
          Break:  (at pp.c:24389)
          Default:  (at pp.c:24391)
            FuncCall:  (at None)
              ID: name='SchedulerBasicP__TaskBasic__default__runTask' (at pp.c:24393)
              ExprList:  (at pp.c:24393)
                ID: name='arg_0x101333340' (at pp.c:24393)
          Break:  (at pp.c:24395)
  FuncDef:  (at pp.c:24402)
    Decl: name='Msp430UartP__0__ResourceConfigure__configure', quals=[], storage=['static'] (at pp.c:24402)
      FuncDecl: quals=None (at pp.c:24402)
        ParamList:  (at pp.c:24402)
          Decl: name='id', quals=[], storage=[] (at pp.c:24402)
            TypeDecl: declname='id', quals=[] (at pp.c:24402)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__ResourceConfigure__configure', quals=[] (at pp.c:24402)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24404)
      Decl: name='config', quals=[], storage=[] (at pp.c:24405)
        PtrDecl: quals=[] (at pp.c:24405)
          TypeDecl: declname='config', quals=[] (at pp.c:24405)
            IdentifierType: names=['msp430_uart_union_config_t'] (at None)
        FuncCall:  (at None)
          ID: name='Msp430UartP__0__Msp430UartConfigure__getConfig' (at pp.c:24405)
          ExprList:  (at pp.c:24405)
            ID: name='id' (at pp.c:24405)
      Assignment: op='=' (at pp.c:24408)
        ID: name='Msp430UartP__0__m_byte_time' (at pp.c:24408)
        BinaryOp: op='/' (at pp.c:24408)
          StructRef: type='.' (at pp.c:24408)
            StructRef: type='->' (at pp.c:24408)
              ID: name='config' (at pp.c:24408)
              ID: name='uartConfig' (at pp.c:24408)
            ID: name='ubr' (at pp.c:24408)
          Constant: type='int', value='2' (at pp.c:24408)
      FuncCall:  (at None)
        ID: name='Msp430UartP__0__Usart__setModeUart' (at pp.c:24409)
        ExprList:  (at pp.c:24409)
          ID: name='config' (at pp.c:24409)
      FuncCall:  (at None)
        ID: name='Msp430UartP__0__Usart__enableIntr' (at pp.c:24410)
  FuncDef:  (at pp.c:24414)
    Decl: name='HplMsp430Usart1P__Usart__disableSpi', quals=[], storage=['static'] (at pp.c:24414)
      FuncDecl: quals=None (at pp.c:24414)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__Usart__disableSpi', quals=[] (at pp.c:24414)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24416)
      Compound:  (at pp.c:24419)
        Assignment: op='&=' (at pp.c:24420)
          ID: name='HplMsp430Usart1P__ME2' (at pp.c:24420)
          UnaryOp: op='~' (at pp.c:24420)
            BinaryOp: op='<<' (at pp.c:24420)
              Constant: type='int', value='1' (at pp.c:24420)
              Constant: type='int', value='4' (at pp.c:24420)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart1P__SIMO__selectIOFunc' (at pp.c:24421)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart1P__SOMI__selectIOFunc' (at pp.c:24422)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart1P__UCLK__selectIOFunc' (at pp.c:24423)
  FuncDef:  (at pp.c:24428)
    Decl: name='HplMsp430Usart1P__Usart__disableUart', quals=[], storage=['static'] (at pp.c:24428)
      FuncDecl: quals=None (at pp.c:24428)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart1P__Usart__disableUart', quals=[] (at pp.c:24428)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24430)
      Compound:  (at pp.c:24433)
        Assignment: op='&=' (at pp.c:24434)
          ID: name='HplMsp430Usart1P__ME2' (at pp.c:24434)
          UnaryOp: op='~' (at pp.c:24434)
            BinaryOp: op='|' (at pp.c:24434)
              BinaryOp: op='<<' (at pp.c:24434)
                Constant: type='int', value='1' (at pp.c:24434)
                Constant: type='int', value='5' (at pp.c:24434)
              BinaryOp: op='<<' (at pp.c:24434)
                Constant: type='int', value='1' (at pp.c:24434)
                Constant: type='int', value='4' (at pp.c:24434)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart1P__UTXD__selectIOFunc' (at pp.c:24435)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart1P__URXD__selectIOFunc' (at pp.c:24436)
  FuncDef:  (at pp.c:24441)
    Decl: name='HplMsp430GeneralIOP__31__IO__toggle', quals=[], storage=['static'] (at pp.c:24441)
      FuncDecl: quals=None (at pp.c:24441)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__31__IO__toggle', quals=[] (at pp.c:24441)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24443)
      Compound:  (at pp.c:24445)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24445)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24445)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24445)
        Assignment: op='^=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:24447)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:24447)
          BinaryOp: op='<<' (at pp.c:24447)
            Constant: type='int', value='0x01' (at pp.c:24447)
            Constant: type='int', value='7' (at pp.c:24447)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24449)
          ExprList:  (at pp.c:24449)
            ID: name='__nesc_atomic' (at pp.c:24449)
  FuncDef:  (at pp.c:24453)
    Decl: name='ArbiterP__1__Resource__isOwner', quals=[], storage=['static'] (at pp.c:24453)
      FuncDecl: quals=None (at pp.c:24453)
        ParamList:  (at pp.c:24453)
          Decl: name='id', quals=[], storage=[] (at pp.c:24453)
            TypeDecl: declname='id', quals=[] (at pp.c:24453)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__1__Resource__isOwner', quals=[] (at pp.c:24453)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:24455)
      Compound:  (at pp.c:24456)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24456)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24456)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24456)
        Compound:  (at pp.c:24458)
          If:  (at pp.c:24459)
            BinaryOp: op='&&' (at pp.c:24459)
              BinaryOp: op='==' (at pp.c:24459)
                ID: name='ArbiterP__1__resId' (at pp.c:24459)
                ID: name='id' (at pp.c:24459)
              BinaryOp: op='==' (at pp.c:24459)
                ID: name='ArbiterP__1__state' (at pp.c:24459)
                ID: name='ArbiterP__1__RES_BUSY' (at pp.c:24459)
            Compound:  (at pp.c:24459)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:24460)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:24460)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='TRUE' (at pp.c:24462)
              Compound:  (at pp.c:24464)
                FuncCall:  (at None)
                  ID: name='__nesc_atomic_end' (at pp.c:24466)
                  ExprList:  (at pp.c:24466)
                    ID: name='__nesc_atomic' (at pp.c:24466)
                Return:  (at pp.c:24468)
                  ID: name='__nesc_temp' (at pp.c:24468)
            Compound:  (at pp.c:24473)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:24474)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:24474)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='FALSE' (at pp.c:24476)
              Compound:  (at pp.c:24478)
                FuncCall:  (at None)
                  ID: name='__nesc_atomic_end' (at pp.c:24480)
                  ExprList:  (at pp.c:24480)
                    ID: name='__nesc_atomic' (at pp.c:24480)
                Return:  (at pp.c:24482)
                  ID: name='__nesc_temp' (at pp.c:24482)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24487)
          ExprList:  (at pp.c:24487)
            ID: name='__nesc_atomic' (at pp.c:24487)
  FuncDef:  (at pp.c:24491)
    Decl: name='SerialP__testOff', quals=[], storage=['static'] (at pp.c:24491)
      FuncDecl: quals=None (at pp.c:24491)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__testOff', quals=[] (at pp.c:24491)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24493)
      Decl: name='turnOff', quals=[], storage=[] (at pp.c:24494)
        TypeDecl: declname='turnOff', quals=[] (at pp.c:24494)
          IdentifierType: names=['bool'] (at None)
        ID: name='FALSE' (at pp.c:24494)
      Compound:  (at pp.c:24498)
        If:  (at pp.c:24499)
          BinaryOp: op='&&' (at pp.c:24499)
            BinaryOp: op='==' (at pp.c:24499)
              ID: name='SerialP__txState' (at pp.c:24499)
              ID: name='SerialP__TXSTATE_INACTIVE' (at pp.c:24499)
            BinaryOp: op='==' (at pp.c:24500)
              ID: name='SerialP__rxState' (at pp.c:24500)
              ID: name='SerialP__RXSTATE_INACTIVE' (at pp.c:24500)
          Compound:  (at pp.c:24500)
            Assignment: op='=' (at pp.c:24501)
              ID: name='turnOff' (at pp.c:24501)
              ID: name='TRUE' (at pp.c:24501)
      If:  (at pp.c:24504)
        ID: name='turnOff' (at pp.c:24504)
        Compound:  (at pp.c:24504)
          FuncCall:  (at None)
            ID: name='SerialP__stopDoneTask__postTask' (at pp.c:24505)
          Assignment: op='=' (at pp.c:24508)
            ID: name='SerialP__offPending' (at pp.c:24508)
            ID: name='FALSE' (at pp.c:24508)
        Compound:  (at pp.c:24510)
          Assignment: op='=' (at pp.c:24513)
            ID: name='SerialP__offPending' (at pp.c:24513)
            ID: name='TRUE' (at pp.c:24513)
  FuncDef:  (at pp.c:24518)
    Decl: name='HdlcTranslateC__SerialFrameComm__putDelimiter', quals=[], storage=['static'] (at pp.c:24518)
      FuncDecl: quals=None (at pp.c:24518)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HdlcTranslateC__SerialFrameComm__putDelimiter', quals=[] (at pp.c:24518)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:24520)
      Compound:  (at pp.c:24521)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24521)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24521)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24521)
        Compound:  (at pp.c:24523)
          Assignment: op='=' (at pp.c:24524)
            StructRef: type='.' (at pp.c:24524)
              ID: name='HdlcTranslateC__state' (at pp.c:24524)
              ID: name='sendEscape' (at pp.c:24524)
            Constant: type='int', value='0' (at pp.c:24524)
          Assignment: op='=' (at pp.c:24525)
            ID: name='HdlcTranslateC__m_data' (at pp.c:24525)
            ID: name='HDLC_FLAG_BYTE' (at pp.c:24525)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24528)
          ExprList:  (at pp.c:24528)
            ID: name='__nesc_atomic' (at pp.c:24528)
      Return:  (at pp.c:24529)
        FuncCall:  (at None)
          ID: name='HdlcTranslateC__UartStream__send' (at pp.c:24529)
          ExprList:  (at pp.c:24529)
            UnaryOp: op='&' (at pp.c:24529)
              ID: name='HdlcTranslateC__m_data' (at pp.c:24529)
            Constant: type='int', value='1' (at pp.c:24529)
  FuncDef:  (at pp.c:24533)
    Decl: name='Msp430UartP__0__UartStream__send', quals=[], storage=['static'] (at pp.c:24533)
      FuncDecl: quals=None (at pp.c:24533)
        ParamList:  (at pp.c:24533)
          Decl: name='id', quals=[], storage=[] (at pp.c:24533)
            TypeDecl: declname='id', quals=[] (at pp.c:24533)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:24533)
            PtrDecl: quals=[] (at pp.c:24533)
              TypeDecl: declname='buf', quals=[] (at pp.c:24533)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:24533)
            TypeDecl: declname='len', quals=[] (at pp.c:24533)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430UartP__0__UartStream__send', quals=[] (at pp.c:24533)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:24535)
      If:  (at pp.c:24536)
        BinaryOp: op='==' (at None)
          FuncCall:  (at None)
            ID: name='Msp430UartP__0__UsartResource__isOwner' (at pp.c:24536)
            ExprList:  (at pp.c:24536)
              ID: name='id' (at pp.c:24536)
          ID: name='FALSE' (at pp.c:24536)
        Compound:  (at pp.c:24536)
          Return:  (at pp.c:24537)
            ID: name='FAIL' (at pp.c:24537)
      If:  (at pp.c:24540)
        BinaryOp: op='==' (at pp.c:24540)
          ID: name='len' (at pp.c:24540)
          Constant: type='int', value='0' (at pp.c:24540)
        Compound:  (at pp.c:24540)
          Return:  (at pp.c:24541)
            ID: name='FAIL' (at pp.c:24541)
        Compound:  (at pp.c:24543)
          If:  (at pp.c:24545)
            ID: name='Msp430UartP__0__m_tx_buf' (at pp.c:24545)
            Compound:  (at pp.c:24545)
              Return:  (at pp.c:24546)
                ID: name='EBUSY' (at pp.c:24546)
      Assignment: op='=' (at pp.c:24550)
        ID: name='Msp430UartP__0__m_tx_buf' (at pp.c:24550)
        ID: name='buf' (at pp.c:24550)
      Assignment: op='=' (at pp.c:24551)
        ID: name='Msp430UartP__0__m_tx_len' (at pp.c:24551)
        ID: name='len' (at pp.c:24551)
      Assignment: op='=' (at pp.c:24552)
        ID: name='Msp430UartP__0__m_tx_pos' (at pp.c:24552)
        Constant: type='int', value='0' (at pp.c:24552)
      Assignment: op='=' (at pp.c:24553)
        ID: name='Msp430UartP__0__current_owner' (at pp.c:24553)
        ID: name='id' (at pp.c:24553)
      FuncCall:  (at None)
        ID: name='Msp430UartP__0__Usart__tx' (at pp.c:24554)
        ExprList:  (at pp.c:24554)
          ArrayRef:  (at pp.c:24554)
            ID: name='buf' (at pp.c:24554)
            UnaryOp: op='p++' (at pp.c:24554)
              ID: name='Msp430UartP__0__m_tx_pos' (at pp.c:24554)
      Return:  (at pp.c:24555)
        ID: name='SUCCESS' (at pp.c:24555)
  FuncDef:  (at pp.c:24559)
    Decl: name='SerialP__MaybeScheduleTx', quals=[], storage=['static'] (at pp.c:24559)
      FuncDecl: quals=None (at pp.c:24559)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SerialP__MaybeScheduleTx', quals=[] (at pp.c:24559)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24561)
      Compound:  (at pp.c:24562)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24562)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24562)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24562)
        Compound:  (at pp.c:24564)
          If:  (at pp.c:24565)
            BinaryOp: op='==' (at pp.c:24565)
              ID: name='SerialP__txPending' (at pp.c:24565)
              Constant: type='int', value='0' (at pp.c:24565)
            Compound:  (at pp.c:24565)
              If:  (at pp.c:24566)
                BinaryOp: op='==' (at None)
                  FuncCall:  (at None)
                    ID: name='SerialP__RunTx__postTask' (at pp.c:24566)
                  ID: name='SUCCESS' (at pp.c:24566)
                Compound:  (at pp.c:24566)
                  Assignment: op='=' (at pp.c:24567)
                    ID: name='SerialP__txPending' (at pp.c:24567)
                    Constant: type='int', value='1' (at pp.c:24567)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24572)
          ExprList:  (at pp.c:24572)
            ID: name='__nesc_atomic' (at pp.c:24572)
  FuncDef:  (at pp.c:24576)
    Decl: name='FcfsResourceQueueC__0__FcfsQueue__isEmpty', quals=[], storage=['static'] (at pp.c:24576)
      FuncDecl: quals=None (at pp.c:24576)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__isEmpty', quals=[] (at pp.c:24576)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:24578)
      Compound:  (at pp.c:24579)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24579)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24579)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24579)
        Compound:  (at pp.c:24581)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:24582)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:24582)
              IdentifierType: names=['char', 'unsigned'] (at None)
            BinaryOp: op='==' (at pp.c:24584)
              ID: name='FcfsResourceQueueC__0__qHead' (at pp.c:24584)
              ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:24584)
          Compound:  (at pp.c:24586)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:24588)
              ExprList:  (at pp.c:24588)
                ID: name='__nesc_atomic' (at pp.c:24588)
            Return:  (at pp.c:24590)
              ID: name='__nesc_temp' (at pp.c:24590)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24594)
          ExprList:  (at pp.c:24594)
            ID: name='__nesc_atomic' (at pp.c:24594)
  FuncDef:  (at pp.c:24598)
    Decl: name='CC2420ActiveMessageP__RadioResource__granted', quals=[], storage=['static'] (at pp.c:24598)
      FuncDecl: quals=None (at pp.c:24598)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__RadioResource__granted', quals=[] (at pp.c:24598)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24600)
      Decl: name='rc', quals=[], storage=[] (at pp.c:24601)
        TypeDecl: declname='rc', quals=[] (at pp.c:24601)
          IdentifierType: names=['uint8_t'] (at None)
      Decl: name='header', quals=[], storage=[] (at pp.c:24602)
        PtrDecl: quals=[] (at pp.c:24602)
          TypeDecl: declname='header', quals=[] (at pp.c:24602)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__CC2420PacketBody__getHeader' (at pp.c:24602)
          ExprList:  (at pp.c:24602)
            ID: name='CC2420ActiveMessageP__pending_message' (at pp.c:24602)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__SendNotifier__aboutToSend' (at pp.c:24604)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='__nesc_ntoh_leuint8' (at pp.c:24604)
            ExprList:  (at pp.c:24604)
              StructRef: type='.' (at pp.c:24604)
                StructRef: type='->' (at pp.c:24604)
                  ID: name='header' (at pp.c:24604)
                  ID: name='type' (at pp.c:24604)
                ID: name='nxdata' (at pp.c:24604)
          FuncCall:  (at None)
            ID: name='__nesc_ntoh_leuint16' (at pp.c:24604)
            ExprList:  (at pp.c:24604)
              StructRef: type='.' (at pp.c:24604)
                StructRef: type='->' (at pp.c:24604)
                  ID: name='header' (at pp.c:24604)
                  ID: name='dest' (at pp.c:24604)
                ID: name='nxdata' (at pp.c:24604)
          ID: name='CC2420ActiveMessageP__pending_message' (at pp.c:24604)
      Assignment: op='=' (at pp.c:24605)
        ID: name='rc' (at pp.c:24605)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__SubSend__send' (at pp.c:24605)
          ExprList:  (at pp.c:24605)
            ID: name='CC2420ActiveMessageP__pending_message' (at pp.c:24605)
            ID: name='CC2420ActiveMessageP__pending_length' (at pp.c:24605)
      If:  (at pp.c:24606)
        BinaryOp: op='!=' (at pp.c:24606)
          ID: name='rc' (at pp.c:24606)
          ID: name='SUCCESS' (at pp.c:24606)
        Compound:  (at pp.c:24606)
          FuncCall:  (at None)
            ID: name='CC2420ActiveMessageP__RadioResource__release' (at pp.c:24607)
          FuncCall:  (at None)
            ID: name='CC2420ActiveMessageP__AMSend__sendDone' (at pp.c:24608)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='__nesc_ntoh_leuint8' (at pp.c:24608)
                ExprList:  (at pp.c:24608)
                  StructRef: type='.' (at pp.c:24608)
                    StructRef: type='->' (at pp.c:24608)
                      ID: name='header' (at pp.c:24608)
                      ID: name='type' (at pp.c:24608)
                    ID: name='nxdata' (at pp.c:24608)
              ID: name='CC2420ActiveMessageP__pending_message' (at pp.c:24608)
              ID: name='rc' (at pp.c:24608)
  FuncDef:  (at pp.c:24613)
    Decl: name='CC2420TinyosNetworkP__ActiveSend__send', quals=[], storage=['static'] (at pp.c:24613)
      FuncDecl: quals=None (at pp.c:24613)
        ParamList:  (at pp.c:24613)
          Decl: name='msg', quals=[], storage=[] (at pp.c:24613)
            PtrDecl: quals=[] (at pp.c:24613)
              TypeDecl: declname='msg', quals=[] (at pp.c:24613)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:24613)
            TypeDecl: declname='len', quals=[] (at pp.c:24613)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__ActiveSend__send', quals=[] (at pp.c:24613)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:24615)
      FuncCall:  (at None)
        ID: name='CC2420TinyosNetworkP__CC2420Packet__setNetwork' (at pp.c:24616)
        ExprList:  (at pp.c:24616)
          ID: name='msg' (at pp.c:24616)
          Constant: type='int', value='0x3f' (at pp.c:24616)
      Assignment: op='=' (at pp.c:24617)
        ID: name='CC2420TinyosNetworkP__m_busy_client' (at pp.c:24617)
        ID: name='CC2420TinyosNetworkP__CLIENT_AM' (at pp.c:24617)
      Return:  (at pp.c:24618)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__SubSend__send' (at pp.c:24618)
          ExprList:  (at pp.c:24618)
            ID: name='msg' (at pp.c:24618)
            ID: name='len' (at pp.c:24618)
  FuncDef:  (at pp.c:24622)
    Decl: name='CC2420PacketP__getNetwork', quals=[], storage=['static'] (at pp.c:24622)
      FuncDecl: quals=None (at pp.c:24622)
        ParamList:  (at pp.c:24622)
          Decl: name='msg', quals=[], storage=[] (at pp.c:24622)
            PtrDecl: quals=[] (at pp.c:24622)
              TypeDecl: declname='msg', quals=[] (at pp.c:24622)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:24622)
          TypeDecl: declname='CC2420PacketP__getNetwork', quals=[] (at pp.c:24622)
            IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:24624)
      Decl: name='hdr', quals=[], storage=[] (at pp.c:24625)
        PtrDecl: quals=[] (at pp.c:24625)
          TypeDecl: declname='hdr', quals=[] (at pp.c:24625)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getHeader' (at pp.c:24625)
          ExprList:  (at pp.c:24625)
            ID: name='msg' (at pp.c:24625)
      Decl: name='offset', quals=[], storage=[] (at pp.c:24626)
        TypeDecl: declname='offset', quals=[] (at pp.c:24626)
          IdentifierType: names=['int'] (at None)
      Assignment: op='=' (at pp.c:24628)
        ID: name='offset' (at pp.c:24628)
        BinaryOp: op='+' (at None)
          BinaryOp: op='+' (at None)
            FuncCall:  (at None)
              ID: name='CC2420PacketP__getAddressLength' (at pp.c:24628)
              ExprList:  (at None)
                BinaryOp: op='&' (at None)
                  BinaryOp: op='>>' (at None)
                    FuncCall:  (at None)
                      ID: name='__nesc_ntoh_leuint16' (at pp.c:24628)
                      ExprList:  (at pp.c:24628)
                        StructRef: type='.' (at pp.c:24628)
                          StructRef: type='->' (at pp.c:24628)
                            ID: name='hdr' (at pp.c:24628)
                            ID: name='fcf' (at pp.c:24628)
                          ID: name='nxdata' (at pp.c:24628)
                    ID: name='IEEE154_FCF_DEST_ADDR_MODE' (at pp.c:24628)
                  Constant: type='int', value='0x3' (at pp.c:24628)
            FuncCall:  (at None)
              ID: name='CC2420PacketP__getAddressLength' (at pp.c:24629)
              ExprList:  (at None)
                BinaryOp: op='&' (at None)
                  BinaryOp: op='>>' (at None)
                    FuncCall:  (at None)
                      ID: name='__nesc_ntoh_leuint16' (at pp.c:24629)
                      ExprList:  (at pp.c:24629)
                        StructRef: type='.' (at pp.c:24629)
                          StructRef: type='->' (at pp.c:24629)
                            ID: name='hdr' (at pp.c:24629)
                            ID: name='fcf' (at pp.c:24629)
                          ID: name='nxdata' (at pp.c:24629)
                    ID: name='IEEE154_FCF_SRC_ADDR_MODE' (at pp.c:24629)
                  Constant: type='int', value='0x3' (at pp.c:24629)
          Cast:  (at None)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['size_t'] (at None)
            UnaryOp: op='&' (at None)
              StructRef: type='->' (at None)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    PtrDecl: quals=[] (at pp.c:24630)
                      TypeDecl: declname=None, quals=[] (at None)
                        IdentifierType: names=['cc2420_header_t'] (at None)
                  Constant: type='int', value='0' (at pp.c:24630)
                ID: name='dest' (at pp.c:24630)
      Return:  (at pp.c:24632)
        BinaryOp: op='+' (at None)
          Cast:  (at None)
            Typename: quals=[] (at None)
              PtrDecl: quals=[] (at pp.c:24632)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            ID: name='hdr' (at pp.c:24632)
          ID: name='offset' (at pp.c:24632)
  FuncDef:  (at pp.c:24636)
    Decl: name='CC2420TransmitP__loadTXFIFO', quals=[], storage=['static'] (at pp.c:24636)
      FuncDecl: quals=None (at pp.c:24636)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__loadTXFIFO', quals=[] (at pp.c:24636)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24638)
      Decl: name='header', quals=[], storage=[] (at pp.c:24639)
        PtrDecl: quals=[] (at pp.c:24639)
          TypeDecl: declname='header', quals=[] (at pp.c:24639)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420TransmitP__CC2420PacketBody__getHeader' (at pp.c:24639)
          ExprList:  (at pp.c:24639)
            ID: name='CC2420TransmitP__m_msg' (at pp.c:24639)
      Decl: name='tx_power', quals=[], storage=[] (at pp.c:24640)
        TypeDecl: declname='tx_power', quals=[] (at pp.c:24640)
          IdentifierType: names=['uint8_t'] (at None)
        FuncCall:  (at None)
          ID: name='__nesc_ntoh_uint8' (at pp.c:24640)
          ExprList:  (at None)
            StructRef: type='.' (at None)
              StructRef: type='->' (at None)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__CC2420PacketBody__getMetadata' (at pp.c:24640)
                  ExprList:  (at pp.c:24640)
                    ID: name='CC2420TransmitP__m_msg' (at pp.c:24640)
                ID: name='tx_power' (at pp.c:24640)
              ID: name='nxdata' (at pp.c:24640)
      If:  (at pp.c:24642)
        UnaryOp: op='!' (at pp.c:24642)
          ID: name='tx_power' (at pp.c:24642)
        Compound:  (at pp.c:24642)
          Assignment: op='=' (at pp.c:24643)
            ID: name='tx_power' (at pp.c:24643)
            Constant: type='int', value='31' (at pp.c:24643)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__CSN__clr' (at pp.c:24646)
      If:  (at pp.c:24648)
        BinaryOp: op='!=' (at pp.c:24648)
          ID: name='CC2420TransmitP__m_tx_power' (at pp.c:24648)
          ID: name='tx_power' (at pp.c:24648)
        Compound:  (at pp.c:24648)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__TXCTRL__write' (at pp.c:24649)
            ExprList:  (at pp.c:24649)
              BinaryOp: op='|' (at pp.c:24649)
                BinaryOp: op='|' (at pp.c:24649)
                  BinaryOp: op='|' (at pp.c:24649)
                    BinaryOp: op='<<' (at pp.c:24649)
                      Constant: type='int', value='2' (at pp.c:24649)
                      ID: name='CC2420_TXCTRL_TXMIXBUF_CUR' (at pp.c:24649)
                    BinaryOp: op='<<' (at pp.c:24650)
                      Constant: type='int', value='3' (at pp.c:24650)
                      ID: name='CC2420_TXCTRL_PA_CURRENT' (at pp.c:24650)
                  BinaryOp: op='<<' (at pp.c:24651)
                    Constant: type='int', value='1' (at pp.c:24651)
                    ID: name='CC2420_TXCTRL_RESERVED' (at pp.c:24651)
                BinaryOp: op='<<' (at pp.c:24652)
                  BinaryOp: op='&' (at pp.c:24652)
                    ID: name='tx_power' (at pp.c:24652)
                    Constant: type='int', value='0x1F' (at pp.c:24652)
                  ID: name='CC2420_TXCTRL_PA_LEVEL' (at pp.c:24652)
      Assignment: op='=' (at pp.c:24655)
        ID: name='CC2420TransmitP__m_tx_power' (at pp.c:24655)
        ID: name='tx_power' (at pp.c:24655)
      Compound:  (at pp.c:24657)
        Decl: name='tmpLen', quals=[], storage=[] (at pp.c:24658)
          TypeDecl: declname='tmpLen', quals=[] (at pp.c:24658)
            IdentifierType: names=['uint8_t'] (at None)
          BinaryOp: op='-' (at None)
            FuncCall:  (at None)
              ID: name='__nesc_ntoh_leuint8' (at pp.c:24658)
              ExprList:  (at pp.c:24658)
                StructRef: type='.' (at pp.c:24658)
                  StructRef: type='->' (at pp.c:24658)
                    ID: name='header' (at pp.c:24658)
                    ID: name='length' (at pp.c:24658)
                  ID: name='nxdata' (at pp.c:24658)
            Constant: type='int', value='1' (at pp.c:24658)
        FuncCall:  (at None)
          ID: name='CC2420TransmitP__TXFIFO__write' (at pp.c:24661)
          ExprList:  (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                PtrDecl: quals=[] (at pp.c:24661)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              ID: name='header' (at pp.c:24661)
            BinaryOp: op='-' (at None)
              FuncCall:  (at None)
                ID: name='__nesc_ntoh_leuint8' (at pp.c:24661)
                ExprList:  (at pp.c:24661)
                  StructRef: type='.' (at pp.c:24661)
                    StructRef: type='->' (at pp.c:24661)
                      ID: name='header' (at pp.c:24661)
                      ID: name='length' (at pp.c:24661)
                    ID: name='nxdata' (at pp.c:24661)
              Constant: type='int', value='1' (at pp.c:24661)
  FuncDef:  (at pp.c:24666)
    Decl: name='CC2420SpiP__Reg__write', quals=[], storage=['static'] (at pp.c:24666)
      FuncDecl: quals=None (at pp.c:24666)
        ParamList:  (at pp.c:24666)
          Decl: name='addr', quals=[], storage=[] (at pp.c:24666)
            TypeDecl: declname='addr', quals=[] (at pp.c:24666)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:24666)
            TypeDecl: declname='data', quals=[] (at pp.c:24666)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Reg__write', quals=[] (at pp.c:24666)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:24668)
      Compound:  (at pp.c:24669)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24669)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24669)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24669)
        Compound:  (at pp.c:24671)
          If:  (at pp.c:24672)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__WorkingState__isIdle' (at pp.c:24672)
            Compound:  (at pp.c:24672)
              Compound:  (at pp.c:24673)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:24674)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:24674)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  Constant: type='int', value='0' (at pp.c:24676)
                Compound:  (at pp.c:24678)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:24680)
                    ExprList:  (at pp.c:24680)
                      ID: name='__nesc_atomic' (at pp.c:24680)
                  Return:  (at pp.c:24682)
                    ID: name='__nesc_temp' (at pp.c:24682)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24688)
          ExprList:  (at pp.c:24688)
            ID: name='__nesc_atomic' (at pp.c:24688)
      FuncCall:  (at None)
        ID: name='CC2420SpiP__SpiByte__write' (at pp.c:24690)
        ExprList:  (at pp.c:24690)
          ID: name='addr' (at pp.c:24690)
      FuncCall:  (at None)
        ID: name='CC2420SpiP__SpiByte__write' (at pp.c:24691)
        ExprList:  (at pp.c:24691)
          BinaryOp: op='>>' (at pp.c:24691)
            ID: name='data' (at pp.c:24691)
            Constant: type='int', value='8' (at pp.c:24691)
      Return:  (at pp.c:24692)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__SpiByte__write' (at pp.c:24692)
          ExprList:  (at pp.c:24692)
            BinaryOp: op='&' (at pp.c:24692)
              ID: name='data' (at pp.c:24692)
              Constant: type='int', value='0xff' (at pp.c:24692)
  FuncDef:  (at pp.c:24696)
    Decl: name='Msp430SpiNoDmaP__0__SpiPacket__send', quals=[], storage=['static'] (at pp.c:24696)
      FuncDecl: quals=None (at pp.c:24696)
        ParamList:  (at pp.c:24696)
          Decl: name='id', quals=[], storage=[] (at pp.c:24696)
            TypeDecl: declname='id', quals=[] (at pp.c:24696)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='tx_buf', quals=[], storage=[] (at pp.c:24696)
            PtrDecl: quals=[] (at pp.c:24696)
              TypeDecl: declname='tx_buf', quals=[] (at pp.c:24696)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='rx_buf', quals=[], storage=[] (at pp.c:24697)
            PtrDecl: quals=[] (at pp.c:24697)
              TypeDecl: declname='rx_buf', quals=[] (at pp.c:24697)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:24698)
            TypeDecl: declname='len', quals=[] (at pp.c:24698)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__SpiPacket__send', quals=[] (at pp.c:24696)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:24700)
      Assignment: op='=' (at pp.c:24702)
        ID: name='Msp430SpiNoDmaP__0__m_client' (at pp.c:24702)
        ID: name='id' (at pp.c:24702)
      Assignment: op='=' (at pp.c:24703)
        ID: name='Msp430SpiNoDmaP__0__m_tx_buf' (at pp.c:24703)
        ID: name='tx_buf' (at pp.c:24703)
      Assignment: op='=' (at pp.c:24704)
        ID: name='Msp430SpiNoDmaP__0__m_rx_buf' (at pp.c:24704)
        ID: name='rx_buf' (at pp.c:24704)
      Assignment: op='=' (at pp.c:24705)
        ID: name='Msp430SpiNoDmaP__0__m_len' (at pp.c:24705)
        ID: name='len' (at pp.c:24705)
      Assignment: op='=' (at pp.c:24706)
        ID: name='Msp430SpiNoDmaP__0__m_pos' (at pp.c:24706)
        Constant: type='int', value='0' (at pp.c:24706)
      If:  (at pp.c:24708)
        ID: name='len' (at pp.c:24708)
        Compound:  (at pp.c:24708)
          FuncCall:  (at None)
            ID: name='Msp430SpiNoDmaP__0__Usart__enableRxIntr' (at pp.c:24709)
          FuncCall:  (at None)
            ID: name='Msp430SpiNoDmaP__0__continueOp' (at pp.c:24710)
        Compound:  (at pp.c:24712)
          FuncCall:  (at None)
            ID: name='Msp430SpiNoDmaP__0__signalDone_task__postTask' (at pp.c:24713)
      Return:  (at pp.c:24716)
        ID: name='SUCCESS' (at pp.c:24716)
  FuncDef:  (at pp.c:24720)
    Decl: name='Msp430SpiNoDmaP__0__continueOp', quals=[], storage=['static'] (at pp.c:24720)
      FuncDecl: quals=None (at pp.c:24720)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__continueOp', quals=[] (at pp.c:24720)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24722)
      Decl: name='end', quals=[], storage=[] (at pp.c:24724)
        TypeDecl: declname='end', quals=[] (at pp.c:24724)
          IdentifierType: names=['uint8_t'] (at None)
      Decl: name='tmp', quals=[], storage=[] (at pp.c:24725)
        TypeDecl: declname='tmp', quals=[] (at pp.c:24725)
          IdentifierType: names=['uint8_t'] (at None)
      Compound:  (at pp.c:24727)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24727)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24727)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24727)
        Compound:  (at pp.c:24729)
          FuncCall:  (at None)
            ID: name='Msp430SpiNoDmaP__0__Usart__tx' (at pp.c:24730)
            ExprList:  (at pp.c:24730)
              TernaryOp:  (at pp.c:24730)
                ID: name='Msp430SpiNoDmaP__0__m_tx_buf' (at pp.c:24730)
                ArrayRef:  (at pp.c:24730)
                  ID: name='Msp430SpiNoDmaP__0__m_tx_buf' (at pp.c:24730)
                  ID: name='Msp430SpiNoDmaP__0__m_pos' (at pp.c:24730)
                Constant: type='int', value='0' (at pp.c:24730)
          Assignment: op='=' (at pp.c:24732)
            ID: name='end' (at pp.c:24732)
            BinaryOp: op='+' (at pp.c:24732)
              ID: name='Msp430SpiNoDmaP__0__m_pos' (at pp.c:24732)
              ID: name='Msp430SpiNoDmaP__0__SPI_ATOMIC_SIZE' (at pp.c:24732)
          If:  (at pp.c:24733)
            BinaryOp: op='>' (at pp.c:24733)
              ID: name='end' (at pp.c:24733)
              ID: name='Msp430SpiNoDmaP__0__m_len' (at pp.c:24733)
            Compound:  (at pp.c:24733)
              Assignment: op='=' (at pp.c:24734)
                ID: name='end' (at pp.c:24734)
                ID: name='Msp430SpiNoDmaP__0__m_len' (at pp.c:24734)
          While:  (at pp.c:24736)
            BinaryOp: op='<' (at pp.c:24736)
              UnaryOp: op='++' (at pp.c:24736)
                ID: name='Msp430SpiNoDmaP__0__m_pos' (at pp.c:24736)
              ID: name='end' (at pp.c:24736)
            Compound:  (at pp.c:24736)
              While:  (at pp.c:24737)
                UnaryOp: op='!' (at None)
                  FuncCall:  (at None)
                    ID: name='Msp430SpiNoDmaP__0__Usart__isRxIntrPending' (at pp.c:24737)
              Assignment: op='=' (at pp.c:24738)
                ID: name='tmp' (at pp.c:24738)
                FuncCall:  (at None)
                  ID: name='Msp430SpiNoDmaP__0__Usart__rx' (at pp.c:24738)
              If:  (at pp.c:24739)
                ID: name='Msp430SpiNoDmaP__0__m_rx_buf' (at pp.c:24739)
                Compound:  (at pp.c:24739)
                  Assignment: op='=' (at pp.c:24740)
                    ArrayRef:  (at pp.c:24740)
                      ID: name='Msp430SpiNoDmaP__0__m_rx_buf' (at pp.c:24740)
                      BinaryOp: op='-' (at pp.c:24740)
                        ID: name='Msp430SpiNoDmaP__0__m_pos' (at pp.c:24740)
                        Constant: type='int', value='1' (at pp.c:24740)
                    ID: name='tmp' (at pp.c:24740)
              FuncCall:  (at None)
                ID: name='Msp430SpiNoDmaP__0__Usart__tx' (at pp.c:24743)
                ExprList:  (at pp.c:24743)
                  TernaryOp:  (at pp.c:24743)
                    ID: name='Msp430SpiNoDmaP__0__m_tx_buf' (at pp.c:24743)
                    ArrayRef:  (at pp.c:24743)
                      ID: name='Msp430SpiNoDmaP__0__m_tx_buf' (at pp.c:24743)
                      ID: name='Msp430SpiNoDmaP__0__m_pos' (at pp.c:24743)
                    Constant: type='int', value='0' (at pp.c:24743)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24747)
          ExprList:  (at pp.c:24747)
            ID: name='__nesc_atomic' (at pp.c:24747)
  FuncDef:  (at pp.c:24751)
    Decl: name='UniqueSendP__State__toIdle', quals=[], storage=['static'] (at pp.c:24751)
      FuncDecl: quals=None (at pp.c:24751)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='UniqueSendP__State__toIdle', quals=[] (at pp.c:24751)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24751)
      FuncCall:  (at None)
        ID: name='StateImplP__State__toIdle' (at pp.c:24753)
        ExprList:  (at pp.c:24753)
          Constant: type='int', value='2U' (at pp.c:24753)
  FuncDef:  (at pp.c:24758)
    Decl: name='BaseStationP__RadioSend__sendDone', quals=[], storage=['static'] (at pp.c:24758)
      FuncDecl: quals=None (at pp.c:24758)
        ParamList:  (at pp.c:24758)
          Decl: name='id', quals=[], storage=[] (at pp.c:24758)
            TypeDecl: declname='id', quals=[] (at pp.c:24758)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:24758)
            PtrDecl: quals=[] (at pp.c:24758)
              TypeDecl: declname='msg', quals=[] (at pp.c:24758)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:24758)
            TypeDecl: declname='error', quals=[] (at pp.c:24758)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='BaseStationP__RadioSend__sendDone', quals=[] (at pp.c:24758)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24760)
      If:  (at pp.c:24761)
        BinaryOp: op='!=' (at pp.c:24761)
          ID: name='error' (at pp.c:24761)
          ID: name='SUCCESS' (at pp.c:24761)
        Compound:  (at pp.c:24761)
          FuncCall:  (at None)
            ID: name='BaseStationP__failBlink' (at pp.c:24762)
        Compound:  (at pp.c:24764)
          Compound:  (at pp.c:24766)
            Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24766)
              TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24766)
                IdentifierType: names=['__nesc_atomic_t'] (at None)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_start' (at pp.c:24766)
            If:  (at pp.c:24767)
              BinaryOp: op='==' (at pp.c:24767)
                ID: name='msg' (at pp.c:24767)
                ArrayRef:  (at pp.c:24767)
                  ID: name='BaseStationP__radioQueue' (at pp.c:24767)
                  ID: name='BaseStationP__radioOut' (at pp.c:24767)
              Compound:  (at pp.c:24768)
                If:  (at pp.c:24769)
                  BinaryOp: op='>=' (at pp.c:24769)
                    UnaryOp: op='++' (at pp.c:24769)
                      ID: name='BaseStationP__radioOut' (at pp.c:24769)
                    ID: name='BaseStationP__RADIO_QUEUE_LEN' (at pp.c:24769)
                  Compound:  (at pp.c:24769)
                    Assignment: op='=' (at pp.c:24770)
                      ID: name='BaseStationP__radioOut' (at pp.c:24770)
                      Constant: type='int', value='0' (at pp.c:24770)
                If:  (at pp.c:24773)
                  ID: name='BaseStationP__radioFull' (at pp.c:24773)
                  Compound:  (at pp.c:24773)
                    Assignment: op='=' (at pp.c:24774)
                      ID: name='BaseStationP__radioFull' (at pp.c:24774)
                      ID: name='FALSE' (at pp.c:24774)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:24778)
              ExprList:  (at pp.c:24778)
                ID: name='__nesc_atomic' (at pp.c:24778)
      FuncCall:  (at None)
        ID: name='BaseStationP__radioSendTask__postTask' (at pp.c:24781)
  FuncDef:  (at pp.c:24785)
    Decl: name='VirtualizeTimerC__0__fireTimers', quals=[], storage=['static'] (at pp.c:24785)
      FuncDecl: quals=None (at pp.c:24785)
        ParamList:  (at pp.c:24785)
          Decl: name='now', quals=[], storage=[] (at pp.c:24785)
            TypeDecl: declname='now', quals=[] (at pp.c:24785)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__fireTimers', quals=[] (at pp.c:24785)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24786)
      Decl: name='num', quals=[], storage=[] (at pp.c:24787)
        TypeDecl: declname='num', quals=[] (at pp.c:24787)
          IdentifierType: names=['uint8_t'] (at None)
      For:  (at pp.c:24789)
        Assignment: op='=' (at pp.c:24789)
          ID: name='num' (at pp.c:24789)
          Constant: type='int', value='0' (at pp.c:24789)
        BinaryOp: op='<' (at pp.c:24789)
          ID: name='num' (at pp.c:24789)
          ID: name='VirtualizeTimerC__0__NUM_TIMERS' (at pp.c:24789)
        UnaryOp: op='p++' (at pp.c:24789)
          ID: name='num' (at pp.c:24789)
        Compound:  (at pp.c:24790)
          Decl: name='timer', quals=[], storage=[] (at pp.c:24791)
            PtrDecl: quals=[] (at pp.c:24791)
              TypeDecl: declname='timer', quals=[] (at pp.c:24791)
                IdentifierType: names=['VirtualizeTimerC__0__Timer_t'] (at None)
            UnaryOp: op='&' (at pp.c:24791)
              ArrayRef:  (at pp.c:24791)
                ID: name='VirtualizeTimerC__0__m_timers' (at pp.c:24791)
                ID: name='num' (at pp.c:24791)
          If:  (at pp.c:24793)
            StructRef: type='->' (at pp.c:24793)
              ID: name='timer' (at pp.c:24793)
              ID: name='isrunning' (at pp.c:24793)
            Compound:  (at pp.c:24794)
              Decl: name='elapsed', quals=[], storage=[] (at pp.c:24795)
                TypeDecl: declname='elapsed', quals=[] (at pp.c:24795)
                  IdentifierType: names=['uint32_t'] (at None)
                BinaryOp: op='-' (at pp.c:24795)
                  ID: name='now' (at pp.c:24795)
                  StructRef: type='->' (at pp.c:24795)
                    ID: name='timer' (at pp.c:24795)
                    ID: name='t0' (at pp.c:24795)
              If:  (at pp.c:24797)
                BinaryOp: op='>=' (at pp.c:24797)
                  ID: name='elapsed' (at pp.c:24797)
                  StructRef: type='->' (at pp.c:24797)
                    ID: name='timer' (at pp.c:24797)
                    ID: name='dt' (at pp.c:24797)
                Compound:  (at pp.c:24798)
                  If:  (at pp.c:24799)
                    StructRef: type='->' (at pp.c:24799)
                      ID: name='timer' (at pp.c:24799)
                      ID: name='isoneshot' (at pp.c:24799)
                    Compound:  (at pp.c:24799)
                      Assignment: op='=' (at pp.c:24800)
                        StructRef: type='->' (at pp.c:24800)
                          ID: name='timer' (at pp.c:24800)
                          ID: name='isrunning' (at pp.c:24800)
                        ID: name='FALSE' (at pp.c:24800)
                    Compound:  (at pp.c:24802)
                      Assignment: op='+=' (at pp.c:24804)
                        StructRef: type='->' (at pp.c:24804)
                          ID: name='timer' (at pp.c:24804)
                          ID: name='t0' (at pp.c:24804)
                        StructRef: type='->' (at pp.c:24804)
                          ID: name='timer' (at pp.c:24804)
                          ID: name='dt' (at pp.c:24804)
                  FuncCall:  (at None)
                    ID: name='VirtualizeTimerC__0__Timer__fired' (at pp.c:24806)
                    ExprList:  (at pp.c:24806)
                      ID: name='num' (at pp.c:24806)
                  Break:  (at pp.c:24807)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__updateFromTimer__postTask' (at pp.c:24811)
  FuncDef:  (at pp.c:24815)
    Decl: name='TransformAlarmC__1__Alarm__startAt', quals=[], storage=['static'] (at pp.c:24815)
      FuncDecl: quals=None (at pp.c:24815)
        ParamList:  (at pp.c:24815)
          Decl: name='t0', quals=[], storage=[] (at pp.c:24815)
            TypeDecl: declname='t0', quals=[] (at pp.c:24815)
              IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:24815)
            TypeDecl: declname='dt', quals=[] (at pp.c:24815)
              IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
        TypeDecl: declname='TransformAlarmC__1__Alarm__startAt', quals=[] (at pp.c:24815)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24816)
      Compound:  (at pp.c:24817)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24817)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24817)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24817)
        Compound:  (at pp.c:24818)
          Assignment: op='=' (at pp.c:24819)
            ID: name='TransformAlarmC__1__m_t0' (at pp.c:24819)
            ID: name='t0' (at pp.c:24819)
          Assignment: op='=' (at pp.c:24820)
            ID: name='TransformAlarmC__1__m_dt' (at pp.c:24820)
            ID: name='dt' (at pp.c:24820)
          FuncCall:  (at None)
            ID: name='TransformAlarmC__1__set_alarm' (at pp.c:24821)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24824)
          ExprList:  (at pp.c:24824)
            ID: name='__nesc_atomic' (at pp.c:24824)
  FuncDef:  (at pp.c:24828)
    Decl: name='CC2420ControlP__CC2420Config__getShortAddr', quals=[], storage=['static'] (at pp.c:24828)
      FuncDecl: quals=None (at pp.c:24828)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Config__getShortAddr', quals=[] (at pp.c:24828)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:24830)
      Compound:  (at pp.c:24831)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24831)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24831)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24831)
        Compound:  (at pp.c:24833)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:24834)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:24834)
              IdentifierType: names=['int', 'unsigned'] (at None)
            ID: name='CC2420ControlP__m_short_addr' (at pp.c:24836)
          Compound:  (at pp.c:24838)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:24840)
              ExprList:  (at pp.c:24840)
                ID: name='__nesc_atomic' (at pp.c:24840)
            Return:  (at pp.c:24842)
              ID: name='__nesc_temp' (at pp.c:24842)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24846)
          ExprList:  (at pp.c:24846)
            ID: name='__nesc_atomic' (at pp.c:24846)
  FuncDef:  (at pp.c:24850)
    Decl: name='DallasId48ToIeeeEui64C__LocalIeeeEui64__getId', quals=[], storage=['static'] (at pp.c:24850)
      FuncDecl: quals=None (at pp.c:24850)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='DallasId48ToIeeeEui64C__LocalIeeeEui64__getId', quals=[] (at pp.c:24850)
          IdentifierType: names=['ieee_eui64_t'] (at None)
    Compound:  (at pp.c:24852)
      Decl: name='id', quals=[], storage=[] (at pp.c:24853)
        ArrayDecl:  (at pp.c:24853)
          TypeDecl: declname='id', quals=[] (at pp.c:24853)
            IdentifierType: names=['uint8_t'] (at None)
          Constant: type='int', value='6' (at pp.c:24853)
      Decl: name='eui', quals=[], storage=[] (at pp.c:24854)
        TypeDecl: declname='eui', quals=[] (at pp.c:24854)
          IdentifierType: names=['ieee_eui64_t'] (at None)
      If:  (at pp.c:24857)
        BinaryOp: op='!=' (at None)
          FuncCall:  (at None)
            ID: name='DallasId48ToIeeeEui64C__ReadId48__read' (at pp.c:24857)
            ExprList:  (at pp.c:24857)
              ID: name='id' (at pp.c:24857)
          ID: name='SUCCESS' (at pp.c:24857)
        Compound:  (at pp.c:24857)
          FuncCall:  (at None)
            ID: name='memset' (at pp.c:24858)
            ExprList:  (at pp.c:24858)
              StructRef: type='.' (at pp.c:24858)
                ID: name='eui' (at pp.c:24858)
                ID: name='data' (at pp.c:24858)
              Constant: type='int', value='0' (at pp.c:24858)
              Constant: type='int', value='8' (at pp.c:24858)
          Goto: name='done' (at pp.c:24859)
      Assignment: op='=' (at pp.c:24862)
        ArrayRef:  (at pp.c:24862)
          StructRef: type='.' (at pp.c:24862)
            ID: name='eui' (at pp.c:24862)
            ID: name='data' (at pp.c:24862)
          Constant: type='int', value='0' (at pp.c:24862)
        ID: name='IEEE_EUI64_COMPANY_ID_0' (at pp.c:24862)
      Assignment: op='=' (at pp.c:24863)
        ArrayRef:  (at pp.c:24863)
          StructRef: type='.' (at pp.c:24863)
            ID: name='eui' (at pp.c:24863)
            ID: name='data' (at pp.c:24863)
          Constant: type='int', value='1' (at pp.c:24863)
        ID: name='IEEE_EUI64_COMPANY_ID_1' (at pp.c:24863)
      Assignment: op='=' (at pp.c:24864)
        ArrayRef:  (at pp.c:24864)
          StructRef: type='.' (at pp.c:24864)
            ID: name='eui' (at pp.c:24864)
            ID: name='data' (at pp.c:24864)
          Constant: type='int', value='2' (at pp.c:24864)
        ID: name='IEEE_EUI64_COMPANY_ID_2' (at pp.c:24864)
      Assignment: op='=' (at pp.c:24868)
        ArrayRef:  (at pp.c:24868)
          StructRef: type='.' (at pp.c:24868)
            ID: name='eui' (at pp.c:24868)
            ID: name='data' (at pp.c:24868)
          Constant: type='int', value='3' (at pp.c:24868)
        ID: name='IEEE_EUI64_SERIAL_ID_0' (at pp.c:24868)
      Assignment: op='=' (at pp.c:24869)
        ArrayRef:  (at pp.c:24869)
          StructRef: type='.' (at pp.c:24869)
            ID: name='eui' (at pp.c:24869)
            ID: name='data' (at pp.c:24869)
          Constant: type='int', value='4' (at pp.c:24869)
        ID: name='IEEE_EUI64_SERIAL_ID_1' (at pp.c:24869)
      Assignment: op='=' (at pp.c:24872)
        ArrayRef:  (at pp.c:24872)
          StructRef: type='.' (at pp.c:24872)
            ID: name='eui' (at pp.c:24872)
            ID: name='data' (at pp.c:24872)
          Constant: type='int', value='5' (at pp.c:24872)
        ArrayRef:  (at pp.c:24872)
          ID: name='id' (at pp.c:24872)
          Constant: type='int', value='2' (at pp.c:24872)
      Assignment: op='=' (at pp.c:24873)
        ArrayRef:  (at pp.c:24873)
          StructRef: type='.' (at pp.c:24873)
            ID: name='eui' (at pp.c:24873)
            ID: name='data' (at pp.c:24873)
          Constant: type='int', value='6' (at pp.c:24873)
        ArrayRef:  (at pp.c:24873)
          ID: name='id' (at pp.c:24873)
          Constant: type='int', value='1' (at pp.c:24873)
      Assignment: op='=' (at pp.c:24874)
        ArrayRef:  (at pp.c:24874)
          StructRef: type='.' (at pp.c:24874)
            ID: name='eui' (at pp.c:24874)
            ID: name='data' (at pp.c:24874)
          Constant: type='int', value='7' (at pp.c:24874)
        ArrayRef:  (at pp.c:24874)
          ID: name='id' (at pp.c:24874)
          Constant: type='int', value='0' (at pp.c:24874)
      Label: name='done' (at pp.c:24876)
        Return:  (at pp.c:24877)
          ID: name='eui' (at pp.c:24877)
  FuncDef:  (at pp.c:24881)
    Decl: name='BusyWaitCounterC__0__BusyWait__wait', quals=[], storage=['static'] (at pp.c:24881)
      FuncDecl: quals=None (at pp.c:24881)
        ParamList:  (at pp.c:24881)
          Decl: name='dt', quals=[], storage=[] (at pp.c:24881)
            TypeDecl: declname='dt', quals=[] (at pp.c:24881)
              IdentifierType: names=['BusyWaitCounterC__0__size_type'] (at None)
        TypeDecl: declname='BusyWaitCounterC__0__BusyWait__wait', quals=[] (at pp.c:24881)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24882)
      Compound:  (at pp.c:24884)
        Decl: name='t0', quals=[], storage=[] (at pp.c:24887)
          TypeDecl: declname='t0', quals=[] (at pp.c:24887)
            IdentifierType: names=['BusyWaitCounterC__0__size_type'] (at None)
          FuncCall:  (at None)
            ID: name='BusyWaitCounterC__0__Counter__get' (at pp.c:24887)
        If:  (at pp.c:24889)
          BinaryOp: op='>' (at pp.c:24889)
            ID: name='dt' (at pp.c:24889)
            ID: name='BusyWaitCounterC__0__HALF_MAX_SIZE_TYPE' (at pp.c:24889)
          Compound:  (at pp.c:24890)
            Assignment: op='-=' (at pp.c:24891)
              ID: name='dt' (at pp.c:24891)
              ID: name='BusyWaitCounterC__0__HALF_MAX_SIZE_TYPE' (at pp.c:24891)
            While:  (at pp.c:24892)
              BinaryOp: op='<=' (at None)
                BinaryOp: op='-' (at None)
                  FuncCall:  (at None)
                    ID: name='BusyWaitCounterC__0__Counter__get' (at pp.c:24892)
                  ID: name='t0' (at pp.c:24892)
                ID: name='dt' (at pp.c:24892)
            Assignment: op='+=' (at pp.c:24893)
              ID: name='t0' (at pp.c:24893)
              ID: name='dt' (at pp.c:24893)
            Assignment: op='=' (at pp.c:24894)
              ID: name='dt' (at pp.c:24894)
              ID: name='BusyWaitCounterC__0__HALF_MAX_SIZE_TYPE' (at pp.c:24894)
        While:  (at pp.c:24897)
          BinaryOp: op='<=' (at None)
            BinaryOp: op='-' (at None)
              FuncCall:  (at None)
                ID: name='BusyWaitCounterC__0__Counter__get' (at pp.c:24897)
              ID: name='t0' (at pp.c:24897)
            ID: name='dt' (at pp.c:24897)
  FuncDef:  (at pp.c:24902)
    Decl: name='CC2420ActiveMessageP__AMPacket__destination', quals=[], storage=['static'] (at pp.c:24902)
      FuncDecl: quals=None (at pp.c:24902)
        ParamList:  (at pp.c:24902)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:24902)
            PtrDecl: quals=[] (at pp.c:24902)
              TypeDecl: declname='amsg', quals=[] (at pp.c:24902)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__AMPacket__destination', quals=[] (at pp.c:24902)
          IdentifierType: names=['am_addr_t'] (at None)
    Compound:  (at pp.c:24904)
      Decl: name='header', quals=[], storage=[] (at pp.c:24905)
        PtrDecl: quals=[] (at pp.c:24905)
          TypeDecl: declname='header', quals=[] (at pp.c:24905)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__CC2420PacketBody__getHeader' (at pp.c:24905)
          ExprList:  (at pp.c:24905)
            ID: name='amsg' (at pp.c:24905)
      Return:  (at pp.c:24908)
        FuncCall:  (at None)
          ID: name='__nesc_ntoh_leuint16' (at pp.c:24908)
          ExprList:  (at pp.c:24908)
            StructRef: type='.' (at pp.c:24908)
              StructRef: type='->' (at pp.c:24908)
                ID: name='header' (at pp.c:24908)
                ID: name='dest' (at pp.c:24908)
              ID: name='nxdata' (at pp.c:24908)
  FuncDef:  (at pp.c:24912)
    Decl: name='ActiveMessageAddressC__amAddress', quals=[], storage=['static'] (at pp.c:24912)
      FuncDecl: quals=None (at pp.c:24912)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ActiveMessageAddressC__amAddress', quals=[] (at pp.c:24912)
          IdentifierType: names=['am_addr_t'] (at None)
    Compound:  (at pp.c:24914)
      Decl: name='myAddr', quals=[], storage=[] (at pp.c:24915)
        TypeDecl: declname='myAddr', quals=[] (at pp.c:24915)
          IdentifierType: names=['am_addr_t'] (at None)
      Compound:  (at pp.c:24918)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24918)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24918)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24918)
        Assignment: op='=' (at pp.c:24920)
          ID: name='myAddr' (at pp.c:24920)
          ID: name='ActiveMessageAddressC__addr' (at pp.c:24920)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24922)
          ExprList:  (at pp.c:24922)
            ID: name='__nesc_atomic' (at pp.c:24922)
      Return:  (at pp.c:24923)
        ID: name='myAddr' (at pp.c:24923)
  FuncDef:  (at pp.c:24927)
    Decl: name='BaseStationP__receive', quals=[], storage=['static'] (at pp.c:24927)
      FuncDecl: quals=None (at pp.c:24927)
        ParamList:  (at pp.c:24927)
          Decl: name='msg', quals=[], storage=[] (at pp.c:24927)
            PtrDecl: quals=[] (at pp.c:24927)
              TypeDecl: declname='msg', quals=[] (at pp.c:24927)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:24927)
            PtrDecl: quals=[] (at pp.c:24927)
              TypeDecl: declname='payload', quals=[] (at pp.c:24927)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:24927)
            TypeDecl: declname='len', quals=[] (at pp.c:24927)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:24927)
          TypeDecl: declname='BaseStationP__receive', quals=[] (at pp.c:24927)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:24929)
      Decl: name='ret', quals=[], storage=[] (at pp.c:24930)
        PtrDecl: quals=[] (at pp.c:24930)
          TypeDecl: declname='ret', quals=[] (at pp.c:24930)
            IdentifierType: names=['message_t'] (at None)
        ID: name='msg' (at pp.c:24930)
      Compound:  (at pp.c:24932)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24932)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24932)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24932)
        Compound:  (at pp.c:24934)
          If:  (at pp.c:24935)
            UnaryOp: op='!' (at pp.c:24935)
              ID: name='BaseStationP__uartFull' (at pp.c:24935)
            Compound:  (at pp.c:24936)
              Assignment: op='=' (at pp.c:24937)
                ID: name='ret' (at pp.c:24937)
                ArrayRef:  (at pp.c:24937)
                  ID: name='BaseStationP__uartQueue' (at pp.c:24937)
                  ID: name='BaseStationP__uartIn' (at pp.c:24937)
              Assignment: op='=' (at pp.c:24938)
                ArrayRef:  (at pp.c:24938)
                  ID: name='BaseStationP__uartQueue' (at pp.c:24938)
                  ID: name='BaseStationP__uartIn' (at pp.c:24938)
                ID: name='msg' (at pp.c:24938)
              Assignment: op='=' (at pp.c:24940)
                ID: name='BaseStationP__uartIn' (at pp.c:24940)
                BinaryOp: op='%' (at pp.c:24940)
                  BinaryOp: op='+' (at pp.c:24940)
                    ID: name='BaseStationP__uartIn' (at pp.c:24940)
                    Constant: type='int', value='1' (at pp.c:24940)
                  ID: name='BaseStationP__UART_QUEUE_LEN' (at pp.c:24940)
              If:  (at pp.c:24942)
                BinaryOp: op='==' (at pp.c:24942)
                  ID: name='BaseStationP__uartIn' (at pp.c:24942)
                  ID: name='BaseStationP__uartOut' (at pp.c:24942)
                Compound:  (at pp.c:24942)
                  Assignment: op='=' (at pp.c:24943)
                    ID: name='BaseStationP__uartFull' (at pp.c:24943)
                    ID: name='TRUE' (at pp.c:24943)
              If:  (at pp.c:24945)
                UnaryOp: op='!' (at pp.c:24945)
                  ID: name='BaseStationP__uartBusy' (at pp.c:24945)
                Compound:  (at pp.c:24946)
                  FuncCall:  (at None)
                    ID: name='BaseStationP__uartSendTask__postTask' (at pp.c:24947)
                  Assignment: op='=' (at pp.c:24948)
                    ID: name='BaseStationP__uartBusy' (at pp.c:24948)
                    ID: name='TRUE' (at pp.c:24948)
            Compound:  (at pp.c:24951)
              FuncCall:  (at None)
                ID: name='BaseStationP__dropBlink' (at pp.c:24952)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24956)
          ExprList:  (at pp.c:24956)
            ID: name='__nesc_atomic' (at pp.c:24956)
      Return:  (at pp.c:24957)
        ID: name='ret' (at pp.c:24957)
  FuncDef:  (at pp.c:24961)
    Decl: name='CC2420ActiveMessageP__AMPacket__type', quals=[], storage=['static'] (at pp.c:24961)
      FuncDecl: quals=None (at pp.c:24961)
        ParamList:  (at pp.c:24961)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:24961)
            PtrDecl: quals=[] (at pp.c:24961)
              TypeDecl: declname='amsg', quals=[] (at pp.c:24961)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__AMPacket__type', quals=[] (at pp.c:24961)
          IdentifierType: names=['am_id_t'] (at None)
    Compound:  (at pp.c:24963)
      Decl: name='header', quals=[], storage=[] (at pp.c:24964)
        PtrDecl: quals=[] (at pp.c:24964)
          TypeDecl: declname='header', quals=[] (at pp.c:24964)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__CC2420PacketBody__getHeader' (at pp.c:24964)
          ExprList:  (at pp.c:24964)
            ID: name='amsg' (at pp.c:24964)
      Return:  (at pp.c:24967)
        FuncCall:  (at None)
          ID: name='__nesc_ntoh_leuint8' (at pp.c:24967)
          ExprList:  (at pp.c:24967)
            StructRef: type='.' (at pp.c:24967)
              StructRef: type='->' (at pp.c:24967)
                ID: name='header' (at pp.c:24967)
                ID: name='type' (at pp.c:24967)
              ID: name='nxdata' (at pp.c:24967)
  FuncDef:  (at pp.c:24971)
    Decl: name='CC2420ReceiveP__waitForNextPacket', quals=[], storage=['static'] (at pp.c:24971)
      FuncDecl: quals=None (at pp.c:24971)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__waitForNextPacket', quals=[] (at pp.c:24971)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24973)
      Compound:  (at pp.c:24974)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24974)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24974)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24974)
        Compound:  (at pp.c:24976)
          If:  (at pp.c:24977)
            BinaryOp: op='==' (at pp.c:24977)
              ID: name='CC2420ReceiveP__m_state' (at pp.c:24977)
              ID: name='CC2420ReceiveP__S_STOPPED' (at pp.c:24977)
            Compound:  (at pp.c:24977)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__SpiResource__release' (at pp.c:24978)
              Compound:  (at pp.c:24979)
                FuncCall:  (at None)
                  ID: name='__nesc_atomic_end' (at pp.c:24981)
                  ExprList:  (at pp.c:24981)
                    ID: name='__nesc_atomic' (at pp.c:24981)
                Return:  (at pp.c:24983)
          Assignment: op='=' (at pp.c:24986)
            ID: name='CC2420ReceiveP__receivingPacket' (at pp.c:24986)
            ID: name='FALSE' (at pp.c:24986)
          If:  (at pp.c:24988)
            BinaryOp: op='||' (at pp.c:24988)
              BinaryOp: op='&&' (at pp.c:24988)
                ID: name='CC2420ReceiveP__m_missed_packets' (at pp.c:24988)
                FuncCall:  (at None)
                  ID: name='CC2420ReceiveP__FIFO__get' (at pp.c:24988)
              UnaryOp: op='!' (at None)
                FuncCall:  (at None)
                  ID: name='CC2420ReceiveP__FIFOP__get' (at pp.c:24988)
            Compound:  (at pp.c:24988)
              If:  (at pp.c:24990)
                ID: name='CC2420ReceiveP__m_missed_packets' (at pp.c:24990)
                Compound:  (at pp.c:24990)
                  UnaryOp: op='p--' (at pp.c:24991)
                    ID: name='CC2420ReceiveP__m_missed_packets' (at pp.c:24991)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__beginReceive' (at pp.c:24998)
            Compound:  (at pp.c:25001)
              Assignment: op='=' (at pp.c:25003)
                ID: name='CC2420ReceiveP__m_state' (at pp.c:25003)
                ID: name='CC2420ReceiveP__S_STARTED' (at pp.c:25003)
              Assignment: op='=' (at pp.c:25004)
                ID: name='CC2420ReceiveP__m_missed_packets' (at pp.c:25004)
                Constant: type='int', value='0' (at pp.c:25004)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__SpiResource__release' (at pp.c:25005)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:25009)
          ExprList:  (at pp.c:25009)
            ID: name='__nesc_atomic' (at pp.c:25009)
  FuncDef:  (at pp.c:25013)
    Decl: name='CC2420ReceiveP__beginReceive', quals=[], storage=['static'] (at pp.c:25013)
      FuncDecl: quals=None (at pp.c:25013)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__beginReceive', quals=[] (at pp.c:25013)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25015)
      Assignment: op='=' (at pp.c:25016)
        ID: name='CC2420ReceiveP__m_state' (at pp.c:25016)
        ID: name='CC2420ReceiveP__S_RX_LENGTH' (at pp.c:25016)
      Assignment: op='=' (at pp.c:25019)
        ID: name='CC2420ReceiveP__receivingPacket' (at pp.c:25019)
        ID: name='TRUE' (at pp.c:25019)
      If:  (at pp.c:25020)
        FuncCall:  (at None)
          ID: name='CC2420ReceiveP__SpiResource__isOwner' (at pp.c:25020)
        Compound:  (at pp.c:25020)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__receive' (at pp.c:25021)
        Compound:  (at pp.c:25023)
          If:  (at pp.c:25025)
            BinaryOp: op='==' (at None)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__SpiResource__immediateRequest' (at pp.c:25025)
              ID: name='SUCCESS' (at pp.c:25025)
            Compound:  (at pp.c:25025)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__receive' (at pp.c:25026)
            Compound:  (at pp.c:25028)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__SpiResource__request' (at pp.c:25029)
  FuncDef:  (at pp.c:25035)
    Decl: name='CC2420ReceiveP__receive', quals=[], storage=['static'] (at pp.c:25035)
      FuncDecl: quals=None (at pp.c:25035)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__receive', quals=[] (at pp.c:25035)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25037)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__CSN__clr' (at pp.c:25038)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__RXFIFO__beginRead' (at pp.c:25039)
        ExprList:  (at None)
          Cast:  (at None)
            Typename: quals=[] (at None)
              PtrDecl: quals=[] (at pp.c:25039)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            FuncCall:  (at None)
              ID: name='CC2420ReceiveP__CC2420PacketBody__getHeader' (at pp.c:25039)
              ExprList:  (at pp.c:25039)
                ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:25039)
          Constant: type='int', value='1' (at pp.c:25039)
  FuncDef:  (at pp.c:25043)
    Decl: name='CC2420SpiP__Fifo__beginRead', quals=[], storage=['static'] (at pp.c:25043)
      FuncDecl: quals=None (at pp.c:25043)
        ParamList:  (at pp.c:25043)
          Decl: name='addr', quals=[], storage=[] (at pp.c:25043)
            TypeDecl: declname='addr', quals=[] (at pp.c:25043)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:25043)
            PtrDecl: quals=[] (at pp.c:25043)
              TypeDecl: declname='data', quals=[] (at pp.c:25043)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:25044)
            TypeDecl: declname='len', quals=[] (at pp.c:25044)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Fifo__beginRead', quals=[] (at pp.c:25043)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:25046)
      Decl: name='status', quals=[], storage=[] (at pp.c:25048)
        TypeDecl: declname='status', quals=[] (at pp.c:25048)
          IdentifierType: names=['cc2420_status_t'] (at None)
        Constant: type='int', value='0' (at pp.c:25048)
      Compound:  (at pp.c:25050)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:25050)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:25050)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:25050)
        Compound:  (at pp.c:25052)
          If:  (at pp.c:25053)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__WorkingState__isIdle' (at pp.c:25053)
            Compound:  (at pp.c:25053)
              Compound:  (at pp.c:25054)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:25055)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:25055)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='status' (at pp.c:25057)
                Compound:  (at pp.c:25059)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:25061)
                    ExprList:  (at pp.c:25061)
                      ID: name='__nesc_atomic' (at pp.c:25061)
                  Return:  (at pp.c:25063)
                    ID: name='__nesc_temp' (at pp.c:25063)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:25069)
          ExprList:  (at pp.c:25069)
            ID: name='__nesc_atomic' (at pp.c:25069)
      Assignment: op='=' (at pp.c:25071)
        ID: name='CC2420SpiP__m_addr' (at pp.c:25071)
        BinaryOp: op='|' (at pp.c:25071)
          ID: name='addr' (at pp.c:25071)
          Constant: type='int', value='0x40' (at pp.c:25071)
      Assignment: op='=' (at pp.c:25073)
        ID: name='status' (at pp.c:25073)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__SpiByte__write' (at pp.c:25073)
          ExprList:  (at pp.c:25073)
            ID: name='CC2420SpiP__m_addr' (at pp.c:25073)
      FuncCall:  (at None)
        ID: name='CC2420SpiP__Fifo__continueRead' (at pp.c:25074)
        ExprList:  (at pp.c:25074)
          ID: name='addr' (at pp.c:25074)
          ID: name='data' (at pp.c:25074)
          ID: name='len' (at pp.c:25074)
      Return:  (at pp.c:25076)
        ID: name='status' (at pp.c:25076)
  FuncDef:  (at pp.c:25080)
    Decl: name='CC2420SpiP__SpiPacket__sendDone', quals=[], storage=['static'] (at pp.c:25080)
      FuncDecl: quals=None (at pp.c:25080)
        ParamList:  (at pp.c:25080)
          Decl: name='tx_buf', quals=[], storage=[] (at pp.c:25080)
            PtrDecl: quals=[] (at pp.c:25080)
              TypeDecl: declname='tx_buf', quals=[] (at pp.c:25080)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='rx_buf', quals=[], storage=[] (at pp.c:25080)
            PtrDecl: quals=[] (at pp.c:25080)
              TypeDecl: declname='rx_buf', quals=[] (at pp.c:25080)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:25081)
            TypeDecl: declname='len', quals=[] (at pp.c:25081)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:25081)
            TypeDecl: declname='error', quals=[] (at pp.c:25081)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420SpiP__SpiPacket__sendDone', quals=[] (at pp.c:25080)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25083)
      If:  (at pp.c:25084)
        BinaryOp: op='&' (at pp.c:25084)
          ID: name='CC2420SpiP__m_addr' (at pp.c:25084)
          Constant: type='int', value='0x40' (at pp.c:25084)
        Compound:  (at pp.c:25084)
          FuncCall:  (at None)
            ID: name='CC2420SpiP__Fifo__readDone' (at pp.c:25085)
            ExprList:  (at pp.c:25085)
              BinaryOp: op='&' (at pp.c:25085)
                ID: name='CC2420SpiP__m_addr' (at pp.c:25085)
                UnaryOp: op='~' (at pp.c:25085)
                  Constant: type='int', value='0x40' (at pp.c:25085)
              ID: name='rx_buf' (at pp.c:25085)
              ID: name='len' (at pp.c:25085)
              ID: name='error' (at pp.c:25085)
        Compound:  (at pp.c:25089)
          FuncCall:  (at None)
            ID: name='CC2420SpiP__Fifo__writeDone' (at pp.c:25090)
            ExprList:  (at pp.c:25090)
              ID: name='CC2420SpiP__m_addr' (at pp.c:25090)
              ID: name='tx_buf' (at pp.c:25090)
              ID: name='len' (at pp.c:25090)
              ID: name='error' (at pp.c:25090)
  FuncDef:  (at pp.c:25095)
    Decl: name='CC2420ReceiveP__flush', quals=[], storage=['static'] (at pp.c:25095)
      FuncDecl: quals=None (at pp.c:25095)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__flush', quals=[] (at pp.c:25095)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25097)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__reset_state' (at pp.c:25106)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__CSN__set' (at pp.c:25108)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__CSN__clr' (at pp.c:25109)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__SFLUSHRX__strobe' (at pp.c:25110)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__SFLUSHRX__strobe' (at pp.c:25111)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__CSN__set' (at pp.c:25112)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__SpiResource__release' (at pp.c:25113)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__waitForNextPacket' (at pp.c:25114)
  FuncDef:  (at pp.c:25118)
    Decl: name='CC2420ReceiveP__reset_state', quals=[], storage=['static'] (at pp.c:25118)
      FuncDecl: quals=None (at pp.c:25118)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__reset_state', quals=[] (at pp.c:25118)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25120)
      Assignment: op='=' (at pp.c:25121)
        ID: name='CC2420ReceiveP__m_bytes_left' (at pp.c:25121)
        ID: name='CC2420ReceiveP__RXFIFO_SIZE' (at pp.c:25121)
      Assignment: op='=' (at pp.c:25124)
        ID: name='CC2420ReceiveP__receivingPacket' (at pp.c:25124)
        ID: name='FALSE' (at pp.c:25124)
      Assignment: op='=' (at pp.c:25125)
        ID: name='CC2420ReceiveP__m_timestamp_head' (at pp.c:25125)
        Constant: type='int', value='0' (at pp.c:25125)
      Assignment: op='=' (at pp.c:25126)
        ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:25126)
        Constant: type='int', value='0' (at pp.c:25126)
      Assignment: op='=' (at pp.c:25127)
        ID: name='CC2420ReceiveP__m_missed_packets' (at pp.c:25127)
        Constant: type='int', value='0' (at pp.c:25127)
  FuncDef:  (at pp.c:25131)
    Decl: name='CC2420ControlP__writeFsctrl', quals=[], storage=['static'] (at pp.c:25131)
      FuncDecl: quals=None (at pp.c:25131)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__writeFsctrl', quals=[] (at pp.c:25131)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25133)
      Decl: name='channel', quals=[], storage=[] (at pp.c:25134)
        TypeDecl: declname='channel', quals=[] (at pp.c:25134)
          IdentifierType: names=['uint8_t'] (at None)
      Compound:  (at pp.c:25136)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:25136)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:25136)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:25136)
        Compound:  (at pp.c:25138)
          Assignment: op='=' (at pp.c:25139)
            ID: name='channel' (at pp.c:25139)
            ID: name='CC2420ControlP__m_channel' (at pp.c:25139)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:25142)
          ExprList:  (at pp.c:25142)
            ID: name='__nesc_atomic' (at pp.c:25142)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__FSCTRL__write' (at pp.c:25144)
        ExprList:  (at pp.c:25144)
          BinaryOp: op='|' (at pp.c:25144)
            BinaryOp: op='<<' (at pp.c:25144)
              Constant: type='int', value='1' (at pp.c:25144)
              ID: name='CC2420_FSCTRL_LOCK_THR' (at pp.c:25144)
            BinaryOp: op='<<' (at pp.c:25145)
              BinaryOp: op='+' (at pp.c:25145)
                BinaryOp: op='*' (at pp.c:25145)
                  BinaryOp: op='-' (at pp.c:25145)
                    ID: name='channel' (at pp.c:25145)
                    Constant: type='int', value='11' (at pp.c:25145)
                  Constant: type='int', value='5' (at pp.c:25145)
                Constant: type='int', value='357' (at pp.c:25145)
              ID: name='CC2420_FSCTRL_FREQ' (at pp.c:25145)
  FuncDef:  (at pp.c:25154)
    Decl: name='CC2420ControlP__writeMdmctrl0', quals=[], storage=['static'] (at pp.c:25154)
      FuncDecl: quals=None (at pp.c:25154)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__writeMdmctrl0', quals=[] (at pp.c:25154)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25156)
      Compound:  (at pp.c:25157)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:25157)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:25157)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:25157)
        Compound:  (at pp.c:25159)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__MDMCTRL0__write' (at pp.c:25160)
            ExprList:  (at pp.c:25160)
              BinaryOp: op='|' (at pp.c:25160)
                BinaryOp: op='|' (at pp.c:25160)
                  BinaryOp: op='|' (at pp.c:25160)
                    BinaryOp: op='|' (at pp.c:25160)
                      BinaryOp: op='|' (at pp.c:25160)
                        BinaryOp: op='|' (at pp.c:25160)
                          BinaryOp: op='|' (at pp.c:25160)
                            BinaryOp: op='<<' (at pp.c:25160)
                              Constant: type='int', value='1' (at pp.c:25160)
                              ID: name='CC2420_MDMCTRL0_RESERVED_FRAME_MODE' (at pp.c:25160)
                            BinaryOp: op='<<' (at pp.c:25161)
                              TernaryOp:  (at pp.c:25161)
                                BinaryOp: op='&&' (at pp.c:25161)
                                  ID: name='CC2420ControlP__addressRecognition' (at pp.c:25161)
                                  ID: name='CC2420ControlP__hwAddressRecognition' (at pp.c:25161)
                                Constant: type='int', value='1' (at pp.c:25161)
                                Constant: type='int', value='0' (at pp.c:25161)
                              ID: name='CC2420_MDMCTRL0_ADR_DECODE' (at pp.c:25161)
                          BinaryOp: op='<<' (at pp.c:25162)
                            Constant: type='int', value='2' (at pp.c:25162)
                            ID: name='CC2420_MDMCTRL0_CCA_HYST' (at pp.c:25162)
                        BinaryOp: op='<<' (at pp.c:25163)
                          Constant: type='int', value='3' (at pp.c:25163)
                          ID: name='CC2420_MDMCTRL0_CCA_MOD' (at pp.c:25163)
                      BinaryOp: op='<<' (at pp.c:25164)
                        Constant: type='int', value='1' (at pp.c:25164)
                        ID: name='CC2420_MDMCTRL0_AUTOCRC' (at pp.c:25164)
                    BinaryOp: op='<<' (at pp.c:25165)
                      BinaryOp: op='&&' (at pp.c:25165)
                        ID: name='CC2420ControlP__autoAckEnabled' (at pp.c:25165)
                        ID: name='CC2420ControlP__hwAutoAckDefault' (at pp.c:25165)
                      ID: name='CC2420_MDMCTRL0_AUTOACK' (at pp.c:25165)
                  BinaryOp: op='<<' (at pp.c:25166)
                    Constant: type='int', value='0' (at pp.c:25166)
                    ID: name='CC2420_MDMCTRL0_AUTOACK' (at pp.c:25166)
                BinaryOp: op='<<' (at pp.c:25167)
                  Constant: type='int', value='2' (at pp.c:25167)
                  ID: name='CC2420_MDMCTRL0_PREAMBLE_LENGTH' (at pp.c:25167)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:25170)
          ExprList:  (at pp.c:25170)
            ID: name='__nesc_atomic' (at pp.c:25170)
  FuncDef:  (at pp.c:25179)
    Decl: name='CC2420ControlP__writeId', quals=[], storage=['static'] (at pp.c:25179)
      FuncDecl: quals=None (at pp.c:25179)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__writeId', quals=[] (at pp.c:25179)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25181)
      Decl: name='id', quals=[], storage=[] (at pp.c:25182)
        ArrayDecl:  (at pp.c:25182)
          TypeDecl: declname='id', quals=[] (at pp.c:25182)
            IdentifierType: names=['nxle_uint16_t'] (at None)
          Constant: type='int', value='6' (at pp.c:25182)
      Compound:  (at pp.c:25184)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:25184)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:25184)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:25184)
        Compound:  (at pp.c:25186)
          Assignment: op='=' (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=[] (at None)
                  PtrDecl: quals=[] (at pp.c:25187)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['ieee_eui64_t'] (at None)
                UnaryOp: op='&' (at pp.c:25187)
                  ArrayRef:  (at pp.c:25187)
                    ID: name='id' (at pp.c:25187)
                    Constant: type='int', value='0' (at pp.c:25187)
            ID: name='CC2420ControlP__m_ext_addr' (at pp.c:25187)
          FuncCall:  (at None)
            ID: name='__nesc_hton_leuint16' (at pp.c:25188)
            ExprList:  (at pp.c:25188)
              StructRef: type='.' (at pp.c:25188)
                ArrayRef:  (at pp.c:25188)
                  ID: name='id' (at pp.c:25188)
                  Constant: type='int', value='4' (at pp.c:25188)
                ID: name='nxdata' (at pp.c:25188)
              ID: name='CC2420ControlP__m_pan' (at pp.c:25188)
          FuncCall:  (at None)
            ID: name='__nesc_hton_leuint16' (at pp.c:25189)
            ExprList:  (at pp.c:25189)
              StructRef: type='.' (at pp.c:25189)
                ArrayRef:  (at pp.c:25189)
                  ID: name='id' (at pp.c:25189)
                  Constant: type='int', value='5' (at pp.c:25189)
                ID: name='nxdata' (at pp.c:25189)
              ID: name='CC2420ControlP__m_short_addr' (at pp.c:25189)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:25192)
          ExprList:  (at pp.c:25192)
            ID: name='__nesc_atomic' (at pp.c:25192)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__IEEEADR__write' (at pp.c:25194)
        ExprList:  (at pp.c:25194)
          Constant: type='int', value='0' (at pp.c:25194)
          Cast:  (at None)
            Typename: quals=[] (at None)
              PtrDecl: quals=[] (at pp.c:25194)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            UnaryOp: op='&' (at pp.c:25194)
              ID: name='id' (at pp.c:25194)
          Constant: type='int', value='12' (at pp.c:25194)
  FuncDef:  (at pp.c:25198)
    Decl: name='sig_PORT1_VECTOR', quals=[], storage=[] (at pp.c:25198)
      FuncDecl: quals=None (at pp.c:25198)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_PORT1_VECTOR', quals=[] (at pp.c:25198)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25199)
      Decl: name='n', quals=['volatile'], storage=[] (at pp.c:25200)
        TypeDecl: declname='n', quals=['volatile'] (at pp.c:25200)
          IdentifierType: names=['int'] (at None)
        BinaryOp: op='&' (at pp.c:25200)
          ID: name='P1IFG' (at pp.c:25200)
          ID: name='P1IE' (at pp.c:25200)
      If:  (at pp.c:25202)
        BinaryOp: op='&' (at pp.c:25202)
          ID: name='n' (at pp.c:25202)
          BinaryOp: op='<<' (at pp.c:25202)
            Constant: type='int', value='1' (at pp.c:25202)
            Constant: type='int', value='0' (at pp.c:25202)
        Compound:  (at pp.c:25202)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port10__fired' (at pp.c:25204)
          Return:  (at pp.c:25206)
      If:  (at pp.c:25209)
        BinaryOp: op='&' (at pp.c:25209)
          ID: name='n' (at pp.c:25209)
          BinaryOp: op='<<' (at pp.c:25209)
            Constant: type='int', value='1' (at pp.c:25209)
            Constant: type='int', value='1' (at pp.c:25209)
        Compound:  (at pp.c:25209)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port11__fired' (at pp.c:25211)
          Return:  (at pp.c:25213)
      If:  (at pp.c:25216)
        BinaryOp: op='&' (at pp.c:25216)
          ID: name='n' (at pp.c:25216)
          BinaryOp: op='<<' (at pp.c:25216)
            Constant: type='int', value='1' (at pp.c:25216)
            Constant: type='int', value='2' (at pp.c:25216)
        Compound:  (at pp.c:25216)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port12__fired' (at pp.c:25218)
          Return:  (at pp.c:25220)
      If:  (at pp.c:25223)
        BinaryOp: op='&' (at pp.c:25223)
          ID: name='n' (at pp.c:25223)
          BinaryOp: op='<<' (at pp.c:25223)
            Constant: type='int', value='1' (at pp.c:25223)
            Constant: type='int', value='3' (at pp.c:25223)
        Compound:  (at pp.c:25223)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port13__fired' (at pp.c:25225)
          Return:  (at pp.c:25227)
      If:  (at pp.c:25230)
        BinaryOp: op='&' (at pp.c:25230)
          ID: name='n' (at pp.c:25230)
          BinaryOp: op='<<' (at pp.c:25230)
            Constant: type='int', value='1' (at pp.c:25230)
            Constant: type='int', value='4' (at pp.c:25230)
        Compound:  (at pp.c:25230)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port14__fired' (at pp.c:25232)
          Return:  (at pp.c:25234)
      If:  (at pp.c:25237)
        BinaryOp: op='&' (at pp.c:25237)
          ID: name='n' (at pp.c:25237)
          BinaryOp: op='<<' (at pp.c:25237)
            Constant: type='int', value='1' (at pp.c:25237)
            Constant: type='int', value='5' (at pp.c:25237)
        Compound:  (at pp.c:25237)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port15__fired' (at pp.c:25239)
          Return:  (at pp.c:25241)
      If:  (at pp.c:25244)
        BinaryOp: op='&' (at pp.c:25244)
          ID: name='n' (at pp.c:25244)
          BinaryOp: op='<<' (at pp.c:25244)
            Constant: type='int', value='1' (at pp.c:25244)
            Constant: type='int', value='6' (at pp.c:25244)
        Compound:  (at pp.c:25244)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port16__fired' (at pp.c:25246)
          Return:  (at pp.c:25248)
      If:  (at pp.c:25251)
        BinaryOp: op='&' (at pp.c:25251)
          ID: name='n' (at pp.c:25251)
          BinaryOp: op='<<' (at pp.c:25251)
            Constant: type='int', value='1' (at pp.c:25251)
            Constant: type='int', value='7' (at pp.c:25251)
        Compound:  (at pp.c:25251)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port17__fired' (at pp.c:25253)
          Return:  (at pp.c:25255)
  FuncDef:  (at pp.c:25260)
    Decl: name='sig_PORT2_VECTOR', quals=[], storage=[] (at pp.c:25260)
      FuncDecl: quals=None (at pp.c:25260)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_PORT2_VECTOR', quals=[] (at pp.c:25260)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25261)
      Decl: name='n', quals=['volatile'], storage=[] (at pp.c:25262)
        TypeDecl: declname='n', quals=['volatile'] (at pp.c:25262)
          IdentifierType: names=['int'] (at None)
        BinaryOp: op='&' (at pp.c:25262)
          ID: name='P2IFG' (at pp.c:25262)
          ID: name='P2IE' (at pp.c:25262)
      If:  (at pp.c:25264)
        BinaryOp: op='&' (at pp.c:25264)
          ID: name='n' (at pp.c:25264)
          BinaryOp: op='<<' (at pp.c:25264)
            Constant: type='int', value='1' (at pp.c:25264)
            Constant: type='int', value='0' (at pp.c:25264)
        Compound:  (at pp.c:25264)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port20__fired' (at pp.c:25266)
          Return:  (at pp.c:25268)
      If:  (at pp.c:25271)
        BinaryOp: op='&' (at pp.c:25271)
          ID: name='n' (at pp.c:25271)
          BinaryOp: op='<<' (at pp.c:25271)
            Constant: type='int', value='1' (at pp.c:25271)
            Constant: type='int', value='1' (at pp.c:25271)
        Compound:  (at pp.c:25271)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port21__fired' (at pp.c:25273)
          Return:  (at pp.c:25275)
      If:  (at pp.c:25278)
        BinaryOp: op='&' (at pp.c:25278)
          ID: name='n' (at pp.c:25278)
          BinaryOp: op='<<' (at pp.c:25278)
            Constant: type='int', value='1' (at pp.c:25278)
            Constant: type='int', value='2' (at pp.c:25278)
        Compound:  (at pp.c:25278)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port22__fired' (at pp.c:25280)
          Return:  (at pp.c:25282)
      If:  (at pp.c:25285)
        BinaryOp: op='&' (at pp.c:25285)
          ID: name='n' (at pp.c:25285)
          BinaryOp: op='<<' (at pp.c:25285)
            Constant: type='int', value='1' (at pp.c:25285)
            Constant: type='int', value='3' (at pp.c:25285)
        Compound:  (at pp.c:25285)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port23__fired' (at pp.c:25287)
          Return:  (at pp.c:25289)
      If:  (at pp.c:25292)
        BinaryOp: op='&' (at pp.c:25292)
          ID: name='n' (at pp.c:25292)
          BinaryOp: op='<<' (at pp.c:25292)
            Constant: type='int', value='1' (at pp.c:25292)
            Constant: type='int', value='4' (at pp.c:25292)
        Compound:  (at pp.c:25292)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port24__fired' (at pp.c:25294)
          Return:  (at pp.c:25296)
      If:  (at pp.c:25299)
        BinaryOp: op='&' (at pp.c:25299)
          ID: name='n' (at pp.c:25299)
          BinaryOp: op='<<' (at pp.c:25299)
            Constant: type='int', value='1' (at pp.c:25299)
            Constant: type='int', value='5' (at pp.c:25299)
        Compound:  (at pp.c:25299)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port25__fired' (at pp.c:25301)
          Return:  (at pp.c:25303)
      If:  (at pp.c:25306)
        BinaryOp: op='&' (at pp.c:25306)
          ID: name='n' (at pp.c:25306)
          BinaryOp: op='<<' (at pp.c:25306)
            Constant: type='int', value='1' (at pp.c:25306)
            Constant: type='int', value='6' (at pp.c:25306)
        Compound:  (at pp.c:25306)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port26__fired' (at pp.c:25308)
          Return:  (at pp.c:25310)
      If:  (at pp.c:25313)
        BinaryOp: op='&' (at pp.c:25313)
          ID: name='n' (at pp.c:25313)
          BinaryOp: op='<<' (at pp.c:25313)
            Constant: type='int', value='1' (at pp.c:25313)
            Constant: type='int', value='7' (at pp.c:25313)
        Compound:  (at pp.c:25313)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port27__fired' (at pp.c:25315)
          Return:  (at pp.c:25317)
  FuncDef:  (at pp.c:25322)
    Decl: name='sig_UART0RX_VECTOR', quals=[], storage=[] (at pp.c:25322)
      FuncDecl: quals=None (at pp.c:25322)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_UART0RX_VECTOR', quals=[] (at pp.c:25322)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25324)
      Decl: name='temp', quals=[], storage=[] (at pp.c:25325)
        TypeDecl: declname='temp', quals=[] (at pp.c:25325)
          IdentifierType: names=['uint8_t'] (at None)
        ID: name='U0RXBUF' (at pp.c:25325)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Interrupts__rxDone' (at pp.c:25328)
        ExprList:  (at pp.c:25328)
          ID: name='temp' (at pp.c:25328)
  FuncDef:  (at pp.c:25332)
    Decl: name='ArbiterP__0__ArbiterInfo__inUse', quals=[], storage=['static'] (at pp.c:25332)
      FuncDecl: quals=None (at pp.c:25332)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__ArbiterInfo__inUse', quals=[] (at pp.c:25332)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:25334)
      Compound:  (at pp.c:25337)
        If:  (at pp.c:25338)
          BinaryOp: op='==' (at pp.c:25338)
            ID: name='ArbiterP__0__state' (at pp.c:25338)
            ID: name='ArbiterP__0__RES_CONTROLLED' (at pp.c:25338)
          Compound:  (at pp.c:25339)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:25340)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:25340)
                IdentifierType: names=['char', 'unsigned'] (at None)
              ID: name='FALSE' (at pp.c:25342)
            Return:  (at pp.c:25345)
              ID: name='__nesc_temp' (at pp.c:25345)
      Return:  (at pp.c:25349)
        ID: name='TRUE' (at pp.c:25349)
  FuncDef:  (at pp.c:25357)
    Decl: name='ArbiterP__0__ArbiterInfo__userId', quals=[], storage=['static'] (at pp.c:25357)
      FuncDecl: quals=None (at pp.c:25357)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__ArbiterInfo__userId', quals=[] (at pp.c:25357)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:25359)
      Compound:  (at pp.c:25362)
        If:  (at pp.c:25363)
          BinaryOp: op='!=' (at pp.c:25363)
            ID: name='ArbiterP__0__state' (at pp.c:25363)
            ID: name='ArbiterP__0__RES_BUSY' (at pp.c:25363)
          Compound:  (at pp.c:25364)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:25365)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:25365)
                IdentifierType: names=['char', 'unsigned'] (at None)
              ID: name='ArbiterP__0__NO_RES' (at pp.c:25367)
            Return:  (at pp.c:25370)
              ID: name='__nesc_temp' (at pp.c:25370)
        Compound:  (at pp.c:25373)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:25374)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:25374)
              IdentifierType: names=['char', 'unsigned'] (at None)
            ID: name='ArbiterP__0__resId' (at pp.c:25376)
          Return:  (at pp.c:25379)
            ID: name='__nesc_temp' (at pp.c:25379)
  FuncDef:  (at pp.c:25385)
    Decl: name='sig_UART0TX_VECTOR', quals=[], storage=[] (at pp.c:25385)
      FuncDecl: quals=None (at pp.c:25385)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_UART0TX_VECTOR', quals=[] (at pp.c:25385)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25387)
      If:  (at pp.c:25388)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__HplI2C__isI2C' (at pp.c:25388)
        Compound:  (at pp.c:25388)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart0P__I2CInterrupts__fired' (at pp.c:25389)
        Compound:  (at pp.c:25391)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart0P__Interrupts__txDone' (at pp.c:25393)
  FuncDef:  (at pp.c:25398)
    Decl: name='sig_UART1RX_VECTOR', quals=[], storage=[] (at pp.c:25398)
      FuncDecl: quals=None (at pp.c:25398)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_UART1RX_VECTOR', quals=[] (at pp.c:25398)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25400)
      Decl: name='temp', quals=[], storage=[] (at pp.c:25401)
        TypeDecl: declname='temp', quals=[] (at pp.c:25401)
          IdentifierType: names=['uint8_t'] (at None)
        ID: name='U1RXBUF' (at pp.c:25401)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart1P__Interrupts__rxDone' (at pp.c:25404)
        ExprList:  (at pp.c:25404)
          ID: name='temp' (at pp.c:25404)
  FuncDef:  (at pp.c:25408)
    Decl: name='ArbiterP__1__ArbiterInfo__inUse', quals=[], storage=['static'] (at pp.c:25408)
      FuncDecl: quals=None (at pp.c:25408)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__1__ArbiterInfo__inUse', quals=[] (at pp.c:25408)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:25410)
      Compound:  (at pp.c:25413)
        If:  (at pp.c:25414)
          BinaryOp: op='==' (at pp.c:25414)
            ID: name='ArbiterP__1__state' (at pp.c:25414)
            ID: name='ArbiterP__1__RES_CONTROLLED' (at pp.c:25414)
          Compound:  (at pp.c:25415)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:25416)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:25416)
                IdentifierType: names=['char', 'unsigned'] (at None)
              ID: name='FALSE' (at pp.c:25418)
            Return:  (at pp.c:25421)
              ID: name='__nesc_temp' (at pp.c:25421)
      Return:  (at pp.c:25425)
        ID: name='TRUE' (at pp.c:25425)
  FuncDef:  (at pp.c:25429)
    Decl: name='SerialP__rx_state_machine', quals=[], storage=['static'] (at pp.c:25429)
      FuncDecl: quals=None (at pp.c:25429)
        ParamList:  (at pp.c:25429)
          Decl: name='isDelimeter', quals=[], storage=[] (at pp.c:25429)
            TypeDecl: declname='isDelimeter', quals=[] (at pp.c:25429)
              IdentifierType: names=['bool'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:25429)
            TypeDecl: declname='data', quals=[] (at pp.c:25429)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SerialP__rx_state_machine', quals=[] (at pp.c:25429)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25431)
      Switch:  (at pp.c:25433)
        ID: name='SerialP__rxState' (at pp.c:25433)
        Compound:  (at pp.c:25433)
          Case:  (at pp.c:25435)
            ID: name='SerialP__RXSTATE_NOSYNC' (at pp.c:25435)
            If:  (at pp.c:25436)
              ID: name='isDelimeter' (at pp.c:25436)
              Compound:  (at pp.c:25436)
                FuncCall:  (at None)
                  ID: name='SerialP__rxInit' (at pp.c:25437)
                Assignment: op='=' (at pp.c:25438)
                  ID: name='SerialP__rxState' (at pp.c:25438)
                  ID: name='SerialP__RXSTATE_PROTO' (at pp.c:25438)
          Break:  (at pp.c:25440)
          Case:  (at pp.c:25442)
            ID: name='SerialP__RXSTATE_PROTO' (at pp.c:25442)
            If:  (at pp.c:25443)
              UnaryOp: op='!' (at pp.c:25443)
                ID: name='isDelimeter' (at pp.c:25443)
              Compound:  (at pp.c:25443)
                Assignment: op='=' (at pp.c:25444)
                  ID: name='SerialP__rxCRC' (at pp.c:25444)
                  FuncCall:  (at None)
                    ID: name='crcByte' (at pp.c:25444)
                    ExprList:  (at pp.c:25444)
                      ID: name='SerialP__rxCRC' (at pp.c:25444)
                      ID: name='data' (at pp.c:25444)
                Assignment: op='=' (at pp.c:25445)
                  ID: name='SerialP__rxState' (at pp.c:25445)
                  ID: name='SerialP__RXSTATE_TOKEN' (at pp.c:25445)
                Assignment: op='=' (at pp.c:25446)
                  ID: name='SerialP__rxProto' (at pp.c:25446)
                  ID: name='data' (at pp.c:25446)
                If:  (at pp.c:25447)
                  UnaryOp: op='!' (at None)
                    FuncCall:  (at None)
                      ID: name='SerialP__valid_rx_proto' (at pp.c:25447)
                      ExprList:  (at pp.c:25447)
                        ID: name='SerialP__rxProto' (at pp.c:25447)
                  Compound:  (at pp.c:25447)
                    Goto: name='nosync' (at pp.c:25448)
                If:  (at pp.c:25450)
                  BinaryOp: op='!=' (at pp.c:25450)
                    ID: name='SerialP__rxProto' (at pp.c:25450)
                    ID: name='SERIAL_PROTO_PACKET_ACK' (at pp.c:25450)
                  Compound:  (at pp.c:25450)
                    Goto: name='nosync' (at pp.c:25451)
                If:  (at pp.c:25453)
                  BinaryOp: op='!=' (at None)
                    FuncCall:  (at None)
                      ID: name='SerialP__ReceiveBytePacket__startPacket' (at pp.c:25453)
                    ID: name='SUCCESS' (at pp.c:25453)
                  Compound:  (at pp.c:25453)
                    Goto: name='nosync' (at pp.c:25454)
          Break:  (at pp.c:25457)
          Case:  (at pp.c:25459)
            ID: name='SerialP__RXSTATE_TOKEN' (at pp.c:25459)
            If:  (at pp.c:25460)
              ID: name='isDelimeter' (at pp.c:25460)
              Compound:  (at pp.c:25460)
                Goto: name='nosync' (at pp.c:25461)
              Compound:  (at pp.c:25463)
                Assignment: op='=' (at pp.c:25464)
                  ID: name='SerialP__rxSeqno' (at pp.c:25464)
                  ID: name='data' (at pp.c:25464)
                Assignment: op='=' (at pp.c:25465)
                  ID: name='SerialP__rxCRC' (at pp.c:25465)
                  FuncCall:  (at None)
                    ID: name='crcByte' (at pp.c:25465)
                    ExprList:  (at pp.c:25465)
                      ID: name='SerialP__rxCRC' (at pp.c:25465)
                      ID: name='SerialP__rxSeqno' (at pp.c:25465)
                Assignment: op='=' (at pp.c:25466)
                  ID: name='SerialP__rxState' (at pp.c:25466)
                  ID: name='SerialP__RXSTATE_INFO' (at pp.c:25466)
          Break:  (at pp.c:25468)
          Case:  (at pp.c:25470)
            ID: name='SerialP__RXSTATE_INFO' (at pp.c:25470)
            If:  (at pp.c:25471)
              BinaryOp: op='<' (at pp.c:25471)
                ID: name='SerialP__rxByteCnt' (at pp.c:25471)
                ID: name='SerialP__SERIAL_MTU' (at pp.c:25471)
              Compound:  (at pp.c:25471)
                If:  (at pp.c:25472)
                  ID: name='isDelimeter' (at pp.c:25472)
                  Compound:  (at pp.c:25472)
                    If:  (at pp.c:25473)
                      BinaryOp: op='>=' (at pp.c:25473)
                        ID: name='SerialP__rxByteCnt' (at pp.c:25473)
                        Constant: type='int', value='2' (at pp.c:25473)
                      Compound:  (at pp.c:25473)
                        If:  (at pp.c:25474)
                          BinaryOp: op='==' (at None)
                            FuncCall:  (at None)
                              ID: name='SerialP__rx_current_crc' (at pp.c:25474)
                            ID: name='SerialP__rxCRC' (at pp.c:25474)
                          Compound:  (at pp.c:25474)
                            FuncCall:  (at None)
                              ID: name='SerialP__ReceiveBytePacket__endPacket' (at pp.c:25475)
                              ExprList:  (at pp.c:25475)
                                ID: name='SUCCESS' (at pp.c:25475)
                            FuncCall:  (at None)
                              ID: name='SerialP__ack_queue_push' (at pp.c:25476)
                              ExprList:  (at pp.c:25476)
                                ID: name='SerialP__rxSeqno' (at pp.c:25476)
                            FuncCall:  (at None)
                              ID: name='SerialP__rxInit' (at pp.c:25477)
                            FuncCall:  (at None)
                              ID: name='SerialP__SerialFrameComm__resetReceive' (at pp.c:25478)
                            If:  (at pp.c:25479)
                              ID: name='SerialP__offPending' (at pp.c:25479)
                              Compound:  (at pp.c:25479)
                                Assignment: op='=' (at pp.c:25480)
                                  ID: name='SerialP__rxState' (at pp.c:25480)
                                  ID: name='SerialP__RXSTATE_INACTIVE' (at pp.c:25480)
                                FuncCall:  (at None)
                                  ID: name='SerialP__testOff' (at pp.c:25481)
                            Goto: name='done' (at pp.c:25483)
                          Compound:  (at pp.c:25485)
                            Goto: name='nosync' (at pp.c:25486)
                      Compound:  (at pp.c:25489)
                        Goto: name='nosync' (at pp.c:25490)
                  Compound:  (at pp.c:25493)
                    If:  (at pp.c:25494)
                      BinaryOp: op='>=' (at pp.c:25494)
                        ID: name='SerialP__rxByteCnt' (at pp.c:25494)
                        Constant: type='int', value='2' (at pp.c:25494)
                      Compound:  (at pp.c:25494)
                        FuncCall:  (at None)
                          ID: name='SerialP__ReceiveBytePacket__byteReceived' (at pp.c:25495)
                          ExprList:  (at None)
                            FuncCall:  (at None)
                              ID: name='SerialP__rx_buffer_top' (at pp.c:25495)
                        Assignment: op='=' (at pp.c:25496)
                          ID: name='SerialP__rxCRC' (at pp.c:25496)
                          FuncCall:  (at None)
                            ID: name='crcByte' (at pp.c:25496)
                            ExprList:  (at pp.c:25496)
                              ID: name='SerialP__rxCRC' (at pp.c:25496)
                              FuncCall:  (at None)
                                ID: name='SerialP__rx_buffer_pop' (at pp.c:25496)
                    FuncCall:  (at None)
                      ID: name='SerialP__rx_buffer_push' (at pp.c:25498)
                      ExprList:  (at pp.c:25498)
                        ID: name='data' (at pp.c:25498)
                    UnaryOp: op='p++' (at pp.c:25499)
                      ID: name='SerialP__rxByteCnt' (at pp.c:25499)
              Compound:  (at pp.c:25504)
                Goto: name='nosync' (at pp.c:25505)
          Break:  (at pp.c:25507)
          Default:  (at pp.c:25509)
            Goto: name='nosync' (at pp.c:25510)
      Goto: name='done' (at pp.c:25512)
      Label: name='nosync' (at pp.c:25514)
        FuncCall:  (at None)
          ID: name='SerialP__rxInit' (at pp.c:25516)
      FuncCall:  (at None)
        ID: name='SerialP__SerialFrameComm__resetReceive' (at pp.c:25517)
      FuncCall:  (at None)
        ID: name='SerialP__ReceiveBytePacket__endPacket' (at pp.c:25518)
        ExprList:  (at pp.c:25518)
          ID: name='FAIL' (at pp.c:25518)
      If:  (at pp.c:25519)
        ID: name='SerialP__offPending' (at pp.c:25519)
        Compound:  (at pp.c:25519)
          Assignment: op='=' (at pp.c:25520)
            ID: name='SerialP__rxState' (at pp.c:25520)
            ID: name='SerialP__RXSTATE_INACTIVE' (at pp.c:25520)
          FuncCall:  (at None)
            ID: name='SerialP__testOff' (at pp.c:25521)
        Compound:  (at pp.c:25523)
          If:  (at pp.c:25524)
            ID: name='isDelimeter' (at pp.c:25524)
            Compound:  (at pp.c:25524)
              Assignment: op='=' (at pp.c:25525)
                ID: name='SerialP__rxState' (at pp.c:25525)
                ID: name='SerialP__RXSTATE_PROTO' (at pp.c:25525)
      Label: name='done' (at pp.c:25528)
  FuncDef:  (at pp.c:25532)
    Decl: name='crcByte', quals=[], storage=['static'] (at pp.c:25532)
      FuncDecl: quals=None (at pp.c:25532)
        ParamList:  (at pp.c:25532)
          Decl: name='crc', quals=[], storage=[] (at pp.c:25532)
            TypeDecl: declname='crc', quals=[] (at pp.c:25532)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='b', quals=[], storage=[] (at pp.c:25532)
            TypeDecl: declname='b', quals=[] (at pp.c:25532)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='crcByte', quals=[] (at pp.c:25532)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:25534)
      Assignment: op='=' (at pp.c:25535)
        ID: name='crc' (at pp.c:25535)
        BinaryOp: op='|' (at None)
          Cast:  (at None)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['uint8_t'] (at None)
            BinaryOp: op='>>' (at pp.c:25535)
              ID: name='crc' (at pp.c:25535)
              Constant: type='int', value='8' (at pp.c:25535)
          BinaryOp: op='<<' (at pp.c:25535)
            ID: name='crc' (at pp.c:25535)
            Constant: type='int', value='8' (at pp.c:25535)
      Assignment: op='^=' (at pp.c:25536)
        ID: name='crc' (at pp.c:25536)
        ID: name='b' (at pp.c:25536)
      Assignment: op='^=' (at pp.c:25537)
        ID: name='crc' (at pp.c:25537)
        BinaryOp: op='>>' (at None)
          Cast:  (at None)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['uint8_t'] (at None)
            BinaryOp: op='&' (at pp.c:25537)
              ID: name='crc' (at pp.c:25537)
              Constant: type='int', value='0xff' (at pp.c:25537)
          Constant: type='int', value='4' (at pp.c:25537)
      Assignment: op='^=' (at pp.c:25538)
        ID: name='crc' (at pp.c:25538)
        BinaryOp: op='<<' (at pp.c:25538)
          ID: name='crc' (at pp.c:25538)
          Constant: type='int', value='12' (at pp.c:25538)
      Assignment: op='^=' (at pp.c:25539)
        ID: name='crc' (at pp.c:25539)
        BinaryOp: op='<<' (at pp.c:25539)
          BinaryOp: op='&' (at pp.c:25539)
            ID: name='crc' (at pp.c:25539)
            Constant: type='int', value='0xff' (at pp.c:25539)
          Constant: type='int', value='5' (at pp.c:25539)
      Return:  (at pp.c:25540)
        ID: name='crc' (at pp.c:25540)
  FuncDef:  (at pp.c:25544)
    Decl: name='SerialDispatcherP__0__ReceiveBytePacket__endPacket', quals=[], storage=['static'] (at pp.c:25544)
      FuncDecl: quals=None (at pp.c:25544)
        ParamList:  (at pp.c:25544)
          Decl: name='result', quals=[], storage=[] (at pp.c:25544)
            TypeDecl: declname='result', quals=[] (at pp.c:25544)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='SerialDispatcherP__0__ReceiveBytePacket__endPacket', quals=[] (at pp.c:25544)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25546)
      Decl: name='postsignalreceive', quals=[], storage=[] (at pp.c:25547)
        TypeDecl: declname='postsignalreceive', quals=[] (at pp.c:25547)
          IdentifierType: names=['uint8_t'] (at None)
        ID: name='FALSE' (at pp.c:25547)
      Compound:  (at pp.c:25551)
        If:  (at pp.c:25552)
          BinaryOp: op='&&' (at pp.c:25552)
            UnaryOp: op='!' (at pp.c:25552)
              ID: name='SerialDispatcherP__0__receiveTaskPending' (at pp.c:25552)
            BinaryOp: op='==' (at pp.c:25552)
              ID: name='result' (at pp.c:25552)
              ID: name='SUCCESS' (at pp.c:25552)
          Compound:  (at pp.c:25552)
            Assignment: op='=' (at pp.c:25553)
              ID: name='postsignalreceive' (at pp.c:25553)
              ID: name='TRUE' (at pp.c:25553)
            Assignment: op='=' (at pp.c:25554)
              ID: name='SerialDispatcherP__0__receiveTaskPending' (at pp.c:25554)
              ID: name='TRUE' (at pp.c:25554)
            Assignment: op='=' (at pp.c:25555)
              ID: name='SerialDispatcherP__0__receiveTaskType' (at pp.c:25555)
              ID: name='SerialDispatcherP__0__recvType' (at pp.c:25555)
            Assignment: op='=' (at pp.c:25556)
              ID: name='SerialDispatcherP__0__receiveTaskWhich' (at pp.c:25556)
              StructRef: type='.' (at pp.c:25556)
                ID: name='SerialDispatcherP__0__receiveState' (at pp.c:25556)
                ID: name='which' (at pp.c:25556)
            Assignment: op='=' (at pp.c:25557)
              ID: name='SerialDispatcherP__0__receiveTaskBuf' (at pp.c:25557)
              Cast:  (at None)
                Typename: quals=[] (at None)
                  PtrDecl: quals=[] (at pp.c:25557)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['message_t'] (at None)
                ID: name='SerialDispatcherP__0__receiveBuffer' (at pp.c:25557)
            Assignment: op='=' (at pp.c:25558)
              ID: name='SerialDispatcherP__0__receiveTaskSize' (at pp.c:25558)
              ID: name='SerialDispatcherP__0__recvIndex' (at pp.c:25558)
            FuncCall:  (at None)
              ID: name='SerialDispatcherP__0__receiveBufferSwap' (at pp.c:25559)
            Assignment: op='=' (at pp.c:25560)
              StructRef: type='.' (at pp.c:25560)
                ID: name='SerialDispatcherP__0__receiveState' (at pp.c:25560)
                ID: name='state' (at pp.c:25560)
              ID: name='SerialDispatcherP__0__RECV_STATE_IDLE' (at pp.c:25560)
          Compound:  (at pp.c:25564)
            FuncCall:  (at None)
              ID: name='SerialDispatcherP__0__unlockBuffer' (at pp.c:25566)
              ExprList:  (at pp.c:25566)
                StructRef: type='.' (at pp.c:25566)
                  ID: name='SerialDispatcherP__0__receiveState' (at pp.c:25566)
                  ID: name='which' (at pp.c:25566)
      If:  (at pp.c:25569)
        ID: name='postsignalreceive' (at pp.c:25569)
        Compound:  (at pp.c:25569)
          FuncCall:  (at None)
            ID: name='SerialDispatcherP__0__receiveTask__postTask' (at pp.c:25570)
  FuncDef:  (at pp.c:25575)
    Decl: name='ArbiterP__1__ArbiterInfo__userId', quals=[], storage=['static'] (at pp.c:25575)
      FuncDecl: quals=None (at pp.c:25575)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__1__ArbiterInfo__userId', quals=[] (at pp.c:25575)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:25577)
      Compound:  (at pp.c:25580)
        If:  (at pp.c:25581)
          BinaryOp: op='!=' (at pp.c:25581)
            ID: name='ArbiterP__1__state' (at pp.c:25581)
            ID: name='ArbiterP__1__RES_BUSY' (at pp.c:25581)
          Compound:  (at pp.c:25582)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:25583)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:25583)
                IdentifierType: names=['char', 'unsigned'] (at None)
              ID: name='ArbiterP__1__NO_RES' (at pp.c:25585)
            Return:  (at pp.c:25588)
              ID: name='__nesc_temp' (at pp.c:25588)
        Compound:  (at pp.c:25591)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:25592)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:25592)
              IdentifierType: names=['char', 'unsigned'] (at None)
            ID: name='ArbiterP__1__resId' (at pp.c:25594)
          Return:  (at pp.c:25597)
            ID: name='__nesc_temp' (at pp.c:25597)
  FuncDef:  (at pp.c:25603)
    Decl: name='sig_UART1TX_VECTOR', quals=[], storage=[] (at pp.c:25603)
      FuncDecl: quals=None (at pp.c:25603)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_UART1TX_VECTOR', quals=[] (at pp.c:25603)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25605)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart1P__Interrupts__txDone' (at pp.c:25606)
  FuncDef:  (at pp.c:25610)
    Decl: name='HdlcTranslateC__UartStream__sendDone', quals=[], storage=['static'] (at pp.c:25610)
      FuncDecl: quals=None (at pp.c:25610)
        ParamList:  (at pp.c:25610)
          Decl: name='buf', quals=[], storage=[] (at pp.c:25610)
            PtrDecl: quals=[] (at pp.c:25610)
              TypeDecl: declname='buf', quals=[] (at pp.c:25610)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:25610)
            TypeDecl: declname='len', quals=[] (at pp.c:25610)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:25611)
            TypeDecl: declname='error', quals=[] (at pp.c:25611)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='HdlcTranslateC__UartStream__sendDone', quals=[] (at pp.c:25610)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25613)
      Compound:  (at pp.c:25616)
        If:  (at pp.c:25617)
          StructRef: type='.' (at pp.c:25617)
            ID: name='HdlcTranslateC__state' (at pp.c:25617)
            ID: name='sendEscape' (at pp.c:25617)
          Compound:  (at pp.c:25617)
            Assignment: op='=' (at pp.c:25618)
              StructRef: type='.' (at pp.c:25618)
                ID: name='HdlcTranslateC__state' (at pp.c:25618)
                ID: name='sendEscape' (at pp.c:25618)
              Constant: type='int', value='0' (at pp.c:25618)
            Assignment: op='=' (at pp.c:25619)
              ID: name='HdlcTranslateC__m_data' (at pp.c:25619)
              ID: name='HdlcTranslateC__txTemp' (at pp.c:25619)
            FuncCall:  (at None)
              ID: name='HdlcTranslateC__UartStream__send' (at pp.c:25620)
              ExprList:  (at pp.c:25620)
                UnaryOp: op='&' (at pp.c:25620)
                  ID: name='HdlcTranslateC__m_data' (at pp.c:25620)
                Constant: type='int', value='1' (at pp.c:25620)
          Compound:  (at pp.c:25622)
            FuncCall:  (at None)
              ID: name='HdlcTranslateC__SerialFrameComm__putDone' (at pp.c:25623)
  FuncDef:  (at pp.c:25629)
    Decl: name='HdlcTranslateC__SerialFrameComm__putData', quals=[], storage=['static'] (at pp.c:25629)
      FuncDecl: quals=None (at pp.c:25629)
        ParamList:  (at pp.c:25629)
          Decl: name='data', quals=[], storage=[] (at pp.c:25629)
            TypeDecl: declname='data', quals=[] (at pp.c:25629)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='HdlcTranslateC__SerialFrameComm__putData', quals=[] (at pp.c:25629)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:25631)
      If:  (at pp.c:25632)
        BinaryOp: op='||' (at pp.c:25632)
          BinaryOp: op='==' (at pp.c:25632)
            ID: name='data' (at pp.c:25632)
            ID: name='HDLC_CTLESC_BYTE' (at pp.c:25632)
          BinaryOp: op='==' (at pp.c:25632)
            ID: name='data' (at pp.c:25632)
            ID: name='HDLC_FLAG_BYTE' (at pp.c:25632)
        Compound:  (at pp.c:25632)
          Assignment: op='=' (at pp.c:25633)
            StructRef: type='.' (at pp.c:25633)
              ID: name='HdlcTranslateC__state' (at pp.c:25633)
              ID: name='sendEscape' (at pp.c:25633)
            Constant: type='int', value='1' (at pp.c:25633)
          Assignment: op='=' (at pp.c:25634)
            ID: name='HdlcTranslateC__txTemp' (at pp.c:25634)
            BinaryOp: op='^' (at pp.c:25634)
              ID: name='data' (at pp.c:25634)
              Constant: type='int', value='0x20' (at pp.c:25634)
          Assignment: op='=' (at pp.c:25635)
            ID: name='HdlcTranslateC__m_data' (at pp.c:25635)
            ID: name='HDLC_CTLESC_BYTE' (at pp.c:25635)
        Compound:  (at pp.c:25637)
          Assignment: op='=' (at pp.c:25638)
            ID: name='HdlcTranslateC__m_data' (at pp.c:25638)
            ID: name='data' (at pp.c:25638)
      Return:  (at pp.c:25640)
        FuncCall:  (at None)
          ID: name='HdlcTranslateC__UartStream__send' (at pp.c:25640)
          ExprList:  (at pp.c:25640)
            UnaryOp: op='&' (at pp.c:25640)
              ID: name='HdlcTranslateC__m_data' (at pp.c:25640)
            Constant: type='int', value='1' (at pp.c:25640)
[Log] Parsed preprocessed file into AST.
