[Log] Preprocessed input file.
FileAST:  (at None)
  Typedef: name='ptrdiff_t', quals=[], storage=['typedef'] (at pp.c:7)
    TypeDecl: declname='ptrdiff_t', quals=[] (at pp.c:7)
      IdentifierType: names=['int'] (at None)
  Typedef: name='size_t', quals=[], storage=['typedef'] (at pp.c:9)
    TypeDecl: declname='size_t', quals=[] (at pp.c:9)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='wchar_t', quals=[], storage=['typedef'] (at pp.c:11)
    TypeDecl: declname='wchar_t', quals=[] (at pp.c:11)
      IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:13)
    Struct: name='__nesc_attr_nonnull', packed=False (at pp.c:13)
      Decl: name='dummy', quals=[], storage=[] (at 0)
        TypeDecl: declname='dummy', quals=[] (at pp.c:15)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:18)
    Struct: name='__nesc_attr_bnd', packed=False (at pp.c:18)
      Decl: name='lo', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:20)
          TypeDecl: declname='lo', quals=[] (at pp.c:20)
            IdentifierType: names=['void'] (at None)
      Decl: name='hi', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:20)
          TypeDecl: declname='hi', quals=[] (at pp.c:20)
            IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:23)
    Struct: name='__nesc_attr_bnd_nok', packed=False (at pp.c:23)
      Decl: name='lo', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:25)
          TypeDecl: declname='lo', quals=[] (at pp.c:25)
            IdentifierType: names=['void'] (at None)
      Decl: name='hi', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:25)
          TypeDecl: declname='hi', quals=[] (at pp.c:25)
            IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:28)
    Struct: name='__nesc_attr_count', packed=False (at pp.c:28)
      Decl: name='n', quals=[], storage=[] (at 0)
        TypeDecl: declname='n', quals=[] (at pp.c:30)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:33)
    Struct: name='__nesc_attr_count_nok', packed=False (at pp.c:33)
      Decl: name='n', quals=[], storage=[] (at 0)
        TypeDecl: declname='n', quals=[] (at pp.c:35)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:38)
    Struct: name='__nesc_attr_one', packed=False (at pp.c:38)
      Decl: name='dummy', quals=[], storage=[] (at 0)
        TypeDecl: declname='dummy', quals=[] (at pp.c:40)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:43)
    Struct: name='__nesc_attr_one_nok', packed=False (at pp.c:43)
      Decl: name='dummy', quals=[], storage=[] (at 0)
        TypeDecl: declname='dummy', quals=[] (at pp.c:45)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:48)
    Struct: name='__nesc_attr_dmemset', packed=False (at pp.c:48)
      Decl: name='a1', quals=[], storage=[] (at 0)
        TypeDecl: declname='a1', quals=[] (at pp.c:50)
          IdentifierType: names=['int'] (at None)
      Decl: name='a2', quals=[], storage=[] (at 0)
        TypeDecl: declname='a2', quals=[] (at pp.c:50)
          IdentifierType: names=['int'] (at None)
      Decl: name='a3', quals=[], storage=[] (at 0)
        TypeDecl: declname='a3', quals=[] (at pp.c:50)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:53)
    Struct: name='__nesc_attr_dmemcpy', packed=False (at pp.c:53)
      Decl: name='a1', quals=[], storage=[] (at 0)
        TypeDecl: declname='a1', quals=[] (at pp.c:55)
          IdentifierType: names=['int'] (at None)
      Decl: name='a2', quals=[], storage=[] (at 0)
        TypeDecl: declname='a2', quals=[] (at pp.c:55)
          IdentifierType: names=['int'] (at None)
      Decl: name='a3', quals=[], storage=[] (at 0)
        TypeDecl: declname='a3', quals=[] (at pp.c:55)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:58)
    Struct: name='__nesc_attr_nts', packed=False (at pp.c:58)
      Decl: name='dummy', quals=[], storage=[] (at 0)
        TypeDecl: declname='dummy', quals=[] (at pp.c:60)
          IdentifierType: names=['int'] (at None)
  Typedef: name='int8_t', quals=[], storage=['typedef'] (at pp.c:63)
    TypeDecl: declname='int8_t', quals=[] (at pp.c:63)
      IdentifierType: names=['char', 'signed'] (at None)
  Typedef: name='uint8_t', quals=[], storage=['typedef'] (at pp.c:64)
    TypeDecl: declname='uint8_t', quals=[] (at pp.c:64)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Typedef: name='int16_t', quals=[], storage=['typedef'] (at pp.c:66)
    TypeDecl: declname='int16_t', quals=[] (at pp.c:66)
      IdentifierType: names=['int'] (at None)
  Typedef: name='uint16_t', quals=[], storage=['typedef'] (at pp.c:67)
    TypeDecl: declname='uint16_t', quals=[] (at pp.c:67)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='int32_t', quals=[], storage=['typedef'] (at pp.c:69)
    TypeDecl: declname='int32_t', quals=[] (at pp.c:69)
      IdentifierType: names=['long'] (at None)
  Typedef: name='uint32_t', quals=[], storage=['typedef'] (at pp.c:70)
    TypeDecl: declname='uint32_t', quals=[] (at pp.c:70)
      IdentifierType: names=['long', 'unsigned'] (at None)
  Typedef: name='int64_t', quals=[], storage=['typedef'] (at pp.c:72)
    TypeDecl: declname='int64_t', quals=[] (at pp.c:72)
      IdentifierType: names=['long', 'long'] (at None)
  Typedef: name='uint64_t', quals=[], storage=['typedef'] (at pp.c:73)
    TypeDecl: declname='uint64_t', quals=[] (at pp.c:73)
      IdentifierType: names=['long', 'long', 'unsigned'] (at None)
  Typedef: name='intptr_t', quals=[], storage=['typedef'] (at pp.c:78)
    TypeDecl: declname='intptr_t', quals=[] (at pp.c:78)
      IdentifierType: names=['int16_t'] (at None)
  Typedef: name='uintptr_t', quals=[], storage=['typedef'] (at pp.c:79)
    TypeDecl: declname='uintptr_t', quals=[] (at pp.c:79)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='__nesc_ntoh_uint8', quals=[], storage=['__inline', 'static'] (at pp.c:81)
    FuncDecl: quals=None (at pp.c:81)
      ParamList:  (at pp.c:81)
        Decl: name='source', quals=['const'], storage=[] (at pp.c:81)
          PtrDecl: quals=[] (at pp.c:81)
            TypeDecl: declname='source', quals=['const'] (at pp.c:81)
              IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_ntoh_uint8', quals=[] (at pp.c:81)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='__nesc_hton_uint8', quals=[], storage=['__inline', 'static'] (at pp.c:86)
    FuncDecl: quals=None (at pp.c:86)
      ParamList:  (at pp.c:86)
        Decl: name='target', quals=[], storage=[] (at pp.c:86)
          PtrDecl: quals=[] (at pp.c:86)
            TypeDecl: declname='target', quals=[] (at pp.c:86)
              IdentifierType: names=['void'] (at None)
        Decl: name='value', quals=[], storage=[] (at pp.c:86)
          TypeDecl: declname='value', quals=[] (at pp.c:86)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='__nesc_hton_uint8', quals=[] (at pp.c:86)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='__nesc_ntoh_leuint8', quals=[], storage=['__inline', 'static'] (at pp.c:92)
    FuncDecl: quals=None (at pp.c:92)
      ParamList:  (at pp.c:92)
        Decl: name='source', quals=['const'], storage=[] (at pp.c:92)
          PtrDecl: quals=[] (at pp.c:92)
            TypeDecl: declname='source', quals=['const'] (at pp.c:92)
              IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_ntoh_leuint8', quals=[] (at pp.c:92)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='__nesc_hton_leuint8', quals=[], storage=['__inline', 'static'] (at pp.c:97)
    FuncDecl: quals=None (at pp.c:97)
      ParamList:  (at pp.c:97)
        Decl: name='target', quals=[], storage=[] (at pp.c:97)
          PtrDecl: quals=[] (at pp.c:97)
            TypeDecl: declname='target', quals=[] (at pp.c:97)
              IdentifierType: names=['void'] (at None)
        Decl: name='value', quals=[], storage=[] (at pp.c:97)
          TypeDecl: declname='value', quals=[] (at pp.c:97)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='__nesc_hton_leuint8', quals=[] (at pp.c:97)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='__nesc_ntoh_int8', quals=[], storage=['__inline', 'static'] (at pp.c:103)
    FuncDecl: quals=None (at pp.c:103)
      ParamList:  (at pp.c:103)
        Decl: name='source', quals=['const'], storage=[] (at pp.c:103)
          PtrDecl: quals=[] (at pp.c:103)
            TypeDecl: declname='source', quals=['const'] (at pp.c:103)
              IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_ntoh_int8', quals=[] (at pp.c:103)
        IdentifierType: names=['int8_t'] (at None)
  Decl: name='__nesc_hton_int8', quals=[], storage=['__inline', 'static'] (at pp.c:105)
    FuncDecl: quals=None (at pp.c:105)
      ParamList:  (at pp.c:105)
        Decl: name='target', quals=[], storage=[] (at pp.c:105)
          PtrDecl: quals=[] (at pp.c:105)
            TypeDecl: declname='target', quals=[] (at pp.c:105)
              IdentifierType: names=['void'] (at None)
        Decl: name='value', quals=[], storage=[] (at pp.c:105)
          TypeDecl: declname='value', quals=[] (at pp.c:105)
            IdentifierType: names=['int8_t'] (at None)
      TypeDecl: declname='__nesc_hton_int8', quals=[] (at pp.c:105)
        IdentifierType: names=['int8_t'] (at None)
  Decl: name='__nesc_ntoh_uint16', quals=[], storage=['__inline', 'static'] (at pp.c:112)
    FuncDecl: quals=None (at pp.c:112)
      ParamList:  (at pp.c:112)
        Decl: name='source', quals=['const'], storage=[] (at pp.c:112)
          PtrDecl: quals=[] (at pp.c:112)
            TypeDecl: declname='source', quals=['const'] (at pp.c:112)
              IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_ntoh_uint16', quals=[] (at pp.c:112)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='__nesc_hton_uint16', quals=[], storage=['__inline', 'static'] (at pp.c:117)
    FuncDecl: quals=None (at pp.c:117)
      ParamList:  (at pp.c:117)
        Decl: name='target', quals=[], storage=[] (at pp.c:117)
          PtrDecl: quals=[] (at pp.c:117)
            TypeDecl: declname='target', quals=[] (at pp.c:117)
              IdentifierType: names=['void'] (at None)
        Decl: name='value', quals=[], storage=[] (at pp.c:117)
          TypeDecl: declname='value', quals=[] (at pp.c:117)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='__nesc_hton_uint16', quals=[] (at pp.c:117)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='__nesc_ntoh_leuint16', quals=[], storage=['__inline', 'static'] (at pp.c:124)
    FuncDecl: quals=None (at pp.c:124)
      ParamList:  (at pp.c:124)
        Decl: name='source', quals=['const'], storage=[] (at pp.c:124)
          PtrDecl: quals=[] (at pp.c:124)
            TypeDecl: declname='source', quals=['const'] (at pp.c:124)
              IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_ntoh_leuint16', quals=[] (at pp.c:124)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='__nesc_hton_leuint16', quals=[], storage=['__inline', 'static'] (at pp.c:129)
    FuncDecl: quals=None (at pp.c:129)
      ParamList:  (at pp.c:129)
        Decl: name='target', quals=[], storage=[] (at pp.c:129)
          PtrDecl: quals=[] (at pp.c:129)
            TypeDecl: declname='target', quals=[] (at pp.c:129)
              IdentifierType: names=['void'] (at None)
        Decl: name='value', quals=[], storage=[] (at pp.c:129)
          TypeDecl: declname='value', quals=[] (at pp.c:129)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='__nesc_hton_leuint16', quals=[] (at pp.c:129)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='__nesc_ntoh_uint32', quals=[], storage=['__inline', 'static'] (at pp.c:131)
    FuncDecl: quals=None (at pp.c:131)
      ParamList:  (at pp.c:131)
        Decl: name='source', quals=['const'], storage=[] (at pp.c:131)
          PtrDecl: quals=[] (at pp.c:131)
            TypeDecl: declname='source', quals=['const'] (at pp.c:131)
              IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_ntoh_uint32', quals=[] (at pp.c:131)
        IdentifierType: names=['uint32_t'] (at None)
  Decl: name='__nesc_hton_uint32', quals=[], storage=['__inline', 'static'] (at pp.c:138)
    FuncDecl: quals=None (at pp.c:138)
      ParamList:  (at pp.c:138)
        Decl: name='target', quals=[], storage=[] (at pp.c:138)
          PtrDecl: quals=[] (at pp.c:138)
            TypeDecl: declname='target', quals=[] (at pp.c:138)
              IdentifierType: names=['void'] (at None)
        Decl: name='value', quals=[], storage=[] (at pp.c:138)
          TypeDecl: declname='value', quals=[] (at pp.c:138)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='__nesc_hton_uint32', quals=[] (at pp.c:138)
        IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='nx_int8_t', quals=[], storage=['typedef'] (at pp.c:140)
    TypeDecl: declname='nx_int8_t', quals=[] (at pp.c:140)
      Struct: name=None, packed=False (at pp.c:140)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:140)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:140)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='1' (at pp.c:140)
  Typedef: name='__nesc_nxbase_nx_int8_t', quals=[], storage=['typedef'] (at pp.c:140)
    TypeDecl: declname='__nesc_nxbase_nx_int8_t', quals=[] (at pp.c:140)
      IdentifierType: names=['int8_t'] (at None)
  Typedef: name='nx_int16_t', quals=[], storage=['typedef'] (at pp.c:141)
    TypeDecl: declname='nx_int16_t', quals=[] (at pp.c:141)
      Struct: name=None, packed=False (at pp.c:141)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:141)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:141)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='2' (at pp.c:141)
  Typedef: name='__nesc_nxbase_nx_int16_t', quals=[], storage=['typedef'] (at pp.c:141)
    TypeDecl: declname='__nesc_nxbase_nx_int16_t', quals=[] (at pp.c:141)
      IdentifierType: names=['int16_t'] (at None)
  Typedef: name='nx_int32_t', quals=[], storage=['typedef'] (at pp.c:142)
    TypeDecl: declname='nx_int32_t', quals=[] (at pp.c:142)
      Struct: name=None, packed=False (at pp.c:142)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:142)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:142)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='4' (at pp.c:142)
  Typedef: name='__nesc_nxbase_nx_int32_t', quals=[], storage=['typedef'] (at pp.c:142)
    TypeDecl: declname='__nesc_nxbase_nx_int32_t', quals=[] (at pp.c:142)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='nx_int64_t', quals=[], storage=['typedef'] (at pp.c:143)
    TypeDecl: declname='nx_int64_t', quals=[] (at pp.c:143)
      Struct: name=None, packed=False (at pp.c:143)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:143)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:143)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='8' (at pp.c:143)
  Typedef: name='__nesc_nxbase_nx_int64_t', quals=[], storage=['typedef'] (at pp.c:143)
    TypeDecl: declname='__nesc_nxbase_nx_int64_t', quals=[] (at pp.c:143)
      IdentifierType: names=['int64_t'] (at None)
  Typedef: name='nx_uint8_t', quals=[], storage=['typedef'] (at pp.c:144)
    TypeDecl: declname='nx_uint8_t', quals=[] (at pp.c:144)
      Struct: name=None, packed=False (at pp.c:144)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:144)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:144)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='1' (at pp.c:144)
  Typedef: name='__nesc_nxbase_nx_uint8_t', quals=[], storage=['typedef'] (at pp.c:144)
    TypeDecl: declname='__nesc_nxbase_nx_uint8_t', quals=[] (at pp.c:144)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='nx_uint16_t', quals=[], storage=['typedef'] (at pp.c:145)
    TypeDecl: declname='nx_uint16_t', quals=[] (at pp.c:145)
      Struct: name=None, packed=False (at pp.c:145)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:145)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:145)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='2' (at pp.c:145)
  Typedef: name='__nesc_nxbase_nx_uint16_t', quals=[], storage=['typedef'] (at pp.c:145)
    TypeDecl: declname='__nesc_nxbase_nx_uint16_t', quals=[] (at pp.c:145)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='nx_uint32_t', quals=[], storage=['typedef'] (at pp.c:146)
    TypeDecl: declname='nx_uint32_t', quals=[] (at pp.c:146)
      Struct: name=None, packed=False (at pp.c:146)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:146)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:146)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='4' (at pp.c:146)
  Typedef: name='__nesc_nxbase_nx_uint32_t', quals=[], storage=['typedef'] (at pp.c:146)
    TypeDecl: declname='__nesc_nxbase_nx_uint32_t', quals=[] (at pp.c:146)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='nx_uint64_t', quals=[], storage=['typedef'] (at pp.c:147)
    TypeDecl: declname='nx_uint64_t', quals=[] (at pp.c:147)
      Struct: name=None, packed=False (at pp.c:147)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:147)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:147)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='8' (at pp.c:147)
  Typedef: name='__nesc_nxbase_nx_uint64_t', quals=[], storage=['typedef'] (at pp.c:147)
    TypeDecl: declname='__nesc_nxbase_nx_uint64_t', quals=[] (at pp.c:147)
      IdentifierType: names=['uint64_t'] (at None)
  Typedef: name='nxle_int8_t', quals=[], storage=['typedef'] (at pp.c:150)
    TypeDecl: declname='nxle_int8_t', quals=[] (at pp.c:150)
      Struct: name=None, packed=False (at pp.c:150)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:150)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:150)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='1' (at pp.c:150)
  Typedef: name='__nesc_nxbase_nxle_int8_t', quals=[], storage=['typedef'] (at pp.c:150)
    TypeDecl: declname='__nesc_nxbase_nxle_int8_t', quals=[] (at pp.c:150)
      IdentifierType: names=['int8_t'] (at None)
  Typedef: name='nxle_int16_t', quals=[], storage=['typedef'] (at pp.c:151)
    TypeDecl: declname='nxle_int16_t', quals=[] (at pp.c:151)
      Struct: name=None, packed=False (at pp.c:151)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:151)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:151)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='2' (at pp.c:151)
  Typedef: name='__nesc_nxbase_nxle_int16_t', quals=[], storage=['typedef'] (at pp.c:151)
    TypeDecl: declname='__nesc_nxbase_nxle_int16_t', quals=[] (at pp.c:151)
      IdentifierType: names=['int16_t'] (at None)
  Typedef: name='nxle_int32_t', quals=[], storage=['typedef'] (at pp.c:152)
    TypeDecl: declname='nxle_int32_t', quals=[] (at pp.c:152)
      Struct: name=None, packed=False (at pp.c:152)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:152)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:152)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='4' (at pp.c:152)
  Typedef: name='__nesc_nxbase_nxle_int32_t', quals=[], storage=['typedef'] (at pp.c:152)
    TypeDecl: declname='__nesc_nxbase_nxle_int32_t', quals=[] (at pp.c:152)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='nxle_int64_t', quals=[], storage=['typedef'] (at pp.c:153)
    TypeDecl: declname='nxle_int64_t', quals=[] (at pp.c:153)
      Struct: name=None, packed=False (at pp.c:153)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:153)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:153)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='8' (at pp.c:153)
  Typedef: name='__nesc_nxbase_nxle_int64_t', quals=[], storage=['typedef'] (at pp.c:153)
    TypeDecl: declname='__nesc_nxbase_nxle_int64_t', quals=[] (at pp.c:153)
      IdentifierType: names=['int64_t'] (at None)
  Typedef: name='nxle_uint8_t', quals=[], storage=['typedef'] (at pp.c:154)
    TypeDecl: declname='nxle_uint8_t', quals=[] (at pp.c:154)
      Struct: name=None, packed=False (at pp.c:154)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:154)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:154)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='1' (at pp.c:154)
  Typedef: name='__nesc_nxbase_nxle_uint8_t', quals=[], storage=['typedef'] (at pp.c:154)
    TypeDecl: declname='__nesc_nxbase_nxle_uint8_t', quals=[] (at pp.c:154)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='nxle_uint16_t', quals=[], storage=['typedef'] (at pp.c:155)
    TypeDecl: declname='nxle_uint16_t', quals=[] (at pp.c:155)
      Struct: name=None, packed=False (at pp.c:155)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:155)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:155)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='2' (at pp.c:155)
  Typedef: name='__nesc_nxbase_nxle_uint16_t', quals=[], storage=['typedef'] (at pp.c:155)
    TypeDecl: declname='__nesc_nxbase_nxle_uint16_t', quals=[] (at pp.c:155)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='nxle_uint32_t', quals=[], storage=['typedef'] (at pp.c:156)
    TypeDecl: declname='nxle_uint32_t', quals=[] (at pp.c:156)
      Struct: name=None, packed=False (at pp.c:156)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:156)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:156)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='4' (at pp.c:156)
  Typedef: name='__nesc_nxbase_nxle_uint32_t', quals=[], storage=['typedef'] (at pp.c:156)
    TypeDecl: declname='__nesc_nxbase_nxle_uint32_t', quals=[] (at pp.c:156)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='nxle_uint64_t', quals=[], storage=['typedef'] (at pp.c:157)
    TypeDecl: declname='nxle_uint64_t', quals=[] (at pp.c:157)
      Struct: name=None, packed=False (at pp.c:157)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:157)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:157)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='8' (at pp.c:157)
  Typedef: name='__nesc_nxbase_nxle_uint64_t', quals=[], storage=['typedef'] (at pp.c:157)
    TypeDecl: declname='__nesc_nxbase_nxle_uint64_t', quals=[] (at pp.c:157)
      IdentifierType: names=['uint64_t'] (at None)
  Typedef: name='u_char', quals=[], storage=['typedef'] (at pp.c:159)
    TypeDecl: declname='u_char', quals=[] (at pp.c:159)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Typedef: name='u_short', quals=[], storage=['typedef'] (at pp.c:160)
    TypeDecl: declname='u_short', quals=[] (at pp.c:160)
      IdentifierType: names=['short', 'unsigned'] (at None)
  Typedef: name='u_int', quals=[], storage=['typedef'] (at pp.c:161)
    TypeDecl: declname='u_int', quals=[] (at pp.c:161)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='u_long', quals=[], storage=['typedef'] (at pp.c:162)
    TypeDecl: declname='u_long', quals=[] (at pp.c:162)
      IdentifierType: names=['long', 'unsigned'] (at None)
  Typedef: name='ushort', quals=[], storage=['typedef'] (at pp.c:163)
    TypeDecl: declname='ushort', quals=[] (at pp.c:163)
      IdentifierType: names=['short', 'unsigned'] (at None)
  Typedef: name='uint', quals=[], storage=['typedef'] (at pp.c:164)
    TypeDecl: declname='uint', quals=[] (at pp.c:164)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='u_int8_t', quals=[], storage=['typedef'] (at pp.c:166)
    TypeDecl: declname='u_int8_t', quals=[] (at pp.c:166)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='u_int16_t', quals=[], storage=['typedef'] (at pp.c:167)
    TypeDecl: declname='u_int16_t', quals=[] (at pp.c:167)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='u_int32_t', quals=[], storage=['typedef'] (at pp.c:168)
    TypeDecl: declname='u_int32_t', quals=[] (at pp.c:168)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='u_int64_t', quals=[], storage=['typedef'] (at pp.c:169)
    TypeDecl: declname='u_int64_t', quals=[] (at pp.c:169)
      IdentifierType: names=['uint64_t'] (at None)
  Typedef: name='u_quad_t', quals=[], storage=['typedef'] (at pp.c:171)
    TypeDecl: declname='u_quad_t', quals=[] (at pp.c:171)
      IdentifierType: names=['u_int64_t'] (at None)
  Typedef: name='quad_t', quals=[], storage=['typedef'] (at pp.c:172)
    TypeDecl: declname='quad_t', quals=[] (at pp.c:172)
      IdentifierType: names=['int64_t'] (at None)
  Typedef: name='qaddr_t', quals=[], storage=['typedef'] (at pp.c:173)
    PtrDecl: quals=[] (at pp.c:173)
      TypeDecl: declname='qaddr_t', quals=[] (at pp.c:173)
        IdentifierType: names=['quad_t'] (at None)
  Typedef: name='caddr_t', quals=[], storage=['typedef'] (at pp.c:175)
    PtrDecl: quals=[] (at pp.c:175)
      TypeDecl: declname='caddr_t', quals=[] (at pp.c:175)
        IdentifierType: names=['char'] (at None)
  Typedef: name='c_caddr_t', quals=['const'], storage=['typedef'] (at pp.c:176)
    PtrDecl: quals=[] (at pp.c:176)
      TypeDecl: declname='c_caddr_t', quals=['const'] (at pp.c:176)
        IdentifierType: names=['char'] (at None)
  Typedef: name='v_caddr_t', quals=['volatile'], storage=['typedef'] (at pp.c:177)
    PtrDecl: quals=[] (at pp.c:177)
      TypeDecl: declname='v_caddr_t', quals=['volatile'] (at pp.c:177)
        IdentifierType: names=['char'] (at None)
  Typedef: name='fixpt_t', quals=[], storage=['typedef'] (at pp.c:178)
    TypeDecl: declname='fixpt_t', quals=[] (at pp.c:178)
      IdentifierType: names=['u_int32_t'] (at None)
  Typedef: name='gid_t', quals=[], storage=['typedef'] (at pp.c:179)
    TypeDecl: declname='gid_t', quals=[] (at pp.c:179)
      IdentifierType: names=['u_int32_t'] (at None)
  Typedef: name='in_addr_t', quals=[], storage=['typedef'] (at pp.c:180)
    TypeDecl: declname='in_addr_t', quals=[] (at pp.c:180)
      IdentifierType: names=['u_int32_t'] (at None)
  Typedef: name='in_port_t', quals=[], storage=['typedef'] (at pp.c:181)
    TypeDecl: declname='in_port_t', quals=[] (at pp.c:181)
      IdentifierType: names=['u_int16_t'] (at None)
  Typedef: name='ino_t', quals=[], storage=['typedef'] (at pp.c:182)
    TypeDecl: declname='ino_t', quals=[] (at pp.c:182)
      IdentifierType: names=['u_int32_t'] (at None)
  Typedef: name='key_t', quals=[], storage=['typedef'] (at pp.c:183)
    TypeDecl: declname='key_t', quals=[] (at pp.c:183)
      IdentifierType: names=['long'] (at None)
  Typedef: name='mode_t', quals=[], storage=['typedef'] (at pp.c:184)
    TypeDecl: declname='mode_t', quals=[] (at pp.c:184)
      IdentifierType: names=['u_int16_t'] (at None)
  Typedef: name='nlink_t', quals=[], storage=['typedef'] (at pp.c:185)
    TypeDecl: declname='nlink_t', quals=[] (at pp.c:185)
      IdentifierType: names=['u_int16_t'] (at None)
  Typedef: name='rlim_t', quals=[], storage=['typedef'] (at pp.c:186)
    TypeDecl: declname='rlim_t', quals=[] (at pp.c:186)
      IdentifierType: names=['quad_t'] (at None)
  Typedef: name='segsz_t', quals=[], storage=['typedef'] (at pp.c:187)
    TypeDecl: declname='segsz_t', quals=[] (at pp.c:187)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='swblk_t', quals=[], storage=['typedef'] (at pp.c:188)
    TypeDecl: declname='swblk_t', quals=[] (at pp.c:188)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='ufs_daddr_t', quals=[], storage=['typedef'] (at pp.c:189)
    TypeDecl: declname='ufs_daddr_t', quals=[] (at pp.c:189)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='ufs_time_t', quals=[], storage=['typedef'] (at pp.c:190)
    TypeDecl: declname='ufs_time_t', quals=[] (at pp.c:190)
      IdentifierType: names=['int32_t'] (at None)
  Typedef: name='uid_t', quals=[], storage=['typedef'] (at pp.c:191)
    TypeDecl: declname='uid_t', quals=[] (at pp.c:191)
      IdentifierType: names=['u_int32_t'] (at None)
  Decl: name='memcmp', quals=[], storage=['extern'] (at pp.c:193)
    FuncDecl: quals=None (at pp.c:193)
      ParamList:  (at pp.c:193)
        Decl: name='arg_0x100744de8', quals=['const'], storage=[] (at pp.c:193)
          PtrDecl: quals=[] (at pp.c:193)
            TypeDecl: declname='arg_0x100744de8', quals=['const'] (at pp.c:193)
              IdentifierType: names=['void'] (at None)
        Decl: name='arg_0x10074a100', quals=['const'], storage=[] (at pp.c:193)
          PtrDecl: quals=[] (at pp.c:193)
            TypeDecl: declname='arg_0x10074a100', quals=['const'] (at pp.c:193)
              IdentifierType: names=['void'] (at None)
        Decl: name='arg_0x10074a3a8', quals=[], storage=[] (at pp.c:193)
          TypeDecl: declname='arg_0x10074a3a8', quals=[] (at pp.c:193)
            IdentifierType: names=['size_t'] (at None)
      TypeDecl: declname='memcmp', quals=[] (at pp.c:193)
        IdentifierType: names=['int'] (at None)
  Decl: name='memcpy', quals=[], storage=['extern'] (at pp.c:194)
    FuncDecl: quals=None (at pp.c:194)
      ParamList:  (at pp.c:194)
        Decl: name='arg_0x10074abf0', quals=[], storage=[] (at pp.c:194)
          PtrDecl: quals=[] (at pp.c:194)
            TypeDecl: declname='arg_0x10074abf0', quals=[] (at pp.c:194)
              IdentifierType: names=['void'] (at None)
        Decl: name='arg_0x100749020', quals=['const'], storage=[] (at pp.c:194)
          PtrDecl: quals=[] (at pp.c:194)
            TypeDecl: declname='arg_0x100749020', quals=['const'] (at pp.c:194)
              IdentifierType: names=['void'] (at None)
        Decl: name='arg_0x1007492c8', quals=[], storage=[] (at pp.c:194)
          TypeDecl: declname='arg_0x1007492c8', quals=[] (at pp.c:194)
            IdentifierType: names=['size_t'] (at None)
      PtrDecl: quals=[] (at pp.c:194)
        TypeDecl: declname='memcpy', quals=[] (at pp.c:194)
          IdentifierType: names=['void'] (at None)
  Decl: name='memset', quals=[], storage=['extern'] (at pp.c:196)
    FuncDecl: quals=None (at pp.c:196)
      ParamList:  (at pp.c:196)
        Decl: name='arg_0x100748980', quals=[], storage=[] (at pp.c:196)
          PtrDecl: quals=[] (at pp.c:196)
            TypeDecl: declname='arg_0x100748980', quals=[] (at pp.c:196)
              IdentifierType: names=['void'] (at None)
        Decl: name='arg_0x100748be8', quals=[], storage=[] (at pp.c:196)
          TypeDecl: declname='arg_0x100748be8', quals=[] (at pp.c:196)
            IdentifierType: names=['int'] (at None)
        Decl: name='arg_0x10074e020', quals=[], storage=[] (at pp.c:196)
          TypeDecl: declname='arg_0x10074e020', quals=[] (at pp.c:196)
            IdentifierType: names=['size_t'] (at None)
      PtrDecl: quals=[] (at pp.c:196)
        TypeDecl: declname='memset', quals=[] (at pp.c:196)
          IdentifierType: names=['void'] (at None)
  Decl: name='memset', quals=[], storage=['extern'] (at pp.c:198)
    FuncDecl: quals=None (at pp.c:198)
      ParamList:  (at pp.c:198)
        Decl: name='arg_0x100761b10', quals=[], storage=[] (at pp.c:198)
          PtrDecl: quals=[] (at pp.c:198)
            TypeDecl: declname='arg_0x100761b10', quals=[] (at pp.c:198)
              IdentifierType: names=['void'] (at None)
        Decl: name='arg_0x100761d78', quals=[], storage=[] (at pp.c:198)
          TypeDecl: declname='arg_0x100761d78', quals=[] (at pp.c:198)
            IdentifierType: names=['int'] (at None)
        Decl: name='arg_0x100767060', quals=[], storage=[] (at pp.c:198)
          TypeDecl: declname='arg_0x100767060', quals=[] (at pp.c:198)
            IdentifierType: names=['size_t'] (at None)
      PtrDecl: quals=[] (at pp.c:198)
        TypeDecl: declname='memset', quals=[] (at pp.c:198)
          IdentifierType: names=['void'] (at None)
  Typedef: name='div_t', quals=[], storage=['typedef'] (at pp.c:204)
    TypeDecl: declname='div_t', quals=[] (at pp.c:204)
      Struct: name='__nesc_unnamed4242', packed=False (at pp.c:201)
        Decl: name='quot', quals=[], storage=[] (at 0)
          TypeDecl: declname='quot', quals=[] (at pp.c:202)
            IdentifierType: names=['int'] (at None)
        Decl: name='rem', quals=[], storage=[] (at 0)
          TypeDecl: declname='rem', quals=[] (at pp.c:203)
            IdentifierType: names=['int'] (at None)
  Typedef: name='ldiv_t', quals=[], storage=['typedef'] (at pp.c:216)
    TypeDecl: declname='ldiv_t', quals=[] (at pp.c:216)
      Struct: name='__nesc_unnamed4243', packed=False (at pp.c:213)
        Decl: name='quot', quals=[], storage=[] (at 0)
          TypeDecl: declname='quot', quals=[] (at pp.c:214)
            IdentifierType: names=['long'] (at None)
        Decl: name='rem', quals=[], storage=[] (at 0)
          TypeDecl: declname='rem', quals=[] (at pp.c:215)
            IdentifierType: names=['long'] (at None)
  Typedef: name='__int32_t', quals=[], storage=['typedef'] (at pp.c:218)
    TypeDecl: declname='__int32_t', quals=[] (at pp.c:218)
      IdentifierType: names=['int', 'long'] (at None)
  Typedef: name='__uint32_t', quals=[], storage=['typedef'] (at pp.c:219)
    TypeDecl: declname='__uint32_t', quals=[] (at pp.c:219)
      IdentifierType: names=['int', 'long', 'unsigned'] (at None)
  Typedef: name='_off_t', quals=[], storage=['typedef'] (at pp.c:221)
    TypeDecl: declname='_off_t', quals=[] (at pp.c:221)
      IdentifierType: names=['long'] (at None)
  Typedef: name='_ssize_t', quals=[], storage=['typedef'] (at pp.c:222)
    TypeDecl: declname='_ssize_t', quals=[] (at pp.c:222)
      IdentifierType: names=['long'] (at None)
  Typedef: name='__ULong', quals=[], storage=['typedef'] (at pp.c:224)
    TypeDecl: declname='__ULong', quals=[] (at pp.c:224)
      IdentifierType: names=['__uint32_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:227)
    Struct: name='_glue', packed=False (at pp.c:227)
      Decl: name='_next', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:229)
          TypeDecl: declname='_next', quals=[] (at pp.c:229)
            Struct: name='_glue', packed=False (at pp.c:229)
      Decl: name='_niobs', quals=[], storage=[] (at 0)
        TypeDecl: declname='_niobs', quals=[] (at pp.c:230)
          IdentifierType: names=['int'] (at None)
      Decl: name='_iobs', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:231)
          TypeDecl: declname='_iobs', quals=[] (at pp.c:231)
            Struct: name='__sFILE', packed=False (at pp.c:231)
  Decl: name=None, quals=[], storage=[] (at pp.c:234)
    Struct: name='_Bigint', packed=False (at pp.c:234)
      Decl: name='_next', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:236)
          TypeDecl: declname='_next', quals=[] (at pp.c:236)
            Struct: name='_Bigint', packed=False (at pp.c:236)
      Decl: name='_k', quals=[], storage=[] (at 0)
        TypeDecl: declname='_k', quals=[] (at pp.c:237)
          IdentifierType: names=['int'] (at None)
      Decl: name='_maxwds', quals=[], storage=[] (at 0)
        TypeDecl: declname='_maxwds', quals=[] (at pp.c:237)
          IdentifierType: names=['int'] (at None)
      Decl: name='_sign', quals=[], storage=[] (at 0)
        TypeDecl: declname='_sign', quals=[] (at pp.c:237)
          IdentifierType: names=['int'] (at None)
      Decl: name='_wds', quals=[], storage=[] (at 0)
        TypeDecl: declname='_wds', quals=[] (at pp.c:237)
          IdentifierType: names=['int'] (at None)
      Decl: name='_x', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:238)
          TypeDecl: declname='_x', quals=[] (at pp.c:238)
            IdentifierType: names=['__ULong'] (at None)
          Constant: type='int', value='1' (at pp.c:238)
  Decl: name=None, quals=[], storage=[] (at pp.c:242)
    Struct: name='__tm', packed=False (at pp.c:242)
      Decl: name='__tm_sec', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_sec', quals=[] (at pp.c:244)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_min', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_min', quals=[] (at pp.c:245)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_hour', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_hour', quals=[] (at pp.c:246)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_mday', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_mday', quals=[] (at pp.c:247)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_mon', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_mon', quals=[] (at pp.c:248)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_year', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_year', quals=[] (at pp.c:249)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_wday', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_wday', quals=[] (at pp.c:250)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_yday', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_yday', quals=[] (at pp.c:251)
          IdentifierType: names=['int'] (at None)
      Decl: name='__tm_isdst', quals=[], storage=[] (at 0)
        TypeDecl: declname='__tm_isdst', quals=[] (at pp.c:252)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:261)
    Struct: name='_atexit', packed=False (at pp.c:261)
      Decl: name='_next', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:262)
          TypeDecl: declname='_next', quals=[] (at pp.c:262)
            Struct: name='_atexit', packed=False (at pp.c:262)
      Decl: name='_ind', quals=[], storage=[] (at 0)
        TypeDecl: declname='_ind', quals=[] (at pp.c:263)
          IdentifierType: names=['int'] (at None)
      Decl: name='_fns', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:264)
          PtrDecl: quals=[] (at pp.c:264)
            FuncDecl: quals=None (at pp.c:264)
              ParamList:  (at None)
                Typename: quals=[] (at None)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['void'] (at None)
              TypeDecl: declname='_fns', quals=[] (at pp.c:264)
                IdentifierType: names=['void'] (at None)
          Constant: type='int', value='32' (at pp.c:264)
  Decl: name=None, quals=[], storage=[] (at pp.c:274)
    Struct: name='__sbuf', packed=False (at pp.c:274)
      Decl: name='_base', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:275)
          TypeDecl: declname='_base', quals=[] (at pp.c:275)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='_size', quals=[], storage=[] (at 0)
        TypeDecl: declname='_size', quals=[] (at pp.c:276)
          IdentifierType: names=['int'] (at None)
  Typedef: name='_fpos_t', quals=[], storage=['typedef'] (at pp.c:284)
    TypeDecl: declname='_fpos_t', quals=[] (at pp.c:284)
      IdentifierType: names=['long'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:286)
    Struct: name='__sFILE', packed=False (at pp.c:286)
      Decl: name='_p', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:287)
          TypeDecl: declname='_p', quals=[] (at pp.c:287)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='_r', quals=[], storage=[] (at 0)
        TypeDecl: declname='_r', quals=[] (at pp.c:288)
          IdentifierType: names=['int'] (at None)
      Decl: name='_w', quals=[], storage=[] (at 0)
        TypeDecl: declname='_w', quals=[] (at pp.c:289)
          IdentifierType: names=['int'] (at None)
      Decl: name='_flags', quals=[], storage=[] (at 0)
        TypeDecl: declname='_flags', quals=[] (at pp.c:290)
          IdentifierType: names=['short'] (at None)
      Decl: name='_file', quals=[], storage=[] (at 0)
        TypeDecl: declname='_file', quals=[] (at pp.c:291)
          IdentifierType: names=['short'] (at None)
      Decl: name='_bf', quals=[], storage=[] (at 0)
        TypeDecl: declname='_bf', quals=[] (at pp.c:292)
          Struct: name='__sbuf', packed=False (at pp.c:292)
      Decl: name='_lbfsize', quals=[], storage=[] (at 0)
        TypeDecl: declname='_lbfsize', quals=[] (at pp.c:293)
          IdentifierType: names=['int'] (at None)
      Decl: name='_cookie', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:296)
          TypeDecl: declname='_cookie', quals=[] (at pp.c:296)
            IdentifierType: names=['void'] (at None)
      Decl: name='_read', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:298)
          FuncDecl: quals=None (at pp.c:298)
            ParamList:  (at pp.c:298)
              Decl: name='_cookie', quals=[], storage=[] (at pp.c:298)
                PtrDecl: quals=[] (at pp.c:298)
                  TypeDecl: declname='_cookie', quals=[] (at pp.c:298)
                    IdentifierType: names=['void'] (at None)
              Decl: name='_buf', quals=[], storage=[] (at pp.c:298)
                PtrDecl: quals=[] (at pp.c:298)
                  TypeDecl: declname='_buf', quals=[] (at pp.c:298)
                    IdentifierType: names=['char'] (at None)
              Decl: name='_n', quals=[], storage=[] (at pp.c:298)
                TypeDecl: declname='_n', quals=[] (at pp.c:298)
                  IdentifierType: names=['int'] (at None)
            TypeDecl: declname='_read', quals=[] (at pp.c:298)
              IdentifierType: names=['int'] (at None)
      Decl: name='_write', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:299)
          FuncDecl: quals=None (at pp.c:299)
            ParamList:  (at pp.c:299)
              Decl: name='_cookie', quals=[], storage=[] (at pp.c:299)
                PtrDecl: quals=[] (at pp.c:299)
                  TypeDecl: declname='_cookie', quals=[] (at pp.c:299)
                    IdentifierType: names=['void'] (at None)
              Decl: name='_buf', quals=['const'], storage=[] (at pp.c:299)
                PtrDecl: quals=[] (at pp.c:299)
                  TypeDecl: declname='_buf', quals=['const'] (at pp.c:299)
                    IdentifierType: names=['char'] (at None)
              Decl: name='_n', quals=[], storage=[] (at pp.c:299)
                TypeDecl: declname='_n', quals=[] (at pp.c:299)
                  IdentifierType: names=['int'] (at None)
            TypeDecl: declname='_write', quals=[] (at pp.c:299)
              IdentifierType: names=['int'] (at None)
      Decl: name='_seek', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:301)
          FuncDecl: quals=None (at pp.c:301)
            ParamList:  (at pp.c:301)
              Decl: name='_cookie', quals=[], storage=[] (at pp.c:301)
                PtrDecl: quals=[] (at pp.c:301)
                  TypeDecl: declname='_cookie', quals=[] (at pp.c:301)
                    IdentifierType: names=['void'] (at None)
              Decl: name='_offset', quals=[], storage=[] (at pp.c:301)
                TypeDecl: declname='_offset', quals=[] (at pp.c:301)
                  IdentifierType: names=['_fpos_t'] (at None)
              Decl: name='_whence', quals=[], storage=[] (at pp.c:301)
                TypeDecl: declname='_whence', quals=[] (at pp.c:301)
                  IdentifierType: names=['int'] (at None)
            TypeDecl: declname='_seek', quals=[] (at pp.c:301)
              IdentifierType: names=['_fpos_t'] (at None)
      Decl: name='_close', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:302)
          FuncDecl: quals=None (at pp.c:302)
            ParamList:  (at pp.c:302)
              Decl: name='_cookie', quals=[], storage=[] (at pp.c:302)
                PtrDecl: quals=[] (at pp.c:302)
                  TypeDecl: declname='_cookie', quals=[] (at pp.c:302)
                    IdentifierType: names=['void'] (at None)
            TypeDecl: declname='_close', quals=[] (at pp.c:302)
              IdentifierType: names=['int'] (at None)
      Decl: name='_ub', quals=[], storage=[] (at 0)
        TypeDecl: declname='_ub', quals=[] (at pp.c:305)
          Struct: name='__sbuf', packed=False (at pp.c:305)
      Decl: name='_up', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:306)
          TypeDecl: declname='_up', quals=[] (at pp.c:306)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='_ur', quals=[], storage=[] (at 0)
        TypeDecl: declname='_ur', quals=[] (at pp.c:307)
          IdentifierType: names=['int'] (at None)
      Decl: name='_ubuf', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:310)
          TypeDecl: declname='_ubuf', quals=[] (at pp.c:310)
            IdentifierType: names=['char', 'unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:310)
      Decl: name='_nbuf', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:311)
          TypeDecl: declname='_nbuf', quals=[] (at pp.c:311)
            IdentifierType: names=['char', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:311)
      Decl: name='_lb', quals=[], storage=[] (at 0)
        TypeDecl: declname='_lb', quals=[] (at pp.c:314)
          Struct: name='__sbuf', packed=False (at pp.c:314)
      Decl: name='_blksize', quals=[], storage=[] (at 0)
        TypeDecl: declname='_blksize', quals=[] (at pp.c:317)
          IdentifierType: names=['int'] (at None)
      Decl: name='_offset', quals=[], storage=[] (at 0)
        TypeDecl: declname='_offset', quals=[] (at pp.c:318)
          IdentifierType: names=['int'] (at None)
      Decl: name='_data', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:320)
          TypeDecl: declname='_data', quals=[] (at pp.c:320)
            Struct: name='_reent', packed=False (at pp.c:320)
  Decl: name=None, quals=[], storage=[] (at pp.c:323)
    Struct: name='_rand48', packed=False (at pp.c:323)
      Decl: name='_seed', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:324)
          TypeDecl: declname='_seed', quals=[] (at pp.c:324)
            IdentifierType: names=['short', 'unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:324)
      Decl: name='_mult', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:325)
          TypeDecl: declname='_mult', quals=[] (at pp.c:325)
            IdentifierType: names=['short', 'unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:325)
      Decl: name='_add', quals=[], storage=[] (at 0)
        TypeDecl: declname='_add', quals=[] (at pp.c:326)
          IdentifierType: names=['short', 'unsigned'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:337)
    Struct: name='_reent', packed=False (at pp.c:337)
      Decl: name='_errno', quals=[], storage=[] (at 0)
        TypeDecl: declname='_errno', quals=[] (at pp.c:340)
          IdentifierType: names=['int'] (at None)
      Decl: name='_stdin', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:345)
          TypeDecl: declname='_stdin', quals=[] (at pp.c:345)
            Struct: name='__sFILE', packed=False (at pp.c:345)
      Decl: name='_stdout', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:345)
          TypeDecl: declname='_stdout', quals=[] (at pp.c:345)
            Struct: name='__sFILE', packed=False (at pp.c:345)
      Decl: name='_stderr', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:345)
          TypeDecl: declname='_stderr', quals=[] (at pp.c:345)
            Struct: name='__sFILE', packed=False (at pp.c:345)
      Decl: name='_inc', quals=[], storage=[] (at 0)
        TypeDecl: declname='_inc', quals=[] (at pp.c:347)
          IdentifierType: names=['int'] (at None)
      Decl: name='_emergency', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:348)
          TypeDecl: declname='_emergency', quals=[] (at pp.c:348)
            IdentifierType: names=['char'] (at None)
          Constant: type='int', value='25' (at pp.c:348)
      Decl: name='_current_category', quals=[], storage=[] (at 0)
        TypeDecl: declname='_current_category', quals=[] (at pp.c:350)
          IdentifierType: names=['int'] (at None)
      Decl: name='_current_locale', quals=['const'], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:351)
          TypeDecl: declname='_current_locale', quals=['const'] (at pp.c:351)
            IdentifierType: names=['char'] (at None)
      Decl: name='__sdidinit', quals=[], storage=[] (at 0)
        TypeDecl: declname='__sdidinit', quals=[] (at pp.c:353)
          IdentifierType: names=['int'] (at None)
      Decl: name='__cleanup', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:355)
          FuncDecl: quals=None (at pp.c:355)
            ParamList:  (at pp.c:355)
              Decl: name='arg_0x10079c0c8', quals=[], storage=[] (at pp.c:355)
                PtrDecl: quals=[] (at pp.c:355)
                  TypeDecl: declname='arg_0x10079c0c8', quals=[] (at pp.c:355)
                    Struct: name='_reent', packed=False (at pp.c:355)
            TypeDecl: declname='__cleanup', quals=[] (at pp.c:355)
              IdentifierType: names=['void'] (at None)
      Decl: name='_result', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:358)
          TypeDecl: declname='_result', quals=[] (at pp.c:358)
            Struct: name='_Bigint', packed=False (at pp.c:358)
      Decl: name='_result_k', quals=[], storage=[] (at 0)
        TypeDecl: declname='_result_k', quals=[] (at pp.c:359)
          IdentifierType: names=['int'] (at None)
      Decl: name='_p5s', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:360)
          TypeDecl: declname='_p5s', quals=[] (at pp.c:360)
            Struct: name='_Bigint', packed=False (at pp.c:360)
      Decl: name='_freelist', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:361)
          PtrDecl: quals=[] (at pp.c:361)
            TypeDecl: declname='_freelist', quals=[] (at pp.c:361)
              Struct: name='_Bigint', packed=False (at pp.c:361)
      Decl: name='_cvtlen', quals=[], storage=[] (at 0)
        TypeDecl: declname='_cvtlen', quals=[] (at pp.c:364)
          IdentifierType: names=['int'] (at None)
      Decl: name='_cvtbuf', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:365)
          TypeDecl: declname='_cvtbuf', quals=[] (at pp.c:365)
            IdentifierType: names=['char'] (at None)
      Decl: name='_new', quals=[], storage=[] (at 0)
        TypeDecl: declname='_new', quals=[] (at pp.c:388)
          Union: name='__nesc_unnamed4244', packed=False (at pp.c:367)
            Decl: name='_reent', quals=[], storage=[] (at 0)
              TypeDecl: declname='_reent', quals=[] (at pp.c:378)
                Struct: name='__nesc_unnamed4245', packed=False (at pp.c:369)
                  Decl: name='_unused_rand', quals=[], storage=[] (at 0)
                    TypeDecl: declname='_unused_rand', quals=[] (at pp.c:371)
                      IdentifierType: names=['int', 'unsigned'] (at None)
                  Decl: name='_strtok_last', quals=[], storage=[] (at 0)
                    PtrDecl: quals=[] (at pp.c:372)
                      TypeDecl: declname='_strtok_last', quals=[] (at pp.c:372)
                        IdentifierType: names=['char'] (at None)
                  Decl: name='_asctime_buf', quals=[], storage=[] (at 0)
                    ArrayDecl:  (at pp.c:373)
                      TypeDecl: declname='_asctime_buf', quals=[] (at pp.c:373)
                        IdentifierType: names=['char'] (at None)
                      Constant: type='int', value='26' (at pp.c:373)
                  Decl: name='_localtime_buf', quals=[], storage=[] (at 0)
                    TypeDecl: declname='_localtime_buf', quals=[] (at pp.c:374)
                      Struct: name='__tm', packed=False (at pp.c:374)
                  Decl: name='_gamma_signgam', quals=[], storage=[] (at 0)
                    TypeDecl: declname='_gamma_signgam', quals=[] (at pp.c:375)
                      IdentifierType: names=['int'] (at None)
                  Decl: name='_rand_next', quals=[], storage=[] (at 0)
                    TypeDecl: declname='_rand_next', quals=[] (at pp.c:376)
                      IdentifierType: names=['long', 'long', 'unsigned'] (at None)
                  Decl: name='_r48', quals=[], storage=[] (at 0)
                    TypeDecl: declname='_r48', quals=[] (at pp.c:377)
                      Struct: name='_rand48', packed=False (at pp.c:377)
            Decl: name='_unused', quals=[], storage=[] (at 0)
              TypeDecl: declname='_unused', quals=[] (at pp.c:387)
                Struct: name='__nesc_unnamed4246', packed=False (at pp.c:382)
                  Decl: name='_nextf', quals=[], storage=[] (at 0)
                    ArrayDecl:  (at pp.c:385)
                      PtrDecl: quals=[] (at pp.c:385)
                        TypeDecl: declname='_nextf', quals=[] (at pp.c:385)
                          IdentifierType: names=['char', 'unsigned'] (at None)
                      Constant: type='int', value='30' (at pp.c:385)
                  Decl: name='_nmalloc', quals=[], storage=[] (at 0)
                    ArrayDecl:  (at pp.c:386)
                      TypeDecl: declname='_nmalloc', quals=[] (at pp.c:386)
                        IdentifierType: names=['int', 'unsigned'] (at None)
                      Constant: type='int', value='30' (at pp.c:386)
      Decl: name='_atexit', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:391)
          TypeDecl: declname='_atexit', quals=[] (at pp.c:391)
            Struct: name='_atexit', packed=False (at pp.c:391)
      Decl: name='_atexit0', quals=[], storage=[] (at 0)
        TypeDecl: declname='_atexit0', quals=[] (at pp.c:392)
          Struct: name='_atexit', packed=False (at pp.c:392)
      Decl: name='_sig_func', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:395)
          PtrDecl: quals=[] (at pp.c:395)
            FuncDecl: quals=None (at pp.c:395)
              ParamList:  (at pp.c:395)
                Decl: name='arg_0x10079f180', quals=[], storage=[] (at pp.c:395)
                  TypeDecl: declname='arg_0x10079f180', quals=[] (at pp.c:395)
                    IdentifierType: names=['int'] (at None)
              TypeDecl: declname='_sig_func', quals=[] (at pp.c:395)
                IdentifierType: names=['void'] (at None)
      Decl: name='__sglue', quals=[], storage=[] (at 0)
        TypeDecl: declname='__sglue', quals=[] (at pp.c:400)
          Struct: name='_glue', packed=False (at pp.c:400)
      Decl: name='__sf', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:401)
          TypeDecl: declname='__sf', quals=[] (at pp.c:401)
            Struct: name='__sFILE', packed=False (at pp.c:401)
          Constant: type='int', value='3' (at pp.c:401)
  Decl: name=None, quals=[], storage=[] (at pp.c:404)
    Struct: name='_reent', packed=False (at pp.c:404)
  Decl: name=None, quals=[], storage=[] (at pp.c:406)
    Union: name='__dmath', packed=False (at pp.c:406)
      Decl: name='i', quals=[], storage=[] (at 0)
        ArrayDecl:  (at pp.c:408)
          TypeDecl: declname='i', quals=[] (at pp.c:408)
            IdentifierType: names=['__uint32_t'] (at None)
          Constant: type='int', value='2' (at pp.c:408)
      Decl: name='d', quals=[], storage=[] (at 0)
        TypeDecl: declname='d', quals=[] (at pp.c:409)
          IdentifierType: names=['double'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:415)
    Union: name='__dmath', packed=False (at pp.c:415)
  Decl: name=None, quals=[], storage=[] (at pp.c:417)
    Struct: name='exception', packed=False (at pp.c:417)
      Decl: name='type', quals=[], storage=[] (at 0)
        TypeDecl: declname='type', quals=[] (at pp.c:420)
          IdentifierType: names=['int'] (at None)
      Decl: name='name', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:421)
          TypeDecl: declname='name', quals=[] (at pp.c:421)
            IdentifierType: names=['char'] (at None)
      Decl: name='arg1', quals=[], storage=[] (at 0)
        TypeDecl: declname='arg1', quals=[] (at pp.c:422)
          IdentifierType: names=['double'] (at None)
      Decl: name='arg2', quals=[], storage=[] (at 0)
        TypeDecl: declname='arg2', quals=[] (at pp.c:423)
          IdentifierType: names=['double'] (at None)
      Decl: name='retval', quals=[], storage=[] (at 0)
        TypeDecl: declname='retval', quals=[] (at pp.c:424)
          IdentifierType: names=['double'] (at None)
      Decl: name='err', quals=[], storage=[] (at 0)
        TypeDecl: declname='err', quals=[] (at pp.c:425)
          IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:428)
    Enum: name='__fdlibm_version' (at pp.c:428)
      EnumeratorList:  (at pp.c:430)
        Enumerator: name='__fdlibm_ieee' (at pp.c:430)
          UnaryOp: op='-' (at pp.c:430)
            Constant: type='int', value='1' (at pp.c:430)
        Enumerator: name='__fdlibm_svid' (at pp.c:431)
        Enumerator: name='__fdlibm_xopen' (at pp.c:432)
        Enumerator: name='__fdlibm_posix' (at pp.c:433)
  Decl: name=None, quals=[], storage=[] (at pp.c:439)
    Enum: name='__fdlibm_version' (at pp.c:439)
  Typedef: name='bool', quals=[], storage=['typedef'] (at pp.c:441)
    TypeDecl: declname='bool', quals=[] (at pp.c:441)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:442)
    Enum: name='__nesc_unnamed4247' (at pp.c:442)
      EnumeratorList:  (at pp.c:444)
        Enumerator: name='FALSE' (at pp.c:444)
          Constant: type='int', value='0' (at pp.c:444)
        Enumerator: name='TRUE' (at pp.c:444)
          Constant: type='int', value='1' (at pp.c:444)
  Typedef: name='nx_bool', quals=[], storage=['typedef'] (at pp.c:446)
    TypeDecl: declname='nx_bool', quals=[] (at pp.c:446)
      IdentifierType: names=['nx_int8_t'] (at None)
  Decl: name='TOS_NODE_ID', quals=[], storage=[] (at pp.c:447)
    TypeDecl: declname='TOS_NODE_ID', quals=[] (at pp.c:447)
      IdentifierType: names=['uint16_t'] (at None)
    Constant: type='int', value='1' (at pp.c:447)
  Decl: name=None, quals=[], storage=[] (at pp.c:454)
    Struct: name='__nesc_attr_atmostonce', packed=False (at pp.c:454)
  Decl: name=None, quals=[], storage=[] (at pp.c:457)
    Struct: name='__nesc_attr_atleastonce', packed=False (at pp.c:457)
  Decl: name=None, quals=[], storage=[] (at pp.c:460)
    Struct: name='__nesc_attr_exactlyonce', packed=False (at pp.c:460)
  Decl: name=None, quals=[], storage=[] (at pp.c:463)
    Enum: name='__nesc_unnamed4248' (at pp.c:463)
      EnumeratorList:  (at pp.c:464)
        Enumerator: name='SUCCESS' (at pp.c:464)
          Constant: type='int', value='0' (at pp.c:464)
        Enumerator: name='FAIL' (at pp.c:465)
          Constant: type='int', value='1' (at pp.c:465)
        Enumerator: name='ESIZE' (at pp.c:466)
          Constant: type='int', value='2' (at pp.c:466)
        Enumerator: name='ECANCEL' (at pp.c:467)
          Constant: type='int', value='3' (at pp.c:467)
        Enumerator: name='EOFF' (at pp.c:468)
          Constant: type='int', value='4' (at pp.c:468)
        Enumerator: name='EBUSY' (at pp.c:469)
          Constant: type='int', value='5' (at pp.c:469)
        Enumerator: name='EINVAL' (at pp.c:470)
          Constant: type='int', value='6' (at pp.c:470)
        Enumerator: name='ERETRY' (at pp.c:471)
          Constant: type='int', value='7' (at pp.c:471)
        Enumerator: name='ERESERVE' (at pp.c:472)
          Constant: type='int', value='8' (at pp.c:472)
        Enumerator: name='EALREADY' (at pp.c:473)
          Constant: type='int', value='9' (at pp.c:473)
        Enumerator: name='ENOMEM' (at pp.c:474)
          Constant: type='int', value='10' (at pp.c:474)
        Enumerator: name='ENOACK' (at pp.c:475)
          Constant: type='int', value='11' (at pp.c:475)
        Enumerator: name='ELAST' (at pp.c:476)
          Constant: type='int', value='11' (at pp.c:476)
  Typedef: name='error_t', quals=[], storage=['typedef'] (at pp.c:479)
    TypeDecl: declname='error_t', quals=[] (at pp.c:479)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='ecombine', quals=[], storage=['inline', 'static'] (at pp.c:481)
    FuncDecl: quals=None (at pp.c:481)
      ParamList:  (at pp.c:481)
        Decl: name='r1', quals=[], storage=[] (at pp.c:481)
          TypeDecl: declname='r1', quals=[] (at pp.c:481)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='r2', quals=[], storage=[] (at pp.c:481)
          TypeDecl: declname='r2', quals=[] (at pp.c:481)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='ecombine', quals=[] (at pp.c:481)
        IdentifierType: names=['error_t'] (at None)
  Typedef: name='ioregister_t', quals=[], storage=['typedef'] (at pp.c:496)
    TypeDecl: declname='ioregister_t', quals=[] (at pp.c:496)
      Union: name='port', packed=True (at pp.c:484)
        Decl: name='reg_p', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='reg_p', quals=['volatile'] (at pp.c:485)
            IdentifierType: names=['char', 'unsigned'] (at None)
        Decl: name='__pin', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='__pin', quals=['volatile'] (at pp.c:495)
            Struct: name='__nesc_unnamed4249', packed=False (at pp.c:486)
              Decl: name='__p0', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p0', quals=[] (at pp.c:487)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:487)
              Decl: name='__p1', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p1', quals=[] (at pp.c:488)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:488)
              Decl: name='__p2', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p2', quals=[] (at pp.c:489)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:489)
              Decl: name='__p3', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p3', quals=[] (at pp.c:490)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:490)
              Decl: name='__p4', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p4', quals=[] (at pp.c:491)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:491)
              Decl: name='__p5', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p5', quals=[] (at pp.c:492)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:492)
              Decl: name='__p6', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p6', quals=[] (at pp.c:493)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:493)
              Decl: name='__p7', quals=[], storage=[] (at 0)
                TypeDecl: declname='__p7', quals=[] (at pp.c:494)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                Constant: type='int', value='1' (at pp.c:494)
  Decl: name=None, quals=[], storage=[] (at pp.c:498)
    Struct: name='port_full_t', packed=False (at pp.c:498)
      Decl: name='in', quals=[], storage=[] (at 0)
        TypeDecl: declname='in', quals=[] (at pp.c:499)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='out', quals=[], storage=[] (at 0)
        TypeDecl: declname='out', quals=[] (at pp.c:500)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='dir', quals=[], storage=[] (at 0)
        TypeDecl: declname='dir', quals=[] (at pp.c:501)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='ifg', quals=[], storage=[] (at 0)
        TypeDecl: declname='ifg', quals=[] (at pp.c:502)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='ies', quals=[], storage=[] (at 0)
        TypeDecl: declname='ies', quals=[] (at pp.c:503)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='ie', quals=[], storage=[] (at 0)
        TypeDecl: declname='ie', quals=[] (at pp.c:504)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='sel', quals=[], storage=[] (at 0)
        TypeDecl: declname='sel', quals=[] (at pp.c:505)
          IdentifierType: names=['ioregister_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:516)
    Struct: name='port_simple_t', packed=False (at pp.c:516)
      Decl: name='in', quals=[], storage=[] (at 0)
        TypeDecl: declname='in', quals=[] (at pp.c:517)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='out', quals=[], storage=[] (at 0)
        TypeDecl: declname='out', quals=[] (at pp.c:518)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='dir', quals=[], storage=[] (at 0)
        TypeDecl: declname='dir', quals=[] (at pp.c:519)
          IdentifierType: names=['ioregister_t'] (at None)
      Decl: name='sel', quals=[], storage=[] (at 0)
        TypeDecl: declname='sel', quals=[] (at pp.c:520)
          IdentifierType: names=['ioregister_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:526)
    Struct: name='port_full_t', packed=False (at pp.c:526)
  Decl: name=None, quals=[], storage=[] (at pp.c:530)
    Struct: name='port_full_t', packed=False (at pp.c:530)
  Decl: name=None, quals=[], storage=[] (at pp.c:534)
    Struct: name='port_simple_t', packed=False (at pp.c:534)
  Decl: name=None, quals=[], storage=[] (at pp.c:538)
    Struct: name='port_simple_t', packed=False (at pp.c:538)
  Decl: name=None, quals=[], storage=[] (at pp.c:542)
    Struct: name='port_simple_t', packed=False (at pp.c:542)
  Decl: name=None, quals=[], storage=[] (at pp.c:546)
    Struct: name='port_simple_t', packed=False (at pp.c:546)
  Decl: name='P1OUT@"0x0021"', quals=['volatile'], storage=[] (at pp.c:548)
    TypeDecl: declname='P1OUT@"0x0021"', quals=['volatile'] (at pp.c:548)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P1DIR@"0x0022"', quals=['volatile'], storage=[] (at pp.c:550)
    TypeDecl: declname='P1DIR@"0x0022"', quals=['volatile'] (at pp.c:550)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P1IFG@"0x0023"', quals=['volatile'], storage=[] (at pp.c:552)
    TypeDecl: declname='P1IFG@"0x0023"', quals=['volatile'] (at pp.c:552)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P1IES@"0x0024"', quals=['volatile'], storage=[] (at pp.c:554)
    TypeDecl: declname='P1IES@"0x0024"', quals=['volatile'] (at pp.c:554)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P1IE@"0x0025"', quals=['volatile'], storage=[] (at pp.c:556)
    TypeDecl: declname='P1IE@"0x0025"', quals=['volatile'] (at pp.c:556)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P1SEL@"0x0026"', quals=['volatile'], storage=[] (at pp.c:558)
    TypeDecl: declname='P1SEL@"0x0026"', quals=['volatile'] (at pp.c:558)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P2OUT@"0x0029"', quals=['volatile'], storage=[] (at pp.c:569)
    TypeDecl: declname='P2OUT@"0x0029"', quals=['volatile'] (at pp.c:569)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P2DIR@"0x002A"', quals=['volatile'], storage=[] (at pp.c:571)
    TypeDecl: declname='P2DIR@"0x002A"', quals=['volatile'] (at pp.c:571)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P2IFG@"0x002B"', quals=['volatile'], storage=[] (at pp.c:573)
    TypeDecl: declname='P2IFG@"0x002B"', quals=['volatile'] (at pp.c:573)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P2IE@"0x002D"', quals=['volatile'], storage=[] (at pp.c:577)
    TypeDecl: declname='P2IE@"0x002D"', quals=['volatile'] (at pp.c:577)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P2SEL@"0x002E"', quals=['volatile'], storage=[] (at pp.c:579)
    TypeDecl: declname='P2SEL@"0x002E"', quals=['volatile'] (at pp.c:579)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P3OUT@"0x0019"', quals=['volatile'], storage=[] (at pp.c:590)
    TypeDecl: declname='P3OUT@"0x0019"', quals=['volatile'] (at pp.c:590)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P3DIR@"0x001A"', quals=['volatile'], storage=[] (at pp.c:592)
    TypeDecl: declname='P3DIR@"0x001A"', quals=['volatile'] (at pp.c:592)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P3SEL@"0x001B"', quals=['volatile'], storage=[] (at pp.c:594)
    TypeDecl: declname='P3SEL@"0x001B"', quals=['volatile'] (at pp.c:594)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P4OUT@"0x001D"', quals=['volatile'], storage=[] (at pp.c:605)
    TypeDecl: declname='P4OUT@"0x001D"', quals=['volatile'] (at pp.c:605)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P4DIR@"0x001E"', quals=['volatile'], storage=[] (at pp.c:607)
    TypeDecl: declname='P4DIR@"0x001E"', quals=['volatile'] (at pp.c:607)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P4SEL@"0x001F"', quals=['volatile'], storage=[] (at pp.c:609)
    TypeDecl: declname='P4SEL@"0x001F"', quals=['volatile'] (at pp.c:609)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P5OUT@"0x0031"', quals=['volatile'], storage=[] (at pp.c:620)
    TypeDecl: declname='P5OUT@"0x0031"', quals=['volatile'] (at pp.c:620)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P5DIR@"0x0032"', quals=['volatile'], storage=[] (at pp.c:622)
    TypeDecl: declname='P5DIR@"0x0032"', quals=['volatile'] (at pp.c:622)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P5SEL@"0x0033"', quals=['volatile'], storage=[] (at pp.c:624)
    TypeDecl: declname='P5SEL@"0x0033"', quals=['volatile'] (at pp.c:624)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P6OUT@"0x0035"', quals=['volatile'], storage=[] (at pp.c:635)
    TypeDecl: declname='P6OUT@"0x0035"', quals=['volatile'] (at pp.c:635)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P6DIR@"0x0036"', quals=['volatile'], storage=[] (at pp.c:637)
    TypeDecl: declname='P6DIR@"0x0036"', quals=['volatile'] (at pp.c:637)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='P6SEL@"0x0037"', quals=['volatile'], storage=[] (at pp.c:639)
    TypeDecl: declname='P6SEL@"0x0037"', quals=['volatile'] (at pp.c:639)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U0CTL@"0x0070"', quals=['volatile'], storage=[] (at pp.c:641)
    TypeDecl: declname='U0CTL@"0x0070"', quals=['volatile'] (at pp.c:641)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U0TCTL@"0x0071"', quals=['volatile'], storage=[] (at pp.c:643)
    TypeDecl: declname='U0TCTL@"0x0071"', quals=['volatile'] (at pp.c:643)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U0MCTL@"0x0073"', quals=['volatile'], storage=[] (at pp.c:647)
    TypeDecl: declname='U0MCTL@"0x0073"', quals=['volatile'] (at pp.c:647)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U0BR0@"0x0074"', quals=['volatile'], storage=[] (at pp.c:649)
    TypeDecl: declname='U0BR0@"0x0074"', quals=['volatile'] (at pp.c:649)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U0BR1@"0x0075"', quals=['volatile'], storage=[] (at pp.c:651)
    TypeDecl: declname='U0BR1@"0x0075"', quals=['volatile'] (at pp.c:651)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U0RXBUF@"0x0076"', quals=['volatile'], storage=[] (at pp.c:653)
    TypeDecl: declname='U0RXBUF@"0x0076"', quals=['volatile'] (at pp.c:653)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U1TCTL@"0x0079"', quals=['volatile'], storage=[] (at pp.c:655)
    TypeDecl: declname='U1TCTL@"0x0079"', quals=['volatile'] (at pp.c:655)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='TA0CTL@"0x0160"', quals=['volatile'], storage=[] (at pp.c:657)
    TypeDecl: declname='TA0CTL@"0x0160"', quals=['volatile'] (at pp.c:657)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TA0R@"0x0170"', quals=['volatile'], storage=[] (at pp.c:659)
    TypeDecl: declname='TA0R@"0x0170"', quals=['volatile'] (at pp.c:659)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TA0CCTL0@"0x0162"', quals=['volatile'], storage=[] (at pp.c:662)
    TypeDecl: declname='TA0CCTL0@"0x0162"', quals=['volatile'] (at pp.c:662)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TA0CCTL1@"0x0164"', quals=['volatile'], storage=[] (at pp.c:664)
    TypeDecl: declname='TA0CCTL1@"0x0164"', quals=['volatile'] (at pp.c:664)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TA0CCTL2@"0x0166"', quals=['volatile'], storage=[] (at pp.c:666)
    TypeDecl: declname='TA0CCTL2@"0x0166"', quals=['volatile'] (at pp.c:666)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='tactl_t', quals=[], storage=['typedef'] (at pp.c:678)
    TypeDecl: declname='tactl_t', quals=[] (at pp.c:678)
      Struct: name='__nesc_unnamed4250', packed=True (at pp.c:669)
        Decl: name='taifg', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='taifg', quals=['volatile'] (at pp.c:671)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:671)
        Decl: name='taie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='taie', quals=['volatile'] (at pp.c:672)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:672)
        Decl: name='taclr', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='taclr', quals=['volatile'] (at pp.c:673)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:673)
        Decl: name='dummy', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='dummy', quals=['volatile'] (at pp.c:674)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:674)
        Decl: name='tamc', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tamc', quals=['volatile'] (at pp.c:675)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:675)
        Decl: name='taid', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='taid', quals=['volatile'] (at pp.c:676)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:676)
        Decl: name='tassel', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tassel', quals=['volatile'] (at pp.c:677)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:677)
  Typedef: name='tacctl_t', quals=[], storage=['typedef'] (at pp.c:695)
    TypeDecl: declname='tacctl_t', quals=[] (at pp.c:695)
      Struct: name='__nesc_unnamed4251', packed=True (at pp.c:681)
        Decl: name='ccifg', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccifg', quals=['volatile'] (at pp.c:683)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:683)
        Decl: name='cov', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cov', quals=['volatile'] (at pp.c:684)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:684)
        Decl: name='out', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='out', quals=['volatile'] (at pp.c:685)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:685)
        Decl: name='cci', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cci', quals=['volatile'] (at pp.c:686)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:686)
        Decl: name='ccie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccie', quals=['volatile'] (at pp.c:687)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:687)
        Decl: name='outmod', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='outmod', quals=['volatile'] (at pp.c:688)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:688)
        Decl: name='cap', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cap', quals=['volatile'] (at pp.c:689)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:689)
        Decl: name='dummy', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='dummy', quals=['volatile'] (at pp.c:690)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:690)
        Decl: name='scci', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='scci', quals=['volatile'] (at pp.c:691)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:691)
        Decl: name='scs', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='scs', quals=['volatile'] (at pp.c:692)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:692)
        Decl: name='ccis', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccis', quals=['volatile'] (at pp.c:693)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:693)
        Decl: name='cm', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cm', quals=['volatile'] (at pp.c:694)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:694)
  Decl: name=None, quals=[], storage=[] (at pp.c:698)
    Struct: name='timera_t', packed=False (at pp.c:698)
      Decl: name='ctl', quals=[], storage=[] (at 0)
        TypeDecl: declname='ctl', quals=[] (at pp.c:699)
          IdentifierType: names=['tactl_t'] (at None)
      Decl: name='cctl0', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl0', quals=[] (at pp.c:700)
          IdentifierType: names=['tacctl_t'] (at None)
      Decl: name='cctl1', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl1', quals=[] (at pp.c:701)
          IdentifierType: names=['tacctl_t'] (at None)
      Decl: name='cctl2', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl2', quals=[] (at pp.c:702)
          IdentifierType: names=['tacctl_t'] (at None)
      Decl: name='dummy', quals=['volatile'], storage=[] (at 0)
        ArrayDecl:  (at pp.c:703)
          TypeDecl: declname='dummy', quals=['volatile'] (at pp.c:703)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:703)
      Decl: name='tar', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tar', quals=['volatile'] (at pp.c:704)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='taccr0', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='taccr0', quals=['volatile'] (at pp.c:705)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='taccr1', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='taccr1', quals=['volatile'] (at pp.c:706)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='taccr2', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='taccr2', quals=['volatile'] (at pp.c:707)
          IdentifierType: names=['unsigned'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:712)
    Struct: name='timera_t', packed=False (at pp.c:712)
  Decl: name='TBR@"0x0190"', quals=['volatile'], storage=[] (at pp.c:714)
    TypeDecl: declname='TBR@"0x0190"', quals=['volatile'] (at pp.c:714)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TBCCTL0@"0x0182"', quals=['volatile'], storage=[] (at pp.c:717)
    TypeDecl: declname='TBCCTL0@"0x0182"', quals=['volatile'] (at pp.c:717)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='TBCCR0@"0x0192"', quals=['volatile'], storage=[] (at pp.c:723)
    TypeDecl: declname='TBCCR0@"0x0192"', quals=['volatile'] (at pp.c:723)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='tbctl_t', quals=[], storage=['typedef'] (at pp.c:738)
    TypeDecl: declname='tbctl_t', quals=[] (at pp.c:738)
      Struct: name='__nesc_unnamed4252', packed=True (at pp.c:726)
        Decl: name='tbifg', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbifg', quals=['volatile'] (at pp.c:728)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:728)
        Decl: name='tbie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbie', quals=['volatile'] (at pp.c:729)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:729)
        Decl: name='tbclr', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbclr', quals=['volatile'] (at pp.c:730)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:730)
        Decl: name='dummy1', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='dummy1', quals=['volatile'] (at pp.c:731)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:731)
        Decl: name='tbmc', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbmc', quals=['volatile'] (at pp.c:732)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:732)
        Decl: name='tbid', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbid', quals=['volatile'] (at pp.c:733)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:733)
        Decl: name='tbssel', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbssel', quals=['volatile'] (at pp.c:734)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:734)
        Decl: name='dummy2', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='dummy2', quals=['volatile'] (at pp.c:735)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:735)
        Decl: name='tbcntl', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbcntl', quals=['volatile'] (at pp.c:736)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:736)
        Decl: name='tbclgrp', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='tbclgrp', quals=['volatile'] (at pp.c:737)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:737)
  Typedef: name='tbcctl_t', quals=[], storage=['typedef'] (at pp.c:754)
    TypeDecl: declname='tbcctl_t', quals=[] (at pp.c:754)
      Struct: name='__nesc_unnamed4253', packed=True (at pp.c:741)
        Decl: name='ccifg', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccifg', quals=['volatile'] (at pp.c:743)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:743)
        Decl: name='cov', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cov', quals=['volatile'] (at pp.c:744)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:744)
        Decl: name='out', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='out', quals=['volatile'] (at pp.c:745)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:745)
        Decl: name='cci', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cci', quals=['volatile'] (at pp.c:746)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:746)
        Decl: name='ccie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccie', quals=['volatile'] (at pp.c:747)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:747)
        Decl: name='outmod', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='outmod', quals=['volatile'] (at pp.c:748)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:748)
        Decl: name='cap', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cap', quals=['volatile'] (at pp.c:749)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:749)
        Decl: name='clld', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='clld', quals=['volatile'] (at pp.c:750)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:750)
        Decl: name='scs', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='scs', quals=['volatile'] (at pp.c:751)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:751)
        Decl: name='ccis', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='ccis', quals=['volatile'] (at pp.c:752)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:752)
        Decl: name='cm', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cm', quals=['volatile'] (at pp.c:753)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:753)
  Decl: name=None, quals=[], storage=[] (at pp.c:757)
    Struct: name='timerb_t', packed=False (at pp.c:757)
      Decl: name='ctl', quals=[], storage=[] (at 0)
        TypeDecl: declname='ctl', quals=[] (at pp.c:758)
          IdentifierType: names=['tbctl_t'] (at None)
      Decl: name='cctl0', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl0', quals=[] (at pp.c:759)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl1', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl1', quals=[] (at pp.c:760)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl2', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl2', quals=[] (at pp.c:761)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl3', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl3', quals=[] (at pp.c:763)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl4', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl4', quals=[] (at pp.c:764)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl5', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl5', quals=[] (at pp.c:765)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='cctl6', quals=[], storage=[] (at 0)
        TypeDecl: declname='cctl6', quals=[] (at pp.c:766)
          IdentifierType: names=['tbcctl_t'] (at None)
      Decl: name='tbr', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbr', quals=['volatile'] (at pp.c:770)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr0', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr0', quals=['volatile'] (at pp.c:771)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr1', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr1', quals=['volatile'] (at pp.c:772)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr2', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr2', quals=['volatile'] (at pp.c:773)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr3', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr3', quals=['volatile'] (at pp.c:775)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr4', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr4', quals=['volatile'] (at pp.c:776)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr5', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr5', quals=['volatile'] (at pp.c:777)
          IdentifierType: names=['unsigned'] (at None)
      Decl: name='tbccr6', quals=['volatile'], storage=[] (at 0)
        TypeDecl: declname='tbccr6', quals=['volatile'] (at pp.c:778)
          IdentifierType: names=['unsigned'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:785)
    Struct: name='timerb_t', packed=False (at pp.c:785)
  Decl: name='DCOCTL@"0x0056"', quals=['volatile'], storage=[] (at pp.c:787)
    TypeDecl: declname='DCOCTL@"0x0056"', quals=['volatile'] (at pp.c:787)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='BCSCTL1@"0x0057"', quals=['volatile'], storage=[] (at pp.c:789)
    TypeDecl: declname='BCSCTL1@"0x0057"', quals=['volatile'] (at pp.c:789)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='BCSCTL2@"0x0058"', quals=['volatile'], storage=[] (at pp.c:791)
    TypeDecl: declname='BCSCTL2@"0x0058"', quals=['volatile'] (at pp.c:791)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='ADC12CTL0@"0x01A0"', quals=['volatile'], storage=[] (at pp.c:793)
    TypeDecl: declname='ADC12CTL0@"0x01A0"', quals=['volatile'] (at pp.c:793)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Decl: name='ADC12CTL1@"0x01A2"', quals=['volatile'], storage=[] (at pp.c:795)
    TypeDecl: declname='ADC12CTL1@"0x01A2"', quals=['volatile'] (at pp.c:795)
      IdentifierType: names=['int', 'unsigned'] (at None)
  Typedef: name='adc12ctl0_t', quals=[], storage=['typedef'] (at pp.c:810)
    TypeDecl: declname='adc12ctl0_t', quals=[] (at pp.c:810)
      Struct: name='__nesc_unnamed4254', packed=True (at pp.c:798)
        Decl: name='adc12sc', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12sc', quals=['volatile'] (at pp.c:800)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:800)
        Decl: name='enc', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='enc', quals=['volatile'] (at pp.c:801)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:801)
        Decl: name='adc12tovie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12tovie', quals=['volatile'] (at pp.c:802)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:802)
        Decl: name='adc12ovie', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12ovie', quals=['volatile'] (at pp.c:803)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:803)
        Decl: name='adc12on', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12on', quals=['volatile'] (at pp.c:804)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:804)
        Decl: name='refon', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='refon', quals=['volatile'] (at pp.c:805)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:805)
        Decl: name='r2_5v', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='r2_5v', quals=['volatile'] (at pp.c:806)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:806)
        Decl: name='msc', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='msc', quals=['volatile'] (at pp.c:807)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:807)
        Decl: name='sht0', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='sht0', quals=['volatile'] (at pp.c:808)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:808)
        Decl: name='sht1', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='sht1', quals=['volatile'] (at pp.c:809)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:809)
  Typedef: name='adc12ctl1_t', quals=[], storage=['typedef'] (at pp.c:823)
    TypeDecl: declname='adc12ctl1_t', quals=[] (at pp.c:823)
      Struct: name='__nesc_unnamed4255', packed=True (at pp.c:813)
        Decl: name='adc12busy', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12busy', quals=['volatile'] (at pp.c:815)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:815)
        Decl: name='conseq', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='conseq', quals=['volatile'] (at pp.c:816)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:816)
        Decl: name='adc12ssel', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12ssel', quals=['volatile'] (at pp.c:817)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:817)
        Decl: name='adc12div', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='adc12div', quals=['volatile'] (at pp.c:818)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:818)
        Decl: name='issh', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='issh', quals=['volatile'] (at pp.c:819)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:819)
        Decl: name='shp', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='shp', quals=['volatile'] (at pp.c:820)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:820)
        Decl: name='shs', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='shs', quals=['volatile'] (at pp.c:821)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:821)
        Decl: name='cstartadd', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='cstartadd', quals=['volatile'] (at pp.c:822)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:822)
  Typedef: name='adc12xflg_t', quals=[], storage=['typedef'] (at pp.c:844)
    TypeDecl: declname='adc12xflg_t', quals=[] (at pp.c:844)
      Struct: name='__nesc_unnamed4256', packed=True (at pp.c:826)
        Decl: name='bit0', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit0', quals=['volatile'] (at pp.c:828)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:828)
        Decl: name='bit1', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit1', quals=['volatile'] (at pp.c:829)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:829)
        Decl: name='bit2', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit2', quals=['volatile'] (at pp.c:830)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:830)
        Decl: name='bit3', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit3', quals=['volatile'] (at pp.c:831)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:831)
        Decl: name='bit4', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit4', quals=['volatile'] (at pp.c:832)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:832)
        Decl: name='bit5', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit5', quals=['volatile'] (at pp.c:833)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:833)
        Decl: name='bit6', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit6', quals=['volatile'] (at pp.c:834)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:834)
        Decl: name='bit7', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit7', quals=['volatile'] (at pp.c:835)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:835)
        Decl: name='bit8', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit8', quals=['volatile'] (at pp.c:836)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:836)
        Decl: name='bit9', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit9', quals=['volatile'] (at pp.c:837)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:837)
        Decl: name='bit10', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit10', quals=['volatile'] (at pp.c:838)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:838)
        Decl: name='bit11', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit11', quals=['volatile'] (at pp.c:839)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:839)
        Decl: name='bit12', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit12', quals=['volatile'] (at pp.c:840)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:840)
        Decl: name='bit13', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit13', quals=['volatile'] (at pp.c:841)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:841)
        Decl: name='bit14', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit14', quals=['volatile'] (at pp.c:842)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:842)
        Decl: name='bit15', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='bit15', quals=['volatile'] (at pp.c:843)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:843)
  Decl: name=None, quals=[], storage=[] (at pp.c:847)
    Struct: name='adc12_t', packed=False (at pp.c:847)
      Decl: name='ctl0', quals=[], storage=[] (at 0)
        TypeDecl: declname='ctl0', quals=[] (at pp.c:848)
          IdentifierType: names=['adc12ctl0_t'] (at None)
      Decl: name='ctl1', quals=[], storage=[] (at 0)
        TypeDecl: declname='ctl1', quals=[] (at pp.c:849)
          IdentifierType: names=['adc12ctl1_t'] (at None)
      Decl: name='ifg', quals=[], storage=[] (at 0)
        TypeDecl: declname='ifg', quals=[] (at pp.c:850)
          IdentifierType: names=['adc12xflg_t'] (at None)
      Decl: name='ie', quals=[], storage=[] (at 0)
        TypeDecl: declname='ie', quals=[] (at pp.c:851)
          IdentifierType: names=['adc12xflg_t'] (at None)
      Decl: name='iv', quals=[], storage=[] (at 0)
        TypeDecl: declname='iv', quals=[] (at pp.c:852)
          IdentifierType: names=['adc12xflg_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:858)
    Struct: name='adc12_t', packed=False (at pp.c:858)
  Decl: name='ME1@"0x0004"', quals=['volatile'], storage=[] (at pp.c:860)
    TypeDecl: declname='ME1@"0x0004"', quals=['volatile'] (at pp.c:860)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='ME2@"0x0005"', quals=['volatile'], storage=[] (at pp.c:866)
    TypeDecl: declname='ME2@"0x0005"', quals=['volatile'] (at pp.c:866)
      IdentifierType: names=['char', 'unsigned'] (at None)
  Decl: name='U0CTLnr@"0x0070"', quals=['volatile'], storage=['static'] (at pp.c:868)
    TypeDecl: declname='U0CTLnr@"0x0070"', quals=['volatile'] (at pp.c:868)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='I2CTCTLnr@"0x0071"', quals=['volatile'], storage=['static'] (at pp.c:869)
    TypeDecl: declname='I2CTCTLnr@"0x0071"', quals=['volatile'] (at pp.c:869)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='I2CDCTLnr@"0x0072"', quals=['volatile'], storage=['static'] (at pp.c:870)
    TypeDecl: declname='I2CDCTLnr@"0x0072"', quals=['volatile'] (at pp.c:870)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='mcu_power_t', quals=[], storage=['typedef'] (at pp.c:872)
    TypeDecl: declname='mcu_power_t', quals=[] (at pp.c:872)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='mcombine', quals=[], storage=['inline', 'static'] (at pp.c:873)
    FuncDecl: quals=None (at pp.c:873)
      ParamList:  (at pp.c:873)
        Decl: name='m1', quals=[], storage=[] (at pp.c:873)
          TypeDecl: declname='m1', quals=[] (at pp.c:873)
            IdentifierType: names=['mcu_power_t'] (at None)
        Decl: name='m2', quals=[], storage=[] (at pp.c:873)
          TypeDecl: declname='m2', quals=[] (at pp.c:873)
            IdentifierType: names=['mcu_power_t'] (at None)
      TypeDecl: declname='mcombine', quals=[] (at pp.c:873)
        IdentifierType: names=['mcu_power_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:876)
    Enum: name='__nesc_unnamed4257' (at pp.c:876)
      EnumeratorList:  (at pp.c:877)
        Enumerator: name='MSP430_POWER_ACTIVE' (at pp.c:877)
          Constant: type='int', value='0' (at pp.c:877)
        Enumerator: name='MSP430_POWER_LPM0' (at pp.c:878)
          Constant: type='int', value='1' (at pp.c:878)
        Enumerator: name='MSP430_POWER_LPM1' (at pp.c:879)
          Constant: type='int', value='2' (at pp.c:879)
        Enumerator: name='MSP430_POWER_LPM2' (at pp.c:880)
          Constant: type='int', value='3' (at pp.c:880)
        Enumerator: name='MSP430_POWER_LPM3' (at pp.c:881)
          Constant: type='int', value='4' (at pp.c:881)
        Enumerator: name='MSP430_POWER_LPM4' (at pp.c:882)
          Constant: type='int', value='5' (at pp.c:882)
  Decl: name='__nesc_disable_interrupt', quals=[], storage=['inline', 'static'] (at pp.c:885)
    FuncDecl: quals=None (at pp.c:885)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_disable_interrupt', quals=[] (at pp.c:885)
        IdentifierType: names=['void'] (at None)
  Decl: name='__nesc_enable_interrupt', quals=[], storage=['inline', 'static'] (at pp.c:891)
    FuncDecl: quals=None (at pp.c:891)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_enable_interrupt', quals=[] (at pp.c:891)
        IdentifierType: names=['void'] (at None)
  Typedef: name='__nesc_atomic_t', quals=[], storage=['typedef'] (at pp.c:896)
    TypeDecl: declname='__nesc_atomic_t', quals=[] (at pp.c:896)
      IdentifierType: names=['bool'] (at None)
  Decl: name='__nesc_atomic_start', quals=[], storage=[] (at pp.c:897)
    FuncDecl: quals=None (at pp.c:897)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_atomic_start', quals=[] (at pp.c:897)
        IdentifierType: names=['__nesc_atomic_t'] (at None)
  Decl: name='__nesc_atomic_end', quals=[], storage=[] (at pp.c:898)
    FuncDecl: quals=None (at pp.c:898)
      ParamList:  (at pp.c:898)
        Decl: name='reenable_interrupts', quals=[], storage=[] (at pp.c:898)
          TypeDecl: declname='reenable_interrupts', quals=[] (at pp.c:898)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
      TypeDecl: declname='__nesc_atomic_end', quals=[] (at pp.c:898)
        IdentifierType: names=['void'] (at None)
  Decl: name='__nesc_atomic_start', quals=[], storage=[] (at pp.c:905)
    FuncDecl: quals=None (at pp.c:905)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='__nesc_atomic_start', quals=[] (at pp.c:905)
        IdentifierType: names=['__nesc_atomic_t'] (at None)
  Decl: name='__nesc_atomic_end', quals=[], storage=[] (at pp.c:913)
    FuncDecl: quals=None (at pp.c:913)
      ParamList:  (at pp.c:913)
        Decl: name='reenable_interrupts', quals=[], storage=[] (at pp.c:913)
          TypeDecl: declname='reenable_interrupts', quals=[] (at pp.c:913)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
      TypeDecl: declname='__nesc_atomic_end', quals=[] (at pp.c:913)
        IdentifierType: names=['void'] (at None)
  Typedef: name='nx_float', quals=[], storage=['typedef'] (at pp.c:915)
    TypeDecl: declname='nx_float', quals=[] (at pp.c:915)
      Struct: name=None, packed=False (at pp.c:915)
        Decl: name='nxdata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:915)
            TypeDecl: declname='nxdata', quals=[] (at pp.c:915)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='4' (at pp.c:915)
  Typedef: name='__nesc_nxbase_nx_float', quals=[], storage=['typedef'] (at pp.c:915)
    TypeDecl: declname='__nesc_nxbase_nx_float', quals=[] (at pp.c:915)
      IdentifierType: names=['float'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:917)
    Enum: name='__nesc_unnamed4258' (at pp.c:917)
      EnumeratorList:  (at pp.c:918)
        Enumerator: name='TOS_SLEEP_NONE' (at pp.c:918)
          ID: name='MSP430_POWER_ACTIVE' (at pp.c:918)
  Typedef: name='TMilli', quals=[], storage=['typedef'] (at pp.c:926)
    TypeDecl: declname='TMilli', quals=[] (at pp.c:926)
      Struct: name='__nesc_unnamed4259', packed=False (at pp.c:921)
        Decl: name='notUsed', quals=[], storage=[] (at 0)
          TypeDecl: declname='notUsed', quals=[] (at pp.c:923)
            IdentifierType: names=['int'] (at None)
  Typedef: name='T32khz', quals=[], storage=['typedef'] (at pp.c:932)
    TypeDecl: declname='T32khz', quals=[] (at pp.c:932)
      Struct: name='__nesc_unnamed4260', packed=False (at pp.c:927)
        Decl: name='notUsed', quals=[], storage=[] (at 0)
          TypeDecl: declname='notUsed', quals=[] (at pp.c:929)
            IdentifierType: names=['int'] (at None)
  Typedef: name='TMicro', quals=[], storage=['typedef'] (at pp.c:938)
    TypeDecl: declname='TMicro', quals=[] (at pp.c:938)
      Struct: name='__nesc_unnamed4261', packed=False (at pp.c:933)
        Decl: name='notUsed', quals=[], storage=[] (at 0)
          TypeDecl: declname='notUsed', quals=[] (at pp.c:935)
            IdentifierType: names=['int'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:940)
    Enum: name='__nesc_unnamed4262' (at pp.c:940)
      EnumeratorList:  (at pp.c:943)
        Enumerator: name='NREADINGS' (at pp.c:943)
          Constant: type='int', value='10' (at pp.c:943)
        Enumerator: name='DEFAULT_INTERVAL' (at pp.c:946)
          Constant: type='int', value='256' (at pp.c:946)
        Enumerator: name='AM_OSCILLOSCOPE' (at pp.c:948)
          Constant: type='int', value='0x93' (at pp.c:948)
  Typedef: name='oscilloscope_t', quals=[], storage=['typedef'] (at pp.c:964)
    TypeDecl: declname='oscilloscope_t', quals=[] (at pp.c:964)
      Struct: name='oscilloscope', packed=False (at pp.c:958)
        Decl: name='version', quals=[], storage=[] (at 0)
          TypeDecl: declname='version', quals=[] (at pp.c:959)
            IdentifierType: names=['nx_uint16_t'] (at None)
        Decl: name='interval', quals=[], storage=[] (at 0)
          TypeDecl: declname='interval', quals=[] (at pp.c:960)
            IdentifierType: names=['nx_uint16_t'] (at None)
        Decl: name='id', quals=[], storage=[] (at 0)
          TypeDecl: declname='id', quals=[] (at pp.c:961)
            IdentifierType: names=['nx_uint16_t'] (at None)
        Decl: name='count', quals=[], storage=[] (at 0)
          TypeDecl: declname='count', quals=[] (at pp.c:962)
            IdentifierType: names=['nx_uint16_t'] (at None)
        Decl: name='readings', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:963)
            TypeDecl: declname='readings', quals=[] (at pp.c:963)
              IdentifierType: names=['nx_uint16_t'] (at None)
            ID: name='NREADINGS' (at pp.c:963)
  Typedef: name='cc2420_status_t', quals=[], storage=['typedef'] (at pp.c:966)
    TypeDecl: declname='cc2420_status_t', quals=[] (at pp.c:966)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='security_header_t', quals=[], storage=['typedef'] (at pp.c:975)
    TypeDecl: declname='security_header_t', quals=[] (at pp.c:975)
      Struct: name='security_header_t', packed=False (at pp.c:969)
        Decl: name='__nesc_filler0', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:970)
            TypeDecl: declname='__nesc_filler0', quals=[] (at pp.c:970)
              IdentifierType: names=['char', 'unsigned'] (at None)
            Constant: type='int', value='1' (at pp.c:970)
        Decl: name='frameCounter', quals=[], storage=[] (at 0)
          TypeDecl: declname='frameCounter', quals=[] (at pp.c:973)
            IdentifierType: names=['nx_uint32_t'] (at None)
        Decl: name='keyID', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:974)
            TypeDecl: declname='keyID', quals=[] (at pp.c:974)
              IdentifierType: names=['nx_uint8_t'] (at None)
            Constant: type='int', value='1' (at pp.c:974)
  Typedef: name='cc2420_header_t', quals=[], storage=['typedef'] (at pp.c:996)
    TypeDecl: declname='cc2420_header_t', quals=[] (at pp.c:996)
      Struct: name='cc2420_header_t', packed=False (at pp.c:978)
        Decl: name='length', quals=[], storage=[] (at 0)
          TypeDecl: declname='length', quals=[] (at pp.c:979)
            IdentifierType: names=['nxle_uint8_t'] (at None)
        Decl: name='fcf', quals=[], storage=[] (at 0)
          TypeDecl: declname='fcf', quals=[] (at pp.c:980)
            IdentifierType: names=['nxle_uint16_t'] (at None)
        Decl: name='dsn', quals=[], storage=[] (at 0)
          TypeDecl: declname='dsn', quals=[] (at pp.c:981)
            IdentifierType: names=['nxle_uint8_t'] (at None)
        Decl: name='destpan', quals=[], storage=[] (at 0)
          TypeDecl: declname='destpan', quals=[] (at pp.c:982)
            IdentifierType: names=['nxle_uint16_t'] (at None)
        Decl: name='dest', quals=[], storage=[] (at 0)
          TypeDecl: declname='dest', quals=[] (at pp.c:983)
            IdentifierType: names=['nxle_uint16_t'] (at None)
        Decl: name='src', quals=[], storage=[] (at 0)
          TypeDecl: declname='src', quals=[] (at pp.c:984)
            IdentifierType: names=['nxle_uint16_t'] (at None)
        Decl: name='network', quals=[], storage=[] (at 0)
          TypeDecl: declname='network', quals=[] (at pp.c:992)
            IdentifierType: names=['nxle_uint8_t'] (at None)
        Decl: name='type', quals=[], storage=[] (at 0)
          TypeDecl: declname='type', quals=[] (at pp.c:995)
            IdentifierType: names=['nxle_uint8_t'] (at None)
  Typedef: name='cc2420_footer_t', quals=[], storage=['typedef'] (at pp.c:1004)
    TypeDecl: declname='cc2420_footer_t', quals=[] (at pp.c:1004)
      Struct: name='cc2420_footer_t', packed=False (at pp.c:1003)
  Typedef: name='cc2420_metadata_t', quals=[], storage=['typedef'] (at pp.c:1022)
    TypeDecl: declname='cc2420_metadata_t', quals=[] (at pp.c:1022)
      Struct: name='cc2420_metadata_t', packed=False (at pp.c:1007)
        Decl: name='rssi', quals=[], storage=[] (at 0)
          TypeDecl: declname='rssi', quals=[] (at pp.c:1008)
            IdentifierType: names=['nx_uint8_t'] (at None)
        Decl: name='lqi', quals=[], storage=[] (at 0)
          TypeDecl: declname='lqi', quals=[] (at pp.c:1009)
            IdentifierType: names=['nx_uint8_t'] (at None)
        Decl: name='tx_power', quals=[], storage=[] (at 0)
          TypeDecl: declname='tx_power', quals=[] (at pp.c:1010)
            IdentifierType: names=['nx_uint8_t'] (at None)
        Decl: name='crc', quals=[], storage=[] (at 0)
          TypeDecl: declname='crc', quals=[] (at pp.c:1011)
            IdentifierType: names=['nx_bool'] (at None)
        Decl: name='ack', quals=[], storage=[] (at 0)
          TypeDecl: declname='ack', quals=[] (at pp.c:1012)
            IdentifierType: names=['nx_bool'] (at None)
        Decl: name='timesync', quals=[], storage=[] (at 0)
          TypeDecl: declname='timesync', quals=[] (at pp.c:1013)
            IdentifierType: names=['nx_bool'] (at None)
        Decl: name='timestamp', quals=[], storage=[] (at 0)
          TypeDecl: declname='timestamp', quals=[] (at pp.c:1014)
            IdentifierType: names=['nx_uint32_t'] (at None)
        Decl: name='rxInterval', quals=[], storage=[] (at 0)
          TypeDecl: declname='rxInterval', quals=[] (at pp.c:1015)
            IdentifierType: names=['nx_uint16_t'] (at None)
  Typedef: name='cc2420_packet_t', quals=[], storage=['typedef'] (at pp.c:1032)
    TypeDecl: declname='cc2420_packet_t', quals=[] (at pp.c:1032)
      Struct: name='cc2420_packet_t', packed=False (at pp.c:1029)
        Decl: name='packet', quals=[], storage=[] (at 0)
          TypeDecl: declname='packet', quals=[] (at pp.c:1030)
            IdentifierType: names=['cc2420_header_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:1031)
            TypeDecl: declname='data', quals=[] (at pp.c:1031)
              IdentifierType: names=['nx_uint8_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1034)
    Enum: name='__nesc_unnamed4263' (at pp.c:1034)
      EnumeratorList:  (at pp.c:1036)
        Enumerator: name='MAC_HEADER_SIZE' (at pp.c:1036)
          BinaryOp: op='-' (at pp.c:1036)
            UnaryOp: op='sizeof' (at pp.c:1036)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['cc2420_header_t'] (at None)
            Constant: type='int', value='1' (at pp.c:1036)
        Enumerator: name='MAC_FOOTER_SIZE' (at pp.c:1038)
          UnaryOp: op='sizeof' (at pp.c:1038)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['uint16_t'] (at None)
        Enumerator: name='MAC_PACKET_SIZE' (at pp.c:1040)
          BinaryOp: op='+' (at pp.c:1040)
            BinaryOp: op='+' (at pp.c:1040)
              ID: name='MAC_HEADER_SIZE' (at pp.c:1040)
              Constant: type='int', value='28' (at pp.c:1040)
            ID: name='MAC_FOOTER_SIZE' (at pp.c:1040)
        Enumerator: name='CC2420_SIZE' (at pp.c:1042)
          BinaryOp: op='+' (at pp.c:1042)
            ID: name='MAC_HEADER_SIZE' (at pp.c:1042)
            ID: name='MAC_FOOTER_SIZE' (at pp.c:1042)
  Decl: name=None, quals=[], storage=[] (at pp.c:1045)
    Enum: name='cc2420_enums' (at pp.c:1045)
      EnumeratorList:  (at pp.c:1046)
        Enumerator: name='CC2420_TIME_ACK_TURNAROUND' (at pp.c:1046)
          Constant: type='int', value='7' (at pp.c:1046)
        Enumerator: name='CC2420_TIME_VREN' (at pp.c:1047)
          Constant: type='int', value='20' (at pp.c:1047)
        Enumerator: name='CC2420_TIME_SYMBOL' (at pp.c:1048)
          Constant: type='int', value='2' (at pp.c:1048)
        Enumerator: name='CC2420_BACKOFF_PERIOD' (at pp.c:1049)
          BinaryOp: op='/' (at pp.c:1049)
            Constant: type='int', value='20' (at pp.c:1049)
            ID: name='CC2420_TIME_SYMBOL' (at pp.c:1049)
        Enumerator: name='CC2420_MIN_BACKOFF' (at pp.c:1050)
          BinaryOp: op='/' (at pp.c:1050)
            Constant: type='int', value='20' (at pp.c:1050)
            ID: name='CC2420_TIME_SYMBOL' (at pp.c:1050)
        Enumerator: name='CC2420_ACK_WAIT_DELAY' (at pp.c:1051)
          Constant: type='int', value='256' (at pp.c:1051)
  Decl: name=None, quals=[], storage=[] (at pp.c:1054)
    Enum: name='cc2420_status_enums' (at pp.c:1054)
      EnumeratorList:  (at pp.c:1055)
        Enumerator: name='CC2420_STATUS_RSSI_VALID' (at pp.c:1055)
          BinaryOp: op='<<' (at pp.c:1055)
            Constant: type='int', value='1' (at pp.c:1055)
            Constant: type='int', value='1' (at pp.c:1055)
        Enumerator: name='CC2420_STATUS_LOCK' (at pp.c:1056)
          BinaryOp: op='<<' (at pp.c:1056)
            Constant: type='int', value='1' (at pp.c:1056)
            Constant: type='int', value='2' (at pp.c:1056)
        Enumerator: name='CC2420_STATUS_TX_ACTIVE' (at pp.c:1057)
          BinaryOp: op='<<' (at pp.c:1057)
            Constant: type='int', value='1' (at pp.c:1057)
            Constant: type='int', value='3' (at pp.c:1057)
        Enumerator: name='CC2420_STATUS_ENC_BUSY' (at pp.c:1058)
          BinaryOp: op='<<' (at pp.c:1058)
            Constant: type='int', value='1' (at pp.c:1058)
            Constant: type='int', value='4' (at pp.c:1058)
        Enumerator: name='CC2420_STATUS_TX_UNDERFLOW' (at pp.c:1059)
          BinaryOp: op='<<' (at pp.c:1059)
            Constant: type='int', value='1' (at pp.c:1059)
            Constant: type='int', value='5' (at pp.c:1059)
        Enumerator: name='CC2420_STATUS_XOSC16M_STABLE' (at pp.c:1060)
          BinaryOp: op='<<' (at pp.c:1060)
            Constant: type='int', value='1' (at pp.c:1060)
            Constant: type='int', value='6' (at pp.c:1060)
  Decl: name=None, quals=[], storage=[] (at pp.c:1063)
    Enum: name='cc2420_config_reg_enums' (at pp.c:1063)
      EnumeratorList:  (at pp.c:1064)
        Enumerator: name='CC2420_SNOP' (at pp.c:1064)
          Constant: type='int', value='0x00' (at pp.c:1064)
        Enumerator: name='CC2420_SXOSCON' (at pp.c:1065)
          Constant: type='int', value='0x01' (at pp.c:1065)
        Enumerator: name='CC2420_STXCAL' (at pp.c:1066)
          Constant: type='int', value='0x02' (at pp.c:1066)
        Enumerator: name='CC2420_SRXON' (at pp.c:1067)
          Constant: type='int', value='0x03' (at pp.c:1067)
        Enumerator: name='CC2420_STXON' (at pp.c:1068)
          Constant: type='int', value='0x04' (at pp.c:1068)
        Enumerator: name='CC2420_STXONCCA' (at pp.c:1069)
          Constant: type='int', value='0x05' (at pp.c:1069)
        Enumerator: name='CC2420_SRFOFF' (at pp.c:1070)
          Constant: type='int', value='0x06' (at pp.c:1070)
        Enumerator: name='CC2420_SXOSCOFF' (at pp.c:1071)
          Constant: type='int', value='0x07' (at pp.c:1071)
        Enumerator: name='CC2420_SFLUSHRX' (at pp.c:1072)
          Constant: type='int', value='0x08' (at pp.c:1072)
        Enumerator: name='CC2420_SFLUSHTX' (at pp.c:1073)
          Constant: type='int', value='0x09' (at pp.c:1073)
        Enumerator: name='CC2420_SACK' (at pp.c:1074)
          Constant: type='int', value='0x0a' (at pp.c:1074)
        Enumerator: name='CC2420_SACKPEND' (at pp.c:1075)
          Constant: type='int', value='0x0b' (at pp.c:1075)
        Enumerator: name='CC2420_SRXDEC' (at pp.c:1076)
          Constant: type='int', value='0x0c' (at pp.c:1076)
        Enumerator: name='CC2420_STXENC' (at pp.c:1077)
          Constant: type='int', value='0x0d' (at pp.c:1077)
        Enumerator: name='CC2420_SAES' (at pp.c:1078)
          Constant: type='int', value='0x0e' (at pp.c:1078)
        Enumerator: name='CC2420_MAIN' (at pp.c:1079)
          Constant: type='int', value='0x10' (at pp.c:1079)
        Enumerator: name='CC2420_MDMCTRL0' (at pp.c:1080)
          Constant: type='int', value='0x11' (at pp.c:1080)
        Enumerator: name='CC2420_MDMCTRL1' (at pp.c:1081)
          Constant: type='int', value='0x12' (at pp.c:1081)
        Enumerator: name='CC2420_RSSI' (at pp.c:1082)
          Constant: type='int', value='0x13' (at pp.c:1082)
        Enumerator: name='CC2420_SYNCWORD' (at pp.c:1083)
          Constant: type='int', value='0x14' (at pp.c:1083)
        Enumerator: name='CC2420_TXCTRL' (at pp.c:1084)
          Constant: type='int', value='0x15' (at pp.c:1084)
        Enumerator: name='CC2420_RXCTRL0' (at pp.c:1085)
          Constant: type='int', value='0x16' (at pp.c:1085)
        Enumerator: name='CC2420_RXCTRL1' (at pp.c:1086)
          Constant: type='int', value='0x17' (at pp.c:1086)
        Enumerator: name='CC2420_FSCTRL' (at pp.c:1087)
          Constant: type='int', value='0x18' (at pp.c:1087)
        Enumerator: name='CC2420_SECCTRL0' (at pp.c:1088)
          Constant: type='int', value='0x19' (at pp.c:1088)
        Enumerator: name='CC2420_SECCTRL1' (at pp.c:1089)
          Constant: type='int', value='0x1a' (at pp.c:1089)
        Enumerator: name='CC2420_BATTMON' (at pp.c:1090)
          Constant: type='int', value='0x1b' (at pp.c:1090)
        Enumerator: name='CC2420_IOCFG0' (at pp.c:1091)
          Constant: type='int', value='0x1c' (at pp.c:1091)
        Enumerator: name='CC2420_IOCFG1' (at pp.c:1092)
          Constant: type='int', value='0x1d' (at pp.c:1092)
        Enumerator: name='CC2420_MANFIDL' (at pp.c:1093)
          Constant: type='int', value='0x1e' (at pp.c:1093)
        Enumerator: name='CC2420_MANFIDH' (at pp.c:1094)
          Constant: type='int', value='0x1f' (at pp.c:1094)
        Enumerator: name='CC2420_FSMTC' (at pp.c:1095)
          Constant: type='int', value='0x20' (at pp.c:1095)
        Enumerator: name='CC2420_MANAND' (at pp.c:1096)
          Constant: type='int', value='0x21' (at pp.c:1096)
        Enumerator: name='CC2420_MANOR' (at pp.c:1097)
          Constant: type='int', value='0x22' (at pp.c:1097)
        Enumerator: name='CC2420_AGCCTRL' (at pp.c:1098)
          Constant: type='int', value='0x23' (at pp.c:1098)
        Enumerator: name='CC2420_AGCTST0' (at pp.c:1099)
          Constant: type='int', value='0x24' (at pp.c:1099)
        Enumerator: name='CC2420_AGCTST1' (at pp.c:1100)
          Constant: type='int', value='0x25' (at pp.c:1100)
        Enumerator: name='CC2420_AGCTST2' (at pp.c:1101)
          Constant: type='int', value='0x26' (at pp.c:1101)
        Enumerator: name='CC2420_FSTST0' (at pp.c:1102)
          Constant: type='int', value='0x27' (at pp.c:1102)
        Enumerator: name='CC2420_FSTST1' (at pp.c:1103)
          Constant: type='int', value='0x28' (at pp.c:1103)
        Enumerator: name='CC2420_FSTST2' (at pp.c:1104)
          Constant: type='int', value='0x29' (at pp.c:1104)
        Enumerator: name='CC2420_FSTST3' (at pp.c:1105)
          Constant: type='int', value='0x2a' (at pp.c:1105)
        Enumerator: name='CC2420_RXBPFTST' (at pp.c:1106)
          Constant: type='int', value='0x2b' (at pp.c:1106)
        Enumerator: name='CC2420_FMSTATE' (at pp.c:1107)
          Constant: type='int', value='0x2c' (at pp.c:1107)
        Enumerator: name='CC2420_ADCTST' (at pp.c:1108)
          Constant: type='int', value='0x2d' (at pp.c:1108)
        Enumerator: name='CC2420_DACTST' (at pp.c:1109)
          Constant: type='int', value='0x2e' (at pp.c:1109)
        Enumerator: name='CC2420_TOPTST' (at pp.c:1110)
          Constant: type='int', value='0x2f' (at pp.c:1110)
        Enumerator: name='CC2420_TXFIFO' (at pp.c:1111)
          Constant: type='int', value='0x3e' (at pp.c:1111)
        Enumerator: name='CC2420_RXFIFO' (at pp.c:1112)
          Constant: type='int', value='0x3f' (at pp.c:1112)
  Decl: name=None, quals=[], storage=[] (at pp.c:1115)
    Enum: name='cc2420_ram_addr_enums' (at pp.c:1115)
      EnumeratorList:  (at pp.c:1116)
        Enumerator: name='CC2420_RAM_TXFIFO' (at pp.c:1116)
          Constant: type='int', value='0x000' (at pp.c:1116)
        Enumerator: name='CC2420_RAM_RXFIFO' (at pp.c:1117)
          Constant: type='int', value='0x080' (at pp.c:1117)
        Enumerator: name='CC2420_RAM_KEY0' (at pp.c:1118)
          Constant: type='int', value='0x100' (at pp.c:1118)
        Enumerator: name='CC2420_RAM_RXNONCE' (at pp.c:1119)
          Constant: type='int', value='0x110' (at pp.c:1119)
        Enumerator: name='CC2420_RAM_SABUF' (at pp.c:1120)
          Constant: type='int', value='0x120' (at pp.c:1120)
        Enumerator: name='CC2420_RAM_KEY1' (at pp.c:1121)
          Constant: type='int', value='0x130' (at pp.c:1121)
        Enumerator: name='CC2420_RAM_TXNONCE' (at pp.c:1122)
          Constant: type='int', value='0x140' (at pp.c:1122)
        Enumerator: name='CC2420_RAM_CBCSTATE' (at pp.c:1123)
          Constant: type='int', value='0x150' (at pp.c:1123)
        Enumerator: name='CC2420_RAM_IEEEADR' (at pp.c:1124)
          Constant: type='int', value='0x160' (at pp.c:1124)
        Enumerator: name='CC2420_RAM_PANID' (at pp.c:1125)
          Constant: type='int', value='0x168' (at pp.c:1125)
        Enumerator: name='CC2420_RAM_SHORTADR' (at pp.c:1126)
          Constant: type='int', value='0x16a' (at pp.c:1126)
  Decl: name=None, quals=[], storage=[] (at pp.c:1129)
    Enum: name='cc2420_nonce_enums' (at pp.c:1129)
      EnumeratorList:  (at pp.c:1130)
        Enumerator: name='CC2420_NONCE_BLOCK_COUNTER' (at pp.c:1130)
          Constant: type='int', value='0' (at pp.c:1130)
        Enumerator: name='CC2420_NONCE_KEY_SEQ_COUNTER' (at pp.c:1131)
          Constant: type='int', value='2' (at pp.c:1131)
        Enumerator: name='CC2420_NONCE_FRAME_COUNTER' (at pp.c:1132)
          Constant: type='int', value='3' (at pp.c:1132)
        Enumerator: name='CC2420_NONCE_SOURCE_ADDRESS' (at pp.c:1133)
          Constant: type='int', value='7' (at pp.c:1133)
        Enumerator: name='CC2420_NONCE_FLAGS' (at pp.c:1134)
          Constant: type='int', value='15' (at pp.c:1134)
  Decl: name=None, quals=[], storage=[] (at pp.c:1137)
    Enum: name='cc2420_main_enums' (at pp.c:1137)
      EnumeratorList:  (at pp.c:1138)
        Enumerator: name='CC2420_MAIN_RESETn' (at pp.c:1138)
          Constant: type='int', value='15' (at pp.c:1138)
        Enumerator: name='CC2420_MAIN_ENC_RESETn' (at pp.c:1139)
          Constant: type='int', value='14' (at pp.c:1139)
        Enumerator: name='CC2420_MAIN_DEMOD_RESETn' (at pp.c:1140)
          Constant: type='int', value='13' (at pp.c:1140)
        Enumerator: name='CC2420_MAIN_MOD_RESETn' (at pp.c:1141)
          Constant: type='int', value='12' (at pp.c:1141)
        Enumerator: name='CC2420_MAIN_FS_RESETn' (at pp.c:1142)
          Constant: type='int', value='11' (at pp.c:1142)
        Enumerator: name='CC2420_MAIN_XOSC16M_BYPASS' (at pp.c:1143)
          Constant: type='int', value='0' (at pp.c:1143)
  Decl: name=None, quals=[], storage=[] (at pp.c:1146)
    Enum: name='cc2420_mdmctrl0_enums' (at pp.c:1146)
      EnumeratorList:  (at pp.c:1147)
        Enumerator: name='CC2420_MDMCTRL0_RESERVED_FRAME_MODE' (at pp.c:1147)
          Constant: type='int', value='13' (at pp.c:1147)
        Enumerator: name='CC2420_MDMCTRL0_PAN_COORDINATOR' (at pp.c:1148)
          Constant: type='int', value='12' (at pp.c:1148)
        Enumerator: name='CC2420_MDMCTRL0_ADR_DECODE' (at pp.c:1149)
          Constant: type='int', value='11' (at pp.c:1149)
        Enumerator: name='CC2420_MDMCTRL0_CCA_HYST' (at pp.c:1150)
          Constant: type='int', value='8' (at pp.c:1150)
        Enumerator: name='CC2420_MDMCTRL0_CCA_MOD' (at pp.c:1151)
          Constant: type='int', value='6' (at pp.c:1151)
        Enumerator: name='CC2420_MDMCTRL0_AUTOCRC' (at pp.c:1152)
          Constant: type='int', value='5' (at pp.c:1152)
        Enumerator: name='CC2420_MDMCTRL0_AUTOACK' (at pp.c:1153)
          Constant: type='int', value='4' (at pp.c:1153)
        Enumerator: name='CC2420_MDMCTRL0_PREAMBLE_LENGTH' (at pp.c:1154)
          Constant: type='int', value='0' (at pp.c:1154)
  Decl: name=None, quals=[], storage=[] (at pp.c:1157)
    Enum: name='cc2420_mdmctrl1_enums' (at pp.c:1157)
      EnumeratorList:  (at pp.c:1158)
        Enumerator: name='CC2420_MDMCTRL1_CORR_THR' (at pp.c:1158)
          Constant: type='int', value='6' (at pp.c:1158)
        Enumerator: name='CC2420_MDMCTRL1_DEMOD_AVG_MODE' (at pp.c:1159)
          Constant: type='int', value='5' (at pp.c:1159)
        Enumerator: name='CC2420_MDMCTRL1_MODULATION_MODE' (at pp.c:1160)
          Constant: type='int', value='4' (at pp.c:1160)
        Enumerator: name='CC2420_MDMCTRL1_TX_MODE' (at pp.c:1161)
          Constant: type='int', value='2' (at pp.c:1161)
        Enumerator: name='CC2420_MDMCTRL1_RX_MODE' (at pp.c:1162)
          Constant: type='int', value='0' (at pp.c:1162)
  Decl: name=None, quals=[], storage=[] (at pp.c:1165)
    Enum: name='cc2420_rssi_enums' (at pp.c:1165)
      EnumeratorList:  (at pp.c:1166)
        Enumerator: name='CC2420_RSSI_CCA_THR' (at pp.c:1166)
          Constant: type='int', value='8' (at pp.c:1166)
        Enumerator: name='CC2420_RSSI_RSSI_VAL' (at pp.c:1167)
          Constant: type='int', value='0' (at pp.c:1167)
  Decl: name=None, quals=[], storage=[] (at pp.c:1170)
    Enum: name='cc2420_syncword_enums' (at pp.c:1170)
      EnumeratorList:  (at pp.c:1171)
        Enumerator: name='CC2420_SYNCWORD_SYNCWORD' (at pp.c:1171)
          Constant: type='int', value='0' (at pp.c:1171)
  Decl: name=None, quals=[], storage=[] (at pp.c:1174)
    Enum: name='cc2420_txctrl_enums' (at pp.c:1174)
      EnumeratorList:  (at pp.c:1175)
        Enumerator: name='CC2420_TXCTRL_TXMIXBUF_CUR' (at pp.c:1175)
          Constant: type='int', value='14' (at pp.c:1175)
        Enumerator: name='CC2420_TXCTRL_TX_TURNAROUND' (at pp.c:1176)
          Constant: type='int', value='13' (at pp.c:1176)
        Enumerator: name='CC2420_TXCTRL_TXMIX_CAP_ARRAY' (at pp.c:1177)
          Constant: type='int', value='11' (at pp.c:1177)
        Enumerator: name='CC2420_TXCTRL_TXMIX_CURRENT' (at pp.c:1178)
          Constant: type='int', value='9' (at pp.c:1178)
        Enumerator: name='CC2420_TXCTRL_PA_CURRENT' (at pp.c:1179)
          Constant: type='int', value='6' (at pp.c:1179)
        Enumerator: name='CC2420_TXCTRL_RESERVED' (at pp.c:1180)
          Constant: type='int', value='5' (at pp.c:1180)
        Enumerator: name='CC2420_TXCTRL_PA_LEVEL' (at pp.c:1181)
          Constant: type='int', value='0' (at pp.c:1181)
  Decl: name=None, quals=[], storage=[] (at pp.c:1184)
    Enum: name='cc2420_rxctrl0_enums' (at pp.c:1184)
      EnumeratorList:  (at pp.c:1185)
        Enumerator: name='CC2420_RXCTRL0_RXMIXBUF_CUR' (at pp.c:1185)
          Constant: type='int', value='12' (at pp.c:1185)
        Enumerator: name='CC2420_RXCTRL0_HIGH_LNA_GAIN' (at pp.c:1186)
          Constant: type='int', value='10' (at pp.c:1186)
        Enumerator: name='CC2420_RXCTRL0_MED_LNA_GAIN' (at pp.c:1187)
          Constant: type='int', value='8' (at pp.c:1187)
        Enumerator: name='CC2420_RXCTRL0_LOW_LNA_GAIN' (at pp.c:1188)
          Constant: type='int', value='6' (at pp.c:1188)
        Enumerator: name='CC2420_RXCTRL0_HIGH_LNA_CURRENT' (at pp.c:1189)
          Constant: type='int', value='4' (at pp.c:1189)
        Enumerator: name='CC2420_RXCTRL0_MED_LNA_CURRENT' (at pp.c:1190)
          Constant: type='int', value='2' (at pp.c:1190)
        Enumerator: name='CC2420_RXCTRL0_LOW_LNA_CURRENT' (at pp.c:1191)
          Constant: type='int', value='0' (at pp.c:1191)
  Decl: name=None, quals=[], storage=[] (at pp.c:1194)
    Enum: name='cc2420_rxctrl1_enums' (at pp.c:1194)
      EnumeratorList:  (at pp.c:1195)
        Enumerator: name='CC2420_RXCTRL1_RXBPF_LOCUR' (at pp.c:1195)
          Constant: type='int', value='13' (at pp.c:1195)
        Enumerator: name='CC2420_RXCTRL1_RXBPF_MIDCUR' (at pp.c:1196)
          Constant: type='int', value='12' (at pp.c:1196)
        Enumerator: name='CC2420_RXCTRL1_LOW_LOWGAIN' (at pp.c:1197)
          Constant: type='int', value='11' (at pp.c:1197)
        Enumerator: name='CC2420_RXCTRL1_MED_LOWGAIN' (at pp.c:1198)
          Constant: type='int', value='10' (at pp.c:1198)
        Enumerator: name='CC2420_RXCTRL1_HIGH_HGM' (at pp.c:1199)
          Constant: type='int', value='9' (at pp.c:1199)
        Enumerator: name='CC2420_RXCTRL1_MED_HGM' (at pp.c:1200)
          Constant: type='int', value='8' (at pp.c:1200)
        Enumerator: name='CC2420_RXCTRL1_LNA_CAP_ARRAY' (at pp.c:1201)
          Constant: type='int', value='6' (at pp.c:1201)
        Enumerator: name='CC2420_RXCTRL1_RXMIX_TAIL' (at pp.c:1202)
          Constant: type='int', value='4' (at pp.c:1202)
        Enumerator: name='CC2420_RXCTRL1_RXMIX_VCM' (at pp.c:1203)
          Constant: type='int', value='2' (at pp.c:1203)
        Enumerator: name='CC2420_RXCTRL1_RXMIX_CURRENT' (at pp.c:1204)
          Constant: type='int', value='0' (at pp.c:1204)
  Decl: name=None, quals=[], storage=[] (at pp.c:1207)
    Enum: name='cc2420_rsctrl_enums' (at pp.c:1207)
      EnumeratorList:  (at pp.c:1208)
        Enumerator: name='CC2420_FSCTRL_LOCK_THR' (at pp.c:1208)
          Constant: type='int', value='14' (at pp.c:1208)
        Enumerator: name='CC2420_FSCTRL_CAL_DONE' (at pp.c:1209)
          Constant: type='int', value='13' (at pp.c:1209)
        Enumerator: name='CC2420_FSCTRL_CAL_RUNNING' (at pp.c:1210)
          Constant: type='int', value='12' (at pp.c:1210)
        Enumerator: name='CC2420_FSCTRL_LOCK_LENGTH' (at pp.c:1211)
          Constant: type='int', value='11' (at pp.c:1211)
        Enumerator: name='CC2420_FSCTRL_LOCK_STATUS' (at pp.c:1212)
          Constant: type='int', value='10' (at pp.c:1212)
        Enumerator: name='CC2420_FSCTRL_FREQ' (at pp.c:1213)
          Constant: type='int', value='0' (at pp.c:1213)
  Decl: name=None, quals=[], storage=[] (at pp.c:1216)
    Enum: name='cc2420_secctrl0_enums' (at pp.c:1216)
      EnumeratorList:  (at pp.c:1217)
        Enumerator: name='CC2420_SECCTRL0_RXFIFO_PROTECTION' (at pp.c:1217)
          Constant: type='int', value='9' (at pp.c:1217)
        Enumerator: name='CC2420_SECCTRL0_SEC_CBC_HEAD' (at pp.c:1218)
          Constant: type='int', value='8' (at pp.c:1218)
        Enumerator: name='CC2420_SECCTRL0_SEC_SAKEYSEL' (at pp.c:1219)
          Constant: type='int', value='7' (at pp.c:1219)
        Enumerator: name='CC2420_SECCTRL0_SEC_TXKEYSEL' (at pp.c:1220)
          Constant: type='int', value='6' (at pp.c:1220)
        Enumerator: name='CC2420_SECCTRL0_SEC_RXKEYSEL' (at pp.c:1221)
          Constant: type='int', value='5' (at pp.c:1221)
        Enumerator: name='CC2420_SECCTRL0_SEC_M' (at pp.c:1222)
          Constant: type='int', value='2' (at pp.c:1222)
        Enumerator: name='CC2420_SECCTRL0_SEC_MODE' (at pp.c:1223)
          Constant: type='int', value='0' (at pp.c:1223)
  Decl: name=None, quals=[], storage=[] (at pp.c:1226)
    Enum: name='cc2420_secctrl1_enums' (at pp.c:1226)
      EnumeratorList:  (at pp.c:1227)
        Enumerator: name='CC2420_SECCTRL1_SEC_TXL' (at pp.c:1227)
          Constant: type='int', value='8' (at pp.c:1227)
        Enumerator: name='CC2420_SECCTRL1_SEC_RXL' (at pp.c:1228)
          Constant: type='int', value='0' (at pp.c:1228)
  Decl: name=None, quals=[], storage=[] (at pp.c:1231)
    Enum: name='cc2420_battmon_enums' (at pp.c:1231)
      EnumeratorList:  (at pp.c:1232)
        Enumerator: name='CC2420_BATTMON_BATT_OK' (at pp.c:1232)
          Constant: type='int', value='6' (at pp.c:1232)
        Enumerator: name='CC2420_BATTMON_BATTMON_EN' (at pp.c:1233)
          Constant: type='int', value='5' (at pp.c:1233)
        Enumerator: name='CC2420_BATTMON_BATTMON_VOLTAGE' (at pp.c:1234)
          Constant: type='int', value='0' (at pp.c:1234)
  Decl: name=None, quals=[], storage=[] (at pp.c:1237)
    Enum: name='cc2420_iocfg0_enums' (at pp.c:1237)
      EnumeratorList:  (at pp.c:1238)
        Enumerator: name='CC2420_IOCFG0_BCN_ACCEPT' (at pp.c:1238)
          Constant: type='int', value='11' (at pp.c:1238)
        Enumerator: name='CC2420_IOCFG0_FIFO_POLARITY' (at pp.c:1239)
          Constant: type='int', value='10' (at pp.c:1239)
        Enumerator: name='CC2420_IOCFG0_FIFOP_POLARITY' (at pp.c:1240)
          Constant: type='int', value='9' (at pp.c:1240)
        Enumerator: name='CC2420_IOCFG0_SFD_POLARITY' (at pp.c:1241)
          Constant: type='int', value='8' (at pp.c:1241)
        Enumerator: name='CC2420_IOCFG0_CCA_POLARITY' (at pp.c:1242)
          Constant: type='int', value='7' (at pp.c:1242)
        Enumerator: name='CC2420_IOCFG0_FIFOP_THR' (at pp.c:1243)
          Constant: type='int', value='0' (at pp.c:1243)
  Decl: name=None, quals=[], storage=[] (at pp.c:1246)
    Enum: name='cc2420_iocfg1_enums' (at pp.c:1246)
      EnumeratorList:  (at pp.c:1247)
        Enumerator: name='CC2420_IOCFG1_HSSD_SRC' (at pp.c:1247)
          Constant: type='int', value='10' (at pp.c:1247)
        Enumerator: name='CC2420_IOCFG1_SFDMUX' (at pp.c:1248)
          Constant: type='int', value='5' (at pp.c:1248)
        Enumerator: name='CC2420_IOCFG1_CCAMUX' (at pp.c:1249)
          Constant: type='int', value='0' (at pp.c:1249)
  Decl: name=None, quals=[], storage=[] (at pp.c:1252)
    Enum: name='cc2420_manfidl_enums' (at pp.c:1252)
      EnumeratorList:  (at pp.c:1253)
        Enumerator: name='CC2420_MANFIDL_PARTNUM' (at pp.c:1253)
          Constant: type='int', value='12' (at pp.c:1253)
        Enumerator: name='CC2420_MANFIDL_MANFID' (at pp.c:1254)
          Constant: type='int', value='0' (at pp.c:1254)
  Decl: name=None, quals=[], storage=[] (at pp.c:1257)
    Enum: name='cc2420_manfidh_enums' (at pp.c:1257)
      EnumeratorList:  (at pp.c:1258)
        Enumerator: name='CC2420_MANFIDH_VERSION' (at pp.c:1258)
          Constant: type='int', value='12' (at pp.c:1258)
        Enumerator: name='CC2420_MANFIDH_PARTNUM' (at pp.c:1259)
          Constant: type='int', value='0' (at pp.c:1259)
  Decl: name=None, quals=[], storage=[] (at pp.c:1262)
    Enum: name='cc2420_fsmtc_enums' (at pp.c:1262)
      EnumeratorList:  (at pp.c:1263)
        Enumerator: name='CC2420_FSMTC_TC_RXCHAIN2RX' (at pp.c:1263)
          Constant: type='int', value='13' (at pp.c:1263)
        Enumerator: name='CC2420_FSMTC_TC_SWITCH2TX' (at pp.c:1264)
          Constant: type='int', value='10' (at pp.c:1264)
        Enumerator: name='CC2420_FSMTC_TC_PAON2TX' (at pp.c:1265)
          Constant: type='int', value='6' (at pp.c:1265)
        Enumerator: name='CC2420_FSMTC_TC_TXEND2SWITCH' (at pp.c:1266)
          Constant: type='int', value='3' (at pp.c:1266)
        Enumerator: name='CC2420_FSMTC_TC_TXEND2PAOFF' (at pp.c:1267)
          Constant: type='int', value='0' (at pp.c:1267)
  Decl: name=None, quals=[], storage=[] (at pp.c:1270)
    Enum: name='cc2420_sfdmux_enums' (at pp.c:1270)
      EnumeratorList:  (at pp.c:1271)
        Enumerator: name='CC2420_SFDMUX_SFD' (at pp.c:1271)
          Constant: type='int', value='0' (at pp.c:1271)
        Enumerator: name='CC2420_SFDMUX_XOSC16M_STABLE' (at pp.c:1272)
          Constant: type='int', value='24' (at pp.c:1272)
  Decl: name=None, quals=[], storage=[] (at pp.c:1275)
    Enum: name='cc2420_security_enums' (at pp.c:1275)
      EnumeratorList:  (at pp.c:1276)
        Enumerator: name='CC2420_NO_SEC' (at pp.c:1276)
          Constant: type='int', value='0' (at pp.c:1276)
        Enumerator: name='CC2420_CBC_MAC' (at pp.c:1277)
          Constant: type='int', value='1' (at pp.c:1277)
        Enumerator: name='CC2420_CTR' (at pp.c:1278)
          Constant: type='int', value='2' (at pp.c:1278)
        Enumerator: name='CC2420_CCM' (at pp.c:1279)
          Constant: type='int', value='3' (at pp.c:1279)
        Enumerator: name='NO_SEC' (at pp.c:1280)
          Constant: type='int', value='0' (at pp.c:1280)
        Enumerator: name='CBC_MAC_4' (at pp.c:1281)
          Constant: type='int', value='1' (at pp.c:1281)
        Enumerator: name='CBC_MAC_8' (at pp.c:1282)
          Constant: type='int', value='2' (at pp.c:1282)
        Enumerator: name='CBC_MAC_16' (at pp.c:1283)
          Constant: type='int', value='3' (at pp.c:1283)
        Enumerator: name='CTR' (at pp.c:1284)
          Constant: type='int', value='4' (at pp.c:1284)
        Enumerator: name='CCM_4' (at pp.c:1285)
          Constant: type='int', value='5' (at pp.c:1285)
        Enumerator: name='CCM_8' (at pp.c:1286)
          Constant: type='int', value='6' (at pp.c:1286)
        Enumerator: name='CCM_16' (at pp.c:1287)
          Constant: type='int', value='7' (at pp.c:1287)
  Decl: name=None, quals=[], storage=[] (at pp.c:1291)
    Enum: name='__nesc_unnamed4264' (at pp.c:1291)
      EnumeratorList:  (at pp.c:1293)
        Enumerator: name='CC2420_INVALID_TIMESTAMP' (at pp.c:1293)
          Constant: type='int', value='0x80000000L' (at pp.c:1293)
  Typedef: name='nx_am_id_t', quals=[], storage=['typedef'] (at pp.c:1296)
    TypeDecl: declname='nx_am_id_t', quals=[] (at pp.c:1296)
      IdentifierType: names=['nx_uint8_t'] (at None)
  Typedef: name='nx_am_group_t', quals=[], storage=['typedef'] (at pp.c:1297)
    TypeDecl: declname='nx_am_group_t', quals=[] (at pp.c:1297)
      IdentifierType: names=['nx_uint8_t'] (at None)
  Typedef: name='nx_am_addr_t', quals=[], storage=['typedef'] (at pp.c:1298)
    TypeDecl: declname='nx_am_addr_t', quals=[] (at pp.c:1298)
      IdentifierType: names=['nx_uint16_t'] (at None)
  Typedef: name='am_id_t', quals=[], storage=['typedef'] (at pp.c:1300)
    TypeDecl: declname='am_id_t', quals=[] (at pp.c:1300)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='am_group_t', quals=[], storage=['typedef'] (at pp.c:1301)
    TypeDecl: declname='am_group_t', quals=[] (at pp.c:1301)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='am_addr_t', quals=[], storage=['typedef'] (at pp.c:1302)
    TypeDecl: declname='am_addr_t', quals=[] (at pp.c:1302)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1304)
    Enum: name='__nesc_unnamed4265' (at pp.c:1304)
      EnumeratorList:  (at pp.c:1305)
        Enumerator: name='AM_BROADCAST_ADDR' (at pp.c:1305)
          Constant: type='int', value='0xffff' (at pp.c:1305)
  Decl: name=None, quals=[], storage=[] (at pp.c:1316)
    Enum: name='__nesc_unnamed4266' (at pp.c:1316)
      EnumeratorList:  (at pp.c:1317)
        Enumerator: name='TOS_AM_GROUP' (at pp.c:1317)
          Constant: type='int', value='0x22' (at pp.c:1317)
        Enumerator: name='TOS_AM_ADDRESS' (at pp.c:1318)
          Constant: type='int', value='1' (at pp.c:1318)
  Typedef: name='uart_id_t', quals=[], storage=['typedef'] (at pp.c:1321)
    TypeDecl: declname='uart_id_t', quals=[] (at pp.c:1321)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1325)
    Enum: name='__nesc_unnamed4267' (at pp.c:1325)
      EnumeratorList:  (at pp.c:1326)
        Enumerator: name='HDLC_FLAG_BYTE' (at pp.c:1326)
          Constant: type='int', value='0x7e' (at pp.c:1326)
        Enumerator: name='HDLC_CTLESC_BYTE' (at pp.c:1327)
          Constant: type='int', value='0x7d' (at pp.c:1327)
  Decl: name=None, quals=[], storage=[] (at pp.c:1332)
    Enum: name='__nesc_unnamed4268' (at pp.c:1332)
      EnumeratorList:  (at pp.c:1333)
        Enumerator: name='TOS_SERIAL_ACTIVE_MESSAGE_ID' (at pp.c:1333)
          Constant: type='int', value='0' (at pp.c:1333)
        Enumerator: name='TOS_SERIAL_CC1000_ID' (at pp.c:1334)
          Constant: type='int', value='1' (at pp.c:1334)
        Enumerator: name='TOS_SERIAL_802_15_4_ID' (at pp.c:1335)
          Constant: type='int', value='2' (at pp.c:1335)
        Enumerator: name='TOS_SERIAL_UNKNOWN_ID' (at pp.c:1336)
          Constant: type='int', value='255' (at pp.c:1336)
  Decl: name=None, quals=[], storage=[] (at pp.c:1340)
    Enum: name='__nesc_unnamed4269' (at pp.c:1340)
      EnumeratorList:  (at pp.c:1341)
        Enumerator: name='SERIAL_PROTO_ACK' (at pp.c:1341)
          Constant: type='int', value='67' (at pp.c:1341)
        Enumerator: name='SERIAL_PROTO_PACKET_ACK' (at pp.c:1342)
          Constant: type='int', value='68' (at pp.c:1342)
        Enumerator: name='SERIAL_PROTO_PACKET_NOACK' (at pp.c:1343)
          Constant: type='int', value='69' (at pp.c:1343)
        Enumerator: name='SERIAL_PROTO_PACKET_UNKNOWN' (at pp.c:1344)
          Constant: type='int', value='255' (at pp.c:1344)
  Typedef: name='radio_stats_t', quals=[], storage=['typedef'] (at pp.c:1360)
    TypeDecl: declname='radio_stats_t', quals=[] (at pp.c:1360)
      Struct: name='radio_stats', packed=False (at pp.c:1348)
        Decl: name='version', quals=[], storage=[] (at 0)
          TypeDecl: declname='version', quals=[] (at pp.c:1349)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='flags', quals=[], storage=[] (at 0)
          TypeDecl: declname='flags', quals=[] (at pp.c:1350)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='reserved', quals=[], storage=[] (at 0)
          TypeDecl: declname='reserved', quals=[] (at pp.c:1351)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='platform', quals=[], storage=[] (at 0)
          TypeDecl: declname='platform', quals=[] (at pp.c:1352)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='MTU', quals=[], storage=[] (at 0)
          TypeDecl: declname='MTU', quals=[] (at pp.c:1353)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='radio_crc_fail', quals=[], storage=[] (at 0)
          TypeDecl: declname='radio_crc_fail', quals=[] (at pp.c:1354)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='radio_queue_drops', quals=[], storage=[] (at 0)
          TypeDecl: declname='radio_queue_drops', quals=[] (at pp.c:1355)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='serial_crc_fail', quals=[], storage=[] (at 0)
          TypeDecl: declname='serial_crc_fail', quals=[] (at pp.c:1356)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='serial_tx_fail', quals=[], storage=[] (at 0)
          TypeDecl: declname='serial_tx_fail', quals=[] (at pp.c:1357)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='serial_short_packets', quals=[], storage=[] (at 0)
          TypeDecl: declname='serial_short_packets', quals=[] (at pp.c:1358)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='serial_proto_drops', quals=[], storage=[] (at 0)
          TypeDecl: declname='serial_proto_drops', quals=[] (at pp.c:1359)
            IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='serial_header_t', quals=[], storage=['typedef'] (at pp.c:1375)
    TypeDecl: declname='serial_header_t', quals=[] (at pp.c:1375)
      Struct: name='serial_header', packed=False (at pp.c:1369)
        Decl: name='dest', quals=[], storage=[] (at 0)
          TypeDecl: declname='dest', quals=[] (at pp.c:1370)
            IdentifierType: names=['nx_am_addr_t'] (at None)
        Decl: name='src', quals=[], storage=[] (at 0)
          TypeDecl: declname='src', quals=[] (at pp.c:1371)
            IdentifierType: names=['nx_am_addr_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at 0)
          TypeDecl: declname='length', quals=[] (at pp.c:1372)
            IdentifierType: names=['nx_uint8_t'] (at None)
        Decl: name='group', quals=[], storage=[] (at 0)
          TypeDecl: declname='group', quals=[] (at pp.c:1373)
            IdentifierType: names=['nx_am_group_t'] (at None)
        Decl: name='type', quals=[], storage=[] (at 0)
          TypeDecl: declname='type', quals=[] (at pp.c:1374)
            IdentifierType: names=['nx_am_id_t'] (at None)
  Typedef: name='serial_packet_t', quals=[], storage=['typedef'] (at pp.c:1384)
    TypeDecl: declname='serial_packet_t', quals=[] (at pp.c:1384)
      Struct: name='serial_packet', packed=False (at pp.c:1381)
        Decl: name='header', quals=[], storage=[] (at 0)
          TypeDecl: declname='header', quals=[] (at pp.c:1382)
            IdentifierType: names=['serial_header_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:1383)
            TypeDecl: declname='data', quals=[] (at pp.c:1383)
              IdentifierType: names=['nx_uint8_t'] (at None)
  Typedef: name='serial_metadata_t', quals=[], storage=['typedef'] (at pp.c:1391)
    TypeDecl: declname='serial_metadata_t', quals=[] (at pp.c:1391)
      Struct: name='serial_metadata', packed=False (at pp.c:1389)
        Decl: name='ack', quals=[], storage=[] (at 0)
          TypeDecl: declname='ack', quals=[] (at pp.c:1390)
            IdentifierType: names=['nx_uint8_t'] (at None)
  Typedef: name='message_header_t', quals=[], storage=['typedef'] (at pp.c:1397)
    TypeDecl: declname='message_header_t', quals=[] (at pp.c:1397)
      Union: name='message_header', packed=False (at pp.c:1394)
        Decl: name='cc2420', quals=[], storage=[] (at 0)
          TypeDecl: declname='cc2420', quals=[] (at pp.c:1395)
            IdentifierType: names=['cc2420_header_t'] (at None)
        Decl: name='serial', quals=[], storage=[] (at 0)
          TypeDecl: declname='serial', quals=[] (at pp.c:1396)
            IdentifierType: names=['serial_header_t'] (at None)
  Typedef: name='message_footer_t', quals=[], storage=['typedef'] (at pp.c:1404)
    TypeDecl: declname='message_footer_t', quals=[] (at pp.c:1404)
      Union: name='TOSRadioFooter', packed=False (at pp.c:1402)
        Decl: name='cc2420', quals=[], storage=[] (at 0)
          TypeDecl: declname='cc2420', quals=[] (at pp.c:1403)
            IdentifierType: names=['cc2420_footer_t'] (at None)
  Typedef: name='message_metadata_t', quals=[], storage=['typedef'] (at pp.c:1411)
    TypeDecl: declname='message_metadata_t', quals=[] (at pp.c:1411)
      Union: name='TOSRadioMetadata', packed=False (at pp.c:1409)
        Decl: name='cc2420', quals=[], storage=[] (at 0)
          TypeDecl: declname='cc2420', quals=[] (at pp.c:1410)
            IdentifierType: names=['cc2420_metadata_t'] (at None)
  Typedef: name='message_t', quals=[], storage=['typedef'] (at pp.c:1419)
    TypeDecl: declname='message_t', quals=[] (at pp.c:1419)
      Struct: name='message_t', packed=False (at pp.c:1414)
        Decl: name='header', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:1415)
            TypeDecl: declname='header', quals=[] (at pp.c:1415)
              IdentifierType: names=['nx_uint8_t'] (at None)
            UnaryOp: op='sizeof' (at pp.c:1415)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['message_header_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:1416)
            TypeDecl: declname='data', quals=[] (at pp.c:1416)
              IdentifierType: names=['nx_uint8_t'] (at None)
            Constant: type='int', value='28' (at pp.c:1416)
        Decl: name='footer', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:1417)
            TypeDecl: declname='footer', quals=[] (at pp.c:1417)
              IdentifierType: names=['nx_uint8_t'] (at None)
            UnaryOp: op='sizeof' (at pp.c:1417)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['message_footer_t'] (at None)
        Decl: name='metadata', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:1418)
            TypeDecl: declname='metadata', quals=[] (at pp.c:1418)
              IdentifierType: names=['nx_uint8_t'] (at None)
            UnaryOp: op='sizeof' (at pp.c:1418)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['message_metadata_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1421)
    Enum: name='__nesc_unnamed4270' (at pp.c:1421)
      EnumeratorList:  (at pp.c:1422)
        Enumerator: name='LEDS_LED0' (at pp.c:1422)
          BinaryOp: op='<<' (at pp.c:1422)
            Constant: type='int', value='1' (at pp.c:1422)
            Constant: type='int', value='0' (at pp.c:1422)
        Enumerator: name='LEDS_LED1' (at pp.c:1423)
          BinaryOp: op='<<' (at pp.c:1423)
            Constant: type='int', value='1' (at pp.c:1423)
            Constant: type='int', value='1' (at pp.c:1423)
        Enumerator: name='LEDS_LED2' (at pp.c:1424)
          BinaryOp: op='<<' (at pp.c:1424)
            Constant: type='int', value='1' (at pp.c:1424)
            Constant: type='int', value='2' (at pp.c:1424)
        Enumerator: name='LEDS_LED3' (at pp.c:1425)
          BinaryOp: op='<<' (at pp.c:1425)
            Constant: type='int', value='1' (at pp.c:1425)
            Constant: type='int', value='3' (at pp.c:1425)
        Enumerator: name='LEDS_LED4' (at pp.c:1426)
          BinaryOp: op='<<' (at pp.c:1426)
            Constant: type='int', value='1' (at pp.c:1426)
            Constant: type='int', value='4' (at pp.c:1426)
        Enumerator: name='LEDS_LED5' (at pp.c:1427)
          BinaryOp: op='<<' (at pp.c:1427)
            Constant: type='int', value='1' (at pp.c:1427)
            Constant: type='int', value='5' (at pp.c:1427)
        Enumerator: name='LEDS_LED6' (at pp.c:1428)
          BinaryOp: op='<<' (at pp.c:1428)
            Constant: type='int', value='1' (at pp.c:1428)
            Constant: type='int', value='6' (at pp.c:1428)
        Enumerator: name='LEDS_LED7' (at pp.c:1429)
          BinaryOp: op='<<' (at pp.c:1429)
            Constant: type='int', value='1' (at pp.c:1429)
            Constant: type='int', value='7' (at pp.c:1429)
  Decl: name=None, quals=[], storage=[] (at pp.c:1432)
    Enum: name='__nesc_unnamed4271' (at pp.c:1432)
      EnumeratorList:  (at pp.c:1433)
        Enumerator: name='MSP430TIMER_CM_NONE' (at pp.c:1433)
          Constant: type='int', value='0' (at pp.c:1433)
        Enumerator: name='MSP430TIMER_CM_RISING' (at pp.c:1434)
          Constant: type='int', value='1' (at pp.c:1434)
        Enumerator: name='MSP430TIMER_CM_FALLING' (at pp.c:1435)
          Constant: type='int', value='2' (at pp.c:1435)
        Enumerator: name='MSP430TIMER_CM_BOTH' (at pp.c:1436)
          Constant: type='int', value='3' (at pp.c:1436)
        Enumerator: name='MSP430TIMER_STOP_MODE' (at pp.c:1438)
          Constant: type='int', value='0' (at pp.c:1438)
        Enumerator: name='MSP430TIMER_UP_MODE' (at pp.c:1439)
          Constant: type='int', value='1' (at pp.c:1439)
        Enumerator: name='MSP430TIMER_CONTINUOUS_MODE' (at pp.c:1440)
          Constant: type='int', value='2' (at pp.c:1440)
        Enumerator: name='MSP430TIMER_UPDOWN_MODE' (at pp.c:1441)
          Constant: type='int', value='3' (at pp.c:1441)
        Enumerator: name='MSP430TIMER_TACLK' (at pp.c:1443)
          Constant: type='int', value='0' (at pp.c:1443)
        Enumerator: name='MSP430TIMER_TBCLK' (at pp.c:1444)
          Constant: type='int', value='0' (at pp.c:1444)
        Enumerator: name='MSP430TIMER_ACLK' (at pp.c:1445)
          Constant: type='int', value='1' (at pp.c:1445)
        Enumerator: name='MSP430TIMER_SMCLK' (at pp.c:1446)
          Constant: type='int', value='2' (at pp.c:1446)
        Enumerator: name='MSP430TIMER_INCLK' (at pp.c:1447)
          Constant: type='int', value='3' (at pp.c:1447)
        Enumerator: name='MSP430TIMER_CLOCKDIV_1' (at pp.c:1449)
          Constant: type='int', value='0' (at pp.c:1449)
        Enumerator: name='MSP430TIMER_CLOCKDIV_2' (at pp.c:1450)
          Constant: type='int', value='1' (at pp.c:1450)
        Enumerator: name='MSP430TIMER_CLOCKDIV_4' (at pp.c:1451)
          Constant: type='int', value='2' (at pp.c:1451)
        Enumerator: name='MSP430TIMER_CLOCKDIV_8' (at pp.c:1452)
          Constant: type='int', value='3' (at pp.c:1452)
  Typedef: name='msp430_compare_control_t', quals=[], storage=['typedef'] (at pp.c:1469)
    TypeDecl: declname='msp430_compare_control_t', quals=[] (at pp.c:1469)
      Struct: name='__nesc_unnamed4272', packed=False (at pp.c:1456)
        Decl: name='ccifg', quals=[], storage=[] (at 0)
          TypeDecl: declname='ccifg', quals=[] (at pp.c:1458)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:1458)
        Decl: name='cov', quals=[], storage=[] (at 0)
          TypeDecl: declname='cov', quals=[] (at pp.c:1459)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:1459)
        Decl: name='out', quals=[], storage=[] (at 0)
          TypeDecl: declname='out', quals=[] (at pp.c:1460)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:1460)
        Decl: name='cci', quals=[], storage=[] (at 0)
          TypeDecl: declname='cci', quals=[] (at pp.c:1461)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:1461)
        Decl: name='ccie', quals=[], storage=[] (at 0)
          TypeDecl: declname='ccie', quals=[] (at pp.c:1462)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:1462)
        Decl: name='outmod', quals=[], storage=[] (at 0)
          TypeDecl: declname='outmod', quals=[] (at pp.c:1463)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='3' (at pp.c:1463)
        Decl: name='cap', quals=[], storage=[] (at 0)
          TypeDecl: declname='cap', quals=[] (at pp.c:1464)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:1464)
        Decl: name='clld', quals=[], storage=[] (at 0)
          TypeDecl: declname='clld', quals=[] (at pp.c:1465)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:1465)
        Decl: name='scs', quals=[], storage=[] (at 0)
          TypeDecl: declname='scs', quals=[] (at pp.c:1466)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:1466)
        Decl: name='ccis', quals=[], storage=[] (at 0)
          TypeDecl: declname='ccis', quals=[] (at pp.c:1467)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:1467)
        Decl: name='cm', quals=[], storage=[] (at 0)
          TypeDecl: declname='cm', quals=[] (at pp.c:1468)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:1468)
  Typedef: name='msp430_timer_a_control_t', quals=[], storage=['typedef'] (at pp.c:1482)
    TypeDecl: declname='msp430_timer_a_control_t', quals=[] (at pp.c:1482)
      Struct: name='__nesc_unnamed4273', packed=False (at pp.c:1472)
        Decl: name='taifg', quals=[], storage=[] (at 0)
          TypeDecl: declname='taifg', quals=[] (at pp.c:1474)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:1474)
        Decl: name='taie', quals=[], storage=[] (at 0)
          TypeDecl: declname='taie', quals=[] (at pp.c:1475)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:1475)
        Decl: name='taclr', quals=[], storage=[] (at 0)
          TypeDecl: declname='taclr', quals=[] (at pp.c:1476)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:1476)
        Decl: name='_unused0', quals=[], storage=[] (at 0)
          TypeDecl: declname='_unused0', quals=[] (at pp.c:1477)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:1477)
        Decl: name='mc', quals=[], storage=[] (at 0)
          TypeDecl: declname='mc', quals=[] (at pp.c:1478)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:1478)
        Decl: name='id', quals=[], storage=[] (at 0)
          TypeDecl: declname='id', quals=[] (at pp.c:1479)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:1479)
        Decl: name='tassel', quals=[], storage=[] (at 0)
          TypeDecl: declname='tassel', quals=[] (at pp.c:1480)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:1480)
        Decl: name='_unused1', quals=[], storage=[] (at 0)
          TypeDecl: declname='_unused1', quals=[] (at pp.c:1481)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='6' (at pp.c:1481)
  Typedef: name='msp430_timer_b_control_t', quals=[], storage=['typedef'] (at pp.c:1498)
    TypeDecl: declname='msp430_timer_b_control_t', quals=[] (at pp.c:1498)
      Struct: name='__nesc_unnamed4274', packed=False (at pp.c:1485)
        Decl: name='tbifg', quals=[], storage=[] (at 0)
          TypeDecl: declname='tbifg', quals=[] (at pp.c:1487)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:1487)
        Decl: name='tbie', quals=[], storage=[] (at 0)
          TypeDecl: declname='tbie', quals=[] (at pp.c:1488)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:1488)
        Decl: name='tbclr', quals=[], storage=[] (at 0)
          TypeDecl: declname='tbclr', quals=[] (at pp.c:1489)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:1489)
        Decl: name='_unused0', quals=[], storage=[] (at 0)
          TypeDecl: declname='_unused0', quals=[] (at pp.c:1490)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:1490)
        Decl: name='mc', quals=[], storage=[] (at 0)
          TypeDecl: declname='mc', quals=[] (at pp.c:1491)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:1491)
        Decl: name='id', quals=[], storage=[] (at 0)
          TypeDecl: declname='id', quals=[] (at pp.c:1492)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:1492)
        Decl: name='tbssel', quals=[], storage=[] (at 0)
          TypeDecl: declname='tbssel', quals=[] (at pp.c:1493)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:1493)
        Decl: name='_unused1', quals=[], storage=[] (at 0)
          TypeDecl: declname='_unused1', quals=[] (at pp.c:1494)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:1494)
        Decl: name='cntl', quals=[], storage=[] (at 0)
          TypeDecl: declname='cntl', quals=[] (at pp.c:1495)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:1495)
        Decl: name='tbclgrp', quals=[], storage=[] (at 0)
          TypeDecl: declname='tbclgrp', quals=[] (at pp.c:1496)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='2' (at pp.c:1496)
        Decl: name='_unused2', quals=[], storage=[] (at 0)
          TypeDecl: declname='_unused2', quals=[] (at pp.c:1497)
            IdentifierType: names=['int'] (at None)
          Constant: type='int', value='1' (at pp.c:1497)
  Decl: name=None, quals=[], storage=[] (at pp.c:1500)
    Enum: name='__nesc_unnamed4275' (at pp.c:1500)
      EnumeratorList:  (at pp.c:1502)
        Enumerator: name='IEEE_EUI64_LENGTH' (at pp.c:1502)
          Constant: type='int', value='8' (at pp.c:1502)
  Typedef: name='ieee_eui64_t', quals=[], storage=['typedef'] (at pp.c:1509)
    TypeDecl: declname='ieee_eui64_t', quals=[] (at pp.c:1509)
      Struct: name='ieee_eui64', packed=False (at pp.c:1507)
        Decl: name='data', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:1508)
            TypeDecl: declname='data', quals=[] (at pp.c:1508)
              IdentifierType: names=['uint8_t'] (at None)
            ID: name='IEEE_EUI64_LENGTH' (at pp.c:1508)
  Typedef: name='ieee154_panid_t', quals=[], storage=['typedef'] (at pp.c:1511)
    TypeDecl: declname='ieee154_panid_t', quals=[] (at pp.c:1511)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='ieee154_saddr_t', quals=[], storage=['typedef'] (at pp.c:1512)
    TypeDecl: declname='ieee154_saddr_t', quals=[] (at pp.c:1512)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='ieee154_laddr_t', quals=[], storage=['typedef'] (at pp.c:1513)
    TypeDecl: declname='ieee154_laddr_t', quals=[] (at pp.c:1513)
      IdentifierType: names=['ieee_eui64_t'] (at None)
  Typedef: name='ieee154_addr_t', quals=[], storage=['typedef'] (at pp.c:1528)
    TypeDecl: declname='ieee154_addr_t', quals=[] (at pp.c:1528)
      Struct: name='__nesc_unnamed4276', packed=False (at pp.c:1522)
        Decl: name='ieee_mode', quals=[], storage=[] (at 0)
          TypeDecl: declname='ieee_mode', quals=[] (at pp.c:1523)
            IdentifierType: names=['uint8_t'] (at None)
          Constant: type='int', value='2' (at pp.c:1523)
        Decl: name='ieee_addr', quals=[], storage=[] (at 0)
          TypeDecl: declname='ieee_addr', quals=[] (at pp.c:1527)
            Union: name='__nesc_unnamed4277', packed=False (at pp.c:1524)
              Decl: name='saddr', quals=[], storage=[] (at 0)
                TypeDecl: declname='saddr', quals=[] (at pp.c:1525)
                  IdentifierType: names=['ieee154_saddr_t'] (at None)
              Decl: name='laddr', quals=[], storage=[] (at 0)
                TypeDecl: declname='laddr', quals=[] (at pp.c:1526)
                  IdentifierType: names=['ieee154_laddr_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1532)
    Enum: name='__nesc_unnamed4278' (at pp.c:1532)
      EnumeratorList:  (at pp.c:1533)
        Enumerator: name='IEEE154_BROADCAST_ADDR' (at pp.c:1533)
          Constant: type='int', value='0xffff' (at pp.c:1533)
        Enumerator: name='IEEE154_LINK_MTU' (at pp.c:1534)
          Constant: type='int', value='127' (at pp.c:1534)
  Decl: name=None, quals=[], storage=[] (at pp.c:1537)
    Struct: name='ieee154_frame_addr', packed=False (at pp.c:1537)
      Decl: name='ieee_src', quals=[], storage=[] (at 0)
        TypeDecl: declname='ieee_src', quals=[] (at pp.c:1538)
          IdentifierType: names=['ieee154_addr_t'] (at None)
      Decl: name='ieee_dst', quals=[], storage=[] (at 0)
        TypeDecl: declname='ieee_dst', quals=[] (at pp.c:1539)
          IdentifierType: names=['ieee154_addr_t'] (at None)
      Decl: name='ieee_dstpan', quals=[], storage=[] (at 0)
        TypeDecl: declname='ieee_dstpan', quals=[] (at pp.c:1540)
          IdentifierType: names=['ieee154_panid_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1543)
    Enum: name='__nesc_unnamed4279' (at pp.c:1543)
      EnumeratorList:  (at pp.c:1544)
        Enumerator: name='IEEE154_MIN_HDR_SZ' (at pp.c:1544)
          Constant: type='int', value='6' (at pp.c:1544)
  Decl: name=None, quals=[], storage=[] (at pp.c:1547)
    Enum: name='ieee154_fcf_enums' (at pp.c:1547)
      EnumeratorList:  (at pp.c:1548)
        Enumerator: name='IEEE154_FCF_FRAME_TYPE' (at pp.c:1548)
          Constant: type='int', value='0' (at pp.c:1548)
        Enumerator: name='IEEE154_FCF_SECURITY_ENABLED' (at pp.c:1549)
          Constant: type='int', value='3' (at pp.c:1549)
        Enumerator: name='IEEE154_FCF_FRAME_PENDING' (at pp.c:1550)
          Constant: type='int', value='4' (at pp.c:1550)
        Enumerator: name='IEEE154_FCF_ACK_REQ' (at pp.c:1551)
          Constant: type='int', value='5' (at pp.c:1551)
        Enumerator: name='IEEE154_FCF_INTRAPAN' (at pp.c:1552)
          Constant: type='int', value='6' (at pp.c:1552)
        Enumerator: name='IEEE154_FCF_DEST_ADDR_MODE' (at pp.c:1553)
          Constant: type='int', value='10' (at pp.c:1553)
        Enumerator: name='IEEE154_FCF_SRC_ADDR_MODE' (at pp.c:1554)
          Constant: type='int', value='14' (at pp.c:1554)
  Decl: name=None, quals=[], storage=[] (at pp.c:1557)
    Enum: name='ieee154_fcf_type_enums' (at pp.c:1557)
      EnumeratorList:  (at pp.c:1558)
        Enumerator: name='IEEE154_TYPE_BEACON' (at pp.c:1558)
          Constant: type='int', value='0' (at pp.c:1558)
        Enumerator: name='IEEE154_TYPE_DATA' (at pp.c:1559)
          Constant: type='int', value='1' (at pp.c:1559)
        Enumerator: name='IEEE154_TYPE_ACK' (at pp.c:1560)
          Constant: type='int', value='2' (at pp.c:1560)
        Enumerator: name='IEEE154_TYPE_MAC_CMD' (at pp.c:1561)
          Constant: type='int', value='3' (at pp.c:1561)
  Decl: name=None, quals=[], storage=[] (at pp.c:1564)
    Enum: name='iee154_fcf_addr_mode_enums' (at pp.c:1564)
      EnumeratorList:  (at pp.c:1565)
        Enumerator: name='IEEE154_ADDR_NONE' (at pp.c:1565)
          Constant: type='int', value='0' (at pp.c:1565)
        Enumerator: name='IEEE154_ADDR_SHORT' (at pp.c:1566)
          Constant: type='int', value='2' (at pp.c:1566)
        Enumerator: name='IEEE154_ADDR_EXT' (at pp.c:1567)
          Constant: type='int', value='3' (at pp.c:1567)
  Typedef: name='msp430_usartmode_t', quals=[], storage=['typedef'] (at pp.c:1579)
    TypeDecl: declname='msp430_usartmode_t', quals=[] (at pp.c:1579)
      Enum: name='__nesc_unnamed4280' (at pp.c:1571)
        EnumeratorList:  (at pp.c:1573)
          Enumerator: name='USART_NONE' (at pp.c:1573)
            Constant: type='int', value='0' (at pp.c:1573)
          Enumerator: name='USART_UART' (at pp.c:1574)
            Constant: type='int', value='1' (at pp.c:1574)
          Enumerator: name='USART_UART_TX' (at pp.c:1575)
            Constant: type='int', value='2' (at pp.c:1575)
          Enumerator: name='USART_UART_RX' (at pp.c:1576)
            Constant: type='int', value='3' (at pp.c:1576)
          Enumerator: name='USART_SPI' (at pp.c:1577)
            Constant: type='int', value='4' (at pp.c:1577)
          Enumerator: name='USART_I2C' (at pp.c:1578)
            Constant: type='int', value='5' (at pp.c:1578)
  Typedef: name='msp430_uctl_t', quals=[], storage=['typedef'] (at pp.c:1600)
    TypeDecl: declname='msp430_uctl_t', quals=[] (at pp.c:1600)
      Struct: name='__nesc_unnamed4281', packed=True (at pp.c:1591)
        Decl: name='swrst', quals=[], storage=[] (at 0)
          TypeDecl: declname='swrst', quals=[] (at pp.c:1592)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1592)
        Decl: name='mm', quals=[], storage=[] (at 0)
          TypeDecl: declname='mm', quals=[] (at pp.c:1593)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1593)
        Decl: name='sync', quals=[], storage=[] (at 0)
          TypeDecl: declname='sync', quals=[] (at pp.c:1594)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1594)
        Decl: name='listen', quals=[], storage=[] (at 0)
          TypeDecl: declname='listen', quals=[] (at pp.c:1595)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1595)
        Decl: name='clen', quals=[], storage=[] (at 0)
          TypeDecl: declname='clen', quals=[] (at pp.c:1596)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1596)
        Decl: name='spb', quals=[], storage=[] (at 0)
          TypeDecl: declname='spb', quals=[] (at pp.c:1597)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1597)
        Decl: name='pev', quals=[], storage=[] (at 0)
          TypeDecl: declname='pev', quals=[] (at pp.c:1598)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1598)
        Decl: name='pena', quals=[], storage=[] (at 0)
          TypeDecl: declname='pena', quals=[] (at pp.c:1599)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1599)
  Typedef: name='msp430_utctl_t', quals=[], storage=['typedef'] (at pp.c:1619)
    TypeDecl: declname='msp430_utctl_t', quals=[] (at pp.c:1619)
      Struct: name='__nesc_unnamed4282', packed=True (at pp.c:1611)
        Decl: name='txept', quals=[], storage=[] (at 0)
          TypeDecl: declname='txept', quals=[] (at pp.c:1612)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1612)
        Decl: name='stc', quals=[], storage=[] (at 0)
          TypeDecl: declname='stc', quals=[] (at pp.c:1613)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1613)
        Decl: name='txwake', quals=[], storage=[] (at 0)
          TypeDecl: declname='txwake', quals=[] (at pp.c:1614)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1614)
        Decl: name='urxse', quals=[], storage=[] (at 0)
          TypeDecl: declname='urxse', quals=[] (at pp.c:1615)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1615)
        Decl: name='ssel', quals=[], storage=[] (at 0)
          TypeDecl: declname='ssel', quals=[] (at pp.c:1616)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:1616)
        Decl: name='ckpl', quals=[], storage=[] (at 0)
          TypeDecl: declname='ckpl', quals=[] (at pp.c:1617)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1617)
        Decl: name='ckph', quals=[], storage=[] (at 0)
          TypeDecl: declname='ckph', quals=[] (at pp.c:1618)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1618)
  Typedef: name='msp430_urctl_t', quals=[], storage=['typedef'] (at pp.c:1640)
    TypeDecl: declname='msp430_urctl_t', quals=[] (at pp.c:1640)
      Struct: name='__nesc_unnamed4283', packed=True (at pp.c:1631)
        Decl: name='rxerr', quals=[], storage=[] (at 0)
          TypeDecl: declname='rxerr', quals=[] (at pp.c:1632)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1632)
        Decl: name='rxwake', quals=[], storage=[] (at 0)
          TypeDecl: declname='rxwake', quals=[] (at pp.c:1633)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1633)
        Decl: name='urxwie', quals=[], storage=[] (at 0)
          TypeDecl: declname='urxwie', quals=[] (at pp.c:1634)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1634)
        Decl: name='urxeie', quals=[], storage=[] (at 0)
          TypeDecl: declname='urxeie', quals=[] (at pp.c:1635)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1635)
        Decl: name='brk', quals=[], storage=[] (at 0)
          TypeDecl: declname='brk', quals=[] (at pp.c:1636)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1636)
        Decl: name='oe', quals=[], storage=[] (at 0)
          TypeDecl: declname='oe', quals=[] (at pp.c:1637)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1637)
        Decl: name='pe', quals=[], storage=[] (at 0)
          TypeDecl: declname='pe', quals=[] (at pp.c:1638)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1638)
        Decl: name='fe', quals=[], storage=[] (at 0)
          TypeDecl: declname='fe', quals=[] (at pp.c:1639)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1639)
  Typedef: name='msp430_spi_config_t', quals=[], storage=['typedef'] (at pp.c:1660)
    TypeDecl: declname='msp430_spi_config_t', quals=[] (at pp.c:1660)
      Struct: name='__nesc_unnamed4284', packed=False (at pp.c:1643)
        Decl: name='ubr', quals=[], storage=[] (at 0)
          TypeDecl: declname='ubr', quals=[] (at pp.c:1644)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='16' (at pp.c:1644)
        Decl: name='wxvnw', quals=[], storage=[] (at 0)
          TypeDecl: declname='wxvnw', quals=[] (at pp.c:1646)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1646)
        Decl: name='mm', quals=[], storage=[] (at 0)
          TypeDecl: declname='mm', quals=[] (at pp.c:1647)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1647)
        Decl: name='nqijg', quals=[], storage=[] (at 0)
          TypeDecl: declname='nqijg', quals=[] (at pp.c:1648)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1648)
        Decl: name='listen', quals=[], storage=[] (at 0)
          TypeDecl: declname='listen', quals=[] (at pp.c:1649)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1649)
        Decl: name='clen', quals=[], storage=[] (at 0)
          TypeDecl: declname='clen', quals=[] (at pp.c:1650)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1650)
        Decl: name='blhyq', quals=[], storage=[] (at 0)
          TypeDecl: declname='blhyq', quals=[] (at pp.c:1651)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:1651)
        Decl: name='wvbgj', quals=[], storage=[] (at 0)
          TypeDecl: declname='wvbgj', quals=[] (at pp.c:1653)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1653)
        Decl: name='stc', quals=[], storage=[] (at 0)
          TypeDecl: declname='stc', quals=[] (at pp.c:1654)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1654)
        Decl: name='dntva', quals=[], storage=[] (at 0)
          TypeDecl: declname='dntva', quals=[] (at pp.c:1655)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:1655)
        Decl: name='ssel', quals=[], storage=[] (at 0)
          TypeDecl: declname='ssel', quals=[] (at pp.c:1656)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:1656)
        Decl: name='ckpl', quals=[], storage=[] (at 0)
          TypeDecl: declname='ckpl', quals=[] (at pp.c:1657)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1657)
        Decl: name='ckph', quals=[], storage=[] (at 0)
          TypeDecl: declname='ckph', quals=[] (at pp.c:1658)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1658)
        Decl: name='cfhjy', quals=[], storage=[] (at 0)
          TypeDecl: declname='cfhjy', quals=[] (at pp.c:1659)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='0' (at pp.c:1659)
  Typedef: name='msp430_spi_registers_t', quals=[], storage=['typedef'] (at pp.c:1671)
    TypeDecl: declname='msp430_spi_registers_t', quals=[] (at pp.c:1671)
      Struct: name='__nesc_unnamed4285', packed=False (at pp.c:1667)
        Decl: name='ubr', quals=[], storage=[] (at 0)
          TypeDecl: declname='ubr', quals=[] (at pp.c:1668)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='uctl', quals=[], storage=[] (at 0)
          TypeDecl: declname='uctl', quals=[] (at pp.c:1669)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='utctl', quals=[], storage=[] (at 0)
          TypeDecl: declname='utctl', quals=[] (at pp.c:1670)
            IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='msp430_spi_union_config_t', quals=[], storage=['typedef'] (at pp.c:1680)
    TypeDecl: declname='msp430_spi_union_config_t', quals=[] (at pp.c:1680)
      Union: name='__nesc_unnamed4286', packed=False (at pp.c:1677)
        Decl: name='spiConfig', quals=[], storage=[] (at 0)
          TypeDecl: declname='spiConfig', quals=[] (at pp.c:1678)
            IdentifierType: names=['msp430_spi_config_t'] (at None)
        Decl: name='spiRegisters', quals=[], storage=[] (at 0)
          TypeDecl: declname='spiRegisters', quals=[] (at pp.c:1679)
            IdentifierType: names=['msp430_spi_registers_t'] (at None)
  Decl: name='msp430_spi_default_config', quals=[], storage=[] (at pp.c:1682)
    TypeDecl: declname='msp430_spi_default_config', quals=[] (at pp.c:1682)
      IdentifierType: names=['msp430_spi_union_config_t'] (at None)
    ExprList:  (at pp.c:1684)
      ExprList:  (at pp.c:1684)
        Assignment: op='=' (at pp.c:1684)
          StructRef: type='.' (at pp.c:1684)
            ID: name='ubr' (at pp.c:1684)
          Constant: type='int', value='0x0002' (at pp.c:1684)
        Assignment: op='=' (at pp.c:1685)
          StructRef: type='.' (at pp.c:1685)
            ID: name='ssel' (at pp.c:1685)
          Constant: type='int', value='0x02' (at pp.c:1685)
        Assignment: op='=' (at pp.c:1686)
          StructRef: type='.' (at pp.c:1686)
            ID: name='clen' (at pp.c:1686)
          Constant: type='int', value='1' (at pp.c:1686)
        Assignment: op='=' (at pp.c:1687)
          StructRef: type='.' (at pp.c:1687)
            ID: name='listen' (at pp.c:1687)
          Constant: type='int', value='0' (at pp.c:1687)
        Assignment: op='=' (at pp.c:1688)
          StructRef: type='.' (at pp.c:1688)
            ID: name='mm' (at pp.c:1688)
          Constant: type='int', value='1' (at pp.c:1688)
        Assignment: op='=' (at pp.c:1689)
          StructRef: type='.' (at pp.c:1689)
            ID: name='ckph' (at pp.c:1689)
          Constant: type='int', value='1' (at pp.c:1689)
        Assignment: op='=' (at pp.c:1690)
          StructRef: type='.' (at pp.c:1690)
            ID: name='ckpl' (at pp.c:1690)
          Constant: type='int', value='0' (at pp.c:1690)
        Assignment: op='=' (at pp.c:1691)
          StructRef: type='.' (at pp.c:1691)
            ID: name='stc' (at pp.c:1691)
          Constant: type='int', value='1' (at pp.c:1691)
  Typedef: name='msp430_uart_rate_t', quals=[], storage=['typedef'] (at pp.c:1713)
    TypeDecl: declname='msp430_uart_rate_t', quals=[] (at pp.c:1713)
      Enum: name='__nesc_unnamed4287' (at pp.c:1694)
        EnumeratorList:  (at pp.c:1696)
          Enumerator: name='UBR_32KHZ_1200' (at pp.c:1696)
            Constant: type='int', value='0x001B' (at pp.c:1696)
          Enumerator: name='UMCTL_32KHZ_1200' (at pp.c:1696)
            Constant: type='int', value='0x94' (at pp.c:1696)
          Enumerator: name='UBR_32KHZ_1800' (at pp.c:1697)
            Constant: type='int', value='0x0012' (at pp.c:1697)
          Enumerator: name='UMCTL_32KHZ_1800' (at pp.c:1697)
            Constant: type='int', value='0x84' (at pp.c:1697)
          Enumerator: name='UBR_32KHZ_2400' (at pp.c:1698)
            Constant: type='int', value='0x000D' (at pp.c:1698)
          Enumerator: name='UMCTL_32KHZ_2400' (at pp.c:1698)
            Constant: type='int', value='0x6D' (at pp.c:1698)
          Enumerator: name='UBR_32KHZ_4800' (at pp.c:1699)
            Constant: type='int', value='0x0006' (at pp.c:1699)
          Enumerator: name='UMCTL_32KHZ_4800' (at pp.c:1699)
            Constant: type='int', value='0x77' (at pp.c:1699)
          Enumerator: name='UBR_32KHZ_9600' (at pp.c:1700)
            Constant: type='int', value='0x0003' (at pp.c:1700)
          Enumerator: name='UMCTL_32KHZ_9600' (at pp.c:1700)
            Constant: type='int', value='0x29' (at pp.c:1700)
          Enumerator: name='UBR_1MHZ_1200' (at pp.c:1702)
            Constant: type='int', value='0x0369' (at pp.c:1702)
          Enumerator: name='UMCTL_1MHZ_1200' (at pp.c:1702)
            Constant: type='int', value='0x7B' (at pp.c:1702)
          Enumerator: name='UBR_1MHZ_1800' (at pp.c:1703)
            Constant: type='int', value='0x0246' (at pp.c:1703)
          Enumerator: name='UMCTL_1MHZ_1800' (at pp.c:1703)
            Constant: type='int', value='0x55' (at pp.c:1703)
          Enumerator: name='UBR_1MHZ_2400' (at pp.c:1704)
            Constant: type='int', value='0x01B4' (at pp.c:1704)
          Enumerator: name='UMCTL_1MHZ_2400' (at pp.c:1704)
            Constant: type='int', value='0xDF' (at pp.c:1704)
          Enumerator: name='UBR_1MHZ_4800' (at pp.c:1705)
            Constant: type='int', value='0x00DA' (at pp.c:1705)
          Enumerator: name='UMCTL_1MHZ_4800' (at pp.c:1705)
            Constant: type='int', value='0xAA' (at pp.c:1705)
          Enumerator: name='UBR_1MHZ_9600' (at pp.c:1706)
            Constant: type='int', value='0x006D' (at pp.c:1706)
          Enumerator: name='UMCTL_1MHZ_9600' (at pp.c:1706)
            Constant: type='int', value='0x44' (at pp.c:1706)
          Enumerator: name='UBR_1MHZ_19200' (at pp.c:1707)
            Constant: type='int', value='0x0036' (at pp.c:1707)
          Enumerator: name='UMCTL_1MHZ_19200' (at pp.c:1707)
            Constant: type='int', value='0xB5' (at pp.c:1707)
          Enumerator: name='UBR_1MHZ_38400' (at pp.c:1708)
            Constant: type='int', value='0x001B' (at pp.c:1708)
          Enumerator: name='UMCTL_1MHZ_38400' (at pp.c:1708)
            Constant: type='int', value='0x94' (at pp.c:1708)
          Enumerator: name='UBR_1MHZ_57600' (at pp.c:1709)
            Constant: type='int', value='0x0012' (at pp.c:1709)
          Enumerator: name='UMCTL_1MHZ_57600' (at pp.c:1709)
            Constant: type='int', value='0x84' (at pp.c:1709)
          Enumerator: name='UBR_1MHZ_76800' (at pp.c:1710)
            Constant: type='int', value='0x000D' (at pp.c:1710)
          Enumerator: name='UMCTL_1MHZ_76800' (at pp.c:1710)
            Constant: type='int', value='0x6D' (at pp.c:1710)
          Enumerator: name='UBR_1MHZ_115200' (at pp.c:1711)
            Constant: type='int', value='0x0009' (at pp.c:1711)
          Enumerator: name='UMCTL_1MHZ_115200' (at pp.c:1711)
            Constant: type='int', value='0x10' (at pp.c:1711)
          Enumerator: name='UBR_1MHZ_230400' (at pp.c:1712)
            Constant: type='int', value='0x0004' (at pp.c:1712)
          Enumerator: name='UMCTL_1MHZ_230400' (at pp.c:1712)
            Constant: type='int', value='0x55' (at pp.c:1712)
  Typedef: name='msp430_uart_config_t', quals=[], storage=['typedef'] (at pp.c:1745)
    TypeDecl: declname='msp430_uart_config_t', quals=[] (at pp.c:1745)
      Struct: name='__nesc_unnamed4288', packed=False (at pp.c:1716)
        Decl: name='ubr', quals=[], storage=[] (at 0)
          TypeDecl: declname='ubr', quals=[] (at pp.c:1717)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='16' (at pp.c:1717)
        Decl: name='umctl', quals=[], storage=[] (at 0)
          TypeDecl: declname='umctl', quals=[] (at pp.c:1719)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='8' (at pp.c:1719)
        Decl: name='obspr', quals=[], storage=[] (at 0)
          TypeDecl: declname='obspr', quals=[] (at pp.c:1721)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1721)
        Decl: name='mm', quals=[], storage=[] (at 0)
          TypeDecl: declname='mm', quals=[] (at pp.c:1722)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1722)
        Decl: name='vjzga', quals=[], storage=[] (at 0)
          TypeDecl: declname='vjzga', quals=[] (at pp.c:1723)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1723)
        Decl: name='listen', quals=[], storage=[] (at 0)
          TypeDecl: declname='listen', quals=[] (at pp.c:1724)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1724)
        Decl: name='clen', quals=[], storage=[] (at 0)
          TypeDecl: declname='clen', quals=[] (at pp.c:1725)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1725)
        Decl: name='spb', quals=[], storage=[] (at 0)
          TypeDecl: declname='spb', quals=[] (at pp.c:1726)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1726)
        Decl: name='pev', quals=[], storage=[] (at 0)
          TypeDecl: declname='pev', quals=[] (at pp.c:1727)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1727)
        Decl: name='pena', quals=[], storage=[] (at 0)
          TypeDecl: declname='pena', quals=[] (at pp.c:1728)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1728)
        Decl: name='lyqey', quals=[], storage=[] (at 0)
          TypeDecl: declname='lyqey', quals=[] (at pp.c:1729)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='0' (at pp.c:1729)
        Decl: name='bmrcw', quals=[], storage=[] (at 0)
          TypeDecl: declname='bmrcw', quals=[] (at pp.c:1731)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:1731)
        Decl: name='urxse', quals=[], storage=[] (at 0)
          TypeDecl: declname='urxse', quals=[] (at pp.c:1732)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1732)
        Decl: name='ssel', quals=[], storage=[] (at 0)
          TypeDecl: declname='ssel', quals=[] (at pp.c:1733)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:1733)
        Decl: name='ckpl', quals=[], storage=[] (at 0)
          TypeDecl: declname='ckpl', quals=[] (at pp.c:1734)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1734)
        Decl: name='oigpg', quals=[], storage=[] (at 0)
          TypeDecl: declname='oigpg', quals=[] (at pp.c:1735)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1735)
        Decl: name='agchd', quals=[], storage=[] (at 0)
          TypeDecl: declname='agchd', quals=[] (at pp.c:1737)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:1737)
        Decl: name='urxwie', quals=[], storage=[] (at 0)
          TypeDecl: declname='urxwie', quals=[] (at pp.c:1738)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1738)
        Decl: name='urxeie', quals=[], storage=[] (at 0)
          TypeDecl: declname='urxeie', quals=[] (at pp.c:1739)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1739)
        Decl: name='otteq', quals=[], storage=[] (at 0)
          TypeDecl: declname='otteq', quals=[] (at pp.c:1740)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:1740)
        Decl: name='qwjgm', quals=[], storage=[] (at 0)
          TypeDecl: declname='qwjgm', quals=[] (at pp.c:1741)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='0' (at pp.c:1741)
        Decl: name='utxe', quals=[], storage=[] (at 0)
          TypeDecl: declname='utxe', quals=[] (at pp.c:1743)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1743)
        Decl: name='urxe', quals=[], storage=[] (at 0)
          TypeDecl: declname='urxe', quals=[] (at pp.c:1744)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1744)
  Typedef: name='msp430_uart_registers_t', quals=[], storage=['typedef'] (at pp.c:1762)
    TypeDecl: declname='msp430_uart_registers_t', quals=[] (at pp.c:1762)
      Struct: name='__nesc_unnamed4289', packed=False (at pp.c:1755)
        Decl: name='ubr', quals=[], storage=[] (at 0)
          TypeDecl: declname='ubr', quals=[] (at pp.c:1756)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='umctl', quals=[], storage=[] (at 0)
          TypeDecl: declname='umctl', quals=[] (at pp.c:1757)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='uctl', quals=[], storage=[] (at 0)
          TypeDecl: declname='uctl', quals=[] (at pp.c:1758)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='utctl', quals=[], storage=[] (at 0)
          TypeDecl: declname='utctl', quals=[] (at pp.c:1759)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='urctl', quals=[], storage=[] (at 0)
          TypeDecl: declname='urctl', quals=[] (at pp.c:1760)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='ume', quals=[], storage=[] (at 0)
          TypeDecl: declname='ume', quals=[] (at pp.c:1761)
            IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='msp430_uart_union_config_t', quals=[], storage=['typedef'] (at pp.c:1771)
    TypeDecl: declname='msp430_uart_union_config_t', quals=[] (at pp.c:1771)
      Union: name='__nesc_unnamed4290', packed=False (at pp.c:1768)
        Decl: name='uartConfig', quals=[], storage=[] (at 0)
          TypeDecl: declname='uartConfig', quals=[] (at pp.c:1769)
            IdentifierType: names=['msp430_uart_config_t'] (at None)
        Decl: name='uartRegisters', quals=[], storage=[] (at 0)
          TypeDecl: declname='uartRegisters', quals=[] (at pp.c:1770)
            IdentifierType: names=['msp430_uart_registers_t'] (at None)
  Typedef: name='msp430_i2ctctl_t', quals=[], storage=['typedef'] (at pp.c:1782)
    TypeDecl: declname='msp430_i2ctctl_t', quals=[] (at pp.c:1782)
      Struct: name='__nesc_unnamed4291', packed=True (at pp.c:1774)
        Decl: name='i2cstt', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cstt', quals=[] (at pp.c:1775)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1775)
        Decl: name='i2cstp', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cstp', quals=[] (at pp.c:1776)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1776)
        Decl: name='i2cstb', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cstb', quals=[] (at pp.c:1777)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1777)
        Decl: name='i2cctrx', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cctrx', quals=[] (at pp.c:1778)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1778)
        Decl: name='i2cssel', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cssel', quals=[] (at pp.c:1779)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:1779)
        Decl: name='i2ccrm', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2ccrm', quals=[] (at pp.c:1780)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1780)
        Decl: name='i2cword', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cword', quals=[] (at pp.c:1781)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1781)
  Typedef: name='msp430_i2c_config_t', quals=[], storage=['typedef'] (at pp.c:1808)
    TypeDecl: declname='msp430_i2c_config_t', quals=[] (at pp.c:1808)
      Struct: name='__nesc_unnamed4292', packed=False (at pp.c:1785)
        Decl: name='vqymi', quals=[], storage=[] (at 0)
          TypeDecl: declname='vqymi', quals=[] (at pp.c:1786)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1786)
        Decl: name='mst', quals=[], storage=[] (at 0)
          TypeDecl: declname='mst', quals=[] (at pp.c:1787)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1787)
        Decl: name='jfqdy', quals=[], storage=[] (at 0)
          TypeDecl: declname='jfqdy', quals=[] (at pp.c:1788)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1788)
        Decl: name='listen', quals=[], storage=[] (at 0)
          TypeDecl: declname='listen', quals=[] (at pp.c:1789)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1789)
        Decl: name='xa', quals=[], storage=[] (at 0)
          TypeDecl: declname='xa', quals=[] (at pp.c:1790)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1790)
        Decl: name='dmtfd', quals=[], storage=[] (at 0)
          TypeDecl: declname='dmtfd', quals=[] (at pp.c:1791)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1791)
        Decl: name='txdmaen', quals=[], storage=[] (at 0)
          TypeDecl: declname='txdmaen', quals=[] (at pp.c:1792)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1792)
        Decl: name='rxdmaen', quals=[], storage=[] (at 0)
          TypeDecl: declname='rxdmaen', quals=[] (at pp.c:1793)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1793)
        Decl: name='oodml', quals=[], storage=[] (at 0)
          TypeDecl: declname='oodml', quals=[] (at pp.c:1795)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:1795)
        Decl: name='i2cssel', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cssel', quals=[] (at pp.c:1796)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:1796)
        Decl: name='i2crm', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2crm', quals=[] (at pp.c:1797)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1797)
        Decl: name='i2cword', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cword', quals=[] (at pp.c:1798)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1798)
        Decl: name='i2cpsc', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cpsc', quals=[] (at pp.c:1800)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='8' (at pp.c:1800)
        Decl: name='i2csclh', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2csclh', quals=[] (at pp.c:1802)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='8' (at pp.c:1802)
        Decl: name='i2cscll', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cscll', quals=[] (at pp.c:1804)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='8' (at pp.c:1804)
        Decl: name='i2coa', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2coa', quals=[] (at pp.c:1806)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='10' (at pp.c:1806)
        Decl: name='jiyvd', quals=[], storage=[] (at 0)
          TypeDecl: declname='jiyvd', quals=[] (at pp.c:1807)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='6' (at pp.c:1807)
  Typedef: name='msp430_i2c_registers_t', quals=[], storage=['typedef'] (at pp.c:1825)
    TypeDecl: declname='msp430_i2c_registers_t', quals=[] (at pp.c:1825)
      Struct: name='__nesc_unnamed4293', packed=False (at pp.c:1818)
        Decl: name='uctl', quals=[], storage=[] (at 0)
          TypeDecl: declname='uctl', quals=[] (at pp.c:1819)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='i2ctctl', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2ctctl', quals=[] (at pp.c:1820)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='i2cpsc', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cpsc', quals=[] (at pp.c:1821)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='i2csclh', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2csclh', quals=[] (at pp.c:1822)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='i2cscll', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cscll', quals=[] (at pp.c:1823)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='i2coa', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2coa', quals=[] (at pp.c:1824)
            IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='msp430_i2c_union_config_t', quals=[], storage=['typedef'] (at pp.c:1834)
    TypeDecl: declname='msp430_i2c_union_config_t', quals=[] (at pp.c:1834)
      Union: name='__nesc_unnamed4294', packed=False (at pp.c:1831)
        Decl: name='i2cConfig', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cConfig', quals=[] (at pp.c:1832)
            IdentifierType: names=['msp430_i2c_config_t'] (at None)
        Decl: name='i2cRegisters', quals=[], storage=[] (at 0)
          TypeDecl: declname='i2cRegisters', quals=[] (at pp.c:1833)
            IdentifierType: names=['msp430_i2c_registers_t'] (at None)
  Typedef: name='uart_speed_t', quals=[], storage=['typedef'] (at pp.c:1836)
    TypeDecl: declname='uart_speed_t', quals=[] (at pp.c:1836)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='uart_parity_t', quals=[], storage=['typedef'] (at pp.c:1837)
    TypeDecl: declname='uart_parity_t', quals=[] (at pp.c:1837)
      IdentifierType: names=['uint8_t'] (at None)
  Typedef: name='uart_duplex_t', quals=[], storage=['typedef'] (at pp.c:1838)
    TypeDecl: declname='uart_duplex_t', quals=[] (at pp.c:1838)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1840)
    Enum: name='__nesc_unnamed4295' (at pp.c:1840)
      EnumeratorList:  (at pp.c:1841)
        Enumerator: name='TOS_UART_1200' (at pp.c:1841)
          Constant: type='int', value='0' (at pp.c:1841)
        Enumerator: name='TOS_UART_1800' (at pp.c:1842)
          Constant: type='int', value='1' (at pp.c:1842)
        Enumerator: name='TOS_UART_2400' (at pp.c:1843)
          Constant: type='int', value='2' (at pp.c:1843)
        Enumerator: name='TOS_UART_4800' (at pp.c:1844)
          Constant: type='int', value='3' (at pp.c:1844)
        Enumerator: name='TOS_UART_9600' (at pp.c:1845)
          Constant: type='int', value='4' (at pp.c:1845)
        Enumerator: name='TOS_UART_19200' (at pp.c:1846)
          Constant: type='int', value='5' (at pp.c:1846)
        Enumerator: name='TOS_UART_38400' (at pp.c:1847)
          Constant: type='int', value='6' (at pp.c:1847)
        Enumerator: name='TOS_UART_57600' (at pp.c:1848)
          Constant: type='int', value='7' (at pp.c:1848)
        Enumerator: name='TOS_UART_76800' (at pp.c:1849)
          Constant: type='int', value='8' (at pp.c:1849)
        Enumerator: name='TOS_UART_115200' (at pp.c:1850)
          Constant: type='int', value='9' (at pp.c:1850)
        Enumerator: name='TOS_UART_230400' (at pp.c:1851)
          Constant: type='int', value='10' (at pp.c:1851)
  Decl: name=None, quals=[], storage=[] (at pp.c:1854)
    Enum: name='__nesc_unnamed4296' (at pp.c:1854)
      EnumeratorList:  (at pp.c:1855)
        Enumerator: name='TOS_UART_OFF' (at pp.c:1855)
        Enumerator: name='TOS_UART_RONLY' (at pp.c:1856)
        Enumerator: name='TOS_UART_TONLY' (at pp.c:1857)
        Enumerator: name='TOS_UART_DUPLEX' (at pp.c:1858)
  Decl: name=None, quals=[], storage=[] (at pp.c:1861)
    Enum: name='__nesc_unnamed4297' (at pp.c:1861)
      EnumeratorList:  (at pp.c:1862)
        Enumerator: name='TOS_UART_PARITY_NONE' (at pp.c:1862)
        Enumerator: name='TOS_UART_PARITY_EVEN' (at pp.c:1863)
        Enumerator: name='TOS_UART_PARITY_ODD' (at pp.c:1864)
  Typedef: name='resource_client_id_t', quals=[], storage=['typedef'] (at pp.c:1867)
    TypeDecl: declname='resource_client_id_t', quals=[] (at pp.c:1867)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1869)
    Enum: name='__nesc_unnamed4298' (at pp.c:1869)
      EnumeratorList:  (at pp.c:1870)
        Enumerator: name='DALLASID48_SERIAL_LENGTH' (at pp.c:1870)
          Constant: type='int', value='6' (at pp.c:1870)
        Enumerator: name='DALLASID48_DATA_LENGTH' (at pp.c:1871)
          Constant: type='int', value='8' (at pp.c:1871)
  Typedef: name='dallasid48_serial_t', quals=[], storage=['typedef'] (at pp.c:1889)
    TypeDecl: declname='dallasid48_serial_t', quals=[] (at pp.c:1889)
      Union: name='dallasid48_serial_t', packed=False (at pp.c:1882)
        Decl: name='data', quals=[], storage=[] (at 0)
          ArrayDecl:  (at pp.c:1883)
            TypeDecl: declname='data', quals=[] (at pp.c:1883)
              IdentifierType: names=['uint8_t'] (at None)
            ID: name='DALLASID48_DATA_LENGTH' (at pp.c:1883)
        Decl: name='temp', quals=[], storage=[] (at 0)
          TypeDecl: declname='temp', quals=[] (at pp.c:1888)
            Struct: name=None, packed=False (at pp.c:1884)
              Decl: name='family_code', quals=[], storage=[] (at 0)
                TypeDecl: declname='family_code', quals=[] (at pp.c:1885)
                  IdentifierType: names=['uint8_t'] (at None)
              Decl: name='serial', quals=[], storage=[] (at 0)
                ArrayDecl:  (at pp.c:1886)
                  TypeDecl: declname='serial', quals=[] (at pp.c:1886)
                    IdentifierType: names=['uint8_t'] (at None)
                  ID: name='DALLASID48_SERIAL_LENGTH' (at pp.c:1886)
              Decl: name='crc', quals=[], storage=[] (at 0)
                TypeDecl: declname='crc', quals=[] (at pp.c:1887)
                  IdentifierType: names=['uint8_t'] (at None)
  Decl: name='dallasid48checkCrc', quals=[], storage=['inline', 'static'] (at pp.c:1894)
    FuncDecl: quals=None (at pp.c:1894)
      ParamList:  (at pp.c:1894)
        Decl: name='id', quals=['const'], storage=[] (at pp.c:1894)
          PtrDecl: quals=[] (at pp.c:1894)
            TypeDecl: declname='id', quals=['const'] (at pp.c:1894)
              IdentifierType: names=['dallasid48_serial_t'] (at None)
      TypeDecl: declname='dallasid48checkCrc', quals=[] (at pp.c:1894)
        IdentifierType: names=['bool'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:1896)
    Enum: name='__nesc_unnamed4299' (at pp.c:1896)
      EnumeratorList:  (at pp.c:1897)
        Enumerator: name='IEEE_EUI64_COMPANY_ID_0' (at pp.c:1897)
          Constant: type='int', value='0x00' (at pp.c:1897)
        Enumerator: name='IEEE_EUI64_COMPANY_ID_1' (at pp.c:1898)
          Constant: type='int', value='0x12' (at pp.c:1898)
        Enumerator: name='IEEE_EUI64_COMPANY_ID_2' (at pp.c:1899)
          Constant: type='int', value='0x6d' (at pp.c:1899)
        Enumerator: name='IEEE_EUI64_SERIAL_ID_0' (at pp.c:1900)
          Constant: type='char', value="'E'" (at pp.c:1900)
        Enumerator: name='IEEE_EUI64_SERIAL_ID_1' (at pp.c:1901)
          Constant: type='char', value="'P'" (at pp.c:1901)
  Typedef: name='timesync_radio_t', quals=[], storage=['typedef'] (at pp.c:1904)
    TypeDecl: declname='timesync_radio_t', quals=[] (at pp.c:1904)
      IdentifierType: names=['nx_uint32_t'] (at None)
  Typedef: name='timesync_footer_t', quals=[], storage=['typedef'] (at pp.c:1915)
    TypeDecl: declname='timesync_footer_t', quals=[] (at pp.c:1915)
      Struct: name='timesync_footer_t', packed=False (at pp.c:1911)
        Decl: name='type', quals=[], storage=[] (at 0)
          TypeDecl: declname='type', quals=[] (at pp.c:1913)
            IdentifierType: names=['nx_am_id_t'] (at None)
        Decl: name='timestamp', quals=[], storage=[] (at 0)
          TypeDecl: declname='timestamp', quals=[] (at pp.c:1914)
            IdentifierType: names=['timesync_radio_t'] (at None)
  Typedef: name='msp430adc12_channel_config_t', quals=[], storage=['typedef'] (at pp.c:1929)
    TypeDecl: declname='msp430adc12_channel_config_t', quals=[] (at pp.c:1929)
      Struct: name='__nesc_unnamed4300', packed=False (at pp.c:1918)
        Decl: name='inch', quals=[], storage=[] (at 0)
          TypeDecl: declname='inch', quals=[] (at pp.c:1920)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:1920)
        Decl: name='sref', quals=[], storage=[] (at 0)
          TypeDecl: declname='sref', quals=[] (at pp.c:1921)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:1921)
        Decl: name='ref2_5v', quals=[], storage=[] (at 0)
          TypeDecl: declname='ref2_5v', quals=[] (at pp.c:1922)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1922)
        Decl: name='adc12ssel', quals=[], storage=[] (at 0)
          TypeDecl: declname='adc12ssel', quals=[] (at pp.c:1923)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:1923)
        Decl: name='adc12div', quals=[], storage=[] (at 0)
          TypeDecl: declname='adc12div', quals=[] (at pp.c:1924)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:1924)
        Decl: name='sht', quals=[], storage=[] (at 0)
          TypeDecl: declname='sht', quals=[] (at pp.c:1925)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:1925)
        Decl: name='sampcon_ssel', quals=[], storage=[] (at 0)
          TypeDecl: declname='sampcon_ssel', quals=[] (at pp.c:1926)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:1926)
        Decl: name='sampcon_id', quals=[], storage=[] (at 0)
          TypeDecl: declname='sampcon_id', quals=[] (at pp.c:1927)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='2' (at pp.c:1927)
        Decl: name='faymc', quals=[], storage=[] (at 0)
          TypeDecl: declname='faymc', quals=[] (at pp.c:1928)
            IdentifierType: names=['int', 'unsigned'] (at None)
          Constant: type='int', value='0' (at pp.c:1928)
  Typedef: name='adc12memctl_t', quals=[], storage=['typedef'] (at pp.c:1946)
    TypeDecl: declname='adc12memctl_t', quals=[] (at pp.c:1946)
      Struct: name='__nesc_unnamed4301', packed=True (at pp.c:1939)
        Decl: name='inch', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='inch', quals=['volatile'] (at pp.c:1943)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='4' (at pp.c:1943)
        Decl: name='sref', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='sref', quals=['volatile'] (at pp.c:1944)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='3' (at pp.c:1944)
        Decl: name='eos', quals=['volatile'], storage=[] (at 0)
          TypeDecl: declname='eos', quals=['volatile'] (at pp.c:1945)
            IdentifierType: names=['unsigned'] (at None)
          Constant: type='int', value='1' (at pp.c:1945)
  Decl: name=None, quals=[], storage=[] (at pp.c:1948)
    Enum: name='inch_enum' (at pp.c:1948)
      EnumeratorList:  (at pp.c:1951)
        Enumerator: name='INPUT_CHANNEL_A0' (at pp.c:1951)
          Constant: type='int', value='0' (at pp.c:1951)
        Enumerator: name='INPUT_CHANNEL_A1' (at pp.c:1952)
          Constant: type='int', value='1' (at pp.c:1952)
        Enumerator: name='INPUT_CHANNEL_A2' (at pp.c:1953)
          Constant: type='int', value='2' (at pp.c:1953)
        Enumerator: name='INPUT_CHANNEL_A3' (at pp.c:1954)
          Constant: type='int', value='3' (at pp.c:1954)
        Enumerator: name='INPUT_CHANNEL_A4' (at pp.c:1955)
          Constant: type='int', value='4' (at pp.c:1955)
        Enumerator: name='INPUT_CHANNEL_A5' (at pp.c:1956)
          Constant: type='int', value='5' (at pp.c:1956)
        Enumerator: name='INPUT_CHANNEL_A6' (at pp.c:1957)
          Constant: type='int', value='6' (at pp.c:1957)
        Enumerator: name='INPUT_CHANNEL_A7' (at pp.c:1958)
          Constant: type='int', value='7' (at pp.c:1958)
        Enumerator: name='EXTERNAL_REF_VOLTAGE_CHANNEL' (at pp.c:1959)
          Constant: type='int', value='8' (at pp.c:1959)
        Enumerator: name='REF_VOLTAGE_NEG_TERMINAL_CHANNEL' (at pp.c:1960)
          Constant: type='int', value='9' (at pp.c:1960)
        Enumerator: name='TEMPERATURE_DIODE_CHANNEL' (at pp.c:1961)
          Constant: type='int', value='10' (at pp.c:1961)
        Enumerator: name='SUPPLY_VOLTAGE_HALF_CHANNEL' (at pp.c:1962)
          Constant: type='int', value='11' (at pp.c:1962)
        Enumerator: name='INPUT_CHANNEL_NONE' (at pp.c:1963)
          Constant: type='int', value='12' (at pp.c:1963)
  Decl: name=None, quals=[], storage=[] (at pp.c:1966)
    Enum: name='sref_enum' (at pp.c:1966)
      EnumeratorList:  (at pp.c:1968)
        Enumerator: name='REFERENCE_AVcc_AVss' (at pp.c:1968)
          Constant: type='int', value='0' (at pp.c:1968)
        Enumerator: name='REFERENCE_VREFplus_AVss' (at pp.c:1969)
          Constant: type='int', value='1' (at pp.c:1969)
        Enumerator: name='REFERENCE_VeREFplus_AVss' (at pp.c:1970)
          Constant: type='int', value='2' (at pp.c:1970)
        Enumerator: name='REFERENCE_AVcc_VREFnegterm' (at pp.c:1971)
          Constant: type='int', value='4' (at pp.c:1971)
        Enumerator: name='REFERENCE_VREFplus_VREFnegterm' (at pp.c:1972)
          Constant: type='int', value='5' (at pp.c:1972)
        Enumerator: name='REFERENCE_VeREFplus_VREFnegterm' (at pp.c:1973)
          Constant: type='int', value='6' (at pp.c:1973)
  Decl: name=None, quals=[], storage=[] (at pp.c:1976)
    Enum: name='ref2_5v_enum' (at pp.c:1976)
      EnumeratorList:  (at pp.c:1978)
        Enumerator: name='REFVOLT_LEVEL_1_5' (at pp.c:1978)
          Constant: type='int', value='0' (at pp.c:1978)
        Enumerator: name='REFVOLT_LEVEL_2_5' (at pp.c:1979)
          Constant: type='int', value='1' (at pp.c:1979)
        Enumerator: name='REFVOLT_LEVEL_NONE' (at pp.c:1980)
          Constant: type='int', value='0' (at pp.c:1980)
  Decl: name=None, quals=[], storage=[] (at pp.c:1983)
    Enum: name='adc12ssel_enum' (at pp.c:1983)
      EnumeratorList:  (at pp.c:1985)
        Enumerator: name='SHT_SOURCE_ADC12OSC' (at pp.c:1985)
          Constant: type='int', value='0' (at pp.c:1985)
        Enumerator: name='SHT_SOURCE_ACLK' (at pp.c:1986)
          Constant: type='int', value='1' (at pp.c:1986)
        Enumerator: name='SHT_SOURCE_MCLK' (at pp.c:1987)
          Constant: type='int', value='2' (at pp.c:1987)
        Enumerator: name='SHT_SOURCE_SMCLK' (at pp.c:1988)
          Constant: type='int', value='3' (at pp.c:1988)
  Decl: name=None, quals=[], storage=[] (at pp.c:1991)
    Enum: name='adc12div_enum' (at pp.c:1991)
      EnumeratorList:  (at pp.c:1993)
        Enumerator: name='SHT_CLOCK_DIV_1' (at pp.c:1993)
          Constant: type='int', value='0' (at pp.c:1993)
        Enumerator: name='SHT_CLOCK_DIV_2' (at pp.c:1994)
          Constant: type='int', value='1' (at pp.c:1994)
        Enumerator: name='SHT_CLOCK_DIV_3' (at pp.c:1995)
          Constant: type='int', value='2' (at pp.c:1995)
        Enumerator: name='SHT_CLOCK_DIV_4' (at pp.c:1996)
          Constant: type='int', value='3' (at pp.c:1996)
        Enumerator: name='SHT_CLOCK_DIV_5' (at pp.c:1997)
          Constant: type='int', value='4' (at pp.c:1997)
        Enumerator: name='SHT_CLOCK_DIV_6' (at pp.c:1998)
          Constant: type='int', value='5' (at pp.c:1998)
        Enumerator: name='SHT_CLOCK_DIV_7' (at pp.c:1999)
          Constant: type='int', value='6' (at pp.c:1999)
        Enumerator: name='SHT_CLOCK_DIV_8' (at pp.c:2000)
          Constant: type='int', value='7' (at pp.c:2000)
  Decl: name=None, quals=[], storage=[] (at pp.c:2003)
    Enum: name='sht_enum' (at pp.c:2003)
      EnumeratorList:  (at pp.c:2005)
        Enumerator: name='SAMPLE_HOLD_4_CYCLES' (at pp.c:2005)
          Constant: type='int', value='0' (at pp.c:2005)
        Enumerator: name='SAMPLE_HOLD_8_CYCLES' (at pp.c:2006)
          Constant: type='int', value='1' (at pp.c:2006)
        Enumerator: name='SAMPLE_HOLD_16_CYCLES' (at pp.c:2007)
          Constant: type='int', value='2' (at pp.c:2007)
        Enumerator: name='SAMPLE_HOLD_32_CYCLES' (at pp.c:2008)
          Constant: type='int', value='3' (at pp.c:2008)
        Enumerator: name='SAMPLE_HOLD_64_CYCLES' (at pp.c:2009)
          Constant: type='int', value='4' (at pp.c:2009)
        Enumerator: name='SAMPLE_HOLD_96_CYCLES' (at pp.c:2010)
          Constant: type='int', value='5' (at pp.c:2010)
        Enumerator: name='SAMPLE_HOLD_128_CYCLES' (at pp.c:2011)
          Constant: type='int', value='6' (at pp.c:2011)
        Enumerator: name='SAMPLE_HOLD_192_CYCLES' (at pp.c:2012)
          Constant: type='int', value='7' (at pp.c:2012)
        Enumerator: name='SAMPLE_HOLD_256_CYCLES' (at pp.c:2013)
          Constant: type='int', value='8' (at pp.c:2013)
        Enumerator: name='SAMPLE_HOLD_384_CYCLES' (at pp.c:2014)
          Constant: type='int', value='9' (at pp.c:2014)
        Enumerator: name='SAMPLE_HOLD_512_CYCLES' (at pp.c:2015)
          Constant: type='int', value='10' (at pp.c:2015)
        Enumerator: name='SAMPLE_HOLD_768_CYCLES' (at pp.c:2016)
          Constant: type='int', value='11' (at pp.c:2016)
        Enumerator: name='SAMPLE_HOLD_1024_CYCLES' (at pp.c:2017)
          Constant: type='int', value='12' (at pp.c:2017)
  Decl: name=None, quals=[], storage=[] (at pp.c:2020)
    Enum: name='sampcon_ssel_enum' (at pp.c:2020)
      EnumeratorList:  (at pp.c:2022)
        Enumerator: name='SAMPCON_SOURCE_TACLK' (at pp.c:2022)
          Constant: type='int', value='0' (at pp.c:2022)
        Enumerator: name='SAMPCON_SOURCE_ACLK' (at pp.c:2023)
          Constant: type='int', value='1' (at pp.c:2023)
        Enumerator: name='SAMPCON_SOURCE_SMCLK' (at pp.c:2024)
          Constant: type='int', value='2' (at pp.c:2024)
        Enumerator: name='SAMPCON_SOURCE_INCLK' (at pp.c:2025)
          Constant: type='int', value='3' (at pp.c:2025)
  Decl: name=None, quals=[], storage=[] (at pp.c:2028)
    Enum: name='sampcon_id_enum' (at pp.c:2028)
      EnumeratorList:  (at pp.c:2030)
        Enumerator: name='SAMPCON_CLOCK_DIV_1' (at pp.c:2030)
          Constant: type='int', value='0' (at pp.c:2030)
        Enumerator: name='SAMPCON_CLOCK_DIV_2' (at pp.c:2031)
          Constant: type='int', value='1' (at pp.c:2031)
        Enumerator: name='SAMPCON_CLOCK_DIV_4' (at pp.c:2032)
          Constant: type='int', value='2' (at pp.c:2032)
        Enumerator: name='SAMPCON_CLOCK_DIV_8' (at pp.c:2033)
          Constant: type='int', value='3' (at pp.c:2033)
  Typedef: name='OscilloscopeC__Read__val_t', quals=[], storage=['typedef'] (at pp.c:2035)
    TypeDecl: declname='OscilloscopeC__Read__val_t', quals=[] (at pp.c:2035)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='OscilloscopeC__Timer__precision_tag', quals=[], storage=['typedef'] (at pp.c:2036)
    TypeDecl: declname='OscilloscopeC__Timer__precision_tag', quals=[] (at pp.c:2036)
      IdentifierType: names=['TMilli'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2037)
    Enum: name='CC2420ActiveMessageC____nesc_unnamed4302' (at pp.c:2037)
      EnumeratorList:  (at pp.c:2038)
        Enumerator: name='CC2420ActiveMessageC__CC2420_AM_SEND_ID' (at pp.c:2038)
          Constant: type='int', value='0U' (at pp.c:2038)
  Typedef: name='CC2420ControlP__StartupTimer__precision_tag', quals=[], storage=['typedef'] (at pp.c:2040)
    TypeDecl: declname='CC2420ControlP__StartupTimer__precision_tag', quals=[] (at pp.c:2040)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='CC2420ControlP__StartupTimer__size_type', quals=[], storage=['typedef'] (at pp.c:2041)
    TypeDecl: declname='CC2420ControlP__StartupTimer__size_type', quals=[] (at pp.c:2041)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='CC2420ControlP__ReadRssi__val_t', quals=[], storage=['typedef'] (at pp.c:2042)
    TypeDecl: declname='CC2420ControlP__ReadRssi__val_t', quals=[] (at pp.c:2042)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2043)
    Enum: name='Msp430Timer32khzC__0____nesc_unnamed4303' (at pp.c:2043)
      EnumeratorList:  (at pp.c:2044)
        Enumerator: name='Msp430Timer32khzC__0__ALARM_ID' (at pp.c:2044)
          Constant: type='int', value='0U' (at pp.c:2044)
  Typedef: name='Msp430AlarmC__0__frequency_tag', quals=[], storage=['typedef'] (at pp.c:2046)
    TypeDecl: declname='Msp430AlarmC__0__frequency_tag', quals=[] (at pp.c:2046)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='Msp430AlarmC__0__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:2047)
    TypeDecl: declname='Msp430AlarmC__0__Alarm__precision_tag', quals=[] (at pp.c:2047)
      IdentifierType: names=['Msp430AlarmC__0__frequency_tag'] (at None)
  Typedef: name='Msp430AlarmC__0__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:2048)
    TypeDecl: declname='Msp430AlarmC__0__Alarm__size_type', quals=[] (at pp.c:2048)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='Msp430CounterC__0__frequency_tag', quals=[], storage=['typedef'] (at pp.c:2049)
    TypeDecl: declname='Msp430CounterC__0__frequency_tag', quals=[] (at pp.c:2049)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='Msp430CounterC__0__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:2050)
    TypeDecl: declname='Msp430CounterC__0__Counter__precision_tag', quals=[] (at pp.c:2050)
      IdentifierType: names=['Msp430CounterC__0__frequency_tag'] (at None)
  Typedef: name='Msp430CounterC__0__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:2051)
    TypeDecl: declname='Msp430CounterC__0__Counter__size_type', quals=[] (at pp.c:2051)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformCounterC__0__to_precision_tag', quals=[], storage=['typedef'] (at pp.c:2052)
    TypeDecl: declname='TransformCounterC__0__to_precision_tag', quals=[] (at pp.c:2052)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='TransformCounterC__0__to_size_type', quals=[], storage=['typedef'] (at pp.c:2053)
    TypeDecl: declname='TransformCounterC__0__to_size_type', quals=[] (at pp.c:2053)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='TransformCounterC__0__from_precision_tag', quals=[], storage=['typedef'] (at pp.c:2054)
    TypeDecl: declname='TransformCounterC__0__from_precision_tag', quals=[] (at pp.c:2054)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='TransformCounterC__0__from_size_type', quals=[], storage=['typedef'] (at pp.c:2055)
    TypeDecl: declname='TransformCounterC__0__from_size_type', quals=[] (at pp.c:2055)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformCounterC__0__upper_count_type', quals=[], storage=['typedef'] (at pp.c:2056)
    TypeDecl: declname='TransformCounterC__0__upper_count_type', quals=[] (at pp.c:2056)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformCounterC__0__CounterFrom__precision_tag', quals=[], storage=['typedef'] (at pp.c:2057)
    TypeDecl: declname='TransformCounterC__0__CounterFrom__precision_tag', quals=[] (at pp.c:2057)
      IdentifierType: names=['TransformCounterC__0__from_precision_tag'] (at None)
  Typedef: name='TransformCounterC__0__CounterFrom__size_type', quals=[], storage=['typedef'] (at pp.c:2058)
    TypeDecl: declname='TransformCounterC__0__CounterFrom__size_type', quals=[] (at pp.c:2058)
      IdentifierType: names=['TransformCounterC__0__from_size_type'] (at None)
  Typedef: name='TransformCounterC__0__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:2059)
    TypeDecl: declname='TransformCounterC__0__Counter__precision_tag', quals=[] (at pp.c:2059)
      IdentifierType: names=['TransformCounterC__0__to_precision_tag'] (at None)
  Typedef: name='TransformCounterC__0__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:2060)
    TypeDecl: declname='TransformCounterC__0__Counter__size_type', quals=[] (at pp.c:2060)
      IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
  Typedef: name='TransformAlarmC__0__to_precision_tag', quals=[], storage=['typedef'] (at pp.c:2061)
    TypeDecl: declname='TransformAlarmC__0__to_precision_tag', quals=[] (at pp.c:2061)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='TransformAlarmC__0__to_size_type', quals=[], storage=['typedef'] (at pp.c:2062)
    TypeDecl: declname='TransformAlarmC__0__to_size_type', quals=[] (at pp.c:2062)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='TransformAlarmC__0__from_precision_tag', quals=[], storage=['typedef'] (at pp.c:2063)
    TypeDecl: declname='TransformAlarmC__0__from_precision_tag', quals=[] (at pp.c:2063)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='TransformAlarmC__0__from_size_type', quals=[], storage=['typedef'] (at pp.c:2064)
    TypeDecl: declname='TransformAlarmC__0__from_size_type', quals=[] (at pp.c:2064)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformAlarmC__0__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:2065)
    TypeDecl: declname='TransformAlarmC__0__Alarm__precision_tag', quals=[] (at pp.c:2065)
      IdentifierType: names=['TransformAlarmC__0__to_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__0__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:2066)
    TypeDecl: declname='TransformAlarmC__0__Alarm__size_type', quals=[] (at pp.c:2066)
      IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Typedef: name='TransformAlarmC__0__AlarmFrom__precision_tag', quals=[], storage=['typedef'] (at pp.c:2067)
    TypeDecl: declname='TransformAlarmC__0__AlarmFrom__precision_tag', quals=[] (at pp.c:2067)
      IdentifierType: names=['TransformAlarmC__0__from_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__0__AlarmFrom__size_type', quals=[], storage=['typedef'] (at pp.c:2068)
    TypeDecl: declname='TransformAlarmC__0__AlarmFrom__size_type', quals=[] (at pp.c:2068)
      IdentifierType: names=['TransformAlarmC__0__from_size_type'] (at None)
  Typedef: name='TransformAlarmC__0__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:2069)
    TypeDecl: declname='TransformAlarmC__0__Counter__precision_tag', quals=[] (at pp.c:2069)
      IdentifierType: names=['TransformAlarmC__0__to_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__0__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:2070)
    TypeDecl: declname='TransformAlarmC__0__Counter__size_type', quals=[] (at pp.c:2070)
      IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2071)
    Enum: name='CC2420SpiC__0____nesc_unnamed4304' (at pp.c:2071)
      EnumeratorList:  (at pp.c:2072)
        Enumerator: name='CC2420SpiC__0__CLIENT_ID' (at pp.c:2072)
          Constant: type='int', value='0U' (at pp.c:2072)
  Decl: name=None, quals=[], storage=[] (at pp.c:2074)
    Enum: name='Msp430Spi0C__0____nesc_unnamed4305' (at pp.c:2074)
      EnumeratorList:  (at pp.c:2075)
        Enumerator: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:2075)
          Constant: type='int', value='0U' (at pp.c:2075)
  Decl: name=None, quals=[], storage=[] (at pp.c:2077)
    Enum: name='Msp430Usart0C__0____nesc_unnamed4306' (at pp.c:2077)
      EnumeratorList:  (at pp.c:2078)
        Enumerator: name='Msp430Usart0C__0__CLIENT_ID' (at pp.c:2078)
          Constant: type='int', value='0U' (at pp.c:2078)
  Decl: name=None, quals=[], storage=[] (at pp.c:2080)
    Enum: name='CC2420SpiC__1____nesc_unnamed4307' (at pp.c:2080)
      EnumeratorList:  (at pp.c:2081)
        Enumerator: name='CC2420SpiC__1__CLIENT_ID' (at pp.c:2081)
          Constant: type='int', value='1U' (at pp.c:2081)
  Decl: name=None, quals=[], storage=[] (at pp.c:2083)
    Enum: name='CC2420SpiC__2____nesc_unnamed4308' (at pp.c:2083)
      EnumeratorList:  (at pp.c:2084)
        Enumerator: name='CC2420SpiC__2__CLIENT_ID' (at pp.c:2084)
          Constant: type='int', value='2U' (at pp.c:2084)
  Typedef: name='OneWireMasterC__BusyWait__precision_tag', quals=[], storage=['typedef'] (at pp.c:2086)
    TypeDecl: declname='OneWireMasterC__BusyWait__precision_tag', quals=[] (at pp.c:2086)
      IdentifierType: names=['TMicro'] (at None)
  Typedef: name='OneWireMasterC__BusyWait__size_type', quals=[], storage=['typedef'] (at pp.c:2087)
    TypeDecl: declname='OneWireMasterC__BusyWait__size_type', quals=[] (at pp.c:2087)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='BusyWaitCounterC__0__precision_tag', quals=[], storage=['typedef'] (at pp.c:2088)
    TypeDecl: declname='BusyWaitCounterC__0__precision_tag', quals=[] (at pp.c:2088)
      IdentifierType: names=['TMicro'] (at None)
  Typedef: name='BusyWaitCounterC__0__size_type', quals=[], storage=['typedef'] (at pp.c:2089)
    TypeDecl: declname='BusyWaitCounterC__0__size_type', quals=[] (at pp.c:2089)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='BusyWaitCounterC__0__BusyWait__precision_tag', quals=[], storage=['typedef'] (at pp.c:2090)
    TypeDecl: declname='BusyWaitCounterC__0__BusyWait__precision_tag', quals=[] (at pp.c:2090)
      IdentifierType: names=['BusyWaitCounterC__0__precision_tag'] (at None)
  Typedef: name='BusyWaitCounterC__0__BusyWait__size_type', quals=[], storage=['typedef'] (at pp.c:2091)
    TypeDecl: declname='BusyWaitCounterC__0__BusyWait__size_type', quals=[] (at pp.c:2091)
      IdentifierType: names=['BusyWaitCounterC__0__size_type'] (at None)
  Typedef: name='BusyWaitCounterC__0__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:2092)
    TypeDecl: declname='BusyWaitCounterC__0__Counter__precision_tag', quals=[] (at pp.c:2092)
      IdentifierType: names=['BusyWaitCounterC__0__precision_tag'] (at None)
  Typedef: name='BusyWaitCounterC__0__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:2093)
    TypeDecl: declname='BusyWaitCounterC__0__Counter__size_type', quals=[] (at pp.c:2093)
      IdentifierType: names=['BusyWaitCounterC__0__size_type'] (at None)
  Typedef: name='Msp430CounterC__1__frequency_tag', quals=[], storage=['typedef'] (at pp.c:2094)
    TypeDecl: declname='Msp430CounterC__1__frequency_tag', quals=[] (at pp.c:2094)
      IdentifierType: names=['TMicro'] (at None)
  Typedef: name='Msp430CounterC__1__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:2095)
    TypeDecl: declname='Msp430CounterC__1__Counter__precision_tag', quals=[] (at pp.c:2095)
      IdentifierType: names=['Msp430CounterC__1__frequency_tag'] (at None)
  Typedef: name='Msp430CounterC__1__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:2096)
    TypeDecl: declname='Msp430CounterC__1__Counter__size_type', quals=[] (at pp.c:2096)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='CC2420TransmitP__PacketTimeStamp__precision_tag', quals=[], storage=['typedef'] (at pp.c:2097)
    TypeDecl: declname='CC2420TransmitP__PacketTimeStamp__precision_tag', quals=[] (at pp.c:2097)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='CC2420TransmitP__PacketTimeStamp__size_type', quals=[], storage=['typedef'] (at pp.c:2098)
    TypeDecl: declname='CC2420TransmitP__PacketTimeStamp__size_type', quals=[] (at pp.c:2098)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='CC2420TransmitP__BackoffTimer__precision_tag', quals=[], storage=['typedef'] (at pp.c:2099)
    TypeDecl: declname='CC2420TransmitP__BackoffTimer__precision_tag', quals=[] (at pp.c:2099)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='CC2420TransmitP__BackoffTimer__size_type', quals=[], storage=['typedef'] (at pp.c:2100)
    TypeDecl: declname='CC2420TransmitP__BackoffTimer__size_type', quals=[] (at pp.c:2100)
      IdentifierType: names=['uint32_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2101)
    Enum: name='CC2420SpiC__3____nesc_unnamed4309' (at pp.c:2101)
      EnumeratorList:  (at pp.c:2102)
        Enumerator: name='CC2420SpiC__3__CLIENT_ID' (at pp.c:2102)
          Constant: type='int', value='3U' (at pp.c:2102)
  Typedef: name='CC2420ReceiveP__PacketTimeStamp__precision_tag', quals=[], storage=['typedef'] (at pp.c:2104)
    TypeDecl: declname='CC2420ReceiveP__PacketTimeStamp__precision_tag', quals=[] (at pp.c:2104)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='CC2420ReceiveP__PacketTimeStamp__size_type', quals=[], storage=['typedef'] (at pp.c:2105)
    TypeDecl: declname='CC2420ReceiveP__PacketTimeStamp__size_type', quals=[] (at pp.c:2105)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='CC2420PacketP__PacketTimeStamp32khz__precision_tag', quals=[], storage=['typedef'] (at pp.c:2106)
    TypeDecl: declname='CC2420PacketP__PacketTimeStamp32khz__precision_tag', quals=[] (at pp.c:2106)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='CC2420PacketP__PacketTimeStamp32khz__size_type', quals=[], storage=['typedef'] (at pp.c:2107)
    TypeDecl: declname='CC2420PacketP__PacketTimeStamp32khz__size_type', quals=[] (at pp.c:2107)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='CC2420PacketP__LocalTime32khz__precision_tag', quals=[], storage=['typedef'] (at pp.c:2108)
    TypeDecl: declname='CC2420PacketP__LocalTime32khz__precision_tag', quals=[] (at pp.c:2108)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='CC2420PacketP__LocalTimeMilli__precision_tag', quals=[], storage=['typedef'] (at pp.c:2109)
    TypeDecl: declname='CC2420PacketP__LocalTimeMilli__precision_tag', quals=[] (at pp.c:2109)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='CC2420PacketP__PacketTimeStampMilli__precision_tag', quals=[], storage=['typedef'] (at pp.c:2110)
    TypeDecl: declname='CC2420PacketP__PacketTimeStampMilli__precision_tag', quals=[] (at pp.c:2110)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='CC2420PacketP__PacketTimeStampMilli__size_type', quals=[], storage=['typedef'] (at pp.c:2111)
    TypeDecl: declname='CC2420PacketP__PacketTimeStampMilli__size_type', quals=[] (at pp.c:2111)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='CounterToLocalTimeC__0__precision_tag', quals=[], storage=['typedef'] (at pp.c:2112)
    TypeDecl: declname='CounterToLocalTimeC__0__precision_tag', quals=[] (at pp.c:2112)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='CounterToLocalTimeC__0__LocalTime__precision_tag', quals=[], storage=['typedef'] (at pp.c:2113)
    TypeDecl: declname='CounterToLocalTimeC__0__LocalTime__precision_tag', quals=[] (at pp.c:2113)
      IdentifierType: names=['CounterToLocalTimeC__0__precision_tag'] (at None)
  Typedef: name='CounterToLocalTimeC__0__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:2114)
    TypeDecl: declname='CounterToLocalTimeC__0__Counter__precision_tag', quals=[] (at pp.c:2114)
      IdentifierType: names=['CounterToLocalTimeC__0__precision_tag'] (at None)
  Typedef: name='CounterToLocalTimeC__0__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:2115)
    TypeDecl: declname='CounterToLocalTimeC__0__Counter__size_type', quals=[] (at pp.c:2115)
      IdentifierType: names=['uint32_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2116)
    Enum: name='Msp430Timer32khzC__1____nesc_unnamed4310' (at pp.c:2116)
      EnumeratorList:  (at pp.c:2117)
        Enumerator: name='Msp430Timer32khzC__1__ALARM_ID' (at pp.c:2117)
          Constant: type='int', value='1U' (at pp.c:2117)
  Typedef: name='Msp430AlarmC__1__frequency_tag', quals=[], storage=['typedef'] (at pp.c:2119)
    TypeDecl: declname='Msp430AlarmC__1__frequency_tag', quals=[] (at pp.c:2119)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='Msp430AlarmC__1__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:2120)
    TypeDecl: declname='Msp430AlarmC__1__Alarm__precision_tag', quals=[] (at pp.c:2120)
      IdentifierType: names=['Msp430AlarmC__1__frequency_tag'] (at None)
  Typedef: name='Msp430AlarmC__1__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:2121)
    TypeDecl: declname='Msp430AlarmC__1__Alarm__size_type', quals=[] (at pp.c:2121)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformCounterC__1__to_precision_tag', quals=[], storage=['typedef'] (at pp.c:2122)
    TypeDecl: declname='TransformCounterC__1__to_precision_tag', quals=[] (at pp.c:2122)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='TransformCounterC__1__to_size_type', quals=[], storage=['typedef'] (at pp.c:2123)
    TypeDecl: declname='TransformCounterC__1__to_size_type', quals=[] (at pp.c:2123)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='TransformCounterC__1__from_precision_tag', quals=[], storage=['typedef'] (at pp.c:2124)
    TypeDecl: declname='TransformCounterC__1__from_precision_tag', quals=[] (at pp.c:2124)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='TransformCounterC__1__from_size_type', quals=[], storage=['typedef'] (at pp.c:2125)
    TypeDecl: declname='TransformCounterC__1__from_size_type', quals=[] (at pp.c:2125)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformCounterC__1__upper_count_type', quals=[], storage=['typedef'] (at pp.c:2126)
    TypeDecl: declname='TransformCounterC__1__upper_count_type', quals=[] (at pp.c:2126)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='TransformCounterC__1__CounterFrom__precision_tag', quals=[], storage=['typedef'] (at pp.c:2127)
    TypeDecl: declname='TransformCounterC__1__CounterFrom__precision_tag', quals=[] (at pp.c:2127)
      IdentifierType: names=['TransformCounterC__1__from_precision_tag'] (at None)
  Typedef: name='TransformCounterC__1__CounterFrom__size_type', quals=[], storage=['typedef'] (at pp.c:2128)
    TypeDecl: declname='TransformCounterC__1__CounterFrom__size_type', quals=[] (at pp.c:2128)
      IdentifierType: names=['TransformCounterC__1__from_size_type'] (at None)
  Typedef: name='TransformCounterC__1__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:2129)
    TypeDecl: declname='TransformCounterC__1__Counter__precision_tag', quals=[] (at pp.c:2129)
      IdentifierType: names=['TransformCounterC__1__to_precision_tag'] (at None)
  Typedef: name='TransformCounterC__1__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:2130)
    TypeDecl: declname='TransformCounterC__1__Counter__size_type', quals=[] (at pp.c:2130)
      IdentifierType: names=['TransformCounterC__1__to_size_type'] (at None)
  Typedef: name='TransformAlarmC__1__to_precision_tag', quals=[], storage=['typedef'] (at pp.c:2131)
    TypeDecl: declname='TransformAlarmC__1__to_precision_tag', quals=[] (at pp.c:2131)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='TransformAlarmC__1__to_size_type', quals=[], storage=['typedef'] (at pp.c:2132)
    TypeDecl: declname='TransformAlarmC__1__to_size_type', quals=[] (at pp.c:2132)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='TransformAlarmC__1__from_precision_tag', quals=[], storage=['typedef'] (at pp.c:2133)
    TypeDecl: declname='TransformAlarmC__1__from_precision_tag', quals=[] (at pp.c:2133)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='TransformAlarmC__1__from_size_type', quals=[], storage=['typedef'] (at pp.c:2134)
    TypeDecl: declname='TransformAlarmC__1__from_size_type', quals=[] (at pp.c:2134)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformAlarmC__1__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:2135)
    TypeDecl: declname='TransformAlarmC__1__Alarm__precision_tag', quals=[] (at pp.c:2135)
      IdentifierType: names=['TransformAlarmC__1__to_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__1__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:2136)
    TypeDecl: declname='TransformAlarmC__1__Alarm__size_type', quals=[] (at pp.c:2136)
      IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
  Typedef: name='TransformAlarmC__1__AlarmFrom__precision_tag', quals=[], storage=['typedef'] (at pp.c:2137)
    TypeDecl: declname='TransformAlarmC__1__AlarmFrom__precision_tag', quals=[] (at pp.c:2137)
      IdentifierType: names=['TransformAlarmC__1__from_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__1__AlarmFrom__size_type', quals=[], storage=['typedef'] (at pp.c:2138)
    TypeDecl: declname='TransformAlarmC__1__AlarmFrom__size_type', quals=[] (at pp.c:2138)
      IdentifierType: names=['TransformAlarmC__1__from_size_type'] (at None)
  Typedef: name='TransformAlarmC__1__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:2139)
    TypeDecl: declname='TransformAlarmC__1__Counter__precision_tag', quals=[] (at pp.c:2139)
      IdentifierType: names=['TransformAlarmC__1__to_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__1__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:2140)
    TypeDecl: declname='TransformAlarmC__1__Counter__size_type', quals=[] (at pp.c:2140)
      IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
  Typedef: name='AlarmToTimerC__0__precision_tag', quals=[], storage=['typedef'] (at pp.c:2141)
    TypeDecl: declname='AlarmToTimerC__0__precision_tag', quals=[] (at pp.c:2141)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='AlarmToTimerC__0__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:2142)
    TypeDecl: declname='AlarmToTimerC__0__Alarm__precision_tag', quals=[] (at pp.c:2142)
      IdentifierType: names=['AlarmToTimerC__0__precision_tag'] (at None)
  Typedef: name='AlarmToTimerC__0__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:2143)
    TypeDecl: declname='AlarmToTimerC__0__Alarm__size_type', quals=[] (at pp.c:2143)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='AlarmToTimerC__0__Timer__precision_tag', quals=[], storage=['typedef'] (at pp.c:2144)
    TypeDecl: declname='AlarmToTimerC__0__Timer__precision_tag', quals=[] (at pp.c:2144)
      IdentifierType: names=['AlarmToTimerC__0__precision_tag'] (at None)
  Typedef: name='VirtualizeTimerC__0__precision_tag', quals=[], storage=['typedef'] (at pp.c:2145)
    TypeDecl: declname='VirtualizeTimerC__0__precision_tag', quals=[] (at pp.c:2145)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='VirtualizeTimerC__0__TimerFrom__precision_tag', quals=[], storage=['typedef'] (at pp.c:2146)
    TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__precision_tag', quals=[] (at pp.c:2146)
      IdentifierType: names=['VirtualizeTimerC__0__precision_tag'] (at None)
  Typedef: name='VirtualizeTimerC__0__Timer__precision_tag', quals=[], storage=['typedef'] (at pp.c:2147)
    TypeDecl: declname='VirtualizeTimerC__0__Timer__precision_tag', quals=[] (at pp.c:2147)
      IdentifierType: names=['VirtualizeTimerC__0__precision_tag'] (at None)
  Typedef: name='CounterToLocalTimeC__1__precision_tag', quals=[], storage=['typedef'] (at pp.c:2148)
    TypeDecl: declname='CounterToLocalTimeC__1__precision_tag', quals=[] (at pp.c:2148)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='CounterToLocalTimeC__1__LocalTime__precision_tag', quals=[], storage=['typedef'] (at pp.c:2149)
    TypeDecl: declname='CounterToLocalTimeC__1__LocalTime__precision_tag', quals=[] (at pp.c:2149)
      IdentifierType: names=['CounterToLocalTimeC__1__precision_tag'] (at None)
  Typedef: name='CounterToLocalTimeC__1__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:2150)
    TypeDecl: declname='CounterToLocalTimeC__1__Counter__precision_tag', quals=[] (at pp.c:2150)
      IdentifierType: names=['CounterToLocalTimeC__1__precision_tag'] (at None)
  Typedef: name='CounterToLocalTimeC__1__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:2151)
    TypeDecl: declname='CounterToLocalTimeC__1__Counter__size_type', quals=[] (at pp.c:2151)
      IdentifierType: names=['uint32_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2152)
    Enum: name='CC2420SpiC__4____nesc_unnamed4311' (at pp.c:2152)
      EnumeratorList:  (at pp.c:2153)
        Enumerator: name='CC2420SpiC__4__CLIENT_ID' (at pp.c:2153)
          Constant: type='int', value='4U' (at pp.c:2153)
  Typedef: name='RandomMlcgC__SeedInit__parameter', quals=[], storage=['typedef'] (at pp.c:2155)
    TypeDecl: declname='RandomMlcgC__SeedInit__parameter', quals=[] (at pp.c:2155)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2156)
    Enum: name='CC2420TinyosNetworkC____nesc_unnamed4312' (at pp.c:2156)
      EnumeratorList:  (at pp.c:2157)
        Enumerator: name='CC2420TinyosNetworkC__TINYOS_N_NETWORKS' (at pp.c:2157)
          Constant: type='int', value='1U' (at pp.c:2157)
  Typedef: name='AdcP__Read__val_t', quals=[], storage=['typedef'] (at pp.c:2159)
    TypeDecl: declname='AdcP__Read__val_t', quals=[] (at pp.c:2159)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='AdcP__ReadNow__val_t', quals=[], storage=['typedef'] (at pp.c:2160)
    TypeDecl: declname='AdcP__ReadNow__val_t', quals=[] (at pp.c:2160)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='AdcP__Config__adc_config_t', quals=['const'], storage=['typedef'] (at pp.c:2161)
    PtrDecl: quals=[] (at pp.c:2161)
      TypeDecl: declname='AdcP__Config__adc_config_t', quals=['const'] (at pp.c:2161)
        IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Typedef: name='Msp430RefVoltGeneratorP__SwitchOffTimer__precision_tag', quals=[], storage=['typedef'] (at pp.c:2162)
    TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffTimer__precision_tag', quals=[] (at pp.c:2162)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__precision_tag', quals=[], storage=['typedef'] (at pp.c:2163)
    TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__precision_tag', quals=[] (at pp.c:2163)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='Msp430RefVoltGeneratorP__SwitchOnTimer__precision_tag', quals=[], storage=['typedef'] (at pp.c:2164)
    TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOnTimer__precision_tag', quals=[] (at pp.c:2164)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='Msp430RefVoltArbiterImplP__Config__adc_config_t', quals=['const'], storage=['typedef'] (at pp.c:2165)
    PtrDecl: quals=[] (at pp.c:2165)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__Config__adc_config_t', quals=['const'] (at pp.c:2165)
        IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2166)
    Enum: name='Msp430Adc12ClientAutoRVGC__0____nesc_unnamed4313' (at pp.c:2166)
      EnumeratorList:  (at pp.c:2167)
        Enumerator: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:2167)
          Constant: type='int', value='0U' (at pp.c:2167)
  Typedef: name='Msp430Adc12ConfAlertC__0__ConfSub__adc_config_t', quals=['const'], storage=['typedef'] (at pp.c:2169)
    PtrDecl: quals=[] (at pp.c:2169)
      TypeDecl: declname='Msp430Adc12ConfAlertC__0__ConfSub__adc_config_t', quals=['const'] (at pp.c:2169)
        IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Typedef: name='Msp430Adc12ConfAlertC__0__ConfUp__adc_config_t', quals=['const'], storage=['typedef'] (at pp.c:2170)
    PtrDecl: quals=[] (at pp.c:2170)
      TypeDecl: declname='Msp430Adc12ConfAlertC__0__ConfUp__adc_config_t', quals=['const'] (at pp.c:2170)
        IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2171)
    Enum: name='AdcReadClientC__0____nesc_unnamed4314' (at pp.c:2171)
      EnumeratorList:  (at pp.c:2172)
        Enumerator: name='AdcReadClientC__0__CLIENT' (at pp.c:2172)
          Constant: type='int', value='0U' (at pp.c:2172)
  Typedef: name='AdcStreamP__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:2174)
    TypeDecl: declname='AdcStreamP__Alarm__precision_tag', quals=[] (at pp.c:2174)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='AdcStreamP__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:2175)
    TypeDecl: declname='AdcStreamP__Alarm__size_type', quals=[] (at pp.c:2175)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='AdcStreamP__AdcConfigure__adc_config_t', quals=['const'], storage=['typedef'] (at pp.c:2176)
    PtrDecl: quals=[] (at pp.c:2176)
      TypeDecl: declname='AdcStreamP__AdcConfigure__adc_config_t', quals=['const'] (at pp.c:2176)
        IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Typedef: name='AdcStreamP__ReadStream__val_t', quals=[], storage=['typedef'] (at pp.c:2177)
    TypeDecl: declname='AdcStreamP__ReadStream__val_t', quals=[] (at pp.c:2177)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2178)
    Enum: name='Msp430Timer32khzC__2____nesc_unnamed4315' (at pp.c:2178)
      EnumeratorList:  (at pp.c:2179)
        Enumerator: name='Msp430Timer32khzC__2__ALARM_ID' (at pp.c:2179)
          Constant: type='int', value='2U' (at pp.c:2179)
  Typedef: name='Msp430AlarmC__2__frequency_tag', quals=[], storage=['typedef'] (at pp.c:2181)
    TypeDecl: declname='Msp430AlarmC__2__frequency_tag', quals=[] (at pp.c:2181)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='Msp430AlarmC__2__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:2182)
    TypeDecl: declname='Msp430AlarmC__2__Alarm__precision_tag', quals=[] (at pp.c:2182)
      IdentifierType: names=['Msp430AlarmC__2__frequency_tag'] (at None)
  Typedef: name='Msp430AlarmC__2__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:2183)
    TypeDecl: declname='Msp430AlarmC__2__Alarm__size_type', quals=[] (at pp.c:2183)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformAlarmC__2__to_precision_tag', quals=[], storage=['typedef'] (at pp.c:2184)
    TypeDecl: declname='TransformAlarmC__2__to_precision_tag', quals=[] (at pp.c:2184)
      IdentifierType: names=['TMilli'] (at None)
  Typedef: name='TransformAlarmC__2__to_size_type', quals=[], storage=['typedef'] (at pp.c:2185)
    TypeDecl: declname='TransformAlarmC__2__to_size_type', quals=[] (at pp.c:2185)
      IdentifierType: names=['uint32_t'] (at None)
  Typedef: name='TransformAlarmC__2__from_precision_tag', quals=[], storage=['typedef'] (at pp.c:2186)
    TypeDecl: declname='TransformAlarmC__2__from_precision_tag', quals=[] (at pp.c:2186)
      IdentifierType: names=['T32khz'] (at None)
  Typedef: name='TransformAlarmC__2__from_size_type', quals=[], storage=['typedef'] (at pp.c:2187)
    TypeDecl: declname='TransformAlarmC__2__from_size_type', quals=[] (at pp.c:2187)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='TransformAlarmC__2__Alarm__precision_tag', quals=[], storage=['typedef'] (at pp.c:2188)
    TypeDecl: declname='TransformAlarmC__2__Alarm__precision_tag', quals=[] (at pp.c:2188)
      IdentifierType: names=['TransformAlarmC__2__to_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__2__Alarm__size_type', quals=[], storage=['typedef'] (at pp.c:2189)
    TypeDecl: declname='TransformAlarmC__2__Alarm__size_type', quals=[] (at pp.c:2189)
      IdentifierType: names=['TransformAlarmC__2__to_size_type'] (at None)
  Typedef: name='TransformAlarmC__2__AlarmFrom__precision_tag', quals=[], storage=['typedef'] (at pp.c:2190)
    TypeDecl: declname='TransformAlarmC__2__AlarmFrom__precision_tag', quals=[] (at pp.c:2190)
      IdentifierType: names=['TransformAlarmC__2__from_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__2__AlarmFrom__size_type', quals=[], storage=['typedef'] (at pp.c:2191)
    TypeDecl: declname='TransformAlarmC__2__AlarmFrom__size_type', quals=[] (at pp.c:2191)
      IdentifierType: names=['TransformAlarmC__2__from_size_type'] (at None)
  Typedef: name='TransformAlarmC__2__Counter__precision_tag', quals=[], storage=['typedef'] (at pp.c:2192)
    TypeDecl: declname='TransformAlarmC__2__Counter__precision_tag', quals=[] (at pp.c:2192)
      IdentifierType: names=['TransformAlarmC__2__to_precision_tag'] (at None)
  Typedef: name='TransformAlarmC__2__Counter__size_type', quals=[], storage=['typedef'] (at pp.c:2193)
    TypeDecl: declname='TransformAlarmC__2__Counter__size_type', quals=[] (at pp.c:2193)
      IdentifierType: names=['TransformAlarmC__2__to_size_type'] (at None)
  Typedef: name='ArbitratedReadStreamC__0__val_t', quals=[], storage=['typedef'] (at pp.c:2194)
    TypeDecl: declname='ArbitratedReadStreamC__0__val_t', quals=[] (at pp.c:2194)
      IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='ArbitratedReadStreamC__0__Service__val_t', quals=[], storage=['typedef'] (at pp.c:2195)
    TypeDecl: declname='ArbitratedReadStreamC__0__Service__val_t', quals=[] (at pp.c:2195)
      IdentifierType: names=['ArbitratedReadStreamC__0__val_t'] (at None)
  Typedef: name='ArbitratedReadStreamC__0__ReadStream__val_t', quals=[], storage=['typedef'] (at pp.c:2196)
    TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__val_t', quals=[] (at pp.c:2196)
      IdentifierType: names=['ArbitratedReadStreamC__0__val_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2197)
    Enum: name='Msp430Adc12ClientAutoRVGC__1____nesc_unnamed4316' (at pp.c:2197)
      EnumeratorList:  (at pp.c:2198)
        Enumerator: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:2198)
          Constant: type='int', value='1U' (at pp.c:2198)
  Typedef: name='Msp430Adc12ConfAlertC__1__ConfSub__adc_config_t', quals=['const'], storage=['typedef'] (at pp.c:2200)
    PtrDecl: quals=[] (at pp.c:2200)
      TypeDecl: declname='Msp430Adc12ConfAlertC__1__ConfSub__adc_config_t', quals=['const'] (at pp.c:2200)
        IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Typedef: name='Msp430Adc12ConfAlertC__1__ConfUp__adc_config_t', quals=['const'], storage=['typedef'] (at pp.c:2201)
    PtrDecl: quals=[] (at pp.c:2201)
      TypeDecl: declname='Msp430Adc12ConfAlertC__1__ConfUp__adc_config_t', quals=['const'] (at pp.c:2201)
        IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2202)
    Enum: name='AdcReadStreamClientC__0____nesc_unnamed4317' (at pp.c:2202)
      EnumeratorList:  (at pp.c:2203)
        Enumerator: name='AdcReadStreamClientC__0__RSCLIENT' (at pp.c:2203)
          Constant: type='int', value='0U' (at pp.c:2203)
  Typedef: name='Msp430InternalVoltageP__AdcConfigure__adc_config_t', quals=['const'], storage=['typedef'] (at pp.c:2205)
    PtrDecl: quals=[] (at pp.c:2205)
      TypeDecl: declname='Msp430InternalVoltageP__AdcConfigure__adc_config_t', quals=['const'] (at pp.c:2205)
        IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2206)
    Enum: name='Msp430Adc12ClientAutoRVGC__2____nesc_unnamed4318' (at pp.c:2206)
      EnumeratorList:  (at pp.c:2207)
        Enumerator: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:2207)
          Constant: type='int', value='2U' (at pp.c:2207)
  Typedef: name='Msp430Adc12ConfAlertC__2__ConfSub__adc_config_t', quals=['const'], storage=['typedef'] (at pp.c:2209)
    PtrDecl: quals=[] (at pp.c:2209)
      TypeDecl: declname='Msp430Adc12ConfAlertC__2__ConfSub__adc_config_t', quals=['const'] (at pp.c:2209)
        IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Typedef: name='Msp430Adc12ConfAlertC__2__ConfUp__adc_config_t', quals=['const'], storage=['typedef'] (at pp.c:2210)
    PtrDecl: quals=[] (at pp.c:2210)
      TypeDecl: declname='Msp430Adc12ConfAlertC__2__ConfUp__adc_config_t', quals=['const'] (at pp.c:2210)
        IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:2211)
    Enum: name='AdcReadNowClientC__0____nesc_unnamed4319' (at pp.c:2211)
      EnumeratorList:  (at pp.c:2212)
        Enumerator: name='AdcReadNowClientC__0__CLIENT' (at pp.c:2212)
          Constant: type='int', value='1U' (at pp.c:2212)
  Decl: name=None, quals=[], storage=[] (at pp.c:2214)
    Enum: name='AMQueueP____nesc_unnamed4320' (at pp.c:2214)
      EnumeratorList:  (at pp.c:2215)
        Enumerator: name='AMQueueP__NUM_CLIENTS' (at pp.c:2215)
          Constant: type='int', value='1U' (at pp.c:2215)
  Decl: name='OscilloscopeC__Boot__booted', quals=[], storage=['static'] (at pp.c:2218)
    FuncDecl: quals=None (at pp.c:2218)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OscilloscopeC__Boot__booted', quals=[] (at pp.c:2218)
        IdentifierType: names=['void'] (at None)
  Decl: name='OscilloscopeC__AMSend__sendDone', quals=[], storage=['static'] (at pp.c:2220)
    FuncDecl: quals=None (at pp.c:2220)
      ParamList:  (at pp.c:2222)
        Decl: name='msg', quals=[], storage=[] (at pp.c:2222)
          PtrDecl: quals=[] (at pp.c:2222)
            TypeDecl: declname='msg', quals=[] (at pp.c:2222)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:2229)
          TypeDecl: declname='error', quals=[] (at pp.c:2229)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='OscilloscopeC__AMSend__sendDone', quals=[] (at pp.c:2220)
        IdentifierType: names=['void'] (at None)
  Decl: name='OscilloscopeC__RadioControl__startDone', quals=[], storage=['static'] (at pp.c:2231)
    FuncDecl: quals=None (at pp.c:2231)
      ParamList:  (at pp.c:2231)
        Decl: name='error', quals=[], storage=[] (at pp.c:2231)
          TypeDecl: declname='error', quals=[] (at pp.c:2231)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='OscilloscopeC__RadioControl__startDone', quals=[] (at pp.c:2231)
        IdentifierType: names=['void'] (at None)
  Decl: name='OscilloscopeC__RadioControl__stopDone', quals=[], storage=['static'] (at pp.c:2233)
    FuncDecl: quals=None (at pp.c:2233)
      ParamList:  (at pp.c:2233)
        Decl: name='error', quals=[], storage=[] (at pp.c:2233)
          TypeDecl: declname='error', quals=[] (at pp.c:2233)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='OscilloscopeC__RadioControl__stopDone', quals=[] (at pp.c:2233)
        IdentifierType: names=['void'] (at None)
  Decl: name='OscilloscopeC__Read__readDone', quals=[], storage=['static'] (at pp.c:2235)
    FuncDecl: quals=None (at pp.c:2235)
      ParamList:  (at pp.c:2235)
        Decl: name='result', quals=[], storage=[] (at pp.c:2235)
          TypeDecl: declname='result', quals=[] (at pp.c:2235)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='val', quals=[], storage=[] (at pp.c:2235)
          TypeDecl: declname='val', quals=[] (at pp.c:2235)
            IdentifierType: names=['OscilloscopeC__Read__val_t'] (at None)
      TypeDecl: declname='OscilloscopeC__Read__readDone', quals=[] (at pp.c:2235)
        IdentifierType: names=['void'] (at None)
  Decl: name='OscilloscopeC__Receive__receive', quals=[], storage=['static'] (at pp.c:2243)
    FuncDecl: quals=None (at pp.c:2243)
      ParamList:  (at pp.c:2245)
        Decl: name='msg', quals=[], storage=[] (at pp.c:2245)
          PtrDecl: quals=[] (at pp.c:2245)
            TypeDecl: declname='msg', quals=[] (at pp.c:2245)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:2246)
          PtrDecl: quals=[] (at pp.c:2246)
            TypeDecl: declname='payload', quals=[] (at pp.c:2246)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:2252)
          TypeDecl: declname='len', quals=[] (at pp.c:2252)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:2239)
        TypeDecl: declname='OscilloscopeC__Receive__receive', quals=[] (at pp.c:2243)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='OscilloscopeC__Timer__fired', quals=[], storage=['static'] (at pp.c:2254)
    FuncDecl: quals=None (at pp.c:2254)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OscilloscopeC__Timer__fired', quals=[] (at pp.c:2254)
        IdentifierType: names=['void'] (at None)
  Decl: name='PlatformP__Init__init', quals=[], storage=['static'] (at pp.c:2256)
    FuncDecl: quals=None (at pp.c:2256)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='PlatformP__Init__init', quals=[] (at pp.c:2256)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[], storage=['static'] (at pp.c:2258)
    FuncDecl: quals=None (at pp.c:2258)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[] (at pp.c:2258)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[], storage=['static'] (at pp.c:2260)
    FuncDecl: quals=None (at pp.c:2260)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[] (at pp.c:2260)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[], storage=['static'] (at pp.c:2264)
    FuncDecl: quals=None (at pp.c:2264)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[] (at pp.c:2264)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[], storage=['static'] (at pp.c:2266)
    FuncDecl: quals=None (at pp.c:2266)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[] (at pp.c:2266)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[], storage=['static'] (at pp.c:2272)
    FuncDecl: quals=None (at pp.c:2272)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[] (at pp.c:2272)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[], storage=['static'] (at pp.c:2274)
    FuncDecl: quals=None (at pp.c:2274)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[] (at pp.c:2274)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[], storage=['static'] (at pp.c:2276)
    FuncDecl: quals=None (at pp.c:2276)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[] (at pp.c:2276)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[], storage=['static'] (at pp.c:2277)
    FuncDecl: quals=None (at pp.c:2277)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[] (at pp.c:2277)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__McuPowerOverride__lowestState', quals=[], storage=['static'] (at pp.c:2279)
    FuncDecl: quals=None (at pp.c:2279)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__McuPowerOverride__lowestState', quals=[] (at pp.c:2279)
        IdentifierType: names=['mcu_power_t'] (at None)
  Decl: name='Msp430ClockP__Init__init', quals=[], storage=['static'] (at pp.c:2281)
    FuncDecl: quals=None (at pp.c:2281)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Init__init', quals=[] (at pp.c:2281)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430TimerP__0__VectorTimerX0__fired', quals=[], storage=['static'] (at pp.c:2283)
    FuncDecl: quals=None (at pp.c:2283)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__VectorTimerX0__fired', quals=[] (at pp.c:2283)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Overflow__fired', quals=[], storage=['static'] (at pp.c:2285)
    FuncDecl: quals=None (at pp.c:2285)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Overflow__fired', quals=[] (at pp.c:2285)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__VectorTimerX1__fired', quals=[], storage=['static'] (at pp.c:2287)
    FuncDecl: quals=None (at pp.c:2287)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__VectorTimerX1__fired', quals=[] (at pp.c:2287)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Event__default__fired', quals=[], storage=['static'] (at pp.c:2289)
    FuncDecl: quals=None (at pp.c:2289)
      ParamList:  (at pp.c:2291)
        Decl: name='arg_0x1014afc98', quals=[], storage=[] (at pp.c:2291)
          TypeDecl: declname='arg_0x1014afc98', quals=[] (at pp.c:2291)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Event__default__fired', quals=[] (at pp.c:2289)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__clear', quals=[], storage=['static'] (at pp.c:2293)
    FuncDecl: quals=None (at pp.c:2293)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__clear', quals=[] (at pp.c:2293)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__setClockSource', quals=[], storage=['static'] (at pp.c:2296)
    FuncDecl: quals=None (at pp.c:2296)
      ParamList:  (at pp.c:2296)
        Decl: name='clockSource', quals=[], storage=[] (at pp.c:2296)
          TypeDecl: declname='clockSource', quals=[] (at pp.c:2296)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__setClockSource', quals=[] (at pp.c:2296)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__get', quals=[], storage=['static'] (at pp.c:2298)
    FuncDecl: quals=None (at pp.c:2298)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__get', quals=[] (at pp.c:2298)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerP__0__Timer__disableEvents', quals=[], storage=['static'] (at pp.c:2307)
    FuncDecl: quals=None (at pp.c:2307)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__disableEvents', quals=[] (at pp.c:2307)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__setMode', quals=[], storage=['static'] (at pp.c:2309)
    FuncDecl: quals=None (at pp.c:2309)
      ParamList:  (at pp.c:2309)
        Decl: name='mode', quals=[], storage=[] (at pp.c:2309)
          TypeDecl: declname='mode', quals=[] (at pp.c:2309)
            IdentifierType: names=['int'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__setMode', quals=[] (at pp.c:2309)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__setInputDivider', quals=[], storage=['static'] (at pp.c:2315)
    FuncDecl: quals=None (at pp.c:2315)
      ParamList:  (at pp.c:2315)
        Decl: name='inputDivider', quals=[], storage=[] (at pp.c:2315)
          TypeDecl: declname='inputDivider', quals=[] (at pp.c:2315)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__setInputDivider', quals=[] (at pp.c:2315)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__VectorTimerX0__fired', quals=[], storage=['static'] (at pp.c:2317)
    FuncDecl: quals=None (at pp.c:2317)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__VectorTimerX0__fired', quals=[] (at pp.c:2317)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Overflow__fired', quals=[], storage=['static'] (at pp.c:2319)
    FuncDecl: quals=None (at pp.c:2319)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Overflow__fired', quals=[] (at pp.c:2319)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__VectorTimerX1__fired', quals=[], storage=['static'] (at pp.c:2321)
    FuncDecl: quals=None (at pp.c:2321)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__VectorTimerX1__fired', quals=[] (at pp.c:2321)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Event__default__fired', quals=[], storage=['static'] (at pp.c:2323)
    FuncDecl: quals=None (at pp.c:2323)
      ParamList:  (at pp.c:2325)
        Decl: name='arg_0x1014afc98', quals=[], storage=[] (at pp.c:2325)
          TypeDecl: declname='arg_0x1014afc98', quals=[] (at pp.c:2325)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Event__default__fired', quals=[] (at pp.c:2323)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Timer__get', quals=[], storage=['static'] (at pp.c:2327)
    FuncDecl: quals=None (at pp.c:2327)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Timer__get', quals=[] (at pp.c:2327)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerP__1__Timer__isOverflowPending', quals=[], storage=['static'] (at pp.c:2328)
    FuncDecl: quals=None (at pp.c:2328)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Timer__isOverflowPending', quals=[] (at pp.c:2328)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430TimerCapComP__0__Capture__getEvent', quals=[], storage=['static'] (at pp.c:2330)
    FuncDecl: quals=None (at pp.c:2330)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Capture__getEvent', quals=[] (at pp.c:2330)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__Capture__default__captured', quals=[], storage=['static'] (at pp.c:2332)
    FuncDecl: quals=None (at pp.c:2332)
      ParamList:  (at pp.c:2332)
        Decl: name='time', quals=[], storage=[] (at pp.c:2332)
          TypeDecl: declname='time', quals=[] (at pp.c:2332)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Capture__default__captured', quals=[] (at pp.c:2332)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Control__getControl', quals=[], storage=['static'] (at pp.c:2334)
    FuncDecl: quals=None (at pp.c:2334)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Control__getControl', quals=[] (at pp.c:2334)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__Control__setControl', quals=[], storage=['static'] (at pp.c:2338)
    FuncDecl: quals=None (at pp.c:2338)
      ParamList:  (at pp.c:2338)
        Decl: name='control', quals=[], storage=[] (at pp.c:2338)
          TypeDecl: declname='control', quals=[] (at pp.c:2338)
            IdentifierType: names=['msp430_compare_control_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Control__setControl', quals=[] (at pp.c:2338)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Event__fired', quals=[], storage=['static'] (at pp.c:2340)
    FuncDecl: quals=None (at pp.c:2340)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Event__fired', quals=[] (at pp.c:2340)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Compare__setEvent', quals=[], storage=['static'] (at pp.c:2342)
    FuncDecl: quals=None (at pp.c:2342)
      ParamList:  (at pp.c:2342)
        Decl: name='time', quals=[], storage=[] (at pp.c:2342)
          TypeDecl: declname='time', quals=[] (at pp.c:2342)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Compare__setEvent', quals=[] (at pp.c:2342)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Timer__overflow', quals=[], storage=['static'] (at pp.c:2344)
    FuncDecl: quals=None (at pp.c:2344)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Timer__overflow', quals=[] (at pp.c:2344)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Capture__getEvent', quals=[], storage=['static'] (at pp.c:2346)
    FuncDecl: quals=None (at pp.c:2346)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Capture__getEvent', quals=[] (at pp.c:2346)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__Capture__default__captured', quals=[], storage=['static'] (at pp.c:2348)
    FuncDecl: quals=None (at pp.c:2348)
      ParamList:  (at pp.c:2348)
        Decl: name='time', quals=[], storage=[] (at pp.c:2348)
          TypeDecl: declname='time', quals=[] (at pp.c:2348)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Capture__default__captured', quals=[] (at pp.c:2348)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Control__getControl', quals=[], storage=['static'] (at pp.c:2350)
    FuncDecl: quals=None (at pp.c:2350)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Control__getControl', quals=[] (at pp.c:2350)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__Control__setControl', quals=[], storage=['static'] (at pp.c:2354)
    FuncDecl: quals=None (at pp.c:2354)
      ParamList:  (at pp.c:2354)
        Decl: name='control', quals=[], storage=[] (at pp.c:2354)
          TypeDecl: declname='control', quals=[] (at pp.c:2354)
            IdentifierType: names=['msp430_compare_control_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Control__setControl', quals=[] (at pp.c:2354)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Event__fired', quals=[], storage=['static'] (at pp.c:2356)
    FuncDecl: quals=None (at pp.c:2356)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Event__fired', quals=[] (at pp.c:2356)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Compare__setEvent', quals=[], storage=['static'] (at pp.c:2358)
    FuncDecl: quals=None (at pp.c:2358)
      ParamList:  (at pp.c:2358)
        Decl: name='time', quals=[], storage=[] (at pp.c:2358)
          TypeDecl: declname='time', quals=[] (at pp.c:2358)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Compare__setEvent', quals=[] (at pp.c:2358)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Timer__overflow', quals=[], storage=['static'] (at pp.c:2360)
    FuncDecl: quals=None (at pp.c:2360)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Timer__overflow', quals=[] (at pp.c:2360)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Capture__getEvent', quals=[], storage=['static'] (at pp.c:2362)
    FuncDecl: quals=None (at pp.c:2362)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Capture__getEvent', quals=[] (at pp.c:2362)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__Capture__default__captured', quals=[], storage=['static'] (at pp.c:2364)
    FuncDecl: quals=None (at pp.c:2364)
      ParamList:  (at pp.c:2364)
        Decl: name='time', quals=[], storage=[] (at pp.c:2364)
          TypeDecl: declname='time', quals=[] (at pp.c:2364)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Capture__default__captured', quals=[] (at pp.c:2364)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Control__getControl', quals=[], storage=['static'] (at pp.c:2366)
    FuncDecl: quals=None (at pp.c:2366)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Control__getControl', quals=[] (at pp.c:2366)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__Event__fired', quals=[], storage=['static'] (at pp.c:2368)
    FuncDecl: quals=None (at pp.c:2368)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Event__fired', quals=[] (at pp.c:2368)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Compare__default__fired', quals=[], storage=['static'] (at pp.c:2370)
    FuncDecl: quals=None (at pp.c:2370)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Compare__default__fired', quals=[] (at pp.c:2370)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Timer__overflow', quals=[], storage=['static'] (at pp.c:2372)
    FuncDecl: quals=None (at pp.c:2372)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Timer__overflow', quals=[] (at pp.c:2372)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Capture__getEvent', quals=[], storage=['static'] (at pp.c:2374)
    FuncDecl: quals=None (at pp.c:2374)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Capture__getEvent', quals=[] (at pp.c:2374)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__Capture__default__captured', quals=[], storage=['static'] (at pp.c:2376)
    FuncDecl: quals=None (at pp.c:2376)
      ParamList:  (at pp.c:2376)
        Decl: name='time', quals=[], storage=[] (at pp.c:2376)
          TypeDecl: declname='time', quals=[] (at pp.c:2376)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Capture__default__captured', quals=[] (at pp.c:2376)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__getControl', quals=[], storage=['static'] (at pp.c:2378)
    FuncDecl: quals=None (at pp.c:2378)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__getControl', quals=[] (at pp.c:2378)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__enableEvents', quals=[], storage=['static'] (at pp.c:2380)
    FuncDecl: quals=None (at pp.c:2380)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__enableEvents', quals=[] (at pp.c:2380)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[], storage=['static'] (at pp.c:2382)
    FuncDecl: quals=None (at pp.c:2382)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[] (at pp.c:2382)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__disableEvents', quals=[], storage=['static'] (at pp.c:2393)
    FuncDecl: quals=None (at pp.c:2393)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__disableEvents', quals=[] (at pp.c:2393)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[], storage=['static'] (at pp.c:2395)
    FuncDecl: quals=None (at pp.c:2395)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[] (at pp.c:2395)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Event__fired', quals=[], storage=['static'] (at pp.c:2397)
    FuncDecl: quals=None (at pp.c:2397)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Event__fired', quals=[] (at pp.c:2397)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Compare__setEvent', quals=[], storage=['static'] (at pp.c:2399)
    FuncDecl: quals=None (at pp.c:2399)
      ParamList:  (at pp.c:2399)
        Decl: name='time', quals=[], storage=[] (at pp.c:2399)
          TypeDecl: declname='time', quals=[] (at pp.c:2399)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEvent', quals=[] (at pp.c:2399)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[], storage=['static'] (at pp.c:2401)
    FuncDecl: quals=None (at pp.c:2401)
      ParamList:  (at pp.c:2401)
        Decl: name='delta', quals=[], storage=[] (at pp.c:2401)
          TypeDecl: declname='delta', quals=[] (at pp.c:2401)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[] (at pp.c:2401)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Timer__overflow', quals=[], storage=['static'] (at pp.c:2403)
    FuncDecl: quals=None (at pp.c:2403)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Timer__overflow', quals=[] (at pp.c:2403)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Capture__getEvent', quals=[], storage=['static'] (at pp.c:2405)
    FuncDecl: quals=None (at pp.c:2405)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Capture__getEvent', quals=[] (at pp.c:2405)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__Capture__clearOverflow', quals=[], storage=['static'] (at pp.c:2407)
    FuncDecl: quals=None (at pp.c:2407)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Capture__clearOverflow', quals=[] (at pp.c:2407)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__setControlAsCapture', quals=[], storage=['static'] (at pp.c:2409)
    FuncDecl: quals=None (at pp.c:2409)
      ParamList:  (at pp.c:2409)
        Decl: name='cm', quals=[], storage=[] (at pp.c:2409)
          TypeDecl: declname='cm', quals=[] (at pp.c:2409)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__setControlAsCapture', quals=[] (at pp.c:2409)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__getControl', quals=[], storage=['static'] (at pp.c:2411)
    FuncDecl: quals=None (at pp.c:2411)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__getControl', quals=[] (at pp.c:2411)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__enableEvents', quals=[], storage=['static'] (at pp.c:2413)
    FuncDecl: quals=None (at pp.c:2413)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__enableEvents', quals=[] (at pp.c:2413)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__disableEvents', quals=[], storage=['static'] (at pp.c:2414)
    FuncDecl: quals=None (at pp.c:2414)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__disableEvents', quals=[] (at pp.c:2414)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__clearPendingInterrupt', quals=[], storage=['static'] (at pp.c:2416)
    FuncDecl: quals=None (at pp.c:2416)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__clearPendingInterrupt', quals=[] (at pp.c:2416)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Event__fired', quals=[], storage=['static'] (at pp.c:2418)
    FuncDecl: quals=None (at pp.c:2418)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Event__fired', quals=[] (at pp.c:2418)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Compare__default__fired', quals=[], storage=['static'] (at pp.c:2420)
    FuncDecl: quals=None (at pp.c:2420)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Compare__default__fired', quals=[] (at pp.c:2420)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Timer__overflow', quals=[], storage=['static'] (at pp.c:2422)
    FuncDecl: quals=None (at pp.c:2422)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Timer__overflow', quals=[] (at pp.c:2422)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Capture__getEvent', quals=[], storage=['static'] (at pp.c:2424)
    FuncDecl: quals=None (at pp.c:2424)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Capture__getEvent', quals=[] (at pp.c:2424)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__Capture__default__captured', quals=[], storage=['static'] (at pp.c:2426)
    FuncDecl: quals=None (at pp.c:2426)
      ParamList:  (at pp.c:2426)
        Decl: name='time', quals=[], storage=[] (at pp.c:2426)
          TypeDecl: declname='time', quals=[] (at pp.c:2426)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Capture__default__captured', quals=[] (at pp.c:2426)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__getControl', quals=[], storage=['static'] (at pp.c:2428)
    FuncDecl: quals=None (at pp.c:2428)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__getControl', quals=[] (at pp.c:2428)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__enableEvents', quals=[], storage=['static'] (at pp.c:2430)
    FuncDecl: quals=None (at pp.c:2430)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__enableEvents', quals=[] (at pp.c:2430)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__setControlAsCompare', quals=[], storage=['static'] (at pp.c:2432)
    FuncDecl: quals=None (at pp.c:2432)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__setControlAsCompare', quals=[] (at pp.c:2432)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__disableEvents', quals=[], storage=['static'] (at pp.c:2443)
    FuncDecl: quals=None (at pp.c:2443)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__disableEvents', quals=[] (at pp.c:2443)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__clearPendingInterrupt', quals=[], storage=['static'] (at pp.c:2445)
    FuncDecl: quals=None (at pp.c:2445)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__clearPendingInterrupt', quals=[] (at pp.c:2445)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Event__fired', quals=[], storage=['static'] (at pp.c:2447)
    FuncDecl: quals=None (at pp.c:2447)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Event__fired', quals=[] (at pp.c:2447)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Compare__setEvent', quals=[], storage=['static'] (at pp.c:2449)
    FuncDecl: quals=None (at pp.c:2449)
      ParamList:  (at pp.c:2449)
        Decl: name='time', quals=[], storage=[] (at pp.c:2449)
          TypeDecl: declname='time', quals=[] (at pp.c:2449)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Compare__setEvent', quals=[] (at pp.c:2449)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Compare__setEventFromNow', quals=[], storage=['static'] (at pp.c:2451)
    FuncDecl: quals=None (at pp.c:2451)
      ParamList:  (at pp.c:2451)
        Decl: name='delta', quals=[], storage=[] (at pp.c:2451)
          TypeDecl: declname='delta', quals=[] (at pp.c:2451)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Compare__setEventFromNow', quals=[] (at pp.c:2451)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Timer__overflow', quals=[], storage=['static'] (at pp.c:2453)
    FuncDecl: quals=None (at pp.c:2453)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Timer__overflow', quals=[] (at pp.c:2453)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Capture__getEvent', quals=[], storage=['static'] (at pp.c:2455)
    FuncDecl: quals=None (at pp.c:2455)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Capture__getEvent', quals=[] (at pp.c:2455)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__Capture__default__captured', quals=[], storage=['static'] (at pp.c:2457)
    FuncDecl: quals=None (at pp.c:2457)
      ParamList:  (at pp.c:2457)
        Decl: name='time', quals=[], storage=[] (at pp.c:2457)
          TypeDecl: declname='time', quals=[] (at pp.c:2457)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Capture__default__captured', quals=[] (at pp.c:2457)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Control__getControl', quals=[], storage=['static'] (at pp.c:2459)
    FuncDecl: quals=None (at pp.c:2459)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Control__getControl', quals=[] (at pp.c:2459)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__Control__enableEvents', quals=[], storage=['static'] (at pp.c:2461)
    FuncDecl: quals=None (at pp.c:2461)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Control__enableEvents', quals=[] (at pp.c:2461)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Control__disableEvents', quals=[], storage=['static'] (at pp.c:2462)
    FuncDecl: quals=None (at pp.c:2462)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Control__disableEvents', quals=[] (at pp.c:2462)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Control__clearPendingInterrupt', quals=[], storage=['static'] (at pp.c:2464)
    FuncDecl: quals=None (at pp.c:2464)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Control__clearPendingInterrupt', quals=[] (at pp.c:2464)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Event__fired', quals=[], storage=['static'] (at pp.c:2466)
    FuncDecl: quals=None (at pp.c:2466)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Event__fired', quals=[] (at pp.c:2466)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Compare__setEvent', quals=[], storage=['static'] (at pp.c:2468)
    FuncDecl: quals=None (at pp.c:2468)
      ParamList:  (at pp.c:2468)
        Decl: name='time', quals=[], storage=[] (at pp.c:2468)
          TypeDecl: declname='time', quals=[] (at pp.c:2468)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Compare__setEvent', quals=[] (at pp.c:2468)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Compare__setEventFromNow', quals=[], storage=['static'] (at pp.c:2470)
    FuncDecl: quals=None (at pp.c:2470)
      ParamList:  (at pp.c:2470)
        Decl: name='delta', quals=[], storage=[] (at pp.c:2470)
          TypeDecl: declname='delta', quals=[] (at pp.c:2470)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Compare__setEventFromNow', quals=[] (at pp.c:2470)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Timer__overflow', quals=[], storage=['static'] (at pp.c:2472)
    FuncDecl: quals=None (at pp.c:2472)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Timer__overflow', quals=[] (at pp.c:2472)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Capture__getEvent', quals=[], storage=['static'] (at pp.c:2474)
    FuncDecl: quals=None (at pp.c:2474)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Capture__getEvent', quals=[] (at pp.c:2474)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__Capture__default__captured', quals=[], storage=['static'] (at pp.c:2476)
    FuncDecl: quals=None (at pp.c:2476)
      ParamList:  (at pp.c:2476)
        Decl: name='time', quals=[], storage=[] (at pp.c:2476)
          TypeDecl: declname='time', quals=[] (at pp.c:2476)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Capture__default__captured', quals=[] (at pp.c:2476)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Control__getControl', quals=[], storage=['static'] (at pp.c:2478)
    FuncDecl: quals=None (at pp.c:2478)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Control__getControl', quals=[] (at pp.c:2478)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__Event__fired', quals=[], storage=['static'] (at pp.c:2480)
    FuncDecl: quals=None (at pp.c:2480)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Event__fired', quals=[] (at pp.c:2480)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Compare__default__fired', quals=[], storage=['static'] (at pp.c:2482)
    FuncDecl: quals=None (at pp.c:2482)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Compare__default__fired', quals=[] (at pp.c:2482)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Timer__overflow', quals=[], storage=['static'] (at pp.c:2484)
    FuncDecl: quals=None (at pp.c:2484)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Timer__overflow', quals=[] (at pp.c:2484)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Capture__getEvent', quals=[], storage=['static'] (at pp.c:2486)
    FuncDecl: quals=None (at pp.c:2486)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Capture__getEvent', quals=[] (at pp.c:2486)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__Capture__default__captured', quals=[], storage=['static'] (at pp.c:2488)
    FuncDecl: quals=None (at pp.c:2488)
      ParamList:  (at pp.c:2488)
        Decl: name='time', quals=[], storage=[] (at pp.c:2488)
          TypeDecl: declname='time', quals=[] (at pp.c:2488)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Capture__default__captured', quals=[] (at pp.c:2488)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Control__getControl', quals=[], storage=['static'] (at pp.c:2490)
    FuncDecl: quals=None (at pp.c:2490)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Control__getControl', quals=[] (at pp.c:2490)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__Event__fired', quals=[], storage=['static'] (at pp.c:2492)
    FuncDecl: quals=None (at pp.c:2492)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Event__fired', quals=[] (at pp.c:2492)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Compare__default__fired', quals=[], storage=['static'] (at pp.c:2494)
    FuncDecl: quals=None (at pp.c:2494)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Compare__default__fired', quals=[] (at pp.c:2494)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Timer__overflow', quals=[], storage=['static'] (at pp.c:2496)
    FuncDecl: quals=None (at pp.c:2496)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Timer__overflow', quals=[] (at pp.c:2496)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Capture__getEvent', quals=[], storage=['static'] (at pp.c:2498)
    FuncDecl: quals=None (at pp.c:2498)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Capture__getEvent', quals=[] (at pp.c:2498)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__Capture__default__captured', quals=[], storage=['static'] (at pp.c:2500)
    FuncDecl: quals=None (at pp.c:2500)
      ParamList:  (at pp.c:2500)
        Decl: name='time', quals=[], storage=[] (at pp.c:2500)
          TypeDecl: declname='time', quals=[] (at pp.c:2500)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Capture__default__captured', quals=[] (at pp.c:2500)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Control__getControl', quals=[], storage=['static'] (at pp.c:2502)
    FuncDecl: quals=None (at pp.c:2502)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Control__getControl', quals=[] (at pp.c:2502)
        IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__Event__fired', quals=[], storage=['static'] (at pp.c:2504)
    FuncDecl: quals=None (at pp.c:2504)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Event__fired', quals=[] (at pp.c:2504)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Compare__default__fired', quals=[], storage=['static'] (at pp.c:2506)
    FuncDecl: quals=None (at pp.c:2506)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Compare__default__fired', quals=[] (at pp.c:2506)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Timer__overflow', quals=[], storage=['static'] (at pp.c:2508)
    FuncDecl: quals=None (at pp.c:2508)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Timer__overflow', quals=[] (at pp.c:2508)
        IdentifierType: names=['void'] (at None)
  Decl: name='McuSleepC__McuSleep__sleep', quals=[], storage=['static'] (at pp.c:2510)
    FuncDecl: quals=None (at pp.c:2510)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='McuSleepC__McuSleep__sleep', quals=[] (at pp.c:2510)
        IdentifierType: names=['void'] (at None)
  Decl: name='MotePlatformC__SubInit__default__init', quals=[], storage=['static'] (at pp.c:2512)
    FuncDecl: quals=None (at pp.c:2512)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='MotePlatformC__SubInit__default__init', quals=[] (at pp.c:2512)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='MotePlatformC__Init__init', quals=[], storage=['static'] (at pp.c:2514)
    FuncDecl: quals=None (at pp.c:2514)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='MotePlatformC__Init__init', quals=[] (at pp.c:2514)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SchedulerBasicP__TaskBasic__postTask', quals=[], storage=['static'] (at pp.c:2516)
    FuncDecl: quals=None (at pp.c:2516)
      ParamList:  (at pp.c:2518)
        Decl: name='arg_0x101333340', quals=[], storage=[] (at pp.c:2518)
          TypeDecl: declname='arg_0x101333340', quals=[] (at pp.c:2518)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__TaskBasic__postTask', quals=[] (at pp.c:2516)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SchedulerBasicP__TaskBasic__default__runTask', quals=[], storage=['static'] (at pp.c:2520)
    FuncDecl: quals=None (at pp.c:2520)
      ParamList:  (at pp.c:2522)
        Decl: name='arg_0x101333340', quals=[], storage=[] (at pp.c:2522)
          TypeDecl: declname='arg_0x101333340', quals=[] (at pp.c:2522)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__TaskBasic__default__runTask', quals=[] (at pp.c:2520)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__init', quals=[], storage=['static'] (at pp.c:2524)
    FuncDecl: quals=None (at pp.c:2524)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__init', quals=[] (at pp.c:2524)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__taskLoop', quals=[], storage=['static'] (at pp.c:2526)
    FuncDecl: quals=None (at pp.c:2526)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__taskLoop', quals=[] (at pp.c:2526)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__runNextTask', quals=[], storage=['static'] (at pp.c:2528)
    FuncDecl: quals=None (at pp.c:2528)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__runNextTask', quals=[] (at pp.c:2528)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420CsmaP__SplitControl__start', quals=[], storage=['static'] (at pp.c:2530)
    FuncDecl: quals=None (at pp.c:2530)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__SplitControl__start', quals=[] (at pp.c:2530)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__SubBackoff__requestInitialBackoff', quals=[], storage=['static'] (at pp.c:2532)
    FuncDecl: quals=None (at pp.c:2532)
      ParamList:  (at pp.c:2532)
        Decl: name='msg', quals=[], storage=[] (at pp.c:2532)
          PtrDecl: quals=[] (at pp.c:2532)
            TypeDecl: declname='msg', quals=[] (at pp.c:2532)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SubBackoff__requestInitialBackoff', quals=[] (at pp.c:2532)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__SubBackoff__requestCongestionBackoff', quals=[], storage=['static'] (at pp.c:2539)
    FuncDecl: quals=None (at pp.c:2539)
      ParamList:  (at pp.c:2539)
        Decl: name='msg', quals=[], storage=[] (at pp.c:2539)
          PtrDecl: quals=[] (at pp.c:2539)
            TypeDecl: declname='msg', quals=[] (at pp.c:2539)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SubBackoff__requestCongestionBackoff', quals=[] (at pp.c:2539)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__CC2420Transmit__sendDone', quals=[], storage=['static'] (at pp.c:2541)
    FuncDecl: quals=None (at pp.c:2541)
      ParamList:  (at pp.c:2541)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:2541)
          PtrDecl: quals=[] (at pp.c:2541)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:2541)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:2541)
          TypeDecl: declname='error', quals=[] (at pp.c:2541)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Transmit__sendDone', quals=[] (at pp.c:2541)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__Send__send', quals=[], storage=['static'] (at pp.c:2543)
    FuncDecl: quals=None (at pp.c:2543)
      ParamList:  (at pp.c:2545)
        Decl: name='msg', quals=[], storage=[] (at pp.c:2545)
          PtrDecl: quals=[] (at pp.c:2545)
            TypeDecl: declname='msg', quals=[] (at pp.c:2545)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:2553)
          TypeDecl: declname='len', quals=[] (at pp.c:2553)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__Send__send', quals=[] (at pp.c:2543)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__Send__maxPayloadLength', quals=[], storage=['static'] (at pp.c:2555)
    FuncDecl: quals=None (at pp.c:2555)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__Send__maxPayloadLength', quals=[] (at pp.c:2555)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420CsmaP__CC2420Power__startOscillatorDone', quals=[], storage=['static'] (at pp.c:2557)
    FuncDecl: quals=None (at pp.c:2557)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Power__startOscillatorDone', quals=[] (at pp.c:2557)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__CC2420Power__startVRegDone', quals=[], storage=['static'] (at pp.c:2559)
    FuncDecl: quals=None (at pp.c:2559)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Power__startVRegDone', quals=[] (at pp.c:2559)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__Resource__granted', quals=[], storage=['static'] (at pp.c:2561)
    FuncDecl: quals=None (at pp.c:2561)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__Resource__granted', quals=[] (at pp.c:2561)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__sendDone_task__runTask', quals=[], storage=['static'] (at pp.c:2563)
    FuncDecl: quals=None (at pp.c:2563)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__sendDone_task__runTask', quals=[] (at pp.c:2563)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__stopDone_task__runTask', quals=[], storage=['static'] (at pp.c:2565)
    FuncDecl: quals=None (at pp.c:2565)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__stopDone_task__runTask', quals=[] (at pp.c:2565)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__startDone_task__runTask', quals=[], storage=['static'] (at pp.c:2567)
    FuncDecl: quals=None (at pp.c:2567)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__startDone_task__runTask', quals=[] (at pp.c:2567)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__isAddressRecognitionEnabled', quals=[], storage=['static'] (at pp.c:2569)
    FuncDecl: quals=None (at pp.c:2569)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__isAddressRecognitionEnabled', quals=[] (at pp.c:2569)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__isAutoAckEnabled', quals=[], storage=['static'] (at pp.c:2571)
    FuncDecl: quals=None (at pp.c:2571)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__isAutoAckEnabled', quals=[] (at pp.c:2571)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__isHwAutoAckDefault', quals=[], storage=['static'] (at pp.c:2573)
    FuncDecl: quals=None (at pp.c:2573)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__isHwAutoAckDefault', quals=[] (at pp.c:2573)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__getExtAddr', quals=[], storage=['static'] (at pp.c:2575)
    FuncDecl: quals=None (at pp.c:2575)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__getExtAddr', quals=[] (at pp.c:2575)
        IdentifierType: names=['ieee_eui64_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__getShortAddr', quals=[], storage=['static'] (at pp.c:2580)
    FuncDecl: quals=None (at pp.c:2580)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__getShortAddr', quals=[] (at pp.c:2580)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__sync', quals=[], storage=['static'] (at pp.c:2582)
    FuncDecl: quals=None (at pp.c:2582)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__sync', quals=[] (at pp.c:2582)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__getPanAddr', quals=[], storage=['static'] (at pp.c:2584)
    FuncDecl: quals=None (at pp.c:2584)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__getPanAddr', quals=[] (at pp.c:2584)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420ControlP__StartupTimer__fired', quals=[], storage=['static'] (at pp.c:2586)
    FuncDecl: quals=None (at pp.c:2586)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__StartupTimer__fired', quals=[] (at pp.c:2586)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__ReadRssi__default__readDone', quals=[], storage=['static'] (at pp.c:2588)
    FuncDecl: quals=None (at pp.c:2588)
      ParamList:  (at pp.c:2588)
        Decl: name='result', quals=[], storage=[] (at pp.c:2588)
          TypeDecl: declname='result', quals=[] (at pp.c:2588)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='val', quals=[], storage=[] (at pp.c:2588)
          TypeDecl: declname='val', quals=[] (at pp.c:2588)
            IdentifierType: names=['CC2420ControlP__ReadRssi__val_t'] (at None)
      TypeDecl: declname='CC2420ControlP__ReadRssi__default__readDone', quals=[] (at pp.c:2588)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__syncDone__runTask', quals=[], storage=['static'] (at pp.c:2590)
    FuncDecl: quals=None (at pp.c:2590)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__syncDone__runTask', quals=[] (at pp.c:2590)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__Init__init', quals=[], storage=['static'] (at pp.c:2592)
    FuncDecl: quals=None (at pp.c:2592)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__Init__init', quals=[] (at pp.c:2592)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__SpiResource__granted', quals=[], storage=['static'] (at pp.c:2594)
    FuncDecl: quals=None (at pp.c:2594)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SpiResource__granted', quals=[] (at pp.c:2594)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__SyncResource__granted', quals=[], storage=['static'] (at pp.c:2596)
    FuncDecl: quals=None (at pp.c:2596)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SyncResource__granted', quals=[] (at pp.c:2596)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__CC2420Power__startOscillator', quals=[], storage=['static'] (at pp.c:2598)
    FuncDecl: quals=None (at pp.c:2598)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Power__startOscillator', quals=[] (at pp.c:2598)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Power__rxOn', quals=[], storage=['static'] (at pp.c:2600)
    FuncDecl: quals=None (at pp.c:2600)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Power__rxOn', quals=[] (at pp.c:2600)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Power__startVReg', quals=[], storage=['static'] (at pp.c:2602)
    FuncDecl: quals=None (at pp.c:2602)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Power__startVReg', quals=[] (at pp.c:2602)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Power__stopVReg', quals=[], storage=['static'] (at pp.c:2604)
    FuncDecl: quals=None (at pp.c:2604)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Power__stopVReg', quals=[] (at pp.c:2604)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__sync__runTask', quals=[], storage=['static'] (at pp.c:2606)
    FuncDecl: quals=None (at pp.c:2606)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__sync__runTask', quals=[] (at pp.c:2606)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__Resource__release', quals=[], storage=['static'] (at pp.c:2608)
    FuncDecl: quals=None (at pp.c:2608)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__Resource__release', quals=[] (at pp.c:2608)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__Resource__request', quals=[], storage=['static'] (at pp.c:2610)
    FuncDecl: quals=None (at pp.c:2610)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__Resource__request', quals=[] (at pp.c:2610)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__InterruptCCA__fired', quals=[], storage=['static'] (at pp.c:2612)
    FuncDecl: quals=None (at pp.c:2612)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__InterruptCCA__fired', quals=[] (at pp.c:2612)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__RssiResource__granted', quals=[], storage=['static'] (at pp.c:2614)
    FuncDecl: quals=None (at pp.c:2614)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__RssiResource__granted', quals=[] (at pp.c:2614)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Compare__fired', quals=[], storage=['static'] (at pp.c:2616)
    FuncDecl: quals=None (at pp.c:2616)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__fired', quals=[] (at pp.c:2616)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Timer__overflow', quals=[], storage=['static'] (at pp.c:2618)
    FuncDecl: quals=None (at pp.c:2618)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Timer__overflow', quals=[] (at pp.c:2618)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Alarm__startAt', quals=[], storage=['static'] (at pp.c:2620)
    FuncDecl: quals=None (at pp.c:2620)
      ParamList:  (at pp.c:2620)
        Decl: name='t0', quals=[], storage=[] (at pp.c:2620)
          TypeDecl: declname='t0', quals=[] (at pp.c:2620)
            IdentifierType: names=['Msp430AlarmC__0__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:2620)
          TypeDecl: declname='dt', quals=[] (at pp.c:2620)
            IdentifierType: names=['Msp430AlarmC__0__Alarm__size_type'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Alarm__startAt', quals=[] (at pp.c:2620)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Alarm__stop', quals=[], storage=['static'] (at pp.c:2622)
    FuncDecl: quals=None (at pp.c:2622)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Alarm__stop', quals=[] (at pp.c:2622)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Init__init', quals=[], storage=['static'] (at pp.c:2624)
    FuncDecl: quals=None (at pp.c:2624)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Init__init', quals=[] (at pp.c:2624)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430CounterC__0__Msp430Timer__overflow', quals=[], storage=['static'] (at pp.c:2626)
    FuncDecl: quals=None (at pp.c:2626)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Msp430Timer__overflow', quals=[] (at pp.c:2626)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430CounterC__0__Counter__get', quals=[], storage=['static'] (at pp.c:2628)
    FuncDecl: quals=None (at pp.c:2628)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Counter__get', quals=[] (at pp.c:2628)
        IdentifierType: names=['Msp430CounterC__0__Counter__size_type'] (at None)
  Decl: name='Msp430CounterC__0__Counter__isOverflowPending', quals=[], storage=['static'] (at pp.c:2635)
    FuncDecl: quals=None (at pp.c:2635)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Counter__isOverflowPending', quals=[] (at pp.c:2635)
        IdentifierType: names=['bool'] (at None)
  Decl: name='TransformCounterC__0__CounterFrom__overflow', quals=[], storage=['static'] (at pp.c:2646)
    FuncDecl: quals=None (at pp.c:2646)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__CounterFrom__overflow', quals=[] (at pp.c:2646)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformCounterC__0__Counter__get', quals=[], storage=['static'] (at pp.c:2648)
    FuncDecl: quals=None (at pp.c:2648)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__Counter__get', quals=[] (at pp.c:2648)
        IdentifierType: names=['TransformCounterC__0__Counter__size_type'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__getNow', quals=[], storage=['static'] (at pp.c:2650)
    FuncDecl: quals=None (at pp.c:2650)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__getNow', quals=[] (at pp.c:2650)
        IdentifierType: names=['TransformAlarmC__0__Alarm__size_type'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__startAt', quals=[], storage=['static'] (at pp.c:2652)
    FuncDecl: quals=None (at pp.c:2652)
      ParamList:  (at pp.c:2652)
        Decl: name='t0', quals=[], storage=[] (at pp.c:2652)
          TypeDecl: declname='t0', quals=[] (at pp.c:2652)
            IdentifierType: names=['TransformAlarmC__0__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:2652)
          TypeDecl: declname='dt', quals=[] (at pp.c:2652)
            IdentifierType: names=['TransformAlarmC__0__Alarm__size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__startAt', quals=[] (at pp.c:2652)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__start', quals=[], storage=['static'] (at pp.c:2654)
    FuncDecl: quals=None (at pp.c:2654)
      ParamList:  (at pp.c:2654)
        Decl: name='dt', quals=[], storage=[] (at pp.c:2654)
          TypeDecl: declname='dt', quals=[] (at pp.c:2654)
            IdentifierType: names=['TransformAlarmC__0__Alarm__size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__start', quals=[] (at pp.c:2654)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__stop', quals=[], storage=['static'] (at pp.c:2661)
    FuncDecl: quals=None (at pp.c:2661)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__stop', quals=[] (at pp.c:2661)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__AlarmFrom__fired', quals=[], storage=['static'] (at pp.c:2666)
    FuncDecl: quals=None (at pp.c:2666)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__AlarmFrom__fired', quals=[] (at pp.c:2666)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Counter__overflow', quals=[], storage=['static'] (at pp.c:2668)
    FuncDecl: quals=None (at pp.c:2668)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Counter__overflow', quals=[] (at pp.c:2668)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__0__IO__get', quals=[], storage=['static'] (at pp.c:2670)
    FuncDecl: quals=None (at pp.c:2670)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__0__IO__get', quals=[] (at pp.c:2670)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430GeneralIOP__0__IO__getRaw', quals=[], storage=['static'] (at pp.c:2672)
    FuncDecl: quals=None (at pp.c:2672)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__0__IO__getRaw', quals=[] (at pp.c:2672)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430GeneralIOP__3__IO__get', quals=[], storage=['static'] (at pp.c:2679)
    FuncDecl: quals=None (at pp.c:2679)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__3__IO__get', quals=[] (at pp.c:2679)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430GeneralIOP__3__IO__getRaw', quals=[], storage=['static'] (at pp.c:2681)
    FuncDecl: quals=None (at pp.c:2681)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__3__IO__getRaw', quals=[] (at pp.c:2681)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430GeneralIOP__4__IO__makeInput', quals=[], storage=['static'] (at pp.c:2683)
    FuncDecl: quals=None (at pp.c:2683)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__4__IO__makeInput', quals=[] (at pp.c:2683)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__4__IO__get', quals=[], storage=['static'] (at pp.c:2685)
    FuncDecl: quals=None (at pp.c:2685)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__4__IO__get', quals=[] (at pp.c:2685)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430GeneralIOP__4__IO__getRaw', quals=[], storage=['static'] (at pp.c:2687)
    FuncDecl: quals=None (at pp.c:2687)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__4__IO__getRaw', quals=[] (at pp.c:2687)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430GeneralIOP__12__IO__makeInput', quals=[], storage=['static'] (at pp.c:2689)
    FuncDecl: quals=None (at pp.c:2689)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__12__IO__makeInput', quals=[] (at pp.c:2689)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__12__IO__makeOutput', quals=[], storage=['static'] (at pp.c:2696)
    FuncDecl: quals=None (at pp.c:2696)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__12__IO__makeOutput', quals=[] (at pp.c:2696)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__12__IO__get', quals=[], storage=['static'] (at pp.c:2698)
    FuncDecl: quals=None (at pp.c:2698)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__12__IO__get', quals=[] (at pp.c:2698)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430GeneralIOP__12__IO__getRaw', quals=[], storage=['static'] (at pp.c:2700)
    FuncDecl: quals=None (at pp.c:2700)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__12__IO__getRaw', quals=[] (at pp.c:2700)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430GeneralIOP__12__IO__clr', quals=[], storage=['static'] (at pp.c:2702)
    FuncDecl: quals=None (at pp.c:2702)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__12__IO__clr', quals=[] (at pp.c:2702)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__17__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2704)
    FuncDecl: quals=None (at pp.c:2704)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__17__IO__selectIOFunc', quals=[] (at pp.c:2704)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__17__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:2706)
    FuncDecl: quals=None (at pp.c:2706)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__17__IO__selectModuleFunc', quals=[] (at pp.c:2706)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__18__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2713)
    FuncDecl: quals=None (at pp.c:2713)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__18__IO__selectIOFunc', quals=[] (at pp.c:2713)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__18__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:2715)
    FuncDecl: quals=None (at pp.c:2715)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__18__IO__selectModuleFunc', quals=[] (at pp.c:2715)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__19__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2722)
    FuncDecl: quals=None (at pp.c:2722)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__19__IO__selectIOFunc', quals=[] (at pp.c:2722)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__19__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:2724)
    FuncDecl: quals=None (at pp.c:2724)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__19__IO__selectModuleFunc', quals=[] (at pp.c:2724)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__20__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2731)
    FuncDecl: quals=None (at pp.c:2731)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__20__IO__selectIOFunc', quals=[] (at pp.c:2731)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__21__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2733)
    FuncDecl: quals=None (at pp.c:2733)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__21__IO__selectIOFunc', quals=[] (at pp.c:2733)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__toggle', quals=[], storage=['static'] (at pp.c:2735)
    FuncDecl: quals=None (at pp.c:2735)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__toggle', quals=[] (at pp.c:2735)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[], storage=['static'] (at pp.c:2737)
    FuncDecl: quals=None (at pp.c:2737)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[] (at pp.c:2737)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__set', quals=[], storage=['static'] (at pp.c:2739)
    FuncDecl: quals=None (at pp.c:2739)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__set', quals=[] (at pp.c:2739)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__25__IO__makeInput', quals=[], storage=['static'] (at pp.c:2741)
    FuncDecl: quals=None (at pp.c:2741)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__25__IO__makeInput', quals=[] (at pp.c:2741)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__25__IO__get', quals=[], storage=['static'] (at pp.c:2743)
    FuncDecl: quals=None (at pp.c:2743)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__25__IO__get', quals=[] (at pp.c:2743)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430GeneralIOP__25__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2745)
    FuncDecl: quals=None (at pp.c:2745)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__25__IO__selectIOFunc', quals=[] (at pp.c:2745)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__25__IO__getRaw', quals=[], storage=['static'] (at pp.c:2747)
    FuncDecl: quals=None (at pp.c:2747)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__25__IO__getRaw', quals=[] (at pp.c:2747)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430GeneralIOP__25__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:2749)
    FuncDecl: quals=None (at pp.c:2749)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__25__IO__selectModuleFunc', quals=[] (at pp.c:2749)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__26__IO__makeOutput', quals=[], storage=['static'] (at pp.c:2751)
    FuncDecl: quals=None (at pp.c:2751)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__26__IO__makeOutput', quals=[] (at pp.c:2751)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__26__IO__set', quals=[], storage=['static'] (at pp.c:2753)
    FuncDecl: quals=None (at pp.c:2753)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__26__IO__set', quals=[] (at pp.c:2753)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__26__IO__clr', quals=[], storage=['static'] (at pp.c:2758)
    FuncDecl: quals=None (at pp.c:2758)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__26__IO__clr', quals=[] (at pp.c:2758)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__toggle', quals=[], storage=['static'] (at pp.c:2763)
    FuncDecl: quals=None (at pp.c:2763)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__toggle', quals=[] (at pp.c:2763)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[], storage=['static'] (at pp.c:2765)
    FuncDecl: quals=None (at pp.c:2765)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[] (at pp.c:2765)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__set', quals=[], storage=['static'] (at pp.c:2767)
    FuncDecl: quals=None (at pp.c:2767)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__set', quals=[] (at pp.c:2767)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__29__IO__makeOutput', quals=[], storage=['static'] (at pp.c:2769)
    FuncDecl: quals=None (at pp.c:2769)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__29__IO__makeOutput', quals=[] (at pp.c:2769)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__29__IO__set', quals=[], storage=['static'] (at pp.c:2771)
    FuncDecl: quals=None (at pp.c:2771)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__29__IO__set', quals=[] (at pp.c:2771)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__29__IO__clr', quals=[], storage=['static'] (at pp.c:2776)
    FuncDecl: quals=None (at pp.c:2776)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__29__IO__clr', quals=[] (at pp.c:2776)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__30__IO__makeOutput', quals=[], storage=['static'] (at pp.c:2778)
    FuncDecl: quals=None (at pp.c:2778)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__30__IO__makeOutput', quals=[] (at pp.c:2778)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__30__IO__set', quals=[], storage=['static'] (at pp.c:2780)
    FuncDecl: quals=None (at pp.c:2780)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__30__IO__set', quals=[] (at pp.c:2780)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__30__IO__clr', quals=[], storage=['static'] (at pp.c:2785)
    FuncDecl: quals=None (at pp.c:2785)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__30__IO__clr', quals=[] (at pp.c:2785)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__toggle', quals=[], storage=['static'] (at pp.c:2790)
    FuncDecl: quals=None (at pp.c:2790)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__toggle', quals=[] (at pp.c:2790)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[], storage=['static'] (at pp.c:2792)
    FuncDecl: quals=None (at pp.c:2792)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[] (at pp.c:2792)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__set', quals=[], storage=['static'] (at pp.c:2794)
    FuncDecl: quals=None (at pp.c:2794)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__set', quals=[] (at pp.c:2794)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__40__IO__makeInput', quals=[], storage=['static'] (at pp.c:2796)
    FuncDecl: quals=None (at pp.c:2796)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__40__IO__makeInput', quals=[] (at pp.c:2796)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__40__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2798)
    FuncDecl: quals=None (at pp.c:2798)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__40__IO__selectIOFunc', quals=[] (at pp.c:2798)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__40__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:2800)
    FuncDecl: quals=None (at pp.c:2800)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__40__IO__selectModuleFunc', quals=[] (at pp.c:2800)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__41__IO__makeInput', quals=[], storage=['static'] (at pp.c:2802)
    FuncDecl: quals=None (at pp.c:2802)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__41__IO__makeInput', quals=[] (at pp.c:2802)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__41__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2804)
    FuncDecl: quals=None (at pp.c:2804)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__41__IO__selectIOFunc', quals=[] (at pp.c:2804)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__41__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:2806)
    FuncDecl: quals=None (at pp.c:2806)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__41__IO__selectModuleFunc', quals=[] (at pp.c:2806)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__42__IO__makeInput', quals=[], storage=['static'] (at pp.c:2808)
    FuncDecl: quals=None (at pp.c:2808)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__42__IO__makeInput', quals=[] (at pp.c:2808)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__42__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2810)
    FuncDecl: quals=None (at pp.c:2810)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__42__IO__selectIOFunc', quals=[] (at pp.c:2810)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__42__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:2812)
    FuncDecl: quals=None (at pp.c:2812)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__42__IO__selectModuleFunc', quals=[] (at pp.c:2812)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__43__IO__makeInput', quals=[], storage=['static'] (at pp.c:2814)
    FuncDecl: quals=None (at pp.c:2814)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__43__IO__makeInput', quals=[] (at pp.c:2814)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__43__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2816)
    FuncDecl: quals=None (at pp.c:2816)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__43__IO__selectIOFunc', quals=[] (at pp.c:2816)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__43__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:2818)
    FuncDecl: quals=None (at pp.c:2818)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__43__IO__selectModuleFunc', quals=[] (at pp.c:2818)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__44__IO__makeInput', quals=[], storage=['static'] (at pp.c:2820)
    FuncDecl: quals=None (at pp.c:2820)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__44__IO__makeInput', quals=[] (at pp.c:2820)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__44__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2822)
    FuncDecl: quals=None (at pp.c:2822)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__44__IO__selectIOFunc', quals=[] (at pp.c:2822)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__44__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:2824)
    FuncDecl: quals=None (at pp.c:2824)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__44__IO__selectModuleFunc', quals=[] (at pp.c:2824)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__45__IO__makeInput', quals=[], storage=['static'] (at pp.c:2826)
    FuncDecl: quals=None (at pp.c:2826)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__45__IO__makeInput', quals=[] (at pp.c:2826)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__45__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2828)
    FuncDecl: quals=None (at pp.c:2828)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__45__IO__selectIOFunc', quals=[] (at pp.c:2828)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__45__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:2830)
    FuncDecl: quals=None (at pp.c:2830)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__45__IO__selectModuleFunc', quals=[] (at pp.c:2830)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__46__IO__makeInput', quals=[], storage=['static'] (at pp.c:2832)
    FuncDecl: quals=None (at pp.c:2832)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__46__IO__makeInput', quals=[] (at pp.c:2832)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__46__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2834)
    FuncDecl: quals=None (at pp.c:2834)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__46__IO__selectIOFunc', quals=[] (at pp.c:2834)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__46__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:2836)
    FuncDecl: quals=None (at pp.c:2836)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__46__IO__selectModuleFunc', quals=[] (at pp.c:2836)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__47__IO__makeInput', quals=[], storage=['static'] (at pp.c:2838)
    FuncDecl: quals=None (at pp.c:2838)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__47__IO__makeInput', quals=[] (at pp.c:2838)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__47__IO__selectIOFunc', quals=[], storage=['static'] (at pp.c:2840)
    FuncDecl: quals=None (at pp.c:2840)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__47__IO__selectIOFunc', quals=[] (at pp.c:2840)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__47__IO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:2842)
    FuncDecl: quals=None (at pp.c:2842)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__47__IO__selectModuleFunc', quals=[] (at pp.c:2842)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__makeInput', quals=[], storage=['static'] (at pp.c:2844)
    FuncDecl: quals=None (at pp.c:2844)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__makeInput', quals=[] (at pp.c:2844)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__get', quals=[], storage=['static'] (at pp.c:2846)
    FuncDecl: quals=None (at pp.c:2846)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__get', quals=[] (at pp.c:2846)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:2849)
    FuncDecl: quals=None (at pp.c:2849)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__makeOutput', quals=[] (at pp.c:2849)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__set', quals=[], storage=['static'] (at pp.c:2851)
    FuncDecl: quals=None (at pp.c:2851)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__set', quals=[] (at pp.c:2851)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__clr', quals=[], storage=['static'] (at pp.c:2852)
    FuncDecl: quals=None (at pp.c:2852)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__clr', quals=[] (at pp.c:2852)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__GeneralIO__get', quals=[], storage=['static'] (at pp.c:2854)
    FuncDecl: quals=None (at pp.c:2854)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__GeneralIO__get', quals=[] (at pp.c:2854)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__3__GeneralIO__get', quals=[], storage=['static'] (at pp.c:2856)
    FuncDecl: quals=None (at pp.c:2856)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__3__GeneralIO__get', quals=[] (at pp.c:2856)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__4__GeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:2859)
    FuncDecl: quals=None (at pp.c:2859)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__4__GeneralIO__makeOutput', quals=[] (at pp.c:2859)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__4__GeneralIO__set', quals=[], storage=['static'] (at pp.c:2861)
    FuncDecl: quals=None (at pp.c:2861)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__4__GeneralIO__set', quals=[] (at pp.c:2861)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__4__GeneralIO__clr', quals=[], storage=['static'] (at pp.c:2862)
    FuncDecl: quals=None (at pp.c:2862)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__4__GeneralIO__clr', quals=[] (at pp.c:2862)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__5__GeneralIO__makeInput', quals=[], storage=['static'] (at pp.c:2865)
    FuncDecl: quals=None (at pp.c:2865)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__5__GeneralIO__makeInput', quals=[] (at pp.c:2865)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__5__GeneralIO__get', quals=[], storage=['static'] (at pp.c:2867)
    FuncDecl: quals=None (at pp.c:2867)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__5__GeneralIO__get', quals=[] (at pp.c:2867)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__6__GeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:2870)
    FuncDecl: quals=None (at pp.c:2870)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__6__GeneralIO__makeOutput', quals=[] (at pp.c:2870)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__6__GeneralIO__set', quals=[], storage=['static'] (at pp.c:2872)
    FuncDecl: quals=None (at pp.c:2872)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__6__GeneralIO__set', quals=[] (at pp.c:2872)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__6__GeneralIO__clr', quals=[], storage=['static'] (at pp.c:2873)
    FuncDecl: quals=None (at pp.c:2873)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__6__GeneralIO__clr', quals=[] (at pp.c:2873)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__Msp430Capture__captured', quals=[], storage=['static'] (at pp.c:2875)
    FuncDecl: quals=None (at pp.c:2875)
      ParamList:  (at pp.c:2875)
        Decl: name='time', quals=[], storage=[] (at pp.c:2875)
          TypeDecl: declname='time', quals=[] (at pp.c:2875)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Msp430Capture__captured', quals=[] (at pp.c:2875)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__Capture__captureFallingEdge', quals=[], storage=['static'] (at pp.c:2877)
    FuncDecl: quals=None (at pp.c:2877)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Capture__captureFallingEdge', quals=[] (at pp.c:2877)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='GpioCaptureC__0__Capture__disable', quals=[], storage=['static'] (at pp.c:2879)
    FuncDecl: quals=None (at pp.c:2879)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Capture__disable', quals=[] (at pp.c:2879)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__Capture__captureRisingEdge', quals=[], storage=['static'] (at pp.c:2881)
    FuncDecl: quals=None (at pp.c:2881)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Capture__captureRisingEdge', quals=[] (at pp.c:2881)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='HplMsp430InterruptP__Port14__clear', quals=[], storage=['static'] (at pp.c:2883)
    FuncDecl: quals=None (at pp.c:2883)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port14__clear', quals=[] (at pp.c:2883)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port14__disable', quals=[], storage=['static'] (at pp.c:2885)
    FuncDecl: quals=None (at pp.c:2885)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port14__disable', quals=[] (at pp.c:2885)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port14__edge', quals=[], storage=['static'] (at pp.c:2887)
    FuncDecl: quals=None (at pp.c:2887)
      ParamList:  (at pp.c:2887)
        Decl: name='low_to_high', quals=[], storage=[] (at pp.c:2887)
          TypeDecl: declname='low_to_high', quals=[] (at pp.c:2887)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port14__edge', quals=[] (at pp.c:2887)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port14__enable', quals=[], storage=['static'] (at pp.c:2889)
    FuncDecl: quals=None (at pp.c:2889)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port14__enable', quals=[] (at pp.c:2889)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port26__clear', quals=[], storage=['static'] (at pp.c:2899)
    FuncDecl: quals=None (at pp.c:2899)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port26__clear', quals=[] (at pp.c:2899)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port26__default__fired', quals=[], storage=['static'] (at pp.c:2901)
    FuncDecl: quals=None (at pp.c:2901)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port26__default__fired', quals=[] (at pp.c:2901)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port17__clear', quals=[], storage=['static'] (at pp.c:2903)
    FuncDecl: quals=None (at pp.c:2903)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port17__clear', quals=[] (at pp.c:2903)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port17__default__fired', quals=[], storage=['static'] (at pp.c:2905)
    FuncDecl: quals=None (at pp.c:2905)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port17__default__fired', quals=[] (at pp.c:2905)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port21__clear', quals=[], storage=['static'] (at pp.c:2907)
    FuncDecl: quals=None (at pp.c:2907)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port21__clear', quals=[] (at pp.c:2907)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port21__default__fired', quals=[], storage=['static'] (at pp.c:2909)
    FuncDecl: quals=None (at pp.c:2909)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port21__default__fired', quals=[] (at pp.c:2909)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port12__clear', quals=[], storage=['static'] (at pp.c:2911)
    FuncDecl: quals=None (at pp.c:2911)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port12__clear', quals=[] (at pp.c:2911)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port12__default__fired', quals=[], storage=['static'] (at pp.c:2913)
    FuncDecl: quals=None (at pp.c:2913)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port12__default__fired', quals=[] (at pp.c:2913)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port24__clear', quals=[], storage=['static'] (at pp.c:2915)
    FuncDecl: quals=None (at pp.c:2915)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port24__clear', quals=[] (at pp.c:2915)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port24__default__fired', quals=[], storage=['static'] (at pp.c:2917)
    FuncDecl: quals=None (at pp.c:2917)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port24__default__fired', quals=[] (at pp.c:2917)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port15__clear', quals=[], storage=['static'] (at pp.c:2919)
    FuncDecl: quals=None (at pp.c:2919)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port15__clear', quals=[] (at pp.c:2919)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port15__default__fired', quals=[], storage=['static'] (at pp.c:2921)
    FuncDecl: quals=None (at pp.c:2921)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port15__default__fired', quals=[] (at pp.c:2921)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port27__clear', quals=[], storage=['static'] (at pp.c:2923)
    FuncDecl: quals=None (at pp.c:2923)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port27__clear', quals=[] (at pp.c:2923)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port27__default__fired', quals=[], storage=['static'] (at pp.c:2925)
    FuncDecl: quals=None (at pp.c:2925)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port27__default__fired', quals=[] (at pp.c:2925)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port10__clear', quals=[], storage=['static'] (at pp.c:2927)
    FuncDecl: quals=None (at pp.c:2927)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port10__clear', quals=[] (at pp.c:2927)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port10__disable', quals=[], storage=['static'] (at pp.c:2929)
    FuncDecl: quals=None (at pp.c:2929)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port10__disable', quals=[] (at pp.c:2929)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port10__edge', quals=[], storage=['static'] (at pp.c:2931)
    FuncDecl: quals=None (at pp.c:2931)
      ParamList:  (at pp.c:2931)
        Decl: name='low_to_high', quals=[], storage=[] (at pp.c:2931)
          TypeDecl: declname='low_to_high', quals=[] (at pp.c:2931)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port10__edge', quals=[] (at pp.c:2931)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port10__enable', quals=[], storage=['static'] (at pp.c:2933)
    FuncDecl: quals=None (at pp.c:2933)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port10__enable', quals=[] (at pp.c:2933)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port22__clear', quals=[], storage=['static'] (at pp.c:2943)
    FuncDecl: quals=None (at pp.c:2943)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port22__clear', quals=[] (at pp.c:2943)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port22__default__fired', quals=[], storage=['static'] (at pp.c:2945)
    FuncDecl: quals=None (at pp.c:2945)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port22__default__fired', quals=[] (at pp.c:2945)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port13__clear', quals=[], storage=['static'] (at pp.c:2947)
    FuncDecl: quals=None (at pp.c:2947)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port13__clear', quals=[] (at pp.c:2947)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port13__default__fired', quals=[], storage=['static'] (at pp.c:2949)
    FuncDecl: quals=None (at pp.c:2949)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port13__default__fired', quals=[] (at pp.c:2949)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port25__clear', quals=[], storage=['static'] (at pp.c:2951)
    FuncDecl: quals=None (at pp.c:2951)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port25__clear', quals=[] (at pp.c:2951)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port25__default__fired', quals=[], storage=['static'] (at pp.c:2953)
    FuncDecl: quals=None (at pp.c:2953)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port25__default__fired', quals=[] (at pp.c:2953)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port16__clear', quals=[], storage=['static'] (at pp.c:2955)
    FuncDecl: quals=None (at pp.c:2955)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port16__clear', quals=[] (at pp.c:2955)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port16__default__fired', quals=[], storage=['static'] (at pp.c:2957)
    FuncDecl: quals=None (at pp.c:2957)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port16__default__fired', quals=[] (at pp.c:2957)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port20__clear', quals=[], storage=['static'] (at pp.c:2959)
    FuncDecl: quals=None (at pp.c:2959)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port20__clear', quals=[] (at pp.c:2959)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port20__default__fired', quals=[], storage=['static'] (at pp.c:2961)
    FuncDecl: quals=None (at pp.c:2961)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port20__default__fired', quals=[] (at pp.c:2961)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port11__clear', quals=[], storage=['static'] (at pp.c:2963)
    FuncDecl: quals=None (at pp.c:2963)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port11__clear', quals=[] (at pp.c:2963)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port11__default__fired', quals=[], storage=['static'] (at pp.c:2965)
    FuncDecl: quals=None (at pp.c:2965)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port11__default__fired', quals=[] (at pp.c:2965)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port23__clear', quals=[], storage=['static'] (at pp.c:2967)
    FuncDecl: quals=None (at pp.c:2967)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port23__clear', quals=[] (at pp.c:2967)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port23__default__fired', quals=[], storage=['static'] (at pp.c:2969)
    FuncDecl: quals=None (at pp.c:2969)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port23__default__fired', quals=[] (at pp.c:2969)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__0__HplInterrupt__fired', quals=[], storage=['static'] (at pp.c:2971)
    FuncDecl: quals=None (at pp.c:2971)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__fired', quals=[] (at pp.c:2971)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__0__Interrupt__disable', quals=[], storage=['static'] (at pp.c:2973)
    FuncDecl: quals=None (at pp.c:2973)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__Interrupt__disable', quals=[] (at pp.c:2973)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430InterruptC__0__Interrupt__enableRisingEdge', quals=[], storage=['static'] (at pp.c:2975)
    FuncDecl: quals=None (at pp.c:2975)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__Interrupt__enableRisingEdge', quals=[] (at pp.c:2975)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430InterruptC__1__HplInterrupt__fired', quals=[], storage=['static'] (at pp.c:2977)
    FuncDecl: quals=None (at pp.c:2977)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__fired', quals=[] (at pp.c:2977)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__1__Interrupt__disable', quals=[], storage=['static'] (at pp.c:2979)
    FuncDecl: quals=None (at pp.c:2979)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__Interrupt__disable', quals=[] (at pp.c:2979)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430InterruptC__1__Interrupt__enableFallingEdge', quals=[], storage=['static'] (at pp.c:2981)
    FuncDecl: quals=None (at pp.c:2981)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__Interrupt__enableFallingEdge', quals=[] (at pp.c:2981)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__SpiPacket__sendDone', quals=[], storage=['static'] (at pp.c:2983)
    FuncDecl: quals=None (at pp.c:2983)
      ParamList:  (at pp.c:2985)
        Decl: name='txBuf', quals=[], storage=[] (at pp.c:2985)
          PtrDecl: quals=[] (at pp.c:2985)
            TypeDecl: declname='txBuf', quals=[] (at pp.c:2985)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rxBuf', quals=[], storage=[] (at pp.c:2986)
          PtrDecl: quals=[] (at pp.c:2986)
            TypeDecl: declname='rxBuf', quals=[] (at pp.c:2986)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:2992)
          TypeDecl: declname='len', quals=[] (at pp.c:2992)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:2993)
          TypeDecl: declname='error', quals=[] (at pp.c:2993)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420SpiP__SpiPacket__sendDone', quals=[] (at pp.c:2983)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__Fifo__continueRead', quals=[], storage=['static'] (at pp.c:2995)
    FuncDecl: quals=None (at pp.c:2995)
      ParamList:  (at pp.c:2997)
        Decl: name='arg_0x101c0a020', quals=[], storage=[] (at pp.c:2997)
          TypeDecl: declname='arg_0x101c0a020', quals=[] (at pp.c:2997)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:2999)
          PtrDecl: quals=[] (at pp.c:2999)
            TypeDecl: declname='data', quals=[] (at pp.c:2999)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:2999)
          TypeDecl: declname='length', quals=[] (at pp.c:2999)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__continueRead', quals=[] (at pp.c:2995)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__Fifo__default__writeDone', quals=[], storage=['static'] (at pp.c:3001)
    FuncDecl: quals=None (at pp.c:3001)
      ParamList:  (at pp.c:3003)
        Decl: name='arg_0x101c0a020', quals=[], storage=[] (at pp.c:3003)
          TypeDecl: declname='arg_0x101c0a020', quals=[] (at pp.c:3003)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:3005)
          PtrDecl: quals=[] (at pp.c:3005)
            TypeDecl: declname='data', quals=[] (at pp.c:3005)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:3005)
          TypeDecl: declname='length', quals=[] (at pp.c:3005)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3005)
          TypeDecl: declname='error', quals=[] (at pp.c:3005)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__default__writeDone', quals=[] (at pp.c:3001)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__Fifo__write', quals=[], storage=['static'] (at pp.c:3007)
    FuncDecl: quals=None (at pp.c:3007)
      ParamList:  (at pp.c:3009)
        Decl: name='arg_0x101c0a020', quals=[], storage=[] (at pp.c:3009)
          TypeDecl: declname='arg_0x101c0a020', quals=[] (at pp.c:3009)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:3011)
          PtrDecl: quals=[] (at pp.c:3011)
            TypeDecl: declname='data', quals=[] (at pp.c:3011)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:3011)
          TypeDecl: declname='length', quals=[] (at pp.c:3011)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__write', quals=[] (at pp.c:3007)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__Fifo__beginRead', quals=[], storage=['static'] (at pp.c:3013)
    FuncDecl: quals=None (at pp.c:3013)
      ParamList:  (at pp.c:3015)
        Decl: name='arg_0x101c0a020', quals=[], storage=[] (at pp.c:3015)
          TypeDecl: declname='arg_0x101c0a020', quals=[] (at pp.c:3015)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:3017)
          PtrDecl: quals=[] (at pp.c:3017)
            TypeDecl: declname='data', quals=[] (at pp.c:3017)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:3017)
          TypeDecl: declname='length', quals=[] (at pp.c:3017)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__beginRead', quals=[] (at pp.c:3013)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__Fifo__default__readDone', quals=[], storage=['static'] (at pp.c:3019)
    FuncDecl: quals=None (at pp.c:3019)
      ParamList:  (at pp.c:3021)
        Decl: name='arg_0x101c0a020', quals=[], storage=[] (at pp.c:3021)
          TypeDecl: declname='arg_0x101c0a020', quals=[] (at pp.c:3021)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:3023)
          PtrDecl: quals=[] (at pp.c:3023)
            TypeDecl: declname='data', quals=[] (at pp.c:3023)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:3023)
          TypeDecl: declname='length', quals=[] (at pp.c:3023)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3023)
          TypeDecl: declname='error', quals=[] (at pp.c:3023)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__default__readDone', quals=[] (at pp.c:3019)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__ChipSpiResource__abortRelease', quals=[], storage=['static'] (at pp.c:3025)
    FuncDecl: quals=None (at pp.c:3025)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__ChipSpiResource__abortRelease', quals=[] (at pp.c:3025)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__ChipSpiResource__attemptRelease', quals=[], storage=['static'] (at pp.c:3033)
    FuncDecl: quals=None (at pp.c:3033)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__ChipSpiResource__attemptRelease', quals=[] (at pp.c:3033)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__SpiResource__granted', quals=[], storage=['static'] (at pp.c:3035)
    FuncDecl: quals=None (at pp.c:3035)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__SpiResource__granted', quals=[] (at pp.c:3035)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__Ram__write', quals=[], storage=['static'] (at pp.c:3037)
    FuncDecl: quals=None (at pp.c:3037)
      ParamList:  (at pp.c:3039)
        Decl: name='arg_0x101c09230', quals=[], storage=[] (at pp.c:3039)
          TypeDecl: declname='arg_0x101c09230', quals=[] (at pp.c:3039)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='offset', quals=[], storage=[] (at pp.c:3041)
          TypeDecl: declname='offset', quals=[] (at pp.c:3041)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:3041)
          PtrDecl: quals=[] (at pp.c:3041)
            TypeDecl: declname='data', quals=[] (at pp.c:3041)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:3041)
          TypeDecl: declname='length', quals=[] (at pp.c:3041)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Ram__write', quals=[] (at pp.c:3037)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__Reg__read', quals=[], storage=['static'] (at pp.c:3043)
    FuncDecl: quals=None (at pp.c:3043)
      ParamList:  (at pp.c:3045)
        Decl: name='arg_0x101c08020', quals=[], storage=[] (at pp.c:3045)
          TypeDecl: declname='arg_0x101c08020', quals=[] (at pp.c:3045)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:3047)
          PtrDecl: quals=[] (at pp.c:3047)
            TypeDecl: declname='data', quals=[] (at pp.c:3047)
              IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Reg__read', quals=[] (at pp.c:3043)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__Reg__write', quals=[], storage=['static'] (at pp.c:3055)
    FuncDecl: quals=None (at pp.c:3055)
      ParamList:  (at pp.c:3057)
        Decl: name='arg_0x101c08020', quals=[], storage=[] (at pp.c:3057)
          TypeDecl: declname='arg_0x101c08020', quals=[] (at pp.c:3057)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:3059)
          TypeDecl: declname='data', quals=[] (at pp.c:3059)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Reg__write', quals=[] (at pp.c:3055)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__Resource__release', quals=[], storage=['static'] (at pp.c:3061)
    FuncDecl: quals=None (at pp.c:3061)
      ParamList:  (at pp.c:3063)
        Decl: name='arg_0x101c0cd08', quals=[], storage=[] (at pp.c:3063)
          TypeDecl: declname='arg_0x101c0cd08', quals=[] (at pp.c:3063)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__release', quals=[] (at pp.c:3061)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__Resource__immediateRequest', quals=[], storage=['static'] (at pp.c:3065)
    FuncDecl: quals=None (at pp.c:3065)
      ParamList:  (at pp.c:3067)
        Decl: name='arg_0x101c0cd08', quals=[], storage=[] (at pp.c:3067)
          TypeDecl: declname='arg_0x101c0cd08', quals=[] (at pp.c:3067)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__immediateRequest', quals=[] (at pp.c:3065)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__Resource__request', quals=[], storage=['static'] (at pp.c:3069)
    FuncDecl: quals=None (at pp.c:3069)
      ParamList:  (at pp.c:3071)
        Decl: name='arg_0x101c0cd08', quals=[], storage=[] (at pp.c:3071)
          TypeDecl: declname='arg_0x101c0cd08', quals=[] (at pp.c:3071)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__request', quals=[] (at pp.c:3069)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__Resource__default__granted', quals=[], storage=['static'] (at pp.c:3073)
    FuncDecl: quals=None (at pp.c:3073)
      ParamList:  (at pp.c:3075)
        Decl: name='arg_0x101c0cd08', quals=[], storage=[] (at pp.c:3075)
          TypeDecl: declname='arg_0x101c0cd08', quals=[] (at pp.c:3075)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__default__granted', quals=[] (at pp.c:3073)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__Resource__isOwner', quals=[], storage=['static'] (at pp.c:3077)
    FuncDecl: quals=None (at pp.c:3077)
      ParamList:  (at pp.c:3079)
        Decl: name='arg_0x101c0cd08', quals=[], storage=[] (at pp.c:3079)
          TypeDecl: declname='arg_0x101c0cd08', quals=[] (at pp.c:3079)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__isOwner', quals=[] (at pp.c:3077)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420SpiP__grant__runTask', quals=[], storage=['static'] (at pp.c:3081)
    FuncDecl: quals=None (at pp.c:3081)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__grant__runTask', quals=[] (at pp.c:3081)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__Strobe__strobe', quals=[], storage=['static'] (at pp.c:3083)
    FuncDecl: quals=None (at pp.c:3083)
      ParamList:  (at pp.c:3085)
        Decl: name='arg_0x101c08d30', quals=[], storage=[] (at pp.c:3085)
          TypeDecl: declname='arg_0x101c08d30', quals=[] (at pp.c:3085)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Strobe__strobe', quals=[] (at pp.c:3083)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='StateImplP__Init__init', quals=[], storage=['static'] (at pp.c:3087)
    FuncDecl: quals=None (at pp.c:3087)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='StateImplP__Init__init', quals=[] (at pp.c:3087)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='StateImplP__State__toIdle', quals=[], storage=['static'] (at pp.c:3089)
    FuncDecl: quals=None (at pp.c:3089)
      ParamList:  (at pp.c:3091)
        Decl: name='arg_0x101c83020', quals=[], storage=[] (at pp.c:3091)
          TypeDecl: declname='arg_0x101c83020', quals=[] (at pp.c:3091)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='StateImplP__State__toIdle', quals=[] (at pp.c:3089)
        IdentifierType: names=['void'] (at None)
  Decl: name='StateImplP__State__isState', quals=[], storage=['static'] (at pp.c:3093)
    FuncDecl: quals=None (at pp.c:3093)
      ParamList:  (at pp.c:3095)
        Decl: name='arg_0x101c83020', quals=[], storage=[] (at pp.c:3095)
          TypeDecl: declname='arg_0x101c83020', quals=[] (at pp.c:3095)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='myState', quals=[], storage=[] (at pp.c:3097)
          TypeDecl: declname='myState', quals=[] (at pp.c:3097)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='StateImplP__State__isState', quals=[] (at pp.c:3093)
        IdentifierType: names=['bool'] (at None)
  Decl: name='StateImplP__State__isIdle', quals=[], storage=['static'] (at pp.c:3099)
    FuncDecl: quals=None (at pp.c:3099)
      ParamList:  (at pp.c:3101)
        Decl: name='arg_0x101c83020', quals=[], storage=[] (at pp.c:3101)
          TypeDecl: declname='arg_0x101c83020', quals=[] (at pp.c:3101)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='StateImplP__State__isIdle', quals=[] (at pp.c:3099)
        IdentifierType: names=['bool'] (at None)
  Decl: name='StateImplP__State__requestState', quals=[], storage=['static'] (at pp.c:3103)
    FuncDecl: quals=None (at pp.c:3103)
      ParamList:  (at pp.c:3105)
        Decl: name='arg_0x101c83020', quals=[], storage=[] (at pp.c:3105)
          TypeDecl: declname='arg_0x101c83020', quals=[] (at pp.c:3105)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='reqState', quals=[], storage=[] (at pp.c:3107)
          TypeDecl: declname='reqState', quals=[] (at pp.c:3107)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='StateImplP__State__requestState', quals=[] (at pp.c:3103)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='StateImplP__State__forceState', quals=[], storage=['static'] (at pp.c:3113)
    FuncDecl: quals=None (at pp.c:3113)
      ParamList:  (at pp.c:3115)
        Decl: name='arg_0x101c83020', quals=[], storage=[] (at pp.c:3115)
          TypeDecl: declname='arg_0x101c83020', quals=[] (at pp.c:3115)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='reqState', quals=[], storage=[] (at pp.c:3117)
          TypeDecl: declname='reqState', quals=[] (at pp.c:3117)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='StateImplP__State__forceState', quals=[] (at pp.c:3113)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__ResourceConfigure__unconfigure', quals=[], storage=['static'] (at pp.c:3119)
    FuncDecl: quals=None (at pp.c:3119)
      ParamList:  (at pp.c:3121)
        Decl: name='arg_0x101cf0828', quals=[], storage=[] (at pp.c:3121)
          TypeDecl: declname='arg_0x101cf0828', quals=[] (at pp.c:3121)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__ResourceConfigure__unconfigure', quals=[] (at pp.c:3119)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__ResourceConfigure__configure', quals=[], storage=['static'] (at pp.c:3123)
    FuncDecl: quals=None (at pp.c:3123)
      ParamList:  (at pp.c:3125)
        Decl: name='arg_0x101cf0828', quals=[], storage=[] (at pp.c:3125)
          TypeDecl: declname='arg_0x101cf0828', quals=[] (at pp.c:3125)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__ResourceConfigure__configure', quals=[] (at pp.c:3123)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__SpiPacket__send', quals=[], storage=['static'] (at pp.c:3127)
    FuncDecl: quals=None (at pp.c:3127)
      ParamList:  (at pp.c:3129)
        Decl: name='arg_0x101cee7d8', quals=[], storage=[] (at pp.c:3129)
          TypeDecl: declname='arg_0x101cee7d8', quals=[] (at pp.c:3129)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='txBuf', quals=[], storage=[] (at pp.c:3131)
          PtrDecl: quals=[] (at pp.c:3131)
            TypeDecl: declname='txBuf', quals=[] (at pp.c:3131)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rxBuf', quals=[], storage=[] (at pp.c:3133)
          PtrDecl: quals=[] (at pp.c:3133)
            TypeDecl: declname='rxBuf', quals=[] (at pp.c:3133)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3142)
          TypeDecl: declname='len', quals=[] (at pp.c:3142)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__SpiPacket__send', quals=[] (at pp.c:3127)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__SpiPacket__default__sendDone', quals=[], storage=['static'] (at pp.c:3144)
    FuncDecl: quals=None (at pp.c:3144)
      ParamList:  (at pp.c:3146)
        Decl: name='arg_0x101cee7d8', quals=[], storage=[] (at pp.c:3146)
          TypeDecl: declname='arg_0x101cee7d8', quals=[] (at pp.c:3146)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='txBuf', quals=[], storage=[] (at pp.c:3148)
          PtrDecl: quals=[] (at pp.c:3148)
            TypeDecl: declname='txBuf', quals=[] (at pp.c:3148)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rxBuf', quals=[], storage=[] (at pp.c:3149)
          PtrDecl: quals=[] (at pp.c:3149)
            TypeDecl: declname='rxBuf', quals=[] (at pp.c:3149)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3155)
          TypeDecl: declname='len', quals=[] (at pp.c:3155)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3156)
          TypeDecl: declname='error', quals=[] (at pp.c:3156)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__SpiPacket__default__sendDone', quals=[] (at pp.c:3144)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Msp430SpiConfigure__default__getConfig', quals=[], storage=['static'] (at pp.c:3158)
    FuncDecl: quals=None (at pp.c:3158)
      ParamList:  (at pp.c:3160)
        Decl: name='arg_0x101cec830', quals=[], storage=[] (at pp.c:3160)
          TypeDecl: declname='arg_0x101cec830', quals=[] (at pp.c:3160)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3158)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Msp430SpiConfigure__default__getConfig', quals=[] (at pp.c:3158)
          IdentifierType: names=['msp430_spi_union_config_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__SpiByte__write', quals=[], storage=['static'] (at pp.c:3162)
    FuncDecl: quals=None (at pp.c:3162)
      ParamList:  (at pp.c:3162)
        Decl: name='tx', quals=[], storage=[] (at pp.c:3162)
          TypeDecl: declname='tx', quals=[] (at pp.c:3162)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__SpiByte__write', quals=[] (at pp.c:3162)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__release', quals=[], storage=['static'] (at pp.c:3164)
    FuncDecl: quals=None (at pp.c:3164)
      ParamList:  (at pp.c:3166)
        Decl: name='arg_0x101ced588', quals=[], storage=[] (at pp.c:3166)
          TypeDecl: declname='arg_0x101ced588', quals=[] (at pp.c:3166)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__release', quals=[] (at pp.c:3164)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__immediateRequest', quals=[], storage=['static'] (at pp.c:3168)
    FuncDecl: quals=None (at pp.c:3168)
      ParamList:  (at pp.c:3170)
        Decl: name='arg_0x101ced588', quals=[], storage=[] (at pp.c:3170)
          TypeDecl: declname='arg_0x101ced588', quals=[] (at pp.c:3170)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__immediateRequest', quals=[] (at pp.c:3168)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__request', quals=[], storage=['static'] (at pp.c:3172)
    FuncDecl: quals=None (at pp.c:3172)
      ParamList:  (at pp.c:3174)
        Decl: name='arg_0x101ced588', quals=[], storage=[] (at pp.c:3174)
          TypeDecl: declname='arg_0x101ced588', quals=[] (at pp.c:3174)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__request', quals=[] (at pp.c:3172)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__granted', quals=[], storage=['static'] (at pp.c:3176)
    FuncDecl: quals=None (at pp.c:3176)
      ParamList:  (at pp.c:3178)
        Decl: name='arg_0x101ced588', quals=[], storage=[] (at pp.c:3178)
          TypeDecl: declname='arg_0x101ced588', quals=[] (at pp.c:3178)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__granted', quals=[] (at pp.c:3176)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__isOwner', quals=[], storage=['static'] (at pp.c:3180)
    FuncDecl: quals=None (at pp.c:3180)
      ParamList:  (at pp.c:3182)
        Decl: name='arg_0x101ced588', quals=[], storage=[] (at pp.c:3182)
          TypeDecl: declname='arg_0x101ced588', quals=[] (at pp.c:3182)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__isOwner', quals=[] (at pp.c:3180)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__release', quals=[], storage=['static'] (at pp.c:3184)
    FuncDecl: quals=None (at pp.c:3184)
      ParamList:  (at pp.c:3186)
        Decl: name='arg_0x101cf1500', quals=[], storage=[] (at pp.c:3186)
          TypeDecl: declname='arg_0x101cf1500', quals=[] (at pp.c:3186)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__release', quals=[] (at pp.c:3184)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__immediateRequest', quals=[], storage=['static'] (at pp.c:3188)
    FuncDecl: quals=None (at pp.c:3188)
      ParamList:  (at pp.c:3190)
        Decl: name='arg_0x101cf1500', quals=[], storage=[] (at pp.c:3190)
          TypeDecl: declname='arg_0x101cf1500', quals=[] (at pp.c:3190)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__immediateRequest', quals=[] (at pp.c:3188)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__request', quals=[], storage=['static'] (at pp.c:3192)
    FuncDecl: quals=None (at pp.c:3192)
      ParamList:  (at pp.c:3194)
        Decl: name='arg_0x101cf1500', quals=[], storage=[] (at pp.c:3194)
          TypeDecl: declname='arg_0x101cf1500', quals=[] (at pp.c:3194)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__request', quals=[] (at pp.c:3192)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__default__granted', quals=[], storage=['static'] (at pp.c:3196)
    FuncDecl: quals=None (at pp.c:3196)
      ParamList:  (at pp.c:3198)
        Decl: name='arg_0x101cf1500', quals=[], storage=[] (at pp.c:3198)
          TypeDecl: declname='arg_0x101cf1500', quals=[] (at pp.c:3198)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__default__granted', quals=[] (at pp.c:3196)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__isOwner', quals=[], storage=['static'] (at pp.c:3200)
    FuncDecl: quals=None (at pp.c:3200)
      ParamList:  (at pp.c:3202)
        Decl: name='arg_0x101cf1500', quals=[], storage=[] (at pp.c:3202)
          TypeDecl: declname='arg_0x101cf1500', quals=[] (at pp.c:3202)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__isOwner', quals=[] (at pp.c:3200)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartInterrupts__rxDone', quals=[], storage=['static'] (at pp.c:3204)
    FuncDecl: quals=None (at pp.c:3204)
      ParamList:  (at pp.c:3204)
        Decl: name='data', quals=[], storage=[] (at pp.c:3204)
          TypeDecl: declname='data', quals=[] (at pp.c:3204)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartInterrupts__rxDone', quals=[] (at pp.c:3204)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartInterrupts__txDone', quals=[], storage=['static'] (at pp.c:3206)
    FuncDecl: quals=None (at pp.c:3206)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartInterrupts__txDone', quals=[] (at pp.c:3206)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__signalDone_task__runTask', quals=[], storage=['static'] (at pp.c:3208)
    FuncDecl: quals=None (at pp.c:3208)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__signalDone_task__runTask', quals=[] (at pp.c:3208)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__enableRxIntr', quals=[], storage=['static'] (at pp.c:3210)
    FuncDecl: quals=None (at pp.c:3210)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__enableRxIntr', quals=[] (at pp.c:3210)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__clrRxIntr', quals=[], storage=['static'] (at pp.c:3212)
    FuncDecl: quals=None (at pp.c:3212)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__clrRxIntr', quals=[] (at pp.c:3212)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__resetUsart', quals=[], storage=['static'] (at pp.c:3214)
    FuncDecl: quals=None (at pp.c:3214)
      ParamList:  (at pp.c:3214)
        Decl: name='reset', quals=[], storage=[] (at pp.c:3214)
          TypeDecl: declname='reset', quals=[] (at pp.c:3214)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__resetUsart', quals=[] (at pp.c:3214)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__disableIntr', quals=[], storage=['static'] (at pp.c:3216)
    FuncDecl: quals=None (at pp.c:3216)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__disableIntr', quals=[] (at pp.c:3216)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__setUmctl', quals=[], storage=['static'] (at pp.c:3218)
    FuncDecl: quals=None (at pp.c:3218)
      ParamList:  (at pp.c:3218)
        Decl: name='umctl', quals=[], storage=[] (at pp.c:3218)
          TypeDecl: declname='umctl', quals=[] (at pp.c:3218)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__setUmctl', quals=[] (at pp.c:3218)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__disableRxIntr', quals=[], storage=['static'] (at pp.c:3220)
    FuncDecl: quals=None (at pp.c:3220)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__disableRxIntr', quals=[] (at pp.c:3220)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__clrIntr', quals=[], storage=['static'] (at pp.c:3222)
    FuncDecl: quals=None (at pp.c:3222)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__clrIntr', quals=[] (at pp.c:3222)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__setUbr', quals=[], storage=['static'] (at pp.c:3224)
    FuncDecl: quals=None (at pp.c:3224)
      ParamList:  (at pp.c:3224)
        Decl: name='ubr', quals=[], storage=[] (at pp.c:3224)
          TypeDecl: declname='ubr', quals=[] (at pp.c:3224)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__setUbr', quals=[] (at pp.c:3224)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__tx', quals=[], storage=['static'] (at pp.c:3226)
    FuncDecl: quals=None (at pp.c:3226)
      ParamList:  (at pp.c:3226)
        Decl: name='data', quals=[], storage=[] (at pp.c:3226)
          TypeDecl: declname='data', quals=[] (at pp.c:3226)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__tx', quals=[] (at pp.c:3226)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__disableUart', quals=[], storage=['static'] (at pp.c:3228)
    FuncDecl: quals=None (at pp.c:3228)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__disableUart', quals=[] (at pp.c:3228)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__enableSpi', quals=[], storage=['static'] (at pp.c:3230)
    FuncDecl: quals=None (at pp.c:3230)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__enableSpi', quals=[] (at pp.c:3230)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__setModeSpi', quals=[], storage=['static'] (at pp.c:3232)
    FuncDecl: quals=None (at pp.c:3232)
      ParamList:  (at pp.c:3232)
        Decl: name='config', quals=[], storage=[] (at pp.c:3232)
          PtrDecl: quals=[] (at pp.c:3232)
            TypeDecl: declname='config', quals=[] (at pp.c:3232)
              IdentifierType: names=['msp430_spi_union_config_t'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__setModeSpi', quals=[] (at pp.c:3232)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__rx', quals=[], storage=['static'] (at pp.c:3234)
    FuncDecl: quals=None (at pp.c:3234)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__rx', quals=[] (at pp.c:3234)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__isRxIntrPending', quals=[], storage=['static'] (at pp.c:3236)
    FuncDecl: quals=None (at pp.c:3236)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__isRxIntrPending', quals=[] (at pp.c:3236)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__disableSpi', quals=[], storage=['static'] (at pp.c:3238)
    FuncDecl: quals=None (at pp.c:3238)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__disableSpi', quals=[] (at pp.c:3238)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Init__init', quals=[], storage=['static'] (at pp.c:3240)
    FuncDecl: quals=None (at pp.c:3240)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Init__init', quals=[] (at pp.c:3240)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='LedsP__Leds__led0Toggle', quals=[], storage=['static'] (at pp.c:3242)
    FuncDecl: quals=None (at pp.c:3242)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led0Toggle', quals=[] (at pp.c:3242)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led1Toggle', quals=[], storage=['static'] (at pp.c:3244)
    FuncDecl: quals=None (at pp.c:3244)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led1Toggle', quals=[] (at pp.c:3244)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led2Toggle', quals=[], storage=['static'] (at pp.c:3246)
    FuncDecl: quals=None (at pp.c:3246)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led2Toggle', quals=[] (at pp.c:3246)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__7__GeneralIO__toggle', quals=[], storage=['static'] (at pp.c:3248)
    FuncDecl: quals=None (at pp.c:3248)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__7__GeneralIO__toggle', quals=[] (at pp.c:3248)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__7__GeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:3252)
    FuncDecl: quals=None (at pp.c:3252)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__7__GeneralIO__makeOutput', quals=[] (at pp.c:3252)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__7__GeneralIO__set', quals=[], storage=['static'] (at pp.c:3254)
    FuncDecl: quals=None (at pp.c:3254)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__7__GeneralIO__set', quals=[] (at pp.c:3254)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__8__GeneralIO__toggle', quals=[], storage=['static'] (at pp.c:3256)
    FuncDecl: quals=None (at pp.c:3256)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__8__GeneralIO__toggle', quals=[] (at pp.c:3256)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__8__GeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:3260)
    FuncDecl: quals=None (at pp.c:3260)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__8__GeneralIO__makeOutput', quals=[] (at pp.c:3260)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__8__GeneralIO__set', quals=[], storage=['static'] (at pp.c:3262)
    FuncDecl: quals=None (at pp.c:3262)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__8__GeneralIO__set', quals=[] (at pp.c:3262)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__9__GeneralIO__toggle', quals=[], storage=['static'] (at pp.c:3264)
    FuncDecl: quals=None (at pp.c:3264)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__9__GeneralIO__toggle', quals=[] (at pp.c:3264)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__9__GeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:3268)
    FuncDecl: quals=None (at pp.c:3268)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__9__GeneralIO__makeOutput', quals=[] (at pp.c:3268)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__9__GeneralIO__set', quals=[], storage=['static'] (at pp.c:3270)
    FuncDecl: quals=None (at pp.c:3270)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__9__GeneralIO__set', quals=[] (at pp.c:3270)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__Interrupts__default__rxDone', quals=[], storage=['static'] (at pp.c:3272)
    FuncDecl: quals=None (at pp.c:3272)
      ParamList:  (at pp.c:3274)
        Decl: name='arg_0x101ea60c8', quals=[], storage=[] (at pp.c:3274)
          TypeDecl: declname='arg_0x101ea60c8', quals=[] (at pp.c:3274)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:3276)
          TypeDecl: declname='data', quals=[] (at pp.c:3276)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__Interrupts__default__rxDone', quals=[] (at pp.c:3272)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__Interrupts__default__txDone', quals=[], storage=['static'] (at pp.c:3278)
    FuncDecl: quals=None (at pp.c:3278)
      ParamList:  (at pp.c:3280)
        Decl: name='arg_0x101ea60c8', quals=[], storage=[] (at pp.c:3280)
          TypeDecl: declname='arg_0x101ea60c8', quals=[] (at pp.c:3280)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__Interrupts__default__txDone', quals=[] (at pp.c:3278)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__RawI2CInterrupts__fired', quals=[], storage=['static'] (at pp.c:3282)
    FuncDecl: quals=None (at pp.c:3282)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__RawI2CInterrupts__fired', quals=[] (at pp.c:3282)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__I2CInterrupts__default__fired', quals=[], storage=['static'] (at pp.c:3284)
    FuncDecl: quals=None (at pp.c:3284)
      ParamList:  (at pp.c:3286)
        Decl: name='arg_0x101ea4020', quals=[], storage=[] (at pp.c:3286)
          TypeDecl: declname='arg_0x101ea4020', quals=[] (at pp.c:3286)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__I2CInterrupts__default__fired', quals=[] (at pp.c:3284)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__RawInterrupts__rxDone', quals=[], storage=['static'] (at pp.c:3288)
    FuncDecl: quals=None (at pp.c:3288)
      ParamList:  (at pp.c:3288)
        Decl: name='data', quals=[], storage=[] (at pp.c:3288)
          TypeDecl: declname='data', quals=[] (at pp.c:3288)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__RawInterrupts__rxDone', quals=[] (at pp.c:3288)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__RawInterrupts__txDone', quals=[], storage=['static'] (at pp.c:3290)
    FuncDecl: quals=None (at pp.c:3290)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__RawInterrupts__txDone', quals=[] (at pp.c:3290)
        IdentifierType: names=['void'] (at None)
  Decl: name='FcfsResourceQueueC__1__Init__init', quals=[], storage=['static'] (at pp.c:3292)
    FuncDecl: quals=None (at pp.c:3292)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__1__Init__init', quals=[] (at pp.c:3292)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='FcfsResourceQueueC__1__FcfsQueue__enqueue', quals=[], storage=['static'] (at pp.c:3294)
    FuncDecl: quals=None (at pp.c:3294)
      ParamList:  (at pp.c:3294)
        Decl: name='id', quals=[], storage=[] (at pp.c:3294)
          TypeDecl: declname='id', quals=[] (at pp.c:3294)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__enqueue', quals=[] (at pp.c:3294)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='FcfsResourceQueueC__1__FcfsQueue__isEmpty', quals=[], storage=['static'] (at pp.c:3296)
    FuncDecl: quals=None (at pp.c:3296)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__isEmpty', quals=[] (at pp.c:3296)
        IdentifierType: names=['bool'] (at None)
  Decl: name='FcfsResourceQueueC__1__FcfsQueue__isEnqueued', quals=[], storage=['static'] (at pp.c:3305)
    FuncDecl: quals=None (at pp.c:3305)
      ParamList:  (at pp.c:3305)
        Decl: name='id', quals=[], storage=[] (at pp.c:3305)
          TypeDecl: declname='id', quals=[] (at pp.c:3305)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__isEnqueued', quals=[] (at pp.c:3305)
        IdentifierType: names=['bool'] (at None)
  Decl: name='FcfsResourceQueueC__1__FcfsQueue__dequeue', quals=[], storage=['static'] (at pp.c:3313)
    FuncDecl: quals=None (at pp.c:3313)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__dequeue', quals=[] (at pp.c:3313)
        IdentifierType: names=['resource_client_id_t'] (at None)
  Decl: name='ArbiterP__0__ResourceRequested__default__requested', quals=[], storage=['static'] (at pp.c:3315)
    FuncDecl: quals=None (at pp.c:3315)
      ParamList:  (at pp.c:3317)
        Decl: name='arg_0x101ef27e8', quals=[], storage=[] (at pp.c:3317)
          TypeDecl: declname='arg_0x101ef27e8', quals=[] (at pp.c:3317)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceRequested__default__requested', quals=[] (at pp.c:3315)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceRequested__default__immediateRequested', quals=[], storage=['static'] (at pp.c:3319)
    FuncDecl: quals=None (at pp.c:3319)
      ParamList:  (at pp.c:3321)
        Decl: name='arg_0x101ef27e8', quals=[], storage=[] (at pp.c:3321)
          TypeDecl: declname='arg_0x101ef27e8', quals=[] (at pp.c:3321)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceRequested__default__immediateRequested', quals=[] (at pp.c:3319)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceConfigure__default__unconfigure', quals=[], storage=['static'] (at pp.c:3323)
    FuncDecl: quals=None (at pp.c:3323)
      ParamList:  (at pp.c:3325)
        Decl: name='arg_0x101eef9b8', quals=[], storage=[] (at pp.c:3325)
          TypeDecl: declname='arg_0x101eef9b8', quals=[] (at pp.c:3325)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceConfigure__default__unconfigure', quals=[] (at pp.c:3323)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceConfigure__default__configure', quals=[], storage=['static'] (at pp.c:3327)
    FuncDecl: quals=None (at pp.c:3327)
      ParamList:  (at pp.c:3329)
        Decl: name='arg_0x101eef9b8', quals=[], storage=[] (at pp.c:3329)
          TypeDecl: declname='arg_0x101eef9b8', quals=[] (at pp.c:3329)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceConfigure__default__configure', quals=[] (at pp.c:3327)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__release', quals=[], storage=['static'] (at pp.c:3331)
    FuncDecl: quals=None (at pp.c:3331)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__release', quals=[] (at pp.c:3331)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__default__requested', quals=[], storage=['static'] (at pp.c:3333)
    FuncDecl: quals=None (at pp.c:3333)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__default__requested', quals=[] (at pp.c:3333)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__default__granted', quals=[], storage=['static'] (at pp.c:3335)
    FuncDecl: quals=None (at pp.c:3335)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__default__granted', quals=[] (at pp.c:3335)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__default__immediateRequested', quals=[], storage=['static'] (at pp.c:3337)
    FuncDecl: quals=None (at pp.c:3337)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__default__immediateRequested', quals=[] (at pp.c:3337)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__Resource__release', quals=[], storage=['static'] (at pp.c:3339)
    FuncDecl: quals=None (at pp.c:3339)
      ParamList:  (at pp.c:3341)
        Decl: name='arg_0x101ef3658', quals=[], storage=[] (at pp.c:3341)
          TypeDecl: declname='arg_0x101ef3658', quals=[] (at pp.c:3341)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__release', quals=[] (at pp.c:3339)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__0__Resource__immediateRequest', quals=[], storage=['static'] (at pp.c:3343)
    FuncDecl: quals=None (at pp.c:3343)
      ParamList:  (at pp.c:3345)
        Decl: name='arg_0x101ef3658', quals=[], storage=[] (at pp.c:3345)
          TypeDecl: declname='arg_0x101ef3658', quals=[] (at pp.c:3345)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__immediateRequest', quals=[] (at pp.c:3343)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__0__Resource__request', quals=[], storage=['static'] (at pp.c:3347)
    FuncDecl: quals=None (at pp.c:3347)
      ParamList:  (at pp.c:3349)
        Decl: name='arg_0x101ef3658', quals=[], storage=[] (at pp.c:3349)
          TypeDecl: declname='arg_0x101ef3658', quals=[] (at pp.c:3349)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__request', quals=[] (at pp.c:3347)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__0__Resource__default__granted', quals=[], storage=['static'] (at pp.c:3351)
    FuncDecl: quals=None (at pp.c:3351)
      ParamList:  (at pp.c:3353)
        Decl: name='arg_0x101ef3658', quals=[], storage=[] (at pp.c:3353)
          TypeDecl: declname='arg_0x101ef3658', quals=[] (at pp.c:3353)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__default__granted', quals=[] (at pp.c:3351)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__Resource__isOwner', quals=[], storage=['static'] (at pp.c:3355)
    FuncDecl: quals=None (at pp.c:3355)
      ParamList:  (at pp.c:3357)
        Decl: name='arg_0x101ef3658', quals=[], storage=[] (at pp.c:3357)
          TypeDecl: declname='arg_0x101ef3658', quals=[] (at pp.c:3357)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__isOwner', quals=[] (at pp.c:3355)
        IdentifierType: names=['bool'] (at None)
  Decl: name='ArbiterP__0__ArbiterInfo__inUse', quals=[], storage=['static'] (at pp.c:3359)
    FuncDecl: quals=None (at pp.c:3359)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ArbiterInfo__inUse', quals=[] (at pp.c:3359)
        IdentifierType: names=['bool'] (at None)
  Decl: name='ArbiterP__0__ArbiterInfo__userId', quals=[], storage=['static'] (at pp.c:3367)
    FuncDecl: quals=None (at pp.c:3367)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ArbiterInfo__userId', quals=[] (at pp.c:3367)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='ArbiterP__0__grantedTask__runTask', quals=[], storage=['static'] (at pp.c:3369)
    FuncDecl: quals=None (at pp.c:3369)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__grantedTask__runTask', quals=[] (at pp.c:3369)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430I2C0P__HplI2C__clearModeI2C', quals=[], storage=['static'] (at pp.c:3371)
    FuncDecl: quals=None (at pp.c:3371)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430I2C0P__HplI2C__clearModeI2C', quals=[] (at pp.c:3371)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430I2C0P__HplI2C__isI2C', quals=[], storage=['static'] (at pp.c:3373)
    FuncDecl: quals=None (at pp.c:3373)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430I2C0P__HplI2C__isI2C', quals=[] (at pp.c:3373)
        IdentifierType: names=['bool'] (at None)
  Decl: name='ActiveMessageAddressC__amAddress', quals=[], storage=['static'] (at pp.c:3375)
    FuncDecl: quals=None (at pp.c:3375)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ActiveMessageAddressC__amAddress', quals=[] (at pp.c:3375)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='ActiveMessageAddressC__ActiveMessageAddress__amAddress', quals=[], storage=['static'] (at pp.c:3377)
    FuncDecl: quals=None (at pp.c:3377)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ActiveMessageAddressC__ActiveMessageAddress__amAddress', quals=[] (at pp.c:3377)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='ActiveMessageAddressC__ActiveMessageAddress__amGroup', quals=[], storage=['static'] (at pp.c:3382)
    FuncDecl: quals=None (at pp.c:3382)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ActiveMessageAddressC__ActiveMessageAddress__amGroup', quals=[] (at pp.c:3382)
        IdentifierType: names=['am_group_t'] (at None)
  Decl: name='Ds2411P__ReadId48__read', quals=[], storage=['static'] (at pp.c:3384)
    FuncDecl: quals=None (at pp.c:3384)
      ParamList:  (at pp.c:3384)
        Decl: name='id', quals=[], storage=[] (at pp.c:3384)
          PtrDecl: quals=[] (at pp.c:3384)
            TypeDecl: declname='id', quals=[] (at pp.c:3384)
              IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Ds2411P__ReadId48__read', quals=[] (at pp.c:3384)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='OneWireMasterC__OneWire__read', quals=[], storage=['static'] (at pp.c:3386)
    FuncDecl: quals=None (at pp.c:3386)
      ParamList:  (at pp.c:3386)
        Decl: name='cmd', quals=[], storage=[] (at pp.c:3386)
          TypeDecl: declname='cmd', quals=[] (at pp.c:3386)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:3386)
          PtrDecl: quals=[] (at pp.c:3386)
            TypeDecl: declname='buf', quals=[] (at pp.c:3386)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3386)
          TypeDecl: declname='len', quals=[] (at pp.c:3386)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='OneWireMasterC__OneWire__read', quals=[] (at pp.c:3386)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='BusyWaitCounterC__0__BusyWait__wait', quals=[], storage=['static'] (at pp.c:3388)
    FuncDecl: quals=None (at pp.c:3388)
      ParamList:  (at pp.c:3388)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3388)
          TypeDecl: declname='dt', quals=[] (at pp.c:3388)
            IdentifierType: names=['BusyWaitCounterC__0__BusyWait__size_type'] (at None)
      TypeDecl: declname='BusyWaitCounterC__0__BusyWait__wait', quals=[] (at pp.c:3388)
        IdentifierType: names=['void'] (at None)
  Decl: name='BusyWaitCounterC__0__Counter__overflow', quals=[], storage=['static'] (at pp.c:3390)
    FuncDecl: quals=None (at pp.c:3390)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BusyWaitCounterC__0__Counter__overflow', quals=[] (at pp.c:3390)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430CounterC__1__Msp430Timer__overflow', quals=[], storage=['static'] (at pp.c:3392)
    FuncDecl: quals=None (at pp.c:3392)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__1__Msp430Timer__overflow', quals=[] (at pp.c:3392)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430CounterC__1__Counter__get', quals=[], storage=['static'] (at pp.c:3394)
    FuncDecl: quals=None (at pp.c:3394)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__1__Counter__get', quals=[] (at pp.c:3394)
        IdentifierType: names=['Msp430CounterC__1__Counter__size_type'] (at None)
  Decl: name='Msp430GpioC__11__GeneralIO__makeInput', quals=[], storage=['static'] (at pp.c:3396)
    FuncDecl: quals=None (at pp.c:3396)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__GeneralIO__makeInput', quals=[] (at pp.c:3396)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__11__GeneralIO__get', quals=[], storage=['static'] (at pp.c:3398)
    FuncDecl: quals=None (at pp.c:3398)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__GeneralIO__get', quals=[] (at pp.c:3398)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__11__GeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:3401)
    FuncDecl: quals=None (at pp.c:3401)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__GeneralIO__makeOutput', quals=[] (at pp.c:3401)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__11__GeneralIO__clr', quals=[], storage=['static'] (at pp.c:3403)
    FuncDecl: quals=None (at pp.c:3403)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__GeneralIO__clr', quals=[] (at pp.c:3403)
        IdentifierType: names=['void'] (at None)
  Decl: name='DallasId48ToIeeeEui64C__LocalIeeeEui64__getId', quals=[], storage=['static'] (at pp.c:3405)
    FuncDecl: quals=None (at pp.c:3405)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='DallasId48ToIeeeEui64C__LocalIeeeEui64__getId', quals=[] (at pp.c:3405)
        IdentifierType: names=['ieee_eui64_t'] (at None)
  Decl: name='CC2420TransmitP__RadioBackoff__setCongestionBackoff', quals=[], storage=['static'] (at pp.c:3407)
    FuncDecl: quals=None (at pp.c:3407)
      ParamList:  (at pp.c:3407)
        Decl: name='backoffTime', quals=[], storage=[] (at pp.c:3407)
          TypeDecl: declname='backoffTime', quals=[] (at pp.c:3407)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__RadioBackoff__setCongestionBackoff', quals=[] (at pp.c:3407)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__RadioBackoff__setInitialBackoff', quals=[], storage=['static'] (at pp.c:3409)
    FuncDecl: quals=None (at pp.c:3409)
      ParamList:  (at pp.c:3409)
        Decl: name='backoffTime', quals=[], storage=[] (at pp.c:3409)
          TypeDecl: declname='backoffTime', quals=[] (at pp.c:3409)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__RadioBackoff__setInitialBackoff', quals=[] (at pp.c:3409)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__CaptureSFD__captured', quals=[], storage=['static'] (at pp.c:3411)
    FuncDecl: quals=None (at pp.c:3411)
      ParamList:  (at pp.c:3411)
        Decl: name='time', quals=[], storage=[] (at pp.c:3411)
          TypeDecl: declname='time', quals=[] (at pp.c:3411)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__CaptureSFD__captured', quals=[] (at pp.c:3411)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__BackoffTimer__fired', quals=[], storage=['static'] (at pp.c:3413)
    FuncDecl: quals=None (at pp.c:3413)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__BackoffTimer__fired', quals=[] (at pp.c:3413)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__CC2420Receive__receive', quals=[], storage=['static'] (at pp.c:3415)
    FuncDecl: quals=None (at pp.c:3415)
      ParamList:  (at pp.c:3415)
        Decl: name='type', quals=[], storage=[] (at pp.c:3415)
          TypeDecl: declname='type', quals=[] (at pp.c:3415)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='message', quals=[], storage=[] (at pp.c:3415)
          PtrDecl: quals=[] (at pp.c:3415)
            TypeDecl: declname='message', quals=[] (at pp.c:3415)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__CC2420Receive__receive', quals=[] (at pp.c:3415)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__Send__send', quals=[], storage=['static'] (at pp.c:3417)
    FuncDecl: quals=None (at pp.c:3417)
      ParamList:  (at pp.c:3417)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:3417)
          PtrDecl: quals=[] (at pp.c:3417)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:3417)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='useCca', quals=[], storage=[] (at pp.c:3417)
          TypeDecl: declname='useCca', quals=[] (at pp.c:3417)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='CC2420TransmitP__Send__send', quals=[] (at pp.c:3417)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__ChipSpiResource__releasing', quals=[], storage=['static'] (at pp.c:3419)
    FuncDecl: quals=None (at pp.c:3419)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__ChipSpiResource__releasing', quals=[] (at pp.c:3419)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__Init__init', quals=[], storage=['static'] (at pp.c:3421)
    FuncDecl: quals=None (at pp.c:3421)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__Init__init', quals=[] (at pp.c:3421)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__SpiResource__granted', quals=[], storage=['static'] (at pp.c:3423)
    FuncDecl: quals=None (at pp.c:3423)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__SpiResource__granted', quals=[] (at pp.c:3423)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__StdControl__start', quals=[], storage=['static'] (at pp.c:3425)
    FuncDecl: quals=None (at pp.c:3425)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__StdControl__start', quals=[] (at pp.c:3425)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__StdControl__stop', quals=[], storage=['static'] (at pp.c:3435)
    FuncDecl: quals=None (at pp.c:3435)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__StdControl__stop', quals=[] (at pp.c:3435)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__TXFIFO__writeDone', quals=[], storage=['static'] (at pp.c:3437)
    FuncDecl: quals=None (at pp.c:3437)
      ParamList:  (at pp.c:3437)
        Decl: name='data', quals=[], storage=[] (at pp.c:3437)
          PtrDecl: quals=[] (at pp.c:3437)
            TypeDecl: declname='data', quals=[] (at pp.c:3437)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:3437)
          TypeDecl: declname='length', quals=[] (at pp.c:3437)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3437)
          TypeDecl: declname='error', quals=[] (at pp.c:3437)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__TXFIFO__writeDone', quals=[] (at pp.c:3437)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__TXFIFO__readDone', quals=[], storage=['static'] (at pp.c:3439)
    FuncDecl: quals=None (at pp.c:3439)
      ParamList:  (at pp.c:3439)
        Decl: name='data', quals=[], storage=[] (at pp.c:3439)
          PtrDecl: quals=[] (at pp.c:3439)
            TypeDecl: declname='data', quals=[] (at pp.c:3439)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:3439)
          TypeDecl: declname='length', quals=[] (at pp.c:3439)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3439)
          TypeDecl: declname='error', quals=[] (at pp.c:3439)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__TXFIFO__readDone', quals=[] (at pp.c:3439)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Config__syncDone', quals=[], storage=['static'] (at pp.c:3441)
    FuncDecl: quals=None (at pp.c:3441)
      ParamList:  (at pp.c:3441)
        Decl: name='error', quals=[], storage=[] (at pp.c:3441)
          TypeDecl: declname='error', quals=[] (at pp.c:3441)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Config__syncDone', quals=[] (at pp.c:3441)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__receiveDone_task__runTask', quals=[], storage=['static'] (at pp.c:3443)
    FuncDecl: quals=None (at pp.c:3443)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__receiveDone_task__runTask', quals=[] (at pp.c:3443)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Receive__sfd_dropped', quals=[], storage=['static'] (at pp.c:3445)
    FuncDecl: quals=None (at pp.c:3445)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Receive__sfd_dropped', quals=[] (at pp.c:3445)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Receive__sfd', quals=[], storage=['static'] (at pp.c:3447)
    FuncDecl: quals=None (at pp.c:3447)
      ParamList:  (at pp.c:3447)
        Decl: name='time', quals=[], storage=[] (at pp.c:3447)
          TypeDecl: declname='time', quals=[] (at pp.c:3447)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Receive__sfd', quals=[] (at pp.c:3447)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__Init__init', quals=[], storage=['static'] (at pp.c:3449)
    FuncDecl: quals=None (at pp.c:3449)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__Init__init', quals=[] (at pp.c:3449)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__SpiResource__granted', quals=[], storage=['static'] (at pp.c:3451)
    FuncDecl: quals=None (at pp.c:3451)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__SpiResource__granted', quals=[] (at pp.c:3451)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__RXFIFO__writeDone', quals=[], storage=['static'] (at pp.c:3453)
    FuncDecl: quals=None (at pp.c:3453)
      ParamList:  (at pp.c:3453)
        Decl: name='data', quals=[], storage=[] (at pp.c:3453)
          PtrDecl: quals=[] (at pp.c:3453)
            TypeDecl: declname='data', quals=[] (at pp.c:3453)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:3453)
          TypeDecl: declname='length', quals=[] (at pp.c:3453)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3453)
          TypeDecl: declname='error', quals=[] (at pp.c:3453)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__RXFIFO__writeDone', quals=[] (at pp.c:3453)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__RXFIFO__readDone', quals=[], storage=['static'] (at pp.c:3455)
    FuncDecl: quals=None (at pp.c:3455)
      ParamList:  (at pp.c:3455)
        Decl: name='data', quals=[], storage=[] (at pp.c:3455)
          PtrDecl: quals=[] (at pp.c:3455)
            TypeDecl: declname='data', quals=[] (at pp.c:3455)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:3455)
          TypeDecl: declname='length', quals=[] (at pp.c:3455)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3455)
          TypeDecl: declname='error', quals=[] (at pp.c:3455)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__RXFIFO__readDone', quals=[] (at pp.c:3455)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__InterruptFIFOP__fired', quals=[], storage=['static'] (at pp.c:3457)
    FuncDecl: quals=None (at pp.c:3457)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__InterruptFIFOP__fired', quals=[] (at pp.c:3457)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__StdControl__start', quals=[], storage=['static'] (at pp.c:3459)
    FuncDecl: quals=None (at pp.c:3459)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__StdControl__start', quals=[] (at pp.c:3459)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__StdControl__stop', quals=[], storage=['static'] (at pp.c:3469)
    FuncDecl: quals=None (at pp.c:3469)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__StdControl__stop', quals=[] (at pp.c:3469)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420PacketP__CC2420Packet__setNetwork', quals=[], storage=['static'] (at pp.c:3471)
    FuncDecl: quals=None (at pp.c:3471)
      ParamList:  (at pp.c:3471)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:3471)
          PtrDecl: quals=[] (at pp.c:3471)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:3471)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='networkId', quals=[], storage=[] (at pp.c:3471)
          TypeDecl: declname='networkId', quals=[] (at pp.c:3471)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420PacketP__CC2420Packet__setNetwork', quals=[] (at pp.c:3471)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420PacketP__CC2420Packet__getNetwork', quals=[], storage=['static'] (at pp.c:3473)
    FuncDecl: quals=None (at pp.c:3473)
      ParamList:  (at pp.c:3473)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:3473)
          PtrDecl: quals=[] (at pp.c:3473)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:3473)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420PacketP__CC2420Packet__getNetwork', quals=[] (at pp.c:3473)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420PacketP__PacketTimeStamp32khz__clear', quals=[], storage=['static'] (at pp.c:3475)
    FuncDecl: quals=None (at pp.c:3475)
      ParamList:  (at pp.c:3477)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3477)
          PtrDecl: quals=[] (at pp.c:3477)
            TypeDecl: declname='msg', quals=[] (at pp.c:3477)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420PacketP__PacketTimeStamp32khz__clear', quals=[] (at pp.c:3475)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420PacketP__PacketTimeStamp32khz__set', quals=[], storage=['static'] (at pp.c:3479)
    FuncDecl: quals=None (at pp.c:3479)
      ParamList:  (at pp.c:3481)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3481)
          PtrDecl: quals=[] (at pp.c:3481)
            TypeDecl: declname='msg', quals=[] (at pp.c:3481)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='value', quals=[], storage=[] (at pp.c:3486)
          TypeDecl: declname='value', quals=[] (at pp.c:3486)
            IdentifierType: names=['CC2420PacketP__PacketTimeStamp32khz__size_type'] (at None)
      TypeDecl: declname='CC2420PacketP__PacketTimeStamp32khz__set', quals=[] (at pp.c:3479)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420PacketP__CC2420PacketBody__getHeader', quals=[], storage=['static'] (at pp.c:3488)
    FuncDecl: quals=None (at pp.c:3488)
      ParamList:  (at pp.c:3488)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3488)
          PtrDecl: quals=[] (at pp.c:3488)
            TypeDecl: declname='msg', quals=[] (at pp.c:3488)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3488)
        TypeDecl: declname='CC2420PacketP__CC2420PacketBody__getHeader', quals=[] (at pp.c:3488)
          IdentifierType: names=['cc2420_header_t'] (at None)
  Decl: name='CC2420PacketP__CC2420PacketBody__getMetadata', quals=[], storage=['static'] (at pp.c:3499)
    FuncDecl: quals=None (at pp.c:3499)
      ParamList:  (at pp.c:3499)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3499)
          PtrDecl: quals=[] (at pp.c:3499)
            TypeDecl: declname='msg', quals=[] (at pp.c:3499)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3499)
        TypeDecl: declname='CC2420PacketP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:3499)
          IdentifierType: names=['cc2420_metadata_t'] (at None)
  Decl: name='CC2420PacketP__PacketTimeSyncOffset__get', quals=[], storage=['static'] (at pp.c:3501)
    FuncDecl: quals=None (at pp.c:3501)
      ParamList:  (at pp.c:3503)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3503)
          PtrDecl: quals=[] (at pp.c:3503)
            TypeDecl: declname='msg', quals=[] (at pp.c:3503)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420PacketP__PacketTimeSyncOffset__get', quals=[] (at pp.c:3501)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420PacketP__PacketTimeSyncOffset__isSet', quals=[], storage=['static'] (at pp.c:3505)
    FuncDecl: quals=None (at pp.c:3505)
      ParamList:  (at pp.c:3507)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3507)
          PtrDecl: quals=[] (at pp.c:3507)
            TypeDecl: declname='msg', quals=[] (at pp.c:3507)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420PacketP__PacketTimeSyncOffset__isSet', quals=[] (at pp.c:3505)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CounterToLocalTimeC__0__Counter__overflow', quals=[], storage=['static'] (at pp.c:3509)
    FuncDecl: quals=None (at pp.c:3509)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CounterToLocalTimeC__0__Counter__overflow', quals=[] (at pp.c:3509)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430Compare__fired', quals=[], storage=['static'] (at pp.c:3511)
    FuncDecl: quals=None (at pp.c:3511)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430Compare__fired', quals=[] (at pp.c:3511)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430Timer__overflow', quals=[], storage=['static'] (at pp.c:3513)
    FuncDecl: quals=None (at pp.c:3513)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430Timer__overflow', quals=[] (at pp.c:3513)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Alarm__startAt', quals=[], storage=['static'] (at pp.c:3515)
    FuncDecl: quals=None (at pp.c:3515)
      ParamList:  (at pp.c:3515)
        Decl: name='t0', quals=[], storage=[] (at pp.c:3515)
          TypeDecl: declname='t0', quals=[] (at pp.c:3515)
            IdentifierType: names=['Msp430AlarmC__1__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3515)
          TypeDecl: declname='dt', quals=[] (at pp.c:3515)
            IdentifierType: names=['Msp430AlarmC__1__Alarm__size_type'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Alarm__startAt', quals=[] (at pp.c:3515)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Alarm__stop', quals=[], storage=['static'] (at pp.c:3517)
    FuncDecl: quals=None (at pp.c:3517)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Alarm__stop', quals=[] (at pp.c:3517)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Init__init', quals=[], storage=['static'] (at pp.c:3519)
    FuncDecl: quals=None (at pp.c:3519)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Init__init', quals=[] (at pp.c:3519)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='TransformCounterC__1__CounterFrom__overflow', quals=[], storage=['static'] (at pp.c:3521)
    FuncDecl: quals=None (at pp.c:3521)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__1__CounterFrom__overflow', quals=[] (at pp.c:3521)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformCounterC__1__Counter__get', quals=[], storage=['static'] (at pp.c:3523)
    FuncDecl: quals=None (at pp.c:3523)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__1__Counter__get', quals=[] (at pp.c:3523)
        IdentifierType: names=['TransformCounterC__1__Counter__size_type'] (at None)
  Decl: name='TransformAlarmC__1__Alarm__getNow', quals=[], storage=['static'] (at pp.c:3525)
    FuncDecl: quals=None (at pp.c:3525)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__getNow', quals=[] (at pp.c:3525)
        IdentifierType: names=['TransformAlarmC__1__Alarm__size_type'] (at None)
  Decl: name='TransformAlarmC__1__Alarm__startAt', quals=[], storage=['static'] (at pp.c:3527)
    FuncDecl: quals=None (at pp.c:3527)
      ParamList:  (at pp.c:3527)
        Decl: name='t0', quals=[], storage=[] (at pp.c:3527)
          TypeDecl: declname='t0', quals=[] (at pp.c:3527)
            IdentifierType: names=['TransformAlarmC__1__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3527)
          TypeDecl: declname='dt', quals=[] (at pp.c:3527)
            IdentifierType: names=['TransformAlarmC__1__Alarm__size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__startAt', quals=[] (at pp.c:3527)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__Alarm__getAlarm', quals=[], storage=['static'] (at pp.c:3529)
    FuncDecl: quals=None (at pp.c:3529)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__getAlarm', quals=[] (at pp.c:3529)
        IdentifierType: names=['TransformAlarmC__1__Alarm__size_type'] (at None)
  Decl: name='TransformAlarmC__1__Alarm__stop', quals=[], storage=['static'] (at pp.c:3531)
    FuncDecl: quals=None (at pp.c:3531)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__stop', quals=[] (at pp.c:3531)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__AlarmFrom__fired', quals=[], storage=['static'] (at pp.c:3536)
    FuncDecl: quals=None (at pp.c:3536)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__AlarmFrom__fired', quals=[] (at pp.c:3536)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__Counter__overflow', quals=[], storage=['static'] (at pp.c:3538)
    FuncDecl: quals=None (at pp.c:3538)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Counter__overflow', quals=[] (at pp.c:3538)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__fired__runTask', quals=[], storage=['static'] (at pp.c:3540)
    FuncDecl: quals=None (at pp.c:3540)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__fired__runTask', quals=[] (at pp.c:3540)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__fired', quals=[], storage=['static'] (at pp.c:3542)
    FuncDecl: quals=None (at pp.c:3542)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__fired', quals=[] (at pp.c:3542)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__getNow', quals=[], storage=['static'] (at pp.c:3544)
    FuncDecl: quals=None (at pp.c:3544)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__getNow', quals=[] (at pp.c:3544)
        IdentifierType: names=['uint32_t'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__startOneShotAt', quals=[], storage=['static'] (at pp.c:3546)
    FuncDecl: quals=None (at pp.c:3546)
      ParamList:  (at pp.c:3546)
        Decl: name='t0', quals=[], storage=[] (at pp.c:3546)
          TypeDecl: declname='t0', quals=[] (at pp.c:3546)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3546)
          TypeDecl: declname='dt', quals=[] (at pp.c:3546)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__startOneShotAt', quals=[] (at pp.c:3546)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__stop', quals=[], storage=['static'] (at pp.c:3548)
    FuncDecl: quals=None (at pp.c:3548)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__stop', quals=[] (at pp.c:3548)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[], storage=['static'] (at pp.c:3550)
    FuncDecl: quals=None (at pp.c:3550)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[] (at pp.c:3550)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__TimerFrom__fired', quals=[], storage=['static'] (at pp.c:3552)
    FuncDecl: quals=None (at pp.c:3552)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__fired', quals=[] (at pp.c:3552)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__default__fired', quals=[], storage=['static'] (at pp.c:3554)
    FuncDecl: quals=None (at pp.c:3554)
      ParamList:  (at pp.c:3556)
        Decl: name='arg_0x1023622f8', quals=[], storage=[] (at pp.c:3556)
          TypeDecl: declname='arg_0x1023622f8', quals=[] (at pp.c:3556)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__default__fired', quals=[] (at pp.c:3554)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__isRunning', quals=[], storage=['static'] (at pp.c:3558)
    FuncDecl: quals=None (at pp.c:3558)
      ParamList:  (at pp.c:3560)
        Decl: name='arg_0x1023622f8', quals=[], storage=[] (at pp.c:3560)
          TypeDecl: declname='arg_0x1023622f8', quals=[] (at pp.c:3560)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__isRunning', quals=[] (at pp.c:3558)
        IdentifierType: names=['bool'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__startPeriodic', quals=[], storage=['static'] (at pp.c:3562)
    FuncDecl: quals=None (at pp.c:3562)
      ParamList:  (at pp.c:3564)
        Decl: name='arg_0x1023622f8', quals=[], storage=[] (at pp.c:3564)
          TypeDecl: declname='arg_0x1023622f8', quals=[] (at pp.c:3564)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3566)
          TypeDecl: declname='dt', quals=[] (at pp.c:3566)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__startPeriodic', quals=[] (at pp.c:3562)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__startOneShot', quals=[], storage=['static'] (at pp.c:3575)
    FuncDecl: quals=None (at pp.c:3575)
      ParamList:  (at pp.c:3577)
        Decl: name='arg_0x1023622f8', quals=[], storage=[] (at pp.c:3577)
          TypeDecl: declname='arg_0x1023622f8', quals=[] (at pp.c:3577)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:3579)
          TypeDecl: declname='dt', quals=[] (at pp.c:3579)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__startOneShot', quals=[] (at pp.c:3575)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__stop', quals=[], storage=['static'] (at pp.c:3584)
    FuncDecl: quals=None (at pp.c:3584)
      ParamList:  (at pp.c:3586)
        Decl: name='arg_0x1023622f8', quals=[], storage=[] (at pp.c:3586)
          TypeDecl: declname='arg_0x1023622f8', quals=[] (at pp.c:3586)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__stop', quals=[] (at pp.c:3584)
        IdentifierType: names=['void'] (at None)
  Decl: name='CounterToLocalTimeC__1__Counter__overflow', quals=[], storage=['static'] (at pp.c:3588)
    FuncDecl: quals=None (at pp.c:3588)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CounterToLocalTimeC__1__Counter__overflow', quals=[] (at pp.c:3588)
        IdentifierType: names=['void'] (at None)
  Decl: name='RandomMlcgC__Random__rand16', quals=[], storage=['static'] (at pp.c:3590)
    FuncDecl: quals=None (at pp.c:3590)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RandomMlcgC__Random__rand16', quals=[] (at pp.c:3590)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='RandomMlcgC__Random__rand32', quals=[], storage=['static'] (at pp.c:3592)
    FuncDecl: quals=None (at pp.c:3592)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RandomMlcgC__Random__rand32', quals=[] (at pp.c:3592)
        IdentifierType: names=['uint32_t'] (at None)
  Decl: name='RandomMlcgC__Init__init', quals=[], storage=['static'] (at pp.c:3594)
    FuncDecl: quals=None (at pp.c:3594)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RandomMlcgC__Init__init', quals=[] (at pp.c:3594)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='UniqueSendP__SubSend__sendDone', quals=[], storage=['static'] (at pp.c:3596)
    FuncDecl: quals=None (at pp.c:3596)
      ParamList:  (at pp.c:3598)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3598)
          PtrDecl: quals=[] (at pp.c:3598)
            TypeDecl: declname='msg', quals=[] (at pp.c:3598)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3602)
          TypeDecl: declname='error', quals=[] (at pp.c:3602)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='UniqueSendP__SubSend__sendDone', quals=[] (at pp.c:3596)
        IdentifierType: names=['void'] (at None)
  Decl: name='UniqueSendP__Send__send', quals=[], storage=['static'] (at pp.c:3604)
    FuncDecl: quals=None (at pp.c:3604)
      ParamList:  (at pp.c:3606)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3606)
          PtrDecl: quals=[] (at pp.c:3606)
            TypeDecl: declname='msg', quals=[] (at pp.c:3606)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3614)
          TypeDecl: declname='len', quals=[] (at pp.c:3614)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='UniqueSendP__Send__send', quals=[] (at pp.c:3604)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='UniqueSendP__Send__maxPayloadLength', quals=[], storage=['static'] (at pp.c:3616)
    FuncDecl: quals=None (at pp.c:3616)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='UniqueSendP__Send__maxPayloadLength', quals=[] (at pp.c:3616)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='UniqueSendP__Init__init', quals=[], storage=['static'] (at pp.c:3618)
    FuncDecl: quals=None (at pp.c:3618)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='UniqueSendP__Init__init', quals=[] (at pp.c:3618)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='UniqueReceiveP__SubReceive__receive', quals=[], storage=['static'] (at pp.c:3626)
    FuncDecl: quals=None (at pp.c:3626)
      ParamList:  (at pp.c:3628)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3628)
          PtrDecl: quals=[] (at pp.c:3628)
            TypeDecl: declname='msg', quals=[] (at pp.c:3628)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:3629)
          PtrDecl: quals=[] (at pp.c:3629)
            TypeDecl: declname='payload', quals=[] (at pp.c:3629)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3635)
          TypeDecl: declname='len', quals=[] (at pp.c:3635)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3622)
        TypeDecl: declname='UniqueReceiveP__SubReceive__receive', quals=[] (at pp.c:3626)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='UniqueReceiveP__Init__init', quals=[], storage=['static'] (at pp.c:3637)
    FuncDecl: quals=None (at pp.c:3637)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='UniqueReceiveP__Init__init', quals=[] (at pp.c:3637)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='UniqueReceiveP__DuplicateReceive__default__receive', quals=[], storage=['static'] (at pp.c:3645)
    FuncDecl: quals=None (at pp.c:3645)
      ParamList:  (at pp.c:3647)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3647)
          PtrDecl: quals=[] (at pp.c:3647)
            TypeDecl: declname='msg', quals=[] (at pp.c:3647)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:3648)
          PtrDecl: quals=[] (at pp.c:3648)
            TypeDecl: declname='payload', quals=[] (at pp.c:3648)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3654)
          TypeDecl: declname='len', quals=[] (at pp.c:3654)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3641)
        TypeDecl: declname='UniqueReceiveP__DuplicateReceive__default__receive', quals=[] (at pp.c:3645)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__SubSend__sendDone', quals=[], storage=['static'] (at pp.c:3656)
    FuncDecl: quals=None (at pp.c:3656)
      ParamList:  (at pp.c:3658)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3658)
          PtrDecl: quals=[] (at pp.c:3658)
            TypeDecl: declname='msg', quals=[] (at pp.c:3658)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3662)
          TypeDecl: declname='error', quals=[] (at pp.c:3662)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__SubSend__sendDone', quals=[] (at pp.c:3656)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__SubReceive__receive', quals=[], storage=['static'] (at pp.c:3670)
    FuncDecl: quals=None (at pp.c:3670)
      ParamList:  (at pp.c:3672)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3672)
          PtrDecl: quals=[] (at pp.c:3672)
            TypeDecl: declname='msg', quals=[] (at pp.c:3672)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:3673)
          PtrDecl: quals=[] (at pp.c:3673)
            TypeDecl: declname='payload', quals=[] (at pp.c:3673)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3679)
          TypeDecl: declname='len', quals=[] (at pp.c:3679)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3666)
        TypeDecl: declname='CC2420TinyosNetworkP__SubReceive__receive', quals=[] (at pp.c:3670)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__grantTask__runTask', quals=[], storage=['static'] (at pp.c:3681)
    FuncDecl: quals=None (at pp.c:3681)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__grantTask__runTask', quals=[] (at pp.c:3681)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__ActiveSend__send', quals=[], storage=['static'] (at pp.c:3683)
    FuncDecl: quals=None (at pp.c:3683)
      ParamList:  (at pp.c:3685)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3685)
          PtrDecl: quals=[] (at pp.c:3685)
            TypeDecl: declname='msg', quals=[] (at pp.c:3685)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3693)
          TypeDecl: declname='len', quals=[] (at pp.c:3693)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__ActiveSend__send', quals=[] (at pp.c:3683)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__ActiveSend__getPayload', quals=[], storage=['static'] (at pp.c:3699)
    FuncDecl: quals=None (at pp.c:3699)
      ParamList:  (at pp.c:3701)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3701)
          PtrDecl: quals=[] (at pp.c:3701)
            TypeDecl: declname='msg', quals=[] (at pp.c:3701)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3704)
          TypeDecl: declname='len', quals=[] (at pp.c:3704)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3697)
        TypeDecl: declname='CC2420TinyosNetworkP__ActiveSend__getPayload', quals=[] (at pp.c:3699)
          IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__ActiveSend__maxPayloadLength', quals=[], storage=['static'] (at pp.c:3706)
    FuncDecl: quals=None (at pp.c:3706)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__ActiveSend__maxPayloadLength', quals=[] (at pp.c:3706)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__BareReceive__default__receive', quals=[], storage=['static'] (at pp.c:3714)
    FuncDecl: quals=None (at pp.c:3714)
      ParamList:  (at pp.c:3716)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3716)
          PtrDecl: quals=[] (at pp.c:3716)
            TypeDecl: declname='msg', quals=[] (at pp.c:3716)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:3717)
          PtrDecl: quals=[] (at pp.c:3717)
            TypeDecl: declname='payload', quals=[] (at pp.c:3717)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3723)
          TypeDecl: declname='len', quals=[] (at pp.c:3723)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3710)
        TypeDecl: declname='CC2420TinyosNetworkP__BareReceive__default__receive', quals=[] (at pp.c:3714)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__Resource__release', quals=[], storage=['static'] (at pp.c:3725)
    FuncDecl: quals=None (at pp.c:3725)
      ParamList:  (at pp.c:3727)
        Decl: name='arg_0x102460060', quals=[], storage=[] (at pp.c:3727)
          TypeDecl: declname='arg_0x102460060', quals=[] (at pp.c:3727)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Resource__release', quals=[] (at pp.c:3725)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__Resource__immediateRequest', quals=[], storage=['static'] (at pp.c:3729)
    FuncDecl: quals=None (at pp.c:3729)
      ParamList:  (at pp.c:3731)
        Decl: name='arg_0x102460060', quals=[], storage=[] (at pp.c:3731)
          TypeDecl: declname='arg_0x102460060', quals=[] (at pp.c:3731)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Resource__immediateRequest', quals=[] (at pp.c:3729)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__Resource__request', quals=[], storage=['static'] (at pp.c:3733)
    FuncDecl: quals=None (at pp.c:3733)
      ParamList:  (at pp.c:3735)
        Decl: name='arg_0x102460060', quals=[], storage=[] (at pp.c:3735)
          TypeDecl: declname='arg_0x102460060', quals=[] (at pp.c:3735)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Resource__request', quals=[] (at pp.c:3733)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__Resource__default__granted', quals=[], storage=['static'] (at pp.c:3737)
    FuncDecl: quals=None (at pp.c:3737)
      ParamList:  (at pp.c:3739)
        Decl: name='arg_0x102460060', quals=[], storage=[] (at pp.c:3739)
          TypeDecl: declname='arg_0x102460060', quals=[] (at pp.c:3739)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Resource__default__granted', quals=[] (at pp.c:3737)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__BareSend__getPayload', quals=[], storage=['static'] (at pp.c:3745)
    FuncDecl: quals=None (at pp.c:3745)
      ParamList:  (at pp.c:3747)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3747)
          PtrDecl: quals=[] (at pp.c:3747)
            TypeDecl: declname='msg', quals=[] (at pp.c:3747)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3750)
          TypeDecl: declname='len', quals=[] (at pp.c:3750)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3743)
        TypeDecl: declname='CC2420TinyosNetworkP__BareSend__getPayload', quals=[] (at pp.c:3745)
          IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__BareSend__default__sendDone', quals=[], storage=['static'] (at pp.c:3752)
    FuncDecl: quals=None (at pp.c:3752)
      ParamList:  (at pp.c:3754)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3754)
          PtrDecl: quals=[] (at pp.c:3754)
            TypeDecl: declname='msg', quals=[] (at pp.c:3754)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3758)
          TypeDecl: declname='error', quals=[] (at pp.c:3758)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__BareSend__default__sendDone', quals=[] (at pp.c:3752)
        IdentifierType: names=['void'] (at None)
  Decl: name='FcfsResourceQueueC__0__Init__init', quals=[], storage=['static'] (at pp.c:3760)
    FuncDecl: quals=None (at pp.c:3760)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__0__Init__init', quals=[] (at pp.c:3760)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='FcfsResourceQueueC__0__FcfsQueue__enqueue', quals=[], storage=['static'] (at pp.c:3762)
    FuncDecl: quals=None (at pp.c:3762)
      ParamList:  (at pp.c:3762)
        Decl: name='id', quals=[], storage=[] (at pp.c:3762)
          TypeDecl: declname='id', quals=[] (at pp.c:3762)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__enqueue', quals=[] (at pp.c:3762)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='FcfsResourceQueueC__0__FcfsQueue__isEmpty', quals=[], storage=['static'] (at pp.c:3764)
    FuncDecl: quals=None (at pp.c:3764)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__isEmpty', quals=[] (at pp.c:3764)
        IdentifierType: names=['bool'] (at None)
  Decl: name='FcfsResourceQueueC__0__FcfsQueue__isEnqueued', quals=[], storage=['static'] (at pp.c:3773)
    FuncDecl: quals=None (at pp.c:3773)
      ParamList:  (at pp.c:3773)
        Decl: name='id', quals=[], storage=[] (at pp.c:3773)
          TypeDecl: declname='id', quals=[] (at pp.c:3773)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__isEnqueued', quals=[] (at pp.c:3773)
        IdentifierType: names=['bool'] (at None)
  Decl: name='FcfsResourceQueueC__0__FcfsQueue__dequeue', quals=[], storage=['static'] (at pp.c:3781)
    FuncDecl: quals=None (at pp.c:3781)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__dequeue', quals=[] (at pp.c:3781)
        IdentifierType: names=['resource_client_id_t'] (at None)
  Decl: name='CC2420ActiveMessageP__SubReceive__receive', quals=[], storage=['static'] (at pp.c:3789)
    FuncDecl: quals=None (at pp.c:3789)
      ParamList:  (at pp.c:3791)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3791)
          PtrDecl: quals=[] (at pp.c:3791)
            TypeDecl: declname='msg', quals=[] (at pp.c:3791)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:3792)
          PtrDecl: quals=[] (at pp.c:3792)
            TypeDecl: declname='payload', quals=[] (at pp.c:3792)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3798)
          TypeDecl: declname='len', quals=[] (at pp.c:3798)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3785)
        TypeDecl: declname='CC2420ActiveMessageP__SubReceive__receive', quals=[] (at pp.c:3789)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420ActiveMessageP__SubSend__sendDone', quals=[], storage=['static'] (at pp.c:3800)
    FuncDecl: quals=None (at pp.c:3800)
      ParamList:  (at pp.c:3802)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3802)
          PtrDecl: quals=[] (at pp.c:3802)
            TypeDecl: declname='msg', quals=[] (at pp.c:3802)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:3806)
          TypeDecl: declname='error', quals=[] (at pp.c:3806)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SubSend__sendDone', quals=[] (at pp.c:3800)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__CC2420Config__syncDone', quals=[], storage=['static'] (at pp.c:3808)
    FuncDecl: quals=None (at pp.c:3808)
      ParamList:  (at pp.c:3808)
        Decl: name='error', quals=[], storage=[] (at pp.c:3808)
          TypeDecl: declname='error', quals=[] (at pp.c:3808)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__CC2420Config__syncDone', quals=[] (at pp.c:3808)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioBackoff__default__requestCca', quals=[], storage=['static'] (at pp.c:3810)
    FuncDecl: quals=None (at pp.c:3810)
      ParamList:  (at pp.c:3812)
        Decl: name='arg_0x1024e7d60', quals=[], storage=[] (at pp.c:3812)
          TypeDecl: declname='arg_0x1024e7d60', quals=[] (at pp.c:3812)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3814)
          PtrDecl: quals=[] (at pp.c:3814)
            TypeDecl: declname='msg', quals=[] (at pp.c:3814)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__default__requestCca', quals=[] (at pp.c:3810)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioBackoff__default__requestInitialBackoff', quals=[], storage=['static'] (at pp.c:3816)
    FuncDecl: quals=None (at pp.c:3816)
      ParamList:  (at pp.c:3818)
        Decl: name='arg_0x1024e7d60', quals=[], storage=[] (at pp.c:3818)
          TypeDecl: declname='arg_0x1024e7d60', quals=[] (at pp.c:3818)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3820)
          PtrDecl: quals=[] (at pp.c:3820)
            TypeDecl: declname='msg', quals=[] (at pp.c:3820)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__default__requestInitialBackoff', quals=[] (at pp.c:3816)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioBackoff__default__requestCongestionBackoff', quals=[], storage=['static'] (at pp.c:3827)
    FuncDecl: quals=None (at pp.c:3827)
      ParamList:  (at pp.c:3829)
        Decl: name='arg_0x1024e7d60', quals=[], storage=[] (at pp.c:3829)
          TypeDecl: declname='arg_0x1024e7d60', quals=[] (at pp.c:3829)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3831)
          PtrDecl: quals=[] (at pp.c:3831)
            TypeDecl: declname='msg', quals=[] (at pp.c:3831)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__default__requestCongestionBackoff', quals=[] (at pp.c:3827)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__SendNotifier__default__aboutToSend', quals=[], storage=['static'] (at pp.c:3833)
    FuncDecl: quals=None (at pp.c:3833)
      ParamList:  (at pp.c:3835)
        Decl: name='arg_0x1024e7258', quals=[], storage=[] (at pp.c:3835)
          TypeDecl: declname='arg_0x1024e7258', quals=[] (at pp.c:3835)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='dest', quals=[], storage=[] (at pp.c:3837)
          TypeDecl: declname='dest', quals=[] (at pp.c:3837)
            IdentifierType: names=['am_addr_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3839)
          PtrDecl: quals=[] (at pp.c:3839)
            TypeDecl: declname='msg', quals=[] (at pp.c:3839)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SendNotifier__default__aboutToSend', quals=[] (at pp.c:3833)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__SubBackoff__requestCca', quals=[], storage=['static'] (at pp.c:3841)
    FuncDecl: quals=None (at pp.c:3841)
      ParamList:  (at pp.c:3841)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3841)
          PtrDecl: quals=[] (at pp.c:3841)
            TypeDecl: declname='msg', quals=[] (at pp.c:3841)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SubBackoff__requestCca', quals=[] (at pp.c:3841)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__SubBackoff__requestInitialBackoff', quals=[], storage=['static'] (at pp.c:3843)
    FuncDecl: quals=None (at pp.c:3843)
      ParamList:  (at pp.c:3843)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3843)
          PtrDecl: quals=[] (at pp.c:3843)
            TypeDecl: declname='msg', quals=[] (at pp.c:3843)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SubBackoff__requestInitialBackoff', quals=[] (at pp.c:3843)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__SubBackoff__requestCongestionBackoff', quals=[], storage=['static'] (at pp.c:3850)
    FuncDecl: quals=None (at pp.c:3850)
      ParamList:  (at pp.c:3850)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3850)
          PtrDecl: quals=[] (at pp.c:3850)
            TypeDecl: declname='msg', quals=[] (at pp.c:3850)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SubBackoff__requestCongestionBackoff', quals=[] (at pp.c:3850)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__Packet__payloadLength', quals=[], storage=['static'] (at pp.c:3852)
    FuncDecl: quals=None (at pp.c:3852)
      ParamList:  (at pp.c:3854)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3854)
          PtrDecl: quals=[] (at pp.c:3854)
            TypeDecl: declname='msg', quals=[] (at pp.c:3854)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__Packet__payloadLength', quals=[] (at pp.c:3852)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ActiveMessageP__Packet__getPayload', quals=[], storage=['static'] (at pp.c:3861)
    FuncDecl: quals=None (at pp.c:3861)
      ParamList:  (at pp.c:3863)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3863)
          PtrDecl: quals=[] (at pp.c:3863)
            TypeDecl: declname='msg', quals=[] (at pp.c:3863)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3868)
          TypeDecl: declname='len', quals=[] (at pp.c:3868)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3858)
        TypeDecl: declname='CC2420ActiveMessageP__Packet__getPayload', quals=[] (at pp.c:3861)
          IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__Packet__maxPayloadLength', quals=[], storage=['static'] (at pp.c:3870)
    FuncDecl: quals=None (at pp.c:3870)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__Packet__maxPayloadLength', quals=[] (at pp.c:3870)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ActiveMessageP__Packet__setPayloadLength', quals=[], storage=['static'] (at pp.c:3872)
    FuncDecl: quals=None (at pp.c:3872)
      ParamList:  (at pp.c:3874)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3874)
          PtrDecl: quals=[] (at pp.c:3874)
            TypeDecl: declname='msg', quals=[] (at pp.c:3874)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3878)
          TypeDecl: declname='len', quals=[] (at pp.c:3878)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__Packet__setPayloadLength', quals=[] (at pp.c:3872)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__AMSend__send', quals=[], storage=['static'] (at pp.c:3880)
    FuncDecl: quals=None (at pp.c:3880)
      ParamList:  (at pp.c:3882)
        Decl: name='arg_0x1024ed7d8', quals=[], storage=[] (at pp.c:3882)
          TypeDecl: declname='arg_0x1024ed7d8', quals=[] (at pp.c:3882)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='addr', quals=[], storage=[] (at pp.c:3884)
          TypeDecl: declname='addr', quals=[] (at pp.c:3884)
            IdentifierType: names=['am_addr_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3886)
          PtrDecl: quals=[] (at pp.c:3886)
            TypeDecl: declname='msg', quals=[] (at pp.c:3886)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3895)
          TypeDecl: declname='len', quals=[] (at pp.c:3895)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMSend__send', quals=[] (at pp.c:3880)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMSend__getPayload', quals=[], storage=['static'] (at pp.c:3901)
    FuncDecl: quals=None (at pp.c:3901)
      ParamList:  (at pp.c:3903)
        Decl: name='arg_0x1024ed7d8', quals=[], storage=[] (at pp.c:3903)
          TypeDecl: declname='arg_0x1024ed7d8', quals=[] (at pp.c:3903)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3905)
          PtrDecl: quals=[] (at pp.c:3905)
            TypeDecl: declname='msg', quals=[] (at pp.c:3905)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3908)
          TypeDecl: declname='len', quals=[] (at pp.c:3908)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3899)
        TypeDecl: declname='CC2420ActiveMessageP__AMSend__getPayload', quals=[] (at pp.c:3901)
          IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__AMSend__maxPayloadLength', quals=[], storage=['static'] (at pp.c:3910)
    FuncDecl: quals=None (at pp.c:3910)
      ParamList:  (at pp.c:3912)
        Decl: name='arg_0x1024ed7d8', quals=[], storage=[] (at pp.c:3912)
          TypeDecl: declname='arg_0x1024ed7d8', quals=[] (at pp.c:3912)
            IdentifierType: names=['am_id_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMSend__maxPayloadLength', quals=[] (at pp.c:3910)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ActiveMessageP__Snoop__default__receive', quals=[], storage=['static'] (at pp.c:3920)
    FuncDecl: quals=None (at pp.c:3920)
      ParamList:  (at pp.c:3922)
        Decl: name='arg_0x1024ea480', quals=[], storage=[] (at pp.c:3922)
          TypeDecl: declname='arg_0x1024ea480', quals=[] (at pp.c:3922)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3924)
          PtrDecl: quals=[] (at pp.c:3924)
            TypeDecl: declname='msg', quals=[] (at pp.c:3924)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:3925)
          PtrDecl: quals=[] (at pp.c:3925)
            TypeDecl: declname='payload', quals=[] (at pp.c:3925)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3931)
          TypeDecl: declname='len', quals=[] (at pp.c:3931)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3916)
        TypeDecl: declname='CC2420ActiveMessageP__Snoop__default__receive', quals=[] (at pp.c:3920)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420ActiveMessageP__Receive__default__receive', quals=[], storage=['static'] (at pp.c:3939)
    FuncDecl: quals=None (at pp.c:3939)
      ParamList:  (at pp.c:3941)
        Decl: name='arg_0x1024ec908', quals=[], storage=[] (at pp.c:3941)
          TypeDecl: declname='arg_0x1024ec908', quals=[] (at pp.c:3941)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:3943)
          PtrDecl: quals=[] (at pp.c:3943)
            TypeDecl: declname='msg', quals=[] (at pp.c:3943)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:3944)
          PtrDecl: quals=[] (at pp.c:3944)
            TypeDecl: declname='payload', quals=[] (at pp.c:3944)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:3950)
          TypeDecl: declname='len', quals=[] (at pp.c:3950)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:3935)
        TypeDecl: declname='CC2420ActiveMessageP__Receive__default__receive', quals=[] (at pp.c:3939)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__address', quals=[], storage=['static'] (at pp.c:3952)
    FuncDecl: quals=None (at pp.c:3952)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__address', quals=[] (at pp.c:3952)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__destination', quals=[], storage=['static'] (at pp.c:3962)
    FuncDecl: quals=None (at pp.c:3962)
      ParamList:  (at pp.c:3964)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:3964)
          PtrDecl: quals=[] (at pp.c:3964)
            TypeDecl: declname='amsg', quals=[] (at pp.c:3964)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__destination', quals=[] (at pp.c:3962)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__setDestination', quals=[], storage=['static'] (at pp.c:3966)
    FuncDecl: quals=None (at pp.c:3966)
      ParamList:  (at pp.c:3968)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:3968)
          PtrDecl: quals=[] (at pp.c:3968)
            TypeDecl: declname='amsg', quals=[] (at pp.c:3968)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='addr', quals=[], storage=[] (at pp.c:3972)
          TypeDecl: declname='addr', quals=[] (at pp.c:3972)
            IdentifierType: names=['am_addr_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__setDestination', quals=[] (at pp.c:3966)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__type', quals=[], storage=['static'] (at pp.c:3974)
    FuncDecl: quals=None (at pp.c:3974)
      ParamList:  (at pp.c:3976)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:3976)
          PtrDecl: quals=[] (at pp.c:3976)
            TypeDecl: declname='amsg', quals=[] (at pp.c:3976)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__type', quals=[] (at pp.c:3974)
        IdentifierType: names=['am_id_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__setType', quals=[], storage=['static'] (at pp.c:3978)
    FuncDecl: quals=None (at pp.c:3978)
      ParamList:  (at pp.c:3980)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:3980)
          PtrDecl: quals=[] (at pp.c:3980)
            TypeDecl: declname='amsg', quals=[] (at pp.c:3980)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='t', quals=[], storage=[] (at pp.c:3984)
          TypeDecl: declname='t', quals=[] (at pp.c:3984)
            IdentifierType: names=['am_id_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__setType', quals=[] (at pp.c:3978)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__isForMe', quals=[], storage=['static'] (at pp.c:3986)
    FuncDecl: quals=None (at pp.c:3986)
      ParamList:  (at pp.c:3988)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:3988)
          PtrDecl: quals=[] (at pp.c:3988)
            TypeDecl: declname='amsg', quals=[] (at pp.c:3988)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__isForMe', quals=[] (at pp.c:3986)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioResource__granted', quals=[], storage=['static'] (at pp.c:3990)
    FuncDecl: quals=None (at pp.c:3990)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioResource__granted', quals=[] (at pp.c:3990)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__SubResourceReadNow__granted', quals=[], storage=['static'] (at pp.c:3992)
    FuncDecl: quals=None (at pp.c:3992)
      ParamList:  (at pp.c:3994)
        Decl: name='arg_0x1025f5d68', quals=[], storage=[] (at pp.c:3994)
          TypeDecl: declname='arg_0x1025f5d68', quals=[] (at pp.c:3994)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__SubResourceReadNow__granted', quals=[] (at pp.c:3992)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__Read__read', quals=[], storage=['static'] (at pp.c:3996)
    FuncDecl: quals=None (at pp.c:3996)
      ParamList:  (at pp.c:3998)
        Decl: name='arg_0x102600db0', quals=[], storage=[] (at pp.c:3998)
          TypeDecl: declname='arg_0x102600db0', quals=[] (at pp.c:3998)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__Read__read', quals=[] (at pp.c:3996)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__Read__default__readDone', quals=[], storage=['static'] (at pp.c:4000)
    FuncDecl: quals=None (at pp.c:4000)
      ParamList:  (at pp.c:4002)
        Decl: name='arg_0x102600db0', quals=[], storage=[] (at pp.c:4002)
          TypeDecl: declname='arg_0x102600db0', quals=[] (at pp.c:4002)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:4004)
          TypeDecl: declname='result', quals=[] (at pp.c:4004)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='val', quals=[], storage=[] (at pp.c:4004)
          TypeDecl: declname='val', quals=[] (at pp.c:4004)
            IdentifierType: names=['AdcP__Read__val_t'] (at None)
      TypeDecl: declname='AdcP__Read__default__readDone', quals=[] (at pp.c:4000)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__ReadNow__default__readDone', quals=[], storage=['static'] (at pp.c:4006)
    FuncDecl: quals=None (at pp.c:4006)
      ParamList:  (at pp.c:4008)
        Decl: name='arg_0x1025fab18', quals=[], storage=[] (at pp.c:4008)
          TypeDecl: declname='arg_0x1025fab18', quals=[] (at pp.c:4008)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:4010)
          TypeDecl: declname='result', quals=[] (at pp.c:4010)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='val', quals=[], storage=[] (at pp.c:4010)
          TypeDecl: declname='val', quals=[] (at pp.c:4010)
            IdentifierType: names=['AdcP__ReadNow__val_t'] (at None)
      TypeDecl: declname='AdcP__ReadNow__default__readDone', quals=[] (at pp.c:4006)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__ResourceReadNow__default__granted', quals=[], storage=['static'] (at pp.c:4012)
    FuncDecl: quals=None (at pp.c:4012)
      ParamList:  (at pp.c:4014)
        Decl: name='arg_0x1025f7748', quals=[], storage=[] (at pp.c:4014)
          TypeDecl: declname='arg_0x1025f7748', quals=[] (at pp.c:4014)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceReadNow__default__granted', quals=[] (at pp.c:4012)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__Config__default__getConfiguration', quals=[], storage=['static'] (at pp.c:4016)
    FuncDecl: quals=None (at pp.c:4016)
      ParamList:  (at pp.c:4018)
        Decl: name='arg_0x1025f2350', quals=[], storage=[] (at pp.c:4018)
          TypeDecl: declname='arg_0x1025f2350', quals=[] (at pp.c:4018)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__Config__default__getConfiguration', quals=[] (at pp.c:4016)
        IdentifierType: names=['AdcP__Config__adc_config_t'] (at None)
  Decl: name='AdcP__SingleChannel__default__getData', quals=[], storage=['static'] (at pp.c:4020)
    FuncDecl: quals=None (at pp.c:4020)
      ParamList:  (at pp.c:4022)
        Decl: name='arg_0x1025e0910', quals=[], storage=[] (at pp.c:4022)
          TypeDecl: declname='arg_0x1025e0910', quals=[] (at pp.c:4022)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__SingleChannel__default__getData', quals=[] (at pp.c:4020)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__SingleChannel__default__configureSingle', quals=[], storage=['static'] (at pp.c:4024)
    FuncDecl: quals=None (at pp.c:4024)
      ParamList:  (at pp.c:4026)
        Decl: name='arg_0x1025e0910', quals=[], storage=[] (at pp.c:4026)
          TypeDecl: declname='arg_0x1025e0910', quals=[] (at pp.c:4026)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:4028)
          PtrDecl: quals=[] (at pp.c:4028)
            TypeDecl: declname='config', quals=['const'] (at pp.c:4028)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
      TypeDecl: declname='AdcP__SingleChannel__default__configureSingle', quals=[] (at pp.c:4024)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__SingleChannel__multipleDataReady', quals=[], storage=['static'] (at pp.c:4030)
    FuncDecl: quals=None (at pp.c:4030)
      ParamList:  (at pp.c:4032)
        Decl: name='arg_0x1025e0910', quals=[], storage=[] (at pp.c:4032)
          TypeDecl: declname='arg_0x1025e0910', quals=[] (at pp.c:4032)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buffer', quals=[], storage=[] (at pp.c:4034)
          PtrDecl: quals=[] (at pp.c:4034)
            TypeDecl: declname='buffer', quals=[] (at pp.c:4034)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:4034)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:4034)
            IdentifierType: names=['uint16_t'] (at None)
      PtrDecl: quals=[] (at pp.c:4030)
        TypeDecl: declname='AdcP__SingleChannel__multipleDataReady', quals=[] (at pp.c:4030)
          IdentifierType: names=['uint16_t'] (at None)
  Decl: name='AdcP__SingleChannel__singleDataReady', quals=[], storage=['static'] (at pp.c:4036)
    FuncDecl: quals=None (at pp.c:4036)
      ParamList:  (at pp.c:4038)
        Decl: name='arg_0x1025e0910', quals=[], storage=[] (at pp.c:4038)
          TypeDecl: declname='arg_0x1025e0910', quals=[] (at pp.c:4038)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:4040)
          TypeDecl: declname='data', quals=[] (at pp.c:4040)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcP__SingleChannel__singleDataReady', quals=[] (at pp.c:4036)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__ResourceRead__default__release', quals=[], storage=['static'] (at pp.c:4042)
    FuncDecl: quals=None (at pp.c:4042)
      ParamList:  (at pp.c:4044)
        Decl: name='arg_0x1025f6aa0', quals=[], storage=[] (at pp.c:4044)
          TypeDecl: declname='arg_0x1025f6aa0', quals=[] (at pp.c:4044)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceRead__default__release', quals=[] (at pp.c:4042)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__ResourceRead__default__request', quals=[], storage=['static'] (at pp.c:4046)
    FuncDecl: quals=None (at pp.c:4046)
      ParamList:  (at pp.c:4048)
        Decl: name='arg_0x1025f6aa0', quals=[], storage=[] (at pp.c:4048)
          TypeDecl: declname='arg_0x1025f6aa0', quals=[] (at pp.c:4048)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceRead__default__request', quals=[] (at pp.c:4046)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__ResourceRead__granted', quals=[], storage=['static'] (at pp.c:4050)
    FuncDecl: quals=None (at pp.c:4050)
      ParamList:  (at pp.c:4052)
        Decl: name='arg_0x1025f6aa0', quals=[], storage=[] (at pp.c:4052)
          TypeDecl: declname='arg_0x1025f6aa0', quals=[] (at pp.c:4052)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceRead__granted', quals=[] (at pp.c:4050)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__readDone__runTask', quals=[], storage=['static'] (at pp.c:4054)
    FuncDecl: quals=None (at pp.c:4054)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcP__readDone__runTask', quals=[] (at pp.c:4054)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__MultiChannel__default__dataReady', quals=[], storage=['static'] (at pp.c:4056)
    FuncDecl: quals=None (at pp.c:4056)
      ParamList:  (at pp.c:4058)
        Decl: name='arg_0x1026450c8', quals=[], storage=[] (at pp.c:4058)
          TypeDecl: declname='arg_0x1026450c8', quals=[] (at pp.c:4058)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buffer', quals=[], storage=[] (at pp.c:4060)
          PtrDecl: quals=[] (at pp.c:4060)
            TypeDecl: declname='buffer', quals=[] (at pp.c:4060)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:4060)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:4060)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__MultiChannel__default__dataReady', quals=[] (at pp.c:4056)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__conversionDone', quals=[], storage=['static'] (at pp.c:4062)
    FuncDecl: quals=None (at pp.c:4062)
      ParamList:  (at pp.c:4062)
        Decl: name='iv', quals=[], storage=[] (at pp.c:4062)
          TypeDecl: declname='iv', quals=[] (at pp.c:4062)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__conversionDone', quals=[] (at pp.c:4062)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__CompareA1__fired', quals=[], storage=['static'] (at pp.c:4064)
    FuncDecl: quals=None (at pp.c:4064)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__CompareA1__fired', quals=[] (at pp.c:4064)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Overflow__default__memOverflow', quals=[], storage=['static'] (at pp.c:4066)
    FuncDecl: quals=None (at pp.c:4066)
      ParamList:  (at pp.c:4068)
        Decl: name='arg_0x102644020', quals=[], storage=[] (at pp.c:4068)
          TypeDecl: declname='arg_0x102644020', quals=[] (at pp.c:4068)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Overflow__default__memOverflow', quals=[] (at pp.c:4066)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Overflow__default__conversionTimeOverflow', quals=[], storage=['static'] (at pp.c:4070)
    FuncDecl: quals=None (at pp.c:4070)
      ParamList:  (at pp.c:4072)
        Decl: name='arg_0x102644020', quals=[], storage=[] (at pp.c:4072)
          TypeDecl: declname='arg_0x102644020', quals=[] (at pp.c:4072)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Overflow__default__conversionTimeOverflow', quals=[] (at pp.c:4070)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Init__init', quals=[], storage=['static'] (at pp.c:4074)
    FuncDecl: quals=None (at pp.c:4074)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Init__init', quals=[] (at pp.c:4074)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__TimerA__overflow', quals=[], storage=['static'] (at pp.c:4076)
    FuncDecl: quals=None (at pp.c:4076)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__TimerA__overflow', quals=[] (at pp.c:4076)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__getData', quals=[], storage=['static'] (at pp.c:4078)
    FuncDecl: quals=None (at pp.c:4078)
      ParamList:  (at pp.c:4080)
        Decl: name='arg_0x102648ac0', quals=[], storage=[] (at pp.c:4080)
          TypeDecl: declname='arg_0x102648ac0', quals=[] (at pp.c:4080)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__getData', quals=[] (at pp.c:4078)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__configureSingle', quals=[], storage=['static'] (at pp.c:4082)
    FuncDecl: quals=None (at pp.c:4082)
      ParamList:  (at pp.c:4084)
        Decl: name='arg_0x102648ac0', quals=[], storage=[] (at pp.c:4084)
          TypeDecl: declname='arg_0x102648ac0', quals=[] (at pp.c:4084)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:4086)
          PtrDecl: quals=[] (at pp.c:4086)
            TypeDecl: declname='config', quals=['const'] (at pp.c:4086)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__configureSingle', quals=[] (at pp.c:4082)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__default__multipleDataReady', quals=[], storage=['static'] (at pp.c:4088)
    FuncDecl: quals=None (at pp.c:4088)
      ParamList:  (at pp.c:4090)
        Decl: name='arg_0x102648ac0', quals=[], storage=[] (at pp.c:4090)
          TypeDecl: declname='arg_0x102648ac0', quals=[] (at pp.c:4090)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buffer', quals=[], storage=[] (at pp.c:4092)
          PtrDecl: quals=[] (at pp.c:4092)
            TypeDecl: declname='buffer', quals=[] (at pp.c:4092)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:4092)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:4092)
            IdentifierType: names=['uint16_t'] (at None)
      PtrDecl: quals=[] (at pp.c:4088)
        TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__default__multipleDataReady', quals=[] (at pp.c:4088)
          IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__configureMultiple', quals=[], storage=['static'] (at pp.c:4094)
    FuncDecl: quals=None (at pp.c:4094)
      ParamList:  (at pp.c:4096)
        Decl: name='arg_0x102648ac0', quals=[], storage=[] (at pp.c:4096)
          TypeDecl: declname='arg_0x102648ac0', quals=[] (at pp.c:4096)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:4098)
          PtrDecl: quals=[] (at pp.c:4098)
            TypeDecl: declname='config', quals=['const'] (at pp.c:4098)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        Decl: name='buffer', quals=[], storage=[] (at pp.c:4098)
          PtrDecl: quals=[] (at pp.c:4098)
            TypeDecl: declname='buffer', quals=[] (at pp.c:4098)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:4098)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:4098)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='jiffies', quals=[], storage=[] (at pp.c:4098)
          TypeDecl: declname='jiffies', quals=[] (at pp.c:4098)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__configureMultiple', quals=[] (at pp.c:4094)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__default__singleDataReady', quals=[], storage=['static'] (at pp.c:4100)
    FuncDecl: quals=None (at pp.c:4100)
      ParamList:  (at pp.c:4102)
        Decl: name='arg_0x102648ac0', quals=[], storage=[] (at pp.c:4102)
          TypeDecl: declname='arg_0x102648ac0', quals=[] (at pp.c:4102)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:4104)
          TypeDecl: declname='data', quals=[] (at pp.c:4104)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__default__singleDataReady', quals=[] (at pp.c:4100)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__CompareA0__fired', quals=[], storage=['static'] (at pp.c:4106)
    FuncDecl: quals=None (at pp.c:4106)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__CompareA0__fired', quals=[] (at pp.c:4106)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__getCtl0', quals=[], storage=['static'] (at pp.c:4108)
    FuncDecl: quals=None (at pp.c:4108)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__getCtl0', quals=[] (at pp.c:4108)
        IdentifierType: names=['adc12ctl0_t'] (at None)
  Decl: name='HplAdc12P__HplAdc12__getMCtl', quals=[], storage=['static'] (at pp.c:4110)
    FuncDecl: quals=None (at pp.c:4110)
      ParamList:  (at pp.c:4110)
        Decl: name='idx', quals=[], storage=[] (at pp.c:4110)
          TypeDecl: declname='idx', quals=[] (at pp.c:4110)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__getMCtl', quals=[] (at pp.c:4110)
        IdentifierType: names=['adc12memctl_t'] (at None)
  Decl: name='HplAdc12P__HplAdc12__resetIFGs', quals=[], storage=['static'] (at pp.c:4112)
    FuncDecl: quals=None (at pp.c:4112)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__resetIFGs', quals=[] (at pp.c:4112)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__isBusy', quals=[], storage=['static'] (at pp.c:4114)
    FuncDecl: quals=None (at pp.c:4114)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__isBusy', quals=[] (at pp.c:4114)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplAdc12P__HplAdc12__setMCtl', quals=[], storage=['static'] (at pp.c:4116)
    FuncDecl: quals=None (at pp.c:4116)
      ParamList:  (at pp.c:4116)
        Decl: name='idx', quals=[], storage=[] (at pp.c:4116)
          TypeDecl: declname='idx', quals=[] (at pp.c:4116)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='memControl', quals=[], storage=[] (at pp.c:4116)
          TypeDecl: declname='memControl', quals=[] (at pp.c:4116)
            IdentifierType: names=['adc12memctl_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__setMCtl', quals=[] (at pp.c:4116)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__startConversion', quals=[], storage=['static'] (at pp.c:4118)
    FuncDecl: quals=None (at pp.c:4118)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__startConversion', quals=[] (at pp.c:4118)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__setCtl0', quals=[], storage=['static'] (at pp.c:4120)
    FuncDecl: quals=None (at pp.c:4120)
      ParamList:  (at pp.c:4120)
        Decl: name='control0', quals=[], storage=[] (at pp.c:4120)
          TypeDecl: declname='control0', quals=[] (at pp.c:4120)
            IdentifierType: names=['adc12ctl0_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__setCtl0', quals=[] (at pp.c:4120)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__getMem', quals=[], storage=['static'] (at pp.c:4122)
    FuncDecl: quals=None (at pp.c:4122)
      ParamList:  (at pp.c:4122)
        Decl: name='idx', quals=[], storage=[] (at pp.c:4122)
          TypeDecl: declname='idx', quals=[] (at pp.c:4122)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__getMem', quals=[] (at pp.c:4122)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='HplAdc12P__HplAdc12__setIEFlags', quals=[], storage=['static'] (at pp.c:4128)
    FuncDecl: quals=None (at pp.c:4128)
      ParamList:  (at pp.c:4128)
        Decl: name='mask', quals=[], storage=[] (at pp.c:4128)
          TypeDecl: declname='mask', quals=[] (at pp.c:4128)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__setIEFlags', quals=[] (at pp.c:4128)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__stopConversion', quals=[], storage=['static'] (at pp.c:4130)
    FuncDecl: quals=None (at pp.c:4130)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__stopConversion', quals=[] (at pp.c:4130)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__setCtl1', quals=[], storage=['static'] (at pp.c:4132)
    FuncDecl: quals=None (at pp.c:4132)
      ParamList:  (at pp.c:4132)
        Decl: name='control1', quals=[], storage=[] (at pp.c:4132)
          TypeDecl: declname='control1', quals=[] (at pp.c:4132)
            IdentifierType: names=['adc12ctl1_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__setCtl1', quals=[] (at pp.c:4132)
        IdentifierType: names=['void'] (at None)
  Decl: name='RoundRobinResourceQueueC__0__Init__init', quals=[], storage=['static'] (at pp.c:4134)
    FuncDecl: quals=None (at pp.c:4134)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__Init__init', quals=[] (at pp.c:4134)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__enqueue', quals=[], storage=['static'] (at pp.c:4136)
    FuncDecl: quals=None (at pp.c:4136)
      ParamList:  (at pp.c:4136)
        Decl: name='id', quals=[], storage=[] (at pp.c:4136)
          TypeDecl: declname='id', quals=[] (at pp.c:4136)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__enqueue', quals=[] (at pp.c:4136)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__isEmpty', quals=[], storage=['static'] (at pp.c:4138)
    FuncDecl: quals=None (at pp.c:4138)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__isEmpty', quals=[] (at pp.c:4138)
        IdentifierType: names=['bool'] (at None)
  Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__isEnqueued', quals=[], storage=['static'] (at pp.c:4147)
    FuncDecl: quals=None (at pp.c:4147)
      ParamList:  (at pp.c:4147)
        Decl: name='id', quals=[], storage=[] (at pp.c:4147)
          TypeDecl: declname='id', quals=[] (at pp.c:4147)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__isEnqueued', quals=[] (at pp.c:4147)
        IdentifierType: names=['bool'] (at None)
  Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__dequeue', quals=[], storage=['static'] (at pp.c:4155)
    FuncDecl: quals=None (at pp.c:4155)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__dequeue', quals=[] (at pp.c:4155)
        IdentifierType: names=['resource_client_id_t'] (at None)
  Decl: name='SimpleArbiterP__0__ResourceRequested__default__requested', quals=[], storage=['static'] (at pp.c:4157)
    FuncDecl: quals=None (at pp.c:4157)
      ParamList:  (at pp.c:4159)
        Decl: name='arg_0x102776c80', quals=[], storage=[] (at pp.c:4159)
          TypeDecl: declname='arg_0x102776c80', quals=[] (at pp.c:4159)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ResourceRequested__default__requested', quals=[] (at pp.c:4157)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__ResourceConfigure__default__unconfigure', quals=[], storage=['static'] (at pp.c:4161)
    FuncDecl: quals=None (at pp.c:4161)
      ParamList:  (at pp.c:4163)
        Decl: name='arg_0x102774220', quals=[], storage=[] (at pp.c:4163)
          TypeDecl: declname='arg_0x102774220', quals=[] (at pp.c:4163)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ResourceConfigure__default__unconfigure', quals=[] (at pp.c:4161)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__ResourceConfigure__default__configure', quals=[], storage=['static'] (at pp.c:4165)
    FuncDecl: quals=None (at pp.c:4165)
      ParamList:  (at pp.c:4167)
        Decl: name='arg_0x102774220', quals=[], storage=[] (at pp.c:4167)
          TypeDecl: declname='arg_0x102774220', quals=[] (at pp.c:4167)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ResourceConfigure__default__configure', quals=[] (at pp.c:4165)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__Resource__release', quals=[], storage=['static'] (at pp.c:4169)
    FuncDecl: quals=None (at pp.c:4169)
      ParamList:  (at pp.c:4171)
        Decl: name='arg_0x1027779b0', quals=[], storage=[] (at pp.c:4171)
          TypeDecl: declname='arg_0x1027779b0', quals=[] (at pp.c:4171)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__Resource__release', quals=[] (at pp.c:4169)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SimpleArbiterP__0__Resource__request', quals=[], storage=['static'] (at pp.c:4173)
    FuncDecl: quals=None (at pp.c:4173)
      ParamList:  (at pp.c:4175)
        Decl: name='arg_0x1027779b0', quals=[], storage=[] (at pp.c:4175)
          TypeDecl: declname='arg_0x1027779b0', quals=[] (at pp.c:4175)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__Resource__request', quals=[] (at pp.c:4173)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SimpleArbiterP__0__Resource__default__granted', quals=[], storage=['static'] (at pp.c:4177)
    FuncDecl: quals=None (at pp.c:4177)
      ParamList:  (at pp.c:4179)
        Decl: name='arg_0x1027779b0', quals=[], storage=[] (at pp.c:4179)
          TypeDecl: declname='arg_0x1027779b0', quals=[] (at pp.c:4179)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__Resource__default__granted', quals=[] (at pp.c:4177)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__ArbiterInfo__userId', quals=[], storage=['static'] (at pp.c:4181)
    FuncDecl: quals=None (at pp.c:4181)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ArbiterInfo__userId', quals=[] (at pp.c:4181)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SimpleArbiterP__0__grantedTask__runTask', quals=[], storage=['static'] (at pp.c:4183)
    FuncDecl: quals=None (at pp.c:4183)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__grantedTask__runTask', quals=[] (at pp.c:4183)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__HplAdc12__conversionDone', quals=[], storage=['static'] (at pp.c:4185)
    FuncDecl: quals=None (at pp.c:4185)
      ParamList:  (at pp.c:4185)
        Decl: name='iv', quals=[], storage=[] (at pp.c:4185)
          TypeDecl: declname='iv', quals=[] (at pp.c:4185)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__HplAdc12__conversionDone', quals=[] (at pp.c:4185)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOffTimer__fired', quals=[], storage=['static'] (at pp.c:4187)
    FuncDecl: quals=None (at pp.c:4187)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffTimer__fired', quals=[] (at pp.c:4187)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__start', quals=[], storage=['static'] (at pp.c:4189)
    FuncDecl: quals=None (at pp.c:4189)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_2_5V__start', quals=[] (at pp.c:4189)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__stop', quals=[], storage=['static'] (at pp.c:4191)
    FuncDecl: quals=None (at pp.c:4191)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_2_5V__stop', quals=[] (at pp.c:4191)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__fired', quals=[], storage=['static'] (at pp.c:4193)
    FuncDecl: quals=None (at pp.c:4193)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__fired', quals=[] (at pp.c:4193)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__start', quals=[], storage=['static'] (at pp.c:4195)
    FuncDecl: quals=None (at pp.c:4195)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_1_5V__start', quals=[] (at pp.c:4195)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__stop', quals=[], storage=['static'] (at pp.c:4197)
    FuncDecl: quals=None (at pp.c:4197)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_1_5V__stop', quals=[] (at pp.c:4197)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOnTimer__fired', quals=[], storage=['static'] (at pp.c:4199)
    FuncDecl: quals=None (at pp.c:4199)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOnTimer__fired', quals=[] (at pp.c:4199)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__Config__default__getConfiguration', quals=[], storage=['static'] (at pp.c:4201)
    FuncDecl: quals=None (at pp.c:4201)
      ParamList:  (at pp.c:4203)
        Decl: name='arg_0x10286daf8', quals=[], storage=[] (at pp.c:4203)
          TypeDecl: declname='arg_0x10286daf8', quals=[] (at pp.c:4203)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__Config__default__getConfiguration', quals=[] (at pp.c:4201)
        IdentifierType: names=['Msp430RefVoltArbiterImplP__Config__adc_config_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__startDone', quals=[], storage=['static'] (at pp.c:4205)
    FuncDecl: quals=None (at pp.c:4205)
      ParamList:  (at pp.c:4205)
        Decl: name='error', quals=[], storage=[] (at pp.c:4205)
          TypeDecl: declname='error', quals=[] (at pp.c:4205)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_2_5V__startDone', quals=[] (at pp.c:4205)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stopDone', quals=[], storage=['static'] (at pp.c:4207)
    FuncDecl: quals=None (at pp.c:4207)
      ParamList:  (at pp.c:4207)
        Decl: name='error', quals=[], storage=[] (at pp.c:4207)
          TypeDecl: declname='error', quals=[] (at pp.c:4207)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stopDone', quals=[] (at pp.c:4207)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__AdcResource__default__release', quals=[], storage=['static'] (at pp.c:4209)
    FuncDecl: quals=None (at pp.c:4209)
      ParamList:  (at pp.c:4211)
        Decl: name='arg_0x102871e18', quals=[], storage=[] (at pp.c:4211)
          TypeDecl: declname='arg_0x102871e18', quals=[] (at pp.c:4211)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__default__release', quals=[] (at pp.c:4209)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__AdcResource__default__request', quals=[], storage=['static'] (at pp.c:4213)
    FuncDecl: quals=None (at pp.c:4213)
      ParamList:  (at pp.c:4215)
        Decl: name='arg_0x102871e18', quals=[], storage=[] (at pp.c:4215)
          TypeDecl: declname='arg_0x102871e18', quals=[] (at pp.c:4215)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__default__request', quals=[] (at pp.c:4213)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__AdcResource__granted', quals=[], storage=['static'] (at pp.c:4217)
    FuncDecl: quals=None (at pp.c:4217)
      ParamList:  (at pp.c:4219)
        Decl: name='arg_0x102871e18', quals=[], storage=[] (at pp.c:4219)
          TypeDecl: declname='arg_0x102871e18', quals=[] (at pp.c:4219)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__granted', quals=[] (at pp.c:4217)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__ClientResource__release', quals=[], storage=['static'] (at pp.c:4221)
    FuncDecl: quals=None (at pp.c:4221)
      ParamList:  (at pp.c:4223)
        Decl: name='arg_0x102809b98', quals=[], storage=[] (at pp.c:4223)
          TypeDecl: declname='arg_0x102809b98', quals=[] (at pp.c:4223)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__release', quals=[] (at pp.c:4221)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__ClientResource__request', quals=[], storage=['static'] (at pp.c:4225)
    FuncDecl: quals=None (at pp.c:4225)
      ParamList:  (at pp.c:4227)
        Decl: name='arg_0x102809b98', quals=[], storage=[] (at pp.c:4227)
          TypeDecl: declname='arg_0x102809b98', quals=[] (at pp.c:4227)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__request', quals=[] (at pp.c:4225)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__ClientResource__default__granted', quals=[], storage=['static'] (at pp.c:4229)
    FuncDecl: quals=None (at pp.c:4229)
      ParamList:  (at pp.c:4231)
        Decl: name='arg_0x102809b98', quals=[], storage=[] (at pp.c:4231)
          TypeDecl: declname='arg_0x102809b98', quals=[] (at pp.c:4231)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__default__granted', quals=[] (at pp.c:4229)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__switchOff__runTask', quals=[], storage=['static'] (at pp.c:4233)
    FuncDecl: quals=None (at pp.c:4233)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__switchOff__runTask', quals=[] (at pp.c:4233)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__startDone', quals=[], storage=['static'] (at pp.c:4235)
    FuncDecl: quals=None (at pp.c:4235)
      ParamList:  (at pp.c:4235)
        Decl: name='error', quals=[], storage=[] (at pp.c:4235)
          TypeDecl: declname='error', quals=[] (at pp.c:4235)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_1_5V__startDone', quals=[] (at pp.c:4235)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stopDone', quals=[], storage=['static'] (at pp.c:4237)
    FuncDecl: quals=None (at pp.c:4237)
      ParamList:  (at pp.c:4237)
        Decl: name='error', quals=[], storage=[] (at pp.c:4237)
          TypeDecl: declname='error', quals=[] (at pp.c:4237)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stopDone', quals=[] (at pp.c:4237)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ConfAlertC__0__ConfSub__getConfiguration', quals=[], storage=['static'] (at pp.c:4239)
    FuncDecl: quals=None (at pp.c:4239)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ConfAlertC__0__ConfSub__getConfiguration', quals=[] (at pp.c:4239)
        IdentifierType: names=['Msp430Adc12ConfAlertC__0__ConfSub__adc_config_t'] (at None)
  Decl: name='AdcStreamP__bufferDone__runTask', quals=[], storage=['static'] (at pp.c:4241)
    FuncDecl: quals=None (at pp.c:4241)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__bufferDone__runTask', quals=[] (at pp.c:4241)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__readStreamDone__runTask', quals=[], storage=['static'] (at pp.c:4243)
    FuncDecl: quals=None (at pp.c:4243)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__readStreamDone__runTask', quals=[] (at pp.c:4243)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__readStreamFail__runTask', quals=[], storage=['static'] (at pp.c:4245)
    FuncDecl: quals=None (at pp.c:4245)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__readStreamFail__runTask', quals=[] (at pp.c:4245)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__Alarm__fired', quals=[], storage=['static'] (at pp.c:4247)
    FuncDecl: quals=None (at pp.c:4247)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__Alarm__fired', quals=[] (at pp.c:4247)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__Init__init', quals=[], storage=['static'] (at pp.c:4249)
    FuncDecl: quals=None (at pp.c:4249)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__Init__init', quals=[] (at pp.c:4249)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__AdcConfigure__default__getConfiguration', quals=[], storage=['static'] (at pp.c:4251)
    FuncDecl: quals=None (at pp.c:4251)
      ParamList:  (at pp.c:4253)
        Decl: name='arg_0x1028c3318', quals=[], storage=[] (at pp.c:4253)
          TypeDecl: declname='arg_0x1028c3318', quals=[] (at pp.c:4253)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcStreamP__AdcConfigure__default__getConfiguration', quals=[] (at pp.c:4251)
        IdentifierType: names=['AdcStreamP__AdcConfigure__adc_config_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__default__getData', quals=[], storage=['static'] (at pp.c:4255)
    FuncDecl: quals=None (at pp.c:4255)
      ParamList:  (at pp.c:4257)
        Decl: name='arg_0x1028c6b90', quals=[], storage=[] (at pp.c:4257)
          TypeDecl: declname='arg_0x1028c6b90', quals=[] (at pp.c:4257)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__default__getData', quals=[] (at pp.c:4255)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__default__configureSingle', quals=[], storage=['static'] (at pp.c:4259)
    FuncDecl: quals=None (at pp.c:4259)
      ParamList:  (at pp.c:4261)
        Decl: name='arg_0x1028c6b90', quals=[], storage=[] (at pp.c:4261)
          TypeDecl: declname='arg_0x1028c6b90', quals=[] (at pp.c:4261)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:4263)
          PtrDecl: quals=[] (at pp.c:4263)
            TypeDecl: declname='config', quals=['const'] (at pp.c:4263)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__default__configureSingle', quals=[] (at pp.c:4259)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__multipleDataReady', quals=[], storage=['static'] (at pp.c:4265)
    FuncDecl: quals=None (at pp.c:4265)
      ParamList:  (at pp.c:4267)
        Decl: name='arg_0x1028c6b90', quals=[], storage=[] (at pp.c:4267)
          TypeDecl: declname='arg_0x1028c6b90', quals=[] (at pp.c:4267)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buffer', quals=[], storage=[] (at pp.c:4269)
          PtrDecl: quals=[] (at pp.c:4269)
            TypeDecl: declname='buffer', quals=[] (at pp.c:4269)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:4269)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:4269)
            IdentifierType: names=['uint16_t'] (at None)
      PtrDecl: quals=[] (at pp.c:4265)
        TypeDecl: declname='AdcStreamP__SingleChannel__multipleDataReady', quals=[] (at pp.c:4265)
          IdentifierType: names=['uint16_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__default__configureMultiple', quals=[], storage=['static'] (at pp.c:4271)
    FuncDecl: quals=None (at pp.c:4271)
      ParamList:  (at pp.c:4273)
        Decl: name='arg_0x1028c6b90', quals=[], storage=[] (at pp.c:4273)
          TypeDecl: declname='arg_0x1028c6b90', quals=[] (at pp.c:4273)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:4275)
          PtrDecl: quals=[] (at pp.c:4275)
            TypeDecl: declname='config', quals=['const'] (at pp.c:4275)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        Decl: name='buffer', quals=[], storage=[] (at pp.c:4275)
          PtrDecl: quals=[] (at pp.c:4275)
            TypeDecl: declname='buffer', quals=[] (at pp.c:4275)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:4275)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:4275)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='jiffies', quals=[], storage=[] (at pp.c:4275)
          TypeDecl: declname='jiffies', quals=[] (at pp.c:4275)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__default__configureMultiple', quals=[] (at pp.c:4271)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__singleDataReady', quals=[], storage=['static'] (at pp.c:4277)
    FuncDecl: quals=None (at pp.c:4277)
      ParamList:  (at pp.c:4279)
        Decl: name='arg_0x1028c6b90', quals=[], storage=[] (at pp.c:4279)
          TypeDecl: declname='arg_0x1028c6b90', quals=[] (at pp.c:4279)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:4281)
          TypeDecl: declname='data', quals=[] (at pp.c:4281)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__singleDataReady', quals=[] (at pp.c:4277)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__ReadStream__read', quals=[], storage=['static'] (at pp.c:4283)
    FuncDecl: quals=None (at pp.c:4283)
      ParamList:  (at pp.c:4285)
        Decl: name='arg_0x1028c9b08', quals=[], storage=[] (at pp.c:4285)
          TypeDecl: declname='arg_0x1028c9b08', quals=[] (at pp.c:4285)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='usPeriod', quals=[], storage=[] (at pp.c:4287)
          TypeDecl: declname='usPeriod', quals=[] (at pp.c:4287)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='AdcStreamP__ReadStream__read', quals=[] (at pp.c:4283)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430AlarmC__2__Msp430Compare__fired', quals=[], storage=['static'] (at pp.c:4289)
    FuncDecl: quals=None (at pp.c:4289)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__2__Msp430Compare__fired', quals=[] (at pp.c:4289)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__2__Msp430Timer__overflow', quals=[], storage=['static'] (at pp.c:4291)
    FuncDecl: quals=None (at pp.c:4291)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__2__Msp430Timer__overflow', quals=[] (at pp.c:4291)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__2__Alarm__startAt', quals=[], storage=['static'] (at pp.c:4293)
    FuncDecl: quals=None (at pp.c:4293)
      ParamList:  (at pp.c:4293)
        Decl: name='t0', quals=[], storage=[] (at pp.c:4293)
          TypeDecl: declname='t0', quals=[] (at pp.c:4293)
            IdentifierType: names=['Msp430AlarmC__2__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:4293)
          TypeDecl: declname='dt', quals=[] (at pp.c:4293)
            IdentifierType: names=['Msp430AlarmC__2__Alarm__size_type'] (at None)
      TypeDecl: declname='Msp430AlarmC__2__Alarm__startAt', quals=[] (at pp.c:4293)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__2__Alarm__getNow', quals=[], storage=['static'] (at pp.c:4299)
    FuncDecl: quals=None (at pp.c:4299)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__2__Alarm__getNow', quals=[] (at pp.c:4299)
        IdentifierType: names=['TransformAlarmC__2__Alarm__size_type'] (at None)
  Decl: name='TransformAlarmC__2__Alarm__startAt', quals=[], storage=['static'] (at pp.c:4301)
    FuncDecl: quals=None (at pp.c:4301)
      ParamList:  (at pp.c:4301)
        Decl: name='t0', quals=[], storage=[] (at pp.c:4301)
          TypeDecl: declname='t0', quals=[] (at pp.c:4301)
            IdentifierType: names=['TransformAlarmC__2__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:4301)
          TypeDecl: declname='dt', quals=[] (at pp.c:4301)
            IdentifierType: names=['TransformAlarmC__2__Alarm__size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__2__Alarm__startAt', quals=[] (at pp.c:4301)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__2__AlarmFrom__fired', quals=[], storage=['static'] (at pp.c:4303)
    FuncDecl: quals=None (at pp.c:4303)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__2__AlarmFrom__fired', quals=[] (at pp.c:4303)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__2__Counter__overflow', quals=[], storage=['static'] (at pp.c:4305)
    FuncDecl: quals=None (at pp.c:4305)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__2__Counter__overflow', quals=[] (at pp.c:4305)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__Service__bufferDone', quals=[], storage=['static'] (at pp.c:4307)
    FuncDecl: quals=None (at pp.c:4307)
      ParamList:  (at pp.c:4309)
        Decl: name='arg_0x10292d148', quals=[], storage=[] (at pp.c:4309)
          TypeDecl: declname='arg_0x10292d148', quals=[] (at pp.c:4309)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:4311)
          TypeDecl: declname='result', quals=[] (at pp.c:4311)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:4313)
          PtrDecl: quals=[] (at pp.c:4313)
            TypeDecl: declname='buf', quals=[] (at pp.c:4313)
              IdentifierType: names=['ArbitratedReadStreamC__0__Service__val_t'] (at None)
        Decl: name='count', quals=[], storage=[] (at pp.c:4317)
          TypeDecl: declname='count', quals=[] (at pp.c:4317)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__Service__bufferDone', quals=[] (at pp.c:4307)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__Service__readDone', quals=[], storage=['static'] (at pp.c:4319)
    FuncDecl: quals=None (at pp.c:4319)
      ParamList:  (at pp.c:4321)
        Decl: name='arg_0x10292d148', quals=[], storage=[] (at pp.c:4321)
          TypeDecl: declname='arg_0x10292d148', quals=[] (at pp.c:4321)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:4323)
          TypeDecl: declname='result', quals=[] (at pp.c:4323)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='usActualPeriod', quals=[], storage=[] (at pp.c:4323)
          TypeDecl: declname='usActualPeriod', quals=[] (at pp.c:4323)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__Service__readDone', quals=[] (at pp.c:4319)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__ReadStream__default__bufferDone', quals=[], storage=['static'] (at pp.c:4325)
    FuncDecl: quals=None (at pp.c:4325)
      ParamList:  (at pp.c:4327)
        Decl: name='arg_0x102931020', quals=[], storage=[] (at pp.c:4327)
          TypeDecl: declname='arg_0x102931020', quals=[] (at pp.c:4327)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:4329)
          TypeDecl: declname='result', quals=[] (at pp.c:4329)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:4331)
          PtrDecl: quals=[] (at pp.c:4331)
            TypeDecl: declname='buf', quals=[] (at pp.c:4331)
              IdentifierType: names=['ArbitratedReadStreamC__0__ReadStream__val_t'] (at None)
        Decl: name='count', quals=[], storage=[] (at pp.c:4335)
          TypeDecl: declname='count', quals=[] (at pp.c:4335)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__default__bufferDone', quals=[] (at pp.c:4325)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__ReadStream__default__readDone', quals=[], storage=['static'] (at pp.c:4337)
    FuncDecl: quals=None (at pp.c:4337)
      ParamList:  (at pp.c:4339)
        Decl: name='arg_0x102931020', quals=[], storage=[] (at pp.c:4339)
          TypeDecl: declname='arg_0x102931020', quals=[] (at pp.c:4339)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:4341)
          TypeDecl: declname='result', quals=[] (at pp.c:4341)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='usActualPeriod', quals=[], storage=[] (at pp.c:4341)
          TypeDecl: declname='usActualPeriod', quals=[] (at pp.c:4341)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__default__readDone', quals=[] (at pp.c:4337)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__Resource__default__release', quals=[], storage=['static'] (at pp.c:4343)
    FuncDecl: quals=None (at pp.c:4343)
      ParamList:  (at pp.c:4345)
        Decl: name='arg_0x102929020', quals=[], storage=[] (at pp.c:4345)
          TypeDecl: declname='arg_0x102929020', quals=[] (at pp.c:4345)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__Resource__default__release', quals=[] (at pp.c:4343)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbitratedReadStreamC__0__Resource__granted', quals=[], storage=['static'] (at pp.c:4347)
    FuncDecl: quals=None (at pp.c:4347)
      ParamList:  (at pp.c:4349)
        Decl: name='arg_0x102929020', quals=[], storage=[] (at pp.c:4349)
          TypeDecl: declname='arg_0x102929020', quals=[] (at pp.c:4349)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__Resource__granted', quals=[] (at pp.c:4347)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ConfAlertC__1__ConfSub__getConfiguration', quals=[], storage=['static'] (at pp.c:4351)
    FuncDecl: quals=None (at pp.c:4351)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ConfAlertC__1__ConfSub__getConfiguration', quals=[] (at pp.c:4351)
        IdentifierType: names=['Msp430Adc12ConfAlertC__1__ConfSub__adc_config_t'] (at None)
  Decl: name='Msp430InternalVoltageP__AdcConfigure__getConfiguration', quals=[], storage=['static'] (at pp.c:4353)
    FuncDecl: quals=None (at pp.c:4353)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InternalVoltageP__AdcConfigure__getConfiguration', quals=[] (at pp.c:4353)
        IdentifierType: names=['Msp430InternalVoltageP__AdcConfigure__adc_config_t'] (at None)
  Decl: name='Msp430Adc12ConfAlertC__2__ConfSub__getConfiguration', quals=[], storage=['static'] (at pp.c:4355)
    FuncDecl: quals=None (at pp.c:4355)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ConfAlertC__2__ConfSub__getConfiguration', quals=[] (at pp.c:4355)
        IdentifierType: names=['Msp430Adc12ConfAlertC__2__ConfSub__adc_config_t'] (at None)
  Decl: name='AMQueueEntryP__0__AMSend__send', quals=[], storage=['static'] (at pp.c:4357)
    FuncDecl: quals=None (at pp.c:4357)
      ParamList:  (at pp.c:4357)
        Decl: name='addr', quals=[], storage=[] (at pp.c:4357)
          TypeDecl: declname='addr', quals=[] (at pp.c:4357)
            IdentifierType: names=['am_addr_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:4359)
          PtrDecl: quals=[] (at pp.c:4359)
            TypeDecl: declname='msg', quals=[] (at pp.c:4359)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:4368)
          TypeDecl: declname='len', quals=[] (at pp.c:4368)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AMQueueEntryP__0__AMSend__send', quals=[] (at pp.c:4357)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AMQueueEntryP__0__AMSend__getPayload', quals=[], storage=['static'] (at pp.c:4374)
    FuncDecl: quals=None (at pp.c:4374)
      ParamList:  (at pp.c:4376)
        Decl: name='msg', quals=[], storage=[] (at pp.c:4376)
          PtrDecl: quals=[] (at pp.c:4376)
            TypeDecl: declname='msg', quals=[] (at pp.c:4376)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:4379)
          TypeDecl: declname='len', quals=[] (at pp.c:4379)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:4372)
        TypeDecl: declname='AMQueueEntryP__0__AMSend__getPayload', quals=[] (at pp.c:4374)
          IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueEntryP__0__AMSend__maxPayloadLength', quals=[], storage=['static'] (at pp.c:4381)
    FuncDecl: quals=None (at pp.c:4381)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AMQueueEntryP__0__AMSend__maxPayloadLength', quals=[] (at pp.c:4381)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='AMQueueEntryP__0__Send__sendDone', quals=[], storage=['static'] (at pp.c:4383)
    FuncDecl: quals=None (at pp.c:4383)
      ParamList:  (at pp.c:4385)
        Decl: name='msg', quals=[], storage=[] (at pp.c:4385)
          PtrDecl: quals=[] (at pp.c:4385)
            TypeDecl: declname='msg', quals=[] (at pp.c:4385)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:4389)
          TypeDecl: declname='error', quals=[] (at pp.c:4389)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='AMQueueEntryP__0__Send__sendDone', quals=[] (at pp.c:4383)
        IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueImplP__0__AMSend__sendDone', quals=[], storage=['static'] (at pp.c:4391)
    FuncDecl: quals=None (at pp.c:4391)
      ParamList:  (at pp.c:4393)
        Decl: name='arg_0x1029e9c70', quals=[], storage=[] (at pp.c:4393)
          TypeDecl: declname='arg_0x1029e9c70', quals=[] (at pp.c:4393)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:4395)
          PtrDecl: quals=[] (at pp.c:4395)
            TypeDecl: declname='msg', quals=[] (at pp.c:4395)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:4402)
          TypeDecl: declname='error', quals=[] (at pp.c:4402)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='AMQueueImplP__0__AMSend__sendDone', quals=[] (at pp.c:4391)
        IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueImplP__0__Send__send', quals=[], storage=['static'] (at pp.c:4404)
    FuncDecl: quals=None (at pp.c:4404)
      ParamList:  (at pp.c:4406)
        Decl: name='arg_0x1029ea990', quals=[], storage=[] (at pp.c:4406)
          TypeDecl: declname='arg_0x1029ea990', quals=[] (at pp.c:4406)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:4408)
          PtrDecl: quals=[] (at pp.c:4408)
            TypeDecl: declname='msg', quals=[] (at pp.c:4408)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:4416)
          TypeDecl: declname='len', quals=[] (at pp.c:4416)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AMQueueImplP__0__Send__send', quals=[] (at pp.c:4404)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AMQueueImplP__0__Send__getPayload', quals=[], storage=['static'] (at pp.c:4422)
    FuncDecl: quals=None (at pp.c:4422)
      ParamList:  (at pp.c:4424)
        Decl: name='arg_0x1029ea990', quals=[], storage=[] (at pp.c:4424)
          TypeDecl: declname='arg_0x1029ea990', quals=[] (at pp.c:4424)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:4426)
          PtrDecl: quals=[] (at pp.c:4426)
            TypeDecl: declname='msg', quals=[] (at pp.c:4426)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:4429)
          TypeDecl: declname='len', quals=[] (at pp.c:4429)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:4420)
        TypeDecl: declname='AMQueueImplP__0__Send__getPayload', quals=[] (at pp.c:4422)
          IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueImplP__0__Send__maxPayloadLength', quals=[], storage=['static'] (at pp.c:4431)
    FuncDecl: quals=None (at pp.c:4431)
      ParamList:  (at pp.c:4433)
        Decl: name='arg_0x1029ea990', quals=[], storage=[] (at pp.c:4433)
          TypeDecl: declname='arg_0x1029ea990', quals=[] (at pp.c:4433)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AMQueueImplP__0__Send__maxPayloadLength', quals=[] (at pp.c:4431)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='AMQueueImplP__0__Send__default__sendDone', quals=[], storage=['static'] (at pp.c:4435)
    FuncDecl: quals=None (at pp.c:4435)
      ParamList:  (at pp.c:4437)
        Decl: name='arg_0x1029ea990', quals=[], storage=[] (at pp.c:4437)
          TypeDecl: declname='arg_0x1029ea990', quals=[] (at pp.c:4437)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:4439)
          PtrDecl: quals=[] (at pp.c:4439)
            TypeDecl: declname='msg', quals=[] (at pp.c:4439)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:4443)
          TypeDecl: declname='error', quals=[] (at pp.c:4443)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='AMQueueImplP__0__Send__default__sendDone', quals=[] (at pp.c:4435)
        IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueImplP__0__errorTask__runTask', quals=[], storage=['static'] (at pp.c:4445)
    FuncDecl: quals=None (at pp.c:4445)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AMQueueImplP__0__errorTask__runTask', quals=[] (at pp.c:4445)
        IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueImplP__0__CancelTask__runTask', quals=[], storage=['static'] (at pp.c:4447)
    FuncDecl: quals=None (at pp.c:4447)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AMQueueImplP__0__CancelTask__runTask', quals=[] (at pp.c:4447)
        IdentifierType: names=['void'] (at None)
  Decl: name='OscilloscopeC__AMSend__send', quals=[], storage=['static'] (at pp.c:4449)
    FuncDecl: quals=None (at pp.c:4449)
      ParamList:  (at pp.c:4449)
        Decl: name='addr', quals=[], storage=[] (at pp.c:4449)
          TypeDecl: declname='addr', quals=[] (at pp.c:4449)
            IdentifierType: names=['am_addr_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:4451)
          PtrDecl: quals=[] (at pp.c:4451)
            TypeDecl: declname='msg', quals=[] (at pp.c:4451)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:4460)
          TypeDecl: declname='len', quals=[] (at pp.c:4460)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='OscilloscopeC__AMSend__send', quals=[] (at pp.c:4449)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='OscilloscopeC__AMSend__getPayload', quals=[], storage=['static'] (at pp.c:4466)
    FuncDecl: quals=None (at pp.c:4466)
      ParamList:  (at pp.c:4468)
        Decl: name='msg', quals=[], storage=[] (at pp.c:4468)
          PtrDecl: quals=[] (at pp.c:4468)
            TypeDecl: declname='msg', quals=[] (at pp.c:4468)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:4471)
          TypeDecl: declname='len', quals=[] (at pp.c:4471)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:4464)
        TypeDecl: declname='OscilloscopeC__AMSend__getPayload', quals=[] (at pp.c:4466)
          IdentifierType: names=['void'] (at None)
  Decl: name='OscilloscopeC__AMSend__maxPayloadLength', quals=[], storage=['static'] (at pp.c:4473)
    FuncDecl: quals=None (at pp.c:4473)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OscilloscopeC__AMSend__maxPayloadLength', quals=[] (at pp.c:4473)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='OscilloscopeC__RadioControl__start', quals=[], storage=['static'] (at pp.c:4475)
    FuncDecl: quals=None (at pp.c:4475)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OscilloscopeC__RadioControl__start', quals=[] (at pp.c:4475)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='OscilloscopeC__Read__read', quals=[], storage=['static'] (at pp.c:4477)
    FuncDecl: quals=None (at pp.c:4477)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OscilloscopeC__Read__read', quals=[] (at pp.c:4477)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='OscilloscopeC__Leds__led0Toggle', quals=[], storage=['static'] (at pp.c:4479)
    FuncDecl: quals=None (at pp.c:4479)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OscilloscopeC__Leds__led0Toggle', quals=[] (at pp.c:4479)
        IdentifierType: names=['void'] (at None)
  Decl: name='OscilloscopeC__Leds__led1Toggle', quals=[], storage=['static'] (at pp.c:4481)
    FuncDecl: quals=None (at pp.c:4481)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OscilloscopeC__Leds__led1Toggle', quals=[] (at pp.c:4481)
        IdentifierType: names=['void'] (at None)
  Decl: name='OscilloscopeC__Leds__led2Toggle', quals=[], storage=['static'] (at pp.c:4483)
    FuncDecl: quals=None (at pp.c:4483)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OscilloscopeC__Leds__led2Toggle', quals=[] (at pp.c:4483)
        IdentifierType: names=['void'] (at None)
  Decl: name='OscilloscopeC__Timer__startPeriodic', quals=[], storage=['static'] (at pp.c:4485)
    FuncDecl: quals=None (at pp.c:4485)
      ParamList:  (at pp.c:4485)
        Decl: name='dt', quals=[], storage=[] (at pp.c:4485)
          TypeDecl: declname='dt', quals=[] (at pp.c:4485)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='OscilloscopeC__Timer__startPeriodic', quals=[] (at pp.c:4485)
        IdentifierType: names=['void'] (at None)
  Decl: name='OscilloscopeC__sendBuf', quals=[], storage=[] (at pp.c:4487)
    TypeDecl: declname='OscilloscopeC__sendBuf', quals=[] (at pp.c:4487)
      IdentifierType: names=['message_t'] (at None)
  Decl: name='OscilloscopeC__sendBusy', quals=[], storage=[] (at pp.c:4488)
    TypeDecl: declname='OscilloscopeC__sendBusy', quals=[] (at pp.c:4488)
      IdentifierType: names=['bool'] (at None)
  Decl: name='OscilloscopeC__local', quals=[], storage=[] (at pp.c:4491)
    TypeDecl: declname='OscilloscopeC__local', quals=[] (at pp.c:4491)
      IdentifierType: names=['oscilloscope_t'] (at None)
  Decl: name='OscilloscopeC__reading', quals=[], storage=[] (at pp.c:4493)
    TypeDecl: declname='OscilloscopeC__reading', quals=[] (at pp.c:4493)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='OscilloscopeC__suppressCountChange', quals=[], storage=[] (at pp.c:4500)
    TypeDecl: declname='OscilloscopeC__suppressCountChange', quals=[] (at pp.c:4500)
      IdentifierType: names=['bool'] (at None)
  Decl: name='OscilloscopeC__report_problem', quals=[], storage=['inline', 'static'] (at pp.c:4503)
    FuncDecl: quals=None (at pp.c:4503)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OscilloscopeC__report_problem', quals=[] (at pp.c:4503)
        IdentifierType: names=['void'] (at None)
  Decl: name='OscilloscopeC__report_sent', quals=[], storage=['inline', 'static'] (at pp.c:4504)
    FuncDecl: quals=None (at pp.c:4504)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OscilloscopeC__report_sent', quals=[] (at pp.c:4504)
        IdentifierType: names=['void'] (at None)
  Decl: name='OscilloscopeC__report_received', quals=[], storage=['inline', 'static'] (at pp.c:4505)
    FuncDecl: quals=None (at pp.c:4505)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OscilloscopeC__report_received', quals=[] (at pp.c:4505)
        IdentifierType: names=['void'] (at None)
  Decl: name='OscilloscopeC__Boot__booted', quals=[], storage=['inline', 'static'] (at pp.c:4507)
    FuncDecl: quals=None (at pp.c:4507)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OscilloscopeC__Boot__booted', quals=[] (at pp.c:4507)
        IdentifierType: names=['void'] (at None)
  Decl: name='OscilloscopeC__startTimer', quals=[], storage=['inline', 'static'] (at pp.c:4514)
    FuncDecl: quals=None (at pp.c:4514)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OscilloscopeC__startTimer', quals=[] (at pp.c:4514)
        IdentifierType: names=['void'] (at None)
  Decl: name='OscilloscopeC__RadioControl__startDone', quals=[], storage=['inline', 'static'] (at pp.c:4519)
    FuncDecl: quals=None (at pp.c:4519)
      ParamList:  (at pp.c:4519)
        Decl: name='error', quals=[], storage=[] (at pp.c:4519)
          TypeDecl: declname='error', quals=[] (at pp.c:4519)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='OscilloscopeC__RadioControl__startDone', quals=[] (at pp.c:4519)
        IdentifierType: names=['void'] (at None)
  Decl: name='OscilloscopeC__RadioControl__stopDone', quals=[], storage=['inline', 'static'] (at pp.c:4523)
    FuncDecl: quals=None (at pp.c:4523)
      ParamList:  (at pp.c:4523)
        Decl: name='error', quals=[], storage=[] (at pp.c:4523)
          TypeDecl: declname='error', quals=[] (at pp.c:4523)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='OscilloscopeC__RadioControl__stopDone', quals=[] (at pp.c:4523)
        IdentifierType: names=['void'] (at None)
  Decl: name='OscilloscopeC__Receive__receive', quals=[], storage=['inline', 'static'] (at pp.c:4526)
    FuncDecl: quals=None (at pp.c:4526)
      ParamList:  (at pp.c:4526)
        Decl: name='msg', quals=[], storage=[] (at pp.c:4526)
          PtrDecl: quals=[] (at pp.c:4526)
            TypeDecl: declname='msg', quals=[] (at pp.c:4526)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:4526)
          PtrDecl: quals=[] (at pp.c:4526)
            TypeDecl: declname='payload', quals=[] (at pp.c:4526)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:4526)
          TypeDecl: declname='len', quals=[] (at pp.c:4526)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:4526)
        TypeDecl: declname='OscilloscopeC__Receive__receive', quals=[] (at pp.c:4526)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='OscilloscopeC__Timer__fired', quals=[], storage=['inline', 'static'] (at pp.c:4528)
    FuncDecl: quals=None (at pp.c:4528)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OscilloscopeC__Timer__fired', quals=[] (at pp.c:4528)
        IdentifierType: names=['void'] (at None)
  Decl: name='OscilloscopeC__AMSend__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:4530)
    FuncDecl: quals=None (at pp.c:4530)
      ParamList:  (at pp.c:4530)
        Decl: name='msg', quals=[], storage=[] (at pp.c:4530)
          PtrDecl: quals=[] (at pp.c:4530)
            TypeDecl: declname='msg', quals=[] (at pp.c:4530)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:4530)
          TypeDecl: declname='error', quals=[] (at pp.c:4530)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='OscilloscopeC__AMSend__sendDone', quals=[] (at pp.c:4530)
        IdentifierType: names=['void'] (at None)
  Decl: name='OscilloscopeC__Read__readDone', quals=[], storage=['static'] (at pp.c:4539)
    FuncDecl: quals=None (at pp.c:4539)
      ParamList:  (at pp.c:4539)
        Decl: name='result', quals=[], storage=[] (at pp.c:4539)
          TypeDecl: declname='result', quals=[] (at pp.c:4539)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:4539)
          TypeDecl: declname='data', quals=[] (at pp.c:4539)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='OscilloscopeC__Read__readDone', quals=[] (at pp.c:4539)
        IdentifierType: names=['void'] (at None)
  Decl: name='PlatformP__MoteInit__init', quals=[], storage=['static'] (at pp.c:4541)
    FuncDecl: quals=None (at pp.c:4541)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='PlatformP__MoteInit__init', quals=[] (at pp.c:4541)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='PlatformP__MoteClockInit__init', quals=[], storage=['static'] (at pp.c:4543)
    FuncDecl: quals=None (at pp.c:4543)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='PlatformP__MoteClockInit__init', quals=[] (at pp.c:4543)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='PlatformP__LedsInit__init', quals=[], storage=['static'] (at pp.c:4545)
    FuncDecl: quals=None (at pp.c:4545)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='PlatformP__LedsInit__init', quals=[] (at pp.c:4545)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='PlatformP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:4547)
    FuncDecl: quals=None (at pp.c:4547)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='PlatformP__Init__init', quals=[] (at pp.c:4547)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__initTimerB', quals=[], storage=['static'] (at pp.c:4549)
    FuncDecl: quals=None (at pp.c:4549)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initTimerB', quals=[] (at pp.c:4549)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__initTimerA', quals=[], storage=['static'] (at pp.c:4551)
    FuncDecl: quals=None (at pp.c:4551)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initTimerA', quals=[] (at pp.c:4551)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__setupDcoCalibrate', quals=[], storage=['static'] (at pp.c:4553)
    FuncDecl: quals=None (at pp.c:4553)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__setupDcoCalibrate', quals=[] (at pp.c:4553)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__initClocks', quals=[], storage=['static'] (at pp.c:4554)
    FuncDecl: quals=None (at pp.c:4554)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initClocks', quals=[] (at pp.c:4554)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__IE1@"0x0000"', quals=['volatile'], storage=['static'] (at pp.c:4556)
    TypeDecl: declname='Msp430ClockP__IE1@"0x0000"', quals=['volatile'] (at pp.c:4556)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430ClockP__TA0CTL@"0x0160"', quals=['volatile'], storage=['static'] (at pp.c:4557)
    TypeDecl: declname='Msp430ClockP__TA0CTL@"0x0160"', quals=['volatile'] (at pp.c:4557)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430ClockP__TA0IV@"0x012E"', quals=['volatile'], storage=['static'] (at pp.c:4558)
    TypeDecl: declname='Msp430ClockP__TA0IV@"0x012E"', quals=['volatile'] (at pp.c:4558)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430ClockP__TBCTL@"0x0180"', quals=['volatile'], storage=['static'] (at pp.c:4559)
    TypeDecl: declname='Msp430ClockP__TBCTL@"0x0180"', quals=['volatile'] (at pp.c:4559)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430ClockP__TBIV@"0x011E"', quals=['volatile'], storage=['static'] (at pp.c:4560)
    TypeDecl: declname='Msp430ClockP__TBIV@"0x011E"', quals=['volatile'] (at pp.c:4560)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:4562)
    Enum: name='Msp430ClockP____nesc_unnamed4321' (at pp.c:4562)
      EnumeratorList:  (at pp.c:4564)
        Enumerator: name='Msp430ClockP__ACLK_CALIB_PERIOD' (at pp.c:4564)
          Constant: type='int', value='8' (at pp.c:4564)
        Enumerator: name='Msp430ClockP__TARGET_DCO_DELTA' (at pp.c:4565)
          BinaryOp: op='*' (at pp.c:4565)
            BinaryOp: op='/' (at pp.c:4565)
              Constant: type='int', value='4096' (at pp.c:4565)
              Constant: type='int', value='32' (at pp.c:4565)
            ID: name='Msp430ClockP__ACLK_CALIB_PERIOD' (at pp.c:4565)
  Decl: name='Msp430ClockP__McuPowerOverride__lowestState', quals=[], storage=['inline', 'static'] (at pp.c:4568)
    FuncDecl: quals=None (at pp.c:4568)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__McuPowerOverride__lowestState', quals=[] (at pp.c:4568)
        IdentifierType: names=['mcu_power_t'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[], storage=['inline', 'static'] (at pp.c:4572)
    FuncDecl: quals=None (at pp.c:4572)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[] (at pp.c:4572)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[], storage=['inline', 'static'] (at pp.c:4574)
    FuncDecl: quals=None (at pp.c:4574)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[] (at pp.c:4574)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[], storage=['inline', 'static'] (at pp.c:4576)
    FuncDecl: quals=None (at pp.c:4576)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[] (at pp.c:4576)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[], storage=['inline', 'static'] (at pp.c:4578)
    FuncDecl: quals=None (at pp.c:4578)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[] (at pp.c:4578)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[], storage=['inline', 'static'] (at pp.c:4580)
    FuncDecl: quals=None (at pp.c:4580)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[] (at pp.c:4580)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[], storage=['inline', 'static'] (at pp.c:4585)
    FuncDecl: quals=None (at pp.c:4585)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[] (at pp.c:4585)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[], storage=['inline', 'static'] (at pp.c:4590)
    FuncDecl: quals=None (at pp.c:4590)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[] (at pp.c:4590)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[], storage=['inline', 'static'] (at pp.c:4595)
    FuncDecl: quals=None (at pp.c:4595)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[] (at pp.c:4595)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__startTimerA', quals=[], storage=['inline', 'static'] (at pp.c:4601)
    FuncDecl: quals=None (at pp.c:4601)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__startTimerA', quals=[] (at pp.c:4601)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__startTimerB', quals=[], storage=['inline', 'static'] (at pp.c:4603)
    FuncDecl: quals=None (at pp.c:4603)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__startTimerB', quals=[] (at pp.c:4603)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__set_dco_calib', quals=[], storage=['static'] (at pp.c:4605)
    FuncDecl: quals=None (at pp.c:4605)
      ParamList:  (at pp.c:4605)
        Decl: name='calib', quals=[], storage=[] (at pp.c:4605)
          TypeDecl: declname='calib', quals=[] (at pp.c:4605)
            IdentifierType: names=['int'] (at None)
      TypeDecl: declname='Msp430ClockP__set_dco_calib', quals=[] (at pp.c:4605)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__test_calib_busywait_delta', quals=[], storage=['inline', 'static'] (at pp.c:4611)
    FuncDecl: quals=None (at pp.c:4611)
      ParamList:  (at pp.c:4611)
        Decl: name='calib', quals=[], storage=[] (at pp.c:4611)
          TypeDecl: declname='calib', quals=[] (at pp.c:4611)
            IdentifierType: names=['int'] (at None)
      TypeDecl: declname='Msp430ClockP__test_calib_busywait_delta', quals=[] (at pp.c:4611)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430ClockP__busyCalibrateDco', quals=[], storage=['inline', 'static'] (at pp.c:4613)
    FuncDecl: quals=None (at pp.c:4613)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__busyCalibrateDco', quals=[] (at pp.c:4613)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430ClockP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:4615)
    FuncDecl: quals=None (at pp.c:4615)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430ClockP__Init__init', quals=[] (at pp.c:4615)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430TimerP__0__Event__fired', quals=[], storage=['static'] (at pp.c:4617)
    FuncDecl: quals=None (at pp.c:4617)
      ParamList:  (at pp.c:4619)
        Decl: name='arg_0x1014afc98', quals=[], storage=[] (at pp.c:4619)
          TypeDecl: declname='arg_0x1014afc98', quals=[] (at pp.c:4619)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Event__fired', quals=[] (at pp.c:4617)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__overflow', quals=[], storage=['static'] (at pp.c:4621)
    FuncDecl: quals=None (at pp.c:4621)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__overflow', quals=[] (at pp.c:4621)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__get', quals=[], storage=['inline', 'static'] (at pp.c:4623)
    FuncDecl: quals=None (at pp.c:4623)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__get', quals=[] (at pp.c:4623)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerP__0__Timer__setMode', quals=[], storage=['static'] (at pp.c:4625)
    FuncDecl: quals=None (at pp.c:4625)
      ParamList:  (at pp.c:4625)
        Decl: name='mode', quals=[], storage=[] (at pp.c:4625)
          TypeDecl: declname='mode', quals=[] (at pp.c:4625)
            IdentifierType: names=['int'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__setMode', quals=[] (at pp.c:4625)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__clear', quals=[], storage=['inline', 'static'] (at pp.c:4635)
    FuncDecl: quals=None (at pp.c:4635)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__clear', quals=[] (at pp.c:4635)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:4645)
    FuncDecl: quals=None (at pp.c:4645)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__disableEvents', quals=[] (at pp.c:4645)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__setClockSource', quals=[], storage=['inline', 'static'] (at pp.c:4650)
    FuncDecl: quals=None (at pp.c:4650)
      ParamList:  (at pp.c:4650)
        Decl: name='clockSource', quals=[], storage=[] (at pp.c:4650)
          TypeDecl: declname='clockSource', quals=[] (at pp.c:4650)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__setClockSource', quals=[] (at pp.c:4650)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Timer__setInputDivider', quals=[], storage=['inline', 'static'] (at pp.c:4655)
    FuncDecl: quals=None (at pp.c:4655)
      ParamList:  (at pp.c:4655)
        Decl: name='inputDivider', quals=[], storage=[] (at pp.c:4655)
          TypeDecl: declname='inputDivider', quals=[] (at pp.c:4655)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Timer__setInputDivider', quals=[] (at pp.c:4655)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__VectorTimerX0__fired', quals=[], storage=['inline', 'static'] (at pp.c:4660)
    FuncDecl: quals=None (at pp.c:4660)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__VectorTimerX0__fired', quals=[] (at pp.c:4660)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__VectorTimerX1__fired', quals=[], storage=['inline', 'static'] (at pp.c:4665)
    FuncDecl: quals=None (at pp.c:4665)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__VectorTimerX1__fired', quals=[] (at pp.c:4665)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Overflow__fired', quals=[], storage=['inline', 'static'] (at pp.c:4671)
    FuncDecl: quals=None (at pp.c:4671)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Overflow__fired', quals=[] (at pp.c:4671)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__0__Event__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:4680)
    FuncDecl: quals=None (at pp.c:4680)
      ParamList:  (at pp.c:4680)
        Decl: name='n', quals=[], storage=[] (at pp.c:4680)
          TypeDecl: declname='n', quals=[] (at pp.c:4680)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__0__Event__default__fired', quals=[] (at pp.c:4680)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Event__fired', quals=[], storage=['static'] (at pp.c:4682)
    FuncDecl: quals=None (at pp.c:4682)
      ParamList:  (at pp.c:4684)
        Decl: name='arg_0x1014afc98', quals=[], storage=[] (at pp.c:4684)
          TypeDecl: declname='arg_0x1014afc98', quals=[] (at pp.c:4684)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Event__fired', quals=[] (at pp.c:4682)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Timer__overflow', quals=[], storage=['static'] (at pp.c:4686)
    FuncDecl: quals=None (at pp.c:4686)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Timer__overflow', quals=[] (at pp.c:4686)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Timer__get', quals=[], storage=['static'] (at pp.c:4688)
    FuncDecl: quals=None (at pp.c:4688)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Timer__get', quals=[] (at pp.c:4688)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerP__1__Timer__isOverflowPending', quals=[], storage=['inline', 'static'] (at pp.c:4690)
    FuncDecl: quals=None (at pp.c:4690)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Timer__isOverflowPending', quals=[] (at pp.c:4690)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430TimerP__1__VectorTimerX0__fired', quals=[], storage=['inline', 'static'] (at pp.c:4692)
    FuncDecl: quals=None (at pp.c:4692)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__VectorTimerX0__fired', quals=[] (at pp.c:4692)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__VectorTimerX1__fired', quals=[], storage=['inline', 'static'] (at pp.c:4697)
    FuncDecl: quals=None (at pp.c:4697)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__VectorTimerX1__fired', quals=[] (at pp.c:4697)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Overflow__fired', quals=[], storage=['inline', 'static'] (at pp.c:4703)
    FuncDecl: quals=None (at pp.c:4703)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Overflow__fired', quals=[] (at pp.c:4703)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerP__1__Event__default__fired', quals=[], storage=['static'] (at pp.c:4712)
    FuncDecl: quals=None (at pp.c:4712)
      ParamList:  (at pp.c:4712)
        Decl: name='n', quals=[], storage=[] (at pp.c:4712)
          TypeDecl: declname='n', quals=[] (at pp.c:4712)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerP__1__Event__default__fired', quals=[] (at pp.c:4712)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Capture__captured', quals=[], storage=['static'] (at pp.c:4714)
    FuncDecl: quals=None (at pp.c:4714)
      ParamList:  (at pp.c:4714)
        Decl: name='time', quals=[], storage=[] (at pp.c:4714)
          TypeDecl: declname='time', quals=[] (at pp.c:4714)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Capture__captured', quals=[] (at pp.c:4714)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Compare__fired', quals=[], storage=['static'] (at pp.c:4716)
    FuncDecl: quals=None (at pp.c:4716)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Compare__fired', quals=[] (at pp.c:4716)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__0__cc_t', quals=[], storage=['typedef'] (at pp.c:4718)
    TypeDecl: declname='Msp430TimerCapComP__0__cc_t', quals=[] (at pp.c:4718)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:4720)
    FuncDecl: quals=None (at pp.c:4720)
      ParamList:  (at pp.c:4720)
        Decl: name='x', quals=[], storage=[] (at pp.c:4720)
          TypeDecl: declname='x', quals=[] (at pp.c:4720)
            IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__CC2int', quals=[] (at pp.c:4720)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:4721)
    FuncDecl: quals=None (at pp.c:4721)
      ParamList:  (at pp.c:4721)
        Decl: name='x', quals=[], storage=[] (at pp.c:4721)
          TypeDecl: declname='x', quals=[] (at pp.c:4721)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__int2CC', quals=[] (at pp.c:4721)
        IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:4723)
    FuncDecl: quals=None (at pp.c:4723)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Control__getControl', quals=[] (at pp.c:4723)
        IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__Control__setControl', quals=[], storage=['inline', 'static'] (at pp.c:4725)
    FuncDecl: quals=None (at pp.c:4725)
      ParamList:  (at pp.c:4725)
        Decl: name='x', quals=[], storage=[] (at pp.c:4725)
          TypeDecl: declname='x', quals=[] (at pp.c:4725)
            IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Control__setControl', quals=[] (at pp.c:4725)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:4727)
    FuncDecl: quals=None (at pp.c:4727)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Capture__getEvent', quals=[] (at pp.c:4727)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__0__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:4732)
    FuncDecl: quals=None (at pp.c:4732)
      ParamList:  (at pp.c:4732)
        Decl: name='x', quals=[], storage=[] (at pp.c:4732)
          TypeDecl: declname='x', quals=[] (at pp.c:4732)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Compare__setEvent', quals=[] (at pp.c:4732)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Event__fired', quals=[], storage=['static'] (at pp.c:4734)
    FuncDecl: quals=None (at pp.c:4734)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Event__fired', quals=[] (at pp.c:4734)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:4742)
    FuncDecl: quals=None (at pp.c:4742)
      ParamList:  (at pp.c:4742)
        Decl: name='n', quals=[], storage=[] (at pp.c:4742)
          TypeDecl: declname='n', quals=[] (at pp.c:4742)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Capture__default__captured', quals=[] (at pp.c:4742)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__0__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4750)
    FuncDecl: quals=None (at pp.c:4750)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__0__Timer__overflow', quals=[] (at pp.c:4750)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Capture__captured', quals=[], storage=['static'] (at pp.c:4752)
    FuncDecl: quals=None (at pp.c:4752)
      ParamList:  (at pp.c:4752)
        Decl: name='time', quals=[], storage=[] (at pp.c:4752)
          TypeDecl: declname='time', quals=[] (at pp.c:4752)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Capture__captured', quals=[] (at pp.c:4752)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Compare__fired', quals=[], storage=['static'] (at pp.c:4754)
    FuncDecl: quals=None (at pp.c:4754)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Compare__fired', quals=[] (at pp.c:4754)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__1__cc_t', quals=[], storage=['typedef'] (at pp.c:4756)
    TypeDecl: declname='Msp430TimerCapComP__1__cc_t', quals=[] (at pp.c:4756)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:4758)
    FuncDecl: quals=None (at pp.c:4758)
      ParamList:  (at pp.c:4758)
        Decl: name='x', quals=[], storage=[] (at pp.c:4758)
          TypeDecl: declname='x', quals=[] (at pp.c:4758)
            IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__CC2int', quals=[] (at pp.c:4758)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:4759)
    FuncDecl: quals=None (at pp.c:4759)
      ParamList:  (at pp.c:4759)
        Decl: name='x', quals=[], storage=[] (at pp.c:4759)
          TypeDecl: declname='x', quals=[] (at pp.c:4759)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__int2CC', quals=[] (at pp.c:4759)
        IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:4761)
    FuncDecl: quals=None (at pp.c:4761)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Control__getControl', quals=[] (at pp.c:4761)
        IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__Control__setControl', quals=[], storage=['inline', 'static'] (at pp.c:4763)
    FuncDecl: quals=None (at pp.c:4763)
      ParamList:  (at pp.c:4763)
        Decl: name='x', quals=[], storage=[] (at pp.c:4763)
          TypeDecl: declname='x', quals=[] (at pp.c:4763)
            IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Control__setControl', quals=[] (at pp.c:4763)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:4765)
    FuncDecl: quals=None (at pp.c:4765)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Capture__getEvent', quals=[] (at pp.c:4765)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__1__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:4770)
    FuncDecl: quals=None (at pp.c:4770)
      ParamList:  (at pp.c:4770)
        Decl: name='x', quals=[], storage=[] (at pp.c:4770)
          TypeDecl: declname='x', quals=[] (at pp.c:4770)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Compare__setEvent', quals=[] (at pp.c:4770)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Event__fired', quals=[], storage=['static'] (at pp.c:4772)
    FuncDecl: quals=None (at pp.c:4772)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Event__fired', quals=[] (at pp.c:4772)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:4780)
    FuncDecl: quals=None (at pp.c:4780)
      ParamList:  (at pp.c:4780)
        Decl: name='n', quals=[], storage=[] (at pp.c:4780)
          TypeDecl: declname='n', quals=[] (at pp.c:4780)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Capture__default__captured', quals=[] (at pp.c:4780)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__1__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4788)
    FuncDecl: quals=None (at pp.c:4788)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__1__Timer__overflow', quals=[] (at pp.c:4788)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Capture__captured', quals=[], storage=['static'] (at pp.c:4790)
    FuncDecl: quals=None (at pp.c:4790)
      ParamList:  (at pp.c:4790)
        Decl: name='time', quals=[], storage=[] (at pp.c:4790)
          TypeDecl: declname='time', quals=[] (at pp.c:4790)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Capture__captured', quals=[] (at pp.c:4790)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Compare__fired', quals=[], storage=['static'] (at pp.c:4792)
    FuncDecl: quals=None (at pp.c:4792)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Compare__fired', quals=[] (at pp.c:4792)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__2__cc_t', quals=[], storage=['typedef'] (at pp.c:4794)
    TypeDecl: declname='Msp430TimerCapComP__2__cc_t', quals=[] (at pp.c:4794)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:4797)
    FuncDecl: quals=None (at pp.c:4797)
      ParamList:  (at pp.c:4797)
        Decl: name='x', quals=[], storage=[] (at pp.c:4797)
          TypeDecl: declname='x', quals=[] (at pp.c:4797)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__int2CC', quals=[] (at pp.c:4797)
        IdentifierType: names=['Msp430TimerCapComP__2__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:4799)
    FuncDecl: quals=None (at pp.c:4799)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Control__getControl', quals=[] (at pp.c:4799)
        IdentifierType: names=['Msp430TimerCapComP__2__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:4801)
    FuncDecl: quals=None (at pp.c:4801)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Capture__getEvent', quals=[] (at pp.c:4801)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__2__Event__fired', quals=[], storage=['static'] (at pp.c:4803)
    FuncDecl: quals=None (at pp.c:4803)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Event__fired', quals=[] (at pp.c:4803)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:4811)
    FuncDecl: quals=None (at pp.c:4811)
      ParamList:  (at pp.c:4811)
        Decl: name='n', quals=[], storage=[] (at pp.c:4811)
          TypeDecl: declname='n', quals=[] (at pp.c:4811)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Capture__default__captured', quals=[] (at pp.c:4811)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:4815)
    FuncDecl: quals=None (at pp.c:4815)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Compare__default__fired', quals=[] (at pp.c:4815)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__2__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4819)
    FuncDecl: quals=None (at pp.c:4819)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__2__Timer__overflow', quals=[] (at pp.c:4819)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Capture__captured', quals=[], storage=['static'] (at pp.c:4821)
    FuncDecl: quals=None (at pp.c:4821)
      ParamList:  (at pp.c:4821)
        Decl: name='time', quals=[], storage=[] (at pp.c:4821)
          TypeDecl: declname='time', quals=[] (at pp.c:4821)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Capture__captured', quals=[] (at pp.c:4821)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Compare__fired', quals=[], storage=['static'] (at pp.c:4823)
    FuncDecl: quals=None (at pp.c:4823)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Compare__fired', quals=[] (at pp.c:4823)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Timer__get', quals=[], storage=['static'] (at pp.c:4825)
    FuncDecl: quals=None (at pp.c:4825)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Timer__get', quals=[] (at pp.c:4825)
        IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='Msp430TimerCapComP__3__cc_t', quals=[], storage=['typedef'] (at pp.c:4827)
    TypeDecl: declname='Msp430TimerCapComP__3__cc_t', quals=[] (at pp.c:4827)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:4829)
    FuncDecl: quals=None (at pp.c:4829)
      ParamList:  (at pp.c:4829)
        Decl: name='x', quals=[], storage=[] (at pp.c:4829)
          TypeDecl: declname='x', quals=[] (at pp.c:4829)
            IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__CC2int', quals=[] (at pp.c:4829)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:4830)
    FuncDecl: quals=None (at pp.c:4830)
      ParamList:  (at pp.c:4830)
        Decl: name='x', quals=[], storage=[] (at pp.c:4830)
          TypeDecl: declname='x', quals=[] (at pp.c:4830)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__int2CC', quals=[] (at pp.c:4830)
        IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__compareControl', quals=[], storage=['inline', 'static'] (at pp.c:4832)
    FuncDecl: quals=None (at pp.c:4832)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__compareControl', quals=[] (at pp.c:4832)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:4834)
    FuncDecl: quals=None (at pp.c:4834)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__getControl', quals=[] (at pp.c:4834)
        IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[], storage=['inline', 'static'] (at pp.c:4844)
    FuncDecl: quals=None (at pp.c:4844)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[] (at pp.c:4844)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[], storage=['inline', 'static'] (at pp.c:4854)
    FuncDecl: quals=None (at pp.c:4854)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[] (at pp.c:4854)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__enableEvents', quals=[], storage=['inline', 'static'] (at pp.c:4856)
    FuncDecl: quals=None (at pp.c:4856)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__enableEvents', quals=[] (at pp.c:4856)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Control__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:4861)
    FuncDecl: quals=None (at pp.c:4861)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Control__disableEvents', quals=[] (at pp.c:4861)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:4863)
    FuncDecl: quals=None (at pp.c:4863)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Capture__getEvent', quals=[] (at pp.c:4863)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__3__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:4868)
    FuncDecl: quals=None (at pp.c:4868)
      ParamList:  (at pp.c:4868)
        Decl: name='x', quals=[], storage=[] (at pp.c:4868)
          TypeDecl: declname='x', quals=[] (at pp.c:4868)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEvent', quals=[] (at pp.c:4868)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[], storage=['inline', 'static'] (at pp.c:4878)
    FuncDecl: quals=None (at pp.c:4878)
      ParamList:  (at pp.c:4878)
        Decl: name='x', quals=[], storage=[] (at pp.c:4878)
          TypeDecl: declname='x', quals=[] (at pp.c:4878)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[] (at pp.c:4878)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:4880)
    FuncDecl: quals=None (at pp.c:4880)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Event__fired', quals=[] (at pp.c:4880)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:4888)
    FuncDecl: quals=None (at pp.c:4888)
      ParamList:  (at pp.c:4888)
        Decl: name='n', quals=[], storage=[] (at pp.c:4888)
          TypeDecl: declname='n', quals=[] (at pp.c:4888)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Capture__default__captured', quals=[] (at pp.c:4888)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__3__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4896)
    FuncDecl: quals=None (at pp.c:4896)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__3__Timer__overflow', quals=[] (at pp.c:4896)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Capture__captured', quals=[], storage=['static'] (at pp.c:4898)
    FuncDecl: quals=None (at pp.c:4898)
      ParamList:  (at pp.c:4898)
        Decl: name='time', quals=[], storage=[] (at pp.c:4898)
          TypeDecl: declname='time', quals=[] (at pp.c:4898)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Capture__captured', quals=[] (at pp.c:4898)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Compare__fired', quals=[], storage=['static'] (at pp.c:4900)
    FuncDecl: quals=None (at pp.c:4900)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Compare__fired', quals=[] (at pp.c:4900)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__4__cc_t', quals=[], storage=['typedef'] (at pp.c:4902)
    TypeDecl: declname='Msp430TimerCapComP__4__cc_t', quals=[] (at pp.c:4902)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:4904)
    FuncDecl: quals=None (at pp.c:4904)
      ParamList:  (at pp.c:4904)
        Decl: name='x', quals=[], storage=[] (at pp.c:4904)
          TypeDecl: declname='x', quals=[] (at pp.c:4904)
            IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__CC2int', quals=[] (at pp.c:4904)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:4905)
    FuncDecl: quals=None (at pp.c:4905)
      ParamList:  (at pp.c:4905)
        Decl: name='x', quals=[], storage=[] (at pp.c:4905)
          TypeDecl: declname='x', quals=[] (at pp.c:4905)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__int2CC', quals=[] (at pp.c:4905)
        IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__captureControl', quals=[], storage=['inline', 'static'] (at pp.c:4907)
    FuncDecl: quals=None (at pp.c:4907)
      ParamList:  (at pp.c:4907)
        Decl: name='l_cm', quals=[], storage=[] (at pp.c:4907)
          TypeDecl: declname='l_cm', quals=[] (at pp.c:4907)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__captureControl', quals=[] (at pp.c:4907)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:4909)
    FuncDecl: quals=None (at pp.c:4909)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__getControl', quals=[] (at pp.c:4909)
        IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__clearPendingInterrupt', quals=[], storage=['inline', 'static'] (at pp.c:4919)
    FuncDecl: quals=None (at pp.c:4919)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__clearPendingInterrupt', quals=[] (at pp.c:4919)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__setControlAsCapture', quals=[], storage=['inline', 'static'] (at pp.c:4921)
    FuncDecl: quals=None (at pp.c:4921)
      ParamList:  (at pp.c:4921)
        Decl: name='cm', quals=[], storage=[] (at pp.c:4921)
          TypeDecl: declname='cm', quals=[] (at pp.c:4921)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__setControlAsCapture', quals=[] (at pp.c:4921)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__enableEvents', quals=[], storage=['inline', 'static'] (at pp.c:4923)
    FuncDecl: quals=None (at pp.c:4923)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__enableEvents', quals=[] (at pp.c:4923)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Control__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:4928)
    FuncDecl: quals=None (at pp.c:4928)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Control__disableEvents', quals=[] (at pp.c:4928)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:4930)
    FuncDecl: quals=None (at pp.c:4930)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Capture__getEvent', quals=[] (at pp.c:4930)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__4__Capture__clearOverflow', quals=[], storage=['inline', 'static'] (at pp.c:4932)
    FuncDecl: quals=None (at pp.c:4932)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Capture__clearOverflow', quals=[] (at pp.c:4932)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:4937)
    FuncDecl: quals=None (at pp.c:4937)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Event__fired', quals=[] (at pp.c:4937)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:4939)
    FuncDecl: quals=None (at pp.c:4939)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Compare__default__fired', quals=[] (at pp.c:4939)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__4__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:4943)
    FuncDecl: quals=None (at pp.c:4943)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__4__Timer__overflow', quals=[] (at pp.c:4943)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Capture__captured', quals=[], storage=['static'] (at pp.c:4945)
    FuncDecl: quals=None (at pp.c:4945)
      ParamList:  (at pp.c:4945)
        Decl: name='time', quals=[], storage=[] (at pp.c:4945)
          TypeDecl: declname='time', quals=[] (at pp.c:4945)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Capture__captured', quals=[] (at pp.c:4945)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Compare__fired', quals=[], storage=['static'] (at pp.c:4947)
    FuncDecl: quals=None (at pp.c:4947)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Compare__fired', quals=[] (at pp.c:4947)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Timer__get', quals=[], storage=['static'] (at pp.c:4949)
    FuncDecl: quals=None (at pp.c:4949)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Timer__get', quals=[] (at pp.c:4949)
        IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='Msp430TimerCapComP__5__cc_t', quals=[], storage=['typedef'] (at pp.c:4951)
    TypeDecl: declname='Msp430TimerCapComP__5__cc_t', quals=[] (at pp.c:4951)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:4953)
    FuncDecl: quals=None (at pp.c:4953)
      ParamList:  (at pp.c:4953)
        Decl: name='x', quals=[], storage=[] (at pp.c:4953)
          TypeDecl: declname='x', quals=[] (at pp.c:4953)
            IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__CC2int', quals=[] (at pp.c:4953)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:4954)
    FuncDecl: quals=None (at pp.c:4954)
      ParamList:  (at pp.c:4954)
        Decl: name='x', quals=[], storage=[] (at pp.c:4954)
          TypeDecl: declname='x', quals=[] (at pp.c:4954)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__int2CC', quals=[] (at pp.c:4954)
        IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__compareControl', quals=[], storage=['inline', 'static'] (at pp.c:4956)
    FuncDecl: quals=None (at pp.c:4956)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__compareControl', quals=[] (at pp.c:4956)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:4958)
    FuncDecl: quals=None (at pp.c:4958)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__getControl', quals=[] (at pp.c:4958)
        IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__clearPendingInterrupt', quals=[], storage=['inline', 'static'] (at pp.c:4968)
    FuncDecl: quals=None (at pp.c:4968)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__clearPendingInterrupt', quals=[] (at pp.c:4968)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__setControlAsCompare', quals=[], storage=['inline', 'static'] (at pp.c:4978)
    FuncDecl: quals=None (at pp.c:4978)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__setControlAsCompare', quals=[] (at pp.c:4978)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__enableEvents', quals=[], storage=['inline', 'static'] (at pp.c:4980)
    FuncDecl: quals=None (at pp.c:4980)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__enableEvents', quals=[] (at pp.c:4980)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Control__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:4985)
    FuncDecl: quals=None (at pp.c:4985)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Control__disableEvents', quals=[] (at pp.c:4985)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:4987)
    FuncDecl: quals=None (at pp.c:4987)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Capture__getEvent', quals=[] (at pp.c:4987)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__5__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:4992)
    FuncDecl: quals=None (at pp.c:4992)
      ParamList:  (at pp.c:4992)
        Decl: name='x', quals=[], storage=[] (at pp.c:4992)
          TypeDecl: declname='x', quals=[] (at pp.c:4992)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Compare__setEvent', quals=[] (at pp.c:4992)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Compare__setEventFromNow', quals=[], storage=['inline', 'static'] (at pp.c:5002)
    FuncDecl: quals=None (at pp.c:5002)
      ParamList:  (at pp.c:5002)
        Decl: name='x', quals=[], storage=[] (at pp.c:5002)
          TypeDecl: declname='x', quals=[] (at pp.c:5002)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Compare__setEventFromNow', quals=[] (at pp.c:5002)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:5004)
    FuncDecl: quals=None (at pp.c:5004)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Event__fired', quals=[] (at pp.c:5004)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:5012)
    FuncDecl: quals=None (at pp.c:5012)
      ParamList:  (at pp.c:5012)
        Decl: name='n', quals=[], storage=[] (at pp.c:5012)
          TypeDecl: declname='n', quals=[] (at pp.c:5012)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Capture__default__captured', quals=[] (at pp.c:5012)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__5__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:5020)
    FuncDecl: quals=None (at pp.c:5020)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__5__Timer__overflow', quals=[] (at pp.c:5020)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Capture__captured', quals=[], storage=['static'] (at pp.c:5022)
    FuncDecl: quals=None (at pp.c:5022)
      ParamList:  (at pp.c:5022)
        Decl: name='time', quals=[], storage=[] (at pp.c:5022)
          TypeDecl: declname='time', quals=[] (at pp.c:5022)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Capture__captured', quals=[] (at pp.c:5022)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Compare__fired', quals=[], storage=['static'] (at pp.c:5024)
    FuncDecl: quals=None (at pp.c:5024)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Compare__fired', quals=[] (at pp.c:5024)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Timer__get', quals=[], storage=['static'] (at pp.c:5026)
    FuncDecl: quals=None (at pp.c:5026)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Timer__get', quals=[] (at pp.c:5026)
        IdentifierType: names=['uint16_t'] (at None)
  Typedef: name='Msp430TimerCapComP__6__cc_t', quals=[], storage=['typedef'] (at pp.c:5028)
    TypeDecl: declname='Msp430TimerCapComP__6__cc_t', quals=[] (at pp.c:5028)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:5031)
    FuncDecl: quals=None (at pp.c:5031)
      ParamList:  (at pp.c:5031)
        Decl: name='x', quals=[], storage=[] (at pp.c:5031)
          TypeDecl: declname='x', quals=[] (at pp.c:5031)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__int2CC', quals=[] (at pp.c:5031)
        IdentifierType: names=['Msp430TimerCapComP__6__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:5033)
    FuncDecl: quals=None (at pp.c:5033)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Control__getControl', quals=[] (at pp.c:5033)
        IdentifierType: names=['Msp430TimerCapComP__6__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__Control__clearPendingInterrupt', quals=[], storage=['inline', 'static'] (at pp.c:5043)
    FuncDecl: quals=None (at pp.c:5043)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Control__clearPendingInterrupt', quals=[] (at pp.c:5043)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Control__enableEvents', quals=[], storage=['inline', 'static'] (at pp.c:5045)
    FuncDecl: quals=None (at pp.c:5045)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Control__enableEvents', quals=[] (at pp.c:5045)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Control__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:5050)
    FuncDecl: quals=None (at pp.c:5050)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Control__disableEvents', quals=[] (at pp.c:5050)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:5052)
    FuncDecl: quals=None (at pp.c:5052)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Capture__getEvent', quals=[] (at pp.c:5052)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__6__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:5057)
    FuncDecl: quals=None (at pp.c:5057)
      ParamList:  (at pp.c:5057)
        Decl: name='x', quals=[], storage=[] (at pp.c:5057)
          TypeDecl: declname='x', quals=[] (at pp.c:5057)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Compare__setEvent', quals=[] (at pp.c:5057)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Compare__setEventFromNow', quals=[], storage=['inline', 'static'] (at pp.c:5067)
    FuncDecl: quals=None (at pp.c:5067)
      ParamList:  (at pp.c:5067)
        Decl: name='x', quals=[], storage=[] (at pp.c:5067)
          TypeDecl: declname='x', quals=[] (at pp.c:5067)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Compare__setEventFromNow', quals=[] (at pp.c:5067)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:5069)
    FuncDecl: quals=None (at pp.c:5069)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Event__fired', quals=[] (at pp.c:5069)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:5077)
    FuncDecl: quals=None (at pp.c:5077)
      ParamList:  (at pp.c:5077)
        Decl: name='n', quals=[], storage=[] (at pp.c:5077)
          TypeDecl: declname='n', quals=[] (at pp.c:5077)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Capture__default__captured', quals=[] (at pp.c:5077)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__6__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:5085)
    FuncDecl: quals=None (at pp.c:5085)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__6__Timer__overflow', quals=[] (at pp.c:5085)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Capture__captured', quals=[], storage=['static'] (at pp.c:5087)
    FuncDecl: quals=None (at pp.c:5087)
      ParamList:  (at pp.c:5087)
        Decl: name='time', quals=[], storage=[] (at pp.c:5087)
          TypeDecl: declname='time', quals=[] (at pp.c:5087)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Capture__captured', quals=[] (at pp.c:5087)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Compare__fired', quals=[], storage=['static'] (at pp.c:5089)
    FuncDecl: quals=None (at pp.c:5089)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Compare__fired', quals=[] (at pp.c:5089)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__7__cc_t', quals=[], storage=['typedef'] (at pp.c:5091)
    TypeDecl: declname='Msp430TimerCapComP__7__cc_t', quals=[] (at pp.c:5091)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:5094)
    FuncDecl: quals=None (at pp.c:5094)
      ParamList:  (at pp.c:5094)
        Decl: name='x', quals=[], storage=[] (at pp.c:5094)
          TypeDecl: declname='x', quals=[] (at pp.c:5094)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__int2CC', quals=[] (at pp.c:5094)
        IdentifierType: names=['Msp430TimerCapComP__7__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:5096)
    FuncDecl: quals=None (at pp.c:5096)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Control__getControl', quals=[] (at pp.c:5096)
        IdentifierType: names=['Msp430TimerCapComP__7__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:5098)
    FuncDecl: quals=None (at pp.c:5098)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Capture__getEvent', quals=[] (at pp.c:5098)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__7__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:5100)
    FuncDecl: quals=None (at pp.c:5100)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Event__fired', quals=[] (at pp.c:5100)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:5108)
    FuncDecl: quals=None (at pp.c:5108)
      ParamList:  (at pp.c:5108)
        Decl: name='n', quals=[], storage=[] (at pp.c:5108)
          TypeDecl: declname='n', quals=[] (at pp.c:5108)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Capture__default__captured', quals=[] (at pp.c:5108)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:5112)
    FuncDecl: quals=None (at pp.c:5112)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Compare__default__fired', quals=[] (at pp.c:5112)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__7__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:5116)
    FuncDecl: quals=None (at pp.c:5116)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__7__Timer__overflow', quals=[] (at pp.c:5116)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Capture__captured', quals=[], storage=['static'] (at pp.c:5118)
    FuncDecl: quals=None (at pp.c:5118)
      ParamList:  (at pp.c:5118)
        Decl: name='time', quals=[], storage=[] (at pp.c:5118)
          TypeDecl: declname='time', quals=[] (at pp.c:5118)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Capture__captured', quals=[] (at pp.c:5118)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Compare__fired', quals=[], storage=['static'] (at pp.c:5120)
    FuncDecl: quals=None (at pp.c:5120)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Compare__fired', quals=[] (at pp.c:5120)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__8__cc_t', quals=[], storage=['typedef'] (at pp.c:5122)
    TypeDecl: declname='Msp430TimerCapComP__8__cc_t', quals=[] (at pp.c:5122)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:5125)
    FuncDecl: quals=None (at pp.c:5125)
      ParamList:  (at pp.c:5125)
        Decl: name='x', quals=[], storage=[] (at pp.c:5125)
          TypeDecl: declname='x', quals=[] (at pp.c:5125)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__int2CC', quals=[] (at pp.c:5125)
        IdentifierType: names=['Msp430TimerCapComP__8__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:5127)
    FuncDecl: quals=None (at pp.c:5127)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Control__getControl', quals=[] (at pp.c:5127)
        IdentifierType: names=['Msp430TimerCapComP__8__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:5129)
    FuncDecl: quals=None (at pp.c:5129)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Capture__getEvent', quals=[] (at pp.c:5129)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__8__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:5131)
    FuncDecl: quals=None (at pp.c:5131)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Event__fired', quals=[] (at pp.c:5131)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:5139)
    FuncDecl: quals=None (at pp.c:5139)
      ParamList:  (at pp.c:5139)
        Decl: name='n', quals=[], storage=[] (at pp.c:5139)
          TypeDecl: declname='n', quals=[] (at pp.c:5139)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Capture__default__captured', quals=[] (at pp.c:5139)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:5143)
    FuncDecl: quals=None (at pp.c:5143)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Compare__default__fired', quals=[] (at pp.c:5143)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__8__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:5147)
    FuncDecl: quals=None (at pp.c:5147)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__8__Timer__overflow', quals=[] (at pp.c:5147)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Capture__captured', quals=[], storage=['static'] (at pp.c:5149)
    FuncDecl: quals=None (at pp.c:5149)
      ParamList:  (at pp.c:5149)
        Decl: name='time', quals=[], storage=[] (at pp.c:5149)
          TypeDecl: declname='time', quals=[] (at pp.c:5149)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Capture__captured', quals=[] (at pp.c:5149)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Compare__fired', quals=[], storage=['static'] (at pp.c:5151)
    FuncDecl: quals=None (at pp.c:5151)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Compare__fired', quals=[] (at pp.c:5151)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430TimerCapComP__9__cc_t', quals=[], storage=['typedef'] (at pp.c:5153)
    TypeDecl: declname='Msp430TimerCapComP__9__cc_t', quals=[] (at pp.c:5153)
      IdentifierType: names=['msp430_compare_control_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:5156)
    FuncDecl: quals=None (at pp.c:5156)
      ParamList:  (at pp.c:5156)
        Decl: name='x', quals=[], storage=[] (at pp.c:5156)
          TypeDecl: declname='x', quals=[] (at pp.c:5156)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__int2CC', quals=[] (at pp.c:5156)
        IdentifierType: names=['Msp430TimerCapComP__9__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:5158)
    FuncDecl: quals=None (at pp.c:5158)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Control__getControl', quals=[] (at pp.c:5158)
        IdentifierType: names=['Msp430TimerCapComP__9__cc_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:5160)
    FuncDecl: quals=None (at pp.c:5160)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Capture__getEvent', quals=[] (at pp.c:5160)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430TimerCapComP__9__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:5162)
    FuncDecl: quals=None (at pp.c:5162)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Event__fired', quals=[] (at pp.c:5162)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:5170)
    FuncDecl: quals=None (at pp.c:5170)
      ParamList:  (at pp.c:5170)
        Decl: name='n', quals=[], storage=[] (at pp.c:5170)
          TypeDecl: declname='n', quals=[] (at pp.c:5170)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Capture__default__captured', quals=[] (at pp.c:5170)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:5174)
    FuncDecl: quals=None (at pp.c:5174)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Compare__default__fired', quals=[] (at pp.c:5174)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCapComP__9__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:5178)
    FuncDecl: quals=None (at pp.c:5178)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCapComP__9__Timer__overflow', quals=[] (at pp.c:5178)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCommonP__VectorTimerB1__fired', quals=[], storage=['static'] (at pp.c:5180)
    FuncDecl: quals=None (at pp.c:5180)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCommonP__VectorTimerB1__fired', quals=[] (at pp.c:5180)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCommonP__VectorTimerA0__fired', quals=[], storage=['static'] (at pp.c:5182)
    FuncDecl: quals=None (at pp.c:5182)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCommonP__VectorTimerA0__fired', quals=[] (at pp.c:5182)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCommonP__VectorTimerA1__fired', quals=[], storage=['static'] (at pp.c:5184)
    FuncDecl: quals=None (at pp.c:5184)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCommonP__VectorTimerA1__fired', quals=[] (at pp.c:5184)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430TimerCommonP__VectorTimerB0__fired', quals=[], storage=['static'] (at pp.c:5186)
    FuncDecl: quals=None (at pp.c:5186)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430TimerCommonP__VectorTimerB0__fired', quals=[] (at pp.c:5186)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_TIMERA0_VECTOR', quals=[], storage=[] (at pp.c:5188)
    FuncDecl: quals=None (at pp.c:5188)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_TIMERA0_VECTOR', quals=[] (at pp.c:5188)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_TIMERA1_VECTOR', quals=[], storage=[] (at pp.c:5189)
    FuncDecl: quals=None (at pp.c:5189)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_TIMERA1_VECTOR', quals=[] (at pp.c:5189)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_TIMERB0_VECTOR', quals=[], storage=[] (at pp.c:5190)
    FuncDecl: quals=None (at pp.c:5190)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_TIMERB0_VECTOR', quals=[] (at pp.c:5190)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_TIMERB1_VECTOR', quals=[], storage=[] (at pp.c:5191)
    FuncDecl: quals=None (at pp.c:5191)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_TIMERB1_VECTOR', quals=[] (at pp.c:5191)
        IdentifierType: names=['void'] (at None)
  Decl: name='McuSleepC__McuPowerOverride__lowestState', quals=[], storage=['static'] (at pp.c:5193)
    FuncDecl: quals=None (at pp.c:5193)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='McuSleepC__McuPowerOverride__lowestState', quals=[] (at pp.c:5193)
        IdentifierType: names=['mcu_power_t'] (at None)
  Decl: name='McuSleepC__dirty', quals=[], storage=[] (at pp.c:5195)
    TypeDecl: declname='McuSleepC__dirty', quals=[] (at pp.c:5195)
      IdentifierType: names=['bool'] (at None)
    ID: name='TRUE' (at pp.c:5195)
  Decl: name='McuSleepC__powerState', quals=[], storage=[] (at pp.c:5196)
    TypeDecl: declname='McuSleepC__powerState', quals=[] (at pp.c:5196)
      IdentifierType: names=['mcu_power_t'] (at None)
    ID: name='MSP430_POWER_ACTIVE' (at pp.c:5196)
  Decl: name='McuSleepC__msp430PowerBits', quals=['const'], storage=[] (at pp.c:5201)
    ArrayDecl:  (at pp.c:5201)
      TypeDecl: declname='McuSleepC__msp430PowerBits', quals=['const'] (at pp.c:5201)
        IdentifierType: names=['uint16_t'] (at None)
      BinaryOp: op='+' (at pp.c:5201)
        ID: name='MSP430_POWER_LPM4' (at pp.c:5201)
        Constant: type='int', value='1' (at pp.c:5201)
    ExprList:  (at pp.c:5202)
      Constant: type='int', value='0' (at pp.c:5202)
      Constant: type='int', value='0x0010' (at pp.c:5203)
      BinaryOp: op='+' (at pp.c:5204)
        Constant: type='int', value='0x0040' (at pp.c:5204)
        Constant: type='int', value='0x0010' (at pp.c:5204)
      BinaryOp: op='+' (at pp.c:5205)
        Constant: type='int', value='0x0080' (at pp.c:5205)
        Constant: type='int', value='0x0010' (at pp.c:5205)
      BinaryOp: op='+' (at pp.c:5206)
        BinaryOp: op='+' (at pp.c:5206)
          Constant: type='int', value='0x0080' (at pp.c:5206)
          Constant: type='int', value='0x0040' (at pp.c:5206)
        Constant: type='int', value='0x0010' (at pp.c:5206)
      BinaryOp: op='+' (at pp.c:5207)
        BinaryOp: op='+' (at pp.c:5207)
          BinaryOp: op='+' (at pp.c:5207)
            Constant: type='int', value='0x0080' (at pp.c:5207)
            Constant: type='int', value='0x0040' (at pp.c:5207)
          Constant: type='int', value='0x0020' (at pp.c:5207)
        Constant: type='int', value='0x0010' (at pp.c:5207)
  Decl: name='McuSleepC__getPowerState', quals=[], storage=['inline', 'static'] (at pp.c:5210)
    FuncDecl: quals=None (at pp.c:5210)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='McuSleepC__getPowerState', quals=[] (at pp.c:5210)
        IdentifierType: names=['mcu_power_t'] (at None)
  Decl: name='McuSleepC__computePowerState', quals=[], storage=['inline', 'static'] (at pp.c:5212)
    FuncDecl: quals=None (at pp.c:5212)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='McuSleepC__computePowerState', quals=[] (at pp.c:5212)
        IdentifierType: names=['void'] (at None)
  Decl: name='McuSleepC__McuSleep__sleep', quals=[], storage=['inline', 'static'] (at pp.c:5217)
    FuncDecl: quals=None (at pp.c:5217)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='McuSleepC__McuSleep__sleep', quals=[] (at pp.c:5217)
        IdentifierType: names=['void'] (at None)
  Decl: name='MotePlatformC__SubInit__init', quals=[], storage=['static'] (at pp.c:5219)
    FuncDecl: quals=None (at pp.c:5219)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='MotePlatformC__SubInit__init', quals=[] (at pp.c:5219)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='MotePlatformC__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:5221)
    FuncDecl: quals=None (at pp.c:5221)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='MotePlatformC__Init__init', quals=[] (at pp.c:5221)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='MotePlatformC__SubInit__default__init', quals=[], storage=['inline', 'static'] (at pp.c:5223)
    FuncDecl: quals=None (at pp.c:5223)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='MotePlatformC__SubInit__default__init', quals=[] (at pp.c:5223)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='RealMainP__SoftwareInit__init', quals=[], storage=['static'] (at pp.c:5225)
    FuncDecl: quals=None (at pp.c:5225)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__SoftwareInit__init', quals=[] (at pp.c:5225)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='RealMainP__Boot__booted', quals=[], storage=['static'] (at pp.c:5227)
    FuncDecl: quals=None (at pp.c:5227)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__Boot__booted', quals=[] (at pp.c:5227)
        IdentifierType: names=['void'] (at None)
  Decl: name='RealMainP__PlatformInit__init', quals=[], storage=['static'] (at pp.c:5229)
    FuncDecl: quals=None (at pp.c:5229)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__PlatformInit__init', quals=[] (at pp.c:5229)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='RealMainP__Scheduler__init', quals=[], storage=['static'] (at pp.c:5231)
    FuncDecl: quals=None (at pp.c:5231)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__Scheduler__init', quals=[] (at pp.c:5231)
        IdentifierType: names=['void'] (at None)
  Decl: name='RealMainP__Scheduler__taskLoop', quals=[], storage=['static'] (at pp.c:5233)
    FuncDecl: quals=None (at pp.c:5233)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__Scheduler__taskLoop', quals=[] (at pp.c:5233)
        IdentifierType: names=['void'] (at None)
  Decl: name='RealMainP__Scheduler__runNextTask', quals=[], storage=['static'] (at pp.c:5235)
    FuncDecl: quals=None (at pp.c:5235)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RealMainP__Scheduler__runNextTask', quals=[] (at pp.c:5235)
        IdentifierType: names=['bool'] (at None)
  Decl: name='main', quals=[], storage=[] (at pp.c:5237)
    FuncDecl: quals=None (at pp.c:5237)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='main', quals=[] (at pp.c:5237)
        IdentifierType: names=['int'] (at None)
  Decl: name='SchedulerBasicP__TaskBasic__runTask', quals=[], storage=['static'] (at pp.c:5239)
    FuncDecl: quals=None (at pp.c:5239)
      ParamList:  (at pp.c:5241)
        Decl: name='arg_0x101333340', quals=[], storage=[] (at pp.c:5241)
          TypeDecl: declname='arg_0x101333340', quals=[] (at pp.c:5241)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__TaskBasic__runTask', quals=[] (at pp.c:5239)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__McuSleep__sleep', quals=[], storage=['static'] (at pp.c:5243)
    FuncDecl: quals=None (at pp.c:5243)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__McuSleep__sleep', quals=[] (at pp.c:5243)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:5245)
    Enum: name='SchedulerBasicP____nesc_unnamed4322' (at pp.c:5245)
      EnumeratorList:  (at pp.c:5247)
        Enumerator: name='SchedulerBasicP__NUM_TASKS' (at pp.c:5247)
          Constant: type='int', value='20U' (at pp.c:5247)
        Enumerator: name='SchedulerBasicP__NO_TASK' (at pp.c:5248)
          Constant: type='int', value='255' (at pp.c:5248)
  Decl: name='SchedulerBasicP__m_head', quals=[], storage=[] (at pp.c:5251)
    TypeDecl: declname='SchedulerBasicP__m_head', quals=[] (at pp.c:5251)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SchedulerBasicP__m_tail', quals=[], storage=[] (at pp.c:5252)
    TypeDecl: declname='SchedulerBasicP__m_tail', quals=[] (at pp.c:5252)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SchedulerBasicP__m_next', quals=[], storage=[] (at pp.c:5253)
    ArrayDecl:  (at pp.c:5253)
      TypeDecl: declname='SchedulerBasicP__m_next', quals=[] (at pp.c:5253)
        IdentifierType: names=['uint8_t'] (at None)
      ID: name='SchedulerBasicP__NUM_TASKS' (at pp.c:5253)
  Decl: name='SchedulerBasicP__popTask', quals=[], storage=['__inline', 'static'] (at pp.c:5262)
    FuncDecl: quals=None (at pp.c:5262)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__popTask', quals=[] (at pp.c:5262)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SchedulerBasicP__isWaiting', quals=[], storage=['inline', 'static'] (at pp.c:5264)
    FuncDecl: quals=None (at pp.c:5264)
      ParamList:  (at pp.c:5264)
        Decl: name='id', quals=[], storage=[] (at pp.c:5264)
          TypeDecl: declname='id', quals=[] (at pp.c:5264)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__isWaiting', quals=[] (at pp.c:5264)
        IdentifierType: names=['bool'] (at None)
  Decl: name='SchedulerBasicP__pushTask', quals=[], storage=['inline', 'static'] (at pp.c:5269)
    FuncDecl: quals=None (at pp.c:5269)
      ParamList:  (at pp.c:5269)
        Decl: name='id', quals=[], storage=[] (at pp.c:5269)
          TypeDecl: declname='id', quals=[] (at pp.c:5269)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__pushTask', quals=[] (at pp.c:5269)
        IdentifierType: names=['bool'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__init', quals=[], storage=['inline', 'static'] (at pp.c:5271)
    FuncDecl: quals=None (at pp.c:5271)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__init', quals=[] (at pp.c:5271)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__runNextTask', quals=[], storage=['static'] (at pp.c:5281)
    FuncDecl: quals=None (at pp.c:5281)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__runNextTask', quals=[] (at pp.c:5281)
        IdentifierType: names=['bool'] (at None)
  Decl: name='SchedulerBasicP__Scheduler__taskLoop', quals=[], storage=['inline', 'static'] (at pp.c:5283)
    FuncDecl: quals=None (at pp.c:5283)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SchedulerBasicP__Scheduler__taskLoop', quals=[] (at pp.c:5283)
        IdentifierType: names=['void'] (at None)
  Decl: name='SchedulerBasicP__TaskBasic__postTask', quals=[], storage=['static'] (at pp.c:5285)
    FuncDecl: quals=None (at pp.c:5285)
      ParamList:  (at pp.c:5285)
        Decl: name='id', quals=[], storage=[] (at pp.c:5285)
          TypeDecl: declname='id', quals=[] (at pp.c:5285)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__TaskBasic__postTask', quals=[] (at pp.c:5285)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SchedulerBasicP__TaskBasic__default__runTask', quals=[], storage=['static'] (at pp.c:5290)
    FuncDecl: quals=None (at pp.c:5290)
      ParamList:  (at pp.c:5290)
        Decl: name='id', quals=[], storage=[] (at pp.c:5290)
          TypeDecl: declname='id', quals=[] (at pp.c:5290)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SchedulerBasicP__TaskBasic__default__runTask', quals=[] (at pp.c:5290)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__SplitControl__startDone', quals=[], storage=['static'] (at pp.c:5292)
    FuncDecl: quals=None (at pp.c:5292)
      ParamList:  (at pp.c:5292)
        Decl: name='error', quals=[], storage=[] (at pp.c:5292)
          TypeDecl: declname='error', quals=[] (at pp.c:5292)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SplitControl__startDone', quals=[] (at pp.c:5292)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__SplitControl__stopDone', quals=[], storage=['static'] (at pp.c:5294)
    FuncDecl: quals=None (at pp.c:5294)
      ParamList:  (at pp.c:5294)
        Decl: name='error', quals=[], storage=[] (at pp.c:5294)
          TypeDecl: declname='error', quals=[] (at pp.c:5294)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SplitControl__stopDone', quals=[] (at pp.c:5294)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__RadioBackoff__requestCca', quals=[], storage=['static'] (at pp.c:5296)
    FuncDecl: quals=None (at pp.c:5296)
      ParamList:  (at pp.c:5296)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5296)
          PtrDecl: quals=[] (at pp.c:5296)
            TypeDecl: declname='msg', quals=[] (at pp.c:5296)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__RadioBackoff__requestCca', quals=[] (at pp.c:5296)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__RadioBackoff__requestInitialBackoff', quals=[], storage=['static'] (at pp.c:5298)
    FuncDecl: quals=None (at pp.c:5298)
      ParamList:  (at pp.c:5298)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5298)
          PtrDecl: quals=[] (at pp.c:5298)
            TypeDecl: declname='msg', quals=[] (at pp.c:5298)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__RadioBackoff__requestInitialBackoff', quals=[] (at pp.c:5298)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__RadioBackoff__requestCongestionBackoff', quals=[], storage=['static'] (at pp.c:5305)
    FuncDecl: quals=None (at pp.c:5305)
      ParamList:  (at pp.c:5305)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5305)
          PtrDecl: quals=[] (at pp.c:5305)
            TypeDecl: declname='msg', quals=[] (at pp.c:5305)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__RadioBackoff__requestCongestionBackoff', quals=[] (at pp.c:5305)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__SubBackoff__setCongestionBackoff', quals=[], storage=['static'] (at pp.c:5307)
    FuncDecl: quals=None (at pp.c:5307)
      ParamList:  (at pp.c:5307)
        Decl: name='backoffTime', quals=[], storage=[] (at pp.c:5307)
          TypeDecl: declname='backoffTime', quals=[] (at pp.c:5307)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SubBackoff__setCongestionBackoff', quals=[] (at pp.c:5307)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__SubBackoff__setInitialBackoff', quals=[], storage=['static'] (at pp.c:5309)
    FuncDecl: quals=None (at pp.c:5309)
      ParamList:  (at pp.c:5309)
        Decl: name='backoffTime', quals=[], storage=[] (at pp.c:5309)
          TypeDecl: declname='backoffTime', quals=[] (at pp.c:5309)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SubBackoff__setInitialBackoff', quals=[] (at pp.c:5309)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__CC2420Transmit__send', quals=[], storage=['static'] (at pp.c:5311)
    FuncDecl: quals=None (at pp.c:5311)
      ParamList:  (at pp.c:5311)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:5311)
          PtrDecl: quals=[] (at pp.c:5311)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:5311)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='useCca', quals=[], storage=[] (at pp.c:5311)
          TypeDecl: declname='useCca', quals=[] (at pp.c:5311)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Transmit__send', quals=[] (at pp.c:5311)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__Send__sendDone', quals=[], storage=['static'] (at pp.c:5313)
    FuncDecl: quals=None (at pp.c:5313)
      ParamList:  (at pp.c:5315)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5315)
          PtrDecl: quals=[] (at pp.c:5315)
            TypeDecl: declname='msg', quals=[] (at pp.c:5315)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:5319)
          TypeDecl: declname='error', quals=[] (at pp.c:5319)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__Send__sendDone', quals=[] (at pp.c:5313)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__Random__rand16', quals=[], storage=['static'] (at pp.c:5321)
    FuncDecl: quals=None (at pp.c:5321)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__Random__rand16', quals=[] (at pp.c:5321)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420CsmaP__SubControl__start', quals=[], storage=['static'] (at pp.c:5323)
    FuncDecl: quals=None (at pp.c:5323)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__SubControl__start', quals=[] (at pp.c:5323)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__SubControl__stop', quals=[], storage=['static'] (at pp.c:5333)
    FuncDecl: quals=None (at pp.c:5333)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__SubControl__stop', quals=[] (at pp.c:5333)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__CC2420PacketBody__getHeader', quals=[], storage=['static'] (at pp.c:5335)
    FuncDecl: quals=None (at pp.c:5335)
      ParamList:  (at pp.c:5335)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5335)
          PtrDecl: quals=[] (at pp.c:5335)
            TypeDecl: declname='msg', quals=[] (at pp.c:5335)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:5335)
        TypeDecl: declname='CC2420CsmaP__CC2420PacketBody__getHeader', quals=[] (at pp.c:5335)
          IdentifierType: names=['cc2420_header_t'] (at None)
  Decl: name='CC2420CsmaP__CC2420PacketBody__getMetadata', quals=[], storage=['static'] (at pp.c:5346)
    FuncDecl: quals=None (at pp.c:5346)
      ParamList:  (at pp.c:5346)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5346)
          PtrDecl: quals=[] (at pp.c:5346)
            TypeDecl: declname='msg', quals=[] (at pp.c:5346)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:5346)
        TypeDecl: declname='CC2420CsmaP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:5346)
          IdentifierType: names=['cc2420_metadata_t'] (at None)
  Decl: name='CC2420CsmaP__CC2420Power__startOscillator', quals=[], storage=['static'] (at pp.c:5348)
    FuncDecl: quals=None (at pp.c:5348)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Power__startOscillator', quals=[] (at pp.c:5348)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__CC2420Power__rxOn', quals=[], storage=['static'] (at pp.c:5350)
    FuncDecl: quals=None (at pp.c:5350)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Power__rxOn', quals=[] (at pp.c:5350)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__CC2420Power__startVReg', quals=[], storage=['static'] (at pp.c:5352)
    FuncDecl: quals=None (at pp.c:5352)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Power__startVReg', quals=[] (at pp.c:5352)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__CC2420Power__stopVReg', quals=[], storage=['static'] (at pp.c:5354)
    FuncDecl: quals=None (at pp.c:5354)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Power__stopVReg', quals=[] (at pp.c:5354)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__Resource__release', quals=[], storage=['static'] (at pp.c:5356)
    FuncDecl: quals=None (at pp.c:5356)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__Resource__release', quals=[] (at pp.c:5356)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__Resource__request', quals=[], storage=['static'] (at pp.c:5358)
    FuncDecl: quals=None (at pp.c:5358)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__Resource__request', quals=[] (at pp.c:5358)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__SplitControlState__isState', quals=[], storage=['static'] (at pp.c:5360)
    FuncDecl: quals=None (at pp.c:5360)
      ParamList:  (at pp.c:5360)
        Decl: name='myState', quals=[], storage=[] (at pp.c:5360)
          TypeDecl: declname='myState', quals=[] (at pp.c:5360)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SplitControlState__isState', quals=[] (at pp.c:5360)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420CsmaP__SplitControlState__requestState', quals=[], storage=['static'] (at pp.c:5362)
    FuncDecl: quals=None (at pp.c:5362)
      ParamList:  (at pp.c:5362)
        Decl: name='reqState', quals=[], storage=[] (at pp.c:5362)
          TypeDecl: declname='reqState', quals=[] (at pp.c:5362)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SplitControlState__requestState', quals=[] (at pp.c:5362)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__SplitControlState__forceState', quals=[], storage=['static'] (at pp.c:5368)
    FuncDecl: quals=None (at pp.c:5368)
      ParamList:  (at pp.c:5368)
        Decl: name='reqState', quals=[], storage=[] (at pp.c:5368)
          TypeDecl: declname='reqState', quals=[] (at pp.c:5368)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SplitControlState__forceState', quals=[] (at pp.c:5368)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__sendDone_task__postTask', quals=[], storage=['static'] (at pp.c:5370)
    FuncDecl: quals=None (at pp.c:5370)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__sendDone_task__postTask', quals=[] (at pp.c:5370)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__stopDone_task__postTask', quals=[], storage=['static'] (at pp.c:5372)
    FuncDecl: quals=None (at pp.c:5372)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__stopDone_task__postTask', quals=[] (at pp.c:5372)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__startDone_task__postTask', quals=[], storage=['static'] (at pp.c:5374)
    FuncDecl: quals=None (at pp.c:5374)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__startDone_task__postTask', quals=[] (at pp.c:5374)
        IdentifierType: names=['error_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:5376)
    Enum: name='CC2420CsmaP____nesc_unnamed4323' (at pp.c:5376)
      EnumeratorList:  (at pp.c:5378)
        Enumerator: name='CC2420CsmaP__startDone_task' (at pp.c:5378)
          Constant: type='int', value='0U' (at pp.c:5378)
  Typedef: name='CC2420CsmaP____nesc_sillytask_startDone_task', quals=[], storage=['typedef'] (at pp.c:5381)
    ArrayDecl:  (at pp.c:5381)
      TypeDecl: declname='CC2420CsmaP____nesc_sillytask_startDone_task', quals=[] (at pp.c:5381)
        IdentifierType: names=['int'] (at None)
      ID: name='CC2420CsmaP__startDone_task' (at pp.c:5381)
  Decl: name=None, quals=[], storage=[] (at pp.c:5382)
    Enum: name='CC2420CsmaP____nesc_unnamed4324' (at pp.c:5382)
      EnumeratorList:  (at pp.c:5384)
        Enumerator: name='CC2420CsmaP__stopDone_task' (at pp.c:5384)
          Constant: type='int', value='1U' (at pp.c:5384)
  Typedef: name='CC2420CsmaP____nesc_sillytask_stopDone_task', quals=[], storage=['typedef'] (at pp.c:5387)
    ArrayDecl:  (at pp.c:5387)
      TypeDecl: declname='CC2420CsmaP____nesc_sillytask_stopDone_task', quals=[] (at pp.c:5387)
        IdentifierType: names=['int'] (at None)
      ID: name='CC2420CsmaP__stopDone_task' (at pp.c:5387)
  Decl: name=None, quals=[], storage=[] (at pp.c:5388)
    Enum: name='CC2420CsmaP____nesc_unnamed4325' (at pp.c:5388)
      EnumeratorList:  (at pp.c:5390)
        Enumerator: name='CC2420CsmaP__sendDone_task' (at pp.c:5390)
          Constant: type='int', value='2U' (at pp.c:5390)
  Typedef: name='CC2420CsmaP____nesc_sillytask_sendDone_task', quals=[], storage=['typedef'] (at pp.c:5393)
    ArrayDecl:  (at pp.c:5393)
      TypeDecl: declname='CC2420CsmaP____nesc_sillytask_sendDone_task', quals=[] (at pp.c:5393)
        IdentifierType: names=['int'] (at None)
      ID: name='CC2420CsmaP__sendDone_task' (at pp.c:5393)
  Decl: name=None, quals=[], storage=[] (at pp.c:5395)
    Enum: name='CC2420CsmaP____nesc_unnamed4326' (at pp.c:5395)
      EnumeratorList:  (at pp.c:5396)
        Enumerator: name='CC2420CsmaP__S_STOPPED' (at pp.c:5396)
        Enumerator: name='CC2420CsmaP__S_STARTING' (at pp.c:5397)
        Enumerator: name='CC2420CsmaP__S_STARTED' (at pp.c:5398)
        Enumerator: name='CC2420CsmaP__S_STOPPING' (at pp.c:5399)
        Enumerator: name='CC2420CsmaP__S_TRANSMITTING' (at pp.c:5400)
  Decl: name='CC2420CsmaP__m_msg', quals=[], storage=[] (at pp.c:5403)
    PtrDecl: quals=[] (at pp.c:5403)
      TypeDecl: declname='CC2420CsmaP__m_msg', quals=[] (at pp.c:5403)
        IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420CsmaP__sendErr', quals=[], storage=[] (at pp.c:5405)
    TypeDecl: declname='CC2420CsmaP__sendErr', quals=[] (at pp.c:5405)
      IdentifierType: names=['error_t'] (at None)
    ID: name='SUCCESS' (at pp.c:5405)
  Decl: name='CC2420CsmaP__ccaOn', quals=[], storage=[] (at pp.c:5408)
    TypeDecl: declname='CC2420CsmaP__ccaOn', quals=[] (at pp.c:5408)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420CsmaP__shutdown', quals=[], storage=['inline', 'static'] (at pp.c:5415)
    FuncDecl: quals=None (at pp.c:5415)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__shutdown', quals=[] (at pp.c:5415)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__SplitControl__start', quals=[], storage=['inline', 'static'] (at pp.c:5418)
    FuncDecl: quals=None (at pp.c:5418)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__SplitControl__start', quals=[] (at pp.c:5418)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__Send__send', quals=[], storage=['inline', 'static'] (at pp.c:5420)
    FuncDecl: quals=None (at pp.c:5420)
      ParamList:  (at pp.c:5420)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:5420)
          PtrDecl: quals=[] (at pp.c:5420)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:5420)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:5420)
          TypeDecl: declname='len', quals=[] (at pp.c:5420)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__Send__send', quals=[] (at pp.c:5420)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420CsmaP__Send__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:5422)
    FuncDecl: quals=None (at pp.c:5422)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__Send__maxPayloadLength', quals=[] (at pp.c:5422)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420CsmaP__CC2420Transmit__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:5424)
    FuncDecl: quals=None (at pp.c:5424)
      ParamList:  (at pp.c:5424)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:5424)
          PtrDecl: quals=[] (at pp.c:5424)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:5424)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='err', quals=[], storage=[] (at pp.c:5424)
          TypeDecl: declname='err', quals=[] (at pp.c:5424)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Transmit__sendDone', quals=[] (at pp.c:5424)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__CC2420Power__startVRegDone', quals=[], storage=['inline', 'static'] (at pp.c:5429)
    FuncDecl: quals=None (at pp.c:5429)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Power__startVRegDone', quals=[] (at pp.c:5429)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__Resource__granted', quals=[], storage=['inline', 'static'] (at pp.c:5433)
    FuncDecl: quals=None (at pp.c:5433)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__Resource__granted', quals=[] (at pp.c:5433)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__CC2420Power__startOscillatorDone', quals=[], storage=['inline', 'static'] (at pp.c:5437)
    FuncDecl: quals=None (at pp.c:5437)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__CC2420Power__startOscillatorDone', quals=[] (at pp.c:5437)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__SubBackoff__requestInitialBackoff', quals=[], storage=['inline', 'static'] (at pp.c:5442)
    FuncDecl: quals=None (at pp.c:5442)
      ParamList:  (at pp.c:5442)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5442)
          PtrDecl: quals=[] (at pp.c:5442)
            TypeDecl: declname='msg', quals=[] (at pp.c:5442)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SubBackoff__requestInitialBackoff', quals=[] (at pp.c:5442)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__SubBackoff__requestCongestionBackoff', quals=[], storage=['inline', 'static'] (at pp.c:5449)
    FuncDecl: quals=None (at pp.c:5449)
      ParamList:  (at pp.c:5449)
        Decl: name='msg', quals=[], storage=[] (at pp.c:5449)
          PtrDecl: quals=[] (at pp.c:5449)
            TypeDecl: declname='msg', quals=[] (at pp.c:5449)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420CsmaP__SubBackoff__requestCongestionBackoff', quals=[] (at pp.c:5449)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__sendDone_task__runTask', quals=[], storage=['inline', 'static'] (at pp.c:5451)
    FuncDecl: quals=None (at pp.c:5451)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__sendDone_task__runTask', quals=[] (at pp.c:5451)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__startDone_task__runTask', quals=[], storage=['inline', 'static'] (at pp.c:5453)
    FuncDecl: quals=None (at pp.c:5453)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__startDone_task__runTask', quals=[] (at pp.c:5453)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__stopDone_task__runTask', quals=[], storage=['inline', 'static'] (at pp.c:5461)
    FuncDecl: quals=None (at pp.c:5461)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__stopDone_task__runTask', quals=[] (at pp.c:5461)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420CsmaP__shutdown', quals=[], storage=['inline', 'static'] (at pp.c:5471)
    FuncDecl: quals=None (at pp.c:5471)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420CsmaP__shutdown', quals=[] (at pp.c:5471)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__syncDone', quals=[], storage=['static'] (at pp.c:5473)
    FuncDecl: quals=None (at pp.c:5473)
      ParamList:  (at pp.c:5473)
        Decl: name='error', quals=[], storage=[] (at pp.c:5473)
          TypeDecl: declname='error', quals=[] (at pp.c:5473)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__syncDone', quals=[] (at pp.c:5473)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__RXCTRL1__write', quals=[], storage=['static'] (at pp.c:5475)
    FuncDecl: quals=None (at pp.c:5475)
      ParamList:  (at pp.c:5475)
        Decl: name='data', quals=[], storage=[] (at pp.c:5475)
          TypeDecl: declname='data', quals=[] (at pp.c:5475)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420ControlP__RXCTRL1__write', quals=[] (at pp.c:5475)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ControlP__LocalIeeeEui64__getId', quals=[], storage=['static'] (at pp.c:5477)
    FuncDecl: quals=None (at pp.c:5477)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__LocalIeeeEui64__getId', quals=[] (at pp.c:5477)
        IdentifierType: names=['ieee_eui64_t'] (at None)
  Decl: name='CC2420ControlP__StartupTimer__start', quals=[], storage=['static'] (at pp.c:5479)
    FuncDecl: quals=None (at pp.c:5479)
      ParamList:  (at pp.c:5479)
        Decl: name='dt', quals=[], storage=[] (at pp.c:5479)
          TypeDecl: declname='dt', quals=[] (at pp.c:5479)
            IdentifierType: names=['CC2420ControlP__StartupTimer__size_type'] (at None)
      TypeDecl: declname='CC2420ControlP__StartupTimer__start', quals=[] (at pp.c:5479)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__MDMCTRL0__write', quals=[], storage=['static'] (at pp.c:5481)
    FuncDecl: quals=None (at pp.c:5481)
      ParamList:  (at pp.c:5481)
        Decl: name='data', quals=[], storage=[] (at pp.c:5481)
          TypeDecl: declname='data', quals=[] (at pp.c:5481)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420ControlP__MDMCTRL0__write', quals=[] (at pp.c:5481)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ControlP__RSTN__makeOutput', quals=[], storage=['static'] (at pp.c:5483)
    FuncDecl: quals=None (at pp.c:5483)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__RSTN__makeOutput', quals=[] (at pp.c:5483)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__RSTN__set', quals=[], storage=['static'] (at pp.c:5485)
    FuncDecl: quals=None (at pp.c:5485)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__RSTN__set', quals=[] (at pp.c:5485)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__RSTN__clr', quals=[], storage=['static'] (at pp.c:5486)
    FuncDecl: quals=None (at pp.c:5486)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__RSTN__clr', quals=[] (at pp.c:5486)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__ReadRssi__readDone', quals=[], storage=['static'] (at pp.c:5488)
    FuncDecl: quals=None (at pp.c:5488)
      ParamList:  (at pp.c:5488)
        Decl: name='result', quals=[], storage=[] (at pp.c:5488)
          TypeDecl: declname='result', quals=[] (at pp.c:5488)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='val', quals=[], storage=[] (at pp.c:5488)
          TypeDecl: declname='val', quals=[] (at pp.c:5488)
            IdentifierType: names=['CC2420ControlP__ReadRssi__val_t'] (at None)
      TypeDecl: declname='CC2420ControlP__ReadRssi__readDone', quals=[] (at pp.c:5488)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__syncDone__postTask', quals=[], storage=['static'] (at pp.c:5490)
    FuncDecl: quals=None (at pp.c:5490)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__syncDone__postTask', quals=[] (at pp.c:5490)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__RSSI__read', quals=[], storage=['static'] (at pp.c:5492)
    FuncDecl: quals=None (at pp.c:5492)
      ParamList:  (at pp.c:5492)
        Decl: name='data', quals=[], storage=[] (at pp.c:5492)
          PtrDecl: quals=[] (at pp.c:5492)
            TypeDecl: declname='data', quals=[] (at pp.c:5492)
              IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420ControlP__RSSI__read', quals=[] (at pp.c:5492)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ControlP__IOCFG0__write', quals=[], storage=['static'] (at pp.c:5500)
    FuncDecl: quals=None (at pp.c:5500)
      ParamList:  (at pp.c:5500)
        Decl: name='data', quals=[], storage=[] (at pp.c:5500)
          TypeDecl: declname='data', quals=[] (at pp.c:5500)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420ControlP__IOCFG0__write', quals=[] (at pp.c:5500)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ControlP__ActiveMessageAddress__amAddress', quals=[], storage=['static'] (at pp.c:5502)
    FuncDecl: quals=None (at pp.c:5502)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__ActiveMessageAddress__amAddress', quals=[] (at pp.c:5502)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='CC2420ControlP__ActiveMessageAddress__amGroup', quals=[], storage=['static'] (at pp.c:5507)
    FuncDecl: quals=None (at pp.c:5507)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__ActiveMessageAddress__amGroup', quals=[] (at pp.c:5507)
        IdentifierType: names=['am_group_t'] (at None)
  Decl: name='CC2420ControlP__CSN__makeOutput', quals=[], storage=['static'] (at pp.c:5509)
    FuncDecl: quals=None (at pp.c:5509)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CSN__makeOutput', quals=[] (at pp.c:5509)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__CSN__set', quals=[], storage=['static'] (at pp.c:5511)
    FuncDecl: quals=None (at pp.c:5511)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CSN__set', quals=[] (at pp.c:5511)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__CSN__clr', quals=[], storage=['static'] (at pp.c:5512)
    FuncDecl: quals=None (at pp.c:5512)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CSN__clr', quals=[] (at pp.c:5512)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__VREN__makeOutput', quals=[], storage=['static'] (at pp.c:5517)
    FuncDecl: quals=None (at pp.c:5517)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__VREN__makeOutput', quals=[] (at pp.c:5517)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__VREN__set', quals=[], storage=['static'] (at pp.c:5519)
    FuncDecl: quals=None (at pp.c:5519)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__VREN__set', quals=[] (at pp.c:5519)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__VREN__clr', quals=[], storage=['static'] (at pp.c:5520)
    FuncDecl: quals=None (at pp.c:5520)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__VREN__clr', quals=[] (at pp.c:5520)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__SXOSCON__strobe', quals=[], storage=['static'] (at pp.c:5522)
    FuncDecl: quals=None (at pp.c:5522)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SXOSCON__strobe', quals=[] (at pp.c:5522)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ControlP__SpiResource__release', quals=[], storage=['static'] (at pp.c:5524)
    FuncDecl: quals=None (at pp.c:5524)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SpiResource__release', quals=[] (at pp.c:5524)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__SpiResource__request', quals=[], storage=['static'] (at pp.c:5526)
    FuncDecl: quals=None (at pp.c:5526)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SpiResource__request', quals=[] (at pp.c:5526)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__SyncResource__release', quals=[], storage=['static'] (at pp.c:5528)
    FuncDecl: quals=None (at pp.c:5528)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SyncResource__release', quals=[] (at pp.c:5528)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__SyncResource__request', quals=[], storage=['static'] (at pp.c:5530)
    FuncDecl: quals=None (at pp.c:5530)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SyncResource__request', quals=[] (at pp.c:5530)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Power__startOscillatorDone', quals=[], storage=['static'] (at pp.c:5532)
    FuncDecl: quals=None (at pp.c:5532)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Power__startOscillatorDone', quals=[] (at pp.c:5532)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__CC2420Power__startVRegDone', quals=[], storage=['static'] (at pp.c:5534)
    FuncDecl: quals=None (at pp.c:5534)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Power__startVRegDone', quals=[] (at pp.c:5534)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__IOCFG1__write', quals=[], storage=['static'] (at pp.c:5536)
    FuncDecl: quals=None (at pp.c:5536)
      ParamList:  (at pp.c:5536)
        Decl: name='data', quals=[], storage=[] (at pp.c:5536)
          TypeDecl: declname='data', quals=[] (at pp.c:5536)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420ControlP__IOCFG1__write', quals=[] (at pp.c:5536)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ControlP__FSCTRL__write', quals=[], storage=['static'] (at pp.c:5538)
    FuncDecl: quals=None (at pp.c:5538)
      ParamList:  (at pp.c:5538)
        Decl: name='data', quals=[], storage=[] (at pp.c:5538)
          TypeDecl: declname='data', quals=[] (at pp.c:5538)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420ControlP__FSCTRL__write', quals=[] (at pp.c:5538)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ControlP__SRXON__strobe', quals=[], storage=['static'] (at pp.c:5540)
    FuncDecl: quals=None (at pp.c:5540)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SRXON__strobe', quals=[] (at pp.c:5540)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ControlP__Resource__granted', quals=[], storage=['static'] (at pp.c:5542)
    FuncDecl: quals=None (at pp.c:5542)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__Resource__granted', quals=[] (at pp.c:5542)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__IEEEADR__write', quals=[], storage=['static'] (at pp.c:5544)
    FuncDecl: quals=None (at pp.c:5544)
      ParamList:  (at pp.c:5544)
        Decl: name='offset', quals=[], storage=[] (at pp.c:5544)
          TypeDecl: declname='offset', quals=[] (at pp.c:5544)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:5544)
          PtrDecl: quals=[] (at pp.c:5544)
            TypeDecl: declname='data', quals=[] (at pp.c:5544)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:5544)
          TypeDecl: declname='length', quals=[] (at pp.c:5544)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420ControlP__IEEEADR__write', quals=[] (at pp.c:5544)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ControlP__InterruptCCA__disable', quals=[], storage=['static'] (at pp.c:5546)
    FuncDecl: quals=None (at pp.c:5546)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__InterruptCCA__disable', quals=[] (at pp.c:5546)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__InterruptCCA__enableRisingEdge', quals=[], storage=['static'] (at pp.c:5548)
    FuncDecl: quals=None (at pp.c:5548)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__InterruptCCA__enableRisingEdge', quals=[] (at pp.c:5548)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__RssiResource__release', quals=[], storage=['static'] (at pp.c:5550)
    FuncDecl: quals=None (at pp.c:5550)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__RssiResource__release', quals=[] (at pp.c:5550)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__SRFOFF__strobe', quals=[], storage=['static'] (at pp.c:5552)
    FuncDecl: quals=None (at pp.c:5552)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SRFOFF__strobe', quals=[] (at pp.c:5552)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:5554)
    Enum: name='CC2420ControlP____nesc_unnamed4327' (at pp.c:5554)
      EnumeratorList:  (at pp.c:5556)
        Enumerator: name='CC2420ControlP__sync' (at pp.c:5556)
          Constant: type='int', value='3U' (at pp.c:5556)
  Typedef: name='CC2420ControlP____nesc_sillytask_sync', quals=[], storage=['typedef'] (at pp.c:5559)
    ArrayDecl:  (at pp.c:5559)
      TypeDecl: declname='CC2420ControlP____nesc_sillytask_sync', quals=[] (at pp.c:5559)
        IdentifierType: names=['int'] (at None)
      ID: name='CC2420ControlP__sync' (at pp.c:5559)
  Decl: name=None, quals=[], storage=[] (at pp.c:5560)
    Enum: name='CC2420ControlP____nesc_unnamed4328' (at pp.c:5560)
      EnumeratorList:  (at pp.c:5562)
        Enumerator: name='CC2420ControlP__syncDone' (at pp.c:5562)
          Constant: type='int', value='4U' (at pp.c:5562)
  Typedef: name='CC2420ControlP____nesc_sillytask_syncDone', quals=[], storage=['typedef'] (at pp.c:5565)
    ArrayDecl:  (at pp.c:5565)
      TypeDecl: declname='CC2420ControlP____nesc_sillytask_syncDone', quals=[] (at pp.c:5565)
        IdentifierType: names=['int'] (at None)
      ID: name='CC2420ControlP__syncDone' (at pp.c:5565)
  Typedef: name='CC2420ControlP__cc2420_control_state_t', quals=[], storage=['typedef'] (at pp.c:5574)
    TypeDecl: declname='CC2420ControlP__cc2420_control_state_t', quals=[] (at pp.c:5574)
      Enum: name='CC2420ControlP____nesc_unnamed4329' (at pp.c:5568)
        EnumeratorList:  (at pp.c:5569)
          Enumerator: name='CC2420ControlP__S_VREG_STOPPED' (at pp.c:5569)
          Enumerator: name='CC2420ControlP__S_VREG_STARTING' (at pp.c:5570)
          Enumerator: name='CC2420ControlP__S_VREG_STARTED' (at pp.c:5571)
          Enumerator: name='CC2420ControlP__S_XOSC_STARTING' (at pp.c:5572)
          Enumerator: name='CC2420ControlP__S_XOSC_STARTED' (at pp.c:5573)
  Decl: name='CC2420ControlP__m_channel', quals=[], storage=[] (at pp.c:5576)
    TypeDecl: declname='CC2420ControlP__m_channel', quals=[] (at pp.c:5576)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ControlP__m_tx_power', quals=[], storage=[] (at pp.c:5578)
    TypeDecl: declname='CC2420ControlP__m_tx_power', quals=[] (at pp.c:5578)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ControlP__m_pan', quals=[], storage=[] (at pp.c:5580)
    TypeDecl: declname='CC2420ControlP__m_pan', quals=[] (at pp.c:5580)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420ControlP__m_short_addr', quals=[], storage=[] (at pp.c:5582)
    TypeDecl: declname='CC2420ControlP__m_short_addr', quals=[] (at pp.c:5582)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420ControlP__m_ext_addr', quals=[], storage=[] (at pp.c:5584)
    TypeDecl: declname='CC2420ControlP__m_ext_addr', quals=[] (at pp.c:5584)
      IdentifierType: names=['ieee_eui64_t'] (at None)
  Decl: name='CC2420ControlP__m_sync_busy', quals=[], storage=[] (at pp.c:5586)
    TypeDecl: declname='CC2420ControlP__m_sync_busy', quals=[] (at pp.c:5586)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__autoAckEnabled', quals=[], storage=[] (at pp.c:5589)
    TypeDecl: declname='CC2420ControlP__autoAckEnabled', quals=[] (at pp.c:5589)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__hwAutoAckDefault', quals=[], storage=[] (at pp.c:5592)
    TypeDecl: declname='CC2420ControlP__hwAutoAckDefault', quals=[] (at pp.c:5592)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__addressRecognition', quals=[], storage=[] (at pp.c:5595)
    TypeDecl: declname='CC2420ControlP__addressRecognition', quals=[] (at pp.c:5595)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__hwAddressRecognition', quals=[], storage=[] (at pp.c:5598)
    TypeDecl: declname='CC2420ControlP__hwAddressRecognition', quals=[] (at pp.c:5598)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__m_state', quals=[], storage=[] (at pp.c:5600)
    TypeDecl: declname='CC2420ControlP__m_state', quals=[] (at pp.c:5600)
      IdentifierType: names=['CC2420ControlP__cc2420_control_state_t'] (at None)
    ID: name='CC2420ControlP__S_VREG_STOPPED' (at pp.c:5600)
  Decl: name='CC2420ControlP__writeFsctrl', quals=[], storage=['static'] (at pp.c:5604)
    FuncDecl: quals=None (at pp.c:5604)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__writeFsctrl', quals=[] (at pp.c:5604)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__writeMdmctrl0', quals=[], storage=['static'] (at pp.c:5605)
    FuncDecl: quals=None (at pp.c:5605)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__writeMdmctrl0', quals=[] (at pp.c:5605)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__writeId', quals=[], storage=['static'] (at pp.c:5606)
    FuncDecl: quals=None (at pp.c:5606)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__writeId', quals=[] (at pp.c:5606)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:5612)
    FuncDecl: quals=None (at pp.c:5612)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__Init__init', quals=[] (at pp.c:5612)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__Resource__request', quals=[], storage=['inline', 'static'] (at pp.c:5614)
    FuncDecl: quals=None (at pp.c:5614)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__Resource__request', quals=[] (at pp.c:5614)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__Resource__release', quals=[], storage=['inline', 'static'] (at pp.c:5622)
    FuncDecl: quals=None (at pp.c:5622)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__Resource__release', quals=[] (at pp.c:5622)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Power__startVReg', quals=[], storage=['inline', 'static'] (at pp.c:5630)
    FuncDecl: quals=None (at pp.c:5630)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Power__startVReg', quals=[] (at pp.c:5630)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Power__stopVReg', quals=[], storage=['inline', 'static'] (at pp.c:5632)
    FuncDecl: quals=None (at pp.c:5632)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Power__stopVReg', quals=[] (at pp.c:5632)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Power__startOscillator', quals=[], storage=['inline', 'static'] (at pp.c:5640)
    FuncDecl: quals=None (at pp.c:5640)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Power__startOscillator', quals=[] (at pp.c:5640)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Power__rxOn', quals=[], storage=['inline', 'static'] (at pp.c:5642)
    FuncDecl: quals=None (at pp.c:5642)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Power__rxOn', quals=[] (at pp.c:5642)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__getExtAddr', quals=[], storage=['inline', 'static'] (at pp.c:5644)
    FuncDecl: quals=None (at pp.c:5644)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__getExtAddr', quals=[] (at pp.c:5644)
        IdentifierType: names=['ieee_eui64_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__getShortAddr', quals=[], storage=['static'] (at pp.c:5648)
    FuncDecl: quals=None (at pp.c:5648)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__getShortAddr', quals=[] (at pp.c:5648)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__getPanAddr', quals=[], storage=['inline', 'static'] (at pp.c:5656)
    FuncDecl: quals=None (at pp.c:5656)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__getPanAddr', quals=[] (at pp.c:5656)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__sync', quals=[], storage=['inline', 'static'] (at pp.c:5658)
    FuncDecl: quals=None (at pp.c:5658)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__sync', quals=[] (at pp.c:5658)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__isAddressRecognitionEnabled', quals=[], storage=['inline', 'static'] (at pp.c:5660)
    FuncDecl: quals=None (at pp.c:5660)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__isAddressRecognitionEnabled', quals=[] (at pp.c:5660)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__isHwAutoAckDefault', quals=[], storage=['inline', 'static'] (at pp.c:5662)
    FuncDecl: quals=None (at pp.c:5662)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__isHwAutoAckDefault', quals=[] (at pp.c:5662)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__CC2420Config__isAutoAckEnabled', quals=[], storage=['inline', 'static'] (at pp.c:5669)
    FuncDecl: quals=None (at pp.c:5669)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__CC2420Config__isAutoAckEnabled', quals=[] (at pp.c:5669)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ControlP__SyncResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:5679)
    FuncDecl: quals=None (at pp.c:5679)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SyncResource__granted', quals=[] (at pp.c:5679)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__SpiResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:5681)
    FuncDecl: quals=None (at pp.c:5681)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__SpiResource__granted', quals=[] (at pp.c:5681)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__RssiResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:5686)
    FuncDecl: quals=None (at pp.c:5686)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__RssiResource__granted', quals=[] (at pp.c:5686)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__StartupTimer__fired', quals=[], storage=['inline', 'static'] (at pp.c:5688)
    FuncDecl: quals=None (at pp.c:5688)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__StartupTimer__fired', quals=[] (at pp.c:5688)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__InterruptCCA__fired', quals=[], storage=['inline', 'static'] (at pp.c:5698)
    FuncDecl: quals=None (at pp.c:5698)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__InterruptCCA__fired', quals=[] (at pp.c:5698)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__sync__runTask', quals=[], storage=['inline', 'static'] (at pp.c:5700)
    FuncDecl: quals=None (at pp.c:5700)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__sync__runTask', quals=[] (at pp.c:5700)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__syncDone__runTask', quals=[], storage=['inline', 'static'] (at pp.c:5704)
    FuncDecl: quals=None (at pp.c:5704)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__syncDone__runTask', quals=[] (at pp.c:5704)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__writeFsctrl', quals=[], storage=['static'] (at pp.c:5714)
    FuncDecl: quals=None (at pp.c:5714)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__writeFsctrl', quals=[] (at pp.c:5714)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__writeMdmctrl0', quals=[], storage=['static'] (at pp.c:5716)
    FuncDecl: quals=None (at pp.c:5716)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__writeMdmctrl0', quals=[] (at pp.c:5716)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__writeId', quals=[], storage=['static'] (at pp.c:5718)
    FuncDecl: quals=None (at pp.c:5718)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ControlP__writeId', quals=[] (at pp.c:5718)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ControlP__ReadRssi__default__readDone', quals=[], storage=['inline', 'static'] (at pp.c:5720)
    FuncDecl: quals=None (at pp.c:5720)
      ParamList:  (at pp.c:5720)
        Decl: name='error', quals=[], storage=[] (at pp.c:5720)
          TypeDecl: declname='error', quals=[] (at pp.c:5720)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:5720)
          TypeDecl: declname='data', quals=[] (at pp.c:5720)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420ControlP__ReadRssi__default__readDone', quals=[] (at pp.c:5720)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Compare__setEvent', quals=[], storage=['static'] (at pp.c:5722)
    FuncDecl: quals=None (at pp.c:5722)
      ParamList:  (at pp.c:5722)
        Decl: name='time', quals=[], storage=[] (at pp.c:5722)
          TypeDecl: declname='time', quals=[] (at pp.c:5722)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__setEvent', quals=[] (at pp.c:5722)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Compare__setEventFromNow', quals=[], storage=['static'] (at pp.c:5724)
    FuncDecl: quals=None (at pp.c:5724)
      ParamList:  (at pp.c:5724)
        Decl: name='delta', quals=[], storage=[] (at pp.c:5724)
          TypeDecl: declname='delta', quals=[] (at pp.c:5724)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__setEventFromNow', quals=[] (at pp.c:5724)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Timer__get', quals=[], storage=['static'] (at pp.c:5726)
    FuncDecl: quals=None (at pp.c:5726)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Timer__get', quals=[] (at pp.c:5726)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430AlarmC__0__Alarm__fired', quals=[], storage=['static'] (at pp.c:5728)
    FuncDecl: quals=None (at pp.c:5728)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Alarm__fired', quals=[] (at pp.c:5728)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430TimerControl__enableEvents', quals=[], storage=['static'] (at pp.c:5730)
    FuncDecl: quals=None (at pp.c:5730)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__enableEvents', quals=[] (at pp.c:5730)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430TimerControl__setControlAsCompare', quals=[], storage=['static'] (at pp.c:5732)
    FuncDecl: quals=None (at pp.c:5732)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__setControlAsCompare', quals=[] (at pp.c:5732)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430TimerControl__disableEvents', quals=[], storage=['static'] (at pp.c:5743)
    FuncDecl: quals=None (at pp.c:5743)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__disableEvents', quals=[] (at pp.c:5743)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430TimerControl__clearPendingInterrupt', quals=[], storage=['static'] (at pp.c:5745)
    FuncDecl: quals=None (at pp.c:5745)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__clearPendingInterrupt', quals=[] (at pp.c:5745)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:5747)
    FuncDecl: quals=None (at pp.c:5747)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Init__init', quals=[] (at pp.c:5747)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430AlarmC__0__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:5749)
    FuncDecl: quals=None (at pp.c:5749)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Alarm__stop', quals=[] (at pp.c:5749)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Compare__fired', quals=[], storage=['inline', 'static'] (at pp.c:5754)
    FuncDecl: quals=None (at pp.c:5754)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__fired', quals=[] (at pp.c:5754)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Alarm__startAt', quals=[], storage=['inline', 'static'] (at pp.c:5765)
    FuncDecl: quals=None (at pp.c:5765)
      ParamList:  (at pp.c:5765)
        Decl: name='t0', quals=[], storage=[] (at pp.c:5765)
          TypeDecl: declname='t0', quals=[] (at pp.c:5765)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:5765)
          TypeDecl: declname='dt', quals=[] (at pp.c:5765)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Alarm__startAt', quals=[] (at pp.c:5765)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__0__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:5767)
    FuncDecl: quals=None (at pp.c:5767)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__0__Msp430Timer__overflow', quals=[] (at pp.c:5767)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430CounterC__0__Msp430Timer__get', quals=[], storage=['static'] (at pp.c:5769)
    FuncDecl: quals=None (at pp.c:5769)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Msp430Timer__get', quals=[] (at pp.c:5769)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430CounterC__0__Msp430Timer__isOverflowPending', quals=[], storage=['static'] (at pp.c:5770)
    FuncDecl: quals=None (at pp.c:5770)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Msp430Timer__isOverflowPending', quals=[] (at pp.c:5770)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430CounterC__0__Counter__overflow', quals=[], storage=['static'] (at pp.c:5772)
    FuncDecl: quals=None (at pp.c:5772)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Counter__overflow', quals=[] (at pp.c:5772)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430CounterC__0__Counter__get', quals=[], storage=['inline', 'static'] (at pp.c:5774)
    FuncDecl: quals=None (at pp.c:5774)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Counter__get', quals=[] (at pp.c:5774)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430CounterC__0__Counter__isOverflowPending', quals=[], storage=['inline', 'static'] (at pp.c:5779)
    FuncDecl: quals=None (at pp.c:5779)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Counter__isOverflowPending', quals=[] (at pp.c:5779)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430CounterC__0__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:5789)
    FuncDecl: quals=None (at pp.c:5789)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__0__Msp430Timer__overflow', quals=[] (at pp.c:5789)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformCounterC__0__CounterFrom__get', quals=[], storage=['static'] (at pp.c:5791)
    FuncDecl: quals=None (at pp.c:5791)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__CounterFrom__get', quals=[] (at pp.c:5791)
        IdentifierType: names=['TransformCounterC__0__CounterFrom__size_type'] (at None)
  Decl: name='TransformCounterC__0__CounterFrom__isOverflowPending', quals=[], storage=['static'] (at pp.c:5798)
    FuncDecl: quals=None (at pp.c:5798)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__CounterFrom__isOverflowPending', quals=[] (at pp.c:5798)
        IdentifierType: names=['bool'] (at None)
  Decl: name='TransformCounterC__0__Counter__overflow', quals=[], storage=['static'] (at pp.c:5809)
    FuncDecl: quals=None (at pp.c:5809)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__Counter__overflow', quals=[] (at pp.c:5809)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformCounterC__0__m_upper', quals=[], storage=[] (at pp.c:5811)
    TypeDecl: declname='TransformCounterC__0__m_upper', quals=[] (at pp.c:5811)
      IdentifierType: names=['TransformCounterC__0__upper_count_type'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:5813)
    Enum: name='TransformCounterC__0____nesc_unnamed4330' (at pp.c:5813)
      EnumeratorList:  (at pp.c:5815)
        Enumerator: name='TransformCounterC__0__LOW_SHIFT_RIGHT' (at pp.c:5815)
          Constant: type='int', value='0' (at pp.c:5815)
        Enumerator: name='TransformCounterC__0__HIGH_SHIFT_LEFT' (at pp.c:5816)
          BinaryOp: op='-' (at pp.c:5816)
            BinaryOp: op='*' (at pp.c:5816)
              Constant: type='int', value='8' (at pp.c:5816)
              UnaryOp: op='sizeof' (at pp.c:5816)
                Typename: quals=[] (at None)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['TransformCounterC__0__from_size_type'] (at None)
            ID: name='TransformCounterC__0__LOW_SHIFT_RIGHT' (at pp.c:5816)
        Enumerator: name='TransformCounterC__0__NUM_UPPER_BITS' (at pp.c:5817)
          BinaryOp: op='+' (at pp.c:5817)
            BinaryOp: op='-' (at pp.c:5817)
              BinaryOp: op='*' (at pp.c:5817)
                Constant: type='int', value='8' (at pp.c:5817)
                UnaryOp: op='sizeof' (at pp.c:5817)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
              BinaryOp: op='*' (at pp.c:5817)
                Constant: type='int', value='8' (at pp.c:5817)
                UnaryOp: op='sizeof' (at pp.c:5817)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformCounterC__0__from_size_type'] (at None)
            Constant: type='int', value='0' (at pp.c:5817)
        Enumerator: name='TransformCounterC__0__OVERFLOW_MASK' (at pp.c:5821)
          TernaryOp:  (at pp.c:5821)
            ID: name='TransformCounterC__0__NUM_UPPER_BITS' (at pp.c:5821)
            BinaryOp: op='-' (at None)
              BinaryOp: op='<<' (at None)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformCounterC__0__upper_count_type'] (at None)
                  Constant: type='int', value='2' (at pp.c:5821)
                BinaryOp: op='-' (at pp.c:5821)
                  ID: name='TransformCounterC__0__NUM_UPPER_BITS' (at pp.c:5821)
                  Constant: type='int', value='1' (at pp.c:5821)
              Constant: type='int', value='1' (at pp.c:5821)
            Constant: type='int', value='0' (at pp.c:5821)
  Decl: name='TransformCounterC__0__Counter__get', quals=[], storage=['static'] (at pp.c:5824)
    FuncDecl: quals=None (at pp.c:5824)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__Counter__get', quals=[] (at pp.c:5824)
        IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
  Decl: name='TransformCounterC__0__CounterFrom__overflow', quals=[], storage=['inline', 'static'] (at pp.c:5826)
    FuncDecl: quals=None (at pp.c:5826)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__0__CounterFrom__overflow', quals=[] (at pp.c:5826)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__fired', quals=[], storage=['static'] (at pp.c:5828)
    FuncDecl: quals=None (at pp.c:5828)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__fired', quals=[] (at pp.c:5828)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__AlarmFrom__startAt', quals=[], storage=['static'] (at pp.c:5830)
    FuncDecl: quals=None (at pp.c:5830)
      ParamList:  (at pp.c:5830)
        Decl: name='t0', quals=[], storage=[] (at pp.c:5830)
          TypeDecl: declname='t0', quals=[] (at pp.c:5830)
            IdentifierType: names=['TransformAlarmC__0__AlarmFrom__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:5830)
          TypeDecl: declname='dt', quals=[] (at pp.c:5830)
            IdentifierType: names=['TransformAlarmC__0__AlarmFrom__size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__0__AlarmFrom__startAt', quals=[] (at pp.c:5830)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__AlarmFrom__stop', quals=[], storage=['static'] (at pp.c:5832)
    FuncDecl: quals=None (at pp.c:5832)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__AlarmFrom__stop', quals=[] (at pp.c:5832)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Counter__get', quals=[], storage=['static'] (at pp.c:5834)
    FuncDecl: quals=None (at pp.c:5834)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Counter__get', quals=[] (at pp.c:5834)
        IdentifierType: names=['TransformAlarmC__0__Counter__size_type'] (at None)
  Decl: name='TransformAlarmC__0__m_t0', quals=[], storage=[] (at pp.c:5836)
    TypeDecl: declname='TransformAlarmC__0__m_t0', quals=[] (at pp.c:5836)
      IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Decl: name='TransformAlarmC__0__m_dt', quals=[], storage=[] (at pp.c:5837)
    TypeDecl: declname='TransformAlarmC__0__m_dt', quals=[] (at pp.c:5837)
      IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:5839)
    Enum: name='TransformAlarmC__0____nesc_unnamed4331' (at pp.c:5839)
      EnumeratorList:  (at pp.c:5841)
        Enumerator: name='TransformAlarmC__0__MAX_DELAY_LOG2' (at pp.c:5841)
          BinaryOp: op='-' (at pp.c:5841)
            BinaryOp: op='-' (at pp.c:5841)
              BinaryOp: op='*' (at pp.c:5841)
                Constant: type='int', value='8' (at pp.c:5841)
                UnaryOp: op='sizeof' (at pp.c:5841)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformAlarmC__0__from_size_type'] (at None)
              Constant: type='int', value='1' (at pp.c:5841)
            Constant: type='int', value='0' (at pp.c:5841)
        Enumerator: name='TransformAlarmC__0__MAX_DELAY' (at pp.c:5842)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
              Constant: type='int', value='1' (at pp.c:5842)
            ID: name='TransformAlarmC__0__MAX_DELAY_LOG2' (at pp.c:5842)
  Decl: name='TransformAlarmC__0__Alarm__getNow', quals=[], storage=['inline', 'static'] (at pp.c:5845)
    FuncDecl: quals=None (at pp.c:5845)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__getNow', quals=[] (at pp.c:5845)
        IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:5847)
    FuncDecl: quals=None (at pp.c:5847)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__stop', quals=[] (at pp.c:5847)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__set_alarm', quals=[], storage=['static'] (at pp.c:5852)
    FuncDecl: quals=None (at pp.c:5852)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__set_alarm', quals=[] (at pp.c:5852)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__startAt', quals=[], storage=['static'] (at pp.c:5854)
    FuncDecl: quals=None (at pp.c:5854)
      ParamList:  (at pp.c:5854)
        Decl: name='t0', quals=[], storage=[] (at pp.c:5854)
          TypeDecl: declname='t0', quals=[] (at pp.c:5854)
            IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:5854)
          TypeDecl: declname='dt', quals=[] (at pp.c:5854)
            IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__startAt', quals=[] (at pp.c:5854)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Alarm__start', quals=[], storage=['inline', 'static'] (at pp.c:5864)
    FuncDecl: quals=None (at pp.c:5864)
      ParamList:  (at pp.c:5864)
        Decl: name='dt', quals=[], storage=[] (at pp.c:5864)
          TypeDecl: declname='dt', quals=[] (at pp.c:5864)
            IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Alarm__start', quals=[] (at pp.c:5864)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__AlarmFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:5869)
    FuncDecl: quals=None (at pp.c:5869)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__AlarmFrom__fired', quals=[] (at pp.c:5869)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:5871)
    FuncDecl: quals=None (at pp.c:5871)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__0__Counter__overflow', quals=[] (at pp.c:5871)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__0__IO__getRaw', quals=[], storage=['inline', 'static'] (at pp.c:5873)
    FuncDecl: quals=None (at pp.c:5873)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__0__IO__getRaw', quals=[] (at pp.c:5873)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430GeneralIOP__0__IO__get', quals=[], storage=['inline', 'static'] (at pp.c:5874)
    FuncDecl: quals=None (at pp.c:5874)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__0__IO__get', quals=[] (at pp.c:5874)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430GeneralIOP__3__IO__getRaw', quals=[], storage=['inline', 'static'] (at pp.c:5876)
    FuncDecl: quals=None (at pp.c:5876)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__3__IO__getRaw', quals=[] (at pp.c:5876)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430GeneralIOP__3__IO__get', quals=[], storage=['inline', 'static'] (at pp.c:5877)
    FuncDecl: quals=None (at pp.c:5877)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__3__IO__get', quals=[] (at pp.c:5877)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430GeneralIOP__4__IO__getRaw', quals=[], storage=['inline', 'static'] (at pp.c:5879)
    FuncDecl: quals=None (at pp.c:5879)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__4__IO__getRaw', quals=[] (at pp.c:5879)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430GeneralIOP__4__IO__get', quals=[], storage=['inline', 'static'] (at pp.c:5880)
    FuncDecl: quals=None (at pp.c:5880)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__4__IO__get', quals=[] (at pp.c:5880)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430GeneralIOP__4__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:5881)
    FuncDecl: quals=None (at pp.c:5881)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__4__IO__makeInput', quals=[] (at pp.c:5881)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__12__IO__clr', quals=[], storage=['inline', 'static'] (at pp.c:5883)
    FuncDecl: quals=None (at pp.c:5883)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__12__IO__clr', quals=[] (at pp.c:5883)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__12__IO__getRaw', quals=[], storage=['inline', 'static'] (at pp.c:5885)
    FuncDecl: quals=None (at pp.c:5885)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__12__IO__getRaw', quals=[] (at pp.c:5885)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430GeneralIOP__12__IO__get', quals=[], storage=['inline', 'static'] (at pp.c:5886)
    FuncDecl: quals=None (at pp.c:5886)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__12__IO__get', quals=[] (at pp.c:5886)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430GeneralIOP__12__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:5887)
    FuncDecl: quals=None (at pp.c:5887)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__12__IO__makeInput', quals=[] (at pp.c:5887)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__12__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:5889)
    FuncDecl: quals=None (at pp.c:5889)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__12__IO__makeOutput', quals=[] (at pp.c:5889)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__17__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5891)
    FuncDecl: quals=None (at pp.c:5891)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__17__IO__selectModuleFunc', quals=[] (at pp.c:5891)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__17__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:5893)
    FuncDecl: quals=None (at pp.c:5893)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__17__IO__selectIOFunc', quals=[] (at pp.c:5893)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__18__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5895)
    FuncDecl: quals=None (at pp.c:5895)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__18__IO__selectModuleFunc', quals=[] (at pp.c:5895)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__18__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:5897)
    FuncDecl: quals=None (at pp.c:5897)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__18__IO__selectIOFunc', quals=[] (at pp.c:5897)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__19__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5899)
    FuncDecl: quals=None (at pp.c:5899)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__19__IO__selectModuleFunc', quals=[] (at pp.c:5899)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__19__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:5901)
    FuncDecl: quals=None (at pp.c:5901)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__19__IO__selectIOFunc', quals=[] (at pp.c:5901)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__20__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:5903)
    FuncDecl: quals=None (at pp.c:5903)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__20__IO__selectIOFunc', quals=[] (at pp.c:5903)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__21__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:5905)
    FuncDecl: quals=None (at pp.c:5905)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__21__IO__selectIOFunc', quals=[] (at pp.c:5905)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:5907)
    FuncDecl: quals=None (at pp.c:5907)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__set', quals=[] (at pp.c:5907)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__toggle', quals=[], storage=['static'] (at pp.c:5909)
    FuncDecl: quals=None (at pp.c:5909)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__toggle', quals=[] (at pp.c:5909)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:5914)
    FuncDecl: quals=None (at pp.c:5914)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[] (at pp.c:5914)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__25__IO__getRaw', quals=[], storage=['inline', 'static'] (at pp.c:5916)
    FuncDecl: quals=None (at pp.c:5916)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__25__IO__getRaw', quals=[] (at pp.c:5916)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430GeneralIOP__25__IO__get', quals=[], storage=['inline', 'static'] (at pp.c:5917)
    FuncDecl: quals=None (at pp.c:5917)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__25__IO__get', quals=[] (at pp.c:5917)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430GeneralIOP__25__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:5918)
    FuncDecl: quals=None (at pp.c:5918)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__25__IO__makeInput', quals=[] (at pp.c:5918)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__25__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5922)
    FuncDecl: quals=None (at pp.c:5922)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__25__IO__selectModuleFunc', quals=[] (at pp.c:5922)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__25__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:5924)
    FuncDecl: quals=None (at pp.c:5924)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__25__IO__selectIOFunc', quals=[] (at pp.c:5924)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__26__IO__set', quals=[], storage=['static'] (at pp.c:5926)
    FuncDecl: quals=None (at pp.c:5926)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__26__IO__set', quals=[] (at pp.c:5926)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__26__IO__clr', quals=[], storage=['static'] (at pp.c:5927)
    FuncDecl: quals=None (at pp.c:5927)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__26__IO__clr', quals=[] (at pp.c:5927)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__26__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:5933)
    FuncDecl: quals=None (at pp.c:5933)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__26__IO__makeOutput', quals=[] (at pp.c:5933)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:5935)
    FuncDecl: quals=None (at pp.c:5935)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__set', quals=[] (at pp.c:5935)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__toggle', quals=[], storage=['static'] (at pp.c:5937)
    FuncDecl: quals=None (at pp.c:5937)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__toggle', quals=[] (at pp.c:5937)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:5942)
    FuncDecl: quals=None (at pp.c:5942)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[] (at pp.c:5942)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__29__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:5944)
    FuncDecl: quals=None (at pp.c:5944)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__29__IO__set', quals=[] (at pp.c:5944)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__29__IO__clr', quals=[], storage=['inline', 'static'] (at pp.c:5945)
    FuncDecl: quals=None (at pp.c:5945)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__29__IO__clr', quals=[] (at pp.c:5945)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__29__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:5951)
    FuncDecl: quals=None (at pp.c:5951)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__29__IO__makeOutput', quals=[] (at pp.c:5951)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__30__IO__set', quals=[], storage=['static'] (at pp.c:5953)
    FuncDecl: quals=None (at pp.c:5953)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__30__IO__set', quals=[] (at pp.c:5953)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__30__IO__clr', quals=[], storage=['static'] (at pp.c:5954)
    FuncDecl: quals=None (at pp.c:5954)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__30__IO__clr', quals=[] (at pp.c:5954)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__30__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:5960)
    FuncDecl: quals=None (at pp.c:5960)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__30__IO__makeOutput', quals=[] (at pp.c:5960)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:5962)
    FuncDecl: quals=None (at pp.c:5962)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__set', quals=[] (at pp.c:5962)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:5964)
    FuncDecl: quals=None (at pp.c:5964)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__toggle', quals=[] (at pp.c:5964)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:5969)
    FuncDecl: quals=None (at pp.c:5969)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[] (at pp.c:5969)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__40__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:5971)
    FuncDecl: quals=None (at pp.c:5971)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__40__IO__makeInput', quals=[] (at pp.c:5971)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__40__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5975)
    FuncDecl: quals=None (at pp.c:5975)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__40__IO__selectModuleFunc', quals=[] (at pp.c:5975)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__40__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:5977)
    FuncDecl: quals=None (at pp.c:5977)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__40__IO__selectIOFunc', quals=[] (at pp.c:5977)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__41__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:5979)
    FuncDecl: quals=None (at pp.c:5979)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__41__IO__makeInput', quals=[] (at pp.c:5979)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__41__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5983)
    FuncDecl: quals=None (at pp.c:5983)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__41__IO__selectModuleFunc', quals=[] (at pp.c:5983)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__41__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:5985)
    FuncDecl: quals=None (at pp.c:5985)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__41__IO__selectIOFunc', quals=[] (at pp.c:5985)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__42__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:5987)
    FuncDecl: quals=None (at pp.c:5987)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__42__IO__makeInput', quals=[] (at pp.c:5987)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__42__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5991)
    FuncDecl: quals=None (at pp.c:5991)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__42__IO__selectModuleFunc', quals=[] (at pp.c:5991)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__42__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:5993)
    FuncDecl: quals=None (at pp.c:5993)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__42__IO__selectIOFunc', quals=[] (at pp.c:5993)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__43__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:5995)
    FuncDecl: quals=None (at pp.c:5995)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__43__IO__makeInput', quals=[] (at pp.c:5995)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__43__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:5999)
    FuncDecl: quals=None (at pp.c:5999)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__43__IO__selectModuleFunc', quals=[] (at pp.c:5999)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__43__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:6001)
    FuncDecl: quals=None (at pp.c:6001)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__43__IO__selectIOFunc', quals=[] (at pp.c:6001)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__44__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:6003)
    FuncDecl: quals=None (at pp.c:6003)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__44__IO__makeInput', quals=[] (at pp.c:6003)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__44__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:6007)
    FuncDecl: quals=None (at pp.c:6007)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__44__IO__selectModuleFunc', quals=[] (at pp.c:6007)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__44__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:6009)
    FuncDecl: quals=None (at pp.c:6009)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__44__IO__selectIOFunc', quals=[] (at pp.c:6009)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__45__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:6011)
    FuncDecl: quals=None (at pp.c:6011)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__45__IO__makeInput', quals=[] (at pp.c:6011)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__45__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:6015)
    FuncDecl: quals=None (at pp.c:6015)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__45__IO__selectModuleFunc', quals=[] (at pp.c:6015)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__45__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:6017)
    FuncDecl: quals=None (at pp.c:6017)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__45__IO__selectIOFunc', quals=[] (at pp.c:6017)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__46__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:6019)
    FuncDecl: quals=None (at pp.c:6019)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__46__IO__makeInput', quals=[] (at pp.c:6019)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__46__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:6023)
    FuncDecl: quals=None (at pp.c:6023)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__46__IO__selectModuleFunc', quals=[] (at pp.c:6023)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__46__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:6025)
    FuncDecl: quals=None (at pp.c:6025)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__46__IO__selectIOFunc', quals=[] (at pp.c:6025)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__47__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:6027)
    FuncDecl: quals=None (at pp.c:6027)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__47__IO__makeInput', quals=[] (at pp.c:6027)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__47__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:6031)
    FuncDecl: quals=None (at pp.c:6031)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__47__IO__selectModuleFunc', quals=[] (at pp.c:6031)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430GeneralIOP__47__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:6033)
    FuncDecl: quals=None (at pp.c:6033)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430GeneralIOP__47__IO__selectIOFunc', quals=[] (at pp.c:6033)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__HplGeneralIO__makeInput', quals=[], storage=['static'] (at pp.c:6035)
    FuncDecl: quals=None (at pp.c:6035)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__makeInput', quals=[] (at pp.c:6035)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__0__HplGeneralIO__get', quals=[], storage=['static'] (at pp.c:6037)
    FuncDecl: quals=None (at pp.c:6037)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__get', quals=[] (at pp.c:6037)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__get', quals=[], storage=['inline', 'static'] (at pp.c:6039)
    FuncDecl: quals=None (at pp.c:6039)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__get', quals=[] (at pp.c:6039)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__0__GeneralIO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:6040)
    FuncDecl: quals=None (at pp.c:6040)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__0__GeneralIO__makeInput', quals=[] (at pp.c:6040)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__HplGeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:6042)
    FuncDecl: quals=None (at pp.c:6042)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__makeOutput', quals=[] (at pp.c:6042)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__HplGeneralIO__set', quals=[], storage=['static'] (at pp.c:6044)
    FuncDecl: quals=None (at pp.c:6044)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__set', quals=[] (at pp.c:6044)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__HplGeneralIO__clr', quals=[], storage=['static'] (at pp.c:6049)
    FuncDecl: quals=None (at pp.c:6049)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__clr', quals=[] (at pp.c:6049)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:6051)
    FuncDecl: quals=None (at pp.c:6051)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__set', quals=[] (at pp.c:6051)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:6052)
    FuncDecl: quals=None (at pp.c:6052)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__clr', quals=[] (at pp.c:6052)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__1__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:6057)
    FuncDecl: quals=None (at pp.c:6057)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__1__GeneralIO__makeOutput', quals=[] (at pp.c:6057)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__2__HplGeneralIO__get', quals=[], storage=['static'] (at pp.c:6059)
    FuncDecl: quals=None (at pp.c:6059)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__HplGeneralIO__get', quals=[] (at pp.c:6059)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__2__GeneralIO__get', quals=[], storage=['inline', 'static'] (at pp.c:6061)
    FuncDecl: quals=None (at pp.c:6061)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__2__GeneralIO__get', quals=[] (at pp.c:6061)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__3__HplGeneralIO__get', quals=[], storage=['static'] (at pp.c:6063)
    FuncDecl: quals=None (at pp.c:6063)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__3__HplGeneralIO__get', quals=[] (at pp.c:6063)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__3__GeneralIO__get', quals=[], storage=['inline', 'static'] (at pp.c:6065)
    FuncDecl: quals=None (at pp.c:6065)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__3__GeneralIO__get', quals=[] (at pp.c:6065)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__4__HplGeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:6067)
    FuncDecl: quals=None (at pp.c:6067)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__4__HplGeneralIO__makeOutput', quals=[] (at pp.c:6067)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__4__HplGeneralIO__set', quals=[], storage=['static'] (at pp.c:6069)
    FuncDecl: quals=None (at pp.c:6069)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__4__HplGeneralIO__set', quals=[] (at pp.c:6069)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__4__HplGeneralIO__clr', quals=[], storage=['static'] (at pp.c:6074)
    FuncDecl: quals=None (at pp.c:6074)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__4__HplGeneralIO__clr', quals=[] (at pp.c:6074)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__4__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:6076)
    FuncDecl: quals=None (at pp.c:6076)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__4__GeneralIO__set', quals=[] (at pp.c:6076)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__4__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:6077)
    FuncDecl: quals=None (at pp.c:6077)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__4__GeneralIO__clr', quals=[] (at pp.c:6077)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__4__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:6082)
    FuncDecl: quals=None (at pp.c:6082)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__4__GeneralIO__makeOutput', quals=[] (at pp.c:6082)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__5__HplGeneralIO__makeInput', quals=[], storage=['static'] (at pp.c:6084)
    FuncDecl: quals=None (at pp.c:6084)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__5__HplGeneralIO__makeInput', quals=[] (at pp.c:6084)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__5__HplGeneralIO__get', quals=[], storage=['static'] (at pp.c:6086)
    FuncDecl: quals=None (at pp.c:6086)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__5__HplGeneralIO__get', quals=[] (at pp.c:6086)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__5__GeneralIO__get', quals=[], storage=['inline', 'static'] (at pp.c:6088)
    FuncDecl: quals=None (at pp.c:6088)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__5__GeneralIO__get', quals=[] (at pp.c:6088)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__5__GeneralIO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:6089)
    FuncDecl: quals=None (at pp.c:6089)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__5__GeneralIO__makeInput', quals=[] (at pp.c:6089)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__6__HplGeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:6091)
    FuncDecl: quals=None (at pp.c:6091)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__6__HplGeneralIO__makeOutput', quals=[] (at pp.c:6091)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__6__HplGeneralIO__set', quals=[], storage=['static'] (at pp.c:6093)
    FuncDecl: quals=None (at pp.c:6093)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__6__HplGeneralIO__set', quals=[] (at pp.c:6093)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__6__HplGeneralIO__clr', quals=[], storage=['static'] (at pp.c:6098)
    FuncDecl: quals=None (at pp.c:6098)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__6__HplGeneralIO__clr', quals=[] (at pp.c:6098)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__6__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:6100)
    FuncDecl: quals=None (at pp.c:6100)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__6__GeneralIO__set', quals=[] (at pp.c:6100)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__6__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:6101)
    FuncDecl: quals=None (at pp.c:6101)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__6__GeneralIO__clr', quals=[] (at pp.c:6101)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__6__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:6106)
    FuncDecl: quals=None (at pp.c:6106)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__6__GeneralIO__makeOutput', quals=[] (at pp.c:6106)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__Msp430Capture__clearOverflow', quals=[], storage=['static'] (at pp.c:6108)
    FuncDecl: quals=None (at pp.c:6108)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Msp430Capture__clearOverflow', quals=[] (at pp.c:6108)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__Capture__captured', quals=[], storage=['static'] (at pp.c:6110)
    FuncDecl: quals=None (at pp.c:6110)
      ParamList:  (at pp.c:6110)
        Decl: name='time', quals=[], storage=[] (at pp.c:6110)
          TypeDecl: declname='time', quals=[] (at pp.c:6110)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Capture__captured', quals=[] (at pp.c:6110)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__Msp430TimerControl__setControlAsCapture', quals=[], storage=['static'] (at pp.c:6112)
    FuncDecl: quals=None (at pp.c:6112)
      ParamList:  (at pp.c:6112)
        Decl: name='cm', quals=[], storage=[] (at pp.c:6112)
          TypeDecl: declname='cm', quals=[] (at pp.c:6112)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Msp430TimerControl__setControlAsCapture', quals=[] (at pp.c:6112)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__Msp430TimerControl__enableEvents', quals=[], storage=['static'] (at pp.c:6114)
    FuncDecl: quals=None (at pp.c:6114)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Msp430TimerControl__enableEvents', quals=[] (at pp.c:6114)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__Msp430TimerControl__disableEvents', quals=[], storage=['static'] (at pp.c:6115)
    FuncDecl: quals=None (at pp.c:6115)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Msp430TimerControl__disableEvents', quals=[] (at pp.c:6115)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__Msp430TimerControl__clearPendingInterrupt', quals=[], storage=['static'] (at pp.c:6117)
    FuncDecl: quals=None (at pp.c:6117)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Msp430TimerControl__clearPendingInterrupt', quals=[] (at pp.c:6117)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__GeneralIO__selectIOFunc', quals=[], storage=['static'] (at pp.c:6119)
    FuncDecl: quals=None (at pp.c:6119)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__GeneralIO__selectIOFunc', quals=[] (at pp.c:6119)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__GeneralIO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:6121)
    FuncDecl: quals=None (at pp.c:6121)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__GeneralIO__selectModuleFunc', quals=[] (at pp.c:6121)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__enableCapture', quals=[], storage=['static'] (at pp.c:6123)
    FuncDecl: quals=None (at pp.c:6123)
      ParamList:  (at pp.c:6123)
        Decl: name='mode', quals=[], storage=[] (at pp.c:6123)
          TypeDecl: declname='mode', quals=[] (at pp.c:6123)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='GpioCaptureC__0__enableCapture', quals=[] (at pp.c:6123)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='GpioCaptureC__0__Capture__captureRisingEdge', quals=[], storage=['inline', 'static'] (at pp.c:6125)
    FuncDecl: quals=None (at pp.c:6125)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Capture__captureRisingEdge', quals=[] (at pp.c:6125)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='GpioCaptureC__0__Capture__captureFallingEdge', quals=[], storage=['inline', 'static'] (at pp.c:6129)
    FuncDecl: quals=None (at pp.c:6129)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Capture__captureFallingEdge', quals=[] (at pp.c:6129)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='GpioCaptureC__0__Capture__disable', quals=[], storage=['inline', 'static'] (at pp.c:6133)
    FuncDecl: quals=None (at pp.c:6133)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Capture__disable', quals=[] (at pp.c:6133)
        IdentifierType: names=['void'] (at None)
  Decl: name='GpioCaptureC__0__Msp430Capture__captured', quals=[], storage=['inline', 'static'] (at pp.c:6140)
    FuncDecl: quals=None (at pp.c:6140)
      ParamList:  (at pp.c:6140)
        Decl: name='time', quals=[], storage=[] (at pp.c:6140)
          TypeDecl: declname='time', quals=[] (at pp.c:6140)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='GpioCaptureC__0__Msp430Capture__captured', quals=[] (at pp.c:6140)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port14__fired', quals=[], storage=['static'] (at pp.c:6142)
    FuncDecl: quals=None (at pp.c:6142)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port14__fired', quals=[] (at pp.c:6142)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port26__fired', quals=[], storage=['static'] (at pp.c:6144)
    FuncDecl: quals=None (at pp.c:6144)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port26__fired', quals=[] (at pp.c:6144)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port17__fired', quals=[], storage=['static'] (at pp.c:6146)
    FuncDecl: quals=None (at pp.c:6146)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port17__fired', quals=[] (at pp.c:6146)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port21__fired', quals=[], storage=['static'] (at pp.c:6148)
    FuncDecl: quals=None (at pp.c:6148)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port21__fired', quals=[] (at pp.c:6148)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port12__fired', quals=[], storage=['static'] (at pp.c:6150)
    FuncDecl: quals=None (at pp.c:6150)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port12__fired', quals=[] (at pp.c:6150)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port24__fired', quals=[], storage=['static'] (at pp.c:6152)
    FuncDecl: quals=None (at pp.c:6152)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port24__fired', quals=[] (at pp.c:6152)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port15__fired', quals=[], storage=['static'] (at pp.c:6154)
    FuncDecl: quals=None (at pp.c:6154)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port15__fired', quals=[] (at pp.c:6154)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port27__fired', quals=[], storage=['static'] (at pp.c:6156)
    FuncDecl: quals=None (at pp.c:6156)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port27__fired', quals=[] (at pp.c:6156)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port10__fired', quals=[], storage=['static'] (at pp.c:6158)
    FuncDecl: quals=None (at pp.c:6158)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port10__fired', quals=[] (at pp.c:6158)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port22__fired', quals=[], storage=['static'] (at pp.c:6160)
    FuncDecl: quals=None (at pp.c:6160)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port22__fired', quals=[] (at pp.c:6160)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port13__fired', quals=[], storage=['static'] (at pp.c:6162)
    FuncDecl: quals=None (at pp.c:6162)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port13__fired', quals=[] (at pp.c:6162)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port25__fired', quals=[], storage=['static'] (at pp.c:6164)
    FuncDecl: quals=None (at pp.c:6164)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port25__fired', quals=[] (at pp.c:6164)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port16__fired', quals=[], storage=['static'] (at pp.c:6166)
    FuncDecl: quals=None (at pp.c:6166)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port16__fired', quals=[] (at pp.c:6166)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port20__fired', quals=[], storage=['static'] (at pp.c:6168)
    FuncDecl: quals=None (at pp.c:6168)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port20__fired', quals=[] (at pp.c:6168)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port11__fired', quals=[], storage=['static'] (at pp.c:6170)
    FuncDecl: quals=None (at pp.c:6170)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port11__fired', quals=[] (at pp.c:6170)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port23__fired', quals=[], storage=['static'] (at pp.c:6172)
    FuncDecl: quals=None (at pp.c:6172)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port23__fired', quals=[] (at pp.c:6172)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_PORT1_VECTOR', quals=[], storage=[] (at pp.c:6174)
    FuncDecl: quals=None (at pp.c:6174)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_PORT1_VECTOR', quals=[] (at pp.c:6174)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port11__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:6176)
    FuncDecl: quals=None (at pp.c:6176)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port11__default__fired', quals=[] (at pp.c:6176)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port12__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:6177)
    FuncDecl: quals=None (at pp.c:6177)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port12__default__fired', quals=[] (at pp.c:6177)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port13__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:6178)
    FuncDecl: quals=None (at pp.c:6178)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port13__default__fired', quals=[] (at pp.c:6178)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port15__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:6180)
    FuncDecl: quals=None (at pp.c:6180)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port15__default__fired', quals=[] (at pp.c:6180)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port16__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:6181)
    FuncDecl: quals=None (at pp.c:6181)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port16__default__fired', quals=[] (at pp.c:6181)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port17__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:6182)
    FuncDecl: quals=None (at pp.c:6182)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port17__default__fired', quals=[] (at pp.c:6182)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port10__enable', quals=[], storage=['inline', 'static'] (at pp.c:6183)
    FuncDecl: quals=None (at pp.c:6183)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port10__enable', quals=[] (at pp.c:6183)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port14__enable', quals=[], storage=['inline', 'static'] (at pp.c:6187)
    FuncDecl: quals=None (at pp.c:6187)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port14__enable', quals=[] (at pp.c:6187)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port10__disable', quals=[], storage=['inline', 'static'] (at pp.c:6191)
    FuncDecl: quals=None (at pp.c:6191)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port10__disable', quals=[] (at pp.c:6191)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port14__disable', quals=[], storage=['inline', 'static'] (at pp.c:6195)
    FuncDecl: quals=None (at pp.c:6195)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port14__disable', quals=[] (at pp.c:6195)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port10__clear', quals=[], storage=['inline', 'static'] (at pp.c:6199)
    FuncDecl: quals=None (at pp.c:6199)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port10__clear', quals=[] (at pp.c:6199)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port11__clear', quals=[], storage=['inline', 'static'] (at pp.c:6200)
    FuncDecl: quals=None (at pp.c:6200)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port11__clear', quals=[] (at pp.c:6200)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port12__clear', quals=[], storage=['inline', 'static'] (at pp.c:6201)
    FuncDecl: quals=None (at pp.c:6201)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port12__clear', quals=[] (at pp.c:6201)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port13__clear', quals=[], storage=['inline', 'static'] (at pp.c:6202)
    FuncDecl: quals=None (at pp.c:6202)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port13__clear', quals=[] (at pp.c:6202)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port14__clear', quals=[], storage=['inline', 'static'] (at pp.c:6203)
    FuncDecl: quals=None (at pp.c:6203)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port14__clear', quals=[] (at pp.c:6203)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port15__clear', quals=[], storage=['inline', 'static'] (at pp.c:6204)
    FuncDecl: quals=None (at pp.c:6204)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port15__clear', quals=[] (at pp.c:6204)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port16__clear', quals=[], storage=['inline', 'static'] (at pp.c:6205)
    FuncDecl: quals=None (at pp.c:6205)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port16__clear', quals=[] (at pp.c:6205)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port17__clear', quals=[], storage=['inline', 'static'] (at pp.c:6206)
    FuncDecl: quals=None (at pp.c:6206)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port17__clear', quals=[] (at pp.c:6206)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port10__edge', quals=[], storage=['inline', 'static'] (at pp.c:6215)
    FuncDecl: quals=None (at pp.c:6215)
      ParamList:  (at pp.c:6215)
        Decl: name='l2h', quals=[], storage=[] (at pp.c:6215)
          TypeDecl: declname='l2h', quals=[] (at pp.c:6215)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port10__edge', quals=[] (at pp.c:6215)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port14__edge', quals=[], storage=['inline', 'static'] (at pp.c:6217)
    FuncDecl: quals=None (at pp.c:6217)
      ParamList:  (at pp.c:6217)
        Decl: name='l2h', quals=[], storage=[] (at pp.c:6217)
          TypeDecl: declname='l2h', quals=[] (at pp.c:6217)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port14__edge', quals=[] (at pp.c:6217)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_PORT2_VECTOR', quals=[], storage=[] (at pp.c:6219)
    FuncDecl: quals=None (at pp.c:6219)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_PORT2_VECTOR', quals=[] (at pp.c:6219)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port20__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:6221)
    FuncDecl: quals=None (at pp.c:6221)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port20__default__fired', quals=[] (at pp.c:6221)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port21__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:6222)
    FuncDecl: quals=None (at pp.c:6222)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port21__default__fired', quals=[] (at pp.c:6222)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port22__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:6223)
    FuncDecl: quals=None (at pp.c:6223)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port22__default__fired', quals=[] (at pp.c:6223)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port23__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:6224)
    FuncDecl: quals=None (at pp.c:6224)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port23__default__fired', quals=[] (at pp.c:6224)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port24__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:6225)
    FuncDecl: quals=None (at pp.c:6225)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port24__default__fired', quals=[] (at pp.c:6225)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port25__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:6226)
    FuncDecl: quals=None (at pp.c:6226)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port25__default__fired', quals=[] (at pp.c:6226)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port26__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:6227)
    FuncDecl: quals=None (at pp.c:6227)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port26__default__fired', quals=[] (at pp.c:6227)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port27__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:6228)
    FuncDecl: quals=None (at pp.c:6228)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port27__default__fired', quals=[] (at pp.c:6228)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port20__clear', quals=[], storage=['inline', 'static'] (at pp.c:6230)
    FuncDecl: quals=None (at pp.c:6230)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port20__clear', quals=[] (at pp.c:6230)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port21__clear', quals=[], storage=['inline', 'static'] (at pp.c:6231)
    FuncDecl: quals=None (at pp.c:6231)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port21__clear', quals=[] (at pp.c:6231)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port22__clear', quals=[], storage=['inline', 'static'] (at pp.c:6232)
    FuncDecl: quals=None (at pp.c:6232)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port22__clear', quals=[] (at pp.c:6232)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port23__clear', quals=[], storage=['inline', 'static'] (at pp.c:6233)
    FuncDecl: quals=None (at pp.c:6233)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port23__clear', quals=[] (at pp.c:6233)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port24__clear', quals=[], storage=['inline', 'static'] (at pp.c:6234)
    FuncDecl: quals=None (at pp.c:6234)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port24__clear', quals=[] (at pp.c:6234)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port25__clear', quals=[], storage=['inline', 'static'] (at pp.c:6235)
    FuncDecl: quals=None (at pp.c:6235)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port25__clear', quals=[] (at pp.c:6235)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port26__clear', quals=[], storage=['inline', 'static'] (at pp.c:6236)
    FuncDecl: quals=None (at pp.c:6236)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port26__clear', quals=[] (at pp.c:6236)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430InterruptP__Port27__clear', quals=[], storage=['inline', 'static'] (at pp.c:6237)
    FuncDecl: quals=None (at pp.c:6237)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430InterruptP__Port27__clear', quals=[] (at pp.c:6237)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__0__HplInterrupt__clear', quals=[], storage=['static'] (at pp.c:6239)
    FuncDecl: quals=None (at pp.c:6239)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__clear', quals=[] (at pp.c:6239)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__0__HplInterrupt__disable', quals=[], storage=['static'] (at pp.c:6241)
    FuncDecl: quals=None (at pp.c:6241)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__disable', quals=[] (at pp.c:6241)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__0__HplInterrupt__edge', quals=[], storage=['static'] (at pp.c:6243)
    FuncDecl: quals=None (at pp.c:6243)
      ParamList:  (at pp.c:6243)
        Decl: name='low_to_high', quals=[], storage=[] (at pp.c:6243)
          TypeDecl: declname='low_to_high', quals=[] (at pp.c:6243)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__edge', quals=[] (at pp.c:6243)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__0__HplInterrupt__enable', quals=[], storage=['static'] (at pp.c:6245)
    FuncDecl: quals=None (at pp.c:6245)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__enable', quals=[] (at pp.c:6245)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__0__Interrupt__fired', quals=[], storage=['static'] (at pp.c:6247)
    FuncDecl: quals=None (at pp.c:6247)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__Interrupt__fired', quals=[] (at pp.c:6247)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__0__enable', quals=[], storage=['inline', 'static'] (at pp.c:6249)
    FuncDecl: quals=None (at pp.c:6249)
      ParamList:  (at pp.c:6249)
        Decl: name='rising', quals=[], storage=[] (at pp.c:6249)
          TypeDecl: declname='rising', quals=[] (at pp.c:6249)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__enable', quals=[] (at pp.c:6249)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430InterruptC__0__Interrupt__enableRisingEdge', quals=[], storage=['inline', 'static'] (at pp.c:6258)
    FuncDecl: quals=None (at pp.c:6258)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__Interrupt__enableRisingEdge', quals=[] (at pp.c:6258)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430InterruptC__0__Interrupt__disable', quals=[], storage=['inline', 'static'] (at pp.c:6266)
    FuncDecl: quals=None (at pp.c:6266)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__Interrupt__disable', quals=[] (at pp.c:6266)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430InterruptC__0__HplInterrupt__fired', quals=[], storage=['inline', 'static'] (at pp.c:6274)
    FuncDecl: quals=None (at pp.c:6274)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__fired', quals=[] (at pp.c:6274)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__1__HplInterrupt__clear', quals=[], storage=['static'] (at pp.c:6276)
    FuncDecl: quals=None (at pp.c:6276)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__clear', quals=[] (at pp.c:6276)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__1__HplInterrupt__disable', quals=[], storage=['static'] (at pp.c:6278)
    FuncDecl: quals=None (at pp.c:6278)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__disable', quals=[] (at pp.c:6278)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__1__HplInterrupt__edge', quals=[], storage=['static'] (at pp.c:6280)
    FuncDecl: quals=None (at pp.c:6280)
      ParamList:  (at pp.c:6280)
        Decl: name='low_to_high', quals=[], storage=[] (at pp.c:6280)
          TypeDecl: declname='low_to_high', quals=[] (at pp.c:6280)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__edge', quals=[] (at pp.c:6280)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__1__HplInterrupt__enable', quals=[], storage=['static'] (at pp.c:6282)
    FuncDecl: quals=None (at pp.c:6282)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__enable', quals=[] (at pp.c:6282)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__1__Interrupt__fired', quals=[], storage=['static'] (at pp.c:6284)
    FuncDecl: quals=None (at pp.c:6284)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__Interrupt__fired', quals=[] (at pp.c:6284)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430InterruptC__1__enable', quals=[], storage=['inline', 'static'] (at pp.c:6286)
    FuncDecl: quals=None (at pp.c:6286)
      ParamList:  (at pp.c:6286)
        Decl: name='rising', quals=[], storage=[] (at pp.c:6286)
          TypeDecl: declname='rising', quals=[] (at pp.c:6286)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__enable', quals=[] (at pp.c:6286)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430InterruptC__1__Interrupt__enableFallingEdge', quals=[], storage=['inline', 'static'] (at pp.c:6288)
    FuncDecl: quals=None (at pp.c:6288)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__Interrupt__enableFallingEdge', quals=[] (at pp.c:6288)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430InterruptC__1__Interrupt__disable', quals=[], storage=['inline', 'static'] (at pp.c:6292)
    FuncDecl: quals=None (at pp.c:6292)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__Interrupt__disable', quals=[] (at pp.c:6292)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430InterruptC__1__HplInterrupt__fired', quals=[], storage=['inline', 'static'] (at pp.c:6300)
    FuncDecl: quals=None (at pp.c:6300)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__fired', quals=[] (at pp.c:6300)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__SpiPacket__send', quals=[], storage=['static'] (at pp.c:6302)
    FuncDecl: quals=None (at pp.c:6302)
      ParamList:  (at pp.c:6304)
        Decl: name='txBuf', quals=[], storage=[] (at pp.c:6304)
          PtrDecl: quals=[] (at pp.c:6304)
            TypeDecl: declname='txBuf', quals=[] (at pp.c:6304)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rxBuf', quals=[], storage=[] (at pp.c:6306)
          PtrDecl: quals=[] (at pp.c:6306)
            TypeDecl: declname='rxBuf', quals=[] (at pp.c:6306)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:6315)
          TypeDecl: declname='len', quals=[] (at pp.c:6315)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420SpiP__SpiPacket__send', quals=[] (at pp.c:6302)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__Fifo__writeDone', quals=[], storage=['static'] (at pp.c:6317)
    FuncDecl: quals=None (at pp.c:6317)
      ParamList:  (at pp.c:6319)
        Decl: name='arg_0x101c0a020', quals=[], storage=[] (at pp.c:6319)
          TypeDecl: declname='arg_0x101c0a020', quals=[] (at pp.c:6319)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:6321)
          PtrDecl: quals=[] (at pp.c:6321)
            TypeDecl: declname='data', quals=[] (at pp.c:6321)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:6321)
          TypeDecl: declname='length', quals=[] (at pp.c:6321)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:6321)
          TypeDecl: declname='error', quals=[] (at pp.c:6321)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__writeDone', quals=[] (at pp.c:6317)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__Fifo__readDone', quals=[], storage=['static'] (at pp.c:6323)
    FuncDecl: quals=None (at pp.c:6323)
      ParamList:  (at pp.c:6325)
        Decl: name='arg_0x101c0a020', quals=[], storage=[] (at pp.c:6325)
          TypeDecl: declname='arg_0x101c0a020', quals=[] (at pp.c:6325)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:6327)
          PtrDecl: quals=[] (at pp.c:6327)
            TypeDecl: declname='data', quals=[] (at pp.c:6327)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:6327)
          TypeDecl: declname='length', quals=[] (at pp.c:6327)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:6327)
          TypeDecl: declname='error', quals=[] (at pp.c:6327)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__readDone', quals=[] (at pp.c:6323)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__ChipSpiResource__releasing', quals=[], storage=['static'] (at pp.c:6329)
    FuncDecl: quals=None (at pp.c:6329)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__ChipSpiResource__releasing', quals=[] (at pp.c:6329)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__SpiByte__write', quals=[], storage=['static'] (at pp.c:6331)
    FuncDecl: quals=None (at pp.c:6331)
      ParamList:  (at pp.c:6331)
        Decl: name='tx', quals=[], storage=[] (at pp.c:6331)
          TypeDecl: declname='tx', quals=[] (at pp.c:6331)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__SpiByte__write', quals=[] (at pp.c:6331)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420SpiP__WorkingState__toIdle', quals=[], storage=['static'] (at pp.c:6333)
    FuncDecl: quals=None (at pp.c:6333)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__WorkingState__toIdle', quals=[] (at pp.c:6333)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__WorkingState__isIdle', quals=[], storage=['static'] (at pp.c:6338)
    FuncDecl: quals=None (at pp.c:6338)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__WorkingState__isIdle', quals=[] (at pp.c:6338)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420SpiP__WorkingState__requestState', quals=[], storage=['static'] (at pp.c:6340)
    FuncDecl: quals=None (at pp.c:6340)
      ParamList:  (at pp.c:6340)
        Decl: name='reqState', quals=[], storage=[] (at pp.c:6340)
          TypeDecl: declname='reqState', quals=[] (at pp.c:6340)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__WorkingState__requestState', quals=[] (at pp.c:6340)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__SpiResource__release', quals=[], storage=['static'] (at pp.c:6342)
    FuncDecl: quals=None (at pp.c:6342)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__SpiResource__release', quals=[] (at pp.c:6342)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__SpiResource__immediateRequest', quals=[], storage=['static'] (at pp.c:6344)
    FuncDecl: quals=None (at pp.c:6344)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__SpiResource__immediateRequest', quals=[] (at pp.c:6344)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__SpiResource__request', quals=[], storage=['static'] (at pp.c:6346)
    FuncDecl: quals=None (at pp.c:6346)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__SpiResource__request', quals=[] (at pp.c:6346)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__SpiResource__isOwner', quals=[], storage=['static'] (at pp.c:6348)
    FuncDecl: quals=None (at pp.c:6348)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__SpiResource__isOwner', quals=[] (at pp.c:6348)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420SpiP__Resource__granted', quals=[], storage=['static'] (at pp.c:6350)
    FuncDecl: quals=None (at pp.c:6350)
      ParamList:  (at pp.c:6352)
        Decl: name='arg_0x101c0cd08', quals=[], storage=[] (at pp.c:6352)
          TypeDecl: declname='arg_0x101c0cd08', quals=[] (at pp.c:6352)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__granted', quals=[] (at pp.c:6350)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__grant__postTask', quals=[], storage=['static'] (at pp.c:6354)
    FuncDecl: quals=None (at pp.c:6354)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__grant__postTask', quals=[] (at pp.c:6354)
        IdentifierType: names=['error_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:6356)
    Enum: name='CC2420SpiP____nesc_unnamed4332' (at pp.c:6356)
      EnumeratorList:  (at pp.c:6358)
        Enumerator: name='CC2420SpiP__grant' (at pp.c:6358)
          Constant: type='int', value='5U' (at pp.c:6358)
  Typedef: name='CC2420SpiP____nesc_sillytask_grant', quals=[], storage=['typedef'] (at pp.c:6361)
    ArrayDecl:  (at pp.c:6361)
      TypeDecl: declname='CC2420SpiP____nesc_sillytask_grant', quals=[] (at pp.c:6361)
        IdentifierType: names=['int'] (at None)
      ID: name='CC2420SpiP__grant' (at pp.c:6361)
  Decl: name=None, quals=[], storage=[] (at pp.c:6363)
    Enum: name='CC2420SpiP____nesc_unnamed4333' (at pp.c:6363)
      EnumeratorList:  (at pp.c:6364)
        Enumerator: name='CC2420SpiP__RESOURCE_COUNT' (at pp.c:6364)
          Constant: type='int', value='5U' (at pp.c:6364)
        Enumerator: name='CC2420SpiP__NO_HOLDER' (at pp.c:6365)
          Constant: type='int', value='0xFF' (at pp.c:6365)
  Decl: name=None, quals=[], storage=[] (at pp.c:6369)
    Enum: name='CC2420SpiP____nesc_unnamed4334' (at pp.c:6369)
      EnumeratorList:  (at pp.c:6370)
        Enumerator: name='CC2420SpiP__S_IDLE' (at pp.c:6370)
        Enumerator: name='CC2420SpiP__S_BUSY' (at pp.c:6371)
  Decl: name='CC2420SpiP__m_addr', quals=[], storage=[] (at pp.c:6375)
    TypeDecl: declname='CC2420SpiP__m_addr', quals=[] (at pp.c:6375)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420SpiP__m_requests', quals=[], storage=[] (at pp.c:6378)
    TypeDecl: declname='CC2420SpiP__m_requests', quals=[] (at pp.c:6378)
      IdentifierType: names=['uint8_t'] (at None)
    Constant: type='int', value='0' (at pp.c:6378)
  Decl: name='CC2420SpiP__m_holder', quals=[], storage=[] (at pp.c:6381)
    TypeDecl: declname='CC2420SpiP__m_holder', quals=[] (at pp.c:6381)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='CC2420SpiP__NO_HOLDER' (at pp.c:6381)
  Decl: name='CC2420SpiP__release', quals=[], storage=[] (at pp.c:6384)
    TypeDecl: declname='CC2420SpiP__release', quals=[] (at pp.c:6384)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420SpiP__attemptRelease', quals=[], storage=['static'] (at pp.c:6387)
    FuncDecl: quals=None (at pp.c:6387)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__attemptRelease', quals=[] (at pp.c:6387)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__ChipSpiResource__abortRelease', quals=[], storage=['inline', 'static'] (at pp.c:6395)
    FuncDecl: quals=None (at pp.c:6395)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__ChipSpiResource__abortRelease', quals=[] (at pp.c:6395)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__ChipSpiResource__attemptRelease', quals=[], storage=['inline', 'static'] (at pp.c:6402)
    FuncDecl: quals=None (at pp.c:6402)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__ChipSpiResource__attemptRelease', quals=[] (at pp.c:6402)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__Resource__request', quals=[], storage=['static'] (at pp.c:6407)
    FuncDecl: quals=None (at pp.c:6407)
      ParamList:  (at pp.c:6407)
        Decl: name='id', quals=[], storage=[] (at pp.c:6407)
          TypeDecl: declname='id', quals=[] (at pp.c:6407)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__request', quals=[] (at pp.c:6407)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__Resource__immediateRequest', quals=[], storage=['static'] (at pp.c:6409)
    FuncDecl: quals=None (at pp.c:6409)
      ParamList:  (at pp.c:6409)
        Decl: name='id', quals=[], storage=[] (at pp.c:6409)
          TypeDecl: declname='id', quals=[] (at pp.c:6409)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__immediateRequest', quals=[] (at pp.c:6409)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__Resource__release', quals=[], storage=['static'] (at pp.c:6411)
    FuncDecl: quals=None (at pp.c:6411)
      ParamList:  (at pp.c:6411)
        Decl: name='id', quals=[], storage=[] (at pp.c:6411)
          TypeDecl: declname='id', quals=[] (at pp.c:6411)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__release', quals=[] (at pp.c:6411)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__Resource__isOwner', quals=[], storage=['inline', 'static'] (at pp.c:6413)
    FuncDecl: quals=None (at pp.c:6413)
      ParamList:  (at pp.c:6413)
        Decl: name='id', quals=[], storage=[] (at pp.c:6413)
          TypeDecl: declname='id', quals=[] (at pp.c:6413)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__isOwner', quals=[] (at pp.c:6413)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420SpiP__SpiResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:6419)
    FuncDecl: quals=None (at pp.c:6419)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__SpiResource__granted', quals=[] (at pp.c:6419)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__Fifo__beginRead', quals=[], storage=['static'] (at pp.c:6424)
    FuncDecl: quals=None (at pp.c:6424)
      ParamList:  (at pp.c:6424)
        Decl: name='addr', quals=[], storage=[] (at pp.c:6424)
          TypeDecl: declname='addr', quals=[] (at pp.c:6424)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:6424)
          PtrDecl: quals=[] (at pp.c:6424)
            TypeDecl: declname='data', quals=[] (at pp.c:6424)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:6425)
          TypeDecl: declname='len', quals=[] (at pp.c:6425)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__beginRead', quals=[] (at pp.c:6424)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__Fifo__continueRead', quals=[], storage=['inline', 'static'] (at pp.c:6427)
    FuncDecl: quals=None (at pp.c:6427)
      ParamList:  (at pp.c:6427)
        Decl: name='addr', quals=[], storage=[] (at pp.c:6427)
          TypeDecl: declname='addr', quals=[] (at pp.c:6427)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:6427)
          PtrDecl: quals=[] (at pp.c:6427)
            TypeDecl: declname='data', quals=[] (at pp.c:6427)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:6428)
          TypeDecl: declname='len', quals=[] (at pp.c:6428)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__continueRead', quals=[] (at pp.c:6427)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__Fifo__write', quals=[], storage=['inline', 'static'] (at pp.c:6432)
    FuncDecl: quals=None (at pp.c:6432)
      ParamList:  (at pp.c:6432)
        Decl: name='addr', quals=[], storage=[] (at pp.c:6432)
          TypeDecl: declname='addr', quals=[] (at pp.c:6432)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:6432)
          PtrDecl: quals=[] (at pp.c:6432)
            TypeDecl: declname='data', quals=[] (at pp.c:6432)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:6433)
          TypeDecl: declname='len', quals=[] (at pp.c:6433)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__write', quals=[] (at pp.c:6432)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__Ram__write', quals=[], storage=['static'] (at pp.c:6435)
    FuncDecl: quals=None (at pp.c:6435)
      ParamList:  (at pp.c:6435)
        Decl: name='addr', quals=[], storage=[] (at pp.c:6435)
          TypeDecl: declname='addr', quals=[] (at pp.c:6435)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='offset', quals=[], storage=[] (at pp.c:6435)
          TypeDecl: declname='offset', quals=[] (at pp.c:6435)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:6436)
          PtrDecl: quals=[] (at pp.c:6436)
            TypeDecl: declname='data', quals=[] (at pp.c:6436)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:6437)
          TypeDecl: declname='len', quals=[] (at pp.c:6437)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Ram__write', quals=[] (at pp.c:6435)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__Reg__read', quals=[], storage=['inline', 'static'] (at pp.c:6439)
    FuncDecl: quals=None (at pp.c:6439)
      ParamList:  (at pp.c:6439)
        Decl: name='addr', quals=[], storage=[] (at pp.c:6439)
          TypeDecl: declname='addr', quals=[] (at pp.c:6439)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:6439)
          PtrDecl: quals=[] (at pp.c:6439)
            TypeDecl: declname='data', quals=[] (at pp.c:6439)
              IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Reg__read', quals=[] (at pp.c:6439)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__Reg__write', quals=[], storage=['static'] (at pp.c:6441)
    FuncDecl: quals=None (at pp.c:6441)
      ParamList:  (at pp.c:6441)
        Decl: name='addr', quals=[], storage=[] (at pp.c:6441)
          TypeDecl: declname='addr', quals=[] (at pp.c:6441)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:6441)
          TypeDecl: declname='data', quals=[] (at pp.c:6441)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Reg__write', quals=[] (at pp.c:6441)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__Strobe__strobe', quals=[], storage=['static'] (at pp.c:6443)
    FuncDecl: quals=None (at pp.c:6443)
      ParamList:  (at pp.c:6443)
        Decl: name='addr', quals=[], storage=[] (at pp.c:6443)
          TypeDecl: declname='addr', quals=[] (at pp.c:6443)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Strobe__strobe', quals=[] (at pp.c:6443)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420SpiP__SpiPacket__sendDone', quals=[], storage=['static'] (at pp.c:6454)
    FuncDecl: quals=None (at pp.c:6454)
      ParamList:  (at pp.c:6454)
        Decl: name='tx_buf', quals=[], storage=[] (at pp.c:6454)
          PtrDecl: quals=[] (at pp.c:6454)
            TypeDecl: declname='tx_buf', quals=[] (at pp.c:6454)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rx_buf', quals=[], storage=[] (at pp.c:6454)
          PtrDecl: quals=[] (at pp.c:6454)
            TypeDecl: declname='rx_buf', quals=[] (at pp.c:6454)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:6455)
          TypeDecl: declname='len', quals=[] (at pp.c:6455)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:6455)
          TypeDecl: declname='error', quals=[] (at pp.c:6455)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420SpiP__SpiPacket__sendDone', quals=[] (at pp.c:6454)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__attemptRelease', quals=[], storage=['static'] (at pp.c:6464)
    FuncDecl: quals=None (at pp.c:6464)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__attemptRelease', quals=[] (at pp.c:6464)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420SpiP__grant__runTask', quals=[], storage=['inline', 'static'] (at pp.c:6466)
    FuncDecl: quals=None (at pp.c:6466)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420SpiP__grant__runTask', quals=[] (at pp.c:6466)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:6475)
    FuncDecl: quals=None (at pp.c:6475)
      ParamList:  (at pp.c:6475)
        Decl: name='id', quals=[], storage=[] (at pp.c:6475)
          TypeDecl: declname='id', quals=[] (at pp.c:6475)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Resource__default__granted', quals=[] (at pp.c:6475)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__Fifo__default__readDone', quals=[], storage=['inline', 'static'] (at pp.c:6478)
    FuncDecl: quals=None (at pp.c:6478)
      ParamList:  (at pp.c:6478)
        Decl: name='addr', quals=[], storage=[] (at pp.c:6478)
          TypeDecl: declname='addr', quals=[] (at pp.c:6478)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rx_buf', quals=[], storage=[] (at pp.c:6478)
          PtrDecl: quals=[] (at pp.c:6478)
            TypeDecl: declname='rx_buf', quals=[] (at pp.c:6478)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rx_len', quals=[], storage=[] (at pp.c:6478)
          TypeDecl: declname='rx_len', quals=[] (at pp.c:6478)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:6478)
          TypeDecl: declname='error', quals=[] (at pp.c:6478)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__default__readDone', quals=[] (at pp.c:6478)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420SpiP__Fifo__default__writeDone', quals=[], storage=['inline', 'static'] (at pp.c:6481)
    FuncDecl: quals=None (at pp.c:6481)
      ParamList:  (at pp.c:6481)
        Decl: name='addr', quals=[], storage=[] (at pp.c:6481)
          TypeDecl: declname='addr', quals=[] (at pp.c:6481)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='tx_buf', quals=[], storage=[] (at pp.c:6481)
          PtrDecl: quals=[] (at pp.c:6481)
            TypeDecl: declname='tx_buf', quals=[] (at pp.c:6481)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='tx_len', quals=[], storage=[] (at pp.c:6481)
          TypeDecl: declname='tx_len', quals=[] (at pp.c:6481)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:6481)
          TypeDecl: declname='error', quals=[] (at pp.c:6481)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420SpiP__Fifo__default__writeDone', quals=[] (at pp.c:6481)
        IdentifierType: names=['void'] (at None)
  Decl: name='StateImplP__state', quals=[], storage=[] (at pp.c:6483)
    ArrayDecl:  (at pp.c:6483)
      TypeDecl: declname='StateImplP__state', quals=[] (at pp.c:6483)
        IdentifierType: names=['uint8_t'] (at None)
      Constant: type='int', value='4U' (at pp.c:6483)
  Decl: name=None, quals=[], storage=[] (at pp.c:6485)
    Enum: name='StateImplP____nesc_unnamed4335' (at pp.c:6485)
      EnumeratorList:  (at pp.c:6486)
        Enumerator: name='StateImplP__S_IDLE' (at pp.c:6486)
          Constant: type='int', value='0' (at pp.c:6486)
  Decl: name='StateImplP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:6490)
    FuncDecl: quals=None (at pp.c:6490)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='StateImplP__Init__init', quals=[] (at pp.c:6490)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='StateImplP__State__requestState', quals=[], storage=['static'] (at pp.c:6492)
    FuncDecl: quals=None (at pp.c:6492)
      ParamList:  (at pp.c:6492)
        Decl: name='id', quals=[], storage=[] (at pp.c:6492)
          TypeDecl: declname='id', quals=[] (at pp.c:6492)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='reqState', quals=[], storage=[] (at pp.c:6492)
          TypeDecl: declname='reqState', quals=[] (at pp.c:6492)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='StateImplP__State__requestState', quals=[] (at pp.c:6492)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='StateImplP__State__forceState', quals=[], storage=['inline', 'static'] (at pp.c:6494)
    FuncDecl: quals=None (at pp.c:6494)
      ParamList:  (at pp.c:6494)
        Decl: name='id', quals=[], storage=[] (at pp.c:6494)
          TypeDecl: declname='id', quals=[] (at pp.c:6494)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='reqState', quals=[], storage=[] (at pp.c:6494)
          TypeDecl: declname='reqState', quals=[] (at pp.c:6494)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='StateImplP__State__forceState', quals=[] (at pp.c:6494)
        IdentifierType: names=['void'] (at None)
  Decl: name='StateImplP__State__toIdle', quals=[], storage=['inline', 'static'] (at pp.c:6501)
    FuncDecl: quals=None (at pp.c:6501)
      ParamList:  (at pp.c:6501)
        Decl: name='id', quals=[], storage=[] (at pp.c:6501)
          TypeDecl: declname='id', quals=[] (at pp.c:6501)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='StateImplP__State__toIdle', quals=[] (at pp.c:6501)
        IdentifierType: names=['void'] (at None)
  Decl: name='StateImplP__State__isIdle', quals=[], storage=['inline', 'static'] (at pp.c:6509)
    FuncDecl: quals=None (at pp.c:6509)
      ParamList:  (at pp.c:6509)
        Decl: name='id', quals=[], storage=[] (at pp.c:6509)
          TypeDecl: declname='id', quals=[] (at pp.c:6509)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='StateImplP__State__isIdle', quals=[] (at pp.c:6509)
        IdentifierType: names=['bool'] (at None)
  Decl: name='StateImplP__State__isState', quals=[], storage=['static'] (at pp.c:6516)
    FuncDecl: quals=None (at pp.c:6516)
      ParamList:  (at pp.c:6516)
        Decl: name='id', quals=[], storage=[] (at pp.c:6516)
          TypeDecl: declname='id', quals=[] (at pp.c:6516)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='myState', quals=[], storage=[] (at pp.c:6516)
          TypeDecl: declname='myState', quals=[] (at pp.c:6516)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='StateImplP__State__isState', quals=[] (at pp.c:6516)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__SpiPacket__sendDone', quals=[], storage=['static'] (at pp.c:6518)
    FuncDecl: quals=None (at pp.c:6518)
      ParamList:  (at pp.c:6520)
        Decl: name='arg_0x101cee7d8', quals=[], storage=[] (at pp.c:6520)
          TypeDecl: declname='arg_0x101cee7d8', quals=[] (at pp.c:6520)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='txBuf', quals=[], storage=[] (at pp.c:6522)
          PtrDecl: quals=[] (at pp.c:6522)
            TypeDecl: declname='txBuf', quals=[] (at pp.c:6522)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rxBuf', quals=[], storage=[] (at pp.c:6523)
          PtrDecl: quals=[] (at pp.c:6523)
            TypeDecl: declname='rxBuf', quals=[] (at pp.c:6523)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:6529)
          TypeDecl: declname='len', quals=[] (at pp.c:6529)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:6530)
          TypeDecl: declname='error', quals=[] (at pp.c:6530)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__SpiPacket__sendDone', quals=[] (at pp.c:6518)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Msp430SpiConfigure__getConfig', quals=[], storage=['static'] (at pp.c:6532)
    FuncDecl: quals=None (at pp.c:6532)
      ParamList:  (at pp.c:6534)
        Decl: name='arg_0x101cec830', quals=[], storage=[] (at pp.c:6534)
          TypeDecl: declname='arg_0x101cec830', quals=[] (at pp.c:6534)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:6532)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Msp430SpiConfigure__getConfig', quals=[] (at pp.c:6532)
          IdentifierType: names=['msp430_spi_union_config_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Usart__enableRxIntr', quals=[], storage=['static'] (at pp.c:6536)
    FuncDecl: quals=None (at pp.c:6536)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__enableRxIntr', quals=[] (at pp.c:6536)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Usart__clrRxIntr', quals=[], storage=['static'] (at pp.c:6538)
    FuncDecl: quals=None (at pp.c:6538)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__clrRxIntr', quals=[] (at pp.c:6538)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Usart__resetUsart', quals=[], storage=['static'] (at pp.c:6540)
    FuncDecl: quals=None (at pp.c:6540)
      ParamList:  (at pp.c:6540)
        Decl: name='reset', quals=[], storage=[] (at pp.c:6540)
          TypeDecl: declname='reset', quals=[] (at pp.c:6540)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__resetUsart', quals=[] (at pp.c:6540)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Usart__disableRxIntr', quals=[], storage=['static'] (at pp.c:6542)
    FuncDecl: quals=None (at pp.c:6542)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__disableRxIntr', quals=[] (at pp.c:6542)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Usart__tx', quals=[], storage=['static'] (at pp.c:6544)
    FuncDecl: quals=None (at pp.c:6544)
      ParamList:  (at pp.c:6544)
        Decl: name='data', quals=[], storage=[] (at pp.c:6544)
          TypeDecl: declname='data', quals=[] (at pp.c:6544)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__tx', quals=[] (at pp.c:6544)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Usart__setModeSpi', quals=[], storage=['static'] (at pp.c:6546)
    FuncDecl: quals=None (at pp.c:6546)
      ParamList:  (at pp.c:6546)
        Decl: name='config', quals=[], storage=[] (at pp.c:6546)
          PtrDecl: quals=[] (at pp.c:6546)
            TypeDecl: declname='config', quals=[] (at pp.c:6546)
              IdentifierType: names=['msp430_spi_union_config_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__setModeSpi', quals=[] (at pp.c:6546)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Usart__rx', quals=[], storage=['static'] (at pp.c:6548)
    FuncDecl: quals=None (at pp.c:6548)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__rx', quals=[] (at pp.c:6548)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Usart__isRxIntrPending', quals=[], storage=['static'] (at pp.c:6550)
    FuncDecl: quals=None (at pp.c:6550)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__isRxIntrPending', quals=[] (at pp.c:6550)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Usart__disableSpi', quals=[], storage=['static'] (at pp.c:6552)
    FuncDecl: quals=None (at pp.c:6552)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__disableSpi', quals=[] (at pp.c:6552)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__release', quals=[], storage=['static'] (at pp.c:6554)
    FuncDecl: quals=None (at pp.c:6554)
      ParamList:  (at pp.c:6556)
        Decl: name='arg_0x101ced588', quals=[], storage=[] (at pp.c:6556)
          TypeDecl: declname='arg_0x101ced588', quals=[] (at pp.c:6556)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__release', quals=[] (at pp.c:6554)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__immediateRequest', quals=[], storage=['static'] (at pp.c:6558)
    FuncDecl: quals=None (at pp.c:6558)
      ParamList:  (at pp.c:6560)
        Decl: name='arg_0x101ced588', quals=[], storage=[] (at pp.c:6560)
          TypeDecl: declname='arg_0x101ced588', quals=[] (at pp.c:6560)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__immediateRequest', quals=[] (at pp.c:6558)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__request', quals=[], storage=['static'] (at pp.c:6562)
    FuncDecl: quals=None (at pp.c:6562)
      ParamList:  (at pp.c:6564)
        Decl: name='arg_0x101ced588', quals=[], storage=[] (at pp.c:6564)
          TypeDecl: declname='arg_0x101ced588', quals=[] (at pp.c:6564)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__request', quals=[] (at pp.c:6562)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__isOwner', quals=[], storage=['static'] (at pp.c:6566)
    FuncDecl: quals=None (at pp.c:6566)
      ParamList:  (at pp.c:6568)
        Decl: name='arg_0x101ced588', quals=[], storage=[] (at pp.c:6568)
          TypeDecl: declname='arg_0x101ced588', quals=[] (at pp.c:6568)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__isOwner', quals=[] (at pp.c:6566)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__granted', quals=[], storage=['static'] (at pp.c:6570)
    FuncDecl: quals=None (at pp.c:6570)
      ParamList:  (at pp.c:6572)
        Decl: name='arg_0x101cf1500', quals=[], storage=[] (at pp.c:6572)
          TypeDecl: declname='arg_0x101cf1500', quals=[] (at pp.c:6572)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__granted', quals=[] (at pp.c:6570)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__signalDone_task__postTask', quals=[], storage=['static'] (at pp.c:6574)
    FuncDecl: quals=None (at pp.c:6574)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__signalDone_task__postTask', quals=[] (at pp.c:6574)
        IdentifierType: names=['error_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:6576)
    Enum: name='Msp430SpiNoDmaP__0____nesc_unnamed4336' (at pp.c:6576)
      EnumeratorList:  (at pp.c:6578)
        Enumerator: name='Msp430SpiNoDmaP__0__signalDone_task' (at pp.c:6578)
          Constant: type='int', value='6U' (at pp.c:6578)
  Typedef: name='Msp430SpiNoDmaP__0____nesc_sillytask_signalDone_task', quals=[], storage=['typedef'] (at pp.c:6581)
    ArrayDecl:  (at pp.c:6581)
      TypeDecl: declname='Msp430SpiNoDmaP__0____nesc_sillytask_signalDone_task', quals=[] (at pp.c:6581)
        IdentifierType: names=['int'] (at None)
      ID: name='Msp430SpiNoDmaP__0__signalDone_task' (at pp.c:6581)
  Decl: name=None, quals=[], storage=[] (at pp.c:6583)
    Enum: name='Msp430SpiNoDmaP__0____nesc_unnamed4337' (at pp.c:6583)
      EnumeratorList:  (at pp.c:6584)
        Enumerator: name='Msp430SpiNoDmaP__0__SPI_ATOMIC_SIZE' (at pp.c:6584)
          Constant: type='int', value='2' (at pp.c:6584)
  Decl: name='Msp430SpiNoDmaP__0__m_len', quals=[], storage=[] (at pp.c:6587)
    TypeDecl: declname='Msp430SpiNoDmaP__0__m_len', quals=[] (at pp.c:6587)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__m_tx_buf', quals=[], storage=[] (at pp.c:6588)
    PtrDecl: quals=[] (at pp.c:6588)
      TypeDecl: declname='Msp430SpiNoDmaP__0__m_tx_buf', quals=[] (at pp.c:6588)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__m_rx_buf', quals=[], storage=[] (at pp.c:6589)
    PtrDecl: quals=[] (at pp.c:6589)
      TypeDecl: declname='Msp430SpiNoDmaP__0__m_rx_buf', quals=[] (at pp.c:6589)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__m_pos', quals=[], storage=[] (at pp.c:6590)
    TypeDecl: declname='Msp430SpiNoDmaP__0__m_pos', quals=[] (at pp.c:6590)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__m_client', quals=[], storage=[] (at pp.c:6591)
    TypeDecl: declname='Msp430SpiNoDmaP__0__m_client', quals=[] (at pp.c:6591)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__signalDone', quals=[], storage=['inline', 'static'] (at pp.c:6593)
    FuncDecl: quals=None (at pp.c:6593)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__signalDone', quals=[] (at pp.c:6593)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:6596)
    FuncDecl: quals=None (at pp.c:6596)
      ParamList:  (at pp.c:6596)
        Decl: name='id', quals=[], storage=[] (at pp.c:6596)
          TypeDecl: declname='id', quals=[] (at pp.c:6596)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__immediateRequest', quals=[] (at pp.c:6596)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__request', quals=[], storage=['inline', 'static'] (at pp.c:6600)
    FuncDecl: quals=None (at pp.c:6600)
      ParamList:  (at pp.c:6600)
        Decl: name='id', quals=[], storage=[] (at pp.c:6600)
          TypeDecl: declname='id', quals=[] (at pp.c:6600)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__request', quals=[] (at pp.c:6600)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__isOwner', quals=[], storage=['inline', 'static'] (at pp.c:6604)
    FuncDecl: quals=None (at pp.c:6604)
      ParamList:  (at pp.c:6604)
        Decl: name='id', quals=[], storage=[] (at pp.c:6604)
          TypeDecl: declname='id', quals=[] (at pp.c:6604)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__isOwner', quals=[] (at pp.c:6604)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__release', quals=[], storage=['inline', 'static'] (at pp.c:6608)
    FuncDecl: quals=None (at pp.c:6608)
      ParamList:  (at pp.c:6608)
        Decl: name='id', quals=[], storage=[] (at pp.c:6608)
          TypeDecl: declname='id', quals=[] (at pp.c:6608)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__release', quals=[] (at pp.c:6608)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__ResourceConfigure__configure', quals=[], storage=['inline', 'static'] (at pp.c:6612)
    FuncDecl: quals=None (at pp.c:6612)
      ParamList:  (at pp.c:6612)
        Decl: name='id', quals=[], storage=[] (at pp.c:6612)
          TypeDecl: declname='id', quals=[] (at pp.c:6612)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__ResourceConfigure__configure', quals=[] (at pp.c:6612)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__ResourceConfigure__unconfigure', quals=[], storage=['inline', 'static'] (at pp.c:6616)
    FuncDecl: quals=None (at pp.c:6616)
      ParamList:  (at pp.c:6616)
        Decl: name='id', quals=[], storage=[] (at pp.c:6616)
          TypeDecl: declname='id', quals=[] (at pp.c:6616)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__ResourceConfigure__unconfigure', quals=[] (at pp.c:6616)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:6622)
    FuncDecl: quals=None (at pp.c:6622)
      ParamList:  (at pp.c:6622)
        Decl: name='id', quals=[], storage=[] (at pp.c:6622)
          TypeDecl: declname='id', quals=[] (at pp.c:6622)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__granted', quals=[] (at pp.c:6622)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__SpiByte__write', quals=[], storage=['static'] (at pp.c:6626)
    FuncDecl: quals=None (at pp.c:6626)
      ParamList:  (at pp.c:6626)
        Decl: name='tx', quals=[], storage=[] (at pp.c:6626)
          TypeDecl: declname='tx', quals=[] (at pp.c:6626)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__SpiByte__write', quals=[] (at pp.c:6626)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__isOwner', quals=[], storage=['inline', 'static'] (at pp.c:6628)
    FuncDecl: quals=None (at pp.c:6628)
      ParamList:  (at pp.c:6628)
        Decl: name='id', quals=[], storage=[] (at pp.c:6628)
          TypeDecl: declname='id', quals=[] (at pp.c:6628)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__isOwner', quals=[] (at pp.c:6628)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__request', quals=[], storage=['inline', 'static'] (at pp.c:6629)
    FuncDecl: quals=None (at pp.c:6629)
      ParamList:  (at pp.c:6629)
        Decl: name='id', quals=[], storage=[] (at pp.c:6629)
          TypeDecl: declname='id', quals=[] (at pp.c:6629)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__request', quals=[] (at pp.c:6629)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:6630)
    FuncDecl: quals=None (at pp.c:6630)
      ParamList:  (at pp.c:6630)
        Decl: name='id', quals=[], storage=[] (at pp.c:6630)
          TypeDecl: declname='id', quals=[] (at pp.c:6630)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__immediateRequest', quals=[] (at pp.c:6630)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__release', quals=[], storage=['inline', 'static'] (at pp.c:6631)
    FuncDecl: quals=None (at pp.c:6631)
      ParamList:  (at pp.c:6631)
        Decl: name='id', quals=[], storage=[] (at pp.c:6631)
          TypeDecl: declname='id', quals=[] (at pp.c:6631)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__release', quals=[] (at pp.c:6631)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Msp430SpiConfigure__default__getConfig', quals=[], storage=['inline', 'static'] (at pp.c:6632)
    FuncDecl: quals=None (at pp.c:6632)
      ParamList:  (at pp.c:6632)
        Decl: name='id', quals=[], storage=[] (at pp.c:6632)
          TypeDecl: declname='id', quals=[] (at pp.c:6632)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:6632)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Msp430SpiConfigure__default__getConfig', quals=[] (at pp.c:6632)
          IdentifierType: names=['msp430_spi_union_config_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:6636)
    FuncDecl: quals=None (at pp.c:6636)
      ParamList:  (at pp.c:6636)
        Decl: name='id', quals=[], storage=[] (at pp.c:6636)
          TypeDecl: declname='id', quals=[] (at pp.c:6636)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__default__granted', quals=[] (at pp.c:6636)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__continueOp', quals=[], storage=['static'] (at pp.c:6638)
    FuncDecl: quals=None (at pp.c:6638)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__continueOp', quals=[] (at pp.c:6638)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__SpiPacket__send', quals=[], storage=['static'] (at pp.c:6640)
    FuncDecl: quals=None (at pp.c:6640)
      ParamList:  (at pp.c:6640)
        Decl: name='id', quals=[], storage=[] (at pp.c:6640)
          TypeDecl: declname='id', quals=[] (at pp.c:6640)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='tx_buf', quals=[], storage=[] (at pp.c:6640)
          PtrDecl: quals=[] (at pp.c:6640)
            TypeDecl: declname='tx_buf', quals=[] (at pp.c:6640)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rx_buf', quals=[], storage=[] (at pp.c:6641)
          PtrDecl: quals=[] (at pp.c:6641)
            TypeDecl: declname='rx_buf', quals=[] (at pp.c:6641)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:6642)
          TypeDecl: declname='len', quals=[] (at pp.c:6642)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__SpiPacket__send', quals=[] (at pp.c:6640)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__signalDone_task__runTask', quals=[], storage=['inline', 'static'] (at pp.c:6644)
    FuncDecl: quals=None (at pp.c:6644)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__signalDone_task__runTask', quals=[] (at pp.c:6644)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartInterrupts__rxDone', quals=[], storage=['inline', 'static'] (at pp.c:6648)
    FuncDecl: quals=None (at pp.c:6648)
      ParamList:  (at pp.c:6648)
        Decl: name='data', quals=[], storage=[] (at pp.c:6648)
          TypeDecl: declname='data', quals=[] (at pp.c:6648)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartInterrupts__rxDone', quals=[] (at pp.c:6648)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__signalDone', quals=[], storage=['inline', 'static'] (at pp.c:6650)
    FuncDecl: quals=None (at pp.c:6650)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__signalDone', quals=[] (at pp.c:6650)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__UsartInterrupts__txDone', quals=[], storage=['inline', 'static'] (at pp.c:6655)
    FuncDecl: quals=None (at pp.c:6655)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__UsartInterrupts__txDone', quals=[] (at pp.c:6655)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430SpiNoDmaP__0__SpiPacket__default__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:6657)
    FuncDecl: quals=None (at pp.c:6657)
      ParamList:  (at pp.c:6657)
        Decl: name='id', quals=[], storage=[] (at pp.c:6657)
          TypeDecl: declname='id', quals=[] (at pp.c:6657)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='tx_buf', quals=[], storage=[] (at pp.c:6657)
          PtrDecl: quals=[] (at pp.c:6657)
            TypeDecl: declname='tx_buf', quals=[] (at pp.c:6657)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rx_buf', quals=[], storage=[] (at pp.c:6657)
          PtrDecl: quals=[] (at pp.c:6657)
            TypeDecl: declname='rx_buf', quals=[] (at pp.c:6657)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:6657)
          TypeDecl: declname='len', quals=[] (at pp.c:6657)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:6657)
          TypeDecl: declname='error', quals=[] (at pp.c:6657)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430SpiNoDmaP__0__SpiPacket__default__sendDone', quals=[] (at pp.c:6657)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__UCLK__selectIOFunc', quals=[], storage=['static'] (at pp.c:6659)
    FuncDecl: quals=None (at pp.c:6659)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__UCLK__selectIOFunc', quals=[] (at pp.c:6659)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__UCLK__selectModuleFunc', quals=[], storage=['static'] (at pp.c:6661)
    FuncDecl: quals=None (at pp.c:6661)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__UCLK__selectModuleFunc', quals=[] (at pp.c:6661)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Interrupts__rxDone', quals=[], storage=['static'] (at pp.c:6663)
    FuncDecl: quals=None (at pp.c:6663)
      ParamList:  (at pp.c:6663)
        Decl: name='data', quals=[], storage=[] (at pp.c:6663)
          TypeDecl: declname='data', quals=[] (at pp.c:6663)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Interrupts__rxDone', quals=[] (at pp.c:6663)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Interrupts__txDone', quals=[], storage=['static'] (at pp.c:6665)
    FuncDecl: quals=None (at pp.c:6665)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Interrupts__txDone', quals=[] (at pp.c:6665)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__URXD__selectIOFunc', quals=[], storage=['static'] (at pp.c:6667)
    FuncDecl: quals=None (at pp.c:6667)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__URXD__selectIOFunc', quals=[] (at pp.c:6667)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__UTXD__selectIOFunc', quals=[], storage=['static'] (at pp.c:6669)
    FuncDecl: quals=None (at pp.c:6669)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__UTXD__selectIOFunc', quals=[] (at pp.c:6669)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__HplI2C__clearModeI2C', quals=[], storage=['static'] (at pp.c:6671)
    FuncDecl: quals=None (at pp.c:6671)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__HplI2C__clearModeI2C', quals=[] (at pp.c:6671)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__HplI2C__isI2C', quals=[], storage=['static'] (at pp.c:6673)
    FuncDecl: quals=None (at pp.c:6673)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__HplI2C__isI2C', quals=[] (at pp.c:6673)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430Usart0P__SOMI__selectIOFunc', quals=[], storage=['static'] (at pp.c:6675)
    FuncDecl: quals=None (at pp.c:6675)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__SOMI__selectIOFunc', quals=[] (at pp.c:6675)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__SOMI__selectModuleFunc', quals=[], storage=['static'] (at pp.c:6677)
    FuncDecl: quals=None (at pp.c:6677)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__SOMI__selectModuleFunc', quals=[] (at pp.c:6677)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__I2CInterrupts__fired', quals=[], storage=['static'] (at pp.c:6679)
    FuncDecl: quals=None (at pp.c:6679)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__I2CInterrupts__fired', quals=[] (at pp.c:6679)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__SIMO__selectIOFunc', quals=[], storage=['static'] (at pp.c:6681)
    FuncDecl: quals=None (at pp.c:6681)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__SIMO__selectIOFunc', quals=[] (at pp.c:6681)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__SIMO__selectModuleFunc', quals=[], storage=['static'] (at pp.c:6683)
    FuncDecl: quals=None (at pp.c:6683)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__SIMO__selectModuleFunc', quals=[] (at pp.c:6683)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__IE1@"0x0000"', quals=['volatile'], storage=['static'] (at pp.c:6685)
    TypeDecl: declname='HplMsp430Usart0P__IE1@"0x0000"', quals=['volatile'] (at pp.c:6685)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430Usart0P__ME1@"0x0004"', quals=['volatile'], storage=['static'] (at pp.c:6686)
    TypeDecl: declname='HplMsp430Usart0P__ME1@"0x0004"', quals=['volatile'] (at pp.c:6686)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430Usart0P__IFG1@"0x0002"', quals=['volatile'], storage=['static'] (at pp.c:6687)
    TypeDecl: declname='HplMsp430Usart0P__IFG1@"0x0002"', quals=['volatile'] (at pp.c:6687)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430Usart0P__U0TCTL@"0x0071"', quals=['volatile'], storage=['static'] (at pp.c:6688)
    TypeDecl: declname='HplMsp430Usart0P__U0TCTL@"0x0071"', quals=['volatile'] (at pp.c:6688)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430Usart0P__U0TXBUF@"0x0077"', quals=['volatile'], storage=['static'] (at pp.c:6690)
    TypeDecl: declname='HplMsp430Usart0P__U0TXBUF@"0x0077"', quals=['volatile'] (at pp.c:6690)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='sig_UART0RX_VECTOR', quals=[], storage=[] (at pp.c:6692)
    FuncDecl: quals=None (at pp.c:6692)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_UART0RX_VECTOR', quals=[] (at pp.c:6692)
        IdentifierType: names=['void'] (at None)
  Decl: name='sig_UART0TX_VECTOR', quals=[], storage=[] (at pp.c:6697)
    FuncDecl: quals=None (at pp.c:6697)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_UART0TX_VECTOR', quals=[] (at pp.c:6697)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__setUbr', quals=[], storage=['inline', 'static'] (at pp.c:6699)
    FuncDecl: quals=None (at pp.c:6699)
      ParamList:  (at pp.c:6699)
        Decl: name='control', quals=[], storage=[] (at pp.c:6699)
          TypeDecl: declname='control', quals=[] (at pp.c:6699)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__setUbr', quals=[] (at pp.c:6699)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__setUmctl', quals=[], storage=['inline', 'static'] (at pp.c:6710)
    FuncDecl: quals=None (at pp.c:6710)
      ParamList:  (at pp.c:6710)
        Decl: name='control', quals=[], storage=[] (at pp.c:6710)
          TypeDecl: declname='control', quals=[] (at pp.c:6710)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__setUmctl', quals=[] (at pp.c:6710)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__resetUsart', quals=[], storage=['inline', 'static'] (at pp.c:6718)
    FuncDecl: quals=None (at pp.c:6718)
      ParamList:  (at pp.c:6718)
        Decl: name='reset', quals=[], storage=[] (at pp.c:6718)
          TypeDecl: declname='reset', quals=[] (at pp.c:6718)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__resetUsart', quals=[] (at pp.c:6718)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__disableUart', quals=[], storage=['inline', 'static'] (at pp.c:6720)
    FuncDecl: quals=None (at pp.c:6720)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__disableUart', quals=[] (at pp.c:6720)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__enableSpi', quals=[], storage=['inline', 'static'] (at pp.c:6722)
    FuncDecl: quals=None (at pp.c:6722)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__enableSpi', quals=[] (at pp.c:6722)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__disableSpi', quals=[], storage=['static'] (at pp.c:6731)
    FuncDecl: quals=None (at pp.c:6731)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__disableSpi', quals=[] (at pp.c:6731)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__configSpi', quals=[], storage=['inline', 'static'] (at pp.c:6740)
    FuncDecl: quals=None (at pp.c:6740)
      ParamList:  (at pp.c:6740)
        Decl: name='config', quals=[], storage=[] (at pp.c:6740)
          PtrDecl: quals=[] (at pp.c:6740)
            TypeDecl: declname='config', quals=[] (at pp.c:6740)
              IdentifierType: names=['msp430_spi_union_config_t'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__configSpi', quals=[] (at pp.c:6740)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__setModeSpi', quals=[], storage=['static'] (at pp.c:6749)
    FuncDecl: quals=None (at pp.c:6749)
      ParamList:  (at pp.c:6749)
        Decl: name='config', quals=[], storage=[] (at pp.c:6749)
          PtrDecl: quals=[] (at pp.c:6749)
            TypeDecl: declname='config', quals=[] (at pp.c:6749)
              IdentifierType: names=['msp430_spi_union_config_t'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__setModeSpi', quals=[] (at pp.c:6749)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__isRxIntrPending', quals=[], storage=['inline', 'static'] (at pp.c:6751)
    FuncDecl: quals=None (at pp.c:6751)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__isRxIntrPending', quals=[] (at pp.c:6751)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__clrRxIntr', quals=[], storage=['inline', 'static'] (at pp.c:6762)
    FuncDecl: quals=None (at pp.c:6762)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__clrRxIntr', quals=[] (at pp.c:6762)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__clrIntr', quals=[], storage=['inline', 'static'] (at pp.c:6766)
    FuncDecl: quals=None (at pp.c:6766)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__clrIntr', quals=[] (at pp.c:6766)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__disableRxIntr', quals=[], storage=['inline', 'static'] (at pp.c:6770)
    FuncDecl: quals=None (at pp.c:6770)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__disableRxIntr', quals=[] (at pp.c:6770)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__disableIntr', quals=[], storage=['inline', 'static'] (at pp.c:6778)
    FuncDecl: quals=None (at pp.c:6778)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__disableIntr', quals=[] (at pp.c:6778)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__enableRxIntr', quals=[], storage=['inline', 'static'] (at pp.c:6782)
    FuncDecl: quals=None (at pp.c:6782)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__enableRxIntr', quals=[] (at pp.c:6782)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__tx', quals=[], storage=['inline', 'static'] (at pp.c:6784)
    FuncDecl: quals=None (at pp.c:6784)
      ParamList:  (at pp.c:6784)
        Decl: name='data', quals=[], storage=[] (at pp.c:6784)
          TypeDecl: declname='data', quals=[] (at pp.c:6784)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__tx', quals=[] (at pp.c:6784)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430Usart0P__Usart__rx', quals=[], storage=['inline', 'static'] (at pp.c:6788)
    FuncDecl: quals=None (at pp.c:6788)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430Usart0P__Usart__rx', quals=[] (at pp.c:6788)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='LedsP__Led0__toggle', quals=[], storage=['static'] (at pp.c:6790)
    FuncDecl: quals=None (at pp.c:6790)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led0__toggle', quals=[] (at pp.c:6790)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led0__makeOutput', quals=[], storage=['static'] (at pp.c:6794)
    FuncDecl: quals=None (at pp.c:6794)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led0__makeOutput', quals=[] (at pp.c:6794)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led0__set', quals=[], storage=['static'] (at pp.c:6796)
    FuncDecl: quals=None (at pp.c:6796)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led0__set', quals=[] (at pp.c:6796)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led1__toggle', quals=[], storage=['static'] (at pp.c:6798)
    FuncDecl: quals=None (at pp.c:6798)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led1__toggle', quals=[] (at pp.c:6798)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led1__makeOutput', quals=[], storage=['static'] (at pp.c:6802)
    FuncDecl: quals=None (at pp.c:6802)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led1__makeOutput', quals=[] (at pp.c:6802)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led1__set', quals=[], storage=['static'] (at pp.c:6804)
    FuncDecl: quals=None (at pp.c:6804)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led1__set', quals=[] (at pp.c:6804)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led2__toggle', quals=[], storage=['static'] (at pp.c:6806)
    FuncDecl: quals=None (at pp.c:6806)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led2__toggle', quals=[] (at pp.c:6806)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led2__makeOutput', quals=[], storage=['static'] (at pp.c:6810)
    FuncDecl: quals=None (at pp.c:6810)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led2__makeOutput', quals=[] (at pp.c:6810)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Led2__set', quals=[], storage=['static'] (at pp.c:6812)
    FuncDecl: quals=None (at pp.c:6812)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Led2__set', quals=[] (at pp.c:6812)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:6814)
    FuncDecl: quals=None (at pp.c:6814)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Init__init', quals=[] (at pp.c:6814)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='LedsP__Leds__led0Toggle', quals=[], storage=['inline', 'static'] (at pp.c:6816)
    FuncDecl: quals=None (at pp.c:6816)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led0Toggle', quals=[] (at pp.c:6816)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led1Toggle', quals=[], storage=['inline', 'static'] (at pp.c:6818)
    FuncDecl: quals=None (at pp.c:6818)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led1Toggle', quals=[] (at pp.c:6818)
        IdentifierType: names=['void'] (at None)
  Decl: name='LedsP__Leds__led2Toggle', quals=[], storage=['inline', 'static'] (at pp.c:6820)
    FuncDecl: quals=None (at pp.c:6820)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='LedsP__Leds__led2Toggle', quals=[] (at pp.c:6820)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__7__HplGeneralIO__toggle', quals=[], storage=['static'] (at pp.c:6822)
    FuncDecl: quals=None (at pp.c:6822)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__7__HplGeneralIO__toggle', quals=[] (at pp.c:6822)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__7__HplGeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:6824)
    FuncDecl: quals=None (at pp.c:6824)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__7__HplGeneralIO__makeOutput', quals=[] (at pp.c:6824)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__7__HplGeneralIO__set', quals=[], storage=['static'] (at pp.c:6826)
    FuncDecl: quals=None (at pp.c:6826)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__7__HplGeneralIO__set', quals=[] (at pp.c:6826)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__7__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:6828)
    FuncDecl: quals=None (at pp.c:6828)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__7__GeneralIO__set', quals=[] (at pp.c:6828)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__7__GeneralIO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:6830)
    FuncDecl: quals=None (at pp.c:6830)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__7__GeneralIO__toggle', quals=[] (at pp.c:6830)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__7__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:6834)
    FuncDecl: quals=None (at pp.c:6834)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__7__GeneralIO__makeOutput', quals=[] (at pp.c:6834)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__8__HplGeneralIO__toggle', quals=[], storage=['static'] (at pp.c:6836)
    FuncDecl: quals=None (at pp.c:6836)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__8__HplGeneralIO__toggle', quals=[] (at pp.c:6836)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__8__HplGeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:6838)
    FuncDecl: quals=None (at pp.c:6838)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__8__HplGeneralIO__makeOutput', quals=[] (at pp.c:6838)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__8__HplGeneralIO__set', quals=[], storage=['static'] (at pp.c:6840)
    FuncDecl: quals=None (at pp.c:6840)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__8__HplGeneralIO__set', quals=[] (at pp.c:6840)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__8__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:6842)
    FuncDecl: quals=None (at pp.c:6842)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__8__GeneralIO__set', quals=[] (at pp.c:6842)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__8__GeneralIO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:6844)
    FuncDecl: quals=None (at pp.c:6844)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__8__GeneralIO__toggle', quals=[] (at pp.c:6844)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__8__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:6848)
    FuncDecl: quals=None (at pp.c:6848)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__8__GeneralIO__makeOutput', quals=[] (at pp.c:6848)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__9__HplGeneralIO__toggle', quals=[], storage=['static'] (at pp.c:6850)
    FuncDecl: quals=None (at pp.c:6850)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__9__HplGeneralIO__toggle', quals=[] (at pp.c:6850)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__9__HplGeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:6852)
    FuncDecl: quals=None (at pp.c:6852)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__9__HplGeneralIO__makeOutput', quals=[] (at pp.c:6852)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__9__HplGeneralIO__set', quals=[], storage=['static'] (at pp.c:6854)
    FuncDecl: quals=None (at pp.c:6854)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__9__HplGeneralIO__set', quals=[] (at pp.c:6854)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__9__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:6856)
    FuncDecl: quals=None (at pp.c:6856)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__9__GeneralIO__set', quals=[] (at pp.c:6856)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__9__GeneralIO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:6858)
    FuncDecl: quals=None (at pp.c:6858)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__9__GeneralIO__toggle', quals=[] (at pp.c:6858)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__9__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:6862)
    FuncDecl: quals=None (at pp.c:6862)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__9__GeneralIO__makeOutput', quals=[] (at pp.c:6862)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__ArbiterInfo__inUse', quals=[], storage=['static'] (at pp.c:6864)
    FuncDecl: quals=None (at pp.c:6864)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__ArbiterInfo__inUse', quals=[] (at pp.c:6864)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430UsartShareP__0__ArbiterInfo__userId', quals=[], storage=['static'] (at pp.c:6872)
    FuncDecl: quals=None (at pp.c:6872)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__ArbiterInfo__userId', quals=[] (at pp.c:6872)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430UsartShareP__0__Interrupts__rxDone', quals=[], storage=['static'] (at pp.c:6874)
    FuncDecl: quals=None (at pp.c:6874)
      ParamList:  (at pp.c:6876)
        Decl: name='arg_0x101ea60c8', quals=[], storage=[] (at pp.c:6876)
          TypeDecl: declname='arg_0x101ea60c8', quals=[] (at pp.c:6876)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:6878)
          TypeDecl: declname='data', quals=[] (at pp.c:6878)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__Interrupts__rxDone', quals=[] (at pp.c:6874)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__Interrupts__txDone', quals=[], storage=['static'] (at pp.c:6880)
    FuncDecl: quals=None (at pp.c:6880)
      ParamList:  (at pp.c:6882)
        Decl: name='arg_0x101ea60c8', quals=[], storage=[] (at pp.c:6882)
          TypeDecl: declname='arg_0x101ea60c8', quals=[] (at pp.c:6882)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__Interrupts__txDone', quals=[] (at pp.c:6880)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__I2CInterrupts__fired', quals=[], storage=['static'] (at pp.c:6884)
    FuncDecl: quals=None (at pp.c:6884)
      ParamList:  (at pp.c:6886)
        Decl: name='arg_0x101ea4020', quals=[], storage=[] (at pp.c:6886)
          TypeDecl: declname='arg_0x101ea4020', quals=[] (at pp.c:6886)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__I2CInterrupts__fired', quals=[] (at pp.c:6884)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__RawInterrupts__txDone', quals=[], storage=['inline', 'static'] (at pp.c:6895)
    FuncDecl: quals=None (at pp.c:6895)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__RawInterrupts__txDone', quals=[] (at pp.c:6895)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__RawInterrupts__rxDone', quals=[], storage=['inline', 'static'] (at pp.c:6900)
    FuncDecl: quals=None (at pp.c:6900)
      ParamList:  (at pp.c:6900)
        Decl: name='data', quals=[], storage=[] (at pp.c:6900)
          TypeDecl: declname='data', quals=[] (at pp.c:6900)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__RawInterrupts__rxDone', quals=[] (at pp.c:6900)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__RawI2CInterrupts__fired', quals=[], storage=['inline', 'static'] (at pp.c:6905)
    FuncDecl: quals=None (at pp.c:6905)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__RawI2CInterrupts__fired', quals=[] (at pp.c:6905)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__Interrupts__default__txDone', quals=[], storage=['inline', 'static'] (at pp.c:6910)
    FuncDecl: quals=None (at pp.c:6910)
      ParamList:  (at pp.c:6910)
        Decl: name='id', quals=[], storage=[] (at pp.c:6910)
          TypeDecl: declname='id', quals=[] (at pp.c:6910)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__Interrupts__default__txDone', quals=[] (at pp.c:6910)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__Interrupts__default__rxDone', quals=[], storage=['inline', 'static'] (at pp.c:6911)
    FuncDecl: quals=None (at pp.c:6911)
      ParamList:  (at pp.c:6911)
        Decl: name='id', quals=[], storage=[] (at pp.c:6911)
          TypeDecl: declname='id', quals=[] (at pp.c:6911)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:6911)
          TypeDecl: declname='data', quals=[] (at pp.c:6911)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__Interrupts__default__rxDone', quals=[] (at pp.c:6911)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430UsartShareP__0__I2CInterrupts__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:6912)
    FuncDecl: quals=None (at pp.c:6912)
      ParamList:  (at pp.c:6912)
        Decl: name='id', quals=[], storage=[] (at pp.c:6912)
          TypeDecl: declname='id', quals=[] (at pp.c:6912)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430UsartShareP__0__I2CInterrupts__default__fired', quals=[] (at pp.c:6912)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:6914)
    Enum: name='FcfsResourceQueueC__1____nesc_unnamed4338' (at pp.c:6914)
      EnumeratorList:  (at pp.c:6916)
        Enumerator: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:6916)
          Constant: type='int', value='0xFF' (at pp.c:6916)
  Decl: name='FcfsResourceQueueC__1__resQ', quals=[], storage=[] (at pp.c:6918)
    ArrayDecl:  (at pp.c:6918)
      TypeDecl: declname='FcfsResourceQueueC__1__resQ', quals=[] (at pp.c:6918)
        IdentifierType: names=['uint8_t'] (at None)
      Constant: type='int', value='1U' (at pp.c:6918)
  Decl: name='FcfsResourceQueueC__1__qHead', quals=[], storage=[] (at pp.c:6919)
    TypeDecl: declname='FcfsResourceQueueC__1__qHead', quals=[] (at pp.c:6919)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:6919)
  Decl: name='FcfsResourceQueueC__1__qTail', quals=[], storage=[] (at pp.c:6920)
    TypeDecl: declname='FcfsResourceQueueC__1__qTail', quals=[] (at pp.c:6920)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:6920)
  Decl: name='FcfsResourceQueueC__1__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:6922)
    FuncDecl: quals=None (at pp.c:6922)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__1__Init__init', quals=[] (at pp.c:6922)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='FcfsResourceQueueC__1__FcfsQueue__isEmpty', quals=[], storage=['inline', 'static'] (at pp.c:6927)
    FuncDecl: quals=None (at pp.c:6927)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__isEmpty', quals=[] (at pp.c:6927)
        IdentifierType: names=['bool'] (at None)
  Decl: name='FcfsResourceQueueC__1__FcfsQueue__isEnqueued', quals=[], storage=['inline', 'static'] (at pp.c:6931)
    FuncDecl: quals=None (at pp.c:6931)
      ParamList:  (at pp.c:6931)
        Decl: name='id', quals=[], storage=[] (at pp.c:6931)
          TypeDecl: declname='id', quals=[] (at pp.c:6931)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__isEnqueued', quals=[] (at pp.c:6931)
        IdentifierType: names=['bool'] (at None)
  Decl: name='FcfsResourceQueueC__1__FcfsQueue__dequeue', quals=[], storage=['inline', 'static'] (at pp.c:6935)
    FuncDecl: quals=None (at pp.c:6935)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__dequeue', quals=[] (at pp.c:6935)
        IdentifierType: names=['resource_client_id_t'] (at None)
  Decl: name='FcfsResourceQueueC__1__FcfsQueue__enqueue', quals=[], storage=['inline', 'static'] (at pp.c:6937)
    FuncDecl: quals=None (at pp.c:6937)
      ParamList:  (at pp.c:6937)
        Decl: name='id', quals=[], storage=[] (at pp.c:6937)
          TypeDecl: declname='id', quals=[] (at pp.c:6937)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__enqueue', quals=[] (at pp.c:6937)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__0__ResourceRequested__requested', quals=[], storage=['static'] (at pp.c:6939)
    FuncDecl: quals=None (at pp.c:6939)
      ParamList:  (at pp.c:6941)
        Decl: name='arg_0x101ef27e8', quals=[], storage=[] (at pp.c:6941)
          TypeDecl: declname='arg_0x101ef27e8', quals=[] (at pp.c:6941)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceRequested__requested', quals=[] (at pp.c:6939)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceRequested__immediateRequested', quals=[], storage=['static'] (at pp.c:6943)
    FuncDecl: quals=None (at pp.c:6943)
      ParamList:  (at pp.c:6945)
        Decl: name='arg_0x101ef27e8', quals=[], storage=[] (at pp.c:6945)
          TypeDecl: declname='arg_0x101ef27e8', quals=[] (at pp.c:6945)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceRequested__immediateRequested', quals=[] (at pp.c:6943)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceConfigure__unconfigure', quals=[], storage=['static'] (at pp.c:6947)
    FuncDecl: quals=None (at pp.c:6947)
      ParamList:  (at pp.c:6949)
        Decl: name='arg_0x101eef9b8', quals=[], storage=[] (at pp.c:6949)
          TypeDecl: declname='arg_0x101eef9b8', quals=[] (at pp.c:6949)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceConfigure__unconfigure', quals=[] (at pp.c:6947)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceConfigure__configure', quals=[], storage=['static'] (at pp.c:6951)
    FuncDecl: quals=None (at pp.c:6951)
      ParamList:  (at pp.c:6953)
        Decl: name='arg_0x101eef9b8', quals=[], storage=[] (at pp.c:6953)
          TypeDecl: declname='arg_0x101eef9b8', quals=[] (at pp.c:6953)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceConfigure__configure', quals=[] (at pp.c:6951)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__Queue__enqueue', quals=[], storage=['static'] (at pp.c:6955)
    FuncDecl: quals=None (at pp.c:6955)
      ParamList:  (at pp.c:6955)
        Decl: name='id', quals=[], storage=[] (at pp.c:6955)
          TypeDecl: declname='id', quals=[] (at pp.c:6955)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Queue__enqueue', quals=[] (at pp.c:6955)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__0__Queue__isEmpty', quals=[], storage=['static'] (at pp.c:6957)
    FuncDecl: quals=None (at pp.c:6957)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__Queue__isEmpty', quals=[] (at pp.c:6957)
        IdentifierType: names=['bool'] (at None)
  Decl: name='ArbiterP__0__Queue__dequeue', quals=[], storage=['static'] (at pp.c:6959)
    FuncDecl: quals=None (at pp.c:6959)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__Queue__dequeue', quals=[] (at pp.c:6959)
        IdentifierType: names=['resource_client_id_t'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__requested', quals=[], storage=['static'] (at pp.c:6961)
    FuncDecl: quals=None (at pp.c:6961)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__requested', quals=[] (at pp.c:6961)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__granted', quals=[], storage=['static'] (at pp.c:6963)
    FuncDecl: quals=None (at pp.c:6963)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__granted', quals=[] (at pp.c:6963)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__immediateRequested', quals=[], storage=['static'] (at pp.c:6965)
    FuncDecl: quals=None (at pp.c:6965)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__immediateRequested', quals=[] (at pp.c:6965)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__Resource__granted', quals=[], storage=['static'] (at pp.c:6967)
    FuncDecl: quals=None (at pp.c:6967)
      ParamList:  (at pp.c:6969)
        Decl: name='arg_0x101ef3658', quals=[], storage=[] (at pp.c:6969)
          TypeDecl: declname='arg_0x101ef3658', quals=[] (at pp.c:6969)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__granted', quals=[] (at pp.c:6967)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__grantedTask__postTask', quals=[], storage=['static'] (at pp.c:6971)
    FuncDecl: quals=None (at pp.c:6971)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__grantedTask__postTask', quals=[] (at pp.c:6971)
        IdentifierType: names=['error_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:6973)
    Enum: name='ArbiterP__0____nesc_unnamed4339' (at pp.c:6973)
      EnumeratorList:  (at pp.c:6975)
        Enumerator: name='ArbiterP__0__grantedTask' (at pp.c:6975)
          Constant: type='int', value='7U' (at pp.c:6975)
  Typedef: name='ArbiterP__0____nesc_sillytask_grantedTask', quals=[], storage=['typedef'] (at pp.c:6978)
    ArrayDecl:  (at pp.c:6978)
      TypeDecl: declname='ArbiterP__0____nesc_sillytask_grantedTask', quals=[] (at pp.c:6978)
        IdentifierType: names=['int'] (at None)
      ID: name='ArbiterP__0__grantedTask' (at pp.c:6978)
  Decl: name=None, quals=[], storage=[] (at pp.c:6980)
    Enum: name='ArbiterP__0____nesc_unnamed4340' (at pp.c:6980)
      EnumeratorList:  (at pp.c:6982)
        Enumerator: name='ArbiterP__0__RES_CONTROLLED' (at pp.c:6982)
        Enumerator: name='ArbiterP__0__RES_GRANTING' (at pp.c:6982)
        Enumerator: name='ArbiterP__0__RES_IMM_GRANTING' (at pp.c:6982)
        Enumerator: name='ArbiterP__0__RES_BUSY' (at pp.c:6982)
  Decl: name=None, quals=[], storage=[] (at pp.c:6985)
    Enum: name='ArbiterP__0____nesc_unnamed4341' (at pp.c:6985)
      EnumeratorList:  (at pp.c:6987)
        Enumerator: name='ArbiterP__0__default_owner_id' (at pp.c:6987)
          Constant: type='int', value='1U' (at pp.c:6987)
  Decl: name=None, quals=[], storage=[] (at pp.c:6990)
    Enum: name='ArbiterP__0____nesc_unnamed4342' (at pp.c:6990)
      EnumeratorList:  (at pp.c:6992)
        Enumerator: name='ArbiterP__0__NO_RES' (at pp.c:6992)
          Constant: type='int', value='0xFF' (at pp.c:6992)
  Decl: name='ArbiterP__0__state', quals=[], storage=[] (at pp.c:6994)
    TypeDecl: declname='ArbiterP__0__state', quals=[] (at pp.c:6994)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='ArbiterP__0__RES_CONTROLLED' (at pp.c:6994)
  Decl: name='ArbiterP__0__resId', quals=[], storage=[] (at pp.c:6995)
    TypeDecl: declname='ArbiterP__0__resId', quals=[] (at pp.c:6995)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='ArbiterP__0__default_owner_id' (at pp.c:6995)
  Decl: name='ArbiterP__0__reqResId', quals=[], storage=[] (at pp.c:6996)
    TypeDecl: declname='ArbiterP__0__reqResId', quals=[] (at pp.c:6996)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='ArbiterP__0__Resource__request', quals=[], storage=['inline', 'static'] (at pp.c:7000)
    FuncDecl: quals=None (at pp.c:7000)
      ParamList:  (at pp.c:7000)
        Decl: name='id', quals=[], storage=[] (at pp.c:7000)
          TypeDecl: declname='id', quals=[] (at pp.c:7000)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__request', quals=[] (at pp.c:7000)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__0__Resource__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:7002)
    FuncDecl: quals=None (at pp.c:7002)
      ParamList:  (at pp.c:7002)
        Decl: name='id', quals=[], storage=[] (at pp.c:7002)
          TypeDecl: declname='id', quals=[] (at pp.c:7002)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__immediateRequest', quals=[] (at pp.c:7002)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__0__Resource__release', quals=[], storage=['inline', 'static'] (at pp.c:7004)
    FuncDecl: quals=None (at pp.c:7004)
      ParamList:  (at pp.c:7004)
        Decl: name='id', quals=[], storage=[] (at pp.c:7004)
          TypeDecl: declname='id', quals=[] (at pp.c:7004)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__release', quals=[] (at pp.c:7004)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__release', quals=[], storage=['static'] (at pp.c:7006)
    FuncDecl: quals=None (at pp.c:7006)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__release', quals=[] (at pp.c:7006)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbiterP__0__ArbiterInfo__inUse', quals=[], storage=['static'] (at pp.c:7008)
    FuncDecl: quals=None (at pp.c:7008)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ArbiterInfo__inUse', quals=[] (at pp.c:7008)
        IdentifierType: names=['bool'] (at None)
  Decl: name='ArbiterP__0__ArbiterInfo__userId', quals=[], storage=['static'] (at pp.c:7010)
    FuncDecl: quals=None (at pp.c:7010)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ArbiterInfo__userId', quals=[] (at pp.c:7010)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='ArbiterP__0__Resource__isOwner', quals=[], storage=['static'] (at pp.c:7021)
    FuncDecl: quals=None (at pp.c:7021)
      ParamList:  (at pp.c:7021)
        Decl: name='id', quals=[], storage=[] (at pp.c:7021)
          TypeDecl: declname='id', quals=[] (at pp.c:7021)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__isOwner', quals=[] (at pp.c:7021)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='ArbiterP__0__grantedTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:7023)
    FuncDecl: quals=None (at pp.c:7023)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__grantedTask__runTask', quals=[] (at pp.c:7023)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:7025)
    FuncDecl: quals=None (at pp.c:7025)
      ParamList:  (at pp.c:7025)
        Decl: name='id', quals=[], storage=[] (at pp.c:7025)
          TypeDecl: declname='id', quals=[] (at pp.c:7025)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__Resource__default__granted', quals=[] (at pp.c:7025)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceRequested__default__requested', quals=[], storage=['inline', 'static'] (at pp.c:7027)
    FuncDecl: quals=None (at pp.c:7027)
      ParamList:  (at pp.c:7027)
        Decl: name='id', quals=[], storage=[] (at pp.c:7027)
          TypeDecl: declname='id', quals=[] (at pp.c:7027)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceRequested__default__requested', quals=[] (at pp.c:7027)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceRequested__default__immediateRequested', quals=[], storage=['inline', 'static'] (at pp.c:7029)
    FuncDecl: quals=None (at pp.c:7029)
      ParamList:  (at pp.c:7029)
        Decl: name='id', quals=[], storage=[] (at pp.c:7029)
          TypeDecl: declname='id', quals=[] (at pp.c:7029)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceRequested__default__immediateRequested', quals=[] (at pp.c:7029)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:7031)
    FuncDecl: quals=None (at pp.c:7031)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__default__granted', quals=[] (at pp.c:7031)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__default__requested', quals=[], storage=['inline', 'static'] (at pp.c:7033)
    FuncDecl: quals=None (at pp.c:7033)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__default__requested', quals=[] (at pp.c:7033)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceDefaultOwner__default__immediateRequested', quals=[], storage=['inline', 'static'] (at pp.c:7036)
    FuncDecl: quals=None (at pp.c:7036)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__default__immediateRequested', quals=[] (at pp.c:7036)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceConfigure__default__configure', quals=[], storage=['inline', 'static'] (at pp.c:7039)
    FuncDecl: quals=None (at pp.c:7039)
      ParamList:  (at pp.c:7039)
        Decl: name='id', quals=[], storage=[] (at pp.c:7039)
          TypeDecl: declname='id', quals=[] (at pp.c:7039)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceConfigure__default__configure', quals=[] (at pp.c:7039)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbiterP__0__ResourceConfigure__default__unconfigure', quals=[], storage=['inline', 'static'] (at pp.c:7041)
    FuncDecl: quals=None (at pp.c:7041)
      ParamList:  (at pp.c:7041)
        Decl: name='id', quals=[], storage=[] (at pp.c:7041)
          TypeDecl: declname='id', quals=[] (at pp.c:7041)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbiterP__0__ResourceConfigure__default__unconfigure', quals=[] (at pp.c:7041)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430I2C0P__HplUsart__resetUsart', quals=[], storage=['static'] (at pp.c:7043)
    FuncDecl: quals=None (at pp.c:7043)
      ParamList:  (at pp.c:7043)
        Decl: name='reset', quals=[], storage=[] (at pp.c:7043)
          TypeDecl: declname='reset', quals=[] (at pp.c:7043)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='HplMsp430I2C0P__HplUsart__resetUsart', quals=[] (at pp.c:7043)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplMsp430I2C0P__U0CTL@"0x0070"', quals=['volatile'], storage=['static'] (at pp.c:7045)
    TypeDecl: declname='HplMsp430I2C0P__U0CTL@"0x0070"', quals=['volatile'] (at pp.c:7045)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplMsp430I2C0P__HplI2C__isI2C', quals=[], storage=['inline', 'static'] (at pp.c:7051)
    FuncDecl: quals=None (at pp.c:7051)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430I2C0P__HplI2C__isI2C', quals=[] (at pp.c:7051)
        IdentifierType: names=['bool'] (at None)
  Decl: name='HplMsp430I2C0P__HplI2C__clearModeI2C', quals=[], storage=['inline', 'static'] (at pp.c:7055)
    FuncDecl: quals=None (at pp.c:7055)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplMsp430I2C0P__HplI2C__clearModeI2C', quals=[] (at pp.c:7055)
        IdentifierType: names=['void'] (at None)
  Decl: name='ActiveMessageAddressC__addr', quals=[], storage=[] (at pp.c:7057)
    TypeDecl: declname='ActiveMessageAddressC__addr', quals=[] (at pp.c:7057)
      IdentifierType: names=['am_addr_t'] (at None)
    ID: name='TOS_AM_ADDRESS' (at pp.c:7057)
  Decl: name='ActiveMessageAddressC__group', quals=[], storage=[] (at pp.c:7060)
    TypeDecl: declname='ActiveMessageAddressC__group', quals=[] (at pp.c:7060)
      IdentifierType: names=['am_group_t'] (at None)
    ID: name='TOS_AM_GROUP' (at pp.c:7060)
  Decl: name='ActiveMessageAddressC__ActiveMessageAddress__amAddress', quals=[], storage=['inline', 'static'] (at pp.c:7067)
    FuncDecl: quals=None (at pp.c:7067)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ActiveMessageAddressC__ActiveMessageAddress__amAddress', quals=[] (at pp.c:7067)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='ActiveMessageAddressC__ActiveMessageAddress__amGroup', quals=[], storage=['inline', 'static'] (at pp.c:7069)
    FuncDecl: quals=None (at pp.c:7069)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ActiveMessageAddressC__ActiveMessageAddress__amGroup', quals=[] (at pp.c:7069)
        IdentifierType: names=['am_group_t'] (at None)
  Decl: name='ActiveMessageAddressC__amAddress', quals=[], storage=['static'] (at pp.c:7071)
    FuncDecl: quals=None (at pp.c:7071)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='ActiveMessageAddressC__amAddress', quals=[] (at pp.c:7071)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='Ds2411P__OneWire__read', quals=[], storage=['static'] (at pp.c:7073)
    FuncDecl: quals=None (at pp.c:7073)
      ParamList:  (at pp.c:7073)
        Decl: name='cmd', quals=[], storage=[] (at pp.c:7073)
          TypeDecl: declname='cmd', quals=[] (at pp.c:7073)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:7073)
          PtrDecl: quals=[] (at pp.c:7073)
            TypeDecl: declname='buf', quals=[] (at pp.c:7073)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:7073)
          TypeDecl: declname='len', quals=[] (at pp.c:7073)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Ds2411P__OneWire__read', quals=[] (at pp.c:7073)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Ds2411P__haveId', quals=[], storage=[] (at pp.c:7075)
    TypeDecl: declname='Ds2411P__haveId', quals=[] (at pp.c:7075)
      IdentifierType: names=['bool'] (at None)
    ID: name='FALSE' (at pp.c:7075)
  Decl: name='Ds2411P__ds2411id', quals=[], storage=[] (at pp.c:7076)
    TypeDecl: declname='Ds2411P__ds2411id', quals=[] (at pp.c:7076)
      IdentifierType: names=['dallasid48_serial_t'] (at None)
  Decl: name='Ds2411P__readId', quals=[], storage=['inline', 'static'] (at pp.c:7078)
    FuncDecl: quals=None (at pp.c:7078)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Ds2411P__readId', quals=[] (at pp.c:7078)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Ds2411P__ReadId48__read', quals=[], storage=['inline', 'static'] (at pp.c:7080)
    FuncDecl: quals=None (at pp.c:7080)
      ParamList:  (at pp.c:7080)
        Decl: name='id', quals=[], storage=[] (at pp.c:7080)
          PtrDecl: quals=[] (at pp.c:7080)
            TypeDecl: declname='id', quals=[] (at pp.c:7080)
              IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Ds2411P__ReadId48__read', quals=[] (at pp.c:7080)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='OneWireMasterC__BusyWait__wait', quals=[], storage=['static'] (at pp.c:7082)
    FuncDecl: quals=None (at pp.c:7082)
      ParamList:  (at pp.c:7082)
        Decl: name='dt', quals=[], storage=[] (at pp.c:7082)
          TypeDecl: declname='dt', quals=[] (at pp.c:7082)
            IdentifierType: names=['OneWireMasterC__BusyWait__size_type'] (at None)
      TypeDecl: declname='OneWireMasterC__BusyWait__wait', quals=[] (at pp.c:7082)
        IdentifierType: names=['void'] (at None)
  Decl: name='OneWireMasterC__Pin__makeInput', quals=[], storage=['static'] (at pp.c:7084)
    FuncDecl: quals=None (at pp.c:7084)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OneWireMasterC__Pin__makeInput', quals=[] (at pp.c:7084)
        IdentifierType: names=['void'] (at None)
  Decl: name='OneWireMasterC__Pin__get', quals=[], storage=['static'] (at pp.c:7086)
    FuncDecl: quals=None (at pp.c:7086)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OneWireMasterC__Pin__get', quals=[] (at pp.c:7086)
        IdentifierType: names=['bool'] (at None)
  Decl: name='OneWireMasterC__Pin__makeOutput', quals=[], storage=['static'] (at pp.c:7089)
    FuncDecl: quals=None (at pp.c:7089)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OneWireMasterC__Pin__makeOutput', quals=[] (at pp.c:7089)
        IdentifierType: names=['void'] (at None)
  Decl: name='OneWireMasterC__Pin__clr', quals=[], storage=['static'] (at pp.c:7091)
    FuncDecl: quals=None (at pp.c:7091)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OneWireMasterC__Pin__clr', quals=[] (at pp.c:7091)
        IdentifierType: names=['void'] (at None)
  Typedef: name='OneWireMasterC__onewiretimes_t', quals=[], storage=['typedef'] (at pp.c:7101)
    TypeDecl: declname='OneWireMasterC__onewiretimes_t', quals=[] (at pp.c:7101)
      Enum: name='OneWireMasterC____nesc_unnamed4343' (at pp.c:7094)
        EnumeratorList:  (at pp.c:7095)
          Enumerator: name='OneWireMasterC__DELAY_5US' (at pp.c:7095)
            Constant: type='int', value='5' (at pp.c:7095)
          Enumerator: name='OneWireMasterC__RESET_LOW_TIME' (at pp.c:7096)
            Constant: type='int', value='560' (at pp.c:7096)
          Enumerator: name='OneWireMasterC__DELAY_60US' (at pp.c:7097)
            Constant: type='int', value='60' (at pp.c:7097)
          Enumerator: name='OneWireMasterC__PRESENCE_DETECT_LOW_TIME' (at pp.c:7098)
            Constant: type='int', value='240' (at pp.c:7098)
          Enumerator: name='OneWireMasterC__PRESENCE_RESET_HIGH_TIME' (at pp.c:7099)
            Constant: type='int', value='480' (at pp.c:7099)
          Enumerator: name='OneWireMasterC__SLOT_TIME' (at pp.c:7100)
            Constant: type='int', value='65' (at pp.c:7100)
  Decl: name='OneWireMasterC__reset', quals=[], storage=['inline', 'static'] (at pp.c:7103)
    FuncDecl: quals=None (at pp.c:7103)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OneWireMasterC__reset', quals=[] (at pp.c:7103)
        IdentifierType: names=['bool'] (at None)
  Decl: name='OneWireMasterC__writeOne', quals=[], storage=['inline', 'static'] (at pp.c:7105)
    FuncDecl: quals=None (at pp.c:7105)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OneWireMasterC__writeOne', quals=[] (at pp.c:7105)
        IdentifierType: names=['void'] (at None)
  Decl: name='OneWireMasterC__writeZero', quals=[], storage=['inline', 'static'] (at pp.c:7112)
    FuncDecl: quals=None (at pp.c:7112)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OneWireMasterC__writeZero', quals=[] (at pp.c:7112)
        IdentifierType: names=['void'] (at None)
  Decl: name='OneWireMasterC__readBit', quals=[], storage=['inline', 'static'] (at pp.c:7119)
    FuncDecl: quals=None (at pp.c:7119)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OneWireMasterC__readBit', quals=[] (at pp.c:7119)
        IdentifierType: names=['bool'] (at None)
  Decl: name='OneWireMasterC__writeByte', quals=[], storage=['inline', 'static'] (at pp.c:7130)
    FuncDecl: quals=None (at pp.c:7130)
      ParamList:  (at pp.c:7130)
        Decl: name='c', quals=[], storage=[] (at pp.c:7130)
          TypeDecl: declname='c', quals=[] (at pp.c:7130)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='OneWireMasterC__writeByte', quals=[] (at pp.c:7130)
        IdentifierType: names=['void'] (at None)
  Decl: name='OneWireMasterC__readByte', quals=[], storage=['inline', 'static'] (at pp.c:7132)
    FuncDecl: quals=None (at pp.c:7132)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='OneWireMasterC__readByte', quals=[] (at pp.c:7132)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='OneWireMasterC__OneWire__read', quals=[], storage=['inline', 'static'] (at pp.c:7143)
    FuncDecl: quals=None (at pp.c:7143)
      ParamList:  (at pp.c:7143)
        Decl: name='cmd', quals=[], storage=[] (at pp.c:7143)
          TypeDecl: declname='cmd', quals=[] (at pp.c:7143)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:7143)
          PtrDecl: quals=[] (at pp.c:7143)
            TypeDecl: declname='buf', quals=[] (at pp.c:7143)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:7143)
          TypeDecl: declname='len', quals=[] (at pp.c:7143)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='OneWireMasterC__OneWire__read', quals=[] (at pp.c:7143)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='BusyWaitCounterC__0__Counter__get', quals=[], storage=['static'] (at pp.c:7145)
    FuncDecl: quals=None (at pp.c:7145)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BusyWaitCounterC__0__Counter__get', quals=[] (at pp.c:7145)
        IdentifierType: names=['BusyWaitCounterC__0__Counter__size_type'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:7147)
    Enum: name='BusyWaitCounterC__0____nesc_unnamed4344' (at pp.c:7147)
      EnumeratorList:  (at pp.c:7149)
        Enumerator: name='BusyWaitCounterC__0__HALF_MAX_SIZE_TYPE' (at pp.c:7149)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['BusyWaitCounterC__0__size_type'] (at None)
              Constant: type='int', value='1' (at pp.c:7149)
            BinaryOp: op='-' (at pp.c:7149)
              BinaryOp: op='*' (at pp.c:7149)
                Constant: type='int', value='8' (at pp.c:7149)
                UnaryOp: op='sizeof' (at pp.c:7149)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['BusyWaitCounterC__0__size_type'] (at None)
              Constant: type='int', value='1' (at pp.c:7149)
  Decl: name='BusyWaitCounterC__0__BusyWait__wait', quals=[], storage=['static'] (at pp.c:7152)
    FuncDecl: quals=None (at pp.c:7152)
      ParamList:  (at pp.c:7152)
        Decl: name='dt', quals=[], storage=[] (at pp.c:7152)
          TypeDecl: declname='dt', quals=[] (at pp.c:7152)
            IdentifierType: names=['BusyWaitCounterC__0__size_type'] (at None)
      TypeDecl: declname='BusyWaitCounterC__0__BusyWait__wait', quals=[] (at pp.c:7152)
        IdentifierType: names=['void'] (at None)
  Decl: name='BusyWaitCounterC__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:7154)
    FuncDecl: quals=None (at pp.c:7154)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='BusyWaitCounterC__0__Counter__overflow', quals=[] (at pp.c:7154)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430CounterC__1__Msp430Timer__get', quals=[], storage=['static'] (at pp.c:7156)
    FuncDecl: quals=None (at pp.c:7156)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__1__Msp430Timer__get', quals=[] (at pp.c:7156)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430CounterC__1__Counter__overflow', quals=[], storage=['static'] (at pp.c:7158)
    FuncDecl: quals=None (at pp.c:7158)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__1__Counter__overflow', quals=[] (at pp.c:7158)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430CounterC__1__Counter__get', quals=[], storage=['inline', 'static'] (at pp.c:7160)
    FuncDecl: quals=None (at pp.c:7160)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__1__Counter__get', quals=[] (at pp.c:7160)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430CounterC__1__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:7162)
    FuncDecl: quals=None (at pp.c:7162)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430CounterC__1__Msp430Timer__overflow', quals=[] (at pp.c:7162)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__11__HplGeneralIO__makeInput', quals=[], storage=['static'] (at pp.c:7164)
    FuncDecl: quals=None (at pp.c:7164)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__HplGeneralIO__makeInput', quals=[] (at pp.c:7164)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__11__HplGeneralIO__makeOutput', quals=[], storage=['static'] (at pp.c:7171)
    FuncDecl: quals=None (at pp.c:7171)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__HplGeneralIO__makeOutput', quals=[] (at pp.c:7171)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__11__HplGeneralIO__get', quals=[], storage=['static'] (at pp.c:7173)
    FuncDecl: quals=None (at pp.c:7173)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__HplGeneralIO__get', quals=[] (at pp.c:7173)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__11__HplGeneralIO__clr', quals=[], storage=['static'] (at pp.c:7175)
    FuncDecl: quals=None (at pp.c:7175)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__HplGeneralIO__clr', quals=[] (at pp.c:7175)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__11__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:7177)
    FuncDecl: quals=None (at pp.c:7177)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__GeneralIO__clr', quals=[] (at pp.c:7177)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__11__GeneralIO__get', quals=[], storage=['inline', 'static'] (at pp.c:7179)
    FuncDecl: quals=None (at pp.c:7179)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__GeneralIO__get', quals=[] (at pp.c:7179)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430GpioC__11__GeneralIO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:7180)
    FuncDecl: quals=None (at pp.c:7180)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__GeneralIO__makeInput', quals=[] (at pp.c:7180)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430GpioC__11__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:7182)
    FuncDecl: quals=None (at pp.c:7182)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430GpioC__11__GeneralIO__makeOutput', quals=[] (at pp.c:7182)
        IdentifierType: names=['void'] (at None)
  Decl: name='DallasId48ToIeeeEui64C__ReadId48__read', quals=[], storage=['static'] (at pp.c:7184)
    FuncDecl: quals=None (at pp.c:7184)
      ParamList:  (at pp.c:7184)
        Decl: name='id', quals=[], storage=[] (at pp.c:7184)
          PtrDecl: quals=[] (at pp.c:7184)
            TypeDecl: declname='id', quals=[] (at pp.c:7184)
              IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='DallasId48ToIeeeEui64C__ReadId48__read', quals=[] (at pp.c:7184)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='DallasId48ToIeeeEui64C__LocalIeeeEui64__getId', quals=[], storage=['static'] (at pp.c:7186)
    FuncDecl: quals=None (at pp.c:7186)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='DallasId48ToIeeeEui64C__LocalIeeeEui64__getId', quals=[] (at pp.c:7186)
        IdentifierType: names=['ieee_eui64_t'] (at None)
  Decl: name='CC2420TransmitP__RadioBackoff__requestInitialBackoff', quals=[], storage=['static'] (at pp.c:7188)
    FuncDecl: quals=None (at pp.c:7188)
      ParamList:  (at pp.c:7188)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7188)
          PtrDecl: quals=[] (at pp.c:7188)
            TypeDecl: declname='msg', quals=[] (at pp.c:7188)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__RadioBackoff__requestInitialBackoff', quals=[] (at pp.c:7188)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__RadioBackoff__requestCongestionBackoff', quals=[], storage=['static'] (at pp.c:7195)
    FuncDecl: quals=None (at pp.c:7195)
      ParamList:  (at pp.c:7195)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7195)
          PtrDecl: quals=[] (at pp.c:7195)
            TypeDecl: declname='msg', quals=[] (at pp.c:7195)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__RadioBackoff__requestCongestionBackoff', quals=[] (at pp.c:7195)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__PacketTimeStamp__clear', quals=[], storage=['static'] (at pp.c:7197)
    FuncDecl: quals=None (at pp.c:7197)
      ParamList:  (at pp.c:7199)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7199)
          PtrDecl: quals=[] (at pp.c:7199)
            TypeDecl: declname='msg', quals=[] (at pp.c:7199)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__PacketTimeStamp__clear', quals=[] (at pp.c:7197)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__PacketTimeStamp__set', quals=[], storage=['static'] (at pp.c:7201)
    FuncDecl: quals=None (at pp.c:7201)
      ParamList:  (at pp.c:7203)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7203)
          PtrDecl: quals=[] (at pp.c:7203)
            TypeDecl: declname='msg', quals=[] (at pp.c:7203)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='value', quals=[], storage=[] (at pp.c:7208)
          TypeDecl: declname='value', quals=[] (at pp.c:7208)
            IdentifierType: names=['CC2420TransmitP__PacketTimeStamp__size_type'] (at None)
      TypeDecl: declname='CC2420TransmitP__PacketTimeStamp__set', quals=[] (at pp.c:7201)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__STXONCCA__strobe', quals=[], storage=['static'] (at pp.c:7210)
    FuncDecl: quals=None (at pp.c:7210)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__STXONCCA__strobe', quals=[] (at pp.c:7210)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420TransmitP__CaptureSFD__captureFallingEdge', quals=[], storage=['static'] (at pp.c:7212)
    FuncDecl: quals=None (at pp.c:7212)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__CaptureSFD__captureFallingEdge', quals=[] (at pp.c:7212)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__CaptureSFD__disable', quals=[], storage=['static'] (at pp.c:7214)
    FuncDecl: quals=None (at pp.c:7214)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__CaptureSFD__disable', quals=[] (at pp.c:7214)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__CaptureSFD__captureRisingEdge', quals=[], storage=['static'] (at pp.c:7216)
    FuncDecl: quals=None (at pp.c:7216)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__CaptureSFD__captureRisingEdge', quals=[] (at pp.c:7216)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__BackoffTimer__getNow', quals=[], storage=['static'] (at pp.c:7218)
    FuncDecl: quals=None (at pp.c:7218)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__BackoffTimer__getNow', quals=[] (at pp.c:7218)
        IdentifierType: names=['CC2420TransmitP__BackoffTimer__size_type'] (at None)
  Decl: name='CC2420TransmitP__BackoffTimer__start', quals=[], storage=['static'] (at pp.c:7220)
    FuncDecl: quals=None (at pp.c:7220)
      ParamList:  (at pp.c:7220)
        Decl: name='dt', quals=[], storage=[] (at pp.c:7220)
          TypeDecl: declname='dt', quals=[] (at pp.c:7220)
            IdentifierType: names=['CC2420TransmitP__BackoffTimer__size_type'] (at None)
      TypeDecl: declname='CC2420TransmitP__BackoffTimer__start', quals=[] (at pp.c:7220)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__BackoffTimer__stop', quals=[], storage=['static'] (at pp.c:7227)
    FuncDecl: quals=None (at pp.c:7227)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__BackoffTimer__stop', quals=[] (at pp.c:7227)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__TXFIFO_RAM__write', quals=[], storage=['static'] (at pp.c:7229)
    FuncDecl: quals=None (at pp.c:7229)
      ParamList:  (at pp.c:7229)
        Decl: name='offset', quals=[], storage=[] (at pp.c:7229)
          TypeDecl: declname='offset', quals=[] (at pp.c:7229)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:7229)
          PtrDecl: quals=[] (at pp.c:7229)
            TypeDecl: declname='data', quals=[] (at pp.c:7229)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:7229)
          TypeDecl: declname='length', quals=[] (at pp.c:7229)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__TXFIFO_RAM__write', quals=[] (at pp.c:7229)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420TransmitP__TXCTRL__write', quals=[], storage=['static'] (at pp.c:7231)
    FuncDecl: quals=None (at pp.c:7231)
      ParamList:  (at pp.c:7231)
        Decl: name='data', quals=[], storage=[] (at pp.c:7231)
          TypeDecl: declname='data', quals=[] (at pp.c:7231)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__TXCTRL__write', quals=[] (at pp.c:7231)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420TransmitP__CC2420Receive__sfd_dropped', quals=[], storage=['static'] (at pp.c:7233)
    FuncDecl: quals=None (at pp.c:7233)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__CC2420Receive__sfd_dropped', quals=[] (at pp.c:7233)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__CC2420Receive__sfd', quals=[], storage=['static'] (at pp.c:7235)
    FuncDecl: quals=None (at pp.c:7235)
      ParamList:  (at pp.c:7235)
        Decl: name='time', quals=[], storage=[] (at pp.c:7235)
          TypeDecl: declname='time', quals=[] (at pp.c:7235)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__CC2420Receive__sfd', quals=[] (at pp.c:7235)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__Send__sendDone', quals=[], storage=['static'] (at pp.c:7237)
    FuncDecl: quals=None (at pp.c:7237)
      ParamList:  (at pp.c:7237)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:7237)
          PtrDecl: quals=[] (at pp.c:7237)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:7237)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:7237)
          TypeDecl: declname='error', quals=[] (at pp.c:7237)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__Send__sendDone', quals=[] (at pp.c:7237)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__ChipSpiResource__abortRelease', quals=[], storage=['static'] (at pp.c:7239)
    FuncDecl: quals=None (at pp.c:7239)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__ChipSpiResource__abortRelease', quals=[] (at pp.c:7239)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__ChipSpiResource__attemptRelease', quals=[], storage=['static'] (at pp.c:7247)
    FuncDecl: quals=None (at pp.c:7247)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__ChipSpiResource__attemptRelease', quals=[] (at pp.c:7247)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__SFLUSHTX__strobe', quals=[], storage=['static'] (at pp.c:7249)
    FuncDecl: quals=None (at pp.c:7249)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__SFLUSHTX__strobe', quals=[] (at pp.c:7249)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420TransmitP__CSN__makeOutput', quals=[], storage=['static'] (at pp.c:7251)
    FuncDecl: quals=None (at pp.c:7251)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__CSN__makeOutput', quals=[] (at pp.c:7251)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__CSN__set', quals=[], storage=['static'] (at pp.c:7253)
    FuncDecl: quals=None (at pp.c:7253)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__CSN__set', quals=[] (at pp.c:7253)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__CSN__clr', quals=[], storage=['static'] (at pp.c:7254)
    FuncDecl: quals=None (at pp.c:7254)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__CSN__clr', quals=[] (at pp.c:7254)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__CC2420PacketBody__getHeader', quals=[], storage=['static'] (at pp.c:7256)
    FuncDecl: quals=None (at pp.c:7256)
      ParamList:  (at pp.c:7256)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7256)
          PtrDecl: quals=[] (at pp.c:7256)
            TypeDecl: declname='msg', quals=[] (at pp.c:7256)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7256)
        TypeDecl: declname='CC2420TransmitP__CC2420PacketBody__getHeader', quals=[] (at pp.c:7256)
          IdentifierType: names=['cc2420_header_t'] (at None)
  Decl: name='CC2420TransmitP__CC2420PacketBody__getMetadata', quals=[], storage=['static'] (at pp.c:7267)
    FuncDecl: quals=None (at pp.c:7267)
      ParamList:  (at pp.c:7267)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7267)
          PtrDecl: quals=[] (at pp.c:7267)
            TypeDecl: declname='msg', quals=[] (at pp.c:7267)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7267)
        TypeDecl: declname='CC2420TransmitP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:7267)
          IdentifierType: names=['cc2420_metadata_t'] (at None)
  Decl: name='CC2420TransmitP__PacketTimeSyncOffset__get', quals=[], storage=['static'] (at pp.c:7269)
    FuncDecl: quals=None (at pp.c:7269)
      ParamList:  (at pp.c:7271)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7271)
          PtrDecl: quals=[] (at pp.c:7271)
            TypeDecl: declname='msg', quals=[] (at pp.c:7271)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__PacketTimeSyncOffset__get', quals=[] (at pp.c:7269)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420TransmitP__PacketTimeSyncOffset__isSet', quals=[], storage=['static'] (at pp.c:7273)
    FuncDecl: quals=None (at pp.c:7273)
      ParamList:  (at pp.c:7275)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7275)
          PtrDecl: quals=[] (at pp.c:7275)
            TypeDecl: declname='msg', quals=[] (at pp.c:7275)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__PacketTimeSyncOffset__isSet', quals=[] (at pp.c:7273)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420TransmitP__SpiResource__release', quals=[], storage=['static'] (at pp.c:7277)
    FuncDecl: quals=None (at pp.c:7277)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__SpiResource__release', quals=[] (at pp.c:7277)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__SpiResource__immediateRequest', quals=[], storage=['static'] (at pp.c:7279)
    FuncDecl: quals=None (at pp.c:7279)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__SpiResource__immediateRequest', quals=[] (at pp.c:7279)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__SpiResource__request', quals=[], storage=['static'] (at pp.c:7281)
    FuncDecl: quals=None (at pp.c:7281)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__SpiResource__request', quals=[] (at pp.c:7281)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__CCA__makeInput', quals=[], storage=['static'] (at pp.c:7283)
    FuncDecl: quals=None (at pp.c:7283)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__CCA__makeInput', quals=[] (at pp.c:7283)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__CCA__get', quals=[], storage=['static'] (at pp.c:7285)
    FuncDecl: quals=None (at pp.c:7285)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__CCA__get', quals=[] (at pp.c:7285)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420TransmitP__SNOP__strobe', quals=[], storage=['static'] (at pp.c:7287)
    FuncDecl: quals=None (at pp.c:7287)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__SNOP__strobe', quals=[] (at pp.c:7287)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420TransmitP__SFD__makeInput', quals=[], storage=['static'] (at pp.c:7289)
    FuncDecl: quals=None (at pp.c:7289)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__SFD__makeInput', quals=[] (at pp.c:7289)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__SFD__get', quals=[], storage=['static'] (at pp.c:7291)
    FuncDecl: quals=None (at pp.c:7291)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__SFD__get', quals=[] (at pp.c:7291)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420TransmitP__TXFIFO__write', quals=[], storage=['static'] (at pp.c:7293)
    FuncDecl: quals=None (at pp.c:7293)
      ParamList:  (at pp.c:7293)
        Decl: name='data', quals=[], storage=[] (at pp.c:7293)
          PtrDecl: quals=[] (at pp.c:7293)
            TypeDecl: declname='data', quals=[] (at pp.c:7293)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:7293)
          TypeDecl: declname='length', quals=[] (at pp.c:7293)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__TXFIFO__write', quals=[] (at pp.c:7293)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420TransmitP__STXON__strobe', quals=[], storage=['static'] (at pp.c:7295)
    FuncDecl: quals=None (at pp.c:7295)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__STXON__strobe', quals=[] (at pp.c:7295)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Typedef: name='CC2420TransmitP__cc2420_transmit_state_t', quals=[], storage=['typedef'] (at pp.c:7308)
    TypeDecl: declname='CC2420TransmitP__cc2420_transmit_state_t', quals=[] (at pp.c:7308)
      Enum: name='CC2420TransmitP____nesc_unnamed4345' (at pp.c:7298)
        EnumeratorList:  (at pp.c:7299)
          Enumerator: name='CC2420TransmitP__S_STOPPED' (at pp.c:7299)
          Enumerator: name='CC2420TransmitP__S_STARTED' (at pp.c:7300)
          Enumerator: name='CC2420TransmitP__S_LOAD' (at pp.c:7301)
          Enumerator: name='CC2420TransmitP__S_SAMPLE_CCA' (at pp.c:7302)
          Enumerator: name='CC2420TransmitP__S_BEGIN_TRANSMIT' (at pp.c:7303)
          Enumerator: name='CC2420TransmitP__S_SFD' (at pp.c:7304)
          Enumerator: name='CC2420TransmitP__S_EFD' (at pp.c:7305)
          Enumerator: name='CC2420TransmitP__S_ACK_WAIT' (at pp.c:7306)
          Enumerator: name='CC2420TransmitP__S_CANCEL' (at pp.c:7307)
  Decl: name=None, quals=[], storage=[] (at pp.c:7314)
    Enum: name='CC2420TransmitP____nesc_unnamed4346' (at pp.c:7314)
      EnumeratorList:  (at pp.c:7315)
        Enumerator: name='CC2420TransmitP__CC2420_ABORT_PERIOD' (at pp.c:7315)
          Constant: type='int', value='320' (at pp.c:7315)
  Decl: name='CC2420TransmitP__m_msg', quals=[], storage=[] (at pp.c:7318)
    PtrDecl: quals=[] (at pp.c:7318)
      TypeDecl: declname='CC2420TransmitP__m_msg', quals=[] (at pp.c:7318)
        IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420TransmitP__m_cca', quals=[], storage=[] (at pp.c:7320)
    TypeDecl: declname='CC2420TransmitP__m_cca', quals=[] (at pp.c:7320)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420TransmitP__m_tx_power', quals=[], storage=[] (at pp.c:7322)
    TypeDecl: declname='CC2420TransmitP__m_tx_power', quals=[] (at pp.c:7322)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420TransmitP__m_state', quals=[], storage=[] (at pp.c:7324)
    TypeDecl: declname='CC2420TransmitP__m_state', quals=[] (at pp.c:7324)
      IdentifierType: names=['CC2420TransmitP__cc2420_transmit_state_t'] (at None)
    ID: name='CC2420TransmitP__S_STOPPED' (at pp.c:7324)
  Decl: name='CC2420TransmitP__m_receiving', quals=[], storage=[] (at pp.c:7326)
    TypeDecl: declname='CC2420TransmitP__m_receiving', quals=[] (at pp.c:7326)
      IdentifierType: names=['bool'] (at None)
    ID: name='FALSE' (at pp.c:7326)
  Decl: name='CC2420TransmitP__m_prev_time', quals=[], storage=[] (at pp.c:7328)
    TypeDecl: declname='CC2420TransmitP__m_prev_time', quals=[] (at pp.c:7328)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420TransmitP__sfdHigh', quals=[], storage=[] (at pp.c:7331)
    TypeDecl: declname='CC2420TransmitP__sfdHigh', quals=[] (at pp.c:7331)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420TransmitP__abortSpiRelease', quals=[], storage=[] (at pp.c:7334)
    TypeDecl: declname='CC2420TransmitP__abortSpiRelease', quals=[] (at pp.c:7334)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420TransmitP__totalCcaChecks', quals=[], storage=[] (at pp.c:7337)
    TypeDecl: declname='CC2420TransmitP__totalCcaChecks', quals=[] (at pp.c:7337)
      IdentifierType: names=['int8_t'] (at None)
  Decl: name='CC2420TransmitP__myInitialBackoff', quals=[], storage=[] (at pp.c:7340)
    TypeDecl: declname='CC2420TransmitP__myInitialBackoff', quals=[] (at pp.c:7340)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420TransmitP__myCongestionBackoff', quals=[], storage=[] (at pp.c:7343)
    TypeDecl: declname='CC2420TransmitP__myCongestionBackoff', quals=[] (at pp.c:7343)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420TransmitP__send', quals=[], storage=['inline', 'static'] (at pp.c:7347)
    FuncDecl: quals=None (at pp.c:7347)
      ParamList:  (at pp.c:7347)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:7347)
          PtrDecl: quals=[] (at pp.c:7347)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:7347)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='cca', quals=[], storage=[] (at pp.c:7347)
          TypeDecl: declname='cca', quals=[] (at pp.c:7347)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='CC2420TransmitP__send', quals=[] (at pp.c:7347)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__loadTXFIFO', quals=[], storage=['static'] (at pp.c:7349)
    FuncDecl: quals=None (at pp.c:7349)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__loadTXFIFO', quals=[] (at pp.c:7349)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__attemptSend', quals=[], storage=['static'] (at pp.c:7350)
    FuncDecl: quals=None (at pp.c:7350)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__attemptSend', quals=[] (at pp.c:7350)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__congestionBackoff', quals=[], storage=['static'] (at pp.c:7351)
    FuncDecl: quals=None (at pp.c:7351)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__congestionBackoff', quals=[] (at pp.c:7351)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__acquireSpiResource', quals=[], storage=['static'] (at pp.c:7352)
    FuncDecl: quals=None (at pp.c:7352)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__acquireSpiResource', quals=[] (at pp.c:7352)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__releaseSpiResource', quals=[], storage=['inline', 'static'] (at pp.c:7353)
    FuncDecl: quals=None (at pp.c:7353)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__releaseSpiResource', quals=[] (at pp.c:7353)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__signalDone', quals=[], storage=['static'] (at pp.c:7354)
    FuncDecl: quals=None (at pp.c:7354)
      ParamList:  (at pp.c:7354)
        Decl: name='err', quals=[], storage=[] (at pp.c:7354)
          TypeDecl: declname='err', quals=[] (at pp.c:7354)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__signalDone', quals=[] (at pp.c:7354)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:7358)
    FuncDecl: quals=None (at pp.c:7358)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__Init__init', quals=[] (at pp.c:7358)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__StdControl__start', quals=[], storage=['inline', 'static'] (at pp.c:7366)
    FuncDecl: quals=None (at pp.c:7366)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__StdControl__start', quals=[] (at pp.c:7366)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__StdControl__stop', quals=[], storage=['inline', 'static'] (at pp.c:7377)
    FuncDecl: quals=None (at pp.c:7377)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__StdControl__stop', quals=[] (at pp.c:7377)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__Send__send', quals=[], storage=['inline', 'static'] (at pp.c:7379)
    FuncDecl: quals=None (at pp.c:7379)
      ParamList:  (at pp.c:7379)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:7379)
          PtrDecl: quals=[] (at pp.c:7379)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:7379)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='useCca', quals=[], storage=[] (at pp.c:7379)
          TypeDecl: declname='useCca', quals=[] (at pp.c:7379)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='CC2420TransmitP__Send__send', quals=[] (at pp.c:7379)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__RadioBackoff__setInitialBackoff', quals=[], storage=['inline', 'static'] (at pp.c:7381)
    FuncDecl: quals=None (at pp.c:7381)
      ParamList:  (at pp.c:7381)
        Decl: name='backoffTime', quals=[], storage=[] (at pp.c:7381)
          TypeDecl: declname='backoffTime', quals=[] (at pp.c:7381)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__RadioBackoff__setInitialBackoff', quals=[] (at pp.c:7381)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__RadioBackoff__setCongestionBackoff', quals=[], storage=['inline', 'static'] (at pp.c:7389)
    FuncDecl: quals=None (at pp.c:7389)
      ParamList:  (at pp.c:7389)
        Decl: name='backoffTime', quals=[], storage=[] (at pp.c:7389)
          TypeDecl: declname='backoffTime', quals=[] (at pp.c:7389)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__RadioBackoff__setCongestionBackoff', quals=[] (at pp.c:7389)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__getTime32', quals=[], storage=['__inline', 'static'] (at pp.c:7397)
    FuncDecl: quals=None (at pp.c:7397)
      ParamList:  (at pp.c:7397)
        Decl: name='captured_time', quals=[], storage=[] (at pp.c:7397)
          TypeDecl: declname='captured_time', quals=[] (at pp.c:7397)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__getTime32', quals=[] (at pp.c:7397)
        IdentifierType: names=['uint32_t'] (at None)
  Decl: name='CC2420TransmitP__CaptureSFD__captured', quals=[], storage=['inline', 'static'] (at pp.c:7399)
    FuncDecl: quals=None (at pp.c:7399)
      ParamList:  (at pp.c:7399)
        Decl: name='time', quals=[], storage=[] (at pp.c:7399)
          TypeDecl: declname='time', quals=[] (at pp.c:7399)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__CaptureSFD__captured', quals=[] (at pp.c:7399)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__ChipSpiResource__releasing', quals=[], storage=['inline', 'static'] (at pp.c:7401)
    FuncDecl: quals=None (at pp.c:7401)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__ChipSpiResource__releasing', quals=[] (at pp.c:7401)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__CC2420Receive__receive', quals=[], storage=['inline', 'static'] (at pp.c:7403)
    FuncDecl: quals=None (at pp.c:7403)
      ParamList:  (at pp.c:7403)
        Decl: name='type', quals=[], storage=[] (at pp.c:7403)
          TypeDecl: declname='type', quals=[] (at pp.c:7403)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='ack_msg', quals=[], storage=[] (at pp.c:7403)
          PtrDecl: quals=[] (at pp.c:7403)
            TypeDecl: declname='ack_msg', quals=[] (at pp.c:7403)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__CC2420Receive__receive', quals=[] (at pp.c:7403)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__SpiResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:7405)
    FuncDecl: quals=None (at pp.c:7405)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__SpiResource__granted', quals=[] (at pp.c:7405)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__TXFIFO__writeDone', quals=[], storage=['inline', 'static'] (at pp.c:7407)
    FuncDecl: quals=None (at pp.c:7407)
      ParamList:  (at pp.c:7407)
        Decl: name='tx_buf', quals=[], storage=[] (at pp.c:7407)
          PtrDecl: quals=[] (at pp.c:7407)
            TypeDecl: declname='tx_buf', quals=[] (at pp.c:7407)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='tx_len', quals=[], storage=[] (at pp.c:7407)
          TypeDecl: declname='tx_len', quals=[] (at pp.c:7407)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:7408)
          TypeDecl: declname='error', quals=[] (at pp.c:7408)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__TXFIFO__writeDone', quals=[] (at pp.c:7407)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__TXFIFO__readDone', quals=[], storage=['inline', 'static'] (at pp.c:7410)
    FuncDecl: quals=None (at pp.c:7410)
      ParamList:  (at pp.c:7410)
        Decl: name='tx_buf', quals=[], storage=[] (at pp.c:7410)
          PtrDecl: quals=[] (at pp.c:7410)
            TypeDecl: declname='tx_buf', quals=[] (at pp.c:7410)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='tx_len', quals=[], storage=[] (at pp.c:7410)
          TypeDecl: declname='tx_len', quals=[] (at pp.c:7410)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:7411)
          TypeDecl: declname='error', quals=[] (at pp.c:7411)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__TXFIFO__readDone', quals=[] (at pp.c:7410)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__BackoffTimer__fired', quals=[], storage=['inline', 'static'] (at pp.c:7422)
    FuncDecl: quals=None (at pp.c:7422)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__BackoffTimer__fired', quals=[] (at pp.c:7422)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__send', quals=[], storage=['inline', 'static'] (at pp.c:7424)
    FuncDecl: quals=None (at pp.c:7424)
      ParamList:  (at pp.c:7424)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:7424)
          PtrDecl: quals=[] (at pp.c:7424)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:7424)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='cca', quals=[], storage=[] (at pp.c:7424)
          TypeDecl: declname='cca', quals=[] (at pp.c:7424)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='CC2420TransmitP__send', quals=[] (at pp.c:7424)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__attemptSend', quals=[], storage=['static'] (at pp.c:7426)
    FuncDecl: quals=None (at pp.c:7426)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__attemptSend', quals=[] (at pp.c:7426)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__congestionBackoff', quals=[], storage=['static'] (at pp.c:7428)
    FuncDecl: quals=None (at pp.c:7428)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__congestionBackoff', quals=[] (at pp.c:7428)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__acquireSpiResource', quals=[], storage=['static'] (at pp.c:7435)
    FuncDecl: quals=None (at pp.c:7435)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__acquireSpiResource', quals=[] (at pp.c:7435)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__releaseSpiResource', quals=[], storage=['inline', 'static'] (at pp.c:7443)
    FuncDecl: quals=None (at pp.c:7443)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__releaseSpiResource', quals=[] (at pp.c:7443)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TransmitP__loadTXFIFO', quals=[], storage=['static'] (at pp.c:7445)
    FuncDecl: quals=None (at pp.c:7445)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TransmitP__loadTXFIFO', quals=[] (at pp.c:7445)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TransmitP__signalDone', quals=[], storage=['static'] (at pp.c:7447)
    FuncDecl: quals=None (at pp.c:7447)
      ParamList:  (at pp.c:7447)
        Decl: name='err', quals=[], storage=[] (at pp.c:7447)
          TypeDecl: declname='err', quals=[] (at pp.c:7447)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TransmitP__signalDone', quals=[] (at pp.c:7447)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__FIFO__get', quals=[], storage=['static'] (at pp.c:7449)
    FuncDecl: quals=None (at pp.c:7449)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__FIFO__get', quals=[] (at pp.c:7449)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Config__isAddressRecognitionEnabled', quals=[], storage=['static'] (at pp.c:7451)
    FuncDecl: quals=None (at pp.c:7451)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Config__isAddressRecognitionEnabled', quals=[] (at pp.c:7451)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Config__isAutoAckEnabled', quals=[], storage=['static'] (at pp.c:7453)
    FuncDecl: quals=None (at pp.c:7453)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Config__isAutoAckEnabled', quals=[] (at pp.c:7453)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Config__isHwAutoAckDefault', quals=[], storage=['static'] (at pp.c:7455)
    FuncDecl: quals=None (at pp.c:7455)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Config__isHwAutoAckDefault', quals=[] (at pp.c:7455)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Config__getExtAddr', quals=[], storage=['static'] (at pp.c:7457)
    FuncDecl: quals=None (at pp.c:7457)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Config__getExtAddr', quals=[] (at pp.c:7457)
        IdentifierType: names=['ieee_eui64_t'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Config__getShortAddr', quals=[], storage=['static'] (at pp.c:7462)
    FuncDecl: quals=None (at pp.c:7462)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Config__getShortAddr', quals=[] (at pp.c:7462)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420ReceiveP__receiveDone_task__postTask', quals=[], storage=['static'] (at pp.c:7464)
    FuncDecl: quals=None (at pp.c:7464)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__receiveDone_task__postTask', quals=[] (at pp.c:7464)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__PacketTimeStamp__clear', quals=[], storage=['static'] (at pp.c:7466)
    FuncDecl: quals=None (at pp.c:7466)
      ParamList:  (at pp.c:7468)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7468)
          PtrDecl: quals=[] (at pp.c:7468)
            TypeDecl: declname='msg', quals=[] (at pp.c:7468)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__PacketTimeStamp__clear', quals=[] (at pp.c:7466)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__PacketTimeStamp__set', quals=[], storage=['static'] (at pp.c:7470)
    FuncDecl: quals=None (at pp.c:7470)
      ParamList:  (at pp.c:7472)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7472)
          PtrDecl: quals=[] (at pp.c:7472)
            TypeDecl: declname='msg', quals=[] (at pp.c:7472)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='value', quals=[], storage=[] (at pp.c:7477)
          TypeDecl: declname='value', quals=[] (at pp.c:7477)
            IdentifierType: names=['CC2420ReceiveP__PacketTimeStamp__size_type'] (at None)
      TypeDecl: declname='CC2420ReceiveP__PacketTimeStamp__set', quals=[] (at pp.c:7470)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__FIFOP__get', quals=[], storage=['static'] (at pp.c:7479)
    FuncDecl: quals=None (at pp.c:7479)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__FIFOP__get', quals=[] (at pp.c:7479)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Receive__receive', quals=[], storage=['static'] (at pp.c:7481)
    FuncDecl: quals=None (at pp.c:7481)
      ParamList:  (at pp.c:7481)
        Decl: name='type', quals=[], storage=[] (at pp.c:7481)
          TypeDecl: declname='type', quals=[] (at pp.c:7481)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='message', quals=[], storage=[] (at pp.c:7481)
          PtrDecl: quals=[] (at pp.c:7481)
            TypeDecl: declname='message', quals=[] (at pp.c:7481)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Receive__receive', quals=[] (at pp.c:7481)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__SACK__strobe', quals=[], storage=['static'] (at pp.c:7483)
    FuncDecl: quals=None (at pp.c:7483)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__SACK__strobe', quals=[] (at pp.c:7483)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ReceiveP__CSN__set', quals=[], storage=['static'] (at pp.c:7485)
    FuncDecl: quals=None (at pp.c:7485)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CSN__set', quals=[] (at pp.c:7485)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__CSN__clr', quals=[], storage=['static'] (at pp.c:7486)
    FuncDecl: quals=None (at pp.c:7486)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CSN__clr', quals=[] (at pp.c:7486)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__CC2420PacketBody__getHeader', quals=[], storage=['static'] (at pp.c:7488)
    FuncDecl: quals=None (at pp.c:7488)
      ParamList:  (at pp.c:7488)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7488)
          PtrDecl: quals=[] (at pp.c:7488)
            TypeDecl: declname='msg', quals=[] (at pp.c:7488)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7488)
        TypeDecl: declname='CC2420ReceiveP__CC2420PacketBody__getHeader', quals=[] (at pp.c:7488)
          IdentifierType: names=['cc2420_header_t'] (at None)
  Decl: name='CC2420ReceiveP__CC2420PacketBody__getMetadata', quals=[], storage=['static'] (at pp.c:7499)
    FuncDecl: quals=None (at pp.c:7499)
      ParamList:  (at pp.c:7499)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7499)
          PtrDecl: quals=[] (at pp.c:7499)
            TypeDecl: declname='msg', quals=[] (at pp.c:7499)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7499)
        TypeDecl: declname='CC2420ReceiveP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:7499)
          IdentifierType: names=['cc2420_metadata_t'] (at None)
  Decl: name='CC2420ReceiveP__Receive__receive', quals=[], storage=['static'] (at pp.c:7507)
    FuncDecl: quals=None (at pp.c:7507)
      ParamList:  (at pp.c:7509)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7509)
          PtrDecl: quals=[] (at pp.c:7509)
            TypeDecl: declname='msg', quals=[] (at pp.c:7509)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:7510)
          PtrDecl: quals=[] (at pp.c:7510)
            TypeDecl: declname='payload', quals=[] (at pp.c:7510)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:7516)
          TypeDecl: declname='len', quals=[] (at pp.c:7516)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7503)
        TypeDecl: declname='CC2420ReceiveP__Receive__receive', quals=[] (at pp.c:7507)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420ReceiveP__SpiResource__release', quals=[], storage=['static'] (at pp.c:7518)
    FuncDecl: quals=None (at pp.c:7518)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__SpiResource__release', quals=[] (at pp.c:7518)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__SpiResource__immediateRequest', quals=[], storage=['static'] (at pp.c:7520)
    FuncDecl: quals=None (at pp.c:7520)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__SpiResource__immediateRequest', quals=[] (at pp.c:7520)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__SpiResource__request', quals=[], storage=['static'] (at pp.c:7522)
    FuncDecl: quals=None (at pp.c:7522)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__SpiResource__request', quals=[] (at pp.c:7522)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__SpiResource__isOwner', quals=[], storage=['static'] (at pp.c:7524)
    FuncDecl: quals=None (at pp.c:7524)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__SpiResource__isOwner', quals=[] (at pp.c:7524)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ReceiveP__RXFIFO__continueRead', quals=[], storage=['static'] (at pp.c:7526)
    FuncDecl: quals=None (at pp.c:7526)
      ParamList:  (at pp.c:7526)
        Decl: name='data', quals=[], storage=[] (at pp.c:7526)
          PtrDecl: quals=[] (at pp.c:7526)
            TypeDecl: declname='data', quals=[] (at pp.c:7526)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:7526)
          TypeDecl: declname='length', quals=[] (at pp.c:7526)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__RXFIFO__continueRead', quals=[] (at pp.c:7526)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__RXFIFO__beginRead', quals=[], storage=['static'] (at pp.c:7528)
    FuncDecl: quals=None (at pp.c:7528)
      ParamList:  (at pp.c:7528)
        Decl: name='data', quals=[], storage=[] (at pp.c:7528)
          PtrDecl: quals=[] (at pp.c:7528)
            TypeDecl: declname='data', quals=[] (at pp.c:7528)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:7528)
          TypeDecl: declname='length', quals=[] (at pp.c:7528)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__RXFIFO__beginRead', quals=[] (at pp.c:7528)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name='CC2420ReceiveP__InterruptFIFOP__disable', quals=[], storage=['static'] (at pp.c:7530)
    FuncDecl: quals=None (at pp.c:7530)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__InterruptFIFOP__disable', quals=[] (at pp.c:7530)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__InterruptFIFOP__enableFallingEdge', quals=[], storage=['static'] (at pp.c:7532)
    FuncDecl: quals=None (at pp.c:7532)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__InterruptFIFOP__enableFallingEdge', quals=[] (at pp.c:7532)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__SFLUSHRX__strobe', quals=[], storage=['static'] (at pp.c:7534)
    FuncDecl: quals=None (at pp.c:7534)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__SFLUSHRX__strobe', quals=[] (at pp.c:7534)
        IdentifierType: names=['cc2420_status_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:7536)
    Enum: name='CC2420ReceiveP____nesc_unnamed4347' (at pp.c:7536)
      EnumeratorList:  (at pp.c:7538)
        Enumerator: name='CC2420ReceiveP__receiveDone_task' (at pp.c:7538)
          Constant: type='int', value='8U' (at pp.c:7538)
  Typedef: name='CC2420ReceiveP____nesc_sillytask_receiveDone_task', quals=[], storage=['typedef'] (at pp.c:7541)
    ArrayDecl:  (at pp.c:7541)
      TypeDecl: declname='CC2420ReceiveP____nesc_sillytask_receiveDone_task', quals=[] (at pp.c:7541)
        IdentifierType: names=['int'] (at None)
      ID: name='CC2420ReceiveP__receiveDone_task' (at pp.c:7541)
  Typedef: name='CC2420ReceiveP__cc2420_receive_state_t', quals=[], storage=['typedef'] (at pp.c:7552)
    TypeDecl: declname='CC2420ReceiveP__cc2420_receive_state_t', quals=[] (at pp.c:7552)
      Enum: name='CC2420ReceiveP____nesc_unnamed4348' (at pp.c:7544)
        EnumeratorList:  (at pp.c:7545)
          Enumerator: name='CC2420ReceiveP__S_STOPPED' (at pp.c:7545)
          Enumerator: name='CC2420ReceiveP__S_STARTED' (at pp.c:7546)
          Enumerator: name='CC2420ReceiveP__S_RX_LENGTH' (at pp.c:7547)
          Enumerator: name='CC2420ReceiveP__S_RX_DEC' (at pp.c:7548)
          Enumerator: name='CC2420ReceiveP__S_RX_DEC_WAIT' (at pp.c:7549)
          Enumerator: name='CC2420ReceiveP__S_RX_FCF' (at pp.c:7550)
          Enumerator: name='CC2420ReceiveP__S_RX_PAYLOAD' (at pp.c:7551)
  Decl: name=None, quals=[], storage=[] (at pp.c:7554)
    Enum: name='CC2420ReceiveP____nesc_unnamed4349' (at pp.c:7554)
      EnumeratorList:  (at pp.c:7555)
        Enumerator: name='CC2420ReceiveP__RXFIFO_SIZE' (at pp.c:7555)
          Constant: type='int', value='128' (at pp.c:7555)
        Enumerator: name='CC2420ReceiveP__TIMESTAMP_QUEUE_SIZE' (at pp.c:7556)
          Constant: type='int', value='8' (at pp.c:7556)
        Enumerator: name='CC2420ReceiveP__SACK_HEADER_LENGTH' (at pp.c:7557)
          Constant: type='int', value='7' (at pp.c:7557)
  Decl: name='CC2420ReceiveP__m_timestamp_queue', quals=[], storage=[] (at pp.c:7560)
    ArrayDecl:  (at pp.c:7560)
      TypeDecl: declname='CC2420ReceiveP__m_timestamp_queue', quals=[] (at pp.c:7560)
        IdentifierType: names=['uint32_t'] (at None)
      ID: name='CC2420ReceiveP__TIMESTAMP_QUEUE_SIZE' (at pp.c:7560)
  Decl: name='CC2420ReceiveP__m_timestamp_head', quals=[], storage=[] (at pp.c:7562)
    TypeDecl: declname='CC2420ReceiveP__m_timestamp_head', quals=[] (at pp.c:7562)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ReceiveP__m_timestamp_size', quals=[], storage=[] (at pp.c:7564)
    TypeDecl: declname='CC2420ReceiveP__m_timestamp_size', quals=[] (at pp.c:7564)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ReceiveP__m_missed_packets', quals=[], storage=[] (at pp.c:7570)
    TypeDecl: declname='CC2420ReceiveP__m_missed_packets', quals=[] (at pp.c:7570)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ReceiveP__receivingPacket', quals=[], storage=[] (at pp.c:7574)
    TypeDecl: declname='CC2420ReceiveP__receivingPacket', quals=[] (at pp.c:7574)
      IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ReceiveP__rxFrameLength', quals=[], storage=[] (at pp.c:7577)
    TypeDecl: declname='CC2420ReceiveP__rxFrameLength', quals=[] (at pp.c:7577)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ReceiveP__m_bytes_left', quals=[], storage=[] (at pp.c:7579)
    TypeDecl: declname='CC2420ReceiveP__m_bytes_left', quals=[] (at pp.c:7579)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ReceiveP__m_p_rx_buf', quals=[], storage=[] (at pp.c:7581)
    PtrDecl: quals=[] (at pp.c:7581)
      TypeDecl: declname='CC2420ReceiveP__m_p_rx_buf', quals=[] (at pp.c:7581)
        IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420ReceiveP__m_rx_buf', quals=[], storage=[] (at pp.c:7583)
    TypeDecl: declname='CC2420ReceiveP__m_rx_buf', quals=[] (at pp.c:7583)
      IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420ReceiveP__m_state', quals=[], storage=[] (at pp.c:7585)
    TypeDecl: declname='CC2420ReceiveP__m_state', quals=[] (at pp.c:7585)
      IdentifierType: names=['CC2420ReceiveP__cc2420_receive_state_t'] (at None)
  Decl: name='CC2420ReceiveP__reset_state', quals=[], storage=['static'] (at pp.c:7589)
    FuncDecl: quals=None (at pp.c:7589)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__reset_state', quals=[] (at pp.c:7589)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__beginReceive', quals=[], storage=['static'] (at pp.c:7590)
    FuncDecl: quals=None (at pp.c:7590)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__beginReceive', quals=[] (at pp.c:7590)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__receive', quals=[], storage=['static'] (at pp.c:7591)
    FuncDecl: quals=None (at pp.c:7591)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__receive', quals=[] (at pp.c:7591)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__waitForNextPacket', quals=[], storage=['static'] (at pp.c:7592)
    FuncDecl: quals=None (at pp.c:7592)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__waitForNextPacket', quals=[] (at pp.c:7592)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__flush', quals=[], storage=['static'] (at pp.c:7593)
    FuncDecl: quals=None (at pp.c:7593)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__flush', quals=[] (at pp.c:7593)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__passesAddressCheck', quals=[], storage=['inline', 'static'] (at pp.c:7594)
    FuncDecl: quals=None (at pp.c:7594)
      ParamList:  (at pp.c:7594)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7594)
          PtrDecl: quals=[] (at pp.c:7594)
            TypeDecl: declname='msg', quals=[] (at pp.c:7594)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__passesAddressCheck', quals=[] (at pp.c:7594)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ReceiveP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:7599)
    FuncDecl: quals=None (at pp.c:7599)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__Init__init', quals=[] (at pp.c:7599)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__StdControl__start', quals=[], storage=['inline', 'static'] (at pp.c:7605)
    FuncDecl: quals=None (at pp.c:7605)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__StdControl__start', quals=[] (at pp.c:7605)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__StdControl__stop', quals=[], storage=['inline', 'static'] (at pp.c:7607)
    FuncDecl: quals=None (at pp.c:7607)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__StdControl__stop', quals=[] (at pp.c:7607)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Receive__sfd', quals=[], storage=['inline', 'static'] (at pp.c:7609)
    FuncDecl: quals=None (at pp.c:7609)
      ParamList:  (at pp.c:7609)
        Decl: name='time', quals=[], storage=[] (at pp.c:7609)
          TypeDecl: declname='time', quals=[] (at pp.c:7609)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Receive__sfd', quals=[] (at pp.c:7609)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Receive__sfd_dropped', quals=[], storage=['inline', 'static'] (at pp.c:7618)
    FuncDecl: quals=None (at pp.c:7618)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Receive__sfd_dropped', quals=[] (at pp.c:7618)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__InterruptFIFOP__fired', quals=[], storage=['inline', 'static'] (at pp.c:7620)
    FuncDecl: quals=None (at pp.c:7620)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__InterruptFIFOP__fired', quals=[] (at pp.c:7620)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__SpiResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:7622)
    FuncDecl: quals=None (at pp.c:7622)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__SpiResource__granted', quals=[] (at pp.c:7622)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__RXFIFO__readDone', quals=[], storage=['inline', 'static'] (at pp.c:7624)
    FuncDecl: quals=None (at pp.c:7624)
      ParamList:  (at pp.c:7624)
        Decl: name='rx_buf', quals=[], storage=[] (at pp.c:7624)
          PtrDecl: quals=[] (at pp.c:7624)
            TypeDecl: declname='rx_buf', quals=[] (at pp.c:7624)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='rx_len', quals=[], storage=[] (at pp.c:7624)
          TypeDecl: declname='rx_len', quals=[] (at pp.c:7624)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:7625)
          TypeDecl: declname='error', quals=[] (at pp.c:7625)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__RXFIFO__readDone', quals=[] (at pp.c:7624)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__RXFIFO__writeDone', quals=[], storage=['inline', 'static'] (at pp.c:7627)
    FuncDecl: quals=None (at pp.c:7627)
      ParamList:  (at pp.c:7627)
        Decl: name='tx_buf', quals=[], storage=[] (at pp.c:7627)
          PtrDecl: quals=[] (at pp.c:7627)
            TypeDecl: declname='tx_buf', quals=[] (at pp.c:7627)
              IdentifierType: names=['uint8_t'] (at None)
        Decl: name='tx_len', quals=[], storage=[] (at pp.c:7627)
          TypeDecl: declname='tx_len', quals=[] (at pp.c:7627)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:7627)
          TypeDecl: declname='error', quals=[] (at pp.c:7627)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__RXFIFO__writeDone', quals=[] (at pp.c:7627)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__receiveDone_task__runTask', quals=[], storage=['inline', 'static'] (at pp.c:7635)
    FuncDecl: quals=None (at pp.c:7635)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__receiveDone_task__runTask', quals=[] (at pp.c:7635)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__CC2420Config__syncDone', quals=[], storage=['inline', 'static'] (at pp.c:7637)
    FuncDecl: quals=None (at pp.c:7637)
      ParamList:  (at pp.c:7637)
        Decl: name='error', quals=[], storage=[] (at pp.c:7637)
          TypeDecl: declname='error', quals=[] (at pp.c:7637)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__CC2420Config__syncDone', quals=[] (at pp.c:7637)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__beginReceive', quals=[], storage=['static'] (at pp.c:7644)
    FuncDecl: quals=None (at pp.c:7644)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__beginReceive', quals=[] (at pp.c:7644)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__flush', quals=[], storage=['static'] (at pp.c:7646)
    FuncDecl: quals=None (at pp.c:7646)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__flush', quals=[] (at pp.c:7646)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__receive', quals=[], storage=['static'] (at pp.c:7648)
    FuncDecl: quals=None (at pp.c:7648)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__receive', quals=[] (at pp.c:7648)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__waitForNextPacket', quals=[], storage=['static'] (at pp.c:7658)
    FuncDecl: quals=None (at pp.c:7658)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__waitForNextPacket', quals=[] (at pp.c:7658)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__reset_state', quals=[], storage=['static'] (at pp.c:7660)
    FuncDecl: quals=None (at pp.c:7660)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ReceiveP__reset_state', quals=[] (at pp.c:7660)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ReceiveP__passesAddressCheck', quals=[], storage=['inline', 'static'] (at pp.c:7671)
    FuncDecl: quals=None (at pp.c:7671)
      ParamList:  (at pp.c:7671)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7671)
          PtrDecl: quals=[] (at pp.c:7671)
            TypeDecl: declname='msg', quals=[] (at pp.c:7671)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ReceiveP__passesAddressCheck', quals=[] (at pp.c:7671)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420PacketP__getAddressLength', quals=[], storage=['inline', 'static'] (at pp.c:7673)
    FuncDecl: quals=None (at pp.c:7673)
      ParamList:  (at pp.c:7673)
        Decl: name='type', quals=[], storage=[] (at pp.c:7673)
          TypeDecl: declname='type', quals=[] (at pp.c:7673)
            IdentifierType: names=['int'] (at None)
      TypeDecl: declname='CC2420PacketP__getAddressLength', quals=[] (at pp.c:7673)
        IdentifierType: names=['int'] (at None)
  Decl: name='CC2420PacketP__getNetwork', quals=[], storage=['static'] (at pp.c:7682)
    FuncDecl: quals=None (at pp.c:7682)
      ParamList:  (at pp.c:7682)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7682)
          PtrDecl: quals=[] (at pp.c:7682)
            TypeDecl: declname='msg', quals=[] (at pp.c:7682)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7682)
        TypeDecl: declname='CC2420PacketP__getNetwork', quals=[] (at pp.c:7682)
          IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420PacketP__CC2420Packet__getNetwork', quals=[], storage=['inline', 'static'] (at pp.c:7684)
    FuncDecl: quals=None (at pp.c:7684)
      ParamList:  (at pp.c:7684)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:7684)
          PtrDecl: quals=[] (at pp.c:7684)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:7684)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420PacketP__CC2420Packet__getNetwork', quals=[] (at pp.c:7684)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420PacketP__CC2420Packet__setNetwork', quals=[], storage=['inline', 'static'] (at pp.c:7693)
    FuncDecl: quals=None (at pp.c:7693)
      ParamList:  (at pp.c:7693)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:7693)
          PtrDecl: quals=[] (at pp.c:7693)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:7693)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='networkId', quals=[], storage=[] (at pp.c:7693)
          TypeDecl: declname='networkId', quals=[] (at pp.c:7693)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420PacketP__CC2420Packet__setNetwork', quals=[] (at pp.c:7693)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420PacketP__CC2420PacketBody__getHeader', quals=[], storage=['inline', 'static'] (at pp.c:7702)
    FuncDecl: quals=None (at pp.c:7702)
      ParamList:  (at pp.c:7702)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7702)
          PtrDecl: quals=[] (at pp.c:7702)
            TypeDecl: declname='msg', quals=[] (at pp.c:7702)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7702)
        TypeDecl: declname='CC2420PacketP__CC2420PacketBody__getHeader', quals=[] (at pp.c:7702)
          IdentifierType: names=['cc2420_header_t'] (at None)
  Decl: name='CC2420PacketP__CC2420PacketBody__getMetadata', quals=[], storage=['inline', 'static'] (at pp.c:7704)
    FuncDecl: quals=None (at pp.c:7704)
      ParamList:  (at pp.c:7704)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7704)
          PtrDecl: quals=[] (at pp.c:7704)
            TypeDecl: declname='msg', quals=[] (at pp.c:7704)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:7704)
        TypeDecl: declname='CC2420PacketP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:7704)
          IdentifierType: names=['cc2420_metadata_t'] (at None)
  Decl: name='CC2420PacketP__PacketTimeStamp32khz__clear', quals=[], storage=['static'] (at pp.c:7706)
    FuncDecl: quals=None (at pp.c:7706)
      ParamList:  (at pp.c:7706)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7706)
          PtrDecl: quals=[] (at pp.c:7706)
            TypeDecl: declname='msg', quals=[] (at pp.c:7706)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420PacketP__PacketTimeStamp32khz__clear', quals=[] (at pp.c:7706)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420PacketP__PacketTimeStamp32khz__set', quals=[], storage=['inline', 'static'] (at pp.c:7712)
    FuncDecl: quals=None (at pp.c:7712)
      ParamList:  (at pp.c:7712)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7712)
          PtrDecl: quals=[] (at pp.c:7712)
            TypeDecl: declname='msg', quals=[] (at pp.c:7712)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='value', quals=[], storage=[] (at pp.c:7712)
          TypeDecl: declname='value', quals=[] (at pp.c:7712)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='CC2420PacketP__PacketTimeStamp32khz__set', quals=[] (at pp.c:7712)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420PacketP__PacketTimeSyncOffset__isSet', quals=[], storage=['inline', 'static'] (at pp.c:7714)
    FuncDecl: quals=None (at pp.c:7714)
      ParamList:  (at pp.c:7714)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7714)
          PtrDecl: quals=[] (at pp.c:7714)
            TypeDecl: declname='msg', quals=[] (at pp.c:7714)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420PacketP__PacketTimeSyncOffset__isSet', quals=[] (at pp.c:7714)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420PacketP__PacketTimeSyncOffset__get', quals=[], storage=['inline', 'static'] (at pp.c:7723)
    FuncDecl: quals=None (at pp.c:7723)
      ParamList:  (at pp.c:7723)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7723)
          PtrDecl: quals=[] (at pp.c:7723)
            TypeDecl: declname='msg', quals=[] (at pp.c:7723)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420PacketP__PacketTimeSyncOffset__get', quals=[] (at pp.c:7723)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CounterToLocalTimeC__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:7725)
    FuncDecl: quals=None (at pp.c:7725)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CounterToLocalTimeC__0__Counter__overflow', quals=[] (at pp.c:7725)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430Compare__setEvent', quals=[], storage=['static'] (at pp.c:7727)
    FuncDecl: quals=None (at pp.c:7727)
      ParamList:  (at pp.c:7727)
        Decl: name='time', quals=[], storage=[] (at pp.c:7727)
          TypeDecl: declname='time', quals=[] (at pp.c:7727)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430Compare__setEvent', quals=[] (at pp.c:7727)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430Compare__setEventFromNow', quals=[], storage=['static'] (at pp.c:7729)
    FuncDecl: quals=None (at pp.c:7729)
      ParamList:  (at pp.c:7729)
        Decl: name='delta', quals=[], storage=[] (at pp.c:7729)
          TypeDecl: declname='delta', quals=[] (at pp.c:7729)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430Compare__setEventFromNow', quals=[] (at pp.c:7729)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430Timer__get', quals=[], storage=['static'] (at pp.c:7731)
    FuncDecl: quals=None (at pp.c:7731)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430Timer__get', quals=[] (at pp.c:7731)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430AlarmC__1__Alarm__fired', quals=[], storage=['static'] (at pp.c:7733)
    FuncDecl: quals=None (at pp.c:7733)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Alarm__fired', quals=[] (at pp.c:7733)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430TimerControl__enableEvents', quals=[], storage=['static'] (at pp.c:7735)
    FuncDecl: quals=None (at pp.c:7735)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__enableEvents', quals=[] (at pp.c:7735)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430TimerControl__setControlAsCompare', quals=[], storage=['static'] (at pp.c:7737)
    FuncDecl: quals=None (at pp.c:7737)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__setControlAsCompare', quals=[] (at pp.c:7737)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430TimerControl__disableEvents', quals=[], storage=['static'] (at pp.c:7748)
    FuncDecl: quals=None (at pp.c:7748)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__disableEvents', quals=[] (at pp.c:7748)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430TimerControl__clearPendingInterrupt', quals=[], storage=['static'] (at pp.c:7750)
    FuncDecl: quals=None (at pp.c:7750)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__clearPendingInterrupt', quals=[] (at pp.c:7750)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:7752)
    FuncDecl: quals=None (at pp.c:7752)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Init__init', quals=[] (at pp.c:7752)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430AlarmC__1__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:7754)
    FuncDecl: quals=None (at pp.c:7754)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Alarm__stop', quals=[] (at pp.c:7754)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430Compare__fired', quals=[], storage=['inline', 'static'] (at pp.c:7759)
    FuncDecl: quals=None (at pp.c:7759)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430Compare__fired', quals=[] (at pp.c:7759)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Alarm__startAt', quals=[], storage=['inline', 'static'] (at pp.c:7770)
    FuncDecl: quals=None (at pp.c:7770)
      ParamList:  (at pp.c:7770)
        Decl: name='t0', quals=[], storage=[] (at pp.c:7770)
          TypeDecl: declname='t0', quals=[] (at pp.c:7770)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:7770)
          TypeDecl: declname='dt', quals=[] (at pp.c:7770)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Alarm__startAt', quals=[] (at pp.c:7770)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__1__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:7772)
    FuncDecl: quals=None (at pp.c:7772)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__1__Msp430Timer__overflow', quals=[] (at pp.c:7772)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformCounterC__1__CounterFrom__get', quals=[], storage=['static'] (at pp.c:7774)
    FuncDecl: quals=None (at pp.c:7774)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__1__CounterFrom__get', quals=[] (at pp.c:7774)
        IdentifierType: names=['TransformCounterC__1__CounterFrom__size_type'] (at None)
  Decl: name='TransformCounterC__1__CounterFrom__isOverflowPending', quals=[], storage=['static'] (at pp.c:7781)
    FuncDecl: quals=None (at pp.c:7781)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__1__CounterFrom__isOverflowPending', quals=[] (at pp.c:7781)
        IdentifierType: names=['bool'] (at None)
  Decl: name='TransformCounterC__1__Counter__overflow', quals=[], storage=['static'] (at pp.c:7792)
    FuncDecl: quals=None (at pp.c:7792)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__1__Counter__overflow', quals=[] (at pp.c:7792)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformCounterC__1__m_upper', quals=[], storage=[] (at pp.c:7794)
    TypeDecl: declname='TransformCounterC__1__m_upper', quals=[] (at pp.c:7794)
      IdentifierType: names=['TransformCounterC__1__upper_count_type'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:7796)
    Enum: name='TransformCounterC__1____nesc_unnamed4350' (at pp.c:7796)
      EnumeratorList:  (at pp.c:7798)
        Enumerator: name='TransformCounterC__1__LOW_SHIFT_RIGHT' (at pp.c:7798)
          Constant: type='int', value='5' (at pp.c:7798)
        Enumerator: name='TransformCounterC__1__HIGH_SHIFT_LEFT' (at pp.c:7799)
          BinaryOp: op='-' (at pp.c:7799)
            BinaryOp: op='*' (at pp.c:7799)
              Constant: type='int', value='8' (at pp.c:7799)
              UnaryOp: op='sizeof' (at pp.c:7799)
                Typename: quals=[] (at None)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['TransformCounterC__1__from_size_type'] (at None)
            ID: name='TransformCounterC__1__LOW_SHIFT_RIGHT' (at pp.c:7799)
        Enumerator: name='TransformCounterC__1__NUM_UPPER_BITS' (at pp.c:7800)
          BinaryOp: op='+' (at pp.c:7800)
            BinaryOp: op='-' (at pp.c:7800)
              BinaryOp: op='*' (at pp.c:7800)
                Constant: type='int', value='8' (at pp.c:7800)
                UnaryOp: op='sizeof' (at pp.c:7800)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformCounterC__1__to_size_type'] (at None)
              BinaryOp: op='*' (at pp.c:7800)
                Constant: type='int', value='8' (at pp.c:7800)
                UnaryOp: op='sizeof' (at pp.c:7800)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformCounterC__1__from_size_type'] (at None)
            Constant: type='int', value='5' (at pp.c:7800)
        Enumerator: name='TransformCounterC__1__OVERFLOW_MASK' (at pp.c:7804)
          TernaryOp:  (at pp.c:7804)
            ID: name='TransformCounterC__1__NUM_UPPER_BITS' (at pp.c:7804)
            BinaryOp: op='-' (at None)
              BinaryOp: op='<<' (at None)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformCounterC__1__upper_count_type'] (at None)
                  Constant: type='int', value='2' (at pp.c:7804)
                BinaryOp: op='-' (at pp.c:7804)
                  ID: name='TransformCounterC__1__NUM_UPPER_BITS' (at pp.c:7804)
                  Constant: type='int', value='1' (at pp.c:7804)
              Constant: type='int', value='1' (at pp.c:7804)
            Constant: type='int', value='0' (at pp.c:7804)
  Decl: name='TransformCounterC__1__Counter__get', quals=[], storage=['static'] (at pp.c:7807)
    FuncDecl: quals=None (at pp.c:7807)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__1__Counter__get', quals=[] (at pp.c:7807)
        IdentifierType: names=['TransformCounterC__1__to_size_type'] (at None)
  Decl: name='TransformCounterC__1__CounterFrom__overflow', quals=[], storage=['inline', 'static'] (at pp.c:7809)
    FuncDecl: quals=None (at pp.c:7809)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformCounterC__1__CounterFrom__overflow', quals=[] (at pp.c:7809)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__Alarm__fired', quals=[], storage=['static'] (at pp.c:7811)
    FuncDecl: quals=None (at pp.c:7811)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__fired', quals=[] (at pp.c:7811)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__AlarmFrom__startAt', quals=[], storage=['static'] (at pp.c:7813)
    FuncDecl: quals=None (at pp.c:7813)
      ParamList:  (at pp.c:7813)
        Decl: name='t0', quals=[], storage=[] (at pp.c:7813)
          TypeDecl: declname='t0', quals=[] (at pp.c:7813)
            IdentifierType: names=['TransformAlarmC__1__AlarmFrom__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:7813)
          TypeDecl: declname='dt', quals=[] (at pp.c:7813)
            IdentifierType: names=['TransformAlarmC__1__AlarmFrom__size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__1__AlarmFrom__startAt', quals=[] (at pp.c:7813)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__AlarmFrom__stop', quals=[], storage=['static'] (at pp.c:7815)
    FuncDecl: quals=None (at pp.c:7815)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__AlarmFrom__stop', quals=[] (at pp.c:7815)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__Counter__get', quals=[], storage=['static'] (at pp.c:7817)
    FuncDecl: quals=None (at pp.c:7817)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Counter__get', quals=[] (at pp.c:7817)
        IdentifierType: names=['TransformAlarmC__1__Counter__size_type'] (at None)
  Decl: name='TransformAlarmC__1__m_t0', quals=[], storage=[] (at pp.c:7819)
    TypeDecl: declname='TransformAlarmC__1__m_t0', quals=[] (at pp.c:7819)
      IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
  Decl: name='TransformAlarmC__1__m_dt', quals=[], storage=[] (at pp.c:7820)
    TypeDecl: declname='TransformAlarmC__1__m_dt', quals=[] (at pp.c:7820)
      IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:7822)
    Enum: name='TransformAlarmC__1____nesc_unnamed4351' (at pp.c:7822)
      EnumeratorList:  (at pp.c:7824)
        Enumerator: name='TransformAlarmC__1__MAX_DELAY_LOG2' (at pp.c:7824)
          BinaryOp: op='-' (at pp.c:7824)
            BinaryOp: op='-' (at pp.c:7824)
              BinaryOp: op='*' (at pp.c:7824)
                Constant: type='int', value='8' (at pp.c:7824)
                UnaryOp: op='sizeof' (at pp.c:7824)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformAlarmC__1__from_size_type'] (at None)
              Constant: type='int', value='1' (at pp.c:7824)
            Constant: type='int', value='5' (at pp.c:7824)
        Enumerator: name='TransformAlarmC__1__MAX_DELAY' (at pp.c:7825)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
              Constant: type='int', value='1' (at pp.c:7825)
            ID: name='TransformAlarmC__1__MAX_DELAY_LOG2' (at pp.c:7825)
  Decl: name='TransformAlarmC__1__Alarm__getNow', quals=[], storage=['inline', 'static'] (at pp.c:7828)
    FuncDecl: quals=None (at pp.c:7828)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__getNow', quals=[] (at pp.c:7828)
        IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
  Decl: name='TransformAlarmC__1__Alarm__getAlarm', quals=[], storage=['inline', 'static'] (at pp.c:7833)
    FuncDecl: quals=None (at pp.c:7833)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__getAlarm', quals=[] (at pp.c:7833)
        IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
  Decl: name='TransformAlarmC__1__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:7844)
    FuncDecl: quals=None (at pp.c:7844)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__stop', quals=[] (at pp.c:7844)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__set_alarm', quals=[], storage=['static'] (at pp.c:7849)
    FuncDecl: quals=None (at pp.c:7849)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__set_alarm', quals=[] (at pp.c:7849)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__Alarm__startAt', quals=[], storage=['static'] (at pp.c:7851)
    FuncDecl: quals=None (at pp.c:7851)
      ParamList:  (at pp.c:7851)
        Decl: name='t0', quals=[], storage=[] (at pp.c:7851)
          TypeDecl: declname='t0', quals=[] (at pp.c:7851)
            IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:7851)
          TypeDecl: declname='dt', quals=[] (at pp.c:7851)
            IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Alarm__startAt', quals=[] (at pp.c:7851)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__AlarmFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:7853)
    FuncDecl: quals=None (at pp.c:7853)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__AlarmFrom__fired', quals=[] (at pp.c:7853)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__1__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:7855)
    FuncDecl: quals=None (at pp.c:7855)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__1__Counter__overflow', quals=[] (at pp.c:7855)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__fired__postTask', quals=[], storage=['static'] (at pp.c:7857)
    FuncDecl: quals=None (at pp.c:7857)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__fired__postTask', quals=[] (at pp.c:7857)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__getNow', quals=[], storage=['static'] (at pp.c:7859)
    FuncDecl: quals=None (at pp.c:7859)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__getNow', quals=[] (at pp.c:7859)
        IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__startAt', quals=[], storage=['static'] (at pp.c:7861)
    FuncDecl: quals=None (at pp.c:7861)
      ParamList:  (at pp.c:7861)
        Decl: name='t0', quals=[], storage=[] (at pp.c:7861)
          TypeDecl: declname='t0', quals=[] (at pp.c:7861)
            IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:7861)
          TypeDecl: declname='dt', quals=[] (at pp.c:7861)
            IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__startAt', quals=[] (at pp.c:7861)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__getAlarm', quals=[], storage=['static'] (at pp.c:7863)
    FuncDecl: quals=None (at pp.c:7863)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__getAlarm', quals=[] (at pp.c:7863)
        IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__stop', quals=[], storage=['static'] (at pp.c:7865)
    FuncDecl: quals=None (at pp.c:7865)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__stop', quals=[] (at pp.c:7865)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__fired', quals=[], storage=['static'] (at pp.c:7867)
    FuncDecl: quals=None (at pp.c:7867)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__fired', quals=[] (at pp.c:7867)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:7869)
    Enum: name='AlarmToTimerC__0____nesc_unnamed4352' (at pp.c:7869)
      EnumeratorList:  (at pp.c:7871)
        Enumerator: name='AlarmToTimerC__0__fired' (at pp.c:7871)
          Constant: type='int', value='9U' (at pp.c:7871)
  Typedef: name='AlarmToTimerC__0____nesc_sillytask_fired', quals=[], storage=['typedef'] (at pp.c:7874)
    ArrayDecl:  (at pp.c:7874)
      TypeDecl: declname='AlarmToTimerC__0____nesc_sillytask_fired', quals=[] (at pp.c:7874)
        IdentifierType: names=['int'] (at None)
      ID: name='AlarmToTimerC__0__fired' (at pp.c:7874)
  Decl: name='AlarmToTimerC__0__m_dt', quals=[], storage=[] (at pp.c:7876)
    TypeDecl: declname='AlarmToTimerC__0__m_dt', quals=[] (at pp.c:7876)
      IdentifierType: names=['uint32_t'] (at None)
  Decl: name='AlarmToTimerC__0__m_oneshot', quals=[], storage=[] (at pp.c:7877)
    TypeDecl: declname='AlarmToTimerC__0__m_oneshot', quals=[] (at pp.c:7877)
      IdentifierType: names=['bool'] (at None)
  Decl: name='AlarmToTimerC__0__start', quals=[], storage=['inline', 'static'] (at pp.c:7879)
    FuncDecl: quals=None (at pp.c:7879)
      ParamList:  (at pp.c:7879)
        Decl: name='t0', quals=[], storage=[] (at pp.c:7879)
          TypeDecl: declname='t0', quals=[] (at pp.c:7879)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:7879)
          TypeDecl: declname='dt', quals=[] (at pp.c:7879)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='oneshot', quals=[], storage=[] (at pp.c:7879)
          TypeDecl: declname='oneshot', quals=[] (at pp.c:7879)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__start', quals=[] (at pp.c:7879)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__stop', quals=[], storage=['inline', 'static'] (at pp.c:7881)
    FuncDecl: quals=None (at pp.c:7881)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__stop', quals=[] (at pp.c:7881)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__fired__runTask', quals=[], storage=['inline', 'static'] (at pp.c:7884)
    FuncDecl: quals=None (at pp.c:7884)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__fired__runTask', quals=[] (at pp.c:7884)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Alarm__fired', quals=[], storage=['inline', 'static'] (at pp.c:7891)
    FuncDecl: quals=None (at pp.c:7891)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Alarm__fired', quals=[] (at pp.c:7891)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__startOneShotAt', quals=[], storage=['inline', 'static'] (at pp.c:7893)
    FuncDecl: quals=None (at pp.c:7893)
      ParamList:  (at pp.c:7893)
        Decl: name='t0', quals=[], storage=[] (at pp.c:7893)
          TypeDecl: declname='t0', quals=[] (at pp.c:7893)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:7893)
          TypeDecl: declname='dt', quals=[] (at pp.c:7893)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__startOneShotAt', quals=[] (at pp.c:7893)
        IdentifierType: names=['void'] (at None)
  Decl: name='AlarmToTimerC__0__Timer__getNow', quals=[], storage=['inline', 'static'] (at pp.c:7896)
    FuncDecl: quals=None (at pp.c:7896)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AlarmToTimerC__0__Timer__getNow', quals=[] (at pp.c:7896)
        IdentifierType: names=['uint32_t'] (at None)
  Decl: name='VirtualizeTimerC__0__updateFromTimer__postTask', quals=[], storage=['static'] (at pp.c:7898)
    FuncDecl: quals=None (at pp.c:7898)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__updateFromTimer__postTask', quals=[] (at pp.c:7898)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='VirtualizeTimerC__0__TimerFrom__getNow', quals=[], storage=['static'] (at pp.c:7900)
    FuncDecl: quals=None (at pp.c:7900)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__getNow', quals=[] (at pp.c:7900)
        IdentifierType: names=['uint32_t'] (at None)
  Decl: name='VirtualizeTimerC__0__TimerFrom__startOneShotAt', quals=[], storage=['static'] (at pp.c:7902)
    FuncDecl: quals=None (at pp.c:7902)
      ParamList:  (at pp.c:7902)
        Decl: name='t0', quals=[], storage=[] (at pp.c:7902)
          TypeDecl: declname='t0', quals=[] (at pp.c:7902)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:7902)
          TypeDecl: declname='dt', quals=[] (at pp.c:7902)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__startOneShotAt', quals=[] (at pp.c:7902)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__TimerFrom__stop', quals=[], storage=['static'] (at pp.c:7904)
    FuncDecl: quals=None (at pp.c:7904)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__stop', quals=[] (at pp.c:7904)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__fired', quals=[], storage=['static'] (at pp.c:7909)
    FuncDecl: quals=None (at pp.c:7909)
      ParamList:  (at pp.c:7911)
        Decl: name='arg_0x1023622f8', quals=[], storage=[] (at pp.c:7911)
          TypeDecl: declname='arg_0x1023622f8', quals=[] (at pp.c:7911)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__fired', quals=[] (at pp.c:7909)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:7913)
    Enum: name='VirtualizeTimerC__0____nesc_unnamed4353' (at pp.c:7913)
      EnumeratorList:  (at pp.c:7915)
        Enumerator: name='VirtualizeTimerC__0__updateFromTimer' (at pp.c:7915)
          Constant: type='int', value='10U' (at pp.c:7915)
  Typedef: name='VirtualizeTimerC__0____nesc_sillytask_updateFromTimer', quals=[], storage=['typedef'] (at pp.c:7918)
    ArrayDecl:  (at pp.c:7918)
      TypeDecl: declname='VirtualizeTimerC__0____nesc_sillytask_updateFromTimer', quals=[] (at pp.c:7918)
        IdentifierType: names=['int'] (at None)
      ID: name='VirtualizeTimerC__0__updateFromTimer' (at pp.c:7918)
  Decl: name=None, quals=[], storage=[] (at pp.c:7920)
    Enum: name='VirtualizeTimerC__0____nesc_unnamed4354' (at pp.c:7920)
      EnumeratorList:  (at pp.c:7922)
        Enumerator: name='VirtualizeTimerC__0__NUM_TIMERS' (at pp.c:7922)
          Constant: type='int', value='5U' (at pp.c:7922)
        Enumerator: name='VirtualizeTimerC__0__END_OF_LIST' (at pp.c:7923)
          Constant: type='int', value='255' (at pp.c:7923)
  Typedef: name='VirtualizeTimerC__0__Timer_t', quals=[], storage=['typedef'] (at pp.c:7941)
    TypeDecl: declname='VirtualizeTimerC__0__Timer_t', quals=[] (at pp.c:7941)
      Struct: name='VirtualizeTimerC__0____nesc_unnamed4355', packed=False (at pp.c:7934)
        Decl: name='t0', quals=[], storage=[] (at 0)
          TypeDecl: declname='t0', quals=[] (at pp.c:7936)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at 0)
          TypeDecl: declname='dt', quals=[] (at pp.c:7937)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='isoneshot', quals=[], storage=[] (at 0)
          TypeDecl: declname='isoneshot', quals=[] (at pp.c:7938)
            IdentifierType: names=['bool'] (at None)
          Constant: type='int', value='1' (at pp.c:7938)
        Decl: name='isrunning', quals=[], storage=[] (at 0)
          TypeDecl: declname='isrunning', quals=[] (at pp.c:7939)
            IdentifierType: names=['bool'] (at None)
          Constant: type='int', value='1' (at pp.c:7939)
        Decl: name='_reserved', quals=[], storage=[] (at 0)
          TypeDecl: declname='_reserved', quals=[] (at pp.c:7940)
            IdentifierType: names=['bool'] (at None)
          Constant: type='int', value='6' (at pp.c:7940)
  Decl: name='VirtualizeTimerC__0__m_timers', quals=[], storage=[] (at pp.c:7943)
    ArrayDecl:  (at pp.c:7943)
      TypeDecl: declname='VirtualizeTimerC__0__m_timers', quals=[] (at pp.c:7943)
        IdentifierType: names=['VirtualizeTimerC__0__Timer_t'] (at None)
      ID: name='VirtualizeTimerC__0__NUM_TIMERS' (at pp.c:7943)
  Decl: name='VirtualizeTimerC__0__fireTimers', quals=[], storage=['static'] (at pp.c:7948)
    FuncDecl: quals=None (at pp.c:7948)
      ParamList:  (at pp.c:7948)
        Decl: name='now', quals=[], storage=[] (at pp.c:7948)
          TypeDecl: declname='now', quals=[] (at pp.c:7948)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__fireTimers', quals=[] (at pp.c:7948)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[], storage=['inline', 'static'] (at pp.c:7950)
    FuncDecl: quals=None (at pp.c:7950)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[] (at pp.c:7950)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__TimerFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:7952)
    FuncDecl: quals=None (at pp.c:7952)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__fired', quals=[] (at pp.c:7952)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__startTimer', quals=[], storage=['static'] (at pp.c:7957)
    FuncDecl: quals=None (at pp.c:7957)
      ParamList:  (at pp.c:7957)
        Decl: name='num', quals=[], storage=[] (at pp.c:7957)
          TypeDecl: declname='num', quals=[] (at pp.c:7957)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='t0', quals=[], storage=[] (at pp.c:7957)
          TypeDecl: declname='t0', quals=[] (at pp.c:7957)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:7957)
          TypeDecl: declname='dt', quals=[] (at pp.c:7957)
            IdentifierType: names=['uint32_t'] (at None)
        Decl: name='isoneshot', quals=[], storage=[] (at pp.c:7957)
          TypeDecl: declname='isoneshot', quals=[] (at pp.c:7957)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__startTimer', quals=[] (at pp.c:7957)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__startPeriodic', quals=[], storage=['static'] (at pp.c:7967)
    FuncDecl: quals=None (at pp.c:7967)
      ParamList:  (at pp.c:7967)
        Decl: name='num', quals=[], storage=[] (at pp.c:7967)
          TypeDecl: declname='num', quals=[] (at pp.c:7967)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:7967)
          TypeDecl: declname='dt', quals=[] (at pp.c:7967)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__startPeriodic', quals=[] (at pp.c:7967)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__startOneShot', quals=[], storage=['inline', 'static'] (at pp.c:7972)
    FuncDecl: quals=None (at pp.c:7972)
      ParamList:  (at pp.c:7972)
        Decl: name='num', quals=[], storage=[] (at pp.c:7972)
          TypeDecl: declname='num', quals=[] (at pp.c:7972)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:7972)
          TypeDecl: declname='dt', quals=[] (at pp.c:7972)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__startOneShot', quals=[] (at pp.c:7972)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__stop', quals=[], storage=['inline', 'static'] (at pp.c:7977)
    FuncDecl: quals=None (at pp.c:7977)
      ParamList:  (at pp.c:7977)
        Decl: name='num', quals=[], storage=[] (at pp.c:7977)
          TypeDecl: declname='num', quals=[] (at pp.c:7977)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__stop', quals=[] (at pp.c:7977)
        IdentifierType: names=['void'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__isRunning', quals=[], storage=['inline', 'static'] (at pp.c:7982)
    FuncDecl: quals=None (at pp.c:7982)
      ParamList:  (at pp.c:7982)
        Decl: name='num', quals=[], storage=[] (at pp.c:7982)
          TypeDecl: declname='num', quals=[] (at pp.c:7982)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__isRunning', quals=[] (at pp.c:7982)
        IdentifierType: names=['bool'] (at None)
  Decl: name='VirtualizeTimerC__0__Timer__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:7984)
    FuncDecl: quals=None (at pp.c:7984)
      ParamList:  (at pp.c:7984)
        Decl: name='num', quals=[], storage=[] (at pp.c:7984)
          TypeDecl: declname='num', quals=[] (at pp.c:7984)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='VirtualizeTimerC__0__Timer__default__fired', quals=[] (at pp.c:7984)
        IdentifierType: names=['void'] (at None)
  Decl: name='CounterToLocalTimeC__1__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:7986)
    FuncDecl: quals=None (at pp.c:7986)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CounterToLocalTimeC__1__Counter__overflow', quals=[] (at pp.c:7986)
        IdentifierType: names=['void'] (at None)
  Decl: name='RandomMlcgC__seed', quals=[], storage=[] (at pp.c:7988)
    TypeDecl: declname='RandomMlcgC__seed', quals=[] (at pp.c:7988)
      IdentifierType: names=['uint32_t'] (at None)
  Decl: name='RandomMlcgC__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:7991)
    FuncDecl: quals=None (at pp.c:7991)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RandomMlcgC__Init__init', quals=[] (at pp.c:7991)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='RandomMlcgC__Random__rand32', quals=[], storage=['static'] (at pp.c:7993)
    FuncDecl: quals=None (at pp.c:7993)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RandomMlcgC__Random__rand32', quals=[] (at pp.c:7993)
        IdentifierType: names=['uint32_t'] (at None)
  Decl: name='RandomMlcgC__Random__rand16', quals=[], storage=['inline', 'static'] (at pp.c:7995)
    FuncDecl: quals=None (at pp.c:7995)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RandomMlcgC__Random__rand16', quals=[] (at pp.c:7995)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='UniqueSendP__SubSend__send', quals=[], storage=['static'] (at pp.c:7997)
    FuncDecl: quals=None (at pp.c:7997)
      ParamList:  (at pp.c:7999)
        Decl: name='msg', quals=[], storage=[] (at pp.c:7999)
          PtrDecl: quals=[] (at pp.c:7999)
            TypeDecl: declname='msg', quals=[] (at pp.c:7999)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8007)
          TypeDecl: declname='len', quals=[] (at pp.c:8007)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='UniqueSendP__SubSend__send', quals=[] (at pp.c:7997)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='UniqueSendP__SubSend__maxPayloadLength', quals=[], storage=['static'] (at pp.c:8009)
    FuncDecl: quals=None (at pp.c:8009)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='UniqueSendP__SubSend__maxPayloadLength', quals=[] (at pp.c:8009)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='UniqueSendP__Send__sendDone', quals=[], storage=['static'] (at pp.c:8011)
    FuncDecl: quals=None (at pp.c:8011)
      ParamList:  (at pp.c:8013)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8013)
          PtrDecl: quals=[] (at pp.c:8013)
            TypeDecl: declname='msg', quals=[] (at pp.c:8013)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:8017)
          TypeDecl: declname='error', quals=[] (at pp.c:8017)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='UniqueSendP__Send__sendDone', quals=[] (at pp.c:8011)
        IdentifierType: names=['void'] (at None)
  Decl: name='UniqueSendP__Random__rand16', quals=[], storage=['static'] (at pp.c:8019)
    FuncDecl: quals=None (at pp.c:8019)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='UniqueSendP__Random__rand16', quals=[] (at pp.c:8019)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='UniqueSendP__CC2420PacketBody__getHeader', quals=[], storage=['static'] (at pp.c:8021)
    FuncDecl: quals=None (at pp.c:8021)
      ParamList:  (at pp.c:8021)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8021)
          PtrDecl: quals=[] (at pp.c:8021)
            TypeDecl: declname='msg', quals=[] (at pp.c:8021)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8021)
        TypeDecl: declname='UniqueSendP__CC2420PacketBody__getHeader', quals=[] (at pp.c:8021)
          IdentifierType: names=['cc2420_header_t'] (at None)
  Decl: name='UniqueSendP__State__toIdle', quals=[], storage=['static'] (at pp.c:8023)
    FuncDecl: quals=None (at pp.c:8023)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='UniqueSendP__State__toIdle', quals=[] (at pp.c:8023)
        IdentifierType: names=['void'] (at None)
  Decl: name='UniqueSendP__State__requestState', quals=[], storage=['static'] (at pp.c:8025)
    FuncDecl: quals=None (at pp.c:8025)
      ParamList:  (at pp.c:8025)
        Decl: name='reqState', quals=[], storage=[] (at pp.c:8025)
          TypeDecl: declname='reqState', quals=[] (at pp.c:8025)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='UniqueSendP__State__requestState', quals=[] (at pp.c:8025)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='UniqueSendP__localSendId', quals=[], storage=[] (at pp.c:8027)
    TypeDecl: declname='UniqueSendP__localSendId', quals=[] (at pp.c:8027)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:8029)
    Enum: name='UniqueSendP____nesc_unnamed4356' (at pp.c:8029)
      EnumeratorList:  (at pp.c:8030)
        Enumerator: name='UniqueSendP__S_IDLE' (at pp.c:8030)
        Enumerator: name='UniqueSendP__S_SENDING' (at pp.c:8031)
  Decl: name='UniqueSendP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:8035)
    FuncDecl: quals=None (at pp.c:8035)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='UniqueSendP__Init__init', quals=[] (at pp.c:8035)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='UniqueSendP__Send__send', quals=[], storage=['inline', 'static'] (at pp.c:8037)
    FuncDecl: quals=None (at pp.c:8037)
      ParamList:  (at pp.c:8037)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8037)
          PtrDecl: quals=[] (at pp.c:8037)
            TypeDecl: declname='msg', quals=[] (at pp.c:8037)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8037)
          TypeDecl: declname='len', quals=[] (at pp.c:8037)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='UniqueSendP__Send__send', quals=[] (at pp.c:8037)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='UniqueSendP__Send__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:8039)
    FuncDecl: quals=None (at pp.c:8039)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='UniqueSendP__Send__maxPayloadLength', quals=[] (at pp.c:8039)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='UniqueSendP__SubSend__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:8048)
    FuncDecl: quals=None (at pp.c:8048)
      ParamList:  (at pp.c:8048)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8048)
          PtrDecl: quals=[] (at pp.c:8048)
            TypeDecl: declname='msg', quals=[] (at pp.c:8048)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:8048)
          TypeDecl: declname='error', quals=[] (at pp.c:8048)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='UniqueSendP__SubSend__sendDone', quals=[] (at pp.c:8048)
        IdentifierType: names=['void'] (at None)
  Decl: name='UniqueReceiveP__Receive__receive', quals=[], storage=['static'] (at pp.c:8056)
    FuncDecl: quals=None (at pp.c:8056)
      ParamList:  (at pp.c:8058)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8058)
          PtrDecl: quals=[] (at pp.c:8058)
            TypeDecl: declname='msg', quals=[] (at pp.c:8058)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:8059)
          PtrDecl: quals=[] (at pp.c:8059)
            TypeDecl: declname='payload', quals=[] (at pp.c:8059)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8065)
          TypeDecl: declname='len', quals=[] (at pp.c:8065)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8052)
        TypeDecl: declname='UniqueReceiveP__Receive__receive', quals=[] (at pp.c:8056)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='UniqueReceiveP__CC2420PacketBody__getHeader', quals=[], storage=['static'] (at pp.c:8067)
    FuncDecl: quals=None (at pp.c:8067)
      ParamList:  (at pp.c:8067)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8067)
          PtrDecl: quals=[] (at pp.c:8067)
            TypeDecl: declname='msg', quals=[] (at pp.c:8067)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8067)
        TypeDecl: declname='UniqueReceiveP__CC2420PacketBody__getHeader', quals=[] (at pp.c:8067)
          IdentifierType: names=['cc2420_header_t'] (at None)
  Decl: name='UniqueReceiveP__DuplicateReceive__receive', quals=[], storage=['static'] (at pp.c:8075)
    FuncDecl: quals=None (at pp.c:8075)
      ParamList:  (at pp.c:8077)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8077)
          PtrDecl: quals=[] (at pp.c:8077)
            TypeDecl: declname='msg', quals=[] (at pp.c:8077)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:8078)
          PtrDecl: quals=[] (at pp.c:8078)
            TypeDecl: declname='payload', quals=[] (at pp.c:8078)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8084)
          TypeDecl: declname='len', quals=[] (at pp.c:8084)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8071)
        TypeDecl: declname='UniqueReceiveP__DuplicateReceive__receive', quals=[] (at pp.c:8075)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='UniqueReceiveP__receivedMessages', quals=[], storage=[] (at pp.c:8090)
    ArrayDecl:  (at pp.c:8090)
      TypeDecl: declname='UniqueReceiveP__receivedMessages', quals=[] (at pp.c:8090)
        Struct: name='UniqueReceiveP____nesc_unnamed4357', packed=False (at pp.c:8087)
          Decl: name='source', quals=[], storage=[] (at 0)
            TypeDecl: declname='source', quals=[] (at pp.c:8088)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='dsn', quals=[], storage=[] (at 0)
            TypeDecl: declname='dsn', quals=[] (at pp.c:8089)
              IdentifierType: names=['uint8_t'] (at None)
      Constant: type='int', value='4' (at pp.c:8090)
  Decl: name='UniqueReceiveP__writeIndex', quals=[], storage=[] (at pp.c:8092)
    TypeDecl: declname='UniqueReceiveP__writeIndex', quals=[] (at pp.c:8092)
      IdentifierType: names=['uint8_t'] (at None)
    Constant: type='int', value='0' (at pp.c:8092)
  Decl: name='UniqueReceiveP__recycleSourceElement', quals=[], storage=[] (at pp.c:8095)
    TypeDecl: declname='UniqueReceiveP__recycleSourceElement', quals=[] (at pp.c:8095)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:8097)
    Enum: name='UniqueReceiveP____nesc_unnamed4358' (at pp.c:8097)
      EnumeratorList:  (at pp.c:8098)
        Enumerator: name='UniqueReceiveP__INVALID_ELEMENT' (at pp.c:8098)
          Constant: type='int', value='0xFF' (at pp.c:8098)
  Decl: name='UniqueReceiveP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:8102)
    FuncDecl: quals=None (at pp.c:8102)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='UniqueReceiveP__Init__init', quals=[] (at pp.c:8102)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='UniqueReceiveP__hasSeen', quals=[], storage=['inline', 'static'] (at pp.c:8112)
    FuncDecl: quals=None (at pp.c:8112)
      ParamList:  (at pp.c:8112)
        Decl: name='msgSource', quals=[], storage=[] (at pp.c:8112)
          TypeDecl: declname='msgSource', quals=[] (at pp.c:8112)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='msgDsn', quals=[], storage=[] (at pp.c:8112)
          TypeDecl: declname='msgDsn', quals=[] (at pp.c:8112)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='UniqueReceiveP__hasSeen', quals=[] (at pp.c:8112)
        IdentifierType: names=['bool'] (at None)
  Decl: name='UniqueReceiveP__insert', quals=[], storage=['inline', 'static'] (at pp.c:8113)
    FuncDecl: quals=None (at pp.c:8113)
      ParamList:  (at pp.c:8113)
        Decl: name='msgSource', quals=[], storage=[] (at pp.c:8113)
          TypeDecl: declname='msgSource', quals=[] (at pp.c:8113)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='msgDsn', quals=[], storage=[] (at pp.c:8113)
          TypeDecl: declname='msgDsn', quals=[] (at pp.c:8113)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='UniqueReceiveP__insert', quals=[] (at pp.c:8113)
        IdentifierType: names=['void'] (at None)
  Decl: name='UniqueReceiveP__getSourceKey', quals=[], storage=['inline', 'static'] (at pp.c:8114)
    FuncDecl: quals=None (at pp.c:8114)
      ParamList:  (at pp.c:8114)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8114)
          PtrDecl: quals=[] (at pp.c:8114)
            TypeDecl: declname='msg', quals=[] (at pp.c:8114)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='UniqueReceiveP__getSourceKey', quals=[] (at pp.c:8114)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='UniqueReceiveP__SubReceive__receive', quals=[], storage=['inline', 'static'] (at pp.c:8117)
    FuncDecl: quals=None (at pp.c:8117)
      ParamList:  (at pp.c:8117)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8117)
          PtrDecl: quals=[] (at pp.c:8117)
            TypeDecl: declname='msg', quals=[] (at pp.c:8117)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:8117)
          PtrDecl: quals=[] (at pp.c:8117)
            TypeDecl: declname='payload', quals=[] (at pp.c:8117)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8118)
          TypeDecl: declname='len', quals=[] (at pp.c:8118)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8117)
        TypeDecl: declname='UniqueReceiveP__SubReceive__receive', quals=[] (at pp.c:8117)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='UniqueReceiveP__hasSeen', quals=[], storage=['inline', 'static'] (at pp.c:8120)
    FuncDecl: quals=None (at pp.c:8120)
      ParamList:  (at pp.c:8120)
        Decl: name='msgSource', quals=[], storage=[] (at pp.c:8120)
          TypeDecl: declname='msgSource', quals=[] (at pp.c:8120)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='msgDsn', quals=[], storage=[] (at pp.c:8120)
          TypeDecl: declname='msgDsn', quals=[] (at pp.c:8120)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='UniqueReceiveP__hasSeen', quals=[] (at pp.c:8120)
        IdentifierType: names=['bool'] (at None)
  Decl: name='UniqueReceiveP__insert', quals=[], storage=['inline', 'static'] (at pp.c:8122)
    FuncDecl: quals=None (at pp.c:8122)
      ParamList:  (at pp.c:8122)
        Decl: name='msgSource', quals=[], storage=[] (at pp.c:8122)
          TypeDecl: declname='msgSource', quals=[] (at pp.c:8122)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='msgDsn', quals=[], storage=[] (at pp.c:8122)
          TypeDecl: declname='msgDsn', quals=[] (at pp.c:8122)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='UniqueReceiveP__insert', quals=[] (at pp.c:8122)
        IdentifierType: names=['void'] (at None)
  Decl: name='UniqueReceiveP__getSourceKey', quals=[], storage=['inline', 'static'] (at pp.c:8124)
    FuncDecl: quals=None (at pp.c:8124)
      ParamList:  (at pp.c:8124)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8124)
          PtrDecl: quals=[] (at pp.c:8124)
            TypeDecl: declname='msg', quals=[] (at pp.c:8124)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='UniqueReceiveP__getSourceKey', quals=[] (at pp.c:8124)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='UniqueReceiveP__DuplicateReceive__default__receive', quals=[], storage=['inline', 'static'] (at pp.c:8126)
    FuncDecl: quals=None (at pp.c:8126)
      ParamList:  (at pp.c:8126)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8126)
          PtrDecl: quals=[] (at pp.c:8126)
            TypeDecl: declname='msg', quals=[] (at pp.c:8126)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:8126)
          PtrDecl: quals=[] (at pp.c:8126)
            TypeDecl: declname='payload', quals=[] (at pp.c:8126)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8126)
          TypeDecl: declname='len', quals=[] (at pp.c:8126)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8126)
        TypeDecl: declname='UniqueReceiveP__DuplicateReceive__default__receive', quals=[] (at pp.c:8126)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__SubSend__send', quals=[], storage=['static'] (at pp.c:8128)
    FuncDecl: quals=None (at pp.c:8128)
      ParamList:  (at pp.c:8130)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8130)
          PtrDecl: quals=[] (at pp.c:8130)
            TypeDecl: declname='msg', quals=[] (at pp.c:8130)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8138)
          TypeDecl: declname='len', quals=[] (at pp.c:8138)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__SubSend__send', quals=[] (at pp.c:8128)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__SubSend__maxPayloadLength', quals=[], storage=['static'] (at pp.c:8140)
    FuncDecl: quals=None (at pp.c:8140)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__SubSend__maxPayloadLength', quals=[] (at pp.c:8140)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__grantTask__postTask', quals=[], storage=['static'] (at pp.c:8142)
    FuncDecl: quals=None (at pp.c:8142)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__grantTask__postTask', quals=[] (at pp.c:8142)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__CC2420Packet__setNetwork', quals=[], storage=['static'] (at pp.c:8144)
    FuncDecl: quals=None (at pp.c:8144)
      ParamList:  (at pp.c:8144)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:8144)
          PtrDecl: quals=[] (at pp.c:8144)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:8144)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='networkId', quals=[], storage=[] (at pp.c:8144)
          TypeDecl: declname='networkId', quals=[] (at pp.c:8144)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__CC2420Packet__setNetwork', quals=[] (at pp.c:8144)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__CC2420Packet__getNetwork', quals=[], storage=['static'] (at pp.c:8146)
    FuncDecl: quals=None (at pp.c:8146)
      ParamList:  (at pp.c:8146)
        Decl: name='p_msg', quals=[], storage=[] (at pp.c:8146)
          PtrDecl: quals=[] (at pp.c:8146)
            TypeDecl: declname='p_msg', quals=[] (at pp.c:8146)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__CC2420Packet__getNetwork', quals=[] (at pp.c:8146)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__ActiveSend__sendDone', quals=[], storage=['static'] (at pp.c:8148)
    FuncDecl: quals=None (at pp.c:8148)
      ParamList:  (at pp.c:8150)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8150)
          PtrDecl: quals=[] (at pp.c:8150)
            TypeDecl: declname='msg', quals=[] (at pp.c:8150)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:8154)
          TypeDecl: declname='error', quals=[] (at pp.c:8154)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__ActiveSend__sendDone', quals=[] (at pp.c:8148)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__Queue__enqueue', quals=[], storage=['static'] (at pp.c:8156)
    FuncDecl: quals=None (at pp.c:8156)
      ParamList:  (at pp.c:8156)
        Decl: name='id', quals=[], storage=[] (at pp.c:8156)
          TypeDecl: declname='id', quals=[] (at pp.c:8156)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Queue__enqueue', quals=[] (at pp.c:8156)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__Queue__isEmpty', quals=[], storage=['static'] (at pp.c:8158)
    FuncDecl: quals=None (at pp.c:8158)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Queue__isEmpty', quals=[] (at pp.c:8158)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420TinyosNetworkP__Queue__dequeue', quals=[], storage=['static'] (at pp.c:8160)
    FuncDecl: quals=None (at pp.c:8160)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Queue__dequeue', quals=[] (at pp.c:8160)
        IdentifierType: names=['resource_client_id_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__CC2420PacketBody__getHeader', quals=[], storage=['static'] (at pp.c:8162)
    FuncDecl: quals=None (at pp.c:8162)
      ParamList:  (at pp.c:8162)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8162)
          PtrDecl: quals=[] (at pp.c:8162)
            TypeDecl: declname='msg', quals=[] (at pp.c:8162)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8162)
        TypeDecl: declname='CC2420TinyosNetworkP__CC2420PacketBody__getHeader', quals=[] (at pp.c:8162)
          IdentifierType: names=['cc2420_header_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__CC2420PacketBody__getMetadata', quals=[], storage=['static'] (at pp.c:8173)
    FuncDecl: quals=None (at pp.c:8173)
      ParamList:  (at pp.c:8173)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8173)
          PtrDecl: quals=[] (at pp.c:8173)
            TypeDecl: declname='msg', quals=[] (at pp.c:8173)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8173)
        TypeDecl: declname='CC2420TinyosNetworkP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:8173)
          IdentifierType: names=['cc2420_metadata_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__BareReceive__receive', quals=[], storage=['static'] (at pp.c:8181)
    FuncDecl: quals=None (at pp.c:8181)
      ParamList:  (at pp.c:8183)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8183)
          PtrDecl: quals=[] (at pp.c:8183)
            TypeDecl: declname='msg', quals=[] (at pp.c:8183)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:8184)
          PtrDecl: quals=[] (at pp.c:8184)
            TypeDecl: declname='payload', quals=[] (at pp.c:8184)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8190)
          TypeDecl: declname='len', quals=[] (at pp.c:8190)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8177)
        TypeDecl: declname='CC2420TinyosNetworkP__BareReceive__receive', quals=[] (at pp.c:8181)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__Resource__granted', quals=[], storage=['static'] (at pp.c:8192)
    FuncDecl: quals=None (at pp.c:8192)
      ParamList:  (at pp.c:8194)
        Decl: name='arg_0x102460060', quals=[], storage=[] (at pp.c:8194)
          TypeDecl: declname='arg_0x102460060', quals=[] (at pp.c:8194)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Resource__granted', quals=[] (at pp.c:8192)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__BareSend__sendDone', quals=[], storage=['static'] (at pp.c:8196)
    FuncDecl: quals=None (at pp.c:8196)
      ParamList:  (at pp.c:8198)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8198)
          PtrDecl: quals=[] (at pp.c:8198)
            TypeDecl: declname='msg', quals=[] (at pp.c:8198)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:8202)
          TypeDecl: declname='error', quals=[] (at pp.c:8202)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__BareSend__sendDone', quals=[] (at pp.c:8196)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__ActiveReceive__receive', quals=[], storage=['static'] (at pp.c:8210)
    FuncDecl: quals=None (at pp.c:8210)
      ParamList:  (at pp.c:8212)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8212)
          PtrDecl: quals=[] (at pp.c:8212)
            TypeDecl: declname='msg', quals=[] (at pp.c:8212)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:8213)
          PtrDecl: quals=[] (at pp.c:8213)
            TypeDecl: declname='payload', quals=[] (at pp.c:8213)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8219)
          TypeDecl: declname='len', quals=[] (at pp.c:8219)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8206)
        TypeDecl: declname='CC2420TinyosNetworkP__ActiveReceive__receive', quals=[] (at pp.c:8210)
          IdentifierType: names=['message_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:8221)
    Enum: name='CC2420TinyosNetworkP____nesc_unnamed4359' (at pp.c:8221)
      EnumeratorList:  (at pp.c:8223)
        Enumerator: name='CC2420TinyosNetworkP__grantTask' (at pp.c:8223)
          Constant: type='int', value='11U' (at pp.c:8223)
  Typedef: name='CC2420TinyosNetworkP____nesc_sillytask_grantTask', quals=[], storage=['typedef'] (at pp.c:8226)
    ArrayDecl:  (at pp.c:8226)
      TypeDecl: declname='CC2420TinyosNetworkP____nesc_sillytask_grantTask', quals=[] (at pp.c:8226)
        IdentifierType: names=['int'] (at None)
      ID: name='CC2420TinyosNetworkP__grantTask' (at pp.c:8226)
  Decl: name=None, quals=[], storage=[] (at pp.c:8228)
    Enum: name='CC2420TinyosNetworkP____nesc_unnamed4360' (at pp.c:8228)
      EnumeratorList:  (at pp.c:8229)
        Enumerator: name='CC2420TinyosNetworkP__OWNER_NONE' (at pp.c:8229)
          Constant: type='int', value='0xff' (at pp.c:8229)
        Enumerator: name='CC2420TinyosNetworkP__TINYOS_N_NETWORKS' (at pp.c:8230)
          Constant: type='int', value='1U' (at pp.c:8230)
  Decl: name='CC2420TinyosNetworkP__m_busy_client', quals=[], storage=[] (at pp.c:8240)
    TypeDecl: declname='CC2420TinyosNetworkP__m_busy_client', quals=[] (at pp.c:8240)
      Enum: name='CC2420TinyosNetworkP____nesc_unnamed4361' (at pp.c:8237)
        EnumeratorList:  (at pp.c:8238)
          Enumerator: name='CC2420TinyosNetworkP__CLIENT_AM' (at pp.c:8238)
          Enumerator: name='CC2420TinyosNetworkP__CLIENT_BARE' (at pp.c:8239)
  Decl: name='CC2420TinyosNetworkP__resource_owner', quals=[], storage=[] (at pp.c:8242)
    TypeDecl: declname='CC2420TinyosNetworkP__resource_owner', quals=[] (at pp.c:8242)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='CC2420TinyosNetworkP__OWNER_NONE' (at pp.c:8242)
  Decl: name='CC2420TinyosNetworkP__next_owner', quals=[], storage=[] (at pp.c:8244)
    TypeDecl: declname='CC2420TinyosNetworkP__next_owner', quals=[] (at pp.c:8244)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__ActiveSend__send', quals=[], storage=['static'] (at pp.c:8246)
    FuncDecl: quals=None (at pp.c:8246)
      ParamList:  (at pp.c:8246)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8246)
          PtrDecl: quals=[] (at pp.c:8246)
            TypeDecl: declname='msg', quals=[] (at pp.c:8246)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8246)
          TypeDecl: declname='len', quals=[] (at pp.c:8246)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__ActiveSend__send', quals=[] (at pp.c:8246)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__ActiveSend__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:8256)
    FuncDecl: quals=None (at pp.c:8256)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__ActiveSend__maxPayloadLength', quals=[] (at pp.c:8256)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__ActiveSend__getPayload', quals=[], storage=['inline', 'static'] (at pp.c:8260)
    FuncDecl: quals=None (at pp.c:8260)
      ParamList:  (at pp.c:8260)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8260)
          PtrDecl: quals=[] (at pp.c:8260)
            TypeDecl: declname='msg', quals=[] (at pp.c:8260)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8260)
          TypeDecl: declname='len', quals=[] (at pp.c:8260)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8260)
        TypeDecl: declname='CC2420TinyosNetworkP__ActiveSend__getPayload', quals=[] (at pp.c:8260)
          IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__BareSend__getPayload', quals=[], storage=['inline', 'static'] (at pp.c:8262)
    FuncDecl: quals=None (at pp.c:8262)
      ParamList:  (at pp.c:8262)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8262)
          PtrDecl: quals=[] (at pp.c:8262)
            TypeDecl: declname='msg', quals=[] (at pp.c:8262)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8262)
          TypeDecl: declname='len', quals=[] (at pp.c:8262)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8262)
        TypeDecl: declname='CC2420TinyosNetworkP__BareSend__getPayload', quals=[] (at pp.c:8262)
          IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__SubSend__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:8272)
    FuncDecl: quals=None (at pp.c:8272)
      ParamList:  (at pp.c:8272)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8272)
          PtrDecl: quals=[] (at pp.c:8272)
            TypeDecl: declname='msg', quals=[] (at pp.c:8272)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:8272)
          TypeDecl: declname='error', quals=[] (at pp.c:8272)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__SubSend__sendDone', quals=[] (at pp.c:8272)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__SubReceive__receive', quals=[], storage=['inline', 'static'] (at pp.c:8281)
    FuncDecl: quals=None (at pp.c:8281)
      ParamList:  (at pp.c:8281)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8281)
          PtrDecl: quals=[] (at pp.c:8281)
            TypeDecl: declname='msg', quals=[] (at pp.c:8281)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:8281)
          PtrDecl: quals=[] (at pp.c:8281)
            TypeDecl: declname='payload', quals=[] (at pp.c:8281)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8281)
          TypeDecl: declname='len', quals=[] (at pp.c:8281)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8281)
        TypeDecl: declname='CC2420TinyosNetworkP__SubReceive__receive', quals=[] (at pp.c:8281)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__grantTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:8283)
    FuncDecl: quals=None (at pp.c:8283)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__grantTask__runTask', quals=[] (at pp.c:8283)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__Resource__request', quals=[], storage=['inline', 'static'] (at pp.c:8285)
    FuncDecl: quals=None (at pp.c:8285)
      ParamList:  (at pp.c:8285)
        Decl: name='id', quals=[], storage=[] (at pp.c:8285)
          TypeDecl: declname='id', quals=[] (at pp.c:8285)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Resource__request', quals=[] (at pp.c:8285)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__Resource__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:8287)
    FuncDecl: quals=None (at pp.c:8287)
      ParamList:  (at pp.c:8287)
        Decl: name='id', quals=[], storage=[] (at pp.c:8287)
          TypeDecl: declname='id', quals=[] (at pp.c:8287)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Resource__immediateRequest', quals=[] (at pp.c:8287)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__Resource__release', quals=[], storage=['inline', 'static'] (at pp.c:8289)
    FuncDecl: quals=None (at pp.c:8289)
      ParamList:  (at pp.c:8289)
        Decl: name='id', quals=[], storage=[] (at pp.c:8289)
          TypeDecl: declname='id', quals=[] (at pp.c:8289)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Resource__release', quals=[] (at pp.c:8289)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__BareReceive__default__receive', quals=[], storage=['inline', 'static'] (at pp.c:8291)
    FuncDecl: quals=None (at pp.c:8291)
      ParamList:  (at pp.c:8291)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8291)
          PtrDecl: quals=[] (at pp.c:8291)
            TypeDecl: declname='msg', quals=[] (at pp.c:8291)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:8291)
          PtrDecl: quals=[] (at pp.c:8291)
            TypeDecl: declname='payload', quals=[] (at pp.c:8291)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8291)
          TypeDecl: declname='len', quals=[] (at pp.c:8291)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8291)
        TypeDecl: declname='CC2420TinyosNetworkP__BareReceive__default__receive', quals=[] (at pp.c:8291)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420TinyosNetworkP__BareSend__default__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:8294)
    FuncDecl: quals=None (at pp.c:8294)
      ParamList:  (at pp.c:8294)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8294)
          PtrDecl: quals=[] (at pp.c:8294)
            TypeDecl: declname='msg', quals=[] (at pp.c:8294)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:8294)
          TypeDecl: declname='error', quals=[] (at pp.c:8294)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__BareSend__default__sendDone', quals=[] (at pp.c:8294)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420TinyosNetworkP__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:8303)
    FuncDecl: quals=None (at pp.c:8303)
      ParamList:  (at pp.c:8303)
        Decl: name='client', quals=[], storage=[] (at pp.c:8303)
          TypeDecl: declname='client', quals=[] (at pp.c:8303)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420TinyosNetworkP__Resource__default__granted', quals=[] (at pp.c:8303)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:8305)
    Enum: name='FcfsResourceQueueC__0____nesc_unnamed4362' (at pp.c:8305)
      EnumeratorList:  (at pp.c:8307)
        Enumerator: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:8307)
          Constant: type='int', value='0xFF' (at pp.c:8307)
  Decl: name='FcfsResourceQueueC__0__resQ', quals=[], storage=[] (at pp.c:8309)
    ArrayDecl:  (at pp.c:8309)
      TypeDecl: declname='FcfsResourceQueueC__0__resQ', quals=[] (at pp.c:8309)
        IdentifierType: names=['uint8_t'] (at None)
      Constant: type='int', value='1' (at pp.c:8309)
  Decl: name='FcfsResourceQueueC__0__qHead', quals=[], storage=[] (at pp.c:8310)
    TypeDecl: declname='FcfsResourceQueueC__0__qHead', quals=[] (at pp.c:8310)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:8310)
  Decl: name='FcfsResourceQueueC__0__qTail', quals=[], storage=[] (at pp.c:8311)
    TypeDecl: declname='FcfsResourceQueueC__0__qTail', quals=[] (at pp.c:8311)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:8311)
  Decl: name='FcfsResourceQueueC__0__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:8313)
    FuncDecl: quals=None (at pp.c:8313)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__0__Init__init', quals=[] (at pp.c:8313)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='FcfsResourceQueueC__0__FcfsQueue__isEmpty', quals=[], storage=['static'] (at pp.c:8318)
    FuncDecl: quals=None (at pp.c:8318)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__isEmpty', quals=[] (at pp.c:8318)
        IdentifierType: names=['bool'] (at None)
  Decl: name='FcfsResourceQueueC__0__FcfsQueue__isEnqueued', quals=[], storage=['inline', 'static'] (at pp.c:8322)
    FuncDecl: quals=None (at pp.c:8322)
      ParamList:  (at pp.c:8322)
        Decl: name='id', quals=[], storage=[] (at pp.c:8322)
          TypeDecl: declname='id', quals=[] (at pp.c:8322)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__isEnqueued', quals=[] (at pp.c:8322)
        IdentifierType: names=['bool'] (at None)
  Decl: name='FcfsResourceQueueC__0__FcfsQueue__dequeue', quals=[], storage=['inline', 'static'] (at pp.c:8326)
    FuncDecl: quals=None (at pp.c:8326)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__dequeue', quals=[] (at pp.c:8326)
        IdentifierType: names=['resource_client_id_t'] (at None)
  Decl: name='FcfsResourceQueueC__0__FcfsQueue__enqueue', quals=[], storage=['inline', 'static'] (at pp.c:8328)
    FuncDecl: quals=None (at pp.c:8328)
      ParamList:  (at pp.c:8328)
        Decl: name='id', quals=[], storage=[] (at pp.c:8328)
          TypeDecl: declname='id', quals=[] (at pp.c:8328)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__enqueue', quals=[] (at pp.c:8328)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ActiveMessageP__SubSend__send', quals=[], storage=['static'] (at pp.c:8330)
    FuncDecl: quals=None (at pp.c:8330)
      ParamList:  (at pp.c:8332)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8332)
          PtrDecl: quals=[] (at pp.c:8332)
            TypeDecl: declname='msg', quals=[] (at pp.c:8332)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8340)
          TypeDecl: declname='len', quals=[] (at pp.c:8340)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SubSend__send', quals=[] (at pp.c:8330)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ActiveMessageP__SubSend__getPayload', quals=[], storage=['static'] (at pp.c:8346)
    FuncDecl: quals=None (at pp.c:8346)
      ParamList:  (at pp.c:8348)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8348)
          PtrDecl: quals=[] (at pp.c:8348)
            TypeDecl: declname='msg', quals=[] (at pp.c:8348)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8351)
          TypeDecl: declname='len', quals=[] (at pp.c:8351)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8344)
        TypeDecl: declname='CC2420ActiveMessageP__SubSend__getPayload', quals=[] (at pp.c:8346)
          IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__SubSend__maxPayloadLength', quals=[], storage=['static'] (at pp.c:8353)
    FuncDecl: quals=None (at pp.c:8353)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SubSend__maxPayloadLength', quals=[] (at pp.c:8353)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ActiveMessageP__CC2420Config__getPanAddr', quals=[], storage=['static'] (at pp.c:8355)
    FuncDecl: quals=None (at pp.c:8355)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__CC2420Config__getPanAddr', quals=[] (at pp.c:8355)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioBackoff__requestCca', quals=[], storage=['static'] (at pp.c:8357)
    FuncDecl: quals=None (at pp.c:8357)
      ParamList:  (at pp.c:8359)
        Decl: name='arg_0x1024e7d60', quals=[], storage=[] (at pp.c:8359)
          TypeDecl: declname='arg_0x1024e7d60', quals=[] (at pp.c:8359)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8361)
          PtrDecl: quals=[] (at pp.c:8361)
            TypeDecl: declname='msg', quals=[] (at pp.c:8361)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__requestCca', quals=[] (at pp.c:8357)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioBackoff__requestInitialBackoff', quals=[], storage=['static'] (at pp.c:8363)
    FuncDecl: quals=None (at pp.c:8363)
      ParamList:  (at pp.c:8365)
        Decl: name='arg_0x1024e7d60', quals=[], storage=[] (at pp.c:8365)
          TypeDecl: declname='arg_0x1024e7d60', quals=[] (at pp.c:8365)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8367)
          PtrDecl: quals=[] (at pp.c:8367)
            TypeDecl: declname='msg', quals=[] (at pp.c:8367)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__requestInitialBackoff', quals=[] (at pp.c:8363)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioBackoff__requestCongestionBackoff', quals=[], storage=['static'] (at pp.c:8374)
    FuncDecl: quals=None (at pp.c:8374)
      ParamList:  (at pp.c:8376)
        Decl: name='arg_0x1024e7d60', quals=[], storage=[] (at pp.c:8376)
          TypeDecl: declname='arg_0x1024e7d60', quals=[] (at pp.c:8376)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8378)
          PtrDecl: quals=[] (at pp.c:8378)
            TypeDecl: declname='msg', quals=[] (at pp.c:8378)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__requestCongestionBackoff', quals=[] (at pp.c:8374)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__SendNotifier__aboutToSend', quals=[], storage=['static'] (at pp.c:8380)
    FuncDecl: quals=None (at pp.c:8380)
      ParamList:  (at pp.c:8382)
        Decl: name='arg_0x1024e7258', quals=[], storage=[] (at pp.c:8382)
          TypeDecl: declname='arg_0x1024e7258', quals=[] (at pp.c:8382)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='dest', quals=[], storage=[] (at pp.c:8384)
          TypeDecl: declname='dest', quals=[] (at pp.c:8384)
            IdentifierType: names=['am_addr_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8386)
          PtrDecl: quals=[] (at pp.c:8386)
            TypeDecl: declname='msg', quals=[] (at pp.c:8386)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SendNotifier__aboutToSend', quals=[] (at pp.c:8380)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__AMSend__sendDone', quals=[], storage=['static'] (at pp.c:8388)
    FuncDecl: quals=None (at pp.c:8388)
      ParamList:  (at pp.c:8390)
        Decl: name='arg_0x1024ed7d8', quals=[], storage=[] (at pp.c:8390)
          TypeDecl: declname='arg_0x1024ed7d8', quals=[] (at pp.c:8390)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8392)
          PtrDecl: quals=[] (at pp.c:8392)
            TypeDecl: declname='msg', quals=[] (at pp.c:8392)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:8399)
          TypeDecl: declname='error', quals=[] (at pp.c:8399)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMSend__sendDone', quals=[] (at pp.c:8388)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__Snoop__receive', quals=[], storage=['static'] (at pp.c:8407)
    FuncDecl: quals=None (at pp.c:8407)
      ParamList:  (at pp.c:8409)
        Decl: name='arg_0x1024ea480', quals=[], storage=[] (at pp.c:8409)
          TypeDecl: declname='arg_0x1024ea480', quals=[] (at pp.c:8409)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8411)
          PtrDecl: quals=[] (at pp.c:8411)
            TypeDecl: declname='msg', quals=[] (at pp.c:8411)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:8412)
          PtrDecl: quals=[] (at pp.c:8412)
            TypeDecl: declname='payload', quals=[] (at pp.c:8412)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8418)
          TypeDecl: declname='len', quals=[] (at pp.c:8418)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8403)
        TypeDecl: declname='CC2420ActiveMessageP__Snoop__receive', quals=[] (at pp.c:8407)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420ActiveMessageP__ActiveMessageAddress__amAddress', quals=[], storage=['static'] (at pp.c:8420)
    FuncDecl: quals=None (at pp.c:8420)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__ActiveMessageAddress__amAddress', quals=[] (at pp.c:8420)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='CC2420ActiveMessageP__CC2420PacketBody__getHeader', quals=[], storage=['static'] (at pp.c:8422)
    FuncDecl: quals=None (at pp.c:8422)
      ParamList:  (at pp.c:8422)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8422)
          PtrDecl: quals=[] (at pp.c:8422)
            TypeDecl: declname='msg', quals=[] (at pp.c:8422)
              IdentifierType: names=['message_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8422)
        TypeDecl: declname='CC2420ActiveMessageP__CC2420PacketBody__getHeader', quals=[] (at pp.c:8422)
          IdentifierType: names=['cc2420_header_t'] (at None)
  Decl: name='CC2420ActiveMessageP__Receive__receive', quals=[], storage=['static'] (at pp.c:8430)
    FuncDecl: quals=None (at pp.c:8430)
      ParamList:  (at pp.c:8432)
        Decl: name='arg_0x1024ec908', quals=[], storage=[] (at pp.c:8432)
          TypeDecl: declname='arg_0x1024ec908', quals=[] (at pp.c:8432)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8434)
          PtrDecl: quals=[] (at pp.c:8434)
            TypeDecl: declname='msg', quals=[] (at pp.c:8434)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:8435)
          PtrDecl: quals=[] (at pp.c:8435)
            TypeDecl: declname='payload', quals=[] (at pp.c:8435)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8441)
          TypeDecl: declname='len', quals=[] (at pp.c:8441)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8426)
        TypeDecl: declname='CC2420ActiveMessageP__Receive__receive', quals=[] (at pp.c:8430)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioResource__release', quals=[], storage=['static'] (at pp.c:8443)
    FuncDecl: quals=None (at pp.c:8443)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioResource__release', quals=[] (at pp.c:8443)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioResource__immediateRequest', quals=[], storage=['static'] (at pp.c:8445)
    FuncDecl: quals=None (at pp.c:8445)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioResource__immediateRequest', quals=[] (at pp.c:8445)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioResource__request', quals=[], storage=['static'] (at pp.c:8447)
    FuncDecl: quals=None (at pp.c:8447)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioResource__request', quals=[] (at pp.c:8447)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ActiveMessageP__pending_length', quals=[], storage=[] (at pp.c:8449)
    TypeDecl: declname='CC2420ActiveMessageP__pending_length', quals=[] (at pp.c:8449)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='CC2420ActiveMessageP__pending_message', quals=[], storage=[] (at pp.c:8450)
    PtrDecl: quals=[] (at pp.c:8450)
      TypeDecl: declname='CC2420ActiveMessageP__pending_message', quals=[] (at pp.c:8450)
        IdentifierType: names=['message_t'] (at None)
    Cast:  (at None)
      Typename: quals=[] (at None)
        PtrDecl: quals=[] (at pp.c:8450)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      Constant: type='int', value='0' (at pp.c:8450)
  Decl: name='CC2420ActiveMessageP__RadioResource__granted', quals=[], storage=['static'] (at pp.c:8452)
    FuncDecl: quals=None (at pp.c:8452)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioResource__granted', quals=[] (at pp.c:8452)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__AMSend__send', quals=[], storage=['static'] (at pp.c:8454)
    FuncDecl: quals=None (at pp.c:8454)
      ParamList:  (at pp.c:8454)
        Decl: name='id', quals=[], storage=[] (at pp.c:8454)
          TypeDecl: declname='id', quals=[] (at pp.c:8454)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='addr', quals=[], storage=[] (at pp.c:8454)
          TypeDecl: declname='addr', quals=[] (at pp.c:8454)
            IdentifierType: names=['am_addr_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8455)
          PtrDecl: quals=[] (at pp.c:8455)
            TypeDecl: declname='msg', quals=[] (at pp.c:8455)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8456)
          TypeDecl: declname='len', quals=[] (at pp.c:8456)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMSend__send', quals=[] (at pp.c:8454)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMSend__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:8458)
    FuncDecl: quals=None (at pp.c:8458)
      ParamList:  (at pp.c:8458)
        Decl: name='id', quals=[], storage=[] (at pp.c:8458)
          TypeDecl: declname='id', quals=[] (at pp.c:8458)
            IdentifierType: names=['am_id_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMSend__maxPayloadLength', quals=[] (at pp.c:8458)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMSend__getPayload', quals=[], storage=['inline', 'static'] (at pp.c:8462)
    FuncDecl: quals=None (at pp.c:8462)
      ParamList:  (at pp.c:8462)
        Decl: name='id', quals=[], storage=[] (at pp.c:8462)
          TypeDecl: declname='id', quals=[] (at pp.c:8462)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='m', quals=[], storage=[] (at pp.c:8462)
          PtrDecl: quals=[] (at pp.c:8462)
            TypeDecl: declname='m', quals=[] (at pp.c:8462)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8462)
          TypeDecl: declname='len', quals=[] (at pp.c:8462)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8462)
        TypeDecl: declname='CC2420ActiveMessageP__AMSend__getPayload', quals=[] (at pp.c:8462)
          IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__address', quals=[], storage=['inline', 'static'] (at pp.c:8467)
    FuncDecl: quals=None (at pp.c:8467)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__address', quals=[] (at pp.c:8467)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__destination', quals=[], storage=['static'] (at pp.c:8471)
    FuncDecl: quals=None (at pp.c:8471)
      ParamList:  (at pp.c:8471)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:8471)
          PtrDecl: quals=[] (at pp.c:8471)
            TypeDecl: declname='amsg', quals=[] (at pp.c:8471)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__destination', quals=[] (at pp.c:8471)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__setDestination', quals=[], storage=['inline', 'static'] (at pp.c:8481)
    FuncDecl: quals=None (at pp.c:8481)
      ParamList:  (at pp.c:8481)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:8481)
          PtrDecl: quals=[] (at pp.c:8481)
            TypeDecl: declname='amsg', quals=[] (at pp.c:8481)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='addr', quals=[], storage=[] (at pp.c:8481)
          TypeDecl: declname='addr', quals=[] (at pp.c:8481)
            IdentifierType: names=['am_addr_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__setDestination', quals=[] (at pp.c:8481)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__isForMe', quals=[], storage=['inline', 'static'] (at pp.c:8491)
    FuncDecl: quals=None (at pp.c:8491)
      ParamList:  (at pp.c:8491)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:8491)
          PtrDecl: quals=[] (at pp.c:8491)
            TypeDecl: declname='amsg', quals=[] (at pp.c:8491)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__isForMe', quals=[] (at pp.c:8491)
        IdentifierType: names=['bool'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__type', quals=[], storage=['inline', 'static'] (at pp.c:8496)
    FuncDecl: quals=None (at pp.c:8496)
      ParamList:  (at pp.c:8496)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:8496)
          PtrDecl: quals=[] (at pp.c:8496)
            TypeDecl: declname='amsg', quals=[] (at pp.c:8496)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__type', quals=[] (at pp.c:8496)
        IdentifierType: names=['am_id_t'] (at None)
  Decl: name='CC2420ActiveMessageP__AMPacket__setType', quals=[], storage=['inline', 'static'] (at pp.c:8501)
    FuncDecl: quals=None (at pp.c:8501)
      ParamList:  (at pp.c:8501)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:8501)
          PtrDecl: quals=[] (at pp.c:8501)
            TypeDecl: declname='amsg', quals=[] (at pp.c:8501)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='type', quals=[], storage=[] (at pp.c:8501)
          TypeDecl: declname='type', quals=[] (at pp.c:8501)
            IdentifierType: names=['am_id_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__AMPacket__setType', quals=[] (at pp.c:8501)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__Packet__payloadLength', quals=[], storage=['inline', 'static'] (at pp.c:8503)
    FuncDecl: quals=None (at pp.c:8503)
      ParamList:  (at pp.c:8503)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8503)
          PtrDecl: quals=[] (at pp.c:8503)
            TypeDecl: declname='msg', quals=[] (at pp.c:8503)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__Packet__payloadLength', quals=[] (at pp.c:8503)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ActiveMessageP__Packet__setPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:8507)
    FuncDecl: quals=None (at pp.c:8507)
      ParamList:  (at pp.c:8507)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8507)
          PtrDecl: quals=[] (at pp.c:8507)
            TypeDecl: declname='msg', quals=[] (at pp.c:8507)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8507)
          TypeDecl: declname='len', quals=[] (at pp.c:8507)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__Packet__setPayloadLength', quals=[] (at pp.c:8507)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__Packet__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:8511)
    FuncDecl: quals=None (at pp.c:8511)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__Packet__maxPayloadLength', quals=[] (at pp.c:8511)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='CC2420ActiveMessageP__Packet__getPayload', quals=[], storage=['inline', 'static'] (at pp.c:8515)
    FuncDecl: quals=None (at pp.c:8515)
      ParamList:  (at pp.c:8515)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8515)
          PtrDecl: quals=[] (at pp.c:8515)
            TypeDecl: declname='msg', quals=[] (at pp.c:8515)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8515)
          TypeDecl: declname='len', quals=[] (at pp.c:8515)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8515)
        TypeDecl: declname='CC2420ActiveMessageP__Packet__getPayload', quals=[] (at pp.c:8515)
          IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__SubSend__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:8521)
    FuncDecl: quals=None (at pp.c:8521)
      ParamList:  (at pp.c:8521)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8521)
          PtrDecl: quals=[] (at pp.c:8521)
            TypeDecl: declname='msg', quals=[] (at pp.c:8521)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:8521)
          TypeDecl: declname='result', quals=[] (at pp.c:8521)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SubSend__sendDone', quals=[] (at pp.c:8521)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__SubReceive__receive', quals=[], storage=['inline', 'static'] (at pp.c:8528)
    FuncDecl: quals=None (at pp.c:8528)
      ParamList:  (at pp.c:8528)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8528)
          PtrDecl: quals=[] (at pp.c:8528)
            TypeDecl: declname='msg', quals=[] (at pp.c:8528)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:8528)
          PtrDecl: quals=[] (at pp.c:8528)
            TypeDecl: declname='payload', quals=[] (at pp.c:8528)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8528)
          TypeDecl: declname='len', quals=[] (at pp.c:8528)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8528)
        TypeDecl: declname='CC2420ActiveMessageP__SubReceive__receive', quals=[] (at pp.c:8528)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420ActiveMessageP__CC2420Config__syncDone', quals=[], storage=['inline', 'static'] (at pp.c:8530)
    FuncDecl: quals=None (at pp.c:8530)
      ParamList:  (at pp.c:8530)
        Decl: name='error', quals=[], storage=[] (at pp.c:8530)
          TypeDecl: declname='error', quals=[] (at pp.c:8530)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__CC2420Config__syncDone', quals=[] (at pp.c:8530)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__SubBackoff__requestInitialBackoff', quals=[], storage=['inline', 'static'] (at pp.c:8536)
    FuncDecl: quals=None (at pp.c:8536)
      ParamList:  (at pp.c:8536)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8536)
          PtrDecl: quals=[] (at pp.c:8536)
            TypeDecl: declname='msg', quals=[] (at pp.c:8536)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SubBackoff__requestInitialBackoff', quals=[] (at pp.c:8536)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__SubBackoff__requestCongestionBackoff', quals=[], storage=['inline', 'static'] (at pp.c:8541)
    FuncDecl: quals=None (at pp.c:8541)
      ParamList:  (at pp.c:8541)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8541)
          PtrDecl: quals=[] (at pp.c:8541)
            TypeDecl: declname='msg', quals=[] (at pp.c:8541)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SubBackoff__requestCongestionBackoff', quals=[] (at pp.c:8541)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__SubBackoff__requestCca', quals=[], storage=['inline', 'static'] (at pp.c:8545)
    FuncDecl: quals=None (at pp.c:8545)
      ParamList:  (at pp.c:8545)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8545)
          PtrDecl: quals=[] (at pp.c:8545)
            TypeDecl: declname='msg', quals=[] (at pp.c:8545)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SubBackoff__requestCca', quals=[] (at pp.c:8545)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__Receive__default__receive', quals=[], storage=['inline', 'static'] (at pp.c:8547)
    FuncDecl: quals=None (at pp.c:8547)
      ParamList:  (at pp.c:8547)
        Decl: name='id', quals=[], storage=[] (at pp.c:8547)
          TypeDecl: declname='id', quals=[] (at pp.c:8547)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8547)
          PtrDecl: quals=[] (at pp.c:8547)
            TypeDecl: declname='msg', quals=[] (at pp.c:8547)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:8547)
          PtrDecl: quals=[] (at pp.c:8547)
            TypeDecl: declname='payload', quals=[] (at pp.c:8547)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8547)
          TypeDecl: declname='len', quals=[] (at pp.c:8547)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8547)
        TypeDecl: declname='CC2420ActiveMessageP__Receive__default__receive', quals=[] (at pp.c:8547)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420ActiveMessageP__Snoop__default__receive', quals=[], storage=['inline', 'static'] (at pp.c:8551)
    FuncDecl: quals=None (at pp.c:8551)
      ParamList:  (at pp.c:8551)
        Decl: name='id', quals=[], storage=[] (at pp.c:8551)
          TypeDecl: declname='id', quals=[] (at pp.c:8551)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8551)
          PtrDecl: quals=[] (at pp.c:8551)
            TypeDecl: declname='msg', quals=[] (at pp.c:8551)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='payload', quals=[], storage=[] (at pp.c:8551)
          PtrDecl: quals=[] (at pp.c:8551)
            TypeDecl: declname='payload', quals=[] (at pp.c:8551)
              IdentifierType: names=['void'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:8551)
          TypeDecl: declname='len', quals=[] (at pp.c:8551)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8551)
        TypeDecl: declname='CC2420ActiveMessageP__Snoop__default__receive', quals=[] (at pp.c:8551)
          IdentifierType: names=['message_t'] (at None)
  Decl: name='CC2420ActiveMessageP__SendNotifier__default__aboutToSend', quals=[], storage=['inline', 'static'] (at pp.c:8559)
    FuncDecl: quals=None (at pp.c:8559)
      ParamList:  (at pp.c:8559)
        Decl: name='amId', quals=[], storage=[] (at pp.c:8559)
          TypeDecl: declname='amId', quals=[] (at pp.c:8559)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='addr', quals=[], storage=[] (at pp.c:8559)
          TypeDecl: declname='addr', quals=[] (at pp.c:8559)
            IdentifierType: names=['am_addr_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8559)
          PtrDecl: quals=[] (at pp.c:8559)
            TypeDecl: declname='msg', quals=[] (at pp.c:8559)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__SendNotifier__default__aboutToSend', quals=[] (at pp.c:8559)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioBackoff__default__requestInitialBackoff', quals=[], storage=['inline', 'static'] (at pp.c:8561)
    FuncDecl: quals=None (at pp.c:8561)
      ParamList:  (at pp.c:8561)
        Decl: name='id', quals=[], storage=[] (at pp.c:8561)
          TypeDecl: declname='id', quals=[] (at pp.c:8561)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8562)
          PtrDecl: quals=[] (at pp.c:8562)
            TypeDecl: declname='msg', quals=[] (at pp.c:8562)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__default__requestInitialBackoff', quals=[] (at pp.c:8561)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioBackoff__default__requestCongestionBackoff', quals=[], storage=['inline', 'static'] (at pp.c:8565)
    FuncDecl: quals=None (at pp.c:8565)
      ParamList:  (at pp.c:8565)
        Decl: name='id', quals=[], storage=[] (at pp.c:8565)
          TypeDecl: declname='id', quals=[] (at pp.c:8565)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8566)
          PtrDecl: quals=[] (at pp.c:8566)
            TypeDecl: declname='msg', quals=[] (at pp.c:8566)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__default__requestCongestionBackoff', quals=[] (at pp.c:8565)
        IdentifierType: names=['void'] (at None)
  Decl: name='CC2420ActiveMessageP__RadioBackoff__default__requestCca', quals=[], storage=['inline', 'static'] (at pp.c:8569)
    FuncDecl: quals=None (at pp.c:8569)
      ParamList:  (at pp.c:8569)
        Decl: name='id', quals=[], storage=[] (at pp.c:8569)
          TypeDecl: declname='id', quals=[] (at pp.c:8569)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:8570)
          PtrDecl: quals=[] (at pp.c:8570)
            TypeDecl: declname='msg', quals=[] (at pp.c:8570)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__default__requestCca', quals=[] (at pp.c:8569)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__Read__readDone', quals=[], storage=['static'] (at pp.c:8572)
    FuncDecl: quals=None (at pp.c:8572)
      ParamList:  (at pp.c:8574)
        Decl: name='arg_0x102600db0', quals=[], storage=[] (at pp.c:8574)
          TypeDecl: declname='arg_0x102600db0', quals=[] (at pp.c:8574)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:8576)
          TypeDecl: declname='result', quals=[] (at pp.c:8576)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='val', quals=[], storage=[] (at pp.c:8576)
          TypeDecl: declname='val', quals=[] (at pp.c:8576)
            IdentifierType: names=['AdcP__Read__val_t'] (at None)
      TypeDecl: declname='AdcP__Read__readDone', quals=[] (at pp.c:8572)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__ReadNow__readDone', quals=[], storage=['static'] (at pp.c:8578)
    FuncDecl: quals=None (at pp.c:8578)
      ParamList:  (at pp.c:8580)
        Decl: name='arg_0x1025fab18', quals=[], storage=[] (at pp.c:8580)
          TypeDecl: declname='arg_0x1025fab18', quals=[] (at pp.c:8580)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:8582)
          TypeDecl: declname='result', quals=[] (at pp.c:8582)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='val', quals=[], storage=[] (at pp.c:8582)
          TypeDecl: declname='val', quals=[] (at pp.c:8582)
            IdentifierType: names=['AdcP__ReadNow__val_t'] (at None)
      TypeDecl: declname='AdcP__ReadNow__readDone', quals=[] (at pp.c:8578)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__ResourceReadNow__granted', quals=[], storage=['static'] (at pp.c:8584)
    FuncDecl: quals=None (at pp.c:8584)
      ParamList:  (at pp.c:8586)
        Decl: name='arg_0x1025f7748', quals=[], storage=[] (at pp.c:8586)
          TypeDecl: declname='arg_0x1025f7748', quals=[] (at pp.c:8586)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceReadNow__granted', quals=[] (at pp.c:8584)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__Config__getConfiguration', quals=[], storage=['static'] (at pp.c:8588)
    FuncDecl: quals=None (at pp.c:8588)
      ParamList:  (at pp.c:8590)
        Decl: name='arg_0x1025f2350', quals=[], storage=[] (at pp.c:8590)
          TypeDecl: declname='arg_0x1025f2350', quals=[] (at pp.c:8590)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__Config__getConfiguration', quals=[] (at pp.c:8588)
        IdentifierType: names=['AdcP__Config__adc_config_t'] (at None)
  Decl: name='AdcP__SingleChannel__getData', quals=[], storage=['static'] (at pp.c:8592)
    FuncDecl: quals=None (at pp.c:8592)
      ParamList:  (at pp.c:8594)
        Decl: name='arg_0x1025e0910', quals=[], storage=[] (at pp.c:8594)
          TypeDecl: declname='arg_0x1025e0910', quals=[] (at pp.c:8594)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__SingleChannel__getData', quals=[] (at pp.c:8592)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__SingleChannel__configureSingle', quals=[], storage=['static'] (at pp.c:8596)
    FuncDecl: quals=None (at pp.c:8596)
      ParamList:  (at pp.c:8598)
        Decl: name='arg_0x1025e0910', quals=[], storage=[] (at pp.c:8598)
          TypeDecl: declname='arg_0x1025e0910', quals=[] (at pp.c:8598)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:8600)
          PtrDecl: quals=[] (at pp.c:8600)
            TypeDecl: declname='config', quals=['const'] (at pp.c:8600)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
      TypeDecl: declname='AdcP__SingleChannel__configureSingle', quals=[] (at pp.c:8596)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__ResourceRead__release', quals=[], storage=['static'] (at pp.c:8602)
    FuncDecl: quals=None (at pp.c:8602)
      ParamList:  (at pp.c:8604)
        Decl: name='arg_0x1025f6aa0', quals=[], storage=[] (at pp.c:8604)
          TypeDecl: declname='arg_0x1025f6aa0', quals=[] (at pp.c:8604)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceRead__release', quals=[] (at pp.c:8602)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__ResourceRead__request', quals=[], storage=['static'] (at pp.c:8606)
    FuncDecl: quals=None (at pp.c:8606)
      ParamList:  (at pp.c:8608)
        Decl: name='arg_0x1025f6aa0', quals=[], storage=[] (at pp.c:8608)
          TypeDecl: declname='arg_0x1025f6aa0', quals=[] (at pp.c:8608)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceRead__request', quals=[] (at pp.c:8606)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__readDone__postTask', quals=[], storage=['static'] (at pp.c:8610)
    FuncDecl: quals=None (at pp.c:8610)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcP__readDone__postTask', quals=[] (at pp.c:8610)
        IdentifierType: names=['error_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:8612)
    Enum: name='AdcP____nesc_unnamed4363' (at pp.c:8612)
      EnumeratorList:  (at pp.c:8614)
        Enumerator: name='AdcP__readDone' (at pp.c:8614)
          Constant: type='int', value='12U' (at pp.c:8614)
  Typedef: name='AdcP____nesc_sillytask_readDone', quals=[], storage=['typedef'] (at pp.c:8617)
    ArrayDecl:  (at pp.c:8617)
      TypeDecl: declname='AdcP____nesc_sillytask_readDone', quals=[] (at pp.c:8617)
        IdentifierType: names=['int'] (at None)
      ID: name='AdcP__readDone' (at pp.c:8617)
  Decl: name=None, quals=[], storage=[] (at pp.c:8619)
    Enum: name='AdcP____nesc_unnamed4364' (at pp.c:8619)
      EnumeratorList:  (at pp.c:8620)
        Enumerator: name='AdcP__STATE_READ' (at pp.c:8620)
        Enumerator: name='AdcP__STATE_READNOW' (at pp.c:8621)
        Enumerator: name='AdcP__STATE_READNOW_INVALID_CONFIG' (at pp.c:8622)
  Decl: name='AdcP__state', quals=[], storage=[] (at pp.c:8626)
    TypeDecl: declname='AdcP__state', quals=[] (at pp.c:8626)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='AdcP__owner', quals=[], storage=[] (at pp.c:8627)
    TypeDecl: declname='AdcP__owner', quals=[] (at pp.c:8627)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='AdcP__value', quals=[], storage=[] (at pp.c:8628)
    TypeDecl: declname='AdcP__value', quals=[] (at pp.c:8628)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='AdcP__configure', quals=[], storage=['static'] (at pp.c:8630)
    FuncDecl: quals=None (at pp.c:8630)
      ParamList:  (at pp.c:8630)
        Decl: name='client', quals=[], storage=[] (at pp.c:8630)
          TypeDecl: declname='client', quals=[] (at pp.c:8630)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__configure', quals=[] (at pp.c:8630)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__Read__read', quals=[], storage=['inline', 'static'] (at pp.c:8640)
    FuncDecl: quals=None (at pp.c:8640)
      ParamList:  (at pp.c:8640)
        Decl: name='client', quals=[], storage=[] (at pp.c:8640)
          TypeDecl: declname='client', quals=[] (at pp.c:8640)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__Read__read', quals=[] (at pp.c:8640)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__ResourceRead__granted', quals=[], storage=['static'] (at pp.c:8645)
    FuncDecl: quals=None (at pp.c:8645)
      ParamList:  (at pp.c:8645)
        Decl: name='client', quals=[], storage=[] (at pp.c:8645)
          TypeDecl: declname='client', quals=[] (at pp.c:8645)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceRead__granted', quals=[] (at pp.c:8645)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__SubResourceReadNow__granted', quals=[], storage=['static'] (at pp.c:8647)
    FuncDecl: quals=None (at pp.c:8647)
      ParamList:  (at pp.c:8647)
        Decl: name='nowClient', quals=[], storage=[] (at pp.c:8647)
          TypeDecl: declname='nowClient', quals=[] (at pp.c:8647)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__SubResourceReadNow__granted', quals=[] (at pp.c:8647)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__readDone__runTask', quals=[], storage=['inline', 'static'] (at pp.c:8649)
    FuncDecl: quals=None (at pp.c:8649)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcP__readDone__runTask', quals=[] (at pp.c:8649)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__SingleChannel__singleDataReady', quals=[], storage=['static'] (at pp.c:8655)
    FuncDecl: quals=None (at pp.c:8655)
      ParamList:  (at pp.c:8655)
        Decl: name='client', quals=[], storage=[] (at pp.c:8655)
          TypeDecl: declname='client', quals=[] (at pp.c:8655)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:8655)
          TypeDecl: declname='data', quals=[] (at pp.c:8655)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcP__SingleChannel__singleDataReady', quals=[] (at pp.c:8655)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__SingleChannel__multipleDataReady', quals=[], storage=['inline', 'static'] (at pp.c:8657)
    FuncDecl: quals=None (at pp.c:8657)
      ParamList:  (at pp.c:8657)
        Decl: name='client', quals=[], storage=[] (at pp.c:8657)
          TypeDecl: declname='client', quals=[] (at pp.c:8657)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:8658)
          PtrDecl: quals=[] (at pp.c:8658)
            TypeDecl: declname='buf', quals=[] (at pp.c:8658)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:8658)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:8658)
            IdentifierType: names=['uint16_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8657)
        TypeDecl: declname='AdcP__SingleChannel__multipleDataReady', quals=[] (at pp.c:8657)
          IdentifierType: names=['uint16_t'] (at None)
  Decl: name='AdcP__ResourceRead__default__request', quals=[], storage=['inline', 'static'] (at pp.c:8664)
    FuncDecl: quals=None (at pp.c:8664)
      ParamList:  (at pp.c:8664)
        Decl: name='client', quals=[], storage=[] (at pp.c:8664)
          TypeDecl: declname='client', quals=[] (at pp.c:8664)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceRead__default__request', quals=[] (at pp.c:8664)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__ResourceRead__default__release', quals=[], storage=['inline', 'static'] (at pp.c:8666)
    FuncDecl: quals=None (at pp.c:8666)
      ParamList:  (at pp.c:8666)
        Decl: name='client', quals=[], storage=[] (at pp.c:8666)
          TypeDecl: declname='client', quals=[] (at pp.c:8666)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceRead__default__release', quals=[] (at pp.c:8666)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__Read__default__readDone', quals=[], storage=['inline', 'static'] (at pp.c:8668)
    FuncDecl: quals=None (at pp.c:8668)
      ParamList:  (at pp.c:8668)
        Decl: name='client', quals=[], storage=[] (at pp.c:8668)
          TypeDecl: declname='client', quals=[] (at pp.c:8668)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:8668)
          TypeDecl: declname='result', quals=[] (at pp.c:8668)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='val', quals=[], storage=[] (at pp.c:8668)
          TypeDecl: declname='val', quals=[] (at pp.c:8668)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcP__Read__default__readDone', quals=[] (at pp.c:8668)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__ResourceReadNow__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:8673)
    FuncDecl: quals=None (at pp.c:8673)
      ParamList:  (at pp.c:8673)
        Decl: name='nowClient', quals=[], storage=[] (at pp.c:8673)
          TypeDecl: declname='nowClient', quals=[] (at pp.c:8673)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__ResourceReadNow__default__granted', quals=[] (at pp.c:8673)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__ReadNow__default__readDone', quals=[], storage=['inline', 'static'] (at pp.c:8674)
    FuncDecl: quals=None (at pp.c:8674)
      ParamList:  (at pp.c:8674)
        Decl: name='client', quals=[], storage=[] (at pp.c:8674)
          TypeDecl: declname='client', quals=[] (at pp.c:8674)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:8674)
          TypeDecl: declname='result', quals=[] (at pp.c:8674)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='val', quals=[], storage=[] (at pp.c:8674)
          TypeDecl: declname='val', quals=[] (at pp.c:8674)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcP__ReadNow__default__readDone', quals=[] (at pp.c:8674)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcP__SingleChannel__default__getData', quals=[], storage=['inline', 'static'] (at pp.c:8676)
    FuncDecl: quals=None (at pp.c:8676)
      ParamList:  (at pp.c:8676)
        Decl: name='client', quals=[], storage=[] (at pp.c:8676)
          TypeDecl: declname='client', quals=[] (at pp.c:8676)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcP__SingleChannel__default__getData', quals=[] (at pp.c:8676)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcP__defaultConfig', quals=['const'], storage=[] (at pp.c:8681)
    TypeDecl: declname='AdcP__defaultConfig', quals=['const'] (at pp.c:8681)
      IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    ExprList:  (at pp.c:8681)
      ID: name='INPUT_CHANNEL_NONE' (at pp.c:8681)
      Constant: type='int', value='0' (at pp.c:8681)
      Constant: type='int', value='0' (at pp.c:8681)
      Constant: type='int', value='0' (at pp.c:8681)
      Constant: type='int', value='0' (at pp.c:8681)
      Constant: type='int', value='0' (at pp.c:8681)
      Constant: type='int', value='0' (at pp.c:8681)
      Constant: type='int', value='0' (at pp.c:8681)
  Decl: name='AdcP__Config__default__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:8683)
    FuncDecl: quals=None (at pp.c:8683)
      ParamList:  (at pp.c:8683)
        Decl: name='client', quals=[], storage=[] (at pp.c:8683)
          TypeDecl: declname='client', quals=[] (at pp.c:8683)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8682)
        TypeDecl: declname='AdcP__Config__default__getConfiguration', quals=['const'] (at pp.c:8683)
          IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name='AdcP__SingleChannel__default__configureSingle', quals=[], storage=['inline', 'static'] (at pp.c:8687)
    FuncDecl: quals=None (at pp.c:8687)
      ParamList:  (at pp.c:8687)
        Decl: name='client', quals=[], storage=[] (at pp.c:8687)
          TypeDecl: declname='client', quals=[] (at pp.c:8687)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:8688)
          PtrDecl: quals=[] (at pp.c:8688)
            TypeDecl: declname='config', quals=['const'] (at pp.c:8688)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
      TypeDecl: declname='AdcP__SingleChannel__default__configureSingle', quals=[] (at pp.c:8687)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__MultiChannel__dataReady', quals=[], storage=['static'] (at pp.c:8690)
    FuncDecl: quals=None (at pp.c:8690)
      ParamList:  (at pp.c:8692)
        Decl: name='arg_0x1026450c8', quals=[], storage=[] (at pp.c:8692)
          TypeDecl: declname='arg_0x1026450c8', quals=[] (at pp.c:8692)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buffer', quals=[], storage=[] (at pp.c:8694)
          PtrDecl: quals=[] (at pp.c:8694)
            TypeDecl: declname='buffer', quals=[] (at pp.c:8694)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:8694)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:8694)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__MultiChannel__dataReady', quals=[] (at pp.c:8690)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__getCtl0', quals=[], storage=['static'] (at pp.c:8696)
    FuncDecl: quals=None (at pp.c:8696)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__getCtl0', quals=[] (at pp.c:8696)
        IdentifierType: names=['adc12ctl0_t'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__getMCtl', quals=[], storage=['static'] (at pp.c:8698)
    FuncDecl: quals=None (at pp.c:8698)
      ParamList:  (at pp.c:8698)
        Decl: name='idx', quals=[], storage=[] (at pp.c:8698)
          TypeDecl: declname='idx', quals=[] (at pp.c:8698)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__getMCtl', quals=[] (at pp.c:8698)
        IdentifierType: names=['adc12memctl_t'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__resetIFGs', quals=[], storage=['static'] (at pp.c:8700)
    FuncDecl: quals=None (at pp.c:8700)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__resetIFGs', quals=[] (at pp.c:8700)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__setMCtl', quals=[], storage=['static'] (at pp.c:8702)
    FuncDecl: quals=None (at pp.c:8702)
      ParamList:  (at pp.c:8702)
        Decl: name='idx', quals=[], storage=[] (at pp.c:8702)
          TypeDecl: declname='idx', quals=[] (at pp.c:8702)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='memControl', quals=[], storage=[] (at pp.c:8702)
          TypeDecl: declname='memControl', quals=[] (at pp.c:8702)
            IdentifierType: names=['adc12memctl_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__setMCtl', quals=[] (at pp.c:8702)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__startConversion', quals=[], storage=['static'] (at pp.c:8704)
    FuncDecl: quals=None (at pp.c:8704)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__startConversion', quals=[] (at pp.c:8704)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__setCtl0', quals=[], storage=['static'] (at pp.c:8706)
    FuncDecl: quals=None (at pp.c:8706)
      ParamList:  (at pp.c:8706)
        Decl: name='control0', quals=[], storage=[] (at pp.c:8706)
          TypeDecl: declname='control0', quals=[] (at pp.c:8706)
            IdentifierType: names=['adc12ctl0_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__setCtl0', quals=[] (at pp.c:8706)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__getMem', quals=[], storage=['static'] (at pp.c:8708)
    FuncDecl: quals=None (at pp.c:8708)
      ParamList:  (at pp.c:8708)
        Decl: name='idx', quals=[], storage=[] (at pp.c:8708)
          TypeDecl: declname='idx', quals=[] (at pp.c:8708)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__getMem', quals=[] (at pp.c:8708)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__setIEFlags', quals=[], storage=['static'] (at pp.c:8714)
    FuncDecl: quals=None (at pp.c:8714)
      ParamList:  (at pp.c:8714)
        Decl: name='mask', quals=[], storage=[] (at pp.c:8714)
          TypeDecl: declname='mask', quals=[] (at pp.c:8714)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__setIEFlags', quals=[] (at pp.c:8714)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__stopConversion', quals=[], storage=['static'] (at pp.c:8716)
    FuncDecl: quals=None (at pp.c:8716)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__stopConversion', quals=[] (at pp.c:8716)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__setCtl1', quals=[], storage=['static'] (at pp.c:8718)
    FuncDecl: quals=None (at pp.c:8718)
      ParamList:  (at pp.c:8718)
        Decl: name='control1', quals=[], storage=[] (at pp.c:8718)
          TypeDecl: declname='control1', quals=[] (at pp.c:8718)
            IdentifierType: names=['adc12ctl1_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__setCtl1', quals=[] (at pp.c:8718)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port64__makeInput', quals=[], storage=['static'] (at pp.c:8720)
    FuncDecl: quals=None (at pp.c:8720)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port64__makeInput', quals=[] (at pp.c:8720)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port64__selectIOFunc', quals=[], storage=['static'] (at pp.c:8722)
    FuncDecl: quals=None (at pp.c:8722)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port64__selectIOFunc', quals=[] (at pp.c:8722)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port64__selectModuleFunc', quals=[], storage=['static'] (at pp.c:8724)
    FuncDecl: quals=None (at pp.c:8724)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port64__selectModuleFunc', quals=[] (at pp.c:8724)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__CompareA1__setEvent', quals=[], storage=['static'] (at pp.c:8726)
    FuncDecl: quals=None (at pp.c:8726)
      ParamList:  (at pp.c:8726)
        Decl: name='time', quals=[], storage=[] (at pp.c:8726)
          TypeDecl: declname='time', quals=[] (at pp.c:8726)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__CompareA1__setEvent', quals=[] (at pp.c:8726)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__ControlA0__setControl', quals=[], storage=['static'] (at pp.c:8728)
    FuncDecl: quals=None (at pp.c:8728)
      ParamList:  (at pp.c:8728)
        Decl: name='control', quals=[], storage=[] (at pp.c:8728)
          TypeDecl: declname='control', quals=[] (at pp.c:8728)
            IdentifierType: names=['msp430_compare_control_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__ControlA0__setControl', quals=[] (at pp.c:8728)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port62__makeInput', quals=[], storage=['static'] (at pp.c:8730)
    FuncDecl: quals=None (at pp.c:8730)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port62__makeInput', quals=[] (at pp.c:8730)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port62__selectIOFunc', quals=[], storage=['static'] (at pp.c:8732)
    FuncDecl: quals=None (at pp.c:8732)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port62__selectIOFunc', quals=[] (at pp.c:8732)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port62__selectModuleFunc', quals=[], storage=['static'] (at pp.c:8734)
    FuncDecl: quals=None (at pp.c:8734)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port62__selectModuleFunc', quals=[] (at pp.c:8734)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Overflow__memOverflow', quals=[], storage=['static'] (at pp.c:8736)
    FuncDecl: quals=None (at pp.c:8736)
      ParamList:  (at pp.c:8738)
        Decl: name='arg_0x102644020', quals=[], storage=[] (at pp.c:8738)
          TypeDecl: declname='arg_0x102644020', quals=[] (at pp.c:8738)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Overflow__memOverflow', quals=[] (at pp.c:8736)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Overflow__conversionTimeOverflow', quals=[], storage=['static'] (at pp.c:8740)
    FuncDecl: quals=None (at pp.c:8740)
      ParamList:  (at pp.c:8742)
        Decl: name='arg_0x102644020', quals=[], storage=[] (at pp.c:8742)
          TypeDecl: declname='arg_0x102644020', quals=[] (at pp.c:8742)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Overflow__conversionTimeOverflow', quals=[] (at pp.c:8740)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port67__makeInput', quals=[], storage=['static'] (at pp.c:8744)
    FuncDecl: quals=None (at pp.c:8744)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port67__makeInput', quals=[] (at pp.c:8744)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port67__selectIOFunc', quals=[], storage=['static'] (at pp.c:8746)
    FuncDecl: quals=None (at pp.c:8746)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port67__selectIOFunc', quals=[] (at pp.c:8746)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port67__selectModuleFunc', quals=[], storage=['static'] (at pp.c:8748)
    FuncDecl: quals=None (at pp.c:8748)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port67__selectModuleFunc', quals=[] (at pp.c:8748)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port60__makeInput', quals=[], storage=['static'] (at pp.c:8750)
    FuncDecl: quals=None (at pp.c:8750)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port60__makeInput', quals=[] (at pp.c:8750)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port60__selectIOFunc', quals=[], storage=['static'] (at pp.c:8752)
    FuncDecl: quals=None (at pp.c:8752)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port60__selectIOFunc', quals=[] (at pp.c:8752)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port60__selectModuleFunc', quals=[], storage=['static'] (at pp.c:8754)
    FuncDecl: quals=None (at pp.c:8754)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port60__selectModuleFunc', quals=[] (at pp.c:8754)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port65__makeInput', quals=[], storage=['static'] (at pp.c:8756)
    FuncDecl: quals=None (at pp.c:8756)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port65__makeInput', quals=[] (at pp.c:8756)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port65__selectIOFunc', quals=[], storage=['static'] (at pp.c:8758)
    FuncDecl: quals=None (at pp.c:8758)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port65__selectIOFunc', quals=[] (at pp.c:8758)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port65__selectModuleFunc', quals=[], storage=['static'] (at pp.c:8760)
    FuncDecl: quals=None (at pp.c:8760)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port65__selectModuleFunc', quals=[] (at pp.c:8760)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__TimerA__clear', quals=[], storage=['static'] (at pp.c:8762)
    FuncDecl: quals=None (at pp.c:8762)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__TimerA__clear', quals=[] (at pp.c:8762)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__TimerA__setClockSource', quals=[], storage=['static'] (at pp.c:8765)
    FuncDecl: quals=None (at pp.c:8765)
      ParamList:  (at pp.c:8765)
        Decl: name='clockSource', quals=[], storage=[] (at pp.c:8765)
          TypeDecl: declname='clockSource', quals=[] (at pp.c:8765)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__TimerA__setClockSource', quals=[] (at pp.c:8765)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__TimerA__disableEvents', quals=[], storage=['static'] (at pp.c:8767)
    FuncDecl: quals=None (at pp.c:8767)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__TimerA__disableEvents', quals=[] (at pp.c:8767)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__TimerA__setMode', quals=[], storage=['static'] (at pp.c:8769)
    FuncDecl: quals=None (at pp.c:8769)
      ParamList:  (at pp.c:8769)
        Decl: name='mode', quals=[], storage=[] (at pp.c:8769)
          TypeDecl: declname='mode', quals=[] (at pp.c:8769)
            IdentifierType: names=['int'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__TimerA__setMode', quals=[] (at pp.c:8769)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__TimerA__setInputDivider', quals=[], storage=['static'] (at pp.c:8775)
    FuncDecl: quals=None (at pp.c:8775)
      ParamList:  (at pp.c:8775)
        Decl: name='inputDivider', quals=[], storage=[] (at pp.c:8775)
          TypeDecl: declname='inputDivider', quals=[] (at pp.c:8775)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__TimerA__setInputDivider', quals=[] (at pp.c:8775)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__ADCArbiterInfo__userId', quals=[], storage=['static'] (at pp.c:8777)
    FuncDecl: quals=None (at pp.c:8777)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__ADCArbiterInfo__userId', quals=[] (at pp.c:8777)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430Adc12ImplP__ControlA1__setControl', quals=[], storage=['static'] (at pp.c:8779)
    FuncDecl: quals=None (at pp.c:8779)
      ParamList:  (at pp.c:8779)
        Decl: name='control', quals=[], storage=[] (at pp.c:8779)
          TypeDecl: declname='control', quals=[] (at pp.c:8779)
            IdentifierType: names=['msp430_compare_control_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__ControlA1__setControl', quals=[] (at pp.c:8779)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__multipleDataReady', quals=[], storage=['static'] (at pp.c:8781)
    FuncDecl: quals=None (at pp.c:8781)
      ParamList:  (at pp.c:8783)
        Decl: name='arg_0x102648ac0', quals=[], storage=[] (at pp.c:8783)
          TypeDecl: declname='arg_0x102648ac0', quals=[] (at pp.c:8783)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buffer', quals=[], storage=[] (at pp.c:8785)
          PtrDecl: quals=[] (at pp.c:8785)
            TypeDecl: declname='buffer', quals=[] (at pp.c:8785)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:8785)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:8785)
            IdentifierType: names=['uint16_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8781)
        TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__multipleDataReady', quals=[] (at pp.c:8781)
          IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__singleDataReady', quals=[], storage=['static'] (at pp.c:8787)
    FuncDecl: quals=None (at pp.c:8787)
      ParamList:  (at pp.c:8789)
        Decl: name='arg_0x102648ac0', quals=[], storage=[] (at pp.c:8789)
          TypeDecl: declname='arg_0x102648ac0', quals=[] (at pp.c:8789)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:8791)
          TypeDecl: declname='data', quals=[] (at pp.c:8791)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__singleDataReady', quals=[] (at pp.c:8787)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__Port63__makeInput', quals=[], storage=['static'] (at pp.c:8793)
    FuncDecl: quals=None (at pp.c:8793)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port63__makeInput', quals=[] (at pp.c:8793)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port63__selectIOFunc', quals=[], storage=['static'] (at pp.c:8795)
    FuncDecl: quals=None (at pp.c:8795)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port63__selectIOFunc', quals=[] (at pp.c:8795)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port63__selectModuleFunc', quals=[], storage=['static'] (at pp.c:8797)
    FuncDecl: quals=None (at pp.c:8797)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port63__selectModuleFunc', quals=[] (at pp.c:8797)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__CompareA0__setEvent', quals=[], storage=['static'] (at pp.c:8799)
    FuncDecl: quals=None (at pp.c:8799)
      ParamList:  (at pp.c:8799)
        Decl: name='time', quals=[], storage=[] (at pp.c:8799)
          TypeDecl: declname='time', quals=[] (at pp.c:8799)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__CompareA0__setEvent', quals=[] (at pp.c:8799)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port61__makeInput', quals=[], storage=['static'] (at pp.c:8801)
    FuncDecl: quals=None (at pp.c:8801)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port61__makeInput', quals=[] (at pp.c:8801)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port61__selectIOFunc', quals=[], storage=['static'] (at pp.c:8803)
    FuncDecl: quals=None (at pp.c:8803)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port61__selectIOFunc', quals=[] (at pp.c:8803)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port61__selectModuleFunc', quals=[], storage=['static'] (at pp.c:8805)
    FuncDecl: quals=None (at pp.c:8805)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port61__selectModuleFunc', quals=[] (at pp.c:8805)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port66__makeInput', quals=[], storage=['static'] (at pp.c:8807)
    FuncDecl: quals=None (at pp.c:8807)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port66__makeInput', quals=[] (at pp.c:8807)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port66__selectIOFunc', quals=[], storage=['static'] (at pp.c:8809)
    FuncDecl: quals=None (at pp.c:8809)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port66__selectIOFunc', quals=[] (at pp.c:8809)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Port66__selectModuleFunc', quals=[], storage=['static'] (at pp.c:8811)
    FuncDecl: quals=None (at pp.c:8811)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Port66__selectModuleFunc', quals=[] (at pp.c:8811)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:8813)
    Enum: name='Msp430Adc12ImplP____nesc_unnamed4365' (at pp.c:8813)
      EnumeratorList:  (at pp.c:8814)
        Enumerator: name='Msp430Adc12ImplP__SINGLE_DATA' (at pp.c:8814)
          Constant: type='int', value='1' (at pp.c:8814)
        Enumerator: name='Msp430Adc12ImplP__SINGLE_DATA_REPEAT' (at pp.c:8815)
          Constant: type='int', value='2' (at pp.c:8815)
        Enumerator: name='Msp430Adc12ImplP__MULTIPLE_DATA' (at pp.c:8816)
          Constant: type='int', value='4' (at pp.c:8816)
        Enumerator: name='Msp430Adc12ImplP__MULTIPLE_DATA_REPEAT' (at pp.c:8817)
          Constant: type='int', value='8' (at pp.c:8817)
        Enumerator: name='Msp430Adc12ImplP__MULTI_CHANNEL' (at pp.c:8818)
          Constant: type='int', value='16' (at pp.c:8818)
        Enumerator: name='Msp430Adc12ImplP__CONVERSION_MODE_MASK' (at pp.c:8819)
          Constant: type='int', value='0x1F' (at pp.c:8819)
        Enumerator: name='Msp430Adc12ImplP__ADC_BUSY' (at pp.c:8821)
          Constant: type='int', value='32' (at pp.c:8821)
        Enumerator: name='Msp430Adc12ImplP__USE_TIMERA' (at pp.c:8822)
          Constant: type='int', value='64' (at pp.c:8822)
        Enumerator: name='Msp430Adc12ImplP__ADC_OVERFLOW' (at pp.c:8823)
          Constant: type='int', value='128' (at pp.c:8823)
  Decl: name='Msp430Adc12ImplP__state', quals=[], storage=[] (at pp.c:8826)
    TypeDecl: declname='Msp430Adc12ImplP__state', quals=[] (at pp.c:8826)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430Adc12ImplP__resultBufferLength', quals=[], storage=[] (at pp.c:8828)
    TypeDecl: declname='Msp430Adc12ImplP__resultBufferLength', quals=[] (at pp.c:8828)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430Adc12ImplP__resultBufferStart', quals=[], storage=[] (at pp.c:8829)
    PtrDecl: quals=[] (at pp.c:8829)
      TypeDecl: declname='Msp430Adc12ImplP__resultBufferStart', quals=[] (at pp.c:8829)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430Adc12ImplP__resultBufferIndex', quals=[], storage=[] (at pp.c:8830)
    TypeDecl: declname='Msp430Adc12ImplP__resultBufferIndex', quals=[] (at pp.c:8830)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430Adc12ImplP__numChannels', quals=[], storage=[] (at pp.c:8831)
    TypeDecl: declname='Msp430Adc12ImplP__numChannels', quals=[] (at pp.c:8831)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430Adc12ImplP__clientID', quals=[], storage=[] (at pp.c:8832)
    TypeDecl: declname='Msp430Adc12ImplP__clientID', quals=[] (at pp.c:8832)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='Msp430Adc12ImplP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:8834)
    FuncDecl: quals=None (at pp.c:8834)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Init__init', quals=[] (at pp.c:8834)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__prepareTimerA', quals=[], storage=['inline', 'static'] (at pp.c:8845)
    FuncDecl: quals=None (at pp.c:8845)
      ParamList:  (at pp.c:8845)
        Decl: name='interval', quals=[], storage=[] (at pp.c:8845)
          TypeDecl: declname='interval', quals=[] (at pp.c:8845)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='csSAMPCON', quals=[], storage=[] (at pp.c:8845)
          TypeDecl: declname='csSAMPCON', quals=[] (at pp.c:8845)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='cdSAMPCON', quals=[], storage=[] (at pp.c:8845)
          TypeDecl: declname='cdSAMPCON', quals=[] (at pp.c:8845)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__prepareTimerA', quals=[] (at pp.c:8845)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__startTimerA', quals=[], storage=['inline', 'static'] (at pp.c:8847)
    FuncDecl: quals=None (at pp.c:8847)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__startTimerA', quals=[] (at pp.c:8847)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__configureAdcPin', quals=[], storage=['inline', 'static'] (at pp.c:8849)
    FuncDecl: quals=None (at pp.c:8849)
      ParamList:  (at pp.c:8849)
        Decl: name='inch', quals=[], storage=[] (at pp.c:8849)
          TypeDecl: declname='inch', quals=[] (at pp.c:8849)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__configureAdcPin', quals=[] (at pp.c:8849)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__resetAdcPin', quals=[], storage=['static'] (at pp.c:8851)
    FuncDecl: quals=None (at pp.c:8851)
      ParamList:  (at pp.c:8851)
        Decl: name='inch', quals=[], storage=[] (at pp.c:8851)
          TypeDecl: declname='inch', quals=[] (at pp.c:8851)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__resetAdcPin', quals=[] (at pp.c:8851)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__configureSingle', quals=[], storage=['static'] (at pp.c:8853)
    FuncDecl: quals=None (at pp.c:8853)
      ParamList:  (at pp.c:8853)
        Decl: name='id', quals=[], storage=[] (at pp.c:8853)
          TypeDecl: declname='id', quals=[] (at pp.c:8853)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:8854)
          PtrDecl: quals=[] (at pp.c:8854)
            TypeDecl: declname='config', quals=['const'] (at pp.c:8854)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__configureSingle', quals=[] (at pp.c:8853)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__configureMultiple', quals=[], storage=['inline', 'static'] (at pp.c:8856)
    FuncDecl: quals=None (at pp.c:8856)
      ParamList:  (at pp.c:8856)
        Decl: name='id', quals=[], storage=[] (at pp.c:8856)
          TypeDecl: declname='id', quals=[] (at pp.c:8856)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:8857)
          PtrDecl: quals=[] (at pp.c:8857)
            TypeDecl: declname='config', quals=['const'] (at pp.c:8857)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:8858)
          PtrDecl: quals=[] (at pp.c:8858)
            TypeDecl: declname='buf', quals=[] (at pp.c:8858)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:8858)
          TypeDecl: declname='length', quals=[] (at pp.c:8858)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='jiffies', quals=[], storage=[] (at pp.c:8858)
          TypeDecl: declname='jiffies', quals=[] (at pp.c:8858)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__configureMultiple', quals=[] (at pp.c:8856)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__getData', quals=[], storage=['static'] (at pp.c:8860)
    FuncDecl: quals=None (at pp.c:8860)
      ParamList:  (at pp.c:8860)
        Decl: name='id', quals=[], storage=[] (at pp.c:8860)
          TypeDecl: declname='id', quals=[] (at pp.c:8860)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__getData', quals=[] (at pp.c:8860)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__stopConversion', quals=[], storage=['static'] (at pp.c:8862)
    FuncDecl: quals=None (at pp.c:8862)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__stopConversion', quals=[] (at pp.c:8862)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__TimerA__overflow', quals=[], storage=['inline', 'static'] (at pp.c:8864)
    FuncDecl: quals=None (at pp.c:8864)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__TimerA__overflow', quals=[] (at pp.c:8864)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__CompareA0__fired', quals=[], storage=['inline', 'static'] (at pp.c:8865)
    FuncDecl: quals=None (at pp.c:8865)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__CompareA0__fired', quals=[] (at pp.c:8865)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__CompareA1__fired', quals=[], storage=['inline', 'static'] (at pp.c:8866)
    FuncDecl: quals=None (at pp.c:8866)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__CompareA1__fired', quals=[] (at pp.c:8866)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__HplAdc12__conversionDone', quals=[], storage=['inline', 'static'] (at pp.c:8868)
    FuncDecl: quals=None (at pp.c:8868)
      ParamList:  (at pp.c:8868)
        Decl: name='iv', quals=[], storage=[] (at pp.c:8868)
          TypeDecl: declname='iv', quals=[] (at pp.c:8868)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__conversionDone', quals=[] (at pp.c:8868)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__default__singleDataReady', quals=[], storage=['inline', 'static'] (at pp.c:8870)
    FuncDecl: quals=None (at pp.c:8870)
      ParamList:  (at pp.c:8870)
        Decl: name='id', quals=[], storage=[] (at pp.c:8870)
          TypeDecl: declname='id', quals=[] (at pp.c:8870)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:8870)
          TypeDecl: declname='data', quals=[] (at pp.c:8870)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__default__singleDataReady', quals=[] (at pp.c:8870)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430Adc12ImplP__SingleChannel__default__multipleDataReady', quals=[], storage=['inline', 'static'] (at pp.c:8875)
    FuncDecl: quals=None (at pp.c:8875)
      ParamList:  (at pp.c:8875)
        Decl: name='id', quals=[], storage=[] (at pp.c:8875)
          TypeDecl: declname='id', quals=[] (at pp.c:8875)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:8876)
          PtrDecl: quals=[] (at pp.c:8876)
            TypeDecl: declname='buf', quals=[] (at pp.c:8876)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:8876)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:8876)
            IdentifierType: names=['uint16_t'] (at None)
      PtrDecl: quals=[] (at pp.c:8875)
        TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__default__multipleDataReady', quals=[] (at pp.c:8875)
          IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430Adc12ImplP__MultiChannel__default__dataReady', quals=[], storage=['inline', 'static'] (at pp.c:8881)
    FuncDecl: quals=None (at pp.c:8881)
      ParamList:  (at pp.c:8881)
        Decl: name='id', quals=[], storage=[] (at pp.c:8881)
          TypeDecl: declname='id', quals=[] (at pp.c:8881)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buffer', quals=[], storage=[] (at pp.c:8881)
          PtrDecl: quals=[] (at pp.c:8881)
            TypeDecl: declname='buffer', quals=[] (at pp.c:8881)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:8881)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:8881)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__MultiChannel__default__dataReady', quals=[] (at pp.c:8881)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Overflow__default__memOverflow', quals=[], storage=['inline', 'static'] (at pp.c:8883)
    FuncDecl: quals=None (at pp.c:8883)
      ParamList:  (at pp.c:8883)
        Decl: name='id', quals=[], storage=[] (at pp.c:8883)
          TypeDecl: declname='id', quals=[] (at pp.c:8883)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Overflow__default__memOverflow', quals=[] (at pp.c:8883)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ImplP__Overflow__default__conversionTimeOverflow', quals=[], storage=['inline', 'static'] (at pp.c:8884)
    FuncDecl: quals=None (at pp.c:8884)
      ParamList:  (at pp.c:8884)
        Decl: name='id', quals=[], storage=[] (at pp.c:8884)
          TypeDecl: declname='id', quals=[] (at pp.c:8884)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430Adc12ImplP__Overflow__default__conversionTimeOverflow', quals=[] (at pp.c:8884)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__conversionDone', quals=[], storage=['static'] (at pp.c:8886)
    FuncDecl: quals=None (at pp.c:8886)
      ParamList:  (at pp.c:8886)
        Decl: name='iv', quals=[], storage=[] (at pp.c:8886)
          TypeDecl: declname='iv', quals=[] (at pp.c:8886)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__conversionDone', quals=[] (at pp.c:8886)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__ADC12CTL0@"0x01A0"', quals=['volatile'], storage=['static'] (at pp.c:8888)
    TypeDecl: declname='HplAdc12P__ADC12CTL0@"0x01A0"', quals=['volatile'] (at pp.c:8888)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='HplAdc12P__ADC12CTL1@"0x01A2"', quals=['volatile'], storage=['static'] (at pp.c:8889)
    TypeDecl: declname='HplAdc12P__ADC12CTL1@"0x01A2"', quals=['volatile'] (at pp.c:8889)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='HplAdc12P__ADC12IFG@"0x01A4"', quals=['volatile'], storage=['static'] (at pp.c:8890)
    TypeDecl: declname='HplAdc12P__ADC12IFG@"0x01A4"', quals=['volatile'] (at pp.c:8890)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='HplAdc12P__ADC12IE@"0x01A6"', quals=['volatile'], storage=['static'] (at pp.c:8891)
    TypeDecl: declname='HplAdc12P__ADC12IE@"0x01A6"', quals=['volatile'] (at pp.c:8891)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='HplAdc12P__ADC12IV@"0x01A8"', quals=['volatile'], storage=['static'] (at pp.c:8892)
    TypeDecl: declname='HplAdc12P__ADC12IV@"0x01A8"', quals=['volatile'] (at pp.c:8892)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='HplAdc12P__int2adc12ctl0', quals=[], storage=['inline', 'static'] (at pp.c:8894)
    FuncDecl: quals=None (at pp.c:8894)
      ParamList:  (at pp.c:8894)
        Decl: name='x', quals=[], storage=[] (at pp.c:8894)
          TypeDecl: declname='x', quals=[] (at pp.c:8894)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='HplAdc12P__int2adc12ctl0', quals=[] (at pp.c:8894)
        IdentifierType: names=['adc12ctl0_t'] (at None)
  Decl: name='HplAdc12P__adc12ctl0cast2int', quals=[], storage=['inline', 'static'] (at pp.c:8896)
    FuncDecl: quals=None (at pp.c:8896)
      ParamList:  (at pp.c:8896)
        Decl: name='x', quals=[], storage=[] (at pp.c:8896)
          TypeDecl: declname='x', quals=[] (at pp.c:8896)
            IdentifierType: names=['adc12ctl0_t'] (at None)
      TypeDecl: declname='HplAdc12P__adc12ctl0cast2int', quals=[] (at pp.c:8896)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='HplAdc12P__adc12ctl1cast2int', quals=[], storage=['inline', 'static'] (at pp.c:8897)
    FuncDecl: quals=None (at pp.c:8897)
      ParamList:  (at pp.c:8897)
        Decl: name='x', quals=[], storage=[] (at pp.c:8897)
          TypeDecl: declname='x', quals=[] (at pp.c:8897)
            IdentifierType: names=['adc12ctl1_t'] (at None)
      TypeDecl: declname='HplAdc12P__adc12ctl1cast2int', quals=[] (at pp.c:8897)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='HplAdc12P__adc12memctl2int', quals=[], storage=['inline', 'static'] (at pp.c:8898)
    FuncDecl: quals=None (at pp.c:8898)
      ParamList:  (at pp.c:8898)
        Decl: name='x', quals=[], storage=[] (at pp.c:8898)
          TypeDecl: declname='x', quals=[] (at pp.c:8898)
            IdentifierType: names=['adc12memctl_t'] (at None)
      TypeDecl: declname='HplAdc12P__adc12memctl2int', quals=[] (at pp.c:8898)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='HplAdc12P__int2adc12memctl', quals=[], storage=['inline', 'static'] (at pp.c:8899)
    FuncDecl: quals=None (at pp.c:8899)
      ParamList:  (at pp.c:8899)
        Decl: name='x', quals=[], storage=[] (at pp.c:8899)
          TypeDecl: declname='x', quals=[] (at pp.c:8899)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplAdc12P__int2adc12memctl', quals=[] (at pp.c:8899)
        IdentifierType: names=['adc12memctl_t'] (at None)
  Decl: name='HplAdc12P__HplAdc12__setCtl0', quals=[], storage=['inline', 'static'] (at pp.c:8901)
    FuncDecl: quals=None (at pp.c:8901)
      ParamList:  (at pp.c:8901)
        Decl: name='control0', quals=[], storage=[] (at pp.c:8901)
          TypeDecl: declname='control0', quals=[] (at pp.c:8901)
            IdentifierType: names=['adc12ctl0_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__setCtl0', quals=[] (at pp.c:8901)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__setCtl1', quals=[], storage=['inline', 'static'] (at pp.c:8905)
    FuncDecl: quals=None (at pp.c:8905)
      ParamList:  (at pp.c:8905)
        Decl: name='control1', quals=[], storage=[] (at pp.c:8905)
          TypeDecl: declname='control1', quals=[] (at pp.c:8905)
            IdentifierType: names=['adc12ctl1_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__setCtl1', quals=[] (at pp.c:8905)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__getCtl0', quals=[], storage=['inline', 'static'] (at pp.c:8909)
    FuncDecl: quals=None (at pp.c:8909)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__getCtl0', quals=[] (at pp.c:8909)
        IdentifierType: names=['adc12ctl0_t'] (at None)
  Decl: name='HplAdc12P__HplAdc12__setMCtl', quals=[], storage=['inline', 'static'] (at pp.c:8917)
    FuncDecl: quals=None (at pp.c:8917)
      ParamList:  (at pp.c:8917)
        Decl: name='i', quals=[], storage=[] (at pp.c:8917)
          TypeDecl: declname='i', quals=[] (at pp.c:8917)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='memCtl', quals=[], storage=[] (at pp.c:8917)
          TypeDecl: declname='memCtl', quals=[] (at pp.c:8917)
            IdentifierType: names=['adc12memctl_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__setMCtl', quals=[] (at pp.c:8917)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__getMCtl', quals=[], storage=['inline', 'static'] (at pp.c:8921)
    FuncDecl: quals=None (at pp.c:8921)
      ParamList:  (at pp.c:8921)
        Decl: name='i', quals=[], storage=[] (at pp.c:8921)
          TypeDecl: declname='i', quals=[] (at pp.c:8921)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__getMCtl', quals=[] (at pp.c:8921)
        IdentifierType: names=['adc12memctl_t'] (at None)
  Decl: name='HplAdc12P__HplAdc12__getMem', quals=[], storage=['inline', 'static'] (at pp.c:8925)
    FuncDecl: quals=None (at pp.c:8925)
      ParamList:  (at pp.c:8925)
        Decl: name='i', quals=[], storage=[] (at pp.c:8925)
          TypeDecl: declname='i', quals=[] (at pp.c:8925)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__getMem', quals=[] (at pp.c:8925)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='HplAdc12P__HplAdc12__setIEFlags', quals=[], storage=['inline', 'static'] (at pp.c:8929)
    FuncDecl: quals=None (at pp.c:8929)
      ParamList:  (at pp.c:8929)
        Decl: name='mask', quals=[], storage=[] (at pp.c:8929)
          TypeDecl: declname='mask', quals=[] (at pp.c:8929)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__setIEFlags', quals=[] (at pp.c:8929)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__resetIFGs', quals=[], storage=['inline', 'static'] (at pp.c:8932)
    FuncDecl: quals=None (at pp.c:8932)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__resetIFGs', quals=[] (at pp.c:8932)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__startConversion', quals=[], storage=['inline', 'static'] (at pp.c:8937)
    FuncDecl: quals=None (at pp.c:8937)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__startConversion', quals=[] (at pp.c:8937)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__stopConversion', quals=[], storage=['static'] (at pp.c:8942)
    FuncDecl: quals=None (at pp.c:8942)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__stopConversion', quals=[] (at pp.c:8942)
        IdentifierType: names=['void'] (at None)
  Decl: name='HplAdc12P__HplAdc12__isBusy', quals=[], storage=['inline', 'static'] (at pp.c:8944)
    FuncDecl: quals=None (at pp.c:8944)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='HplAdc12P__HplAdc12__isBusy', quals=[] (at pp.c:8944)
        IdentifierType: names=['bool'] (at None)
  Decl: name='sig_ADC_VECTOR', quals=[], storage=[] (at pp.c:8946)
    FuncDecl: quals=None (at pp.c:8946)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='sig_ADC_VECTOR', quals=[] (at pp.c:8946)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:8948)
    Enum: name='RoundRobinResourceQueueC__0____nesc_unnamed4366' (at pp.c:8948)
      EnumeratorList:  (at pp.c:8949)
        Enumerator: name='RoundRobinResourceQueueC__0__NO_ENTRY' (at pp.c:8949)
          Constant: type='int', value='0xFF' (at pp.c:8949)
        Enumerator: name='RoundRobinResourceQueueC__0__SIZE' (at pp.c:8950)
          TernaryOp:  (at pp.c:8950)
            Constant: type='int', value='3U' (at pp.c:8950)
            BinaryOp: op='+' (at pp.c:8950)
              BinaryOp: op='/' (at pp.c:8950)
                BinaryOp: op='-' (at pp.c:8950)
                  Constant: type='int', value='3U' (at pp.c:8950)
                  Constant: type='int', value='1' (at pp.c:8950)
                Constant: type='int', value='8' (at pp.c:8950)
              Constant: type='int', value='1' (at pp.c:8950)
            Constant: type='int', value='0' (at pp.c:8950)
  Decl: name='RoundRobinResourceQueueC__0__resQ', quals=[], storage=[] (at pp.c:8953)
    ArrayDecl:  (at pp.c:8953)
      TypeDecl: declname='RoundRobinResourceQueueC__0__resQ', quals=[] (at pp.c:8953)
        IdentifierType: names=['uint8_t'] (at None)
      ID: name='RoundRobinResourceQueueC__0__SIZE' (at pp.c:8953)
  Decl: name='RoundRobinResourceQueueC__0__last', quals=[], storage=[] (at pp.c:8954)
    TypeDecl: declname='RoundRobinResourceQueueC__0__last', quals=[] (at pp.c:8954)
      IdentifierType: names=['uint8_t'] (at None)
    Constant: type='int', value='0' (at pp.c:8954)
  Decl: name='RoundRobinResourceQueueC__0__clearEntry', quals=[], storage=['inline', 'static'] (at pp.c:8956)
    FuncDecl: quals=None (at pp.c:8956)
      ParamList:  (at pp.c:8956)
        Decl: name='id', quals=[], storage=[] (at pp.c:8956)
          TypeDecl: declname='id', quals=[] (at pp.c:8956)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__clearEntry', quals=[] (at pp.c:8956)
        IdentifierType: names=['void'] (at None)
  Decl: name='RoundRobinResourceQueueC__0__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:8960)
    FuncDecl: quals=None (at pp.c:8960)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__Init__init', quals=[] (at pp.c:8960)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__isEmpty', quals=[], storage=['inline', 'static'] (at pp.c:8965)
    FuncDecl: quals=None (at pp.c:8965)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__isEmpty', quals=[] (at pp.c:8965)
        IdentifierType: names=['bool'] (at None)
  Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__isEnqueued', quals=[], storage=['static'] (at pp.c:8974)
    FuncDecl: quals=None (at pp.c:8974)
      ParamList:  (at pp.c:8974)
        Decl: name='id', quals=[], storage=[] (at pp.c:8974)
          TypeDecl: declname='id', quals=[] (at pp.c:8974)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__isEnqueued', quals=[] (at pp.c:8974)
        IdentifierType: names=['bool'] (at None)
  Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__dequeue', quals=[], storage=['inline', 'static'] (at pp.c:8978)
    FuncDecl: quals=None (at pp.c:8978)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__dequeue', quals=[] (at pp.c:8978)
        IdentifierType: names=['resource_client_id_t'] (at None)
  Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__enqueue', quals=[], storage=['inline', 'static'] (at pp.c:8980)
    FuncDecl: quals=None (at pp.c:8980)
      ParamList:  (at pp.c:8980)
        Decl: name='id', quals=[], storage=[] (at pp.c:8980)
          TypeDecl: declname='id', quals=[] (at pp.c:8980)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__enqueue', quals=[] (at pp.c:8980)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SimpleArbiterP__0__ResourceRequested__requested', quals=[], storage=['static'] (at pp.c:8982)
    FuncDecl: quals=None (at pp.c:8982)
      ParamList:  (at pp.c:8984)
        Decl: name='arg_0x102776c80', quals=[], storage=[] (at pp.c:8984)
          TypeDecl: declname='arg_0x102776c80', quals=[] (at pp.c:8984)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ResourceRequested__requested', quals=[] (at pp.c:8982)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__ResourceConfigure__unconfigure', quals=[], storage=['static'] (at pp.c:8986)
    FuncDecl: quals=None (at pp.c:8986)
      ParamList:  (at pp.c:8988)
        Decl: name='arg_0x102774220', quals=[], storage=[] (at pp.c:8988)
          TypeDecl: declname='arg_0x102774220', quals=[] (at pp.c:8988)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ResourceConfigure__unconfigure', quals=[] (at pp.c:8986)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__ResourceConfigure__configure', quals=[], storage=['static'] (at pp.c:8990)
    FuncDecl: quals=None (at pp.c:8990)
      ParamList:  (at pp.c:8992)
        Decl: name='arg_0x102774220', quals=[], storage=[] (at pp.c:8992)
          TypeDecl: declname='arg_0x102774220', quals=[] (at pp.c:8992)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ResourceConfigure__configure', quals=[] (at pp.c:8990)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__Queue__enqueue', quals=[], storage=['static'] (at pp.c:8994)
    FuncDecl: quals=None (at pp.c:8994)
      ParamList:  (at pp.c:8994)
        Decl: name='id', quals=[], storage=[] (at pp.c:8994)
          TypeDecl: declname='id', quals=[] (at pp.c:8994)
            IdentifierType: names=['resource_client_id_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__Queue__enqueue', quals=[] (at pp.c:8994)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SimpleArbiterP__0__Queue__isEmpty', quals=[], storage=['static'] (at pp.c:8996)
    FuncDecl: quals=None (at pp.c:8996)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__Queue__isEmpty', quals=[] (at pp.c:8996)
        IdentifierType: names=['bool'] (at None)
  Decl: name='SimpleArbiterP__0__Queue__dequeue', quals=[], storage=['static'] (at pp.c:8998)
    FuncDecl: quals=None (at pp.c:8998)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__Queue__dequeue', quals=[] (at pp.c:8998)
        IdentifierType: names=['resource_client_id_t'] (at None)
  Decl: name='SimpleArbiterP__0__Resource__granted', quals=[], storage=['static'] (at pp.c:9000)
    FuncDecl: quals=None (at pp.c:9000)
      ParamList:  (at pp.c:9002)
        Decl: name='arg_0x1027779b0', quals=[], storage=[] (at pp.c:9002)
          TypeDecl: declname='arg_0x1027779b0', quals=[] (at pp.c:9002)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__Resource__granted', quals=[] (at pp.c:9000)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__grantedTask__postTask', quals=[], storage=['static'] (at pp.c:9004)
    FuncDecl: quals=None (at pp.c:9004)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__grantedTask__postTask', quals=[] (at pp.c:9004)
        IdentifierType: names=['error_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:9006)
    Enum: name='SimpleArbiterP__0____nesc_unnamed4367' (at pp.c:9006)
      EnumeratorList:  (at pp.c:9008)
        Enumerator: name='SimpleArbiterP__0__grantedTask' (at pp.c:9008)
          Constant: type='int', value='13U' (at pp.c:9008)
  Typedef: name='SimpleArbiterP__0____nesc_sillytask_grantedTask', quals=[], storage=['typedef'] (at pp.c:9011)
    ArrayDecl:  (at pp.c:9011)
      TypeDecl: declname='SimpleArbiterP__0____nesc_sillytask_grantedTask', quals=[] (at pp.c:9011)
        IdentifierType: names=['int'] (at None)
      ID: name='SimpleArbiterP__0__grantedTask' (at pp.c:9011)
  Decl: name=None, quals=[], storage=[] (at pp.c:9013)
    Enum: name='SimpleArbiterP__0____nesc_unnamed4368' (at pp.c:9013)
      EnumeratorList:  (at pp.c:9015)
        Enumerator: name='SimpleArbiterP__0__RES_IDLE' (at pp.c:9015)
          Constant: type='int', value='0' (at pp.c:9015)
        Enumerator: name='SimpleArbiterP__0__RES_GRANTING' (at pp.c:9015)
          Constant: type='int', value='1' (at pp.c:9015)
        Enumerator: name='SimpleArbiterP__0__RES_BUSY' (at pp.c:9015)
          Constant: type='int', value='2' (at pp.c:9015)
  Decl: name=None, quals=[], storage=[] (at pp.c:9018)
    Enum: name='SimpleArbiterP__0____nesc_unnamed4369' (at pp.c:9018)
      EnumeratorList:  (at pp.c:9020)
        Enumerator: name='SimpleArbiterP__0__NO_RES' (at pp.c:9020)
          Constant: type='int', value='0xFF' (at pp.c:9020)
  Decl: name='SimpleArbiterP__0__state', quals=[], storage=[] (at pp.c:9022)
    TypeDecl: declname='SimpleArbiterP__0__state', quals=[] (at pp.c:9022)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='SimpleArbiterP__0__RES_IDLE' (at pp.c:9022)
  Decl: name='SimpleArbiterP__0__resId', quals=[], storage=[] (at pp.c:9023)
    TypeDecl: declname='SimpleArbiterP__0__resId', quals=[] (at pp.c:9023)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='SimpleArbiterP__0__NO_RES' (at pp.c:9023)
  Decl: name='SimpleArbiterP__0__reqResId', quals=[], storage=[] (at pp.c:9024)
    TypeDecl: declname='SimpleArbiterP__0__reqResId', quals=[] (at pp.c:9024)
      IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SimpleArbiterP__0__Resource__request', quals=[], storage=['static'] (at pp.c:9028)
    FuncDecl: quals=None (at pp.c:9028)
      ParamList:  (at pp.c:9028)
        Decl: name='id', quals=[], storage=[] (at pp.c:9028)
          TypeDecl: declname='id', quals=[] (at pp.c:9028)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__Resource__request', quals=[] (at pp.c:9028)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SimpleArbiterP__0__Resource__release', quals=[], storage=['static'] (at pp.c:9030)
    FuncDecl: quals=None (at pp.c:9030)
      ParamList:  (at pp.c:9030)
        Decl: name='id', quals=[], storage=[] (at pp.c:9030)
          TypeDecl: declname='id', quals=[] (at pp.c:9030)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__Resource__release', quals=[] (at pp.c:9030)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='SimpleArbiterP__0__ArbiterInfo__userId', quals=[], storage=['static'] (at pp.c:9032)
    FuncDecl: quals=None (at pp.c:9032)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ArbiterInfo__userId', quals=[] (at pp.c:9032)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='SimpleArbiterP__0__grantedTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:9034)
    FuncDecl: quals=None (at pp.c:9034)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__grantedTask__runTask', quals=[] (at pp.c:9034)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:9044)
    FuncDecl: quals=None (at pp.c:9044)
      ParamList:  (at pp.c:9044)
        Decl: name='id', quals=[], storage=[] (at pp.c:9044)
          TypeDecl: declname='id', quals=[] (at pp.c:9044)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__Resource__default__granted', quals=[] (at pp.c:9044)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__ResourceRequested__default__requested', quals=[], storage=['inline', 'static'] (at pp.c:9046)
    FuncDecl: quals=None (at pp.c:9046)
      ParamList:  (at pp.c:9046)
        Decl: name='id', quals=[], storage=[] (at pp.c:9046)
          TypeDecl: declname='id', quals=[] (at pp.c:9046)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ResourceRequested__default__requested', quals=[] (at pp.c:9046)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__ResourceConfigure__default__configure', quals=[], storage=['inline', 'static'] (at pp.c:9050)
    FuncDecl: quals=None (at pp.c:9050)
      ParamList:  (at pp.c:9050)
        Decl: name='id', quals=[], storage=[] (at pp.c:9050)
          TypeDecl: declname='id', quals=[] (at pp.c:9050)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ResourceConfigure__default__configure', quals=[] (at pp.c:9050)
        IdentifierType: names=['void'] (at None)
  Decl: name='SimpleArbiterP__0__ResourceConfigure__default__unconfigure', quals=[], storage=['inline', 'static'] (at pp.c:9052)
    FuncDecl: quals=None (at pp.c:9052)
      ParamList:  (at pp.c:9052)
        Decl: name='id', quals=[], storage=[] (at pp.c:9052)
          TypeDecl: declname='id', quals=[] (at pp.c:9052)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='SimpleArbiterP__0__ResourceConfigure__default__unconfigure', quals=[] (at pp.c:9052)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__HplAdc12__getCtl0', quals=[], storage=['static'] (at pp.c:9054)
    FuncDecl: quals=None (at pp.c:9054)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__HplAdc12__getCtl0', quals=[] (at pp.c:9054)
        IdentifierType: names=['adc12ctl0_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__HplAdc12__isBusy', quals=[], storage=['static'] (at pp.c:9056)
    FuncDecl: quals=None (at pp.c:9056)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__HplAdc12__isBusy', quals=[] (at pp.c:9056)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__HplAdc12__setCtl0', quals=[], storage=['static'] (at pp.c:9058)
    FuncDecl: quals=None (at pp.c:9058)
      ParamList:  (at pp.c:9058)
        Decl: name='control0', quals=[], storage=[] (at pp.c:9058)
          TypeDecl: declname='control0', quals=[] (at pp.c:9058)
            IdentifierType: names=['adc12ctl0_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__HplAdc12__setCtl0', quals=[] (at pp.c:9058)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOffTimer__startOneShot', quals=[], storage=['static'] (at pp.c:9060)
    FuncDecl: quals=None (at pp.c:9060)
      ParamList:  (at pp.c:9060)
        Decl: name='dt', quals=[], storage=[] (at pp.c:9060)
          TypeDecl: declname='dt', quals=[] (at pp.c:9060)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffTimer__startOneShot', quals=[] (at pp.c:9060)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOffTimer__stop', quals=[], storage=['static'] (at pp.c:9065)
    FuncDecl: quals=None (at pp.c:9065)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffTimer__stop', quals=[] (at pp.c:9065)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__startDone', quals=[], storage=['static'] (at pp.c:9067)
    FuncDecl: quals=None (at pp.c:9067)
      ParamList:  (at pp.c:9067)
        Decl: name='error', quals=[], storage=[] (at pp.c:9067)
          TypeDecl: declname='error', quals=[] (at pp.c:9067)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_2_5V__startDone', quals=[] (at pp.c:9067)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__stopDone', quals=[], storage=['static'] (at pp.c:9069)
    FuncDecl: quals=None (at pp.c:9069)
      ParamList:  (at pp.c:9069)
        Decl: name='error', quals=[], storage=[] (at pp.c:9069)
          TypeDecl: declname='error', quals=[] (at pp.c:9069)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_2_5V__stopDone', quals=[] (at pp.c:9069)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__isRunning', quals=[], storage=['static'] (at pp.c:9071)
    FuncDecl: quals=None (at pp.c:9071)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__isRunning', quals=[] (at pp.c:9071)
        IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__startOneShot', quals=[], storage=['static'] (at pp.c:9073)
    FuncDecl: quals=None (at pp.c:9073)
      ParamList:  (at pp.c:9073)
        Decl: name='dt', quals=[], storage=[] (at pp.c:9073)
          TypeDecl: declname='dt', quals=[] (at pp.c:9073)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__startOneShot', quals=[] (at pp.c:9073)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__stop', quals=[], storage=['static'] (at pp.c:9078)
    FuncDecl: quals=None (at pp.c:9078)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__stop', quals=[] (at pp.c:9078)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__startDone', quals=[], storage=['static'] (at pp.c:9080)
    FuncDecl: quals=None (at pp.c:9080)
      ParamList:  (at pp.c:9080)
        Decl: name='error', quals=[], storage=[] (at pp.c:9080)
          TypeDecl: declname='error', quals=[] (at pp.c:9080)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_1_5V__startDone', quals=[] (at pp.c:9080)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__stopDone', quals=[], storage=['static'] (at pp.c:9082)
    FuncDecl: quals=None (at pp.c:9082)
      ParamList:  (at pp.c:9082)
        Decl: name='error', quals=[], storage=[] (at pp.c:9082)
          TypeDecl: declname='error', quals=[] (at pp.c:9082)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_1_5V__stopDone', quals=[] (at pp.c:9082)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOnTimer__startOneShot', quals=[], storage=['static'] (at pp.c:9084)
    FuncDecl: quals=None (at pp.c:9084)
      ParamList:  (at pp.c:9084)
        Decl: name='dt', quals=[], storage=[] (at pp.c:9084)
          TypeDecl: declname='dt', quals=[] (at pp.c:9084)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOnTimer__startOneShot', quals=[] (at pp.c:9084)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOnTimer__stop', quals=[], storage=['static'] (at pp.c:9089)
    FuncDecl: quals=None (at pp.c:9089)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOnTimer__stop', quals=[] (at pp.c:9089)
        IdentifierType: names=['void'] (at None)
  Typedef: name='Msp430RefVoltGeneratorP__state_t', quals=[], storage=['typedef'] (at pp.c:9105)
    TypeDecl: declname='Msp430RefVoltGeneratorP__state_t', quals=[] (at pp.c:9105)
      Enum: name='Msp430RefVoltGeneratorP____nesc_unnamed4370' (at pp.c:9092)
        EnumeratorList:  (at pp.c:9094)
          Enumerator: name='Msp430RefVoltGeneratorP__GENERATOR_OFF' (at pp.c:9094)
            Constant: type='int', value='0' (at pp.c:9094)
          Enumerator: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_STABLE' (at pp.c:9096)
            Constant: type='int', value='1' (at pp.c:9096)
          Enumerator: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_STABLE' (at pp.c:9097)
            Constant: type='int', value='2' (at pp.c:9097)
          Enumerator: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_ON_PENDING' (at pp.c:9099)
            Constant: type='int', value='3' (at pp.c:9099)
          Enumerator: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_ON_PENDING' (at pp.c:9100)
            Constant: type='int', value='4' (at pp.c:9100)
          Enumerator: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_OFF_PENDING' (at pp.c:9102)
            Constant: type='int', value='5' (at pp.c:9102)
          Enumerator: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_OFF_PENDING' (at pp.c:9103)
            Constant: type='int', value='6' (at pp.c:9103)
  Decl: name='Msp430RefVoltGeneratorP__m_state', quals=[], storage=[] (at pp.c:9107)
    TypeDecl: declname='Msp430RefVoltGeneratorP__m_state', quals=[] (at pp.c:9107)
      IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__switchOn', quals=[], storage=['static'] (at pp.c:9110)
    FuncDecl: quals=None (at pp.c:9110)
      ParamList:  (at pp.c:9110)
        Decl: name='level', quals=[], storage=[] (at pp.c:9110)
          TypeDecl: declname='level', quals=[] (at pp.c:9110)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__switchOn', quals=[] (at pp.c:9110)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__switchOff', quals=[], storage=['static'] (at pp.c:9111)
    FuncDecl: quals=None (at pp.c:9111)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__switchOff', quals=[] (at pp.c:9111)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__signalStartDone', quals=[], storage=['static'] (at pp.c:9112)
    FuncDecl: quals=None (at pp.c:9112)
      ParamList:  (at pp.c:9112)
        Decl: name='state', quals=[], storage=[] (at pp.c:9112)
          TypeDecl: declname='state', quals=[] (at pp.c:9112)
            IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:9112)
          TypeDecl: declname='result', quals=[] (at pp.c:9112)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__signalStartDone', quals=[] (at pp.c:9112)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__signalStopDone', quals=[], storage=['static'] (at pp.c:9113)
    FuncDecl: quals=None (at pp.c:9113)
      ParamList:  (at pp.c:9113)
        Decl: name='state', quals=[], storage=[] (at pp.c:9113)
          TypeDecl: declname='state', quals=[] (at pp.c:9113)
            IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:9113)
          TypeDecl: declname='result', quals=[] (at pp.c:9113)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__signalStopDone', quals=[] (at pp.c:9113)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__start', quals=[], storage=['static'] (at pp.c:9114)
    FuncDecl: quals=None (at pp.c:9114)
      ParamList:  (at pp.c:9114)
        Decl: name='targetState', quals=[], storage=[] (at pp.c:9114)
          TypeDecl: declname='targetState', quals=[] (at pp.c:9114)
            IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__start', quals=[] (at pp.c:9114)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__stop', quals=[], storage=['static'] (at pp.c:9115)
    FuncDecl: quals=None (at pp.c:9115)
      ParamList:  (at pp.c:9115)
        Decl: name='nextState', quals=[], storage=[] (at pp.c:9115)
          TypeDecl: declname='nextState', quals=[] (at pp.c:9115)
            IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__stop', quals=[] (at pp.c:9115)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__start', quals=[], storage=['inline', 'static'] (at pp.c:9118)
    FuncDecl: quals=None (at pp.c:9118)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_1_5V__start', quals=[] (at pp.c:9118)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__start', quals=[], storage=['inline', 'static'] (at pp.c:9122)
    FuncDecl: quals=None (at pp.c:9122)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_2_5V__start', quals=[] (at pp.c:9122)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__stop', quals=[], storage=['inline', 'static'] (at pp.c:9126)
    FuncDecl: quals=None (at pp.c:9126)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_1_5V__stop', quals=[] (at pp.c:9126)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__stop', quals=[], storage=['inline', 'static'] (at pp.c:9130)
    FuncDecl: quals=None (at pp.c:9130)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_2_5V__stop', quals=[] (at pp.c:9130)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__start', quals=[], storage=['static'] (at pp.c:9134)
    FuncDecl: quals=None (at pp.c:9134)
      ParamList:  (at pp.c:9134)
        Decl: name='targetState', quals=[], storage=[] (at pp.c:9134)
          TypeDecl: declname='targetState', quals=[] (at pp.c:9134)
            IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__start', quals=[] (at pp.c:9134)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__stop', quals=[], storage=['static'] (at pp.c:9136)
    FuncDecl: quals=None (at pp.c:9136)
      ParamList:  (at pp.c:9136)
        Decl: name='nextState', quals=[], storage=[] (at pp.c:9136)
          TypeDecl: declname='nextState', quals=[] (at pp.c:9136)
            IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__stop', quals=[] (at pp.c:9136)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__signalStartDone', quals=[], storage=['static'] (at pp.c:9138)
    FuncDecl: quals=None (at pp.c:9138)
      ParamList:  (at pp.c:9138)
        Decl: name='state', quals=[], storage=[] (at pp.c:9138)
          TypeDecl: declname='state', quals=[] (at pp.c:9138)
            IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:9138)
          TypeDecl: declname='result', quals=[] (at pp.c:9138)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__signalStartDone', quals=[] (at pp.c:9138)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__signalStopDone', quals=[], storage=['static'] (at pp.c:9145)
    FuncDecl: quals=None (at pp.c:9145)
      ParamList:  (at pp.c:9145)
        Decl: name='state', quals=[], storage=[] (at pp.c:9145)
          TypeDecl: declname='state', quals=[] (at pp.c:9145)
            IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:9145)
          TypeDecl: declname='result', quals=[] (at pp.c:9145)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__signalStopDone', quals=[] (at pp.c:9145)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOnTimer__fired', quals=[], storage=['inline', 'static'] (at pp.c:9153)
    FuncDecl: quals=None (at pp.c:9153)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOnTimer__fired', quals=[] (at pp.c:9153)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOffTimer__fired', quals=[], storage=['inline', 'static'] (at pp.c:9155)
    FuncDecl: quals=None (at pp.c:9155)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffTimer__fired', quals=[] (at pp.c:9155)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__fired', quals=[], storage=['inline', 'static'] (at pp.c:9157)
    FuncDecl: quals=None (at pp.c:9157)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__fired', quals=[] (at pp.c:9157)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__HplAdc12__conversionDone', quals=[], storage=['inline', 'static'] (at pp.c:9160)
    FuncDecl: quals=None (at pp.c:9160)
      ParamList:  (at pp.c:9160)
        Decl: name='iv', quals=[], storage=[] (at pp.c:9160)
          TypeDecl: declname='iv', quals=[] (at pp.c:9160)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__HplAdc12__conversionDone', quals=[] (at pp.c:9160)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__switchOn', quals=[], storage=['static'] (at pp.c:9164)
    FuncDecl: quals=None (at pp.c:9164)
      ParamList:  (at pp.c:9164)
        Decl: name='level', quals=[], storage=[] (at pp.c:9164)
          TypeDecl: declname='level', quals=[] (at pp.c:9164)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__switchOn', quals=[] (at pp.c:9164)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltGeneratorP__switchOff', quals=[], storage=['static'] (at pp.c:9166)
    FuncDecl: quals=None (at pp.c:9166)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltGeneratorP__switchOff', quals=[] (at pp.c:9166)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__Config__getConfiguration', quals=[], storage=['static'] (at pp.c:9168)
    FuncDecl: quals=None (at pp.c:9168)
      ParamList:  (at pp.c:9170)
        Decl: name='arg_0x10286daf8', quals=[], storage=[] (at pp.c:9170)
          TypeDecl: declname='arg_0x10286daf8', quals=[] (at pp.c:9170)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__Config__getConfiguration', quals=[] (at pp.c:9168)
        IdentifierType: names=['Msp430RefVoltArbiterImplP__Config__adc_config_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__start', quals=[], storage=['static'] (at pp.c:9172)
    FuncDecl: quals=None (at pp.c:9172)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_2_5V__start', quals=[] (at pp.c:9172)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stop', quals=[], storage=['static'] (at pp.c:9174)
    FuncDecl: quals=None (at pp.c:9174)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stop', quals=[] (at pp.c:9174)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__AdcResource__release', quals=[], storage=['static'] (at pp.c:9176)
    FuncDecl: quals=None (at pp.c:9176)
      ParamList:  (at pp.c:9178)
        Decl: name='arg_0x102871e18', quals=[], storage=[] (at pp.c:9178)
          TypeDecl: declname='arg_0x102871e18', quals=[] (at pp.c:9178)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__release', quals=[] (at pp.c:9176)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__AdcResource__request', quals=[], storage=['static'] (at pp.c:9180)
    FuncDecl: quals=None (at pp.c:9180)
      ParamList:  (at pp.c:9182)
        Decl: name='arg_0x102871e18', quals=[], storage=[] (at pp.c:9182)
          TypeDecl: declname='arg_0x102871e18', quals=[] (at pp.c:9182)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__request', quals=[] (at pp.c:9180)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__ClientResource__granted', quals=[], storage=['static'] (at pp.c:9184)
    FuncDecl: quals=None (at pp.c:9184)
      ParamList:  (at pp.c:9186)
        Decl: name='arg_0x102809b98', quals=[], storage=[] (at pp.c:9186)
          TypeDecl: declname='arg_0x102809b98', quals=[] (at pp.c:9186)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__granted', quals=[] (at pp.c:9184)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__switchOff__postTask', quals=[], storage=['static'] (at pp.c:9188)
    FuncDecl: quals=None (at pp.c:9188)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__switchOff__postTask', quals=[] (at pp.c:9188)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__start', quals=[], storage=['static'] (at pp.c:9190)
    FuncDecl: quals=None (at pp.c:9190)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_1_5V__start', quals=[] (at pp.c:9190)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stop', quals=[], storage=['static'] (at pp.c:9192)
    FuncDecl: quals=None (at pp.c:9192)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stop', quals=[] (at pp.c:9192)
        IdentifierType: names=['error_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:9194)
    Enum: name='Msp430RefVoltArbiterImplP____nesc_unnamed4371' (at pp.c:9194)
      EnumeratorList:  (at pp.c:9196)
        Enumerator: name='Msp430RefVoltArbiterImplP__switchOff' (at pp.c:9196)
          Constant: type='int', value='14U' (at pp.c:9196)
  Typedef: name='Msp430RefVoltArbiterImplP____nesc_sillytask_switchOff', quals=[], storage=['typedef'] (at pp.c:9199)
    ArrayDecl:  (at pp.c:9199)
      TypeDecl: declname='Msp430RefVoltArbiterImplP____nesc_sillytask_switchOff', quals=[] (at pp.c:9199)
        IdentifierType: names=['int'] (at None)
      ID: name='Msp430RefVoltArbiterImplP__switchOff' (at pp.c:9199)
  Decl: name=None, quals=[], storage=[] (at pp.c:9201)
    Enum: name='Msp430RefVoltArbiterImplP____nesc_unnamed4372' (at pp.c:9201)
      EnumeratorList:  (at pp.c:9202)
        Enumerator: name='Msp430RefVoltArbiterImplP__NO_OWNER' (at pp.c:9202)
          Constant: type='int', value='0xFF' (at pp.c:9202)
  Decl: name='Msp430RefVoltArbiterImplP__syncOwner', quals=[], storage=[] (at pp.c:9204)
    TypeDecl: declname='Msp430RefVoltArbiterImplP__syncOwner', quals=[] (at pp.c:9204)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='Msp430RefVoltArbiterImplP__NO_OWNER' (at pp.c:9204)
  Decl: name='Msp430RefVoltArbiterImplP__ref2_5v', quals=[], storage=[] (at pp.c:9205)
    TypeDecl: declname='Msp430RefVoltArbiterImplP__ref2_5v', quals=[] (at pp.c:9205)
      IdentifierType: names=['bool'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__ClientResource__request', quals=[], storage=['inline', 'static'] (at pp.c:9209)
    FuncDecl: quals=None (at pp.c:9209)
      ParamList:  (at pp.c:9209)
        Decl: name='client', quals=[], storage=[] (at pp.c:9209)
          TypeDecl: declname='client', quals=[] (at pp.c:9209)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__request', quals=[] (at pp.c:9209)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__AdcResource__granted', quals=[], storage=['static'] (at pp.c:9211)
    FuncDecl: quals=None (at pp.c:9211)
      ParamList:  (at pp.c:9211)
        Decl: name='client', quals=[], storage=[] (at pp.c:9211)
          TypeDecl: declname='client', quals=[] (at pp.c:9211)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__granted', quals=[] (at pp.c:9211)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__startDone', quals=[], storage=['inline', 'static'] (at pp.c:9213)
    FuncDecl: quals=None (at pp.c:9213)
      ParamList:  (at pp.c:9213)
        Decl: name='error', quals=[], storage=[] (at pp.c:9213)
          TypeDecl: declname='error', quals=[] (at pp.c:9213)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_1_5V__startDone', quals=[] (at pp.c:9213)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__startDone', quals=[], storage=['static'] (at pp.c:9222)
    FuncDecl: quals=None (at pp.c:9222)
      ParamList:  (at pp.c:9222)
        Decl: name='error', quals=[], storage=[] (at pp.c:9222)
          TypeDecl: declname='error', quals=[] (at pp.c:9222)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_2_5V__startDone', quals=[] (at pp.c:9222)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__ClientResource__release', quals=[], storage=['static'] (at pp.c:9231)
    FuncDecl: quals=None (at pp.c:9231)
      ParamList:  (at pp.c:9231)
        Decl: name='client', quals=[], storage=[] (at pp.c:9231)
          TypeDecl: declname='client', quals=[] (at pp.c:9231)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__release', quals=[] (at pp.c:9231)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__switchOff__runTask', quals=[], storage=['inline', 'static'] (at pp.c:9233)
    FuncDecl: quals=None (at pp.c:9233)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__switchOff__runTask', quals=[] (at pp.c:9233)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stopDone', quals=[], storage=['inline', 'static'] (at pp.c:9235)
    FuncDecl: quals=None (at pp.c:9235)
      ParamList:  (at pp.c:9235)
        Decl: name='error', quals=[], storage=[] (at pp.c:9235)
          TypeDecl: declname='error', quals=[] (at pp.c:9235)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stopDone', quals=[] (at pp.c:9235)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stopDone', quals=[], storage=['inline', 'static'] (at pp.c:9239)
    FuncDecl: quals=None (at pp.c:9239)
      ParamList:  (at pp.c:9239)
        Decl: name='error', quals=[], storage=[] (at pp.c:9239)
          TypeDecl: declname='error', quals=[] (at pp.c:9239)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stopDone', quals=[] (at pp.c:9239)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__ClientResource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:9248)
    FuncDecl: quals=None (at pp.c:9248)
      ParamList:  (at pp.c:9248)
        Decl: name='client', quals=[], storage=[] (at pp.c:9248)
          TypeDecl: declname='client', quals=[] (at pp.c:9248)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__default__granted', quals=[] (at pp.c:9248)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__AdcResource__default__request', quals=[], storage=['inline', 'static'] (at pp.c:9249)
    FuncDecl: quals=None (at pp.c:9249)
      ParamList:  (at pp.c:9249)
        Decl: name='client', quals=[], storage=[] (at pp.c:9249)
          TypeDecl: declname='client', quals=[] (at pp.c:9249)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__default__request', quals=[] (at pp.c:9249)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__AdcResource__default__release', quals=[], storage=['inline', 'static'] (at pp.c:9258)
    FuncDecl: quals=None (at pp.c:9258)
      ParamList:  (at pp.c:9258)
        Decl: name='client', quals=[], storage=[] (at pp.c:9258)
          TypeDecl: declname='client', quals=[] (at pp.c:9258)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__default__release', quals=[] (at pp.c:9258)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430RefVoltArbiterImplP__defaultConfig', quals=['const'], storage=[] (at pp.c:9259)
    TypeDecl: declname='Msp430RefVoltArbiterImplP__defaultConfig', quals=['const'] (at pp.c:9259)
      IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    ExprList:  (at pp.c:9259)
      ID: name='INPUT_CHANNEL_NONE' (at pp.c:9259)
      Constant: type='int', value='0' (at pp.c:9259)
      Constant: type='int', value='0' (at pp.c:9259)
      Constant: type='int', value='0' (at pp.c:9259)
      Constant: type='int', value='0' (at pp.c:9259)
      Constant: type='int', value='0' (at pp.c:9259)
      Constant: type='int', value='0' (at pp.c:9259)
      Constant: type='int', value='0' (at pp.c:9259)
  Decl: name='Msp430RefVoltArbiterImplP__Config__default__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:9261)
    FuncDecl: quals=None (at pp.c:9261)
      ParamList:  (at pp.c:9261)
        Decl: name='client', quals=[], storage=[] (at pp.c:9261)
          TypeDecl: declname='client', quals=[] (at pp.c:9261)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:9260)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__Config__default__getConfiguration', quals=['const'] (at pp.c:9261)
          IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name='Msp430Adc12ConfAlertC__0__ConfUp__getConfiguration', quals=[], storage=['static'] (at pp.c:9263)
    FuncDecl: quals=None (at pp.c:9263)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ConfAlertC__0__ConfUp__getConfiguration', quals=[] (at pp.c:9263)
        IdentifierType: names=['Msp430Adc12ConfAlertC__0__ConfUp__adc_config_t'] (at None)
  Decl: name='Msp430Adc12ConfAlertC__0__ConfSub__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:9265)
    FuncDecl: quals=None (at pp.c:9265)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      PtrDecl: quals=[] (at pp.c:9265)
        TypeDecl: declname='Msp430Adc12ConfAlertC__0__ConfSub__getConfiguration', quals=['const'] (at pp.c:9265)
          IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name='AdcStreamP__bufferDone__postTask', quals=[], storage=['static'] (at pp.c:9267)
    FuncDecl: quals=None (at pp.c:9267)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__bufferDone__postTask', quals=[] (at pp.c:9267)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__readStreamDone__postTask', quals=[], storage=['static'] (at pp.c:9269)
    FuncDecl: quals=None (at pp.c:9269)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__readStreamDone__postTask', quals=[] (at pp.c:9269)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__readStreamFail__postTask', quals=[], storage=['static'] (at pp.c:9271)
    FuncDecl: quals=None (at pp.c:9271)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__readStreamFail__postTask', quals=[] (at pp.c:9271)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__Alarm__getNow', quals=[], storage=['static'] (at pp.c:9273)
    FuncDecl: quals=None (at pp.c:9273)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__Alarm__getNow', quals=[] (at pp.c:9273)
        IdentifierType: names=['AdcStreamP__Alarm__size_type'] (at None)
  Decl: name='AdcStreamP__Alarm__startAt', quals=[], storage=['static'] (at pp.c:9275)
    FuncDecl: quals=None (at pp.c:9275)
      ParamList:  (at pp.c:9275)
        Decl: name='t0', quals=[], storage=[] (at pp.c:9275)
          TypeDecl: declname='t0', quals=[] (at pp.c:9275)
            IdentifierType: names=['AdcStreamP__Alarm__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:9275)
          TypeDecl: declname='dt', quals=[] (at pp.c:9275)
            IdentifierType: names=['AdcStreamP__Alarm__size_type'] (at None)
      TypeDecl: declname='AdcStreamP__Alarm__startAt', quals=[] (at pp.c:9275)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__AdcConfigure__getConfiguration', quals=[], storage=['static'] (at pp.c:9277)
    FuncDecl: quals=None (at pp.c:9277)
      ParamList:  (at pp.c:9279)
        Decl: name='arg_0x1028c3318', quals=[], storage=[] (at pp.c:9279)
          TypeDecl: declname='arg_0x1028c3318', quals=[] (at pp.c:9279)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcStreamP__AdcConfigure__getConfiguration', quals=[] (at pp.c:9277)
        IdentifierType: names=['AdcStreamP__AdcConfigure__adc_config_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__getData', quals=[], storage=['static'] (at pp.c:9281)
    FuncDecl: quals=None (at pp.c:9281)
      ParamList:  (at pp.c:9283)
        Decl: name='arg_0x1028c6b90', quals=[], storage=[] (at pp.c:9283)
          TypeDecl: declname='arg_0x1028c6b90', quals=[] (at pp.c:9283)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__getData', quals=[] (at pp.c:9281)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__configureSingle', quals=[], storage=['static'] (at pp.c:9285)
    FuncDecl: quals=None (at pp.c:9285)
      ParamList:  (at pp.c:9287)
        Decl: name='arg_0x1028c6b90', quals=[], storage=[] (at pp.c:9287)
          TypeDecl: declname='arg_0x1028c6b90', quals=[] (at pp.c:9287)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:9289)
          PtrDecl: quals=[] (at pp.c:9289)
            TypeDecl: declname='config', quals=['const'] (at pp.c:9289)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__configureSingle', quals=[] (at pp.c:9285)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__configureMultiple', quals=[], storage=['static'] (at pp.c:9291)
    FuncDecl: quals=None (at pp.c:9291)
      ParamList:  (at pp.c:9293)
        Decl: name='arg_0x1028c6b90', quals=[], storage=[] (at pp.c:9293)
          TypeDecl: declname='arg_0x1028c6b90', quals=[] (at pp.c:9293)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:9295)
          PtrDecl: quals=[] (at pp.c:9295)
            TypeDecl: declname='config', quals=['const'] (at pp.c:9295)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        Decl: name='buffer', quals=[], storage=[] (at pp.c:9295)
          PtrDecl: quals=[] (at pp.c:9295)
            TypeDecl: declname='buffer', quals=[] (at pp.c:9295)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:9295)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:9295)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='jiffies', quals=[], storage=[] (at pp.c:9295)
          TypeDecl: declname='jiffies', quals=[] (at pp.c:9295)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__configureMultiple', quals=[] (at pp.c:9291)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__ReadStream__bufferDone', quals=[], storage=['static'] (at pp.c:9297)
    FuncDecl: quals=None (at pp.c:9297)
      ParamList:  (at pp.c:9299)
        Decl: name='arg_0x1028c9b08', quals=[], storage=[] (at pp.c:9299)
          TypeDecl: declname='arg_0x1028c9b08', quals=[] (at pp.c:9299)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:9301)
          TypeDecl: declname='result', quals=[] (at pp.c:9301)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:9303)
          PtrDecl: quals=[] (at pp.c:9303)
            TypeDecl: declname='buf', quals=[] (at pp.c:9303)
              IdentifierType: names=['AdcStreamP__ReadStream__val_t'] (at None)
        Decl: name='count', quals=[], storage=[] (at pp.c:9307)
          TypeDecl: declname='count', quals=[] (at pp.c:9307)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcStreamP__ReadStream__bufferDone', quals=[] (at pp.c:9297)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__ReadStream__readDone', quals=[], storage=['static'] (at pp.c:9309)
    FuncDecl: quals=None (at pp.c:9309)
      ParamList:  (at pp.c:9311)
        Decl: name='arg_0x1028c9b08', quals=[], storage=[] (at pp.c:9311)
          TypeDecl: declname='arg_0x1028c9b08', quals=[] (at pp.c:9311)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:9313)
          TypeDecl: declname='result', quals=[] (at pp.c:9313)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='usActualPeriod', quals=[], storage=[] (at pp.c:9313)
          TypeDecl: declname='usActualPeriod', quals=[] (at pp.c:9313)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='AdcStreamP__ReadStream__readDone', quals=[] (at pp.c:9309)
        IdentifierType: names=['void'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:9315)
    Enum: name='AdcStreamP____nesc_unnamed4373' (at pp.c:9315)
      EnumeratorList:  (at pp.c:9317)
        Enumerator: name='AdcStreamP__readStreamDone' (at pp.c:9317)
          Constant: type='int', value='15U' (at pp.c:9317)
  Typedef: name='AdcStreamP____nesc_sillytask_readStreamDone', quals=[], storage=['typedef'] (at pp.c:9320)
    ArrayDecl:  (at pp.c:9320)
      TypeDecl: declname='AdcStreamP____nesc_sillytask_readStreamDone', quals=[] (at pp.c:9320)
        IdentifierType: names=['int'] (at None)
      ID: name='AdcStreamP__readStreamDone' (at pp.c:9320)
  Decl: name=None, quals=[], storage=[] (at pp.c:9322)
    Enum: name='AdcStreamP____nesc_unnamed4374' (at pp.c:9322)
      EnumeratorList:  (at pp.c:9324)
        Enumerator: name='AdcStreamP__readStreamFail' (at pp.c:9324)
          Constant: type='int', value='16U' (at pp.c:9324)
  Typedef: name='AdcStreamP____nesc_sillytask_readStreamFail', quals=[], storage=['typedef'] (at pp.c:9327)
    ArrayDecl:  (at pp.c:9327)
      TypeDecl: declname='AdcStreamP____nesc_sillytask_readStreamFail', quals=[] (at pp.c:9327)
        IdentifierType: names=['int'] (at None)
      ID: name='AdcStreamP__readStreamFail' (at pp.c:9327)
  Decl: name=None, quals=[], storage=[] (at pp.c:9329)
    Enum: name='AdcStreamP____nesc_unnamed4375' (at pp.c:9329)
      EnumeratorList:  (at pp.c:9331)
        Enumerator: name='AdcStreamP__bufferDone' (at pp.c:9331)
          Constant: type='int', value='17U' (at pp.c:9331)
  Typedef: name='AdcStreamP____nesc_sillytask_bufferDone', quals=[], storage=['typedef'] (at pp.c:9334)
    ArrayDecl:  (at pp.c:9334)
      TypeDecl: declname='AdcStreamP____nesc_sillytask_bufferDone', quals=[] (at pp.c:9334)
        IdentifierType: names=['int'] (at None)
      ID: name='AdcStreamP__bufferDone' (at pp.c:9334)
  Decl: name=None, quals=[], storage=[] (at pp.c:9336)
    Enum: name='AdcStreamP____nesc_unnamed4376' (at pp.c:9336)
      EnumeratorList:  (at pp.c:9337)
        Enumerator: name='AdcStreamP__NSTREAM' (at pp.c:9337)
          Constant: type='int', value='1U' (at pp.c:9337)
  Decl: name='AdcStreamP__client', quals=[], storage=[] (at pp.c:9343)
    TypeDecl: declname='AdcStreamP__client', quals=[] (at pp.c:9343)
      IdentifierType: names=['uint8_t'] (at None)
    ID: name='AdcStreamP__NSTREAM' (at pp.c:9343)
  Decl: name=None, quals=[], storage=[] (at pp.c:9346)
    Struct: name='AdcStreamP__list_entry_t', packed=False (at pp.c:9346)
      Decl: name='count', quals=[], storage=[] (at 0)
        TypeDecl: declname='count', quals=[] (at pp.c:9347)
          IdentifierType: names=['uint16_t'] (at None)
      Decl: name='next', quals=[], storage=[] (at 0)
        PtrDecl: quals=[] (at pp.c:9348)
          TypeDecl: declname='next', quals=[] (at pp.c:9348)
            Struct: name='AdcStreamP__list_entry_t', packed=False (at pp.c:9348)
  Decl: name='AdcStreamP__bufferQueue', quals=[], storage=[] (at pp.c:9350)
    ArrayDecl:  (at pp.c:9350)
      PtrDecl: quals=[] (at pp.c:9350)
        TypeDecl: declname='AdcStreamP__bufferQueue', quals=[] (at pp.c:9350)
          Struct: name='AdcStreamP__list_entry_t', packed=False (at pp.c:9350)
      ID: name='AdcStreamP__NSTREAM' (at pp.c:9350)
  Decl: name='AdcStreamP__bufferQueueEnd', quals=[], storage=[] (at pp.c:9351)
    ArrayDecl:  (at pp.c:9351)
      PtrDecl: quals=[] (at pp.c:9351)
        PtrDecl: quals=[] (at pp.c:9351)
          TypeDecl: declname='AdcStreamP__bufferQueueEnd', quals=[] (at pp.c:9351)
            Struct: name='AdcStreamP__list_entry_t', packed=False (at pp.c:9351)
      ID: name='AdcStreamP__NSTREAM' (at pp.c:9351)
  Decl: name='AdcStreamP__lastBuffer', quals=[], storage=[] (at pp.c:9352)
    PtrDecl: quals=[] (at pp.c:9352)
      TypeDecl: declname='AdcStreamP__lastBuffer', quals=[] (at pp.c:9352)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='AdcStreamP__lastCount', quals=[], storage=[] (at pp.c:9354)
    TypeDecl: declname='AdcStreamP__lastCount', quals=[] (at pp.c:9354)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='AdcStreamP__count', quals=[], storage=[] (at pp.c:9356)
    TypeDecl: declname='AdcStreamP__count', quals=[] (at pp.c:9356)
      IdentifierType: names=['uint16_t'] (at None)
  Decl: name='AdcStreamP__buffer', quals=[], storage=[] (at pp.c:9357)
    PtrDecl: quals=[] (at pp.c:9357)
      TypeDecl: declname='AdcStreamP__buffer', quals=[] (at pp.c:9357)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='AdcStreamP__pos', quals=[], storage=[] (at pp.c:9358)
    PtrDecl: quals=[] (at pp.c:9358)
      TypeDecl: declname='AdcStreamP__pos', quals=[] (at pp.c:9358)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='AdcStreamP__now', quals=[], storage=[] (at pp.c:9359)
    TypeDecl: declname='AdcStreamP__now', quals=[] (at pp.c:9359)
      IdentifierType: names=['uint32_t'] (at None)
  Decl: name='AdcStreamP__period', quals=[], storage=[] (at pp.c:9361)
    TypeDecl: declname='AdcStreamP__period', quals=[] (at pp.c:9361)
      IdentifierType: names=['uint32_t'] (at None)
  Decl: name='AdcStreamP__periodModified', quals=[], storage=[] (at pp.c:9362)
    TypeDecl: declname='AdcStreamP__periodModified', quals=[] (at pp.c:9362)
      IdentifierType: names=['bool'] (at None)
  Decl: name='AdcStreamP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:9365)
    FuncDecl: quals=None (at pp.c:9365)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__Init__init', quals=[] (at pp.c:9365)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__sampleSingle', quals=[], storage=['inline', 'static'] (at pp.c:9374)
    FuncDecl: quals=None (at pp.c:9374)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__sampleSingle', quals=[] (at pp.c:9374)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__postBuffer', quals=[], storage=['inline', 'static'] (at pp.c:9378)
    FuncDecl: quals=None (at pp.c:9378)
      ParamList:  (at pp.c:9378)
        Decl: name='c', quals=[], storage=[] (at pp.c:9378)
          TypeDecl: declname='c', quals=[] (at pp.c:9378)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:9378)
          PtrDecl: quals=[] (at pp.c:9378)
            TypeDecl: declname='buf', quals=[] (at pp.c:9378)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='n', quals=[], storage=[] (at pp.c:9378)
          TypeDecl: declname='n', quals=[] (at pp.c:9378)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcStreamP__postBuffer', quals=[] (at pp.c:9378)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__readStreamDone__runTask', quals=[], storage=['inline', 'static'] (at pp.c:9380)
    FuncDecl: quals=None (at pp.c:9380)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__readStreamDone__runTask', quals=[] (at pp.c:9380)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__readStreamFail__runTask', quals=[], storage=['inline', 'static'] (at pp.c:9382)
    FuncDecl: quals=None (at pp.c:9382)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__readStreamFail__runTask', quals=[] (at pp.c:9382)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__bufferDone__runTask', quals=[], storage=['inline', 'static'] (at pp.c:9384)
    FuncDecl: quals=None (at pp.c:9384)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__bufferDone__runTask', quals=[] (at pp.c:9384)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__nextAlarm', quals=[], storage=['inline', 'static'] (at pp.c:9386)
    FuncDecl: quals=None (at pp.c:9386)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__nextAlarm', quals=[] (at pp.c:9386)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__Alarm__fired', quals=[], storage=['inline', 'static'] (at pp.c:9391)
    FuncDecl: quals=None (at pp.c:9391)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AdcStreamP__Alarm__fired', quals=[] (at pp.c:9391)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__nextBuffer', quals=[], storage=['static'] (at pp.c:9395)
    FuncDecl: quals=None (at pp.c:9395)
      ParamList:  (at pp.c:9395)
        Decl: name='startNextAlarm', quals=[], storage=[] (at pp.c:9395)
          TypeDecl: declname='startNextAlarm', quals=[] (at pp.c:9395)
            IdentifierType: names=['bool'] (at None)
      TypeDecl: declname='AdcStreamP__nextBuffer', quals=[] (at pp.c:9395)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__nextMultiple', quals=[], storage=['static'] (at pp.c:9397)
    FuncDecl: quals=None (at pp.c:9397)
      ParamList:  (at pp.c:9397)
        Decl: name='c', quals=[], storage=[] (at pp.c:9397)
          TypeDecl: declname='c', quals=[] (at pp.c:9397)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcStreamP__nextMultiple', quals=[] (at pp.c:9397)
        IdentifierType: names=['void'] (at None)
  Decl: name='AdcStreamP__ReadStream__read', quals=[], storage=['static'] (at pp.c:9399)
    FuncDecl: quals=None (at pp.c:9399)
      ParamList:  (at pp.c:9399)
        Decl: name='c', quals=[], storage=[] (at pp.c:9399)
          TypeDecl: declname='c', quals=[] (at pp.c:9399)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='usPeriod', quals=[], storage=[] (at pp.c:9399)
          TypeDecl: declname='usPeriod', quals=[] (at pp.c:9399)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='AdcStreamP__ReadStream__read', quals=[] (at pp.c:9399)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__singleDataReady', quals=[], storage=['static'] (at pp.c:9401)
    FuncDecl: quals=None (at pp.c:9401)
      ParamList:  (at pp.c:9401)
        Decl: name='streamClient', quals=[], storage=[] (at pp.c:9401)
          TypeDecl: declname='streamClient', quals=[] (at pp.c:9401)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='data', quals=[], storage=[] (at pp.c:9401)
          TypeDecl: declname='data', quals=[] (at pp.c:9401)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__singleDataReady', quals=[] (at pp.c:9401)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__multipleDataReady', quals=[], storage=['static'] (at pp.c:9403)
    FuncDecl: quals=None (at pp.c:9403)
      ParamList:  (at pp.c:9403)
        Decl: name='streamClient', quals=[], storage=[] (at pp.c:9403)
          TypeDecl: declname='streamClient', quals=[] (at pp.c:9403)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:9404)
          PtrDecl: quals=[] (at pp.c:9404)
            TypeDecl: declname='buf', quals=[] (at pp.c:9404)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='length', quals=[], storage=[] (at pp.c:9404)
          TypeDecl: declname='length', quals=[] (at pp.c:9404)
            IdentifierType: names=['uint16_t'] (at None)
      PtrDecl: quals=[] (at pp.c:9403)
        TypeDecl: declname='AdcStreamP__SingleChannel__multipleDataReady', quals=[] (at pp.c:9403)
          IdentifierType: names=['uint16_t'] (at None)
  Decl: name='AdcStreamP__defaultConfig', quals=['const'], storage=[] (at pp.c:9406)
    TypeDecl: declname='AdcStreamP__defaultConfig', quals=['const'] (at pp.c:9406)
      IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    ExprList:  (at pp.c:9407)
      Assignment: op='=' (at pp.c:9407)
        StructRef: type='.' (at pp.c:9407)
          ID: name='inch' (at pp.c:9407)
        ID: name='SUPPLY_VOLTAGE_HALF_CHANNEL' (at pp.c:9407)
      Assignment: op='=' (at pp.c:9408)
        StructRef: type='.' (at pp.c:9408)
          ID: name='sref' (at pp.c:9408)
        ID: name='REFERENCE_VREFplus_AVss' (at pp.c:9408)
      Assignment: op='=' (at pp.c:9409)
        StructRef: type='.' (at pp.c:9409)
          ID: name='ref2_5v' (at pp.c:9409)
        ID: name='REFVOLT_LEVEL_1_5' (at pp.c:9409)
      Assignment: op='=' (at pp.c:9410)
        StructRef: type='.' (at pp.c:9410)
          ID: name='adc12ssel' (at pp.c:9410)
        ID: name='SHT_SOURCE_ACLK' (at pp.c:9410)
      Assignment: op='=' (at pp.c:9411)
        StructRef: type='.' (at pp.c:9411)
          ID: name='adc12div' (at pp.c:9411)
        ID: name='SHT_CLOCK_DIV_1' (at pp.c:9411)
      Assignment: op='=' (at pp.c:9412)
        StructRef: type='.' (at pp.c:9412)
          ID: name='sht' (at pp.c:9412)
        ID: name='SAMPLE_HOLD_4_CYCLES' (at pp.c:9412)
      Assignment: op='=' (at pp.c:9413)
        StructRef: type='.' (at pp.c:9413)
          ID: name='sampcon_ssel' (at pp.c:9413)
        ID: name='SAMPCON_SOURCE_SMCLK' (at pp.c:9413)
      Assignment: op='=' (at pp.c:9414)
        StructRef: type='.' (at pp.c:9414)
          ID: name='sampcon_id' (at pp.c:9414)
        ID: name='SAMPCON_CLOCK_DIV_1' (at pp.c:9414)
  Decl: name='AdcStreamP__AdcConfigure__default__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:9416)
    FuncDecl: quals=None (at pp.c:9416)
      ParamList:  (at pp.c:9416)
        Decl: name='c', quals=[], storage=[] (at pp.c:9416)
          TypeDecl: declname='c', quals=[] (at pp.c:9416)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:9416)
        TypeDecl: declname='AdcStreamP__AdcConfigure__default__getConfiguration', quals=['const'] (at pp.c:9416)
          IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__default__configureMultiple', quals=[], storage=['inline', 'static'] (at pp.c:9420)
    FuncDecl: quals=None (at pp.c:9420)
      ParamList:  (at pp.c:9420)
        Decl: name='c', quals=[], storage=[] (at pp.c:9420)
          TypeDecl: declname='c', quals=[] (at pp.c:9420)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:9421)
          PtrDecl: quals=[] (at pp.c:9421)
            TypeDecl: declname='config', quals=['const'] (at pp.c:9421)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        Decl: name='b', quals=[], storage=[] (at pp.c:9421)
          ArrayDecl:  (at pp.c:9421)
            TypeDecl: declname='b', quals=[] (at pp.c:9421)
              IdentifierType: names=['uint16_t'] (at None)
        Decl: name='numSamples', quals=[], storage=[] (at pp.c:9422)
          TypeDecl: declname='numSamples', quals=[] (at pp.c:9422)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='jiffies', quals=[], storage=[] (at pp.c:9422)
          TypeDecl: declname='jiffies', quals=[] (at pp.c:9422)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__default__configureMultiple', quals=[] (at pp.c:9420)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__default__getData', quals=[], storage=['inline', 'static'] (at pp.c:9426)
    FuncDecl: quals=None (at pp.c:9426)
      ParamList:  (at pp.c:9426)
        Decl: name='c', quals=[], storage=[] (at pp.c:9426)
          TypeDecl: declname='c', quals=[] (at pp.c:9426)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__default__getData', quals=[] (at pp.c:9426)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AdcStreamP__SingleChannel__default__configureSingle', quals=[], storage=['inline', 'static'] (at pp.c:9430)
    FuncDecl: quals=None (at pp.c:9430)
      ParamList:  (at pp.c:9430)
        Decl: name='c', quals=[], storage=[] (at pp.c:9430)
          TypeDecl: declname='c', quals=[] (at pp.c:9430)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='config', quals=['const'], storage=[] (at pp.c:9431)
          PtrDecl: quals=[] (at pp.c:9431)
            TypeDecl: declname='config', quals=['const'] (at pp.c:9431)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
      TypeDecl: declname='AdcStreamP__SingleChannel__default__configureSingle', quals=[] (at pp.c:9430)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='Msp430AlarmC__2__Msp430Compare__setEvent', quals=[], storage=['static'] (at pp.c:9433)
    FuncDecl: quals=None (at pp.c:9433)
      ParamList:  (at pp.c:9433)
        Decl: name='time', quals=[], storage=[] (at pp.c:9433)
          TypeDecl: declname='time', quals=[] (at pp.c:9433)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__2__Msp430Compare__setEvent', quals=[] (at pp.c:9433)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__2__Msp430Compare__setEventFromNow', quals=[], storage=['static'] (at pp.c:9435)
    FuncDecl: quals=None (at pp.c:9435)
      ParamList:  (at pp.c:9435)
        Decl: name='delta', quals=[], storage=[] (at pp.c:9435)
          TypeDecl: declname='delta', quals=[] (at pp.c:9435)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__2__Msp430Compare__setEventFromNow', quals=[] (at pp.c:9435)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__2__Msp430Timer__get', quals=[], storage=['static'] (at pp.c:9437)
    FuncDecl: quals=None (at pp.c:9437)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__2__Msp430Timer__get', quals=[] (at pp.c:9437)
        IdentifierType: names=['uint16_t'] (at None)
  Decl: name='Msp430AlarmC__2__Alarm__fired', quals=[], storage=['static'] (at pp.c:9439)
    FuncDecl: quals=None (at pp.c:9439)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__2__Alarm__fired', quals=[] (at pp.c:9439)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__2__Msp430TimerControl__enableEvents', quals=[], storage=['static'] (at pp.c:9441)
    FuncDecl: quals=None (at pp.c:9441)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__2__Msp430TimerControl__enableEvents', quals=[] (at pp.c:9441)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__2__Msp430TimerControl__disableEvents', quals=[], storage=['static'] (at pp.c:9442)
    FuncDecl: quals=None (at pp.c:9442)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__2__Msp430TimerControl__disableEvents', quals=[] (at pp.c:9442)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__2__Msp430TimerControl__clearPendingInterrupt', quals=[], storage=['static'] (at pp.c:9444)
    FuncDecl: quals=None (at pp.c:9444)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__2__Msp430TimerControl__clearPendingInterrupt', quals=[] (at pp.c:9444)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__2__Msp430Compare__fired', quals=[], storage=['inline', 'static'] (at pp.c:9446)
    FuncDecl: quals=None (at pp.c:9446)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__2__Msp430Compare__fired', quals=[] (at pp.c:9446)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__2__Alarm__startAt', quals=[], storage=['inline', 'static'] (at pp.c:9457)
    FuncDecl: quals=None (at pp.c:9457)
      ParamList:  (at pp.c:9457)
        Decl: name='t0', quals=[], storage=[] (at pp.c:9457)
          TypeDecl: declname='t0', quals=[] (at pp.c:9457)
            IdentifierType: names=['uint16_t'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:9457)
          TypeDecl: declname='dt', quals=[] (at pp.c:9457)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='Msp430AlarmC__2__Alarm__startAt', quals=[] (at pp.c:9457)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430AlarmC__2__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9459)
    FuncDecl: quals=None (at pp.c:9459)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430AlarmC__2__Msp430Timer__overflow', quals=[] (at pp.c:9459)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__2__Alarm__fired', quals=[], storage=['static'] (at pp.c:9461)
    FuncDecl: quals=None (at pp.c:9461)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__2__Alarm__fired', quals=[] (at pp.c:9461)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__2__AlarmFrom__startAt', quals=[], storage=['static'] (at pp.c:9463)
    FuncDecl: quals=None (at pp.c:9463)
      ParamList:  (at pp.c:9463)
        Decl: name='t0', quals=[], storage=[] (at pp.c:9463)
          TypeDecl: declname='t0', quals=[] (at pp.c:9463)
            IdentifierType: names=['TransformAlarmC__2__AlarmFrom__size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:9463)
          TypeDecl: declname='dt', quals=[] (at pp.c:9463)
            IdentifierType: names=['TransformAlarmC__2__AlarmFrom__size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__2__AlarmFrom__startAt', quals=[] (at pp.c:9463)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__2__Counter__get', quals=[], storage=['static'] (at pp.c:9465)
    FuncDecl: quals=None (at pp.c:9465)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__2__Counter__get', quals=[] (at pp.c:9465)
        IdentifierType: names=['TransformAlarmC__2__Counter__size_type'] (at None)
  Decl: name='TransformAlarmC__2__m_t0', quals=[], storage=[] (at pp.c:9467)
    TypeDecl: declname='TransformAlarmC__2__m_t0', quals=[] (at pp.c:9467)
      IdentifierType: names=['TransformAlarmC__2__to_size_type'] (at None)
  Decl: name='TransformAlarmC__2__m_dt', quals=[], storage=[] (at pp.c:9468)
    TypeDecl: declname='TransformAlarmC__2__m_dt', quals=[] (at pp.c:9468)
      IdentifierType: names=['TransformAlarmC__2__to_size_type'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:9470)
    Enum: name='TransformAlarmC__2____nesc_unnamed4377' (at pp.c:9470)
      EnumeratorList:  (at pp.c:9472)
        Enumerator: name='TransformAlarmC__2__MAX_DELAY_LOG2' (at pp.c:9472)
          BinaryOp: op='-' (at pp.c:9472)
            BinaryOp: op='-' (at pp.c:9472)
              BinaryOp: op='*' (at pp.c:9472)
                Constant: type='int', value='8' (at pp.c:9472)
                UnaryOp: op='sizeof' (at pp.c:9472)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['TransformAlarmC__2__from_size_type'] (at None)
              Constant: type='int', value='1' (at pp.c:9472)
            Constant: type='int', value='5' (at pp.c:9472)
        Enumerator: name='TransformAlarmC__2__MAX_DELAY' (at pp.c:9473)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__2__to_size_type'] (at None)
              Constant: type='int', value='1' (at pp.c:9473)
            ID: name='TransformAlarmC__2__MAX_DELAY_LOG2' (at pp.c:9473)
  Decl: name='TransformAlarmC__2__Alarm__getNow', quals=[], storage=['inline', 'static'] (at pp.c:9476)
    FuncDecl: quals=None (at pp.c:9476)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__2__Alarm__getNow', quals=[] (at pp.c:9476)
        IdentifierType: names=['TransformAlarmC__2__to_size_type'] (at None)
  Decl: name='TransformAlarmC__2__set_alarm', quals=[], storage=['static'] (at pp.c:9478)
    FuncDecl: quals=None (at pp.c:9478)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__2__set_alarm', quals=[] (at pp.c:9478)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__2__Alarm__startAt', quals=[], storage=['inline', 'static'] (at pp.c:9480)
    FuncDecl: quals=None (at pp.c:9480)
      ParamList:  (at pp.c:9480)
        Decl: name='t0', quals=[], storage=[] (at pp.c:9480)
          TypeDecl: declname='t0', quals=[] (at pp.c:9480)
            IdentifierType: names=['TransformAlarmC__2__to_size_type'] (at None)
        Decl: name='dt', quals=[], storage=[] (at pp.c:9480)
          TypeDecl: declname='dt', quals=[] (at pp.c:9480)
            IdentifierType: names=['TransformAlarmC__2__to_size_type'] (at None)
      TypeDecl: declname='TransformAlarmC__2__Alarm__startAt', quals=[] (at pp.c:9480)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__2__AlarmFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:9482)
    FuncDecl: quals=None (at pp.c:9482)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__2__AlarmFrom__fired', quals=[] (at pp.c:9482)
        IdentifierType: names=['void'] (at None)
  Decl: name='TransformAlarmC__2__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9484)
    FuncDecl: quals=None (at pp.c:9484)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='TransformAlarmC__2__Counter__overflow', quals=[] (at pp.c:9484)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__Service__read', quals=[], storage=['static'] (at pp.c:9486)
    FuncDecl: quals=None (at pp.c:9486)
      ParamList:  (at pp.c:9488)
        Decl: name='arg_0x10292d148', quals=[], storage=[] (at pp.c:9488)
          TypeDecl: declname='arg_0x10292d148', quals=[] (at pp.c:9488)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='usPeriod', quals=[], storage=[] (at pp.c:9490)
          TypeDecl: declname='usPeriod', quals=[] (at pp.c:9490)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__Service__read', quals=[] (at pp.c:9486)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbitratedReadStreamC__0__ReadStream__bufferDone', quals=[], storage=['static'] (at pp.c:9501)
    FuncDecl: quals=None (at pp.c:9501)
      ParamList:  (at pp.c:9503)
        Decl: name='arg_0x102931020', quals=[], storage=[] (at pp.c:9503)
          TypeDecl: declname='arg_0x102931020', quals=[] (at pp.c:9503)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:9505)
          TypeDecl: declname='result', quals=[] (at pp.c:9505)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:9507)
          PtrDecl: quals=[] (at pp.c:9507)
            TypeDecl: declname='buf', quals=[] (at pp.c:9507)
              IdentifierType: names=['ArbitratedReadStreamC__0__ReadStream__val_t'] (at None)
        Decl: name='count', quals=[], storage=[] (at pp.c:9511)
          TypeDecl: declname='count', quals=[] (at pp.c:9511)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__bufferDone', quals=[] (at pp.c:9501)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__ReadStream__readDone', quals=[], storage=['static'] (at pp.c:9513)
    FuncDecl: quals=None (at pp.c:9513)
      ParamList:  (at pp.c:9515)
        Decl: name='arg_0x102931020', quals=[], storage=[] (at pp.c:9515)
          TypeDecl: declname='arg_0x102931020', quals=[] (at pp.c:9515)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:9517)
          TypeDecl: declname='result', quals=[] (at pp.c:9517)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='usActualPeriod', quals=[], storage=[] (at pp.c:9517)
          TypeDecl: declname='usActualPeriod', quals=[] (at pp.c:9517)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__readDone', quals=[] (at pp.c:9513)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__Resource__release', quals=[], storage=['static'] (at pp.c:9519)
    FuncDecl: quals=None (at pp.c:9519)
      ParamList:  (at pp.c:9521)
        Decl: name='arg_0x102929020', quals=[], storage=[] (at pp.c:9521)
          TypeDecl: declname='arg_0x102929020', quals=[] (at pp.c:9521)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__Resource__release', quals=[] (at pp.c:9519)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbitratedReadStreamC__0__period', quals=[], storage=[] (at pp.c:9525)
    ArrayDecl:  (at pp.c:9525)
      TypeDecl: declname='ArbitratedReadStreamC__0__period', quals=[] (at pp.c:9525)
        IdentifierType: names=['uint32_t'] (at None)
      Constant: type='int', value='1U' (at pp.c:9525)
  Decl: name='ArbitratedReadStreamC__0__Service__bufferDone', quals=[], storage=['inline', 'static'] (at pp.c:9527)
    FuncDecl: quals=None (at pp.c:9527)
      ParamList:  (at pp.c:9527)
        Decl: name='client', quals=[], storage=[] (at pp.c:9527)
          TypeDecl: declname='client', quals=[] (at pp.c:9527)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:9527)
          TypeDecl: declname='result', quals=[] (at pp.c:9527)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:9527)
          PtrDecl: quals=[] (at pp.c:9527)
            TypeDecl: declname='buf', quals=[] (at pp.c:9527)
              IdentifierType: names=['ArbitratedReadStreamC__0__val_t'] (at None)
        Decl: name='count', quals=[], storage=[] (at pp.c:9527)
          TypeDecl: declname='count', quals=[] (at pp.c:9527)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__Service__bufferDone', quals=[] (at pp.c:9527)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__Service__readDone', quals=[], storage=['inline', 'static'] (at pp.c:9532)
    FuncDecl: quals=None (at pp.c:9532)
      ParamList:  (at pp.c:9532)
        Decl: name='client', quals=[], storage=[] (at pp.c:9532)
          TypeDecl: declname='client', quals=[] (at pp.c:9532)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:9532)
          TypeDecl: declname='result', quals=[] (at pp.c:9532)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='actualPeriod', quals=[], storage=[] (at pp.c:9532)
          TypeDecl: declname='actualPeriod', quals=[] (at pp.c:9532)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__Service__readDone', quals=[] (at pp.c:9532)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__Resource__granted', quals=[], storage=['inline', 'static'] (at pp.c:9538)
    FuncDecl: quals=None (at pp.c:9538)
      ParamList:  (at pp.c:9538)
        Decl: name='client', quals=[], storage=[] (at pp.c:9538)
          TypeDecl: declname='client', quals=[] (at pp.c:9538)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__Resource__granted', quals=[] (at pp.c:9538)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__Resource__default__release', quals=[], storage=['inline', 'static'] (at pp.c:9546)
    FuncDecl: quals=None (at pp.c:9546)
      ParamList:  (at pp.c:9546)
        Decl: name='client', quals=[], storage=[] (at pp.c:9546)
          TypeDecl: declname='client', quals=[] (at pp.c:9546)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__Resource__default__release', quals=[] (at pp.c:9546)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='ArbitratedReadStreamC__0__ReadStream__default__bufferDone', quals=[], storage=['inline', 'static'] (at pp.c:9548)
    FuncDecl: quals=None (at pp.c:9548)
      ParamList:  (at pp.c:9548)
        Decl: name='client', quals=[], storage=[] (at pp.c:9548)
          TypeDecl: declname='client', quals=[] (at pp.c:9548)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:9548)
          TypeDecl: declname='result', quals=[] (at pp.c:9548)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='buf', quals=[], storage=[] (at pp.c:9548)
          PtrDecl: quals=[] (at pp.c:9548)
            TypeDecl: declname='buf', quals=[] (at pp.c:9548)
              IdentifierType: names=['ArbitratedReadStreamC__0__val_t'] (at None)
        Decl: name='count', quals=[], storage=[] (at pp.c:9548)
          TypeDecl: declname='count', quals=[] (at pp.c:9548)
            IdentifierType: names=['uint16_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__default__bufferDone', quals=[] (at pp.c:9548)
        IdentifierType: names=['void'] (at None)
  Decl: name='ArbitratedReadStreamC__0__ReadStream__default__readDone', quals=[], storage=['inline', 'static'] (at pp.c:9552)
    FuncDecl: quals=None (at pp.c:9552)
      ParamList:  (at pp.c:9552)
        Decl: name='client', quals=[], storage=[] (at pp.c:9552)
          TypeDecl: declname='client', quals=[] (at pp.c:9552)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='result', quals=[], storage=[] (at pp.c:9552)
          TypeDecl: declname='result', quals=[] (at pp.c:9552)
            IdentifierType: names=['error_t'] (at None)
        Decl: name='actualPeriod', quals=[], storage=[] (at pp.c:9552)
          TypeDecl: declname='actualPeriod', quals=[] (at pp.c:9552)
            IdentifierType: names=['uint32_t'] (at None)
      TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__default__readDone', quals=[] (at pp.c:9552)
        IdentifierType: names=['void'] (at None)
  Decl: name='Msp430Adc12ConfAlertC__1__ConfUp__getConfiguration', quals=[], storage=['static'] (at pp.c:9554)
    FuncDecl: quals=None (at pp.c:9554)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ConfAlertC__1__ConfUp__getConfiguration', quals=[] (at pp.c:9554)
        IdentifierType: names=['Msp430Adc12ConfAlertC__1__ConfUp__adc_config_t'] (at None)
  Decl: name='Msp430Adc12ConfAlertC__1__ConfSub__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:9556)
    FuncDecl: quals=None (at pp.c:9556)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      PtrDecl: quals=[] (at pp.c:9556)
        TypeDecl: declname='Msp430Adc12ConfAlertC__1__ConfSub__getConfiguration', quals=['const'] (at pp.c:9556)
          IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name='Msp430InternalVoltageP__config', quals=['const'], storage=[] (at pp.c:9558)
    TypeDecl: declname='Msp430InternalVoltageP__config', quals=['const'] (at pp.c:9558)
      IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    ExprList:  (at pp.c:9559)
      Assignment: op='=' (at pp.c:9559)
        StructRef: type='.' (at pp.c:9559)
          ID: name='inch' (at pp.c:9559)
        ID: name='SUPPLY_VOLTAGE_HALF_CHANNEL' (at pp.c:9559)
      Assignment: op='=' (at pp.c:9560)
        StructRef: type='.' (at pp.c:9560)
          ID: name='sref' (at pp.c:9560)
        ID: name='REFERENCE_VREFplus_AVss' (at pp.c:9560)
      Assignment: op='=' (at pp.c:9561)
        StructRef: type='.' (at pp.c:9561)
          ID: name='ref2_5v' (at pp.c:9561)
        ID: name='REFVOLT_LEVEL_1_5' (at pp.c:9561)
      Assignment: op='=' (at pp.c:9562)
        StructRef: type='.' (at pp.c:9562)
          ID: name='adc12ssel' (at pp.c:9562)
        ID: name='SHT_SOURCE_ACLK' (at pp.c:9562)
      Assignment: op='=' (at pp.c:9563)
        StructRef: type='.' (at pp.c:9563)
          ID: name='adc12div' (at pp.c:9563)
        ID: name='SHT_CLOCK_DIV_1' (at pp.c:9563)
      Assignment: op='=' (at pp.c:9564)
        StructRef: type='.' (at pp.c:9564)
          ID: name='sht' (at pp.c:9564)
        ID: name='SAMPLE_HOLD_4_CYCLES' (at pp.c:9564)
      Assignment: op='=' (at pp.c:9565)
        StructRef: type='.' (at pp.c:9565)
          ID: name='sampcon_ssel' (at pp.c:9565)
        ID: name='SAMPCON_SOURCE_SMCLK' (at pp.c:9565)
      Assignment: op='=' (at pp.c:9566)
        StructRef: type='.' (at pp.c:9566)
          ID: name='sampcon_id' (at pp.c:9566)
        ID: name='SAMPCON_CLOCK_DIV_1' (at pp.c:9566)
  Decl: name='Msp430InternalVoltageP__AdcConfigure__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:9569)
    FuncDecl: quals=None (at pp.c:9569)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      PtrDecl: quals=[] (at pp.c:9569)
        TypeDecl: declname='Msp430InternalVoltageP__AdcConfigure__getConfiguration', quals=['const'] (at pp.c:9569)
          IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name='Msp430Adc12ConfAlertC__2__ConfUp__getConfiguration', quals=[], storage=['static'] (at pp.c:9571)
    FuncDecl: quals=None (at pp.c:9571)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='Msp430Adc12ConfAlertC__2__ConfUp__getConfiguration', quals=[] (at pp.c:9571)
        IdentifierType: names=['Msp430Adc12ConfAlertC__2__ConfUp__adc_config_t'] (at None)
  Decl: name='Msp430Adc12ConfAlertC__2__ConfSub__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:9573)
    FuncDecl: quals=None (at pp.c:9573)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      PtrDecl: quals=[] (at pp.c:9573)
        TypeDecl: declname='Msp430Adc12ConfAlertC__2__ConfSub__getConfiguration', quals=['const'] (at pp.c:9573)
          IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
  Decl: name='AMQueueEntryP__0__AMSend__sendDone', quals=[], storage=['static'] (at pp.c:9575)
    FuncDecl: quals=None (at pp.c:9575)
      ParamList:  (at pp.c:9577)
        Decl: name='msg', quals=[], storage=[] (at pp.c:9577)
          PtrDecl: quals=[] (at pp.c:9577)
            TypeDecl: declname='msg', quals=[] (at pp.c:9577)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:9584)
          TypeDecl: declname='error', quals=[] (at pp.c:9584)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='AMQueueEntryP__0__AMSend__sendDone', quals=[] (at pp.c:9575)
        IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueEntryP__0__Send__send', quals=[], storage=['static'] (at pp.c:9586)
    FuncDecl: quals=None (at pp.c:9586)
      ParamList:  (at pp.c:9588)
        Decl: name='msg', quals=[], storage=[] (at pp.c:9588)
          PtrDecl: quals=[] (at pp.c:9588)
            TypeDecl: declname='msg', quals=[] (at pp.c:9588)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:9596)
          TypeDecl: declname='len', quals=[] (at pp.c:9596)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AMQueueEntryP__0__Send__send', quals=[] (at pp.c:9586)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AMQueueEntryP__0__Send__getPayload', quals=[], storage=['static'] (at pp.c:9602)
    FuncDecl: quals=None (at pp.c:9602)
      ParamList:  (at pp.c:9604)
        Decl: name='msg', quals=[], storage=[] (at pp.c:9604)
          PtrDecl: quals=[] (at pp.c:9604)
            TypeDecl: declname='msg', quals=[] (at pp.c:9604)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:9607)
          TypeDecl: declname='len', quals=[] (at pp.c:9607)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:9600)
        TypeDecl: declname='AMQueueEntryP__0__Send__getPayload', quals=[] (at pp.c:9602)
          IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueEntryP__0__Send__maxPayloadLength', quals=[], storage=['static'] (at pp.c:9609)
    FuncDecl: quals=None (at pp.c:9609)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AMQueueEntryP__0__Send__maxPayloadLength', quals=[] (at pp.c:9609)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='AMQueueEntryP__0__AMPacket__setDestination', quals=[], storage=['static'] (at pp.c:9611)
    FuncDecl: quals=None (at pp.c:9611)
      ParamList:  (at pp.c:9613)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:9613)
          PtrDecl: quals=[] (at pp.c:9613)
            TypeDecl: declname='amsg', quals=[] (at pp.c:9613)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='addr', quals=[], storage=[] (at pp.c:9617)
          TypeDecl: declname='addr', quals=[] (at pp.c:9617)
            IdentifierType: names=['am_addr_t'] (at None)
      TypeDecl: declname='AMQueueEntryP__0__AMPacket__setDestination', quals=[] (at pp.c:9611)
        IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueEntryP__0__AMPacket__setType', quals=[], storage=['static'] (at pp.c:9619)
    FuncDecl: quals=None (at pp.c:9619)
      ParamList:  (at pp.c:9621)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:9621)
          PtrDecl: quals=[] (at pp.c:9621)
            TypeDecl: declname='amsg', quals=[] (at pp.c:9621)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='t', quals=[], storage=[] (at pp.c:9625)
          TypeDecl: declname='t', quals=[] (at pp.c:9625)
            IdentifierType: names=['am_id_t'] (at None)
      TypeDecl: declname='AMQueueEntryP__0__AMPacket__setType', quals=[] (at pp.c:9619)
        IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueEntryP__0__AMSend__send', quals=[], storage=['inline', 'static'] (at pp.c:9627)
    FuncDecl: quals=None (at pp.c:9627)
      ParamList:  (at pp.c:9627)
        Decl: name='dest', quals=[], storage=[] (at pp.c:9627)
          TypeDecl: declname='dest', quals=[] (at pp.c:9627)
            IdentifierType: names=['am_addr_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:9628)
          PtrDecl: quals=[] (at pp.c:9628)
            TypeDecl: declname='msg', quals=[] (at pp.c:9628)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:9629)
          TypeDecl: declname='len', quals=[] (at pp.c:9629)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AMQueueEntryP__0__AMSend__send', quals=[] (at pp.c:9627)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AMQueueEntryP__0__Send__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:9639)
    FuncDecl: quals=None (at pp.c:9639)
      ParamList:  (at pp.c:9639)
        Decl: name='m', quals=[], storage=[] (at pp.c:9639)
          PtrDecl: quals=[] (at pp.c:9639)
            TypeDecl: declname='m', quals=[] (at pp.c:9639)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='err', quals=[], storage=[] (at pp.c:9639)
          TypeDecl: declname='err', quals=[] (at pp.c:9639)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='AMQueueEntryP__0__Send__sendDone', quals=[] (at pp.c:9639)
        IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueEntryP__0__AMSend__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:9643)
    FuncDecl: quals=None (at pp.c:9643)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AMQueueEntryP__0__AMSend__maxPayloadLength', quals=[] (at pp.c:9643)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='AMQueueEntryP__0__AMSend__getPayload', quals=[], storage=['inline', 'static'] (at pp.c:9647)
    FuncDecl: quals=None (at pp.c:9647)
      ParamList:  (at pp.c:9647)
        Decl: name='m', quals=[], storage=[] (at pp.c:9647)
          PtrDecl: quals=[] (at pp.c:9647)
            TypeDecl: declname='m', quals=[] (at pp.c:9647)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:9647)
          TypeDecl: declname='len', quals=[] (at pp.c:9647)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:9647)
        TypeDecl: declname='AMQueueEntryP__0__AMSend__getPayload', quals=[] (at pp.c:9647)
          IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueImplP__0__AMSend__send', quals=[], storage=['static'] (at pp.c:9649)
    FuncDecl: quals=None (at pp.c:9649)
      ParamList:  (at pp.c:9651)
        Decl: name='arg_0x1029e9c70', quals=[], storage=[] (at pp.c:9651)
          TypeDecl: declname='arg_0x1029e9c70', quals=[] (at pp.c:9651)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='addr', quals=[], storage=[] (at pp.c:9653)
          TypeDecl: declname='addr', quals=[] (at pp.c:9653)
            IdentifierType: names=['am_addr_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:9655)
          PtrDecl: quals=[] (at pp.c:9655)
            TypeDecl: declname='msg', quals=[] (at pp.c:9655)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:9664)
          TypeDecl: declname='len', quals=[] (at pp.c:9664)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AMQueueImplP__0__AMSend__send', quals=[] (at pp.c:9649)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AMQueueImplP__0__AMSend__getPayload', quals=[], storage=['static'] (at pp.c:9670)
    FuncDecl: quals=None (at pp.c:9670)
      ParamList:  (at pp.c:9672)
        Decl: name='arg_0x1029e9c70', quals=[], storage=[] (at pp.c:9672)
          TypeDecl: declname='arg_0x1029e9c70', quals=[] (at pp.c:9672)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:9674)
          PtrDecl: quals=[] (at pp.c:9674)
            TypeDecl: declname='msg', quals=[] (at pp.c:9674)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:9677)
          TypeDecl: declname='len', quals=[] (at pp.c:9677)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:9668)
        TypeDecl: declname='AMQueueImplP__0__AMSend__getPayload', quals=[] (at pp.c:9670)
          IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueImplP__0__AMSend__maxPayloadLength', quals=[], storage=['static'] (at pp.c:9679)
    FuncDecl: quals=None (at pp.c:9679)
      ParamList:  (at pp.c:9681)
        Decl: name='arg_0x1029e9c70', quals=[], storage=[] (at pp.c:9681)
          TypeDecl: declname='arg_0x1029e9c70', quals=[] (at pp.c:9681)
            IdentifierType: names=['am_id_t'] (at None)
      TypeDecl: declname='AMQueueImplP__0__AMSend__maxPayloadLength', quals=[] (at pp.c:9679)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='AMQueueImplP__0__Send__sendDone', quals=[], storage=['static'] (at pp.c:9683)
    FuncDecl: quals=None (at pp.c:9683)
      ParamList:  (at pp.c:9685)
        Decl: name='arg_0x1029ea990', quals=[], storage=[] (at pp.c:9685)
          TypeDecl: declname='arg_0x1029ea990', quals=[] (at pp.c:9685)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:9687)
          PtrDecl: quals=[] (at pp.c:9687)
            TypeDecl: declname='msg', quals=[] (at pp.c:9687)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='error', quals=[], storage=[] (at pp.c:9691)
          TypeDecl: declname='error', quals=[] (at pp.c:9691)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='AMQueueImplP__0__Send__sendDone', quals=[] (at pp.c:9683)
        IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueImplP__0__Packet__payloadLength', quals=[], storage=['static'] (at pp.c:9693)
    FuncDecl: quals=None (at pp.c:9693)
      ParamList:  (at pp.c:9695)
        Decl: name='msg', quals=[], storage=[] (at pp.c:9695)
          PtrDecl: quals=[] (at pp.c:9695)
            TypeDecl: declname='msg', quals=[] (at pp.c:9695)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='AMQueueImplP__0__Packet__payloadLength', quals=[] (at pp.c:9693)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='AMQueueImplP__0__Packet__setPayloadLength', quals=[], storage=['static'] (at pp.c:9697)
    FuncDecl: quals=None (at pp.c:9697)
      ParamList:  (at pp.c:9699)
        Decl: name='msg', quals=[], storage=[] (at pp.c:9699)
          PtrDecl: quals=[] (at pp.c:9699)
            TypeDecl: declname='msg', quals=[] (at pp.c:9699)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:9703)
          TypeDecl: declname='len', quals=[] (at pp.c:9703)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AMQueueImplP__0__Packet__setPayloadLength', quals=[] (at pp.c:9697)
        IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueImplP__0__errorTask__postTask', quals=[], storage=['static'] (at pp.c:9705)
    FuncDecl: quals=None (at pp.c:9705)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AMQueueImplP__0__errorTask__postTask', quals=[] (at pp.c:9705)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AMQueueImplP__0__AMPacket__destination', quals=[], storage=['static'] (at pp.c:9707)
    FuncDecl: quals=None (at pp.c:9707)
      ParamList:  (at pp.c:9709)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:9709)
          PtrDecl: quals=[] (at pp.c:9709)
            TypeDecl: declname='amsg', quals=[] (at pp.c:9709)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='AMQueueImplP__0__AMPacket__destination', quals=[] (at pp.c:9707)
        IdentifierType: names=['am_addr_t'] (at None)
  Decl: name='AMQueueImplP__0__AMPacket__type', quals=[], storage=['static'] (at pp.c:9711)
    FuncDecl: quals=None (at pp.c:9711)
      ParamList:  (at pp.c:9713)
        Decl: name='amsg', quals=[], storage=[] (at pp.c:9713)
          PtrDecl: quals=[] (at pp.c:9713)
            TypeDecl: declname='amsg', quals=[] (at pp.c:9713)
              IdentifierType: names=['message_t'] (at None)
      TypeDecl: declname='AMQueueImplP__0__AMPacket__type', quals=[] (at pp.c:9711)
        IdentifierType: names=['am_id_t'] (at None)
  Decl: name=None, quals=[], storage=[] (at pp.c:9715)
    Enum: name='AMQueueImplP__0____nesc_unnamed4378' (at pp.c:9715)
      EnumeratorList:  (at pp.c:9717)
        Enumerator: name='AMQueueImplP__0__CancelTask' (at pp.c:9717)
          Constant: type='int', value='18U' (at pp.c:9717)
  Typedef: name='AMQueueImplP__0____nesc_sillytask_CancelTask', quals=[], storage=['typedef'] (at pp.c:9720)
    ArrayDecl:  (at pp.c:9720)
      TypeDecl: declname='AMQueueImplP__0____nesc_sillytask_CancelTask', quals=[] (at pp.c:9720)
        IdentifierType: names=['int'] (at None)
      ID: name='AMQueueImplP__0__CancelTask' (at pp.c:9720)
  Decl: name=None, quals=[], storage=[] (at pp.c:9722)
    Enum: name='AMQueueImplP__0____nesc_unnamed4379' (at pp.c:9722)
      EnumeratorList:  (at pp.c:9724)
        Enumerator: name='AMQueueImplP__0__errorTask' (at pp.c:9724)
          Constant: type='int', value='19U' (at pp.c:9724)
  Typedef: name='AMQueueImplP__0____nesc_sillytask_errorTask', quals=[], storage=['typedef'] (at pp.c:9727)
    ArrayDecl:  (at pp.c:9727)
      TypeDecl: declname='AMQueueImplP__0____nesc_sillytask_errorTask', quals=[] (at pp.c:9727)
        IdentifierType: names=['int'] (at None)
      ID: name='AMQueueImplP__0__errorTask' (at pp.c:9727)
  Typedef: name='AMQueueImplP__0__queue_entry_t', quals=[], storage=['typedef'] (at pp.c:9732)
    TypeDecl: declname='AMQueueImplP__0__queue_entry_t', quals=[] (at pp.c:9732)
      Struct: name='AMQueueImplP__0____nesc_unnamed4380', packed=False (at pp.c:9730)
        Decl: name='msg', quals=[], storage=[] (at 0)
          PtrDecl: quals=[] (at pp.c:9731)
            TypeDecl: declname='msg', quals=[] (at pp.c:9731)
              IdentifierType: names=['message_t'] (at None)
  Decl: name='AMQueueImplP__0__current', quals=[], storage=[] (at pp.c:9734)
    TypeDecl: declname='AMQueueImplP__0__current', quals=[] (at pp.c:9734)
      IdentifierType: names=['uint8_t'] (at None)
    Constant: type='int', value='1' (at pp.c:9734)
  Decl: name='AMQueueImplP__0__queue', quals=[], storage=[] (at pp.c:9735)
    ArrayDecl:  (at pp.c:9735)
      TypeDecl: declname='AMQueueImplP__0__queue', quals=[] (at pp.c:9735)
        IdentifierType: names=['AMQueueImplP__0__queue_entry_t'] (at None)
      Constant: type='int', value='1' (at pp.c:9735)
  Decl: name='AMQueueImplP__0__cancelMask', quals=[], storage=[] (at pp.c:9736)
    ArrayDecl:  (at pp.c:9736)
      TypeDecl: declname='AMQueueImplP__0__cancelMask', quals=[] (at pp.c:9736)
        IdentifierType: names=['uint8_t'] (at None)
      BinaryOp: op='+' (at pp.c:9736)
        BinaryOp: op='/' (at pp.c:9736)
          Constant: type='int', value='1' (at pp.c:9736)
          Constant: type='int', value='8' (at pp.c:9736)
        Constant: type='int', value='1' (at pp.c:9736)
  Decl: name='AMQueueImplP__0__tryToSend', quals=[], storage=['inline', 'static'] (at pp.c:9738)
    FuncDecl: quals=None (at pp.c:9738)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AMQueueImplP__0__tryToSend', quals=[] (at pp.c:9738)
        IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueImplP__0__nextPacket', quals=[], storage=['inline', 'static'] (at pp.c:9740)
    FuncDecl: quals=None (at pp.c:9740)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AMQueueImplP__0__nextPacket', quals=[] (at pp.c:9740)
        IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueImplP__0__Send__send', quals=[], storage=['inline', 'static'] (at pp.c:9742)
    FuncDecl: quals=None (at pp.c:9742)
      ParamList:  (at pp.c:9742)
        Decl: name='clientId', quals=[], storage=[] (at pp.c:9742)
          TypeDecl: declname='clientId', quals=[] (at pp.c:9742)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:9742)
          PtrDecl: quals=[] (at pp.c:9742)
            TypeDecl: declname='msg', quals=[] (at pp.c:9742)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:9743)
          TypeDecl: declname='len', quals=[] (at pp.c:9743)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AMQueueImplP__0__Send__send', quals=[] (at pp.c:9742)
        IdentifierType: names=['error_t'] (at None)
  Decl: name='AMQueueImplP__0__CancelTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:9745)
    FuncDecl: quals=None (at pp.c:9745)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AMQueueImplP__0__CancelTask__runTask', quals=[] (at pp.c:9745)
        IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueImplP__0__sendDone', quals=[], storage=['static'] (at pp.c:9747)
    FuncDecl: quals=None (at pp.c:9747)
      ParamList:  (at pp.c:9747)
        Decl: name='last', quals=[], storage=[] (at pp.c:9747)
          TypeDecl: declname='last', quals=[] (at pp.c:9747)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:9747)
          PtrDecl: quals=[] (at pp.c:9747)
            TypeDecl: declname='msg', quals=[] (at pp.c:9747)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='err', quals=[], storage=[] (at pp.c:9747)
          TypeDecl: declname='err', quals=[] (at pp.c:9747)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='AMQueueImplP__0__sendDone', quals=[] (at pp.c:9747)
        IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueImplP__0__errorTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:9753)
    FuncDecl: quals=None (at pp.c:9753)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AMQueueImplP__0__errorTask__runTask', quals=[] (at pp.c:9753)
        IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueImplP__0__tryToSend', quals=[], storage=['inline', 'static'] (at pp.c:9758)
    FuncDecl: quals=None (at pp.c:9758)
      ParamList:  (at None)
        Typename: quals=[] (at None)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at None)
      TypeDecl: declname='AMQueueImplP__0__tryToSend', quals=[] (at pp.c:9758)
        IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueImplP__0__AMSend__sendDone', quals=[], storage=['static'] (at pp.c:9760)
    FuncDecl: quals=None (at pp.c:9760)
      ParamList:  (at pp.c:9760)
        Decl: name='id', quals=[], storage=[] (at pp.c:9760)
          TypeDecl: declname='id', quals=[] (at pp.c:9760)
            IdentifierType: names=['am_id_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:9760)
          PtrDecl: quals=[] (at pp.c:9760)
            TypeDecl: declname='msg', quals=[] (at pp.c:9760)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='err', quals=[], storage=[] (at pp.c:9760)
          TypeDecl: declname='err', quals=[] (at pp.c:9760)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='AMQueueImplP__0__AMSend__sendDone', quals=[] (at pp.c:9760)
        IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueImplP__0__Send__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:9762)
    FuncDecl: quals=None (at pp.c:9762)
      ParamList:  (at pp.c:9762)
        Decl: name='id', quals=[], storage=[] (at pp.c:9762)
          TypeDecl: declname='id', quals=[] (at pp.c:9762)
            IdentifierType: names=['uint8_t'] (at None)
      TypeDecl: declname='AMQueueImplP__0__Send__maxPayloadLength', quals=[] (at pp.c:9762)
        IdentifierType: names=['uint8_t'] (at None)
  Decl: name='AMQueueImplP__0__Send__getPayload', quals=[], storage=['inline', 'static'] (at pp.c:9766)
    FuncDecl: quals=None (at pp.c:9766)
      ParamList:  (at pp.c:9766)
        Decl: name='id', quals=[], storage=[] (at pp.c:9766)
          TypeDecl: declname='id', quals=[] (at pp.c:9766)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='m', quals=[], storage=[] (at pp.c:9766)
          PtrDecl: quals=[] (at pp.c:9766)
            TypeDecl: declname='m', quals=[] (at pp.c:9766)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='len', quals=[], storage=[] (at pp.c:9766)
          TypeDecl: declname='len', quals=[] (at pp.c:9766)
            IdentifierType: names=['uint8_t'] (at None)
      PtrDecl: quals=[] (at pp.c:9766)
        TypeDecl: declname='AMQueueImplP__0__Send__getPayload', quals=[] (at pp.c:9766)
          IdentifierType: names=['void'] (at None)
  Decl: name='AMQueueImplP__0__Send__default__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:9770)
    FuncDecl: quals=None (at pp.c:9770)
      ParamList:  (at pp.c:9770)
        Decl: name='id', quals=[], storage=[] (at pp.c:9770)
          TypeDecl: declname='id', quals=[] (at pp.c:9770)
            IdentifierType: names=['uint8_t'] (at None)
        Decl: name='msg', quals=[], storage=[] (at pp.c:9770)
          PtrDecl: quals=[] (at pp.c:9770)
            TypeDecl: declname='msg', quals=[] (at pp.c:9770)
              IdentifierType: names=['message_t'] (at None)
        Decl: name='err', quals=[], storage=[] (at pp.c:9770)
          TypeDecl: declname='err', quals=[] (at pp.c:9770)
            IdentifierType: names=['error_t'] (at None)
      TypeDecl: declname='AMQueueImplP__0__Send__default__sendDone', quals=[] (at pp.c:9770)
        IdentifierType: names=['void'] (at None)
  FuncDef:  (at pp.c:9772)
    Decl: name='__nesc_enable_interrupt', quals=[], storage=['inline', 'static'] (at pp.c:9772)
      FuncDecl: quals=None (at pp.c:9772)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_enable_interrupt', quals=[] (at pp.c:9772)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9773)
      Assignment: op='|=' (at pp.c:9774)
        ID: name='_R2' (at pp.c:9774)
        Constant: type='int', value='0x0008' (at pp.c:9774)
  FuncDef:  (at pp.c:9777)
    Decl: name='Msp430TimerCapComP__2__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9777)
      FuncDecl: quals=None (at pp.c:9777)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Timer__overflow', quals=[] (at pp.c:9777)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9778)
  FuncDef:  (at pp.c:9782)
    Decl: name='Msp430TimerCapComP__1__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9782)
      FuncDecl: quals=None (at pp.c:9782)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Timer__overflow', quals=[] (at pp.c:9782)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9783)
  FuncDef:  (at pp.c:9787)
    Decl: name='Msp430TimerCapComP__0__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9787)
      FuncDecl: quals=None (at pp.c:9787)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Timer__overflow', quals=[] (at pp.c:9787)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9788)
  FuncDef:  (at pp.c:9792)
    Decl: name='BusyWaitCounterC__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9792)
      FuncDecl: quals=None (at pp.c:9792)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BusyWaitCounterC__0__Counter__overflow', quals=[] (at pp.c:9792)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9793)
  FuncDef:  (at pp.c:9797)
    Decl: name='Msp430CounterC__1__Counter__overflow', quals=[], storage=['static', 'inline'] (at pp.c:9797)
      FuncDecl: quals=None (at pp.c:9797)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__1__Counter__overflow', quals=[] (at pp.c:9797)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9797)
      FuncCall:  (at None)
        ID: name='BusyWaitCounterC__0__Counter__overflow' (at pp.c:9799)
  FuncDef:  (at pp.c:9804)
    Decl: name='Msp430CounterC__1__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9804)
      FuncDecl: quals=None (at pp.c:9804)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__1__Msp430Timer__overflow', quals=[] (at pp.c:9804)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9805)
      FuncCall:  (at None)
        ID: name='Msp430CounterC__1__Counter__overflow' (at pp.c:9806)
  FuncDef:  (at pp.c:9810)
    Decl: name='Msp430Adc12ImplP__TimerA__overflow', quals=[], storage=['inline', 'static'] (at pp.c:9810)
      FuncDecl: quals=None (at pp.c:9810)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__TimerA__overflow', quals=[] (at pp.c:9810)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9812)
  FuncDef:  (at pp.c:9816)
    Decl: name='Msp430TimerP__0__Timer__overflow', quals=[], storage=['static', 'inline'] (at pp.c:9816)
      FuncDecl: quals=None (at pp.c:9816)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Timer__overflow', quals=[] (at pp.c:9816)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9816)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__TimerA__overflow' (at pp.c:9818)
      FuncCall:  (at None)
        ID: name='Msp430CounterC__1__Msp430Timer__overflow' (at pp.c:9820)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__0__Timer__overflow' (at pp.c:9822)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__1__Timer__overflow' (at pp.c:9824)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__2__Timer__overflow' (at pp.c:9826)
  FuncDef:  (at pp.c:9831)
    Decl: name='Msp430TimerP__0__Overflow__fired', quals=[], storage=['inline', 'static'] (at pp.c:9831)
      FuncDecl: quals=None (at pp.c:9831)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Overflow__fired', quals=[] (at pp.c:9831)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9832)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Timer__overflow' (at pp.c:9833)
  FuncDef:  (at pp.c:9840)
    Decl: name='Msp430TimerP__0__Event__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:9840)
      FuncDecl: quals=None (at pp.c:9840)
        ParamList:  (at pp.c:9840)
          Decl: name='n', quals=[], storage=[] (at pp.c:9840)
            TypeDecl: declname='n', quals=[] (at pp.c:9840)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Event__default__fired', quals=[] (at pp.c:9840)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9841)
  FuncDef:  (at pp.c:9845)
    Decl: name='Msp430TimerP__0__Event__fired', quals=[], storage=['static', 'inline'] (at pp.c:9845)
      FuncDecl: quals=None (at pp.c:9845)
        ParamList:  (at pp.c:9845)
          Decl: name='arg_0x1014afc98', quals=[], storage=[] (at pp.c:9845)
            TypeDecl: declname='arg_0x1014afc98', quals=[] (at pp.c:9845)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Event__fired', quals=[] (at pp.c:9845)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9845)
      Switch:  (at pp.c:9847)
        ID: name='arg_0x1014afc98' (at pp.c:9847)
        Compound:  (at pp.c:9847)
          Case:  (at pp.c:9849)
            Constant: type='int', value='0' (at pp.c:9849)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__0__Event__fired' (at pp.c:9851)
          Break:  (at pp.c:9853)
          Case:  (at pp.c:9855)
            Constant: type='int', value='1' (at pp.c:9855)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__1__Event__fired' (at pp.c:9857)
          Break:  (at pp.c:9859)
          Case:  (at pp.c:9861)
            Constant: type='int', value='2' (at pp.c:9861)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__2__Event__fired' (at pp.c:9863)
          Break:  (at pp.c:9865)
          Case:  (at pp.c:9867)
            Constant: type='int', value='5' (at pp.c:9867)
            FuncCall:  (at None)
              ID: name='Msp430TimerP__0__Overflow__fired' (at pp.c:9869)
          Break:  (at pp.c:9871)
          Default:  (at pp.c:9873)
            FuncCall:  (at None)
              ID: name='Msp430TimerP__0__Event__default__fired' (at pp.c:9875)
              ExprList:  (at pp.c:9875)
                ID: name='arg_0x1014afc98' (at pp.c:9875)
          Break:  (at pp.c:9877)
  FuncDef:  (at pp.c:9884)
    Decl: name='Msp430TimerP__0__VectorTimerX0__fired', quals=[], storage=['inline', 'static'] (at pp.c:9884)
      FuncDecl: quals=None (at pp.c:9884)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__VectorTimerX0__fired', quals=[] (at pp.c:9884)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9885)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Event__fired' (at pp.c:9886)
        ExprList:  (at pp.c:9886)
          Constant: type='int', value='0' (at pp.c:9886)
  FuncDef:  (at pp.c:9890)
    Decl: name='Msp430TimerCommonP__VectorTimerA0__fired', quals=[], storage=['static', 'inline'] (at pp.c:9890)
      FuncDecl: quals=None (at pp.c:9890)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCommonP__VectorTimerA0__fired', quals=[] (at pp.c:9890)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9890)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__VectorTimerX0__fired' (at pp.c:9892)
  FuncDef:  (at pp.c:9897)
    Decl: name='Msp430TimerCapComP__0__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:9897)
      FuncDecl: quals=None (at pp.c:9897)
        ParamList:  (at pp.c:9897)
          Decl: name='x', quals=[], storage=[] (at pp.c:9897)
            TypeDecl: declname='x', quals=[] (at pp.c:9897)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__int2CC', quals=[] (at pp.c:9897)
          IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
    Compound:  (at pp.c:9899)
      Decl: name='c', quals=[], storage=[] (at pp.c:9908)
        TypeDecl: declname='c', quals=[] (at pp.c:9908)
          Union: name='Msp430TimerCapComP__0____nesc_unnamed4381', packed=False (at pp.c:9901)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:9903)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:9905)
                IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
        ExprList:  (at pp.c:9908)
          Assignment: op='=' (at pp.c:9908)
            StructRef: type='.' (at pp.c:9908)
              ID: name='f' (at pp.c:9908)
            ID: name='x' (at pp.c:9908)
      Return:  (at pp.c:9911)
        StructRef: type='.' (at pp.c:9911)
          ID: name='c' (at pp.c:9911)
          ID: name='t' (at pp.c:9911)
  FuncDef:  (at pp.c:9915)
    Decl: name='Msp430TimerCapComP__0__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:9915)
      FuncDecl: quals=None (at pp.c:9915)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Control__getControl', quals=[] (at pp.c:9915)
          IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
    Compound:  (at pp.c:9916)
      Return:  (at pp.c:9917)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__0__int2CC' (at pp.c:9917)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:9917)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='354U' (at pp.c:9917)
  FuncDef:  (at pp.c:9921)
    Decl: name='Msp430TimerCapComP__0__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:9921)
      FuncDecl: quals=None (at pp.c:9921)
        ParamList:  (at pp.c:9921)
          Decl: name='n', quals=[], storage=[] (at pp.c:9921)
            TypeDecl: declname='n', quals=[] (at pp.c:9921)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Capture__default__captured', quals=[] (at pp.c:9921)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9922)
  FuncDef:  (at pp.c:9926)
    Decl: name='Msp430TimerCapComP__0__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:9926)
      FuncDecl: quals=None (at pp.c:9926)
        ParamList:  (at pp.c:9926)
          Decl: name='time', quals=[], storage=[] (at pp.c:9926)
            TypeDecl: declname='time', quals=[] (at pp.c:9926)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Capture__captured', quals=[] (at pp.c:9926)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9926)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__0__Capture__default__captured' (at pp.c:9928)
        ExprList:  (at pp.c:9928)
          ID: name='time' (at pp.c:9928)
  FuncDef:  (at pp.c:9933)
    Decl: name='Msp430TimerCapComP__0__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:9933)
      FuncDecl: quals=None (at pp.c:9933)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Capture__getEvent', quals=[] (at pp.c:9933)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:9934)
      Return:  (at pp.c:9935)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:9935)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='370U' (at pp.c:9935)
  FuncDef:  (at pp.c:9939)
    Decl: name='Msp430Adc12ImplP__CompareA0__fired', quals=[], storage=['inline', 'static'] (at pp.c:9939)
      FuncDecl: quals=None (at pp.c:9939)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__CompareA0__fired', quals=[] (at pp.c:9939)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9941)
  FuncDef:  (at pp.c:9945)
    Decl: name='Msp430TimerCapComP__0__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:9945)
      FuncDecl: quals=None (at pp.c:9945)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Compare__fired', quals=[] (at pp.c:9945)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9945)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__CompareA0__fired' (at pp.c:9947)
  FuncDef:  (at pp.c:9952)
    Decl: name='Msp430TimerCapComP__1__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:9952)
      FuncDecl: quals=None (at pp.c:9952)
        ParamList:  (at pp.c:9952)
          Decl: name='x', quals=[], storage=[] (at pp.c:9952)
            TypeDecl: declname='x', quals=[] (at pp.c:9952)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__int2CC', quals=[] (at pp.c:9952)
          IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
    Compound:  (at pp.c:9954)
      Decl: name='c', quals=[], storage=[] (at pp.c:9963)
        TypeDecl: declname='c', quals=[] (at pp.c:9963)
          Union: name='Msp430TimerCapComP__1____nesc_unnamed4382', packed=False (at pp.c:9956)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:9958)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:9960)
                IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
        ExprList:  (at pp.c:9963)
          Assignment: op='=' (at pp.c:9963)
            StructRef: type='.' (at pp.c:9963)
              ID: name='f' (at pp.c:9963)
            ID: name='x' (at pp.c:9963)
      Return:  (at pp.c:9966)
        StructRef: type='.' (at pp.c:9966)
          ID: name='c' (at pp.c:9966)
          ID: name='t' (at pp.c:9966)
  FuncDef:  (at pp.c:9970)
    Decl: name='Msp430TimerCapComP__1__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:9970)
      FuncDecl: quals=None (at pp.c:9970)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Control__getControl', quals=[] (at pp.c:9970)
          IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
    Compound:  (at pp.c:9971)
      Return:  (at pp.c:9972)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__1__int2CC' (at pp.c:9972)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:9972)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='356U' (at pp.c:9972)
  FuncDef:  (at pp.c:9976)
    Decl: name='Msp430TimerCapComP__1__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:9976)
      FuncDecl: quals=None (at pp.c:9976)
        ParamList:  (at pp.c:9976)
          Decl: name='n', quals=[], storage=[] (at pp.c:9976)
            TypeDecl: declname='n', quals=[] (at pp.c:9976)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Capture__default__captured', quals=[] (at pp.c:9976)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9977)
  FuncDef:  (at pp.c:9981)
    Decl: name='Msp430TimerCapComP__1__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:9981)
      FuncDecl: quals=None (at pp.c:9981)
        ParamList:  (at pp.c:9981)
          Decl: name='time', quals=[], storage=[] (at pp.c:9981)
            TypeDecl: declname='time', quals=[] (at pp.c:9981)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Capture__captured', quals=[] (at pp.c:9981)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9981)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__1__Capture__default__captured' (at pp.c:9983)
        ExprList:  (at pp.c:9983)
          ID: name='time' (at pp.c:9983)
  FuncDef:  (at pp.c:9988)
    Decl: name='Msp430TimerCapComP__1__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:9988)
      FuncDecl: quals=None (at pp.c:9988)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Capture__getEvent', quals=[] (at pp.c:9988)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:9989)
      Return:  (at pp.c:9990)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:9990)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='372U' (at pp.c:9990)
  FuncDef:  (at pp.c:9994)
    Decl: name='Msp430Adc12ImplP__CompareA1__fired', quals=[], storage=['inline', 'static'] (at pp.c:9994)
      FuncDecl: quals=None (at pp.c:9994)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__CompareA1__fired', quals=[] (at pp.c:9994)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:9996)
  FuncDef:  (at pp.c:10000)
    Decl: name='Msp430TimerCapComP__1__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:10000)
      FuncDecl: quals=None (at pp.c:10000)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Compare__fired', quals=[] (at pp.c:10000)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10000)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__CompareA1__fired' (at pp.c:10002)
  FuncDef:  (at pp.c:10007)
    Decl: name='Msp430TimerCapComP__2__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:10007)
      FuncDecl: quals=None (at pp.c:10007)
        ParamList:  (at pp.c:10007)
          Decl: name='x', quals=[], storage=[] (at pp.c:10007)
            TypeDecl: declname='x', quals=[] (at pp.c:10007)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__int2CC', quals=[] (at pp.c:10007)
          IdentifierType: names=['Msp430TimerCapComP__2__cc_t'] (at None)
    Compound:  (at pp.c:10009)
      Decl: name='c', quals=[], storage=[] (at pp.c:10018)
        TypeDecl: declname='c', quals=[] (at pp.c:10018)
          Union: name='Msp430TimerCapComP__2____nesc_unnamed4383', packed=False (at pp.c:10011)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:10013)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:10015)
                IdentifierType: names=['Msp430TimerCapComP__2__cc_t'] (at None)
        ExprList:  (at pp.c:10018)
          Assignment: op='=' (at pp.c:10018)
            StructRef: type='.' (at pp.c:10018)
              ID: name='f' (at pp.c:10018)
            ID: name='x' (at pp.c:10018)
      Return:  (at pp.c:10021)
        StructRef: type='.' (at pp.c:10021)
          ID: name='c' (at pp.c:10021)
          ID: name='t' (at pp.c:10021)
  FuncDef:  (at pp.c:10025)
    Decl: name='Msp430TimerCapComP__2__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:10025)
      FuncDecl: quals=None (at pp.c:10025)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Control__getControl', quals=[] (at pp.c:10025)
          IdentifierType: names=['Msp430TimerCapComP__2__cc_t'] (at None)
    Compound:  (at pp.c:10026)
      Return:  (at pp.c:10027)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__2__int2CC' (at pp.c:10027)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:10027)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='358U' (at pp.c:10027)
  FuncDef:  (at pp.c:10031)
    Decl: name='Msp430TimerCapComP__2__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:10031)
      FuncDecl: quals=None (at pp.c:10031)
        ParamList:  (at pp.c:10031)
          Decl: name='n', quals=[], storage=[] (at pp.c:10031)
            TypeDecl: declname='n', quals=[] (at pp.c:10031)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Capture__default__captured', quals=[] (at pp.c:10031)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10032)
  FuncDef:  (at pp.c:10036)
    Decl: name='Msp430TimerCapComP__2__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:10036)
      FuncDecl: quals=None (at pp.c:10036)
        ParamList:  (at pp.c:10036)
          Decl: name='time', quals=[], storage=[] (at pp.c:10036)
            TypeDecl: declname='time', quals=[] (at pp.c:10036)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Capture__captured', quals=[] (at pp.c:10036)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10036)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__2__Capture__default__captured' (at pp.c:10038)
        ExprList:  (at pp.c:10038)
          ID: name='time' (at pp.c:10038)
  FuncDef:  (at pp.c:10043)
    Decl: name='Msp430TimerCapComP__2__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:10043)
      FuncDecl: quals=None (at pp.c:10043)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Capture__getEvent', quals=[] (at pp.c:10043)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:10044)
      Return:  (at pp.c:10045)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:10045)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='374U' (at pp.c:10045)
  FuncDef:  (at pp.c:10049)
    Decl: name='Msp430TimerCapComP__2__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:10049)
      FuncDecl: quals=None (at pp.c:10049)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Compare__default__fired', quals=[] (at pp.c:10049)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10050)
  FuncDef:  (at pp.c:10054)
    Decl: name='Msp430TimerCapComP__2__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:10054)
      FuncDecl: quals=None (at pp.c:10054)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Compare__fired', quals=[] (at pp.c:10054)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10054)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__2__Compare__default__fired' (at pp.c:10056)
  FuncDef:  (at pp.c:10061)
    Decl: name='Msp430TimerP__0__VectorTimerX1__fired', quals=[], storage=['inline', 'static'] (at pp.c:10061)
      FuncDecl: quals=None (at pp.c:10061)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__VectorTimerX1__fired', quals=[] (at pp.c:10061)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10062)
      Decl: name='n', quals=[], storage=[] (at pp.c:10063)
        TypeDecl: declname='n', quals=[] (at pp.c:10063)
          IdentifierType: names=['uint8_t'] (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:10063)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='302U' (at pp.c:10063)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Event__fired' (at pp.c:10066)
        ExprList:  (at pp.c:10066)
          BinaryOp: op='>>' (at pp.c:10066)
            ID: name='n' (at pp.c:10066)
            Constant: type='int', value='1' (at pp.c:10066)
  FuncDef:  (at pp.c:10070)
    Decl: name='Msp430TimerCommonP__VectorTimerA1__fired', quals=[], storage=['static', 'inline'] (at pp.c:10070)
      FuncDecl: quals=None (at pp.c:10070)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCommonP__VectorTimerA1__fired', quals=[] (at pp.c:10070)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10070)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__VectorTimerX1__fired' (at pp.c:10072)
  FuncDef:  (at pp.c:10077)
    Decl: name='Msp430TimerP__1__VectorTimerX0__fired', quals=[], storage=['inline', 'static'] (at pp.c:10077)
      FuncDecl: quals=None (at pp.c:10077)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__VectorTimerX0__fired', quals=[] (at pp.c:10077)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10078)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__1__Event__fired' (at pp.c:10079)
        ExprList:  (at pp.c:10079)
          Constant: type='int', value='0' (at pp.c:10079)
  FuncDef:  (at pp.c:10083)
    Decl: name='Msp430TimerCommonP__VectorTimerB0__fired', quals=[], storage=['static', 'inline'] (at pp.c:10083)
      FuncDecl: quals=None (at pp.c:10083)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCommonP__VectorTimerB0__fired', quals=[] (at pp.c:10083)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10083)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__1__VectorTimerX0__fired' (at pp.c:10085)
  FuncDef:  (at pp.c:10090)
    Decl: name='Msp430TimerCapComP__9__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:10090)
      FuncDecl: quals=None (at pp.c:10090)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Timer__overflow', quals=[] (at pp.c:10090)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10091)
  FuncDef:  (at pp.c:10095)
    Decl: name='Msp430TimerCapComP__8__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:10095)
      FuncDecl: quals=None (at pp.c:10095)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Timer__overflow', quals=[] (at pp.c:10095)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10096)
  FuncDef:  (at pp.c:10100)
    Decl: name='Msp430TimerCapComP__7__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:10100)
      FuncDecl: quals=None (at pp.c:10100)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Timer__overflow', quals=[] (at pp.c:10100)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10101)
  FuncDef:  (at pp.c:10105)
    Decl: name='Msp430TimerCapComP__6__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:10105)
      FuncDecl: quals=None (at pp.c:10105)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Timer__overflow', quals=[] (at pp.c:10105)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10106)
  FuncDef:  (at pp.c:10110)
    Decl: name='Msp430TimerCapComP__5__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:10110)
      FuncDecl: quals=None (at pp.c:10110)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Timer__overflow', quals=[] (at pp.c:10110)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10111)
  FuncDef:  (at pp.c:10115)
    Decl: name='Msp430TimerCapComP__4__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:10115)
      FuncDecl: quals=None (at pp.c:10115)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Timer__overflow', quals=[] (at pp.c:10115)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10116)
  FuncDef:  (at pp.c:10120)
    Decl: name='Msp430TimerCapComP__3__Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:10120)
      FuncDecl: quals=None (at pp.c:10120)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Timer__overflow', quals=[] (at pp.c:10120)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10121)
  FuncDef:  (at pp.c:10125)
    Decl: name='Msp430AlarmC__2__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:10125)
      FuncDecl: quals=None (at pp.c:10125)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__2__Msp430Timer__overflow', quals=[] (at pp.c:10125)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10126)
  FuncDef:  (at pp.c:10130)
    Decl: name='Msp430AlarmC__1__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:10130)
      FuncDecl: quals=None (at pp.c:10130)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430Timer__overflow', quals=[] (at pp.c:10130)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10131)
  FuncDef:  (at pp.c:10135)
    Decl: name='Msp430AlarmC__0__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:10135)
      FuncDecl: quals=None (at pp.c:10135)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430Timer__overflow', quals=[] (at pp.c:10135)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10136)
  FuncDef:  (at pp.c:10140)
    Decl: name='TransformAlarmC__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:10140)
      FuncDecl: quals=None (at pp.c:10140)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Counter__overflow', quals=[] (at pp.c:10140)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10141)
  FuncDef:  (at pp.c:10145)
    Decl: name='CounterToLocalTimeC__0__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:10145)
      FuncDecl: quals=None (at pp.c:10145)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CounterToLocalTimeC__0__Counter__overflow', quals=[] (at pp.c:10145)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10146)
  FuncDef:  (at pp.c:10150)
    Decl: name='TransformCounterC__0__Counter__overflow', quals=[], storage=['static', 'inline'] (at pp.c:10150)
      FuncDecl: quals=None (at pp.c:10150)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__0__Counter__overflow', quals=[] (at pp.c:10150)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10150)
      FuncCall:  (at None)
        ID: name='CounterToLocalTimeC__0__Counter__overflow' (at pp.c:10152)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__Counter__overflow' (at pp.c:10154)
  FuncDef:  (at pp.c:10159)
    Decl: name='TransformCounterC__0__CounterFrom__overflow', quals=[], storage=['inline', 'static'] (at pp.c:10159)
      FuncDecl: quals=None (at pp.c:10159)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__0__CounterFrom__overflow', quals=[] (at pp.c:10159)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10160)
      Compound:  (at pp.c:10162)
        UnaryOp: op='p++' (at pp.c:10163)
          ID: name='TransformCounterC__0__m_upper' (at pp.c:10163)
        If:  (at pp.c:10164)
          BinaryOp: op='==' (at pp.c:10164)
            BinaryOp: op='&' (at pp.c:10164)
              ID: name='TransformCounterC__0__m_upper' (at pp.c:10164)
              ID: name='TransformCounterC__0__OVERFLOW_MASK' (at pp.c:10164)
            Constant: type='int', value='0' (at pp.c:10164)
          Compound:  (at pp.c:10164)
            FuncCall:  (at None)
              ID: name='TransformCounterC__0__Counter__overflow' (at pp.c:10165)
  FuncDef:  (at pp.c:10171)
    Decl: name='CounterToLocalTimeC__1__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:10171)
      FuncDecl: quals=None (at pp.c:10171)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CounterToLocalTimeC__1__Counter__overflow', quals=[] (at pp.c:10171)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10172)
  FuncDef:  (at pp.c:10176)
    Decl: name='TransformAlarmC__1__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:10176)
      FuncDecl: quals=None (at pp.c:10176)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__Counter__overflow', quals=[] (at pp.c:10176)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10177)
  FuncDef:  (at pp.c:10181)
    Decl: name='TransformAlarmC__2__Counter__overflow', quals=[], storage=['inline', 'static'] (at pp.c:10181)
      FuncDecl: quals=None (at pp.c:10181)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__2__Counter__overflow', quals=[] (at pp.c:10181)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10182)
  FuncDef:  (at pp.c:10186)
    Decl: name='TransformCounterC__1__Counter__overflow', quals=[], storage=['static', 'inline'] (at pp.c:10186)
      FuncDecl: quals=None (at pp.c:10186)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__1__Counter__overflow', quals=[] (at pp.c:10186)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10186)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__2__Counter__overflow' (at pp.c:10188)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__1__Counter__overflow' (at pp.c:10190)
      FuncCall:  (at None)
        ID: name='CounterToLocalTimeC__1__Counter__overflow' (at pp.c:10192)
  FuncDef:  (at pp.c:10197)
    Decl: name='TransformCounterC__1__CounterFrom__overflow', quals=[], storage=['inline', 'static'] (at pp.c:10197)
      FuncDecl: quals=None (at pp.c:10197)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__1__CounterFrom__overflow', quals=[] (at pp.c:10197)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10198)
      Compound:  (at pp.c:10200)
        UnaryOp: op='p++' (at pp.c:10201)
          ID: name='TransformCounterC__1__m_upper' (at pp.c:10201)
        If:  (at pp.c:10202)
          BinaryOp: op='==' (at pp.c:10202)
            BinaryOp: op='&' (at pp.c:10202)
              ID: name='TransformCounterC__1__m_upper' (at pp.c:10202)
              ID: name='TransformCounterC__1__OVERFLOW_MASK' (at pp.c:10202)
            Constant: type='int', value='0' (at pp.c:10202)
          Compound:  (at pp.c:10202)
            FuncCall:  (at None)
              ID: name='TransformCounterC__1__Counter__overflow' (at pp.c:10203)
  FuncDef:  (at pp.c:10209)
    Decl: name='Msp430CounterC__0__Counter__overflow', quals=[], storage=['static', 'inline'] (at pp.c:10209)
      FuncDecl: quals=None (at pp.c:10209)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Counter__overflow', quals=[] (at pp.c:10209)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10209)
      FuncCall:  (at None)
        ID: name='TransformCounterC__1__CounterFrom__overflow' (at pp.c:10211)
      FuncCall:  (at None)
        ID: name='TransformCounterC__0__CounterFrom__overflow' (at pp.c:10213)
  FuncDef:  (at pp.c:10218)
    Decl: name='Msp430CounterC__0__Msp430Timer__overflow', quals=[], storage=['inline', 'static'] (at pp.c:10218)
      FuncDecl: quals=None (at pp.c:10218)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Msp430Timer__overflow', quals=[] (at pp.c:10218)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10219)
      FuncCall:  (at None)
        ID: name='Msp430CounterC__0__Counter__overflow' (at pp.c:10220)
  FuncDef:  (at pp.c:10224)
    Decl: name='Msp430TimerP__1__Timer__overflow', quals=[], storage=['static', 'inline'] (at pp.c:10224)
      FuncDecl: quals=None (at pp.c:10224)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Timer__overflow', quals=[] (at pp.c:10224)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10224)
      FuncCall:  (at None)
        ID: name='Msp430CounterC__0__Msp430Timer__overflow' (at pp.c:10226)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430Timer__overflow' (at pp.c:10228)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Msp430Timer__overflow' (at pp.c:10230)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__2__Msp430Timer__overflow' (at pp.c:10232)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Timer__overflow' (at pp.c:10234)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__4__Timer__overflow' (at pp.c:10236)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Timer__overflow' (at pp.c:10238)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__6__Timer__overflow' (at pp.c:10240)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__7__Timer__overflow' (at pp.c:10242)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__8__Timer__overflow' (at pp.c:10244)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__9__Timer__overflow' (at pp.c:10246)
  FuncDef:  (at pp.c:10251)
    Decl: name='Msp430TimerP__1__Overflow__fired', quals=[], storage=['inline', 'static'] (at pp.c:10251)
      FuncDecl: quals=None (at pp.c:10251)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Overflow__fired', quals=[] (at pp.c:10251)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10252)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__1__Timer__overflow' (at pp.c:10253)
  FuncDef:  (at pp.c:10257)
    Decl: name='CC2420ControlP__SpiResource__request', quals=[], storage=['static', 'inline'] (at pp.c:10257)
      FuncDecl: quals=None (at pp.c:10257)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__SpiResource__request', quals=[] (at pp.c:10257)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10257)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10259)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10259)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10263)
        ID: name='__nesc_result' (at pp.c:10263)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__request' (at pp.c:10263)
          ExprList:  (at pp.c:10263)
            ID: name='CC2420SpiC__0__CLIENT_ID' (at pp.c:10263)
      Return:  (at pp.c:10267)
        ID: name='__nesc_result' (at pp.c:10267)
  FuncDef:  (at pp.c:10272)
    Decl: name='CC2420ControlP__Resource__request', quals=[], storage=['inline', 'static'] (at pp.c:10272)
      FuncDecl: quals=None (at pp.c:10272)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__Resource__request', quals=[] (at pp.c:10272)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10274)
      Return:  (at pp.c:10275)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__SpiResource__request' (at pp.c:10275)
  FuncDef:  (at pp.c:10279)
    Decl: name='CC2420CsmaP__Resource__request', quals=[], storage=['static', 'inline'] (at pp.c:10279)
      FuncDecl: quals=None (at pp.c:10279)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__Resource__request', quals=[] (at pp.c:10279)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10279)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10281)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10281)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10285)
        ID: name='__nesc_result' (at pp.c:10285)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__Resource__request' (at pp.c:10285)
      Return:  (at pp.c:10289)
        ID: name='__nesc_result' (at pp.c:10289)
  FuncDef:  (at pp.c:10294)
    Decl: name='CC2420CsmaP__CC2420Power__startVRegDone', quals=[], storage=['inline', 'static'] (at pp.c:10294)
      FuncDecl: quals=None (at pp.c:10294)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__CC2420Power__startVRegDone', quals=[] (at pp.c:10294)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10296)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__Resource__request' (at pp.c:10297)
  FuncDef:  (at pp.c:10301)
    Decl: name='CC2420ControlP__CC2420Power__startVRegDone', quals=[], storage=['static', 'inline'] (at pp.c:10301)
      FuncDecl: quals=None (at pp.c:10301)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Power__startVRegDone', quals=[] (at pp.c:10301)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10301)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__CC2420Power__startVRegDone' (at pp.c:10303)
  FuncDef:  (at pp.c:10308)
    Decl: name='Msp430GpioC__4__HplGeneralIO__set', quals=[], storage=['static', 'inline'] (at pp.c:10308)
      FuncDecl: quals=None (at pp.c:10308)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__4__HplGeneralIO__set', quals=[] (at pp.c:10308)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10308)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__30__IO__set' (at pp.c:10310)
  FuncDef:  (at pp.c:10315)
    Decl: name='Msp430GpioC__4__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:10315)
      FuncDecl: quals=None (at pp.c:10315)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__4__GeneralIO__set', quals=[] (at pp.c:10315)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10317)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__4__HplGeneralIO__set' (at pp.c:10319)
  FuncDef:  (at pp.c:10323)
    Decl: name='CC2420ControlP__RSTN__set', quals=[], storage=['static', 'inline'] (at pp.c:10323)
      FuncDecl: quals=None (at pp.c:10323)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__RSTN__set', quals=[] (at pp.c:10323)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10323)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__4__GeneralIO__set' (at pp.c:10325)
  FuncDef:  (at pp.c:10330)
    Decl: name='Msp430GpioC__4__HplGeneralIO__clr', quals=[], storage=['static', 'inline'] (at pp.c:10330)
      FuncDecl: quals=None (at pp.c:10330)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__4__HplGeneralIO__clr', quals=[] (at pp.c:10330)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10330)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__30__IO__clr' (at pp.c:10332)
  FuncDef:  (at pp.c:10337)
    Decl: name='Msp430GpioC__4__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:10337)
      FuncDecl: quals=None (at pp.c:10337)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__4__GeneralIO__clr', quals=[] (at pp.c:10337)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10339)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__4__HplGeneralIO__clr' (at pp.c:10341)
  FuncDef:  (at pp.c:10345)
    Decl: name='CC2420ControlP__RSTN__clr', quals=[], storage=['static', 'inline'] (at pp.c:10345)
      FuncDecl: quals=None (at pp.c:10345)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__RSTN__clr', quals=[] (at pp.c:10345)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10345)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__4__GeneralIO__clr' (at pp.c:10347)
  FuncDef:  (at pp.c:10352)
    Decl: name='CC2420ControlP__StartupTimer__fired', quals=[], storage=['inline', 'static'] (at pp.c:10352)
      FuncDecl: quals=None (at pp.c:10352)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__StartupTimer__fired', quals=[] (at pp.c:10352)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10354)
      If:  (at pp.c:10355)
        BinaryOp: op='==' (at pp.c:10355)
          ID: name='CC2420ControlP__m_state' (at pp.c:10355)
          ID: name='CC2420ControlP__S_VREG_STARTING' (at pp.c:10355)
        Compound:  (at pp.c:10355)
          Assignment: op='=' (at pp.c:10356)
            ID: name='CC2420ControlP__m_state' (at pp.c:10356)
            ID: name='CC2420ControlP__S_VREG_STARTED' (at pp.c:10356)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__RSTN__clr' (at pp.c:10357)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__RSTN__set' (at pp.c:10358)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__CC2420Power__startVRegDone' (at pp.c:10359)
  FuncDef:  (at pp.c:10364)
    Decl: name='CC2420TransmitP__SpiResource__release', quals=[], storage=['static', 'inline'] (at pp.c:10364)
      FuncDecl: quals=None (at pp.c:10364)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__SpiResource__release', quals=[] (at pp.c:10364)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10364)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10366)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10366)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10370)
        ID: name='__nesc_result' (at pp.c:10370)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__release' (at pp.c:10370)
          ExprList:  (at pp.c:10370)
            ID: name='CC2420SpiC__3__CLIENT_ID' (at pp.c:10370)
      Return:  (at pp.c:10374)
        ID: name='__nesc_result' (at pp.c:10374)
  FuncDef:  (at pp.c:10379)
    Decl: name='CC2420TransmitP__releaseSpiResource', quals=[], storage=['inline', 'static'] (at pp.c:10379)
      FuncDecl: quals=None (at pp.c:10379)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__releaseSpiResource', quals=[] (at pp.c:10379)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10381)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__SpiResource__release' (at pp.c:10382)
      Return:  (at pp.c:10383)
        ID: name='SUCCESS' (at pp.c:10383)
  FuncDef:  (at pp.c:10387)
    Decl: name='GpioCaptureC__0__Capture__captureRisingEdge', quals=[], storage=['inline', 'static'] (at pp.c:10387)
      FuncDecl: quals=None (at pp.c:10387)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='GpioCaptureC__0__Capture__captureRisingEdge', quals=[] (at pp.c:10387)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10389)
      Return:  (at pp.c:10390)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__enableCapture' (at pp.c:10390)
          ExprList:  (at pp.c:10390)
            ID: name='MSP430TIMER_CM_RISING' (at pp.c:10390)
  FuncDef:  (at pp.c:10394)
    Decl: name='CC2420TransmitP__CaptureSFD__captureRisingEdge', quals=[], storage=['static', 'inline'] (at pp.c:10394)
      FuncDecl: quals=None (at pp.c:10394)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__CaptureSFD__captureRisingEdge', quals=[] (at pp.c:10394)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10394)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10396)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10396)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10400)
        ID: name='__nesc_result' (at pp.c:10400)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__Capture__captureRisingEdge' (at pp.c:10400)
      Return:  (at pp.c:10404)
        ID: name='__nesc_result' (at pp.c:10404)
  FuncDef:  (at pp.c:10409)
    Decl: name='CC2420TransmitP__SFLUSHTX__strobe', quals=[], storage=['static', 'inline'] (at pp.c:10409)
      FuncDecl: quals=None (at pp.c:10409)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__SFLUSHTX__strobe', quals=[] (at pp.c:10409)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:10409)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10411)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10411)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10415)
        ID: name='__nesc_result' (at pp.c:10415)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Strobe__strobe' (at pp.c:10415)
          ExprList:  (at pp.c:10415)
            ID: name='CC2420_SFLUSHTX' (at pp.c:10415)
      Return:  (at pp.c:10419)
        ID: name='__nesc_result' (at pp.c:10419)
  FuncDef:  (at pp.c:10424)
    Decl: name='TransformAlarmC__0__Counter__get', quals=[], storage=['static', 'inline'] (at pp.c:10424)
      FuncDecl: quals=None (at pp.c:10424)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Counter__get', quals=[] (at pp.c:10424)
          IdentifierType: names=['TransformAlarmC__0__Counter__size_type'] (at None)
    Compound:  (at pp.c:10424)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10426)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10426)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10430)
        ID: name='__nesc_result' (at pp.c:10430)
        FuncCall:  (at None)
          ID: name='TransformCounterC__0__Counter__get' (at pp.c:10430)
      Return:  (at pp.c:10434)
        ID: name='__nesc_result' (at pp.c:10434)
  FuncDef:  (at pp.c:10439)
    Decl: name='TransformAlarmC__0__Alarm__getNow', quals=[], storage=['inline', 'static'] (at pp.c:10439)
      FuncDecl: quals=None (at pp.c:10439)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Alarm__getNow', quals=[] (at pp.c:10439)
          IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
    Compound:  (at pp.c:10440)
      Return:  (at pp.c:10441)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__0__Counter__get' (at pp.c:10441)
  FuncDef:  (at pp.c:10445)
    Decl: name='TransformAlarmC__0__Alarm__start', quals=[], storage=['inline', 'static'] (at pp.c:10445)
      FuncDecl: quals=None (at pp.c:10445)
        ParamList:  (at pp.c:10445)
          Decl: name='dt', quals=[], storage=[] (at pp.c:10445)
            TypeDecl: declname='dt', quals=[] (at pp.c:10445)
              IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Alarm__start', quals=[] (at pp.c:10445)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10446)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__Alarm__startAt' (at pp.c:10447)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='TransformAlarmC__0__Alarm__getNow' (at pp.c:10447)
          ID: name='dt' (at pp.c:10447)
  FuncDef:  (at pp.c:10451)
    Decl: name='CC2420TransmitP__BackoffTimer__start', quals=[], storage=['static', 'inline'] (at pp.c:10451)
      FuncDecl: quals=None (at pp.c:10451)
        ParamList:  (at pp.c:10451)
          Decl: name='dt', quals=[], storage=[] (at pp.c:10451)
            TypeDecl: declname='dt', quals=[] (at pp.c:10451)
              IdentifierType: names=['CC2420TransmitP__BackoffTimer__size_type'] (at None)
        TypeDecl: declname='CC2420TransmitP__BackoffTimer__start', quals=[] (at pp.c:10451)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10451)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__Alarm__start' (at pp.c:10453)
        ExprList:  (at pp.c:10453)
          ID: name='dt' (at pp.c:10453)
  FuncDef:  (at pp.c:10458)
    Decl: name='HplMsp430GeneralIOP__4__IO__getRaw', quals=[], storage=['inline', 'static'] (at pp.c:10458)
      FuncDecl: quals=None (at pp.c:10458)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__4__IO__getRaw', quals=[] (at pp.c:10458)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:10460)
      Return:  (at pp.c:10462)
        BinaryOp: op='&' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:10462)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='32U' (at pp.c:10462)
          BinaryOp: op='<<' (at pp.c:10462)
            Constant: type='int', value='0x01' (at pp.c:10462)
            Constant: type='int', value='4' (at pp.c:10462)
  FuncDef:  (at pp.c:10466)
    Decl: name='HplMsp430GeneralIOP__4__IO__get', quals=[], storage=['inline', 'static'] (at pp.c:10466)
      FuncDecl: quals=None (at pp.c:10466)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__4__IO__get', quals=[] (at pp.c:10466)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10468)
      Return:  (at pp.c:10470)
        BinaryOp: op='!=' (at None)
          FuncCall:  (at None)
            ID: name='HplMsp430GeneralIOP__4__IO__getRaw' (at pp.c:10470)
          Constant: type='int', value='0' (at pp.c:10470)
  FuncDef:  (at pp.c:10474)
    Decl: name='Msp430GpioC__0__HplGeneralIO__get', quals=[], storage=['static', 'inline'] (at pp.c:10474)
      FuncDecl: quals=None (at pp.c:10474)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__get', quals=[] (at pp.c:10474)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10474)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10476)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10476)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10480)
        ID: name='__nesc_result' (at pp.c:10480)
        FuncCall:  (at None)
          ID: name='HplMsp430GeneralIOP__4__IO__get' (at pp.c:10480)
      Return:  (at pp.c:10484)
        ID: name='__nesc_result' (at pp.c:10484)
  FuncDef:  (at pp.c:10489)
    Decl: name='Msp430GpioC__0__GeneralIO__get', quals=[], storage=['inline', 'static'] (at pp.c:10489)
      FuncDecl: quals=None (at pp.c:10489)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__GeneralIO__get', quals=[] (at pp.c:10489)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10491)
      Return:  (at pp.c:10493)
        FuncCall:  (at None)
          ID: name='Msp430GpioC__0__HplGeneralIO__get' (at pp.c:10493)
  FuncDef:  (at pp.c:10497)
    Decl: name='CC2420TransmitP__CCA__get', quals=[], storage=['static', 'inline'] (at pp.c:10497)
      FuncDecl: quals=None (at pp.c:10497)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__CCA__get', quals=[] (at pp.c:10497)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10497)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10499)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10499)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10503)
        ID: name='__nesc_result' (at pp.c:10503)
        FuncCall:  (at None)
          ID: name='Msp430GpioC__0__GeneralIO__get' (at pp.c:10503)
      Return:  (at pp.c:10507)
        ID: name='__nesc_result' (at pp.c:10507)
  FuncDef:  (at pp.c:10512)
    Decl: name='CC2420TransmitP__BackoffTimer__fired', quals=[], storage=['inline', 'static'] (at pp.c:10512)
      FuncDecl: quals=None (at pp.c:10512)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__BackoffTimer__fired', quals=[] (at pp.c:10512)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10514)
      Compound:  (at pp.c:10517)
        Switch:  (at pp.c:10518)
          ID: name='CC2420TransmitP__m_state' (at pp.c:10518)
          Compound:  (at pp.c:10518)
            Case:  (at pp.c:10520)
              ID: name='CC2420TransmitP__S_SAMPLE_CCA' (at pp.c:10520)
              If:  (at pp.c:10523)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__CCA__get' (at pp.c:10523)
                Compound:  (at pp.c:10523)
                  Assignment: op='=' (at pp.c:10524)
                    ID: name='CC2420TransmitP__m_state' (at pp.c:10524)
                    ID: name='CC2420TransmitP__S_BEGIN_TRANSMIT' (at pp.c:10524)
                  FuncCall:  (at None)
                    ID: name='CC2420TransmitP__BackoffTimer__start' (at pp.c:10525)
                    ExprList:  (at pp.c:10525)
                      ID: name='CC2420_TIME_ACK_TURNAROUND' (at pp.c:10525)
                Compound:  (at pp.c:10527)
                  FuncCall:  (at None)
                    ID: name='CC2420TransmitP__congestionBackoff' (at pp.c:10528)
            Break:  (at pp.c:10530)
            Case:  (at pp.c:10532)
              ID: name='CC2420TransmitP__S_BEGIN_TRANSMIT' (at pp.c:10532)
              Case:  (at pp.c:10533)
                ID: name='CC2420TransmitP__S_CANCEL' (at pp.c:10533)
                If:  (at pp.c:10534)
                  BinaryOp: op='==' (at None)
                    FuncCall:  (at None)
                      ID: name='CC2420TransmitP__acquireSpiResource' (at pp.c:10534)
                    ID: name='SUCCESS' (at pp.c:10534)
                  Compound:  (at pp.c:10534)
                    FuncCall:  (at None)
                      ID: name='CC2420TransmitP__attemptSend' (at pp.c:10535)
            Break:  (at pp.c:10537)
            Case:  (at pp.c:10539)
              ID: name='CC2420TransmitP__S_ACK_WAIT' (at pp.c:10539)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__signalDone' (at pp.c:10540)
                ExprList:  (at pp.c:10540)
                  ID: name='SUCCESS' (at pp.c:10540)
            Break:  (at pp.c:10541)
            Case:  (at pp.c:10543)
              ID: name='CC2420TransmitP__S_SFD' (at pp.c:10543)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__SFLUSHTX__strobe' (at pp.c:10546)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__CaptureSFD__captureRisingEdge' (at pp.c:10547)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__releaseSpiResource' (at pp.c:10548)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__signalDone' (at pp.c:10549)
              ExprList:  (at pp.c:10549)
                ID: name='ERETRY' (at pp.c:10549)
            Break:  (at pp.c:10550)
            Default:  (at pp.c:10552)
              Break:  (at pp.c:10553)
  FuncDef:  (at pp.c:10559)
    Decl: name='TransformAlarmC__0__Alarm__fired', quals=[], storage=['static', 'inline'] (at pp.c:10559)
      FuncDecl: quals=None (at pp.c:10559)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Alarm__fired', quals=[] (at pp.c:10559)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10559)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__BackoffTimer__fired' (at pp.c:10561)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__StartupTimer__fired' (at pp.c:10563)
  FuncDef:  (at pp.c:10568)
    Decl: name='TransformAlarmC__0__AlarmFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:10568)
      FuncDecl: quals=None (at pp.c:10568)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__AlarmFrom__fired', quals=[] (at pp.c:10568)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10569)
      Compound:  (at pp.c:10571)
        If:  (at pp.c:10572)
          BinaryOp: op='==' (at pp.c:10572)
            ID: name='TransformAlarmC__0__m_dt' (at pp.c:10572)
            Constant: type='int', value='0' (at pp.c:10572)
          Compound:  (at pp.c:10573)
            FuncCall:  (at None)
              ID: name='TransformAlarmC__0__Alarm__fired' (at pp.c:10574)
          Compound:  (at pp.c:10577)
            FuncCall:  (at None)
              ID: name='TransformAlarmC__0__set_alarm' (at pp.c:10578)
  FuncDef:  (at pp.c:10584)
    Decl: name='Msp430AlarmC__0__Alarm__fired', quals=[], storage=['static', 'inline'] (at pp.c:10584)
      FuncDecl: quals=None (at pp.c:10584)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Alarm__fired', quals=[] (at pp.c:10584)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10584)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__AlarmFrom__fired' (at pp.c:10586)
  FuncDef:  (at pp.c:10591)
    Decl: name='Msp430TimerCapComP__3__Control__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:10591)
      FuncDecl: quals=None (at pp.c:10591)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Control__disableEvents', quals=[] (at pp.c:10591)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10592)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:10593)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='386U' (at pp.c:10593)
        UnaryOp: op='~' (at pp.c:10593)
          Constant: type='int', value='0x0010' (at pp.c:10593)
  FuncDef:  (at pp.c:10597)
    Decl: name='Msp430AlarmC__0__Msp430TimerControl__disableEvents', quals=[], storage=['static', 'inline'] (at pp.c:10597)
      FuncDecl: quals=None (at pp.c:10597)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__disableEvents', quals=[] (at pp.c:10597)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10597)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Control__disableEvents' (at pp.c:10599)
  FuncDef:  (at pp.c:10604)
    Decl: name='Msp430AlarmC__0__Msp430Compare__fired', quals=[], storage=['inline', 'static'] (at pp.c:10604)
      FuncDecl: quals=None (at pp.c:10604)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__fired', quals=[] (at pp.c:10604)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10605)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430TimerControl__disableEvents' (at pp.c:10606)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Alarm__fired' (at pp.c:10607)
  FuncDef:  (at pp.c:10611)
    Decl: name='Msp430TimerCapComP__3__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:10611)
      FuncDecl: quals=None (at pp.c:10611)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Compare__fired', quals=[] (at pp.c:10611)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10611)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430Compare__fired' (at pp.c:10613)
  FuncDef:  (at pp.c:10618)
    Decl: name='Msp430TimerCapComP__3__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:10618)
      FuncDecl: quals=None (at pp.c:10618)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Capture__getEvent', quals=[] (at pp.c:10618)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:10619)
      Return:  (at pp.c:10620)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:10620)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='402U' (at pp.c:10620)
  FuncDef:  (at pp.c:10624)
    Decl: name='Msp430TimerCapComP__3__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:10624)
      FuncDecl: quals=None (at pp.c:10624)
        ParamList:  (at pp.c:10624)
          Decl: name='n', quals=[], storage=[] (at pp.c:10624)
            TypeDecl: declname='n', quals=[] (at pp.c:10624)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Capture__default__captured', quals=[] (at pp.c:10624)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10625)
  FuncDef:  (at pp.c:10629)
    Decl: name='Msp430TimerCapComP__3__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:10629)
      FuncDecl: quals=None (at pp.c:10629)
        ParamList:  (at pp.c:10629)
          Decl: name='time', quals=[], storage=[] (at pp.c:10629)
            TypeDecl: declname='time', quals=[] (at pp.c:10629)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Capture__captured', quals=[] (at pp.c:10629)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10629)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Capture__default__captured' (at pp.c:10631)
        ExprList:  (at pp.c:10631)
          ID: name='time' (at pp.c:10631)
  FuncDef:  (at pp.c:10636)
    Decl: name='Msp430TimerCapComP__3__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:10636)
      FuncDecl: quals=None (at pp.c:10636)
        ParamList:  (at pp.c:10636)
          Decl: name='x', quals=[], storage=[] (at pp.c:10636)
            TypeDecl: declname='x', quals=[] (at pp.c:10636)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__int2CC', quals=[] (at pp.c:10636)
          IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
    Compound:  (at pp.c:10638)
      Decl: name='c', quals=[], storage=[] (at pp.c:10647)
        TypeDecl: declname='c', quals=[] (at pp.c:10647)
          Union: name='Msp430TimerCapComP__3____nesc_unnamed4384', packed=False (at pp.c:10640)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:10642)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:10644)
                IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
        ExprList:  (at pp.c:10647)
          Assignment: op='=' (at pp.c:10647)
            StructRef: type='.' (at pp.c:10647)
              ID: name='f' (at pp.c:10647)
            ID: name='x' (at pp.c:10647)
      Return:  (at pp.c:10650)
        StructRef: type='.' (at pp.c:10650)
          ID: name='c' (at pp.c:10650)
          ID: name='t' (at pp.c:10650)
  FuncDef:  (at pp.c:10654)
    Decl: name='Msp430TimerCapComP__3__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:10654)
      FuncDecl: quals=None (at pp.c:10654)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Control__getControl', quals=[] (at pp.c:10654)
          IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
    Compound:  (at pp.c:10655)
      Return:  (at pp.c:10656)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__3__int2CC' (at pp.c:10656)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:10656)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='386U' (at pp.c:10656)
  FuncDef:  (at pp.c:10660)
    Decl: name='Msp430TimerCapComP__3__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:10660)
      FuncDecl: quals=None (at pp.c:10660)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Event__fired', quals=[] (at pp.c:10660)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10661)
      If:  (at pp.c:10662)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__3__Control__getControl' (at pp.c:10662)
          ID: name='cap' (at pp.c:10662)
        Compound:  (at pp.c:10662)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__3__Capture__captured' (at pp.c:10663)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__3__Capture__getEvent' (at pp.c:10663)
        Compound:  (at pp.c:10665)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__3__Compare__fired' (at pp.c:10667)
  FuncDef:  (at pp.c:10672)
    Decl: name='Msp430CounterC__0__Msp430Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:10672)
      FuncDecl: quals=None (at pp.c:10672)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Msp430Timer__get', quals=[] (at pp.c:10672)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:10672)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10674)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10674)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10678)
        ID: name='__nesc_result' (at pp.c:10678)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__get' (at pp.c:10678)
      Return:  (at pp.c:10682)
        ID: name='__nesc_result' (at pp.c:10682)
  FuncDef:  (at pp.c:10687)
    Decl: name='Msp430CounterC__0__Counter__get', quals=[], storage=['inline', 'static'] (at pp.c:10687)
      FuncDecl: quals=None (at pp.c:10687)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Counter__get', quals=[] (at pp.c:10687)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:10688)
      Return:  (at pp.c:10689)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__0__Msp430Timer__get' (at pp.c:10689)
  FuncDef:  (at pp.c:10693)
    Decl: name='TransformCounterC__0__CounterFrom__get', quals=[], storage=['static', 'inline'] (at pp.c:10693)
      FuncDecl: quals=None (at pp.c:10693)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__0__CounterFrom__get', quals=[] (at pp.c:10693)
          IdentifierType: names=['TransformCounterC__0__CounterFrom__size_type'] (at None)
    Compound:  (at pp.c:10693)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10695)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10695)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10699)
        ID: name='__nesc_result' (at pp.c:10699)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__0__Counter__get' (at pp.c:10699)
      Return:  (at pp.c:10703)
        ID: name='__nesc_result' (at pp.c:10703)
  FuncDef:  (at pp.c:10708)
    Decl: name='Msp430TimerP__1__Timer__isOverflowPending', quals=[], storage=['inline', 'static'] (at pp.c:10708)
      FuncDecl: quals=None (at pp.c:10708)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Timer__isOverflowPending', quals=[] (at pp.c:10708)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10709)
      Return:  (at pp.c:10710)
        BinaryOp: op='&' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:10710)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint16_t'] (at None)
              Constant: type='int', value='384U' (at pp.c:10710)
          Constant: type='int', value='1U' (at pp.c:10710)
  FuncDef:  (at pp.c:10714)
    Decl: name='Msp430CounterC__0__Msp430Timer__isOverflowPending', quals=[], storage=['static', 'inline'] (at pp.c:10714)
      FuncDecl: quals=None (at pp.c:10714)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Msp430Timer__isOverflowPending', quals=[] (at pp.c:10714)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10714)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10716)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10716)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10720)
        ID: name='__nesc_result' (at pp.c:10720)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__isOverflowPending' (at pp.c:10720)
      Return:  (at pp.c:10724)
        ID: name='__nesc_result' (at pp.c:10724)
  FuncDef:  (at pp.c:10729)
    Decl: name='Msp430CounterC__0__Counter__isOverflowPending', quals=[], storage=['inline', 'static'] (at pp.c:10729)
      FuncDecl: quals=None (at pp.c:10729)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__0__Counter__isOverflowPending', quals=[] (at pp.c:10729)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10730)
      Return:  (at pp.c:10731)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__0__Msp430Timer__isOverflowPending' (at pp.c:10731)
  FuncDef:  (at pp.c:10735)
    Decl: name='TransformCounterC__0__CounterFrom__isOverflowPending', quals=[], storage=['static', 'inline'] (at pp.c:10735)
      FuncDecl: quals=None (at pp.c:10735)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__0__CounterFrom__isOverflowPending', quals=[] (at pp.c:10735)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:10735)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10737)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10737)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10741)
        ID: name='__nesc_result' (at pp.c:10741)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__0__Counter__isOverflowPending' (at pp.c:10741)
      Return:  (at pp.c:10745)
        ID: name='__nesc_result' (at pp.c:10745)
  FuncDef:  (at pp.c:10750)
    Decl: name='Msp430TimerCapComP__3__Control__enableEvents', quals=[], storage=['inline', 'static'] (at pp.c:10750)
      FuncDecl: quals=None (at pp.c:10750)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Control__enableEvents', quals=[] (at pp.c:10750)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10751)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:10752)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='386U' (at pp.c:10752)
        Constant: type='int', value='0x0010' (at pp.c:10752)
  FuncDef:  (at pp.c:10756)
    Decl: name='Msp430AlarmC__0__Msp430TimerControl__enableEvents', quals=[], storage=['static', 'inline'] (at pp.c:10756)
      FuncDecl: quals=None (at pp.c:10756)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__enableEvents', quals=[] (at pp.c:10756)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10756)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Control__enableEvents' (at pp.c:10758)
  FuncDef:  (at pp.c:10763)
    Decl: name='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[], storage=['inline', 'static'] (at pp.c:10763)
      FuncDecl: quals=None (at pp.c:10763)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Control__clearPendingInterrupt', quals=[] (at pp.c:10763)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10764)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:10765)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='386U' (at pp.c:10765)
        UnaryOp: op='~' (at pp.c:10765)
          Constant: type='int', value='0x0001' (at pp.c:10765)
  FuncDef:  (at pp.c:10769)
    Decl: name='Msp430AlarmC__0__Msp430TimerControl__clearPendingInterrupt', quals=[], storage=['static', 'inline'] (at pp.c:10769)
      FuncDecl: quals=None (at pp.c:10769)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__clearPendingInterrupt', quals=[] (at pp.c:10769)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10769)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Control__clearPendingInterrupt' (at pp.c:10771)
  FuncDef:  (at pp.c:10776)
    Decl: name='Msp430TimerCapComP__3__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:10776)
      FuncDecl: quals=None (at pp.c:10776)
        ParamList:  (at pp.c:10776)
          Decl: name='x', quals=[], storage=[] (at pp.c:10776)
            TypeDecl: declname='x', quals=[] (at pp.c:10776)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEvent', quals=[] (at pp.c:10776)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10777)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:10778)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='402U' (at pp.c:10778)
        ID: name='x' (at pp.c:10778)
  FuncDef:  (at pp.c:10782)
    Decl: name='Msp430AlarmC__0__Msp430Compare__setEvent', quals=[], storage=['static', 'inline'] (at pp.c:10782)
      FuncDecl: quals=None (at pp.c:10782)
        ParamList:  (at pp.c:10782)
          Decl: name='time', quals=[], storage=[] (at pp.c:10782)
            TypeDecl: declname='time', quals=[] (at pp.c:10782)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__setEvent', quals=[] (at pp.c:10782)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10782)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Compare__setEvent' (at pp.c:10784)
        ExprList:  (at pp.c:10784)
          ID: name='time' (at pp.c:10784)
  FuncDef:  (at pp.c:10789)
    Decl: name='Msp430TimerCapComP__3__Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:10789)
      FuncDecl: quals=None (at pp.c:10789)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Timer__get', quals=[] (at pp.c:10789)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:10789)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10791)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10791)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10795)
        ID: name='__nesc_result' (at pp.c:10795)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__get' (at pp.c:10795)
      Return:  (at pp.c:10799)
        ID: name='__nesc_result' (at pp.c:10799)
  FuncDef:  (at pp.c:10804)
    Decl: name='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[], storage=['inline', 'static'] (at pp.c:10804)
      FuncDecl: quals=None (at pp.c:10804)
        ParamList:  (at pp.c:10804)
          Decl: name='x', quals=[], storage=[] (at pp.c:10804)
            TypeDecl: declname='x', quals=[] (at pp.c:10804)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Compare__setEventFromNow', quals=[] (at pp.c:10804)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10805)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:10806)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='402U' (at pp.c:10806)
        BinaryOp: op='+' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__3__Timer__get' (at pp.c:10806)
          ID: name='x' (at pp.c:10806)
  FuncDef:  (at pp.c:10810)
    Decl: name='Msp430AlarmC__0__Msp430Compare__setEventFromNow', quals=[], storage=['static', 'inline'] (at pp.c:10810)
      FuncDecl: quals=None (at pp.c:10810)
        ParamList:  (at pp.c:10810)
          Decl: name='delta', quals=[], storage=[] (at pp.c:10810)
            TypeDecl: declname='delta', quals=[] (at pp.c:10810)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430Compare__setEventFromNow', quals=[] (at pp.c:10810)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10810)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Compare__setEventFromNow' (at pp.c:10812)
        ExprList:  (at pp.c:10812)
          ID: name='delta' (at pp.c:10812)
  FuncDef:  (at pp.c:10817)
    Decl: name='Msp430AlarmC__0__Msp430Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:10817)
      FuncDecl: quals=None (at pp.c:10817)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430Timer__get', quals=[] (at pp.c:10817)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:10817)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10819)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10819)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10823)
        ID: name='__nesc_result' (at pp.c:10823)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__get' (at pp.c:10823)
      Return:  (at pp.c:10827)
        ID: name='__nesc_result' (at pp.c:10827)
  FuncDef:  (at pp.c:10832)
    Decl: name='Msp430AlarmC__0__Alarm__startAt', quals=[], storage=['inline', 'static'] (at pp.c:10832)
      FuncDecl: quals=None (at pp.c:10832)
        ParamList:  (at pp.c:10832)
          Decl: name='t0', quals=[], storage=[] (at pp.c:10832)
            TypeDecl: declname='t0', quals=[] (at pp.c:10832)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:10832)
            TypeDecl: declname='dt', quals=[] (at pp.c:10832)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Alarm__startAt', quals=[] (at pp.c:10832)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10833)
      Compound:  (at pp.c:10835)
        Decl: name='now', quals=[], storage=[] (at pp.c:10836)
          TypeDecl: declname='now', quals=[] (at pp.c:10836)
            IdentifierType: names=['uint16_t'] (at None)
          FuncCall:  (at None)
            ID: name='Msp430AlarmC__0__Msp430Timer__get' (at pp.c:10836)
        Decl: name='elapsed', quals=[], storage=[] (at pp.c:10837)
          TypeDecl: declname='elapsed', quals=[] (at pp.c:10837)
            IdentifierType: names=['uint16_t'] (at None)
          BinaryOp: op='-' (at pp.c:10837)
            ID: name='now' (at pp.c:10837)
            ID: name='t0' (at pp.c:10837)
        If:  (at pp.c:10840)
          BinaryOp: op='>=' (at pp.c:10840)
            ID: name='elapsed' (at pp.c:10840)
            ID: name='dt' (at pp.c:10840)
          Compound:  (at pp.c:10841)
            FuncCall:  (at None)
              ID: name='Msp430AlarmC__0__Msp430Compare__setEventFromNow' (at pp.c:10842)
              ExprList:  (at pp.c:10842)
                Constant: type='int', value='2' (at pp.c:10842)
          Compound:  (at pp.c:10845)
            Decl: name='remaining', quals=[], storage=[] (at pp.c:10846)
              TypeDecl: declname='remaining', quals=[] (at pp.c:10846)
                IdentifierType: names=['uint16_t'] (at None)
              BinaryOp: op='-' (at pp.c:10846)
                ID: name='dt' (at pp.c:10846)
                ID: name='elapsed' (at pp.c:10846)
            If:  (at pp.c:10849)
              BinaryOp: op='<=' (at pp.c:10849)
                ID: name='remaining' (at pp.c:10849)
                Constant: type='int', value='2' (at pp.c:10849)
              Compound:  (at pp.c:10849)
                FuncCall:  (at None)
                  ID: name='Msp430AlarmC__0__Msp430Compare__setEventFromNow' (at pp.c:10850)
                  ExprList:  (at pp.c:10850)
                    Constant: type='int', value='2' (at pp.c:10850)
              Compound:  (at pp.c:10852)
                FuncCall:  (at None)
                  ID: name='Msp430AlarmC__0__Msp430Compare__setEvent' (at pp.c:10854)
                  ExprList:  (at pp.c:10854)
                    BinaryOp: op='+' (at pp.c:10854)
                      ID: name='now' (at pp.c:10854)
                      ID: name='remaining' (at pp.c:10854)
        FuncCall:  (at None)
          ID: name='Msp430AlarmC__0__Msp430TimerControl__clearPendingInterrupt' (at pp.c:10858)
        FuncCall:  (at None)
          ID: name='Msp430AlarmC__0__Msp430TimerControl__enableEvents' (at pp.c:10859)
  FuncDef:  (at pp.c:10864)
    Decl: name='TransformAlarmC__0__AlarmFrom__startAt', quals=[], storage=['static', 'inline'] (at pp.c:10864)
      FuncDecl: quals=None (at pp.c:10864)
        ParamList:  (at pp.c:10864)
          Decl: name='t0', quals=[], storage=[] (at pp.c:10864)
            TypeDecl: declname='t0', quals=[] (at pp.c:10864)
              IdentifierType: names=['TransformAlarmC__0__AlarmFrom__size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:10864)
            TypeDecl: declname='dt', quals=[] (at pp.c:10864)
              IdentifierType: names=['TransformAlarmC__0__AlarmFrom__size_type'] (at None)
        TypeDecl: declname='TransformAlarmC__0__AlarmFrom__startAt', quals=[] (at pp.c:10864)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10864)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Alarm__startAt' (at pp.c:10866)
        ExprList:  (at pp.c:10866)
          ID: name='t0' (at pp.c:10866)
          ID: name='dt' (at pp.c:10866)
  FuncDef:  (at pp.c:10871)
    Decl: name='__nesc_ntoh_leuint8', quals=[], storage=['__inline', 'static'] (at pp.c:10871)
      FuncDecl: quals=None (at pp.c:10871)
        ParamList:  (at pp.c:10871)
          Decl: name='source', quals=['const'], storage=[] (at pp.c:10871)
            PtrDecl: quals=[] (at pp.c:10871)
              TypeDecl: declname='source', quals=['const'] (at pp.c:10871)
                IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_ntoh_leuint8', quals=[] (at pp.c:10871)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:10873)
      Decl: name='base', quals=['const'], storage=[] (at pp.c:10874)
        PtrDecl: quals=[] (at pp.c:10874)
          TypeDecl: declname='base', quals=['const'] (at pp.c:10874)
            IdentifierType: names=['uint8_t'] (at None)
        ID: name='source' (at pp.c:10874)
      Return:  (at pp.c:10877)
        ArrayRef:  (at pp.c:10877)
          ID: name='base' (at pp.c:10877)
          Constant: type='int', value='0' (at pp.c:10877)
  FuncDef:  (at pp.c:10881)
    Decl: name='CC2420ActiveMessageP__RadioBackoff__default__requestCongestionBackoff', quals=[], storage=['inline', 'static'] (at pp.c:10881)
      FuncDecl: quals=None (at pp.c:10881)
        ParamList:  (at pp.c:10881)
          Decl: name='id', quals=[], storage=[] (at pp.c:10881)
            TypeDecl: declname='id', quals=[] (at pp.c:10881)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:10882)
            PtrDecl: quals=[] (at pp.c:10882)
              TypeDecl: declname='msg', quals=[] (at pp.c:10882)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__default__requestCongestionBackoff', quals=[] (at pp.c:10881)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10884)
  FuncDef:  (at pp.c:10888)
    Decl: name='CC2420ActiveMessageP__RadioBackoff__requestCongestionBackoff', quals=[], storage=['static', 'inline'] (at pp.c:10888)
      FuncDecl: quals=None (at pp.c:10888)
        ParamList:  (at pp.c:10888)
          Decl: name='arg_0x1024e7d60', quals=[], storage=[] (at pp.c:10888)
            TypeDecl: declname='arg_0x1024e7d60', quals=[] (at pp.c:10888)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:10888)
            PtrDecl: quals=[] (at pp.c:10888)
              TypeDecl: declname='msg', quals=[] (at pp.c:10888)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__requestCongestionBackoff', quals=[] (at pp.c:10888)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10888)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__RadioBackoff__default__requestCongestionBackoff' (at pp.c:10890)
        ExprList:  (at pp.c:10890)
          ID: name='arg_0x1024e7d60' (at pp.c:10890)
          ID: name='msg' (at pp.c:10890)
  FuncDef:  (at pp.c:10895)
    Decl: name='CC2420ActiveMessageP__SubBackoff__requestCongestionBackoff', quals=[], storage=['inline', 'static'] (at pp.c:10895)
      FuncDecl: quals=None (at pp.c:10895)
        ParamList:  (at pp.c:10895)
          Decl: name='msg', quals=[], storage=[] (at pp.c:10895)
            PtrDecl: quals=[] (at pp.c:10895)
              TypeDecl: declname='msg', quals=[] (at pp.c:10895)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__SubBackoff__requestCongestionBackoff', quals=[] (at pp.c:10895)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10897)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__RadioBackoff__requestCongestionBackoff' (at pp.c:10898)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='__nesc_ntoh_leuint8' (at pp.c:10898)
            ExprList:  (at None)
              StructRef: type='.' (at None)
                StructRef: type='->' (at None)
                  Cast:  (at None)
                    Typename: quals=[] (at None)
                      PtrDecl: quals=[] (at pp.c:10898)
                        TypeDecl: declname=None, quals=[] (at None)
                          IdentifierType: names=['cc2420_header_t'] (at None)
                    BinaryOp: op='-' (at None)
                      BinaryOp: op='+' (at None)
                        Cast:  (at None)
                          Typename: quals=[] (at None)
                            PtrDecl: quals=[] (at pp.c:10898)
                              TypeDecl: declname=None, quals=[] (at None)
                                IdentifierType: names=['uint8_t'] (at None)
                          ID: name='msg' (at pp.c:10898)
                        Cast:  (at None)
                          Typename: quals=[] (at None)
                            TypeDecl: declname=None, quals=[] (at None)
                              IdentifierType: names=['size_t'] (at None)
                          UnaryOp: op='&' (at None)
                            StructRef: type='->' (at None)
                              Cast:  (at None)
                                Typename: quals=[] (at None)
                                  PtrDecl: quals=[] (at pp.c:10898)
                                    TypeDecl: declname=None, quals=[] (at None)
                                      IdentifierType: names=['message_t'] (at None)
                                Constant: type='int', value='0' (at pp.c:10898)
                              ID: name='data' (at pp.c:10898)
                      UnaryOp: op='sizeof' (at pp.c:10898)
                        Typename: quals=[] (at None)
                          TypeDecl: declname=None, quals=[] (at None)
                            IdentifierType: names=['cc2420_header_t'] (at None)
                  ID: name='type' (at pp.c:10898)
                ID: name='nxdata' (at pp.c:10898)
          ID: name='msg' (at pp.c:10898)
  FuncDef:  (at pp.c:10902)
    Decl: name='CC2420CsmaP__RadioBackoff__requestCongestionBackoff', quals=[], storage=['static', 'inline'] (at pp.c:10902)
      FuncDecl: quals=None (at pp.c:10902)
        ParamList:  (at pp.c:10902)
          Decl: name='msg', quals=[], storage=[] (at pp.c:10902)
            PtrDecl: quals=[] (at pp.c:10902)
              TypeDecl: declname='msg', quals=[] (at pp.c:10902)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__RadioBackoff__requestCongestionBackoff', quals=[] (at pp.c:10902)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10902)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__SubBackoff__requestCongestionBackoff' (at pp.c:10904)
        ExprList:  (at pp.c:10904)
          ID: name='msg' (at pp.c:10904)
  FuncDef:  (at pp.c:10909)
    Decl: name='RandomMlcgC__Random__rand16', quals=[], storage=['inline', 'static'] (at pp.c:10909)
      FuncDecl: quals=None (at pp.c:10909)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RandomMlcgC__Random__rand16', quals=[] (at pp.c:10909)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:10911)
      Return:  (at pp.c:10912)
        Cast:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['uint16_t'] (at None)
          FuncCall:  (at None)
            ID: name='RandomMlcgC__Random__rand32' (at pp.c:10912)
  FuncDef:  (at pp.c:10916)
    Decl: name='CC2420CsmaP__Random__rand16', quals=[], storage=['static', 'inline'] (at pp.c:10916)
      FuncDecl: quals=None (at pp.c:10916)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__Random__rand16', quals=[] (at pp.c:10916)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:10916)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10918)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10918)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10922)
        ID: name='__nesc_result' (at pp.c:10922)
        FuncCall:  (at None)
          ID: name='RandomMlcgC__Random__rand16' (at pp.c:10922)
      Return:  (at pp.c:10926)
        ID: name='__nesc_result' (at pp.c:10926)
  FuncDef:  (at pp.c:10931)
    Decl: name='CC2420TransmitP__RadioBackoff__setCongestionBackoff', quals=[], storage=['inline', 'static'] (at pp.c:10931)
      FuncDecl: quals=None (at pp.c:10931)
        ParamList:  (at pp.c:10931)
          Decl: name='backoffTime', quals=[], storage=[] (at pp.c:10931)
            TypeDecl: declname='backoffTime', quals=[] (at pp.c:10931)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__RadioBackoff__setCongestionBackoff', quals=[] (at pp.c:10931)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10933)
      Assignment: op='=' (at pp.c:10934)
        ID: name='CC2420TransmitP__myCongestionBackoff' (at pp.c:10934)
        BinaryOp: op='+' (at pp.c:10934)
          ID: name='backoffTime' (at pp.c:10934)
          Constant: type='int', value='1' (at pp.c:10934)
  FuncDef:  (at pp.c:10938)
    Decl: name='CC2420CsmaP__SubBackoff__setCongestionBackoff', quals=[], storage=['static', 'inline'] (at pp.c:10938)
      FuncDecl: quals=None (at pp.c:10938)
        ParamList:  (at pp.c:10938)
          Decl: name='backoffTime', quals=[], storage=[] (at pp.c:10938)
            TypeDecl: declname='backoffTime', quals=[] (at pp.c:10938)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__SubBackoff__setCongestionBackoff', quals=[] (at pp.c:10938)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10938)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__RadioBackoff__setCongestionBackoff' (at pp.c:10940)
        ExprList:  (at pp.c:10940)
          ID: name='backoffTime' (at pp.c:10940)
  FuncDef:  (at pp.c:10945)
    Decl: name='CC2420CsmaP__SubBackoff__requestCongestionBackoff', quals=[], storage=['inline', 'static'] (at pp.c:10945)
      FuncDecl: quals=None (at pp.c:10945)
        ParamList:  (at pp.c:10945)
          Decl: name='msg', quals=[], storage=[] (at pp.c:10945)
            PtrDecl: quals=[] (at pp.c:10945)
              TypeDecl: declname='msg', quals=[] (at pp.c:10945)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__SubBackoff__requestCongestionBackoff', quals=[] (at pp.c:10945)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10947)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__SubBackoff__setCongestionBackoff' (at pp.c:10948)
        ExprList:  (at None)
          BinaryOp: op='+' (at None)
            BinaryOp: op='%' (at None)
              FuncCall:  (at None)
                ID: name='CC2420CsmaP__Random__rand16' (at pp.c:10948)
              BinaryOp: op='*' (at pp.c:10949)
                Constant: type='int', value='0x7' (at pp.c:10949)
                ID: name='CC2420_BACKOFF_PERIOD' (at pp.c:10949)
            ID: name='CC2420_MIN_BACKOFF' (at pp.c:10949)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__RadioBackoff__requestCongestionBackoff' (at pp.c:10951)
        ExprList:  (at pp.c:10951)
          ID: name='msg' (at pp.c:10951)
  FuncDef:  (at pp.c:10955)
    Decl: name='CC2420TransmitP__RadioBackoff__requestCongestionBackoff', quals=[], storage=['static', 'inline'] (at pp.c:10955)
      FuncDecl: quals=None (at pp.c:10955)
        ParamList:  (at pp.c:10955)
          Decl: name='msg', quals=[], storage=[] (at pp.c:10955)
            PtrDecl: quals=[] (at pp.c:10955)
              TypeDecl: declname='msg', quals=[] (at pp.c:10955)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__RadioBackoff__requestCongestionBackoff', quals=[] (at pp.c:10955)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:10955)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__SubBackoff__requestCongestionBackoff' (at pp.c:10957)
        ExprList:  (at pp.c:10957)
          ID: name='msg' (at pp.c:10957)
  FuncDef:  (at pp.c:10962)
    Decl: name='CC2420TransmitP__SpiResource__immediateRequest', quals=[], storage=['static', 'inline'] (at pp.c:10962)
      FuncDecl: quals=None (at pp.c:10962)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__SpiResource__immediateRequest', quals=[] (at pp.c:10962)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10962)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10964)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10964)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10968)
        ID: name='__nesc_result' (at pp.c:10968)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__immediateRequest' (at pp.c:10968)
          ExprList:  (at pp.c:10968)
            ID: name='CC2420SpiC__3__CLIENT_ID' (at pp.c:10968)
      Return:  (at pp.c:10972)
        ID: name='__nesc_result' (at pp.c:10972)
  FuncDef:  (at pp.c:10977)
    Decl: name='CC2420SpiP__WorkingState__requestState', quals=[], storage=['static', 'inline'] (at pp.c:10977)
      FuncDecl: quals=None (at pp.c:10977)
        ParamList:  (at pp.c:10977)
          Decl: name='reqState', quals=[], storage=[] (at pp.c:10977)
            TypeDecl: declname='reqState', quals=[] (at pp.c:10977)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__WorkingState__requestState', quals=[] (at pp.c:10977)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10977)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:10979)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:10979)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:10983)
        ID: name='__nesc_result' (at pp.c:10983)
        FuncCall:  (at None)
          ID: name='StateImplP__State__requestState' (at pp.c:10983)
          ExprList:  (at pp.c:10983)
            Constant: type='int', value='0U' (at pp.c:10983)
            ID: name='reqState' (at pp.c:10983)
      Return:  (at pp.c:10987)
        ID: name='__nesc_result' (at pp.c:10987)
  FuncDef:  (at pp.c:10992)
    Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__isOwner', quals=[], storage=['inline', 'static'] (at pp.c:10992)
      FuncDecl: quals=None (at pp.c:10992)
        ParamList:  (at pp.c:10992)
          Decl: name='id', quals=[], storage=[] (at pp.c:10992)
            TypeDecl: declname='id', quals=[] (at pp.c:10992)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__isOwner', quals=[] (at pp.c:10992)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:10994)
      Return:  (at pp.c:10996)
        ID: name='FAIL' (at pp.c:10996)
  FuncDef:  (at pp.c:11000)
    Decl: name='Msp430SpiNoDmaP__0__UsartResource__isOwner', quals=[], storage=['static', 'inline'] (at pp.c:11000)
      FuncDecl: quals=None (at pp.c:11000)
        ParamList:  (at pp.c:11000)
          Decl: name='arg_0x101ced588', quals=[], storage=[] (at pp.c:11000)
            TypeDecl: declname='arg_0x101ced588', quals=[] (at pp.c:11000)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__isOwner', quals=[] (at pp.c:11000)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:11000)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11002)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11002)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:11006)
        ID: name='arg_0x101ced588' (at pp.c:11006)
        Compound:  (at pp.c:11006)
          Case:  (at pp.c:11008)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:11008)
            Assignment: op='=' (at pp.c:11010)
              ID: name='__nesc_result' (at pp.c:11010)
              FuncCall:  (at None)
                ID: name='ArbiterP__0__Resource__isOwner' (at pp.c:11010)
                ExprList:  (at pp.c:11010)
                  ID: name='Msp430Usart0C__0__CLIENT_ID' (at pp.c:11010)
          Break:  (at pp.c:11012)
          Default:  (at pp.c:11014)
            Assignment: op='=' (at pp.c:11016)
              ID: name='__nesc_result' (at pp.c:11016)
              FuncCall:  (at None)
                ID: name='Msp430SpiNoDmaP__0__UsartResource__default__isOwner' (at pp.c:11016)
                ExprList:  (at pp.c:11016)
                  ID: name='arg_0x101ced588' (at pp.c:11016)
          Break:  (at pp.c:11018)
      Return:  (at pp.c:11024)
        ID: name='__nesc_result' (at pp.c:11024)
  FuncDef:  (at pp.c:11029)
    Decl: name='Msp430SpiNoDmaP__0__Resource__isOwner', quals=[], storage=['inline', 'static'] (at pp.c:11029)
      FuncDecl: quals=None (at pp.c:11029)
        ParamList:  (at pp.c:11029)
          Decl: name='id', quals=[], storage=[] (at pp.c:11029)
            TypeDecl: declname='id', quals=[] (at pp.c:11029)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__isOwner', quals=[] (at pp.c:11029)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:11031)
      Return:  (at pp.c:11032)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__UsartResource__isOwner' (at pp.c:11032)
          ExprList:  (at pp.c:11032)
            ID: name='id' (at pp.c:11032)
  FuncDef:  (at pp.c:11036)
    Decl: name='CC2420SpiP__SpiResource__isOwner', quals=[], storage=['static', 'inline'] (at pp.c:11036)
      FuncDecl: quals=None (at pp.c:11036)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__SpiResource__isOwner', quals=[] (at pp.c:11036)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:11036)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11038)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11038)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11042)
        ID: name='__nesc_result' (at pp.c:11042)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__Resource__isOwner' (at pp.c:11042)
          ExprList:  (at pp.c:11042)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:11042)
      Return:  (at pp.c:11046)
        ID: name='__nesc_result' (at pp.c:11046)
  FuncDef:  (at pp.c:11051)
    Decl: name='Msp430SpiNoDmaP__0__Msp430SpiConfigure__default__getConfig', quals=[], storage=['inline', 'static'] (at pp.c:11051)
      FuncDecl: quals=None (at pp.c:11051)
        ParamList:  (at pp.c:11051)
          Decl: name='id', quals=[], storage=[] (at pp.c:11051)
            TypeDecl: declname='id', quals=[] (at pp.c:11051)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:11051)
          TypeDecl: declname='Msp430SpiNoDmaP__0__Msp430SpiConfigure__default__getConfig', quals=[] (at pp.c:11051)
            IdentifierType: names=['msp430_spi_union_config_t'] (at None)
    Compound:  (at pp.c:11053)
      Return:  (at pp.c:11054)
        UnaryOp: op='&' (at pp.c:11054)
          ID: name='msp430_spi_default_config' (at pp.c:11054)
  FuncDef:  (at pp.c:11058)
    Decl: name='Msp430SpiNoDmaP__0__Msp430SpiConfigure__getConfig', quals=[], storage=['static', 'inline'] (at pp.c:11058)
      FuncDecl: quals=None (at pp.c:11058)
        ParamList:  (at pp.c:11058)
          Decl: name='arg_0x101cec830', quals=[], storage=[] (at pp.c:11058)
            TypeDecl: declname='arg_0x101cec830', quals=[] (at pp.c:11058)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:11058)
          TypeDecl: declname='Msp430SpiNoDmaP__0__Msp430SpiConfigure__getConfig', quals=[] (at pp.c:11058)
            IdentifierType: names=['msp430_spi_union_config_t'] (at None)
    Compound:  (at pp.c:11058)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11060)
        PtrDecl: quals=[] (at pp.c:11060)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11060)
            Union: name='__nesc_unnamed4286', packed=False (at pp.c:11060)
      Assignment: op='=' (at pp.c:11064)
        ID: name='__nesc_result' (at pp.c:11064)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__Msp430SpiConfigure__default__getConfig' (at pp.c:11064)
          ExprList:  (at pp.c:11064)
            ID: name='arg_0x101cec830' (at pp.c:11064)
      Return:  (at pp.c:11068)
        ID: name='__nesc_result' (at pp.c:11068)
  FuncDef:  (at pp.c:11073)
    Decl: name='Msp430SpiNoDmaP__0__Usart__setModeSpi', quals=[], storage=['static', 'inline'] (at pp.c:11073)
      FuncDecl: quals=None (at pp.c:11073)
        ParamList:  (at pp.c:11073)
          Decl: name='config', quals=[], storage=[] (at pp.c:11073)
            PtrDecl: quals=[] (at pp.c:11073)
              TypeDecl: declname='config', quals=[] (at pp.c:11073)
                IdentifierType: names=['msp430_spi_union_config_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__setModeSpi', quals=[] (at pp.c:11073)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11073)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Usart__setModeSpi' (at pp.c:11075)
        ExprList:  (at pp.c:11075)
          ID: name='config' (at pp.c:11075)
  FuncDef:  (at pp.c:11080)
    Decl: name='Msp430SpiNoDmaP__0__ResourceConfigure__configure', quals=[], storage=['inline', 'static'] (at pp.c:11080)
      FuncDecl: quals=None (at pp.c:11080)
        ParamList:  (at pp.c:11080)
          Decl: name='id', quals=[], storage=[] (at pp.c:11080)
            TypeDecl: declname='id', quals=[] (at pp.c:11080)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__ResourceConfigure__configure', quals=[] (at pp.c:11080)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11082)
      FuncCall:  (at None)
        ID: name='Msp430SpiNoDmaP__0__Usart__setModeSpi' (at pp.c:11083)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='Msp430SpiNoDmaP__0__Msp430SpiConfigure__getConfig' (at pp.c:11083)
            ExprList:  (at pp.c:11083)
              ID: name='id' (at pp.c:11083)
  FuncDef:  (at pp.c:11087)
    Decl: name='ArbiterP__0__ResourceConfigure__default__configure', quals=[], storage=['inline', 'static'] (at pp.c:11087)
      FuncDecl: quals=None (at pp.c:11087)
        ParamList:  (at pp.c:11087)
          Decl: name='id', quals=[], storage=[] (at pp.c:11087)
            TypeDecl: declname='id', quals=[] (at pp.c:11087)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceConfigure__default__configure', quals=[] (at pp.c:11087)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11089)
  FuncDef:  (at pp.c:11093)
    Decl: name='ArbiterP__0__ResourceConfigure__configure', quals=[], storage=['static', 'inline'] (at pp.c:11093)
      FuncDecl: quals=None (at pp.c:11093)
        ParamList:  (at pp.c:11093)
          Decl: name='arg_0x101eef9b8', quals=[], storage=[] (at pp.c:11093)
            TypeDecl: declname='arg_0x101eef9b8', quals=[] (at pp.c:11093)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceConfigure__configure', quals=[] (at pp.c:11093)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11093)
      Switch:  (at pp.c:11095)
        ID: name='arg_0x101eef9b8' (at pp.c:11095)
        Compound:  (at pp.c:11095)
          Case:  (at pp.c:11097)
            ID: name='Msp430Usart0C__0__CLIENT_ID' (at pp.c:11097)
            FuncCall:  (at None)
              ID: name='Msp430SpiNoDmaP__0__ResourceConfigure__configure' (at pp.c:11099)
              ExprList:  (at pp.c:11099)
                ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:11099)
          Break:  (at pp.c:11101)
          Default:  (at pp.c:11103)
            FuncCall:  (at None)
              ID: name='ArbiterP__0__ResourceConfigure__default__configure' (at pp.c:11105)
              ExprList:  (at pp.c:11105)
                ID: name='arg_0x101eef9b8' (at pp.c:11105)
          Break:  (at pp.c:11107)
  FuncDef:  (at pp.c:11114)
    Decl: name='ArbiterP__0__ResourceDefaultOwner__default__immediateRequested', quals=[], storage=['inline', 'static'] (at pp.c:11114)
      FuncDecl: quals=None (at pp.c:11114)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__default__immediateRequested', quals=[] (at pp.c:11114)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11116)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceDefaultOwner__release' (at pp.c:11117)
  FuncDef:  (at pp.c:11121)
    Decl: name='ArbiterP__0__ResourceDefaultOwner__immediateRequested', quals=[], storage=['static', 'inline'] (at pp.c:11121)
      FuncDecl: quals=None (at pp.c:11121)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__immediateRequested', quals=[] (at pp.c:11121)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11121)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceDefaultOwner__default__immediateRequested' (at pp.c:11123)
  FuncDef:  (at pp.c:11128)
    Decl: name='ArbiterP__0__ResourceRequested__default__immediateRequested', quals=[], storage=['inline', 'static'] (at pp.c:11128)
      FuncDecl: quals=None (at pp.c:11128)
        ParamList:  (at pp.c:11128)
          Decl: name='id', quals=[], storage=[] (at pp.c:11128)
            TypeDecl: declname='id', quals=[] (at pp.c:11128)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceRequested__default__immediateRequested', quals=[] (at pp.c:11128)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11130)
  FuncDef:  (at pp.c:11134)
    Decl: name='ArbiterP__0__ResourceRequested__immediateRequested', quals=[], storage=['static', 'inline'] (at pp.c:11134)
      FuncDecl: quals=None (at pp.c:11134)
        ParamList:  (at pp.c:11134)
          Decl: name='arg_0x101ef27e8', quals=[], storage=[] (at pp.c:11134)
            TypeDecl: declname='arg_0x101ef27e8', quals=[] (at pp.c:11134)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceRequested__immediateRequested', quals=[] (at pp.c:11134)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11134)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceRequested__default__immediateRequested' (at pp.c:11136)
        ExprList:  (at pp.c:11136)
          ID: name='arg_0x101ef27e8' (at pp.c:11136)
  FuncDef:  (at pp.c:11141)
    Decl: name='ArbiterP__0__Resource__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:11141)
      FuncDecl: quals=None (at pp.c:11141)
        ParamList:  (at pp.c:11141)
          Decl: name='id', quals=[], storage=[] (at pp.c:11141)
            TypeDecl: declname='id', quals=[] (at pp.c:11141)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__Resource__immediateRequest', quals=[] (at pp.c:11141)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11143)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceRequested__immediateRequested' (at pp.c:11144)
        ExprList:  (at pp.c:11144)
          ID: name='ArbiterP__0__resId' (at pp.c:11144)
      Compound:  (at pp.c:11147)
        If:  (at pp.c:11148)
          BinaryOp: op='==' (at pp.c:11148)
            ID: name='ArbiterP__0__state' (at pp.c:11148)
            ID: name='ArbiterP__0__RES_CONTROLLED' (at pp.c:11148)
          Compound:  (at pp.c:11148)
            Assignment: op='=' (at pp.c:11149)
              ID: name='ArbiterP__0__state' (at pp.c:11149)
              ID: name='ArbiterP__0__RES_IMM_GRANTING' (at pp.c:11149)
            Assignment: op='=' (at pp.c:11150)
              ID: name='ArbiterP__0__reqResId' (at pp.c:11150)
              ID: name='id' (at pp.c:11150)
          Compound:  (at pp.c:11152)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11153)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11153)
                IdentifierType: names=['char', 'unsigned'] (at None)
              ID: name='FAIL' (at pp.c:11155)
            Return:  (at pp.c:11158)
              ID: name='__nesc_temp' (at pp.c:11158)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceDefaultOwner__immediateRequested' (at pp.c:11162)
      If:  (at pp.c:11163)
        BinaryOp: op='==' (at pp.c:11163)
          ID: name='ArbiterP__0__resId' (at pp.c:11163)
          ID: name='id' (at pp.c:11163)
        Compound:  (at pp.c:11163)
          FuncCall:  (at None)
            ID: name='ArbiterP__0__ResourceConfigure__configure' (at pp.c:11164)
            ExprList:  (at pp.c:11164)
              ID: name='ArbiterP__0__resId' (at pp.c:11164)
          Return:  (at pp.c:11165)
            ID: name='SUCCESS' (at pp.c:11165)
      Assignment: op='=' (at pp.c:11169)
        ID: name='ArbiterP__0__state' (at pp.c:11169)
        ID: name='ArbiterP__0__RES_CONTROLLED' (at pp.c:11169)
      Return:  (at pp.c:11170)
        ID: name='FAIL' (at pp.c:11170)
  FuncDef:  (at pp.c:11174)
    Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:11174)
      FuncDecl: quals=None (at pp.c:11174)
        ParamList:  (at pp.c:11174)
          Decl: name='id', quals=[], storage=[] (at pp.c:11174)
            TypeDecl: declname='id', quals=[] (at pp.c:11174)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__immediateRequest', quals=[] (at pp.c:11174)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11176)
      Return:  (at pp.c:11178)
        ID: name='FAIL' (at pp.c:11178)
  FuncDef:  (at pp.c:11182)
    Decl: name='Msp430SpiNoDmaP__0__UsartResource__immediateRequest', quals=[], storage=['static', 'inline'] (at pp.c:11182)
      FuncDecl: quals=None (at pp.c:11182)
        ParamList:  (at pp.c:11182)
          Decl: name='arg_0x101ced588', quals=[], storage=[] (at pp.c:11182)
            TypeDecl: declname='arg_0x101ced588', quals=[] (at pp.c:11182)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__immediateRequest', quals=[] (at pp.c:11182)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11182)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11184)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11184)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:11188)
        ID: name='arg_0x101ced588' (at pp.c:11188)
        Compound:  (at pp.c:11188)
          Case:  (at pp.c:11190)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:11190)
            Assignment: op='=' (at pp.c:11192)
              ID: name='__nesc_result' (at pp.c:11192)
              FuncCall:  (at None)
                ID: name='ArbiterP__0__Resource__immediateRequest' (at pp.c:11192)
                ExprList:  (at pp.c:11192)
                  ID: name='Msp430Usart0C__0__CLIENT_ID' (at pp.c:11192)
          Break:  (at pp.c:11194)
          Default:  (at pp.c:11196)
            Assignment: op='=' (at pp.c:11198)
              ID: name='__nesc_result' (at pp.c:11198)
              FuncCall:  (at None)
                ID: name='Msp430SpiNoDmaP__0__UsartResource__default__immediateRequest' (at pp.c:11198)
                ExprList:  (at pp.c:11198)
                  ID: name='arg_0x101ced588' (at pp.c:11198)
          Break:  (at pp.c:11200)
      Return:  (at pp.c:11206)
        ID: name='__nesc_result' (at pp.c:11206)
  FuncDef:  (at pp.c:11211)
    Decl: name='Msp430SpiNoDmaP__0__Resource__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:11211)
      FuncDecl: quals=None (at pp.c:11211)
        ParamList:  (at pp.c:11211)
          Decl: name='id', quals=[], storage=[] (at pp.c:11211)
            TypeDecl: declname='id', quals=[] (at pp.c:11211)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__immediateRequest', quals=[] (at pp.c:11211)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11213)
      Return:  (at pp.c:11214)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__UsartResource__immediateRequest' (at pp.c:11214)
          ExprList:  (at pp.c:11214)
            ID: name='id' (at pp.c:11214)
  FuncDef:  (at pp.c:11218)
    Decl: name='CC2420SpiP__SpiResource__immediateRequest', quals=[], storage=['static', 'inline'] (at pp.c:11218)
      FuncDecl: quals=None (at pp.c:11218)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__SpiResource__immediateRequest', quals=[] (at pp.c:11218)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11218)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11220)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11220)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11224)
        ID: name='__nesc_result' (at pp.c:11224)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__Resource__immediateRequest' (at pp.c:11224)
          ExprList:  (at pp.c:11224)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:11224)
      Return:  (at pp.c:11228)
        ID: name='__nesc_result' (at pp.c:11228)
  FuncDef:  (at pp.c:11233)
    Decl: name='SchedulerBasicP__isWaiting', quals=[], storage=['inline', 'static'] (at pp.c:11233)
      FuncDecl: quals=None (at pp.c:11233)
        ParamList:  (at pp.c:11233)
          Decl: name='id', quals=[], storage=[] (at pp.c:11233)
            TypeDecl: declname='id', quals=[] (at pp.c:11233)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SchedulerBasicP__isWaiting', quals=[] (at pp.c:11233)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:11234)
      Return:  (at pp.c:11235)
        BinaryOp: op='||' (at pp.c:11235)
          BinaryOp: op='!=' (at pp.c:11235)
            ArrayRef:  (at pp.c:11235)
              ID: name='SchedulerBasicP__m_next' (at pp.c:11235)
              ID: name='id' (at pp.c:11235)
            ID: name='SchedulerBasicP__NO_TASK' (at pp.c:11235)
          BinaryOp: op='==' (at pp.c:11235)
            ID: name='SchedulerBasicP__m_tail' (at pp.c:11235)
            ID: name='id' (at pp.c:11235)
  FuncDef:  (at pp.c:11238)
    Decl: name='SchedulerBasicP__pushTask', quals=[], storage=['inline', 'static'] (at pp.c:11238)
      FuncDecl: quals=None (at pp.c:11238)
        ParamList:  (at pp.c:11238)
          Decl: name='id', quals=[], storage=[] (at pp.c:11238)
            TypeDecl: declname='id', quals=[] (at pp.c:11238)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SchedulerBasicP__pushTask', quals=[] (at pp.c:11238)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:11239)
      If:  (at pp.c:11240)
        UnaryOp: op='!' (at None)
          FuncCall:  (at None)
            ID: name='SchedulerBasicP__isWaiting' (at pp.c:11240)
            ExprList:  (at pp.c:11240)
              ID: name='id' (at pp.c:11240)
        Compound:  (at pp.c:11241)
          If:  (at pp.c:11242)
            BinaryOp: op='==' (at pp.c:11242)
              ID: name='SchedulerBasicP__m_head' (at pp.c:11242)
              ID: name='SchedulerBasicP__NO_TASK' (at pp.c:11242)
            Compound:  (at pp.c:11243)
              Assignment: op='=' (at pp.c:11244)
                ID: name='SchedulerBasicP__m_head' (at pp.c:11244)
                ID: name='id' (at pp.c:11244)
              Assignment: op='=' (at pp.c:11245)
                ID: name='SchedulerBasicP__m_tail' (at pp.c:11245)
                ID: name='id' (at pp.c:11245)
            Compound:  (at pp.c:11248)
              Assignment: op='=' (at pp.c:11249)
                ArrayRef:  (at pp.c:11249)
                  ID: name='SchedulerBasicP__m_next' (at pp.c:11249)
                  ID: name='SchedulerBasicP__m_tail' (at pp.c:11249)
                ID: name='id' (at pp.c:11249)
              Assignment: op='=' (at pp.c:11250)
                ID: name='SchedulerBasicP__m_tail' (at pp.c:11250)
                ID: name='id' (at pp.c:11250)
          Return:  (at pp.c:11252)
            ID: name='TRUE' (at pp.c:11252)
        Compound:  (at pp.c:11255)
          Return:  (at pp.c:11256)
            ID: name='FALSE' (at pp.c:11256)
  FuncDef:  (at pp.c:11261)
    Decl: name='HplMsp430Usart0P__Usart__resetUsart', quals=[], storage=['inline', 'static'] (at pp.c:11261)
      FuncDecl: quals=None (at pp.c:11261)
        ParamList:  (at pp.c:11261)
          Decl: name='reset', quals=[], storage=[] (at pp.c:11261)
            TypeDecl: declname='reset', quals=[] (at pp.c:11261)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__resetUsart', quals=[] (at pp.c:11261)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11263)
      If:  (at pp.c:11264)
        ID: name='reset' (at pp.c:11264)
        Compound:  (at pp.c:11264)
          Assignment: op='=' (at pp.c:11265)
            ID: name='U0CTL' (at pp.c:11265)
            Constant: type='int', value='0x01' (at pp.c:11265)
        Compound:  (at pp.c:11267)
          Assignment: op='&=' (at pp.c:11268)
            ID: name='U0CTL' (at pp.c:11268)
            UnaryOp: op='~' (at pp.c:11268)
              Constant: type='int', value='0x01' (at pp.c:11268)
  FuncDef:  (at pp.c:11273)
    Decl: name='HplMsp430I2C0P__HplUsart__resetUsart', quals=[], storage=['static', 'inline'] (at pp.c:11273)
      FuncDecl: quals=None (at pp.c:11273)
        ParamList:  (at pp.c:11273)
          Decl: name='reset', quals=[], storage=[] (at pp.c:11273)
            TypeDecl: declname='reset', quals=[] (at pp.c:11273)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='HplMsp430I2C0P__HplUsart__resetUsart', quals=[] (at pp.c:11273)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11273)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Usart__resetUsart' (at pp.c:11275)
        ExprList:  (at pp.c:11275)
          ID: name='reset' (at pp.c:11275)
  FuncDef:  (at pp.c:11280)
    Decl: name='HplMsp430I2C0P__HplI2C__clearModeI2C', quals=[], storage=['inline', 'static'] (at pp.c:11280)
      FuncDecl: quals=None (at pp.c:11280)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430I2C0P__HplI2C__clearModeI2C', quals=[] (at pp.c:11280)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11282)
      Compound:  (at pp.c:11285)
        Assignment: op='&=' (at pp.c:11286)
          ID: name='HplMsp430I2C0P__U0CTL' (at pp.c:11286)
          UnaryOp: op='~' (at pp.c:11286)
            BinaryOp: op='|' (at pp.c:11286)
              BinaryOp: op='|' (at pp.c:11286)
                Constant: type='int', value='0x20' (at pp.c:11286)
                Constant: type='int', value='0x04' (at pp.c:11286)
              Constant: type='int', value='0x01' (at pp.c:11286)
        FuncCall:  (at None)
          ID: name='HplMsp430I2C0P__HplUsart__resetUsart' (at pp.c:11287)
          ExprList:  (at pp.c:11287)
            ID: name='TRUE' (at pp.c:11287)
  FuncDef:  (at pp.c:11292)
    Decl: name='HplMsp430Usart0P__HplI2C__clearModeI2C', quals=[], storage=['static', 'inline'] (at pp.c:11292)
      FuncDecl: quals=None (at pp.c:11292)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__HplI2C__clearModeI2C', quals=[] (at pp.c:11292)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11292)
      FuncCall:  (at None)
        ID: name='HplMsp430I2C0P__HplI2C__clearModeI2C' (at pp.c:11294)
  FuncDef:  (at pp.c:11299)
    Decl: name='HplMsp430GeneralIOP__21__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:11299)
      FuncDecl: quals=None (at pp.c:11299)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__21__IO__selectIOFunc', quals=[] (at pp.c:11299)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11301)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:11304)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='27U' (at pp.c:11304)
        UnaryOp: op='~' (at pp.c:11304)
          BinaryOp: op='<<' (at pp.c:11304)
            Constant: type='int', value='0x01' (at pp.c:11304)
            Constant: type='int', value='5' (at pp.c:11304)
  FuncDef:  (at pp.c:11308)
    Decl: name='HplMsp430Usart0P__URXD__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:11308)
      FuncDecl: quals=None (at pp.c:11308)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__URXD__selectIOFunc', quals=[] (at pp.c:11308)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11308)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__21__IO__selectIOFunc' (at pp.c:11310)
  FuncDef:  (at pp.c:11315)
    Decl: name='HplMsp430GeneralIOP__20__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:11315)
      FuncDecl: quals=None (at pp.c:11315)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__20__IO__selectIOFunc', quals=[] (at pp.c:11315)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11317)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:11320)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='27U' (at pp.c:11320)
        UnaryOp: op='~' (at pp.c:11320)
          BinaryOp: op='<<' (at pp.c:11320)
            Constant: type='int', value='0x01' (at pp.c:11320)
            Constant: type='int', value='4' (at pp.c:11320)
  FuncDef:  (at pp.c:11324)
    Decl: name='HplMsp430Usart0P__UTXD__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:11324)
      FuncDecl: quals=None (at pp.c:11324)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__UTXD__selectIOFunc', quals=[] (at pp.c:11324)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11324)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__20__IO__selectIOFunc' (at pp.c:11326)
  FuncDef:  (at pp.c:11331)
    Decl: name='HplMsp430Usart0P__Usart__disableUart', quals=[], storage=['inline', 'static'] (at pp.c:11331)
      FuncDecl: quals=None (at pp.c:11331)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__disableUart', quals=[] (at pp.c:11331)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11333)
      Compound:  (at pp.c:11336)
        Assignment: op='&=' (at pp.c:11337)
          ID: name='HplMsp430Usart0P__ME1' (at pp.c:11337)
          UnaryOp: op='~' (at pp.c:11337)
            BinaryOp: op='|' (at pp.c:11337)
              BinaryOp: op='<<' (at pp.c:11337)
                Constant: type='int', value='1' (at pp.c:11337)
                Constant: type='int', value='7' (at pp.c:11337)
              BinaryOp: op='<<' (at pp.c:11337)
                Constant: type='int', value='1' (at pp.c:11337)
                Constant: type='int', value='6' (at pp.c:11337)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__UTXD__selectIOFunc' (at pp.c:11338)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__URXD__selectIOFunc' (at pp.c:11339)
  FuncDef:  (at pp.c:11344)
    Decl: name='HplMsp430Usart0P__Usart__setUmctl', quals=[], storage=['inline', 'static'] (at pp.c:11344)
      FuncDecl: quals=None (at pp.c:11344)
        ParamList:  (at pp.c:11344)
          Decl: name='control', quals=[], storage=[] (at pp.c:11344)
            TypeDecl: declname='control', quals=[] (at pp.c:11344)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__setUmctl', quals=[] (at pp.c:11344)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11346)
      Assignment: op='=' (at pp.c:11347)
        ID: name='U0MCTL' (at pp.c:11347)
        ID: name='control' (at pp.c:11347)
  FuncDef:  (at pp.c:11351)
    Decl: name='HplMsp430Usart0P__Usart__setUbr', quals=[], storage=['inline', 'static'] (at pp.c:11351)
      FuncDecl: quals=None (at pp.c:11351)
        ParamList:  (at pp.c:11351)
          Decl: name='control', quals=[], storage=[] (at pp.c:11351)
            TypeDecl: declname='control', quals=[] (at pp.c:11351)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__setUbr', quals=[] (at pp.c:11351)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11353)
      Compound:  (at pp.c:11356)
        Assignment: op='=' (at pp.c:11357)
          ID: name='U0BR0' (at pp.c:11357)
          BinaryOp: op='&' (at pp.c:11357)
            ID: name='control' (at pp.c:11357)
            Constant: type='int', value='0x00FF' (at pp.c:11357)
        Assignment: op='=' (at pp.c:11358)
          ID: name='U0BR1' (at pp.c:11358)
          BinaryOp: op='&' (at pp.c:11358)
            BinaryOp: op='>>' (at pp.c:11358)
              ID: name='control' (at pp.c:11358)
              Constant: type='int', value='8' (at pp.c:11358)
            Constant: type='int', value='0x00FF' (at pp.c:11358)
  FuncDef:  (at pp.c:11363)
    Decl: name='HplMsp430Usart0P__configSpi', quals=[], storage=['inline', 'static'] (at pp.c:11363)
      FuncDecl: quals=None (at pp.c:11363)
        ParamList:  (at pp.c:11363)
          Decl: name='config', quals=[], storage=[] (at pp.c:11363)
            PtrDecl: quals=[] (at pp.c:11363)
              TypeDecl: declname='config', quals=[] (at pp.c:11363)
                IdentifierType: names=['msp430_spi_union_config_t'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__configSpi', quals=[] (at pp.c:11363)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11365)
      Assignment: op='=' (at pp.c:11367)
        ID: name='U0CTL' (at pp.c:11367)
        BinaryOp: op='|' (at pp.c:11367)
          BinaryOp: op='|' (at pp.c:11367)
            StructRef: type='.' (at pp.c:11367)
              StructRef: type='->' (at pp.c:11367)
                ID: name='config' (at pp.c:11367)
                ID: name='spiRegisters' (at pp.c:11367)
              ID: name='uctl' (at pp.c:11367)
            Constant: type='int', value='0x04' (at pp.c:11367)
          Constant: type='int', value='0x01' (at pp.c:11367)
      Assignment: op='=' (at pp.c:11368)
        ID: name='HplMsp430Usart0P__U0TCTL' (at pp.c:11368)
        StructRef: type='.' (at pp.c:11368)
          StructRef: type='->' (at pp.c:11368)
            ID: name='config' (at pp.c:11368)
            ID: name='spiRegisters' (at pp.c:11368)
          ID: name='utctl' (at pp.c:11368)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Usart__setUbr' (at pp.c:11370)
        ExprList:  (at pp.c:11370)
          StructRef: type='.' (at pp.c:11370)
            StructRef: type='->' (at pp.c:11370)
              ID: name='config' (at pp.c:11370)
              ID: name='spiRegisters' (at pp.c:11370)
            ID: name='ubr' (at pp.c:11370)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Usart__setUmctl' (at pp.c:11371)
        ExprList:  (at pp.c:11371)
          Constant: type='int', value='0x00' (at pp.c:11371)
  FuncDef:  (at pp.c:11375)
    Decl: name='HplMsp430GeneralIOP__19__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:11375)
      FuncDecl: quals=None (at pp.c:11375)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__19__IO__selectModuleFunc', quals=[] (at pp.c:11375)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11377)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:11380)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='27U' (at pp.c:11380)
        BinaryOp: op='<<' (at pp.c:11380)
          Constant: type='int', value='0x01' (at pp.c:11380)
          Constant: type='int', value='3' (at pp.c:11380)
  FuncDef:  (at pp.c:11384)
    Decl: name='HplMsp430Usart0P__UCLK__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:11384)
      FuncDecl: quals=None (at pp.c:11384)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__UCLK__selectModuleFunc', quals=[] (at pp.c:11384)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11384)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__19__IO__selectModuleFunc' (at pp.c:11386)
  FuncDef:  (at pp.c:11391)
    Decl: name='HplMsp430GeneralIOP__18__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:11391)
      FuncDecl: quals=None (at pp.c:11391)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__18__IO__selectModuleFunc', quals=[] (at pp.c:11391)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11393)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:11396)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='27U' (at pp.c:11396)
        BinaryOp: op='<<' (at pp.c:11396)
          Constant: type='int', value='0x01' (at pp.c:11396)
          Constant: type='int', value='2' (at pp.c:11396)
  FuncDef:  (at pp.c:11400)
    Decl: name='HplMsp430Usart0P__SOMI__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:11400)
      FuncDecl: quals=None (at pp.c:11400)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__SOMI__selectModuleFunc', quals=[] (at pp.c:11400)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11400)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__18__IO__selectModuleFunc' (at pp.c:11402)
  FuncDef:  (at pp.c:11407)
    Decl: name='HplMsp430GeneralIOP__17__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:11407)
      FuncDecl: quals=None (at pp.c:11407)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__17__IO__selectModuleFunc', quals=[] (at pp.c:11407)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11409)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:11412)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='27U' (at pp.c:11412)
        BinaryOp: op='<<' (at pp.c:11412)
          Constant: type='int', value='0x01' (at pp.c:11412)
          Constant: type='int', value='1' (at pp.c:11412)
  FuncDef:  (at pp.c:11416)
    Decl: name='HplMsp430Usart0P__SIMO__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:11416)
      FuncDecl: quals=None (at pp.c:11416)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__SIMO__selectModuleFunc', quals=[] (at pp.c:11416)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11416)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__17__IO__selectModuleFunc' (at pp.c:11418)
  FuncDef:  (at pp.c:11423)
    Decl: name='HplMsp430Usart0P__Usart__enableSpi', quals=[], storage=['inline', 'static'] (at pp.c:11423)
      FuncDecl: quals=None (at pp.c:11423)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__enableSpi', quals=[] (at pp.c:11423)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11425)
      Compound:  (at pp.c:11428)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__SIMO__selectModuleFunc' (at pp.c:11429)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__SOMI__selectModuleFunc' (at pp.c:11430)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__UCLK__selectModuleFunc' (at pp.c:11431)
      Assignment: op='|=' (at pp.c:11433)
        ID: name='HplMsp430Usart0P__ME1' (at pp.c:11433)
        BinaryOp: op='<<' (at pp.c:11433)
          Constant: type='int', value='1' (at pp.c:11433)
          Constant: type='int', value='6' (at pp.c:11433)
  FuncDef:  (at pp.c:11437)
    Decl: name='HplMsp430Usart0P__Usart__clrIntr', quals=[], storage=['inline', 'static'] (at pp.c:11437)
      FuncDecl: quals=None (at pp.c:11437)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__clrIntr', quals=[] (at pp.c:11437)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11439)
      Assignment: op='&=' (at pp.c:11440)
        ID: name='HplMsp430Usart0P__IFG1' (at pp.c:11440)
        UnaryOp: op='~' (at pp.c:11440)
          BinaryOp: op='|' (at pp.c:11440)
            BinaryOp: op='<<' (at pp.c:11440)
              Constant: type='int', value='1' (at pp.c:11440)
              Constant: type='int', value='7' (at pp.c:11440)
            BinaryOp: op='<<' (at pp.c:11440)
              Constant: type='int', value='1' (at pp.c:11440)
              Constant: type='int', value='6' (at pp.c:11440)
  FuncDef:  (at pp.c:11451)
    Decl: name='HplMsp430Usart0P__Usart__disableIntr', quals=[], storage=['inline', 'static'] (at pp.c:11451)
      FuncDecl: quals=None (at pp.c:11451)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__disableIntr', quals=[] (at pp.c:11451)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11453)
      Assignment: op='&=' (at pp.c:11454)
        ID: name='HplMsp430Usart0P__IE1' (at pp.c:11454)
        UnaryOp: op='~' (at pp.c:11454)
          BinaryOp: op='|' (at pp.c:11454)
            BinaryOp: op='<<' (at pp.c:11454)
              Constant: type='int', value='1' (at pp.c:11454)
              Constant: type='int', value='7' (at pp.c:11454)
            BinaryOp: op='<<' (at pp.c:11454)
              Constant: type='int', value='1' (at pp.c:11454)
              Constant: type='int', value='6' (at pp.c:11454)
  FuncDef:  (at pp.c:11458)
    Decl: name='StateImplP__State__toIdle', quals=[], storage=['inline', 'static'] (at pp.c:11458)
      FuncDecl: quals=None (at pp.c:11458)
        ParamList:  (at pp.c:11458)
          Decl: name='id', quals=[], storage=[] (at pp.c:11458)
            TypeDecl: declname='id', quals=[] (at pp.c:11458)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='StateImplP__State__toIdle', quals=[] (at pp.c:11458)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11460)
      Compound:  (at pp.c:11461)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:11461)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:11461)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:11461)
        Assignment: op='=' (at pp.c:11463)
          ArrayRef:  (at pp.c:11463)
            ID: name='StateImplP__state' (at pp.c:11463)
            ID: name='id' (at pp.c:11463)
          ID: name='StateImplP__S_IDLE' (at pp.c:11463)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:11465)
          ExprList:  (at pp.c:11465)
            ID: name='__nesc_atomic' (at pp.c:11465)
  FuncDef:  (at pp.c:11469)
    Decl: name='CC2420SpiP__WorkingState__toIdle', quals=[], storage=['static', 'inline'] (at pp.c:11469)
      FuncDecl: quals=None (at pp.c:11469)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__WorkingState__toIdle', quals=[] (at pp.c:11469)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11469)
      FuncCall:  (at None)
        ID: name='StateImplP__State__toIdle' (at pp.c:11471)
        ExprList:  (at pp.c:11471)
          Constant: type='int', value='0U' (at pp.c:11471)
  FuncDef:  (at pp.c:11476)
    Decl: name='CC2420TransmitP__SpiResource__request', quals=[], storage=['static', 'inline'] (at pp.c:11476)
      FuncDecl: quals=None (at pp.c:11476)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__SpiResource__request', quals=[] (at pp.c:11476)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11476)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11478)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11478)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11482)
        ID: name='__nesc_result' (at pp.c:11482)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__request' (at pp.c:11482)
          ExprList:  (at pp.c:11482)
            ID: name='CC2420SpiC__3__CLIENT_ID' (at pp.c:11482)
      Return:  (at pp.c:11486)
        ID: name='__nesc_result' (at pp.c:11486)
  FuncDef:  (at pp.c:11491)
    Decl: name='ArbiterP__0__ResourceDefaultOwner__default__requested', quals=[], storage=['inline', 'static'] (at pp.c:11491)
      FuncDecl: quals=None (at pp.c:11491)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__default__requested', quals=[] (at pp.c:11491)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11493)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceDefaultOwner__release' (at pp.c:11494)
  FuncDef:  (at pp.c:11498)
    Decl: name='ArbiterP__0__ResourceDefaultOwner__requested', quals=[], storage=['static', 'inline'] (at pp.c:11498)
      FuncDecl: quals=None (at pp.c:11498)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__requested', quals=[] (at pp.c:11498)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11498)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceDefaultOwner__default__requested' (at pp.c:11500)
  FuncDef:  (at pp.c:11505)
    Decl: name='FcfsResourceQueueC__1__FcfsQueue__isEnqueued', quals=[], storage=['inline', 'static'] (at pp.c:11505)
      FuncDecl: quals=None (at pp.c:11505)
        ParamList:  (at pp.c:11505)
          Decl: name='id', quals=[], storage=[] (at pp.c:11505)
            TypeDecl: declname='id', quals=[] (at pp.c:11505)
              IdentifierType: names=['resource_client_id_t'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__isEnqueued', quals=[] (at pp.c:11505)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:11507)
      Compound:  (at pp.c:11510)
        Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11511)
          TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11511)
            IdentifierType: names=['char', 'unsigned'] (at None)
          BinaryOp: op='||' (at pp.c:11513)
            BinaryOp: op='!=' (at pp.c:11513)
              ArrayRef:  (at pp.c:11513)
                ID: name='FcfsResourceQueueC__1__resQ' (at pp.c:11513)
                ID: name='id' (at pp.c:11513)
              ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:11513)
            BinaryOp: op='==' (at pp.c:11513)
              ID: name='FcfsResourceQueueC__1__qTail' (at pp.c:11513)
              ID: name='id' (at pp.c:11513)
        Return:  (at pp.c:11516)
          ID: name='__nesc_temp' (at pp.c:11516)
  FuncDef:  (at pp.c:11521)
    Decl: name='FcfsResourceQueueC__1__FcfsQueue__enqueue', quals=[], storage=['inline', 'static'] (at pp.c:11521)
      FuncDecl: quals=None (at pp.c:11521)
        ParamList:  (at pp.c:11521)
          Decl: name='id', quals=[], storage=[] (at pp.c:11521)
            TypeDecl: declname='id', quals=[] (at pp.c:11521)
              IdentifierType: names=['resource_client_id_t'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__enqueue', quals=[] (at pp.c:11521)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11523)
      Compound:  (at pp.c:11526)
        If:  (at pp.c:11527)
          UnaryOp: op='!' (at None)
            FuncCall:  (at None)
              ID: name='FcfsResourceQueueC__1__FcfsQueue__isEnqueued' (at pp.c:11527)
              ExprList:  (at pp.c:11527)
                ID: name='id' (at pp.c:11527)
          Compound:  (at pp.c:11527)
            If:  (at pp.c:11528)
              BinaryOp: op='==' (at pp.c:11528)
                ID: name='FcfsResourceQueueC__1__qHead' (at pp.c:11528)
                ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:11528)
              Compound:  (at pp.c:11528)
                Assignment: op='=' (at pp.c:11529)
                  ID: name='FcfsResourceQueueC__1__qHead' (at pp.c:11529)
                  ID: name='id' (at pp.c:11529)
              Compound:  (at pp.c:11531)
                Assignment: op='=' (at pp.c:11533)
                  ArrayRef:  (at pp.c:11533)
                    ID: name='FcfsResourceQueueC__1__resQ' (at pp.c:11533)
                    ID: name='FcfsResourceQueueC__1__qTail' (at pp.c:11533)
                  ID: name='id' (at pp.c:11533)
            Assignment: op='=' (at pp.c:11536)
              ID: name='FcfsResourceQueueC__1__qTail' (at pp.c:11536)
              ID: name='id' (at pp.c:11536)
            Compound:  (at pp.c:11537)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11538)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11538)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='SUCCESS' (at pp.c:11540)
              Return:  (at pp.c:11543)
                ID: name='__nesc_temp' (at pp.c:11543)
        Compound:  (at pp.c:11547)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11548)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11548)
              IdentifierType: names=['char', 'unsigned'] (at None)
            ID: name='EBUSY' (at pp.c:11550)
          Return:  (at pp.c:11553)
            ID: name='__nesc_temp' (at pp.c:11553)
  FuncDef:  (at pp.c:11559)
    Decl: name='ArbiterP__0__Queue__enqueue', quals=[], storage=['static', 'inline'] (at pp.c:11559)
      FuncDecl: quals=None (at pp.c:11559)
        ParamList:  (at pp.c:11559)
          Decl: name='id', quals=[], storage=[] (at pp.c:11559)
            TypeDecl: declname='id', quals=[] (at pp.c:11559)
              IdentifierType: names=['resource_client_id_t'] (at None)
        TypeDecl: declname='ArbiterP__0__Queue__enqueue', quals=[] (at pp.c:11559)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11559)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11561)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11561)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11565)
        ID: name='__nesc_result' (at pp.c:11565)
        FuncCall:  (at None)
          ID: name='FcfsResourceQueueC__1__FcfsQueue__enqueue' (at pp.c:11565)
          ExprList:  (at pp.c:11565)
            ID: name='id' (at pp.c:11565)
      Return:  (at pp.c:11569)
        ID: name='__nesc_result' (at pp.c:11569)
  FuncDef:  (at pp.c:11574)
    Decl: name='ArbiterP__0__ResourceRequested__default__requested', quals=[], storage=['inline', 'static'] (at pp.c:11574)
      FuncDecl: quals=None (at pp.c:11574)
        ParamList:  (at pp.c:11574)
          Decl: name='id', quals=[], storage=[] (at pp.c:11574)
            TypeDecl: declname='id', quals=[] (at pp.c:11574)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceRequested__default__requested', quals=[] (at pp.c:11574)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11576)
  FuncDef:  (at pp.c:11580)
    Decl: name='ArbiterP__0__ResourceRequested__requested', quals=[], storage=['static', 'inline'] (at pp.c:11580)
      FuncDecl: quals=None (at pp.c:11580)
        ParamList:  (at pp.c:11580)
          Decl: name='arg_0x101ef27e8', quals=[], storage=[] (at pp.c:11580)
            TypeDecl: declname='arg_0x101ef27e8', quals=[] (at pp.c:11580)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceRequested__requested', quals=[] (at pp.c:11580)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11580)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceRequested__default__requested' (at pp.c:11582)
        ExprList:  (at pp.c:11582)
          ID: name='arg_0x101ef27e8' (at pp.c:11582)
  FuncDef:  (at pp.c:11587)
    Decl: name='ArbiterP__0__Resource__request', quals=[], storage=['inline', 'static'] (at pp.c:11587)
      FuncDecl: quals=None (at pp.c:11587)
        ParamList:  (at pp.c:11587)
          Decl: name='id', quals=[], storage=[] (at pp.c:11587)
            TypeDecl: declname='id', quals=[] (at pp.c:11587)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__Resource__request', quals=[] (at pp.c:11587)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11589)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceRequested__requested' (at pp.c:11590)
        ExprList:  (at pp.c:11590)
          ID: name='ArbiterP__0__resId' (at pp.c:11590)
      Compound:  (at pp.c:11593)
        If:  (at pp.c:11594)
          BinaryOp: op='==' (at pp.c:11594)
            ID: name='ArbiterP__0__state' (at pp.c:11594)
            ID: name='ArbiterP__0__RES_CONTROLLED' (at pp.c:11594)
          Compound:  (at pp.c:11594)
            Assignment: op='=' (at pp.c:11595)
              ID: name='ArbiterP__0__state' (at pp.c:11595)
              ID: name='ArbiterP__0__RES_GRANTING' (at pp.c:11595)
            Assignment: op='=' (at pp.c:11596)
              ID: name='ArbiterP__0__reqResId' (at pp.c:11596)
              ID: name='id' (at pp.c:11596)
          Compound:  (at pp.c:11598)
            If:  (at pp.c:11600)
              BinaryOp: op='==' (at pp.c:11600)
                ID: name='ArbiterP__0__reqResId' (at pp.c:11600)
                ID: name='id' (at pp.c:11600)
              Compound:  (at pp.c:11600)
                Compound:  (at pp.c:11601)
                  Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11602)
                    TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11602)
                      IdentifierType: names=['char', 'unsigned'] (at None)
                    ID: name='SUCCESS' (at pp.c:11604)
                  Return:  (at pp.c:11607)
                    ID: name='__nesc_temp' (at pp.c:11607)
              Compound:  (at pp.c:11612)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11613)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11613)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  FuncCall:  (at None)
                    ID: name='ArbiterP__0__Queue__enqueue' (at pp.c:11615)
                    ExprList:  (at pp.c:11615)
                      ID: name='id' (at pp.c:11615)
                Return:  (at pp.c:11618)
                  ID: name='__nesc_temp' (at pp.c:11618)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceDefaultOwner__requested' (at pp.c:11623)
      Return:  (at pp.c:11624)
        ID: name='SUCCESS' (at pp.c:11624)
  FuncDef:  (at pp.c:11628)
    Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__request', quals=[], storage=['inline', 'static'] (at pp.c:11628)
      FuncDecl: quals=None (at pp.c:11628)
        ParamList:  (at pp.c:11628)
          Decl: name='id', quals=[], storage=[] (at pp.c:11628)
            TypeDecl: declname='id', quals=[] (at pp.c:11628)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__request', quals=[] (at pp.c:11628)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11630)
      Return:  (at pp.c:11632)
        ID: name='FAIL' (at pp.c:11632)
  FuncDef:  (at pp.c:11636)
    Decl: name='Msp430SpiNoDmaP__0__UsartResource__request', quals=[], storage=['static', 'inline'] (at pp.c:11636)
      FuncDecl: quals=None (at pp.c:11636)
        ParamList:  (at pp.c:11636)
          Decl: name='arg_0x101ced588', quals=[], storage=[] (at pp.c:11636)
            TypeDecl: declname='arg_0x101ced588', quals=[] (at pp.c:11636)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__request', quals=[] (at pp.c:11636)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11636)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11638)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11638)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:11642)
        ID: name='arg_0x101ced588' (at pp.c:11642)
        Compound:  (at pp.c:11642)
          Case:  (at pp.c:11644)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:11644)
            Assignment: op='=' (at pp.c:11646)
              ID: name='__nesc_result' (at pp.c:11646)
              FuncCall:  (at None)
                ID: name='ArbiterP__0__Resource__request' (at pp.c:11646)
                ExprList:  (at pp.c:11646)
                  ID: name='Msp430Usart0C__0__CLIENT_ID' (at pp.c:11646)
          Break:  (at pp.c:11648)
          Default:  (at pp.c:11650)
            Assignment: op='=' (at pp.c:11652)
              ID: name='__nesc_result' (at pp.c:11652)
              FuncCall:  (at None)
                ID: name='Msp430SpiNoDmaP__0__UsartResource__default__request' (at pp.c:11652)
                ExprList:  (at pp.c:11652)
                  ID: name='arg_0x101ced588' (at pp.c:11652)
          Break:  (at pp.c:11654)
      Return:  (at pp.c:11660)
        ID: name='__nesc_result' (at pp.c:11660)
  FuncDef:  (at pp.c:11665)
    Decl: name='Msp430SpiNoDmaP__0__Resource__request', quals=[], storage=['inline', 'static'] (at pp.c:11665)
      FuncDecl: quals=None (at pp.c:11665)
        ParamList:  (at pp.c:11665)
          Decl: name='id', quals=[], storage=[] (at pp.c:11665)
            TypeDecl: declname='id', quals=[] (at pp.c:11665)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__request', quals=[] (at pp.c:11665)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11667)
      Return:  (at pp.c:11668)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__UsartResource__request' (at pp.c:11668)
          ExprList:  (at pp.c:11668)
            ID: name='id' (at pp.c:11668)
  FuncDef:  (at pp.c:11672)
    Decl: name='CC2420SpiP__SpiResource__request', quals=[], storage=['static', 'inline'] (at pp.c:11672)
      FuncDecl: quals=None (at pp.c:11672)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__SpiResource__request', quals=[] (at pp.c:11672)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11672)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11674)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11674)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11678)
        ID: name='__nesc_result' (at pp.c:11678)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__Resource__request' (at pp.c:11678)
          ExprList:  (at pp.c:11678)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:11678)
      Return:  (at pp.c:11682)
        ID: name='__nesc_result' (at pp.c:11682)
  FuncDef:  (at pp.c:11687)
    Decl: name='HplMsp430Usart0P__Usart__tx', quals=[], storage=['inline', 'static'] (at pp.c:11687)
      FuncDecl: quals=None (at pp.c:11687)
        ParamList:  (at pp.c:11687)
          Decl: name='data', quals=[], storage=[] (at pp.c:11687)
            TypeDecl: declname='data', quals=[] (at pp.c:11687)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__tx', quals=[] (at pp.c:11687)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11689)
      Assignment: op='=' (at pp.c:11690)
        ID: name='HplMsp430Usart0P__U0TXBUF' (at pp.c:11690)
        ID: name='data' (at pp.c:11690)
  FuncDef:  (at pp.c:11694)
    Decl: name='Msp430SpiNoDmaP__0__Usart__tx', quals=[], storage=['static', 'inline'] (at pp.c:11694)
      FuncDecl: quals=None (at pp.c:11694)
        ParamList:  (at pp.c:11694)
          Decl: name='data', quals=[], storage=[] (at pp.c:11694)
            TypeDecl: declname='data', quals=[] (at pp.c:11694)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__tx', quals=[] (at pp.c:11694)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11694)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Usart__tx' (at pp.c:11696)
        ExprList:  (at pp.c:11696)
          ID: name='data' (at pp.c:11696)
  FuncDef:  (at pp.c:11701)
    Decl: name='HplMsp430Usart0P__Usart__isRxIntrPending', quals=[], storage=['inline', 'static'] (at pp.c:11701)
      FuncDecl: quals=None (at pp.c:11701)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__isRxIntrPending', quals=[] (at pp.c:11701)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:11703)
      If:  (at pp.c:11704)
        BinaryOp: op='&' (at pp.c:11704)
          ID: name='HplMsp430Usart0P__IFG1' (at pp.c:11704)
          BinaryOp: op='<<' (at pp.c:11704)
            Constant: type='int', value='1' (at pp.c:11704)
            Constant: type='int', value='6' (at pp.c:11704)
        Compound:  (at pp.c:11704)
          Return:  (at pp.c:11705)
            ID: name='TRUE' (at pp.c:11705)
      Return:  (at pp.c:11707)
        ID: name='FALSE' (at pp.c:11707)
  FuncDef:  (at pp.c:11711)
    Decl: name='Msp430SpiNoDmaP__0__Usart__isRxIntrPending', quals=[], storage=['static', 'inline'] (at pp.c:11711)
      FuncDecl: quals=None (at pp.c:11711)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__isRxIntrPending', quals=[] (at pp.c:11711)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:11711)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11713)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11713)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11717)
        ID: name='__nesc_result' (at pp.c:11717)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__Usart__isRxIntrPending' (at pp.c:11717)
      Return:  (at pp.c:11721)
        ID: name='__nesc_result' (at pp.c:11721)
  FuncDef:  (at pp.c:11726)
    Decl: name='HplMsp430Usart0P__Usart__clrRxIntr', quals=[], storage=['inline', 'static'] (at pp.c:11726)
      FuncDecl: quals=None (at pp.c:11726)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__clrRxIntr', quals=[] (at pp.c:11726)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11728)
      Assignment: op='&=' (at pp.c:11729)
        ID: name='HplMsp430Usart0P__IFG1' (at pp.c:11729)
        UnaryOp: op='~' (at pp.c:11729)
          BinaryOp: op='<<' (at pp.c:11729)
            Constant: type='int', value='1' (at pp.c:11729)
            Constant: type='int', value='6' (at pp.c:11729)
  FuncDef:  (at pp.c:11733)
    Decl: name='Msp430SpiNoDmaP__0__Usart__clrRxIntr', quals=[], storage=['static', 'inline'] (at pp.c:11733)
      FuncDecl: quals=None (at pp.c:11733)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__clrRxIntr', quals=[] (at pp.c:11733)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11733)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Usart__clrRxIntr' (at pp.c:11735)
  FuncDef:  (at pp.c:11740)
    Decl: name='HplMsp430Usart0P__Usart__rx', quals=[], storage=['inline', 'static'] (at pp.c:11740)
      FuncDecl: quals=None (at pp.c:11740)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__rx', quals=[] (at pp.c:11740)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:11742)
      Return:  (at pp.c:11743)
        ID: name='U0RXBUF' (at pp.c:11743)
  FuncDef:  (at pp.c:11747)
    Decl: name='Msp430SpiNoDmaP__0__Usart__rx', quals=[], storage=['static', 'inline'] (at pp.c:11747)
      FuncDecl: quals=None (at pp.c:11747)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__rx', quals=[] (at pp.c:11747)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:11747)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11749)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11749)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11753)
        ID: name='__nesc_result' (at pp.c:11753)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__Usart__rx' (at pp.c:11753)
      Return:  (at pp.c:11757)
        ID: name='__nesc_result' (at pp.c:11757)
  FuncDef:  (at pp.c:11762)
    Decl: name='CC2420SpiP__ChipSpiResource__abortRelease', quals=[], storage=['inline', 'static'] (at pp.c:11762)
      FuncDecl: quals=None (at pp.c:11762)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__ChipSpiResource__abortRelease', quals=[] (at pp.c:11762)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11764)
      Assignment: op='=' (at pp.c:11767)
        ID: name='CC2420SpiP__release' (at pp.c:11767)
        ID: name='FALSE' (at pp.c:11767)
  FuncDef:  (at pp.c:11771)
    Decl: name='CC2420TransmitP__ChipSpiResource__abortRelease', quals=[], storage=['static', 'inline'] (at pp.c:11771)
      FuncDecl: quals=None (at pp.c:11771)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__ChipSpiResource__abortRelease', quals=[] (at pp.c:11771)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11771)
      FuncCall:  (at None)
        ID: name='CC2420SpiP__ChipSpiResource__abortRelease' (at pp.c:11773)
  FuncDef:  (at pp.c:11778)
    Decl: name='CC2420TransmitP__ChipSpiResource__releasing', quals=[], storage=['inline', 'static'] (at pp.c:11778)
      FuncDecl: quals=None (at pp.c:11778)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__ChipSpiResource__releasing', quals=[] (at pp.c:11778)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11780)
      If:  (at pp.c:11781)
        ID: name='CC2420TransmitP__abortSpiRelease' (at pp.c:11781)
        Compound:  (at pp.c:11781)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__ChipSpiResource__abortRelease' (at pp.c:11782)
  FuncDef:  (at pp.c:11787)
    Decl: name='CC2420SpiP__ChipSpiResource__releasing', quals=[], storage=['static', 'inline'] (at pp.c:11787)
      FuncDecl: quals=None (at pp.c:11787)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__ChipSpiResource__releasing', quals=[] (at pp.c:11787)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11787)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__ChipSpiResource__releasing' (at pp.c:11789)
  FuncDef:  (at pp.c:11794)
    Decl: name='ArbiterP__0__ResourceDefaultOwner__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:11794)
      FuncDecl: quals=None (at pp.c:11794)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__default__granted', quals=[] (at pp.c:11794)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11796)
  FuncDef:  (at pp.c:11800)
    Decl: name='ArbiterP__0__ResourceDefaultOwner__granted', quals=[], storage=['static', 'inline'] (at pp.c:11800)
      FuncDecl: quals=None (at pp.c:11800)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__granted', quals=[] (at pp.c:11800)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11800)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceDefaultOwner__default__granted' (at pp.c:11802)
  FuncDef:  (at pp.c:11807)
    Decl: name='Msp430SpiNoDmaP__0__Usart__resetUsart', quals=[], storage=['static', 'inline'] (at pp.c:11807)
      FuncDecl: quals=None (at pp.c:11807)
        ParamList:  (at pp.c:11807)
          Decl: name='reset', quals=[], storage=[] (at pp.c:11807)
            TypeDecl: declname='reset', quals=[] (at pp.c:11807)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__resetUsart', quals=[] (at pp.c:11807)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11807)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Usart__resetUsart' (at pp.c:11809)
        ExprList:  (at pp.c:11809)
          ID: name='reset' (at pp.c:11809)
  FuncDef:  (at pp.c:11814)
    Decl: name='Msp430SpiNoDmaP__0__Usart__disableSpi', quals=[], storage=['static', 'inline'] (at pp.c:11814)
      FuncDecl: quals=None (at pp.c:11814)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__disableSpi', quals=[] (at pp.c:11814)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11814)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Usart__disableSpi' (at pp.c:11816)
  FuncDef:  (at pp.c:11821)
    Decl: name='Msp430SpiNoDmaP__0__ResourceConfigure__unconfigure', quals=[], storage=['inline', 'static'] (at pp.c:11821)
      FuncDecl: quals=None (at pp.c:11821)
        ParamList:  (at pp.c:11821)
          Decl: name='id', quals=[], storage=[] (at pp.c:11821)
            TypeDecl: declname='id', quals=[] (at pp.c:11821)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__ResourceConfigure__unconfigure', quals=[] (at pp.c:11821)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11823)
      FuncCall:  (at None)
        ID: name='Msp430SpiNoDmaP__0__Usart__resetUsart' (at pp.c:11824)
        ExprList:  (at pp.c:11824)
          ID: name='TRUE' (at pp.c:11824)
      FuncCall:  (at None)
        ID: name='Msp430SpiNoDmaP__0__Usart__disableSpi' (at pp.c:11825)
      FuncCall:  (at None)
        ID: name='Msp430SpiNoDmaP__0__Usart__resetUsart' (at pp.c:11826)
        ExprList:  (at pp.c:11826)
          ID: name='FALSE' (at pp.c:11826)
  FuncDef:  (at pp.c:11830)
    Decl: name='ArbiterP__0__ResourceConfigure__default__unconfigure', quals=[], storage=['inline', 'static'] (at pp.c:11830)
      FuncDecl: quals=None (at pp.c:11830)
        ParamList:  (at pp.c:11830)
          Decl: name='id', quals=[], storage=[] (at pp.c:11830)
            TypeDecl: declname='id', quals=[] (at pp.c:11830)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceConfigure__default__unconfigure', quals=[] (at pp.c:11830)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11832)
  FuncDef:  (at pp.c:11836)
    Decl: name='ArbiterP__0__ResourceConfigure__unconfigure', quals=[], storage=['static', 'inline'] (at pp.c:11836)
      FuncDecl: quals=None (at pp.c:11836)
        ParamList:  (at pp.c:11836)
          Decl: name='arg_0x101eef9b8', quals=[], storage=[] (at pp.c:11836)
            TypeDecl: declname='arg_0x101eef9b8', quals=[] (at pp.c:11836)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceConfigure__unconfigure', quals=[] (at pp.c:11836)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:11836)
      Switch:  (at pp.c:11838)
        ID: name='arg_0x101eef9b8' (at pp.c:11838)
        Compound:  (at pp.c:11838)
          Case:  (at pp.c:11840)
            ID: name='Msp430Usart0C__0__CLIENT_ID' (at pp.c:11840)
            FuncCall:  (at None)
              ID: name='Msp430SpiNoDmaP__0__ResourceConfigure__unconfigure' (at pp.c:11842)
              ExprList:  (at pp.c:11842)
                ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:11842)
          Break:  (at pp.c:11844)
          Default:  (at pp.c:11846)
            FuncCall:  (at None)
              ID: name='ArbiterP__0__ResourceConfigure__default__unconfigure' (at pp.c:11848)
              ExprList:  (at pp.c:11848)
                ID: name='arg_0x101eef9b8' (at pp.c:11848)
          Break:  (at pp.c:11850)
  FuncDef:  (at pp.c:11857)
    Decl: name='ArbiterP__0__grantedTask__postTask', quals=[], storage=['static', 'inline'] (at pp.c:11857)
      FuncDecl: quals=None (at pp.c:11857)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__grantedTask__postTask', quals=[] (at pp.c:11857)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11857)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11859)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11859)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11863)
        ID: name='__nesc_result' (at pp.c:11863)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:11863)
          ExprList:  (at pp.c:11863)
            ID: name='ArbiterP__0__grantedTask' (at pp.c:11863)
      Return:  (at pp.c:11867)
        ID: name='__nesc_result' (at pp.c:11867)
  FuncDef:  (at pp.c:11872)
    Decl: name='FcfsResourceQueueC__1__FcfsQueue__dequeue', quals=[], storage=['inline', 'static'] (at pp.c:11872)
      FuncDecl: quals=None (at pp.c:11872)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__dequeue', quals=[] (at pp.c:11872)
          IdentifierType: names=['resource_client_id_t'] (at None)
    Compound:  (at pp.c:11874)
      Compound:  (at pp.c:11877)
        If:  (at pp.c:11878)
          BinaryOp: op='!=' (at pp.c:11878)
            ID: name='FcfsResourceQueueC__1__qHead' (at pp.c:11878)
            ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:11878)
          Compound:  (at pp.c:11878)
            Decl: name='id', quals=[], storage=[] (at pp.c:11879)
              TypeDecl: declname='id', quals=[] (at pp.c:11879)
                IdentifierType: names=['uint8_t'] (at None)
              ID: name='FcfsResourceQueueC__1__qHead' (at pp.c:11879)
            Assignment: op='=' (at pp.c:11882)
              ID: name='FcfsResourceQueueC__1__qHead' (at pp.c:11882)
              ArrayRef:  (at pp.c:11882)
                ID: name='FcfsResourceQueueC__1__resQ' (at pp.c:11882)
                ID: name='FcfsResourceQueueC__1__qHead' (at pp.c:11882)
            If:  (at pp.c:11883)
              BinaryOp: op='==' (at pp.c:11883)
                ID: name='FcfsResourceQueueC__1__qHead' (at pp.c:11883)
                ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:11883)
              Compound:  (at pp.c:11883)
                Assignment: op='=' (at pp.c:11884)
                  ID: name='FcfsResourceQueueC__1__qTail' (at pp.c:11884)
                  ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:11884)
            Assignment: op='=' (at pp.c:11887)
              ArrayRef:  (at pp.c:11887)
                ID: name='FcfsResourceQueueC__1__resQ' (at pp.c:11887)
                ID: name='id' (at pp.c:11887)
              ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:11887)
            Compound:  (at pp.c:11888)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11889)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11889)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='id' (at pp.c:11891)
              Return:  (at pp.c:11894)
                ID: name='__nesc_temp' (at pp.c:11894)
        Compound:  (at pp.c:11898)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11899)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11899)
              IdentifierType: names=['char', 'unsigned'] (at None)
            ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:11901)
          Return:  (at pp.c:11904)
            ID: name='__nesc_temp' (at pp.c:11904)
  FuncDef:  (at pp.c:11910)
    Decl: name='ArbiterP__0__Queue__dequeue', quals=[], storage=['static', 'inline'] (at pp.c:11910)
      FuncDecl: quals=None (at pp.c:11910)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__Queue__dequeue', quals=[] (at pp.c:11910)
          IdentifierType: names=['resource_client_id_t'] (at None)
    Compound:  (at pp.c:11910)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11912)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11912)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11916)
        ID: name='__nesc_result' (at pp.c:11916)
        FuncCall:  (at None)
          ID: name='FcfsResourceQueueC__1__FcfsQueue__dequeue' (at pp.c:11916)
      Return:  (at pp.c:11920)
        ID: name='__nesc_result' (at pp.c:11920)
  FuncDef:  (at pp.c:11925)
    Decl: name='FcfsResourceQueueC__1__FcfsQueue__isEmpty', quals=[], storage=['inline', 'static'] (at pp.c:11925)
      FuncDecl: quals=None (at pp.c:11925)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__1__FcfsQueue__isEmpty', quals=[] (at pp.c:11925)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:11927)
      Compound:  (at pp.c:11930)
        Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11931)
          TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11931)
            IdentifierType: names=['char', 'unsigned'] (at None)
          BinaryOp: op='==' (at pp.c:11933)
            ID: name='FcfsResourceQueueC__1__qHead' (at pp.c:11933)
            ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:11933)
        Return:  (at pp.c:11936)
          ID: name='__nesc_temp' (at pp.c:11936)
  FuncDef:  (at pp.c:11941)
    Decl: name='ArbiterP__0__Queue__isEmpty', quals=[], storage=['static', 'inline'] (at pp.c:11941)
      FuncDecl: quals=None (at pp.c:11941)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__Queue__isEmpty', quals=[] (at pp.c:11941)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:11941)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:11943)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:11943)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:11947)
        ID: name='__nesc_result' (at pp.c:11947)
        FuncCall:  (at None)
          ID: name='FcfsResourceQueueC__1__FcfsQueue__isEmpty' (at pp.c:11947)
      Return:  (at pp.c:11951)
        ID: name='__nesc_result' (at pp.c:11951)
  FuncDef:  (at pp.c:11956)
    Decl: name='ArbiterP__0__Resource__release', quals=[], storage=['inline', 'static'] (at pp.c:11956)
      FuncDecl: quals=None (at pp.c:11956)
        ParamList:  (at pp.c:11956)
          Decl: name='id', quals=[], storage=[] (at pp.c:11956)
            TypeDecl: declname='id', quals=[] (at pp.c:11956)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__Resource__release', quals=[] (at pp.c:11956)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11958)
      Compound:  (at pp.c:11961)
        If:  (at pp.c:11962)
          BinaryOp: op='&&' (at pp.c:11962)
            BinaryOp: op='==' (at pp.c:11962)
              ID: name='ArbiterP__0__state' (at pp.c:11962)
              ID: name='ArbiterP__0__RES_BUSY' (at pp.c:11962)
            BinaryOp: op='==' (at pp.c:11962)
              ID: name='ArbiterP__0__resId' (at pp.c:11962)
              ID: name='id' (at pp.c:11962)
          Compound:  (at pp.c:11962)
            If:  (at pp.c:11963)
              BinaryOp: op='==' (at None)
                FuncCall:  (at None)
                  ID: name='ArbiterP__0__Queue__isEmpty' (at pp.c:11963)
                ID: name='FALSE' (at pp.c:11963)
              Compound:  (at pp.c:11963)
                Assignment: op='=' (at pp.c:11964)
                  ID: name='ArbiterP__0__reqResId' (at pp.c:11964)
                  FuncCall:  (at None)
                    ID: name='ArbiterP__0__Queue__dequeue' (at pp.c:11964)
                Assignment: op='=' (at pp.c:11965)
                  ID: name='ArbiterP__0__resId' (at pp.c:11965)
                  ID: name='ArbiterP__0__NO_RES' (at pp.c:11965)
                Assignment: op='=' (at pp.c:11966)
                  ID: name='ArbiterP__0__state' (at pp.c:11966)
                  ID: name='ArbiterP__0__RES_GRANTING' (at pp.c:11966)
                FuncCall:  (at None)
                  ID: name='ArbiterP__0__grantedTask__postTask' (at pp.c:11967)
                FuncCall:  (at None)
                  ID: name='ArbiterP__0__ResourceConfigure__unconfigure' (at pp.c:11968)
                  ExprList:  (at pp.c:11968)
                    ID: name='id' (at pp.c:11968)
              Compound:  (at pp.c:11970)
                Assignment: op='=' (at pp.c:11971)
                  ID: name='ArbiterP__0__resId' (at pp.c:11971)
                  ID: name='ArbiterP__0__default_owner_id' (at pp.c:11971)
                Assignment: op='=' (at pp.c:11972)
                  ID: name='ArbiterP__0__state' (at pp.c:11972)
                  ID: name='ArbiterP__0__RES_CONTROLLED' (at pp.c:11972)
                FuncCall:  (at None)
                  ID: name='ArbiterP__0__ResourceConfigure__unconfigure' (at pp.c:11973)
                  ExprList:  (at pp.c:11973)
                    ID: name='id' (at pp.c:11973)
                FuncCall:  (at None)
                  ID: name='ArbiterP__0__ResourceDefaultOwner__granted' (at pp.c:11974)
            Compound:  (at pp.c:11976)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:11977)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:11977)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='SUCCESS' (at pp.c:11979)
              Return:  (at pp.c:11982)
                ID: name='__nesc_temp' (at pp.c:11982)
      Return:  (at pp.c:11987)
        ID: name='FAIL' (at pp.c:11987)
  FuncDef:  (at pp.c:11991)
    Decl: name='Msp430SpiNoDmaP__0__UsartResource__default__release', quals=[], storage=['inline', 'static'] (at pp.c:11991)
      FuncDecl: quals=None (at pp.c:11991)
        ParamList:  (at pp.c:11991)
          Decl: name='id', quals=[], storage=[] (at pp.c:11991)
            TypeDecl: declname='id', quals=[] (at pp.c:11991)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__default__release', quals=[] (at pp.c:11991)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11993)
      Return:  (at pp.c:11995)
        ID: name='FAIL' (at pp.c:11995)
  FuncDef:  (at pp.c:11999)
    Decl: name='Msp430SpiNoDmaP__0__UsartResource__release', quals=[], storage=['static', 'inline'] (at pp.c:11999)
      FuncDecl: quals=None (at pp.c:11999)
        ParamList:  (at pp.c:11999)
          Decl: name='arg_0x101ced588', quals=[], storage=[] (at pp.c:11999)
            TypeDecl: declname='arg_0x101ced588', quals=[] (at pp.c:11999)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__release', quals=[] (at pp.c:11999)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:11999)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12001)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12001)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:12005)
        ID: name='arg_0x101ced588' (at pp.c:12005)
        Compound:  (at pp.c:12005)
          Case:  (at pp.c:12007)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:12007)
            Assignment: op='=' (at pp.c:12009)
              ID: name='__nesc_result' (at pp.c:12009)
              FuncCall:  (at None)
                ID: name='ArbiterP__0__Resource__release' (at pp.c:12009)
                ExprList:  (at pp.c:12009)
                  ID: name='Msp430Usart0C__0__CLIENT_ID' (at pp.c:12009)
          Break:  (at pp.c:12011)
          Default:  (at pp.c:12013)
            Assignment: op='=' (at pp.c:12015)
              ID: name='__nesc_result' (at pp.c:12015)
              FuncCall:  (at None)
                ID: name='Msp430SpiNoDmaP__0__UsartResource__default__release' (at pp.c:12015)
                ExprList:  (at pp.c:12015)
                  ID: name='arg_0x101ced588' (at pp.c:12015)
          Break:  (at pp.c:12017)
      Return:  (at pp.c:12023)
        ID: name='__nesc_result' (at pp.c:12023)
  FuncDef:  (at pp.c:12028)
    Decl: name='Msp430SpiNoDmaP__0__Resource__release', quals=[], storage=['inline', 'static'] (at pp.c:12028)
      FuncDecl: quals=None (at pp.c:12028)
        ParamList:  (at pp.c:12028)
          Decl: name='id', quals=[], storage=[] (at pp.c:12028)
            TypeDecl: declname='id', quals=[] (at pp.c:12028)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__release', quals=[] (at pp.c:12028)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:12030)
      Return:  (at pp.c:12031)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__UsartResource__release' (at pp.c:12031)
          ExprList:  (at pp.c:12031)
            ID: name='id' (at pp.c:12031)
  FuncDef:  (at pp.c:12035)
    Decl: name='CC2420SpiP__SpiResource__release', quals=[], storage=['static', 'inline'] (at pp.c:12035)
      FuncDecl: quals=None (at pp.c:12035)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__SpiResource__release', quals=[] (at pp.c:12035)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:12035)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12037)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12037)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12041)
        ID: name='__nesc_result' (at pp.c:12041)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__Resource__release' (at pp.c:12041)
          ExprList:  (at pp.c:12041)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:12041)
      Return:  (at pp.c:12045)
        ID: name='__nesc_result' (at pp.c:12045)
  FuncDef:  (at pp.c:12050)
    Decl: name='HplMsp430GeneralIOP__17__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:12050)
      FuncDecl: quals=None (at pp.c:12050)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__17__IO__selectIOFunc', quals=[] (at pp.c:12050)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12052)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12055)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='27U' (at pp.c:12055)
        UnaryOp: op='~' (at pp.c:12055)
          BinaryOp: op='<<' (at pp.c:12055)
            Constant: type='int', value='0x01' (at pp.c:12055)
            Constant: type='int', value='1' (at pp.c:12055)
  FuncDef:  (at pp.c:12059)
    Decl: name='HplMsp430Usart0P__SIMO__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:12059)
      FuncDecl: quals=None (at pp.c:12059)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__SIMO__selectIOFunc', quals=[] (at pp.c:12059)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12059)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__17__IO__selectIOFunc' (at pp.c:12061)
  FuncDef:  (at pp.c:12066)
    Decl: name='HplMsp430GeneralIOP__18__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:12066)
      FuncDecl: quals=None (at pp.c:12066)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__18__IO__selectIOFunc', quals=[] (at pp.c:12066)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12068)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12071)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='27U' (at pp.c:12071)
        UnaryOp: op='~' (at pp.c:12071)
          BinaryOp: op='<<' (at pp.c:12071)
            Constant: type='int', value='0x01' (at pp.c:12071)
            Constant: type='int', value='2' (at pp.c:12071)
  FuncDef:  (at pp.c:12075)
    Decl: name='HplMsp430Usart0P__SOMI__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:12075)
      FuncDecl: quals=None (at pp.c:12075)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__SOMI__selectIOFunc', quals=[] (at pp.c:12075)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12075)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__18__IO__selectIOFunc' (at pp.c:12077)
  FuncDef:  (at pp.c:12082)
    Decl: name='HplMsp430GeneralIOP__19__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:12082)
      FuncDecl: quals=None (at pp.c:12082)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__19__IO__selectIOFunc', quals=[] (at pp.c:12082)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12084)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12087)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='27U' (at pp.c:12087)
        UnaryOp: op='~' (at pp.c:12087)
          BinaryOp: op='<<' (at pp.c:12087)
            Constant: type='int', value='0x01' (at pp.c:12087)
            Constant: type='int', value='3' (at pp.c:12087)
  FuncDef:  (at pp.c:12091)
    Decl: name='HplMsp430Usart0P__UCLK__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:12091)
      FuncDecl: quals=None (at pp.c:12091)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__UCLK__selectIOFunc', quals=[] (at pp.c:12091)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12091)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__19__IO__selectIOFunc' (at pp.c:12093)
  FuncDef:  (at pp.c:12098)
    Decl: name='CC2420TransmitP__STXONCCA__strobe', quals=[], storage=['static', 'inline'] (at pp.c:12098)
      FuncDecl: quals=None (at pp.c:12098)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__STXONCCA__strobe', quals=[] (at pp.c:12098)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:12098)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12100)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12100)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12104)
        ID: name='__nesc_result' (at pp.c:12104)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Strobe__strobe' (at pp.c:12104)
          ExprList:  (at pp.c:12104)
            ID: name='CC2420_STXONCCA' (at pp.c:12104)
      Return:  (at pp.c:12108)
        ID: name='__nesc_result' (at pp.c:12108)
  FuncDef:  (at pp.c:12112)
    Decl: name='CC2420TransmitP__STXON__strobe', quals=[], storage=['static', 'inline'] (at pp.c:12112)
      FuncDecl: quals=None (at pp.c:12112)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__STXON__strobe', quals=[] (at pp.c:12112)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:12112)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12114)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12114)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12118)
        ID: name='__nesc_result' (at pp.c:12118)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Strobe__strobe' (at pp.c:12118)
          ExprList:  (at pp.c:12118)
            ID: name='CC2420_STXON' (at pp.c:12118)
      Return:  (at pp.c:12122)
        ID: name='__nesc_result' (at pp.c:12122)
  FuncDef:  (at pp.c:12126)
    Decl: name='CC2420TransmitP__SNOP__strobe', quals=[], storage=['static', 'inline'] (at pp.c:12126)
      FuncDecl: quals=None (at pp.c:12126)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__SNOP__strobe', quals=[] (at pp.c:12126)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:12126)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12128)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12128)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12132)
        ID: name='__nesc_result' (at pp.c:12132)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Strobe__strobe' (at pp.c:12132)
          ExprList:  (at pp.c:12132)
            ID: name='CC2420_SNOP' (at pp.c:12132)
      Return:  (at pp.c:12136)
        ID: name='__nesc_result' (at pp.c:12136)
  FuncDef:  (at pp.c:12141)
    Decl: name='CC2420SpiP__ChipSpiResource__attemptRelease', quals=[], storage=['inline', 'static'] (at pp.c:12141)
      FuncDecl: quals=None (at pp.c:12141)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__ChipSpiResource__attemptRelease', quals=[] (at pp.c:12141)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:12143)
      Return:  (at pp.c:12144)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__attemptRelease' (at pp.c:12144)
  FuncDef:  (at pp.c:12148)
    Decl: name='CC2420TransmitP__ChipSpiResource__attemptRelease', quals=[], storage=['static', 'inline'] (at pp.c:12148)
      FuncDecl: quals=None (at pp.c:12148)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__ChipSpiResource__attemptRelease', quals=[] (at pp.c:12148)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:12148)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12150)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12150)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12154)
        ID: name='__nesc_result' (at pp.c:12154)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__ChipSpiResource__attemptRelease' (at pp.c:12154)
      Return:  (at pp.c:12158)
        ID: name='__nesc_result' (at pp.c:12158)
  FuncDef:  (at pp.c:12163)
    Decl: name='HplMsp430GeneralIOP__25__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:12163)
      FuncDecl: quals=None (at pp.c:12163)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__25__IO__selectModuleFunc', quals=[] (at pp.c:12163)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12165)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12168)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='31U' (at pp.c:12168)
        BinaryOp: op='<<' (at pp.c:12168)
          Constant: type='int', value='0x01' (at pp.c:12168)
          Constant: type='int', value='1' (at pp.c:12168)
  FuncDef:  (at pp.c:12172)
    Decl: name='GpioCaptureC__0__GeneralIO__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:12172)
      FuncDecl: quals=None (at pp.c:12172)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='GpioCaptureC__0__GeneralIO__selectModuleFunc', quals=[] (at pp.c:12172)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12172)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__25__IO__selectModuleFunc' (at pp.c:12174)
  FuncDef:  (at pp.c:12179)
    Decl: name='Msp430TimerCapComP__4__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:12179)
      FuncDecl: quals=None (at pp.c:12179)
        ParamList:  (at pp.c:12179)
          Decl: name='x', quals=[], storage=[] (at pp.c:12179)
            TypeDecl: declname='x', quals=[] (at pp.c:12179)
              IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__CC2int', quals=[] (at pp.c:12179)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:12181)
      Decl: name='c', quals=[], storage=[] (at pp.c:12190)
        TypeDecl: declname='c', quals=[] (at pp.c:12190)
          Union: name='Msp430TimerCapComP__4____nesc_unnamed4385', packed=False (at pp.c:12183)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:12185)
                IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:12187)
                IdentifierType: names=['uint16_t'] (at None)
        ExprList:  (at pp.c:12190)
          Assignment: op='=' (at pp.c:12190)
            StructRef: type='.' (at pp.c:12190)
              ID: name='f' (at pp.c:12190)
            ID: name='x' (at pp.c:12190)
      Return:  (at pp.c:12193)
        StructRef: type='.' (at pp.c:12193)
          ID: name='c' (at pp.c:12193)
          ID: name='t' (at pp.c:12193)
  FuncDef:  (at pp.c:12197)
    Decl: name='Msp430TimerCapComP__4__captureControl', quals=[], storage=['inline', 'static'] (at pp.c:12197)
      FuncDecl: quals=None (at pp.c:12197)
        ParamList:  (at pp.c:12197)
          Decl: name='l_cm', quals=[], storage=[] (at pp.c:12197)
            TypeDecl: declname='l_cm', quals=[] (at pp.c:12197)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__captureControl', quals=[] (at pp.c:12197)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:12198)
      Decl: name='x', quals=[], storage=[] (at pp.c:12199)
        TypeDecl: declname='x', quals=[] (at pp.c:12199)
          IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
        ExprList:  (at pp.c:12200)
          Assignment: op='=' (at pp.c:12200)
            StructRef: type='.' (at pp.c:12200)
              ID: name='cm' (at pp.c:12200)
            BinaryOp: op='&' (at pp.c:12200)
              ID: name='l_cm' (at pp.c:12200)
              Constant: type='int', value='0x03' (at pp.c:12200)
          Assignment: op='=' (at pp.c:12201)
            StructRef: type='.' (at pp.c:12201)
              ID: name='ccis' (at pp.c:12201)
            Constant: type='int', value='0' (at pp.c:12201)
          Assignment: op='=' (at pp.c:12202)
            StructRef: type='.' (at pp.c:12202)
              ID: name='clld' (at pp.c:12202)
            Constant: type='int', value='0' (at pp.c:12202)
          Assignment: op='=' (at pp.c:12203)
            StructRef: type='.' (at pp.c:12203)
              ID: name='cap' (at pp.c:12203)
            Constant: type='int', value='1' (at pp.c:12203)
          Assignment: op='=' (at pp.c:12204)
            StructRef: type='.' (at pp.c:12204)
              ID: name='scs' (at pp.c:12204)
            Constant: type='int', value='0' (at pp.c:12204)
          Assignment: op='=' (at pp.c:12205)
            StructRef: type='.' (at pp.c:12205)
              ID: name='ccie' (at pp.c:12205)
            Constant: type='int', value='0' (at pp.c:12205)
      Return:  (at pp.c:12207)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__4__CC2int' (at pp.c:12207)
          ExprList:  (at pp.c:12207)
            ID: name='x' (at pp.c:12207)
  FuncDef:  (at pp.c:12211)
    Decl: name='Msp430TimerCapComP__4__Control__setControlAsCapture', quals=[], storage=['inline', 'static'] (at pp.c:12211)
      FuncDecl: quals=None (at pp.c:12211)
        ParamList:  (at pp.c:12211)
          Decl: name='cm', quals=[], storage=[] (at pp.c:12211)
            TypeDecl: declname='cm', quals=[] (at pp.c:12211)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Control__setControlAsCapture', quals=[] (at pp.c:12211)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12212)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12213)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='388U' (at pp.c:12213)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__4__captureControl' (at pp.c:12213)
          ExprList:  (at pp.c:12213)
            ID: name='cm' (at pp.c:12213)
  FuncDef:  (at pp.c:12217)
    Decl: name='GpioCaptureC__0__Msp430TimerControl__setControlAsCapture', quals=[], storage=['static', 'inline'] (at pp.c:12217)
      FuncDecl: quals=None (at pp.c:12217)
        ParamList:  (at pp.c:12217)
          Decl: name='cm', quals=[], storage=[] (at pp.c:12217)
            TypeDecl: declname='cm', quals=[] (at pp.c:12217)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='GpioCaptureC__0__Msp430TimerControl__setControlAsCapture', quals=[] (at pp.c:12217)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12217)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__4__Control__setControlAsCapture' (at pp.c:12219)
        ExprList:  (at pp.c:12219)
          ID: name='cm' (at pp.c:12219)
  FuncDef:  (at pp.c:12224)
    Decl: name='Msp430TimerCapComP__4__Control__enableEvents', quals=[], storage=['inline', 'static'] (at pp.c:12224)
      FuncDecl: quals=None (at pp.c:12224)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Control__enableEvents', quals=[] (at pp.c:12224)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12225)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12226)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='388U' (at pp.c:12226)
        Constant: type='int', value='0x0010' (at pp.c:12226)
  FuncDef:  (at pp.c:12230)
    Decl: name='GpioCaptureC__0__Msp430TimerControl__enableEvents', quals=[], storage=['static', 'inline'] (at pp.c:12230)
      FuncDecl: quals=None (at pp.c:12230)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='GpioCaptureC__0__Msp430TimerControl__enableEvents', quals=[] (at pp.c:12230)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12230)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__4__Control__enableEvents' (at pp.c:12232)
  FuncDef:  (at pp.c:12237)
    Decl: name='Msp430TimerCapComP__4__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:12237)
      FuncDecl: quals=None (at pp.c:12237)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Compare__default__fired', quals=[] (at pp.c:12237)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12238)
  FuncDef:  (at pp.c:12242)
    Decl: name='Msp430TimerCapComP__4__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:12242)
      FuncDecl: quals=None (at pp.c:12242)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Compare__fired', quals=[] (at pp.c:12242)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12242)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__4__Compare__default__fired' (at pp.c:12244)
  FuncDef:  (at pp.c:12249)
    Decl: name='Msp430TimerCapComP__4__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:12249)
      FuncDecl: quals=None (at pp.c:12249)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Capture__getEvent', quals=[] (at pp.c:12249)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:12250)
      Return:  (at pp.c:12251)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12251)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='404U' (at pp.c:12251)
  FuncDef:  (at pp.c:12255)
    Decl: name='__nesc_ntoh_leuint16', quals=[], storage=['__inline', 'static'] (at pp.c:12255)
      FuncDecl: quals=None (at pp.c:12255)
        ParamList:  (at pp.c:12255)
          Decl: name='source', quals=['const'], storage=[] (at pp.c:12255)
            PtrDecl: quals=[] (at pp.c:12255)
              TypeDecl: declname='source', quals=['const'] (at pp.c:12255)
                IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_ntoh_leuint16', quals=[] (at pp.c:12255)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:12257)
      Decl: name='base', quals=['const'], storage=[] (at pp.c:12258)
        PtrDecl: quals=[] (at pp.c:12258)
          TypeDecl: declname='base', quals=['const'] (at pp.c:12258)
            IdentifierType: names=['uint8_t'] (at None)
        ID: name='source' (at pp.c:12258)
      Return:  (at pp.c:12261)
        BinaryOp: op='|' (at None)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
              ArrayRef:  (at pp.c:12261)
                ID: name='base' (at pp.c:12261)
                Constant: type='int', value='1' (at pp.c:12261)
            Constant: type='int', value='8' (at pp.c:12261)
          ArrayRef:  (at pp.c:12261)
            ID: name='base' (at pp.c:12261)
            Constant: type='int', value='0' (at pp.c:12261)
  FuncDef:  (at pp.c:12265)
    Decl: name='__nesc_hton_uint32', quals=[], storage=['__inline', 'static'] (at pp.c:12265)
      FuncDecl: quals=None (at pp.c:12265)
        ParamList:  (at pp.c:12265)
          Decl: name='target', quals=[], storage=[] (at pp.c:12265)
            PtrDecl: quals=[] (at pp.c:12265)
              TypeDecl: declname='target', quals=[] (at pp.c:12265)
                IdentifierType: names=['void'] (at None)
          Decl: name='value', quals=[], storage=[] (at pp.c:12265)
            TypeDecl: declname='value', quals=[] (at pp.c:12265)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='__nesc_hton_uint32', quals=[] (at pp.c:12265)
          IdentifierType: names=['uint32_t'] (at None)
    Compound:  (at pp.c:12267)
      Decl: name='base', quals=[], storage=[] (at pp.c:12268)
        PtrDecl: quals=[] (at pp.c:12268)
          TypeDecl: declname='base', quals=[] (at pp.c:12268)
            IdentifierType: names=['uint8_t'] (at None)
        ID: name='target' (at pp.c:12268)
      Assignment: op='=' (at pp.c:12271)
        ArrayRef:  (at pp.c:12271)
          ID: name='base' (at pp.c:12271)
          Constant: type='int', value='3' (at pp.c:12271)
        ID: name='value' (at pp.c:12271)
      Assignment: op='=' (at pp.c:12272)
        ArrayRef:  (at pp.c:12272)
          ID: name='base' (at pp.c:12272)
          Constant: type='int', value='2' (at pp.c:12272)
        BinaryOp: op='>>' (at pp.c:12272)
          ID: name='value' (at pp.c:12272)
          Constant: type='int', value='8' (at pp.c:12272)
      Assignment: op='=' (at pp.c:12273)
        ArrayRef:  (at pp.c:12273)
          ID: name='base' (at pp.c:12273)
          Constant: type='int', value='1' (at pp.c:12273)
        BinaryOp: op='>>' (at pp.c:12273)
          ID: name='value' (at pp.c:12273)
          Constant: type='int', value='16' (at pp.c:12273)
      Assignment: op='=' (at pp.c:12274)
        ArrayRef:  (at pp.c:12274)
          ID: name='base' (at pp.c:12274)
          Constant: type='int', value='0' (at pp.c:12274)
        BinaryOp: op='>>' (at pp.c:12274)
          ID: name='value' (at pp.c:12274)
          Constant: type='int', value='24' (at pp.c:12274)
      Return:  (at pp.c:12275)
        ID: name='value' (at pp.c:12275)
  FuncDef:  (at pp.c:12279)
    Decl: name='__nesc_ntoh_uint32', quals=[], storage=['__inline', 'static'] (at pp.c:12279)
      FuncDecl: quals=None (at pp.c:12279)
        ParamList:  (at pp.c:12279)
          Decl: name='source', quals=['const'], storage=[] (at pp.c:12279)
            PtrDecl: quals=[] (at pp.c:12279)
              TypeDecl: declname='source', quals=['const'] (at pp.c:12279)
                IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_ntoh_uint32', quals=[] (at pp.c:12279)
          IdentifierType: names=['uint32_t'] (at None)
    Compound:  (at pp.c:12281)
      Decl: name='base', quals=['const'], storage=[] (at pp.c:12282)
        PtrDecl: quals=[] (at pp.c:12282)
          TypeDecl: declname='base', quals=['const'] (at pp.c:12282)
            IdentifierType: names=['uint8_t'] (at None)
        ID: name='source' (at pp.c:12282)
      Return:  (at pp.c:12285)
        BinaryOp: op='|' (at None)
          BinaryOp: op='|' (at None)
            BinaryOp: op='|' (at None)
              BinaryOp: op='<<' (at None)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['uint32_t'] (at None)
                  ArrayRef:  (at pp.c:12285)
                    ID: name='base' (at pp.c:12285)
                    Constant: type='int', value='0' (at pp.c:12285)
                Constant: type='int', value='24' (at pp.c:12285)
              BinaryOp: op='<<' (at None)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['uint32_t'] (at None)
                  ArrayRef:  (at pp.c:12286)
                    ID: name='base' (at pp.c:12286)
                    Constant: type='int', value='1' (at pp.c:12286)
                Constant: type='int', value='16' (at pp.c:12286)
            BinaryOp: op='<<' (at None)
              Cast:  (at None)
                Typename: quals=[] (at None)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['uint32_t'] (at None)
                ArrayRef:  (at pp.c:12287)
                  ID: name='base' (at pp.c:12287)
                  Constant: type='int', value='2' (at pp.c:12287)
              Constant: type='int', value='8' (at pp.c:12287)
          ArrayRef:  (at pp.c:12287)
            ID: name='base' (at pp.c:12287)
            Constant: type='int', value='3' (at pp.c:12287)
  FuncDef:  (at pp.c:12291)
    Decl: name='CC2420TransmitP__PacketTimeStamp__clear', quals=[], storage=['static', 'inline'] (at pp.c:12291)
      FuncDecl: quals=None (at pp.c:12291)
        ParamList:  (at pp.c:12291)
          Decl: name='msg', quals=[], storage=[] (at pp.c:12291)
            PtrDecl: quals=[] (at pp.c:12291)
              TypeDecl: declname='msg', quals=[] (at pp.c:12291)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__PacketTimeStamp__clear', quals=[] (at pp.c:12291)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12291)
      FuncCall:  (at None)
        ID: name='CC2420PacketP__PacketTimeStamp32khz__clear' (at pp.c:12293)
        ExprList:  (at pp.c:12293)
          ID: name='msg' (at pp.c:12293)
  FuncDef:  (at pp.c:12298)
    Decl: name='CC2420ReceiveP__CC2420Receive__sfd_dropped', quals=[], storage=['inline', 'static'] (at pp.c:12298)
      FuncDecl: quals=None (at pp.c:12298)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CC2420Receive__sfd_dropped', quals=[] (at pp.c:12298)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12300)
      If:  (at pp.c:12301)
        ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:12301)
        Compound:  (at pp.c:12301)
          UnaryOp: op='p--' (at pp.c:12302)
            ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:12302)
  FuncDef:  (at pp.c:12307)
    Decl: name='CC2420TransmitP__CC2420Receive__sfd_dropped', quals=[], storage=['static', 'inline'] (at pp.c:12307)
      FuncDecl: quals=None (at pp.c:12307)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__CC2420Receive__sfd_dropped', quals=[] (at pp.c:12307)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12307)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__CC2420Receive__sfd_dropped' (at pp.c:12309)
  FuncDef:  (at pp.c:12314)
    Decl: name='HplMsp430GeneralIOP__25__IO__getRaw', quals=[], storage=['inline', 'static'] (at pp.c:12314)
      FuncDecl: quals=None (at pp.c:12314)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__25__IO__getRaw', quals=[] (at pp.c:12314)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:12316)
      Return:  (at pp.c:12318)
        BinaryOp: op='&' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:12318)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='28U' (at pp.c:12318)
          BinaryOp: op='<<' (at pp.c:12318)
            Constant: type='int', value='0x01' (at pp.c:12318)
            Constant: type='int', value='1' (at pp.c:12318)
  FuncDef:  (at pp.c:12322)
    Decl: name='HplMsp430GeneralIOP__25__IO__get', quals=[], storage=['inline', 'static'] (at pp.c:12322)
      FuncDecl: quals=None (at pp.c:12322)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__25__IO__get', quals=[] (at pp.c:12322)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:12324)
      Return:  (at pp.c:12326)
        BinaryOp: op='!=' (at None)
          FuncCall:  (at None)
            ID: name='HplMsp430GeneralIOP__25__IO__getRaw' (at pp.c:12326)
          Constant: type='int', value='0' (at pp.c:12326)
  FuncDef:  (at pp.c:12330)
    Decl: name='Msp430GpioC__5__HplGeneralIO__get', quals=[], storage=['static', 'inline'] (at pp.c:12330)
      FuncDecl: quals=None (at pp.c:12330)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__5__HplGeneralIO__get', quals=[] (at pp.c:12330)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:12330)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12332)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12332)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12336)
        ID: name='__nesc_result' (at pp.c:12336)
        FuncCall:  (at None)
          ID: name='HplMsp430GeneralIOP__25__IO__get' (at pp.c:12336)
      Return:  (at pp.c:12340)
        ID: name='__nesc_result' (at pp.c:12340)
  FuncDef:  (at pp.c:12345)
    Decl: name='Msp430GpioC__5__GeneralIO__get', quals=[], storage=['inline', 'static'] (at pp.c:12345)
      FuncDecl: quals=None (at pp.c:12345)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__5__GeneralIO__get', quals=[] (at pp.c:12345)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:12347)
      Return:  (at pp.c:12349)
        FuncCall:  (at None)
          ID: name='Msp430GpioC__5__HplGeneralIO__get' (at pp.c:12349)
  FuncDef:  (at pp.c:12353)
    Decl: name='CC2420TransmitP__SFD__get', quals=[], storage=['static', 'inline'] (at pp.c:12353)
      FuncDecl: quals=None (at pp.c:12353)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__SFD__get', quals=[] (at pp.c:12353)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:12353)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12355)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12355)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12359)
        ID: name='__nesc_result' (at pp.c:12359)
        FuncCall:  (at None)
          ID: name='Msp430GpioC__5__GeneralIO__get' (at pp.c:12359)
      Return:  (at pp.c:12363)
        ID: name='__nesc_result' (at pp.c:12363)
  FuncDef:  (at pp.c:12368)
    Decl: name='CC2420ReceiveP__CC2420Receive__sfd', quals=[], storage=['inline', 'static'] (at pp.c:12368)
      FuncDecl: quals=None (at pp.c:12368)
        ParamList:  (at pp.c:12368)
          Decl: name='time', quals=[], storage=[] (at pp.c:12368)
            TypeDecl: declname='time', quals=[] (at pp.c:12368)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CC2420Receive__sfd', quals=[] (at pp.c:12368)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12370)
      If:  (at pp.c:12371)
        BinaryOp: op='<' (at pp.c:12371)
          ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:12371)
          ID: name='CC2420ReceiveP__TIMESTAMP_QUEUE_SIZE' (at pp.c:12371)
        Compound:  (at pp.c:12371)
          Decl: name='tail', quals=[], storage=[] (at pp.c:12372)
            TypeDecl: declname='tail', quals=[] (at pp.c:12372)
              IdentifierType: names=['uint8_t'] (at None)
            BinaryOp: op='%' (at pp.c:12372)
              BinaryOp: op='+' (at pp.c:12372)
                ID: name='CC2420ReceiveP__m_timestamp_head' (at pp.c:12372)
                ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:12372)
              ID: name='CC2420ReceiveP__TIMESTAMP_QUEUE_SIZE' (at pp.c:12373)
          Assignment: op='=' (at pp.c:12376)
            ArrayRef:  (at pp.c:12376)
              ID: name='CC2420ReceiveP__m_timestamp_queue' (at pp.c:12376)
              ID: name='tail' (at pp.c:12376)
            ID: name='time' (at pp.c:12376)
          UnaryOp: op='p++' (at pp.c:12377)
            ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:12377)
  FuncDef:  (at pp.c:12382)
    Decl: name='CC2420TransmitP__CC2420Receive__sfd', quals=[], storage=['static', 'inline'] (at pp.c:12382)
      FuncDecl: quals=None (at pp.c:12382)
        ParamList:  (at pp.c:12382)
          Decl: name='time', quals=[], storage=[] (at pp.c:12382)
            TypeDecl: declname='time', quals=[] (at pp.c:12382)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__CC2420Receive__sfd', quals=[] (at pp.c:12382)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12382)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__CC2420Receive__sfd' (at pp.c:12384)
        ExprList:  (at pp.c:12384)
          ID: name='time' (at pp.c:12384)
  FuncDef:  (at pp.c:12389)
    Decl: name='GpioCaptureC__0__Capture__captureFallingEdge', quals=[], storage=['inline', 'static'] (at pp.c:12389)
      FuncDecl: quals=None (at pp.c:12389)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='GpioCaptureC__0__Capture__captureFallingEdge', quals=[] (at pp.c:12389)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:12391)
      Return:  (at pp.c:12392)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__enableCapture' (at pp.c:12392)
          ExprList:  (at pp.c:12392)
            ID: name='MSP430TIMER_CM_FALLING' (at pp.c:12392)
  FuncDef:  (at pp.c:12396)
    Decl: name='CC2420TransmitP__CaptureSFD__captureFallingEdge', quals=[], storage=['static', 'inline'] (at pp.c:12396)
      FuncDecl: quals=None (at pp.c:12396)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__CaptureSFD__captureFallingEdge', quals=[] (at pp.c:12396)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:12396)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12398)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12398)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12402)
        ID: name='__nesc_result' (at pp.c:12402)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__Capture__captureFallingEdge' (at pp.c:12402)
      Return:  (at pp.c:12406)
        ID: name='__nesc_result' (at pp.c:12406)
  FuncDef:  (at pp.c:12411)
    Decl: name='CC2420PacketP__CC2420PacketBody__getHeader', quals=[], storage=['inline', 'static'] (at pp.c:12411)
      FuncDecl: quals=None (at pp.c:12411)
        ParamList:  (at pp.c:12411)
          Decl: name='msg', quals=[], storage=[] (at pp.c:12411)
            PtrDecl: quals=[] (at pp.c:12411)
              TypeDecl: declname='msg', quals=[] (at pp.c:12411)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:12411)
          TypeDecl: declname='CC2420PacketP__CC2420PacketBody__getHeader', quals=[] (at pp.c:12411)
            IdentifierType: names=['cc2420_header_t'] (at None)
    Compound:  (at pp.c:12413)
      Return:  (at pp.c:12414)
        Cast:  (at None)
          Typename: quals=[] (at None)
            PtrDecl: quals=[] (at pp.c:12414)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['cc2420_header_t'] (at None)
          BinaryOp: op='-' (at None)
            BinaryOp: op='+' (at None)
              Cast:  (at None)
                Typename: quals=[] (at None)
                  PtrDecl: quals=[] (at pp.c:12414)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['uint8_t'] (at None)
                ID: name='msg' (at pp.c:12414)
              Cast:  (at None)
                Typename: quals=[] (at None)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['size_t'] (at None)
                UnaryOp: op='&' (at None)
                  StructRef: type='->' (at None)
                    Cast:  (at None)
                      Typename: quals=[] (at None)
                        PtrDecl: quals=[] (at pp.c:12414)
                          TypeDecl: declname=None, quals=[] (at None)
                            IdentifierType: names=['message_t'] (at None)
                      Constant: type='int', value='0' (at pp.c:12414)
                    ID: name='data' (at pp.c:12414)
            UnaryOp: op='sizeof' (at pp.c:12414)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['cc2420_header_t'] (at None)
  FuncDef:  (at pp.c:12418)
    Decl: name='CC2420TransmitP__CC2420PacketBody__getHeader', quals=[], storage=['static', 'inline'] (at pp.c:12418)
      FuncDecl: quals=None (at pp.c:12418)
        ParamList:  (at pp.c:12418)
          Decl: name='msg', quals=[], storage=[] (at pp.c:12418)
            PtrDecl: quals=[] (at pp.c:12418)
              TypeDecl: declname='msg', quals=[] (at pp.c:12418)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:12418)
          TypeDecl: declname='CC2420TransmitP__CC2420PacketBody__getHeader', quals=[] (at pp.c:12418)
            IdentifierType: names=['cc2420_header_t'] (at None)
    Compound:  (at pp.c:12418)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12420)
        PtrDecl: quals=[] (at pp.c:12420)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12420)
            Struct: name='cc2420_header_t', packed=False (at pp.c:12420)
      Assignment: op='=' (at pp.c:12424)
        ID: name='__nesc_result' (at pp.c:12424)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getHeader' (at pp.c:12424)
          ExprList:  (at pp.c:12424)
            ID: name='msg' (at pp.c:12424)
      Return:  (at pp.c:12428)
        ID: name='__nesc_result' (at pp.c:12428)
  FuncDef:  (at pp.c:12433)
    Decl: name='Msp430AlarmC__0__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:12433)
      FuncDecl: quals=None (at pp.c:12433)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Alarm__stop', quals=[] (at pp.c:12433)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12434)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430TimerControl__disableEvents' (at pp.c:12435)
  FuncDef:  (at pp.c:12439)
    Decl: name='TransformAlarmC__0__AlarmFrom__stop', quals=[], storage=['static', 'inline'] (at pp.c:12439)
      FuncDecl: quals=None (at pp.c:12439)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__AlarmFrom__stop', quals=[] (at pp.c:12439)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12439)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Alarm__stop' (at pp.c:12441)
  FuncDef:  (at pp.c:12446)
    Decl: name='TransformAlarmC__0__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:12446)
      FuncDecl: quals=None (at pp.c:12446)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Alarm__stop', quals=[] (at pp.c:12446)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12447)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__AlarmFrom__stop' (at pp.c:12448)
  FuncDef:  (at pp.c:12452)
    Decl: name='CC2420TransmitP__BackoffTimer__stop', quals=[], storage=['static', 'inline'] (at pp.c:12452)
      FuncDecl: quals=None (at pp.c:12452)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__BackoffTimer__stop', quals=[] (at pp.c:12452)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12452)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__Alarm__stop' (at pp.c:12454)
  FuncDef:  (at pp.c:12459)
    Decl: name='Msp430GpioC__1__HplGeneralIO__set', quals=[], storage=['static', 'inline'] (at pp.c:12459)
      FuncDecl: quals=None (at pp.c:12459)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__set', quals=[] (at pp.c:12459)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12459)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__26__IO__set' (at pp.c:12461)
  FuncDef:  (at pp.c:12466)
    Decl: name='Msp430GpioC__1__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:12466)
      FuncDecl: quals=None (at pp.c:12466)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__GeneralIO__set', quals=[] (at pp.c:12466)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12468)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__HplGeneralIO__set' (at pp.c:12470)
  FuncDef:  (at pp.c:12474)
    Decl: name='CC2420TransmitP__CSN__set', quals=[], storage=['static', 'inline'] (at pp.c:12474)
      FuncDecl: quals=None (at pp.c:12474)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__CSN__set', quals=[] (at pp.c:12474)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12474)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__GeneralIO__set' (at pp.c:12476)
  FuncDef:  (at pp.c:12481)
    Decl: name='CC2420TransmitP__TXFIFO_RAM__write', quals=[], storage=['static', 'inline'] (at pp.c:12481)
      FuncDecl: quals=None (at pp.c:12481)
        ParamList:  (at pp.c:12481)
          Decl: name='offset', quals=[], storage=[] (at pp.c:12481)
            TypeDecl: declname='offset', quals=[] (at pp.c:12481)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:12481)
            PtrDecl: quals=[] (at pp.c:12481)
              TypeDecl: declname='data', quals=[] (at pp.c:12481)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='length', quals=[], storage=[] (at pp.c:12481)
            TypeDecl: declname='length', quals=[] (at pp.c:12481)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__TXFIFO_RAM__write', quals=[] (at pp.c:12481)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:12481)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12483)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12483)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12487)
        ID: name='__nesc_result' (at pp.c:12487)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Ram__write' (at pp.c:12487)
          ExprList:  (at pp.c:12487)
            ID: name='CC2420_RAM_TXFIFO' (at pp.c:12487)
            ID: name='offset' (at pp.c:12487)
            ID: name='data' (at pp.c:12487)
            ID: name='length' (at pp.c:12487)
      Return:  (at pp.c:12491)
        ID: name='__nesc_result' (at pp.c:12491)
  FuncDef:  (at pp.c:12496)
    Decl: name='Msp430GpioC__1__HplGeneralIO__clr', quals=[], storage=['static', 'inline'] (at pp.c:12496)
      FuncDecl: quals=None (at pp.c:12496)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__clr', quals=[] (at pp.c:12496)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12496)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__26__IO__clr' (at pp.c:12498)
  FuncDef:  (at pp.c:12503)
    Decl: name='Msp430GpioC__1__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:12503)
      FuncDecl: quals=None (at pp.c:12503)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__GeneralIO__clr', quals=[] (at pp.c:12503)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12505)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__HplGeneralIO__clr' (at pp.c:12507)
  FuncDef:  (at pp.c:12511)
    Decl: name='CC2420TransmitP__CSN__clr', quals=[], storage=['static', 'inline'] (at pp.c:12511)
      FuncDecl: quals=None (at pp.c:12511)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__CSN__clr', quals=[] (at pp.c:12511)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12511)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__GeneralIO__clr' (at pp.c:12513)
  FuncDef:  (at pp.c:12518)
    Decl: name='CC2420PacketP__PacketTimeSyncOffset__get', quals=[], storage=['inline', 'static'] (at pp.c:12518)
      FuncDecl: quals=None (at pp.c:12518)
        ParamList:  (at pp.c:12518)
          Decl: name='msg', quals=[], storage=[] (at pp.c:12518)
            PtrDecl: quals=[] (at pp.c:12518)
              TypeDecl: declname='msg', quals=[] (at pp.c:12518)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420PacketP__PacketTimeSyncOffset__get', quals=[] (at pp.c:12518)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:12519)
      Return:  (at pp.c:12520)
        BinaryOp: op='-' (at None)
          BinaryOp: op='-' (at None)
            BinaryOp: op='+' (at None)
              FuncCall:  (at None)
                ID: name='__nesc_ntoh_leuint8' (at pp.c:12520)
                ExprList:  (at None)
                  StructRef: type='.' (at None)
                    StructRef: type='->' (at None)
                      FuncCall:  (at None)
                        ID: name='CC2420PacketP__CC2420PacketBody__getHeader' (at pp.c:12520)
                        ExprList:  (at pp.c:12520)
                          ID: name='msg' (at pp.c:12520)
                      ID: name='length' (at pp.c:12520)
                    ID: name='nxdata' (at pp.c:12520)
              BinaryOp: op='-' (at pp.c:12521)
                UnaryOp: op='sizeof' (at pp.c:12521)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['cc2420_header_t'] (at None)
                ID: name='MAC_HEADER_SIZE' (at pp.c:12521)
            ID: name='MAC_FOOTER_SIZE' (at pp.c:12522)
          UnaryOp: op='sizeof' (at pp.c:12523)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['timesync_radio_t'] (at None)
  FuncDef:  (at pp.c:12527)
    Decl: name='CC2420TransmitP__PacketTimeSyncOffset__get', quals=[], storage=['static', 'inline'] (at pp.c:12527)
      FuncDecl: quals=None (at pp.c:12527)
        ParamList:  (at pp.c:12527)
          Decl: name='msg', quals=[], storage=[] (at pp.c:12527)
            PtrDecl: quals=[] (at pp.c:12527)
              TypeDecl: declname='msg', quals=[] (at pp.c:12527)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__PacketTimeSyncOffset__get', quals=[] (at pp.c:12527)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:12527)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12529)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12529)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12533)
        ID: name='__nesc_result' (at pp.c:12533)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__PacketTimeSyncOffset__get' (at pp.c:12533)
          ExprList:  (at pp.c:12533)
            ID: name='msg' (at pp.c:12533)
      Return:  (at pp.c:12537)
        ID: name='__nesc_result' (at pp.c:12537)
  FuncDef:  (at pp.c:12542)
    Decl: name='__nesc_ntoh_uint8', quals=[], storage=['__inline', 'static'] (at pp.c:12542)
      FuncDecl: quals=None (at pp.c:12542)
        ParamList:  (at pp.c:12542)
          Decl: name='source', quals=['const'], storage=[] (at pp.c:12542)
            PtrDecl: quals=[] (at pp.c:12542)
              TypeDecl: declname='source', quals=['const'] (at pp.c:12542)
                IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_ntoh_uint8', quals=[] (at pp.c:12542)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:12544)
      Decl: name='base', quals=['const'], storage=[] (at pp.c:12545)
        PtrDecl: quals=[] (at pp.c:12545)
          TypeDecl: declname='base', quals=['const'] (at pp.c:12545)
            IdentifierType: names=['uint8_t'] (at None)
        ID: name='source' (at pp.c:12545)
      Return:  (at pp.c:12548)
        ArrayRef:  (at pp.c:12548)
          ID: name='base' (at pp.c:12548)
          Constant: type='int', value='0' (at pp.c:12548)
  FuncDef:  (at pp.c:12552)
    Decl: name='__nesc_ntoh_int8', quals=[], storage=['__inline', 'static'] (at pp.c:12552)
      FuncDecl: quals=None (at pp.c:12552)
        ParamList:  (at pp.c:12552)
          Decl: name='source', quals=['const'], storage=[] (at pp.c:12552)
            PtrDecl: quals=[] (at pp.c:12552)
              TypeDecl: declname='source', quals=['const'] (at pp.c:12552)
                IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_ntoh_int8', quals=[] (at pp.c:12552)
          IdentifierType: names=['int8_t'] (at None)
    Compound:  (at pp.c:12554)
      Return:  (at pp.c:12556)
        FuncCall:  (at None)
          ID: name='__nesc_ntoh_uint8' (at pp.c:12556)
          ExprList:  (at pp.c:12556)
            ID: name='source' (at pp.c:12556)
  FuncDef:  (at pp.c:12560)
    Decl: name='CC2420PacketP__CC2420PacketBody__getMetadata', quals=[], storage=['inline', 'static'] (at pp.c:12560)
      FuncDecl: quals=None (at pp.c:12560)
        ParamList:  (at pp.c:12560)
          Decl: name='msg', quals=[], storage=[] (at pp.c:12560)
            PtrDecl: quals=[] (at pp.c:12560)
              TypeDecl: declname='msg', quals=[] (at pp.c:12560)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:12560)
          TypeDecl: declname='CC2420PacketP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:12560)
            IdentifierType: names=['cc2420_metadata_t'] (at None)
    Compound:  (at pp.c:12562)
      Return:  (at pp.c:12563)
        Cast:  (at None)
          Typename: quals=[] (at None)
            PtrDecl: quals=[] (at pp.c:12563)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['cc2420_metadata_t'] (at None)
          StructRef: type='->' (at pp.c:12563)
            ID: name='msg' (at pp.c:12563)
            ID: name='metadata' (at pp.c:12563)
  FuncDef:  (at pp.c:12567)
    Decl: name='CC2420PacketP__PacketTimeSyncOffset__isSet', quals=[], storage=['inline', 'static'] (at pp.c:12567)
      FuncDecl: quals=None (at pp.c:12567)
        ParamList:  (at pp.c:12567)
          Decl: name='msg', quals=[], storage=[] (at pp.c:12567)
            PtrDecl: quals=[] (at pp.c:12567)
              TypeDecl: declname='msg', quals=[] (at pp.c:12567)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420PacketP__PacketTimeSyncOffset__isSet', quals=[] (at pp.c:12567)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:12568)
      Return:  (at pp.c:12569)
        FuncCall:  (at None)
          ID: name='__nesc_ntoh_int8' (at pp.c:12569)
          ExprList:  (at None)
            StructRef: type='.' (at None)
              StructRef: type='->' (at None)
                FuncCall:  (at None)
                  ID: name='CC2420PacketP__CC2420PacketBody__getMetadata' (at pp.c:12569)
                  ExprList:  (at pp.c:12569)
                    ID: name='msg' (at pp.c:12569)
                ID: name='timesync' (at pp.c:12569)
              ID: name='nxdata' (at pp.c:12569)
  FuncDef:  (at pp.c:12573)
    Decl: name='CC2420TransmitP__PacketTimeSyncOffset__isSet', quals=[], storage=['static', 'inline'] (at pp.c:12573)
      FuncDecl: quals=None (at pp.c:12573)
        ParamList:  (at pp.c:12573)
          Decl: name='msg', quals=[], storage=[] (at pp.c:12573)
            PtrDecl: quals=[] (at pp.c:12573)
              TypeDecl: declname='msg', quals=[] (at pp.c:12573)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__PacketTimeSyncOffset__isSet', quals=[] (at pp.c:12573)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:12573)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12575)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12575)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12579)
        ID: name='__nesc_result' (at pp.c:12579)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__PacketTimeSyncOffset__isSet' (at pp.c:12579)
          ExprList:  (at pp.c:12579)
            ID: name='msg' (at pp.c:12579)
      Return:  (at pp.c:12583)
        ID: name='__nesc_result' (at pp.c:12583)
  FuncDef:  (at pp.c:12588)
    Decl: name='CC2420PacketP__PacketTimeStamp32khz__set', quals=[], storage=['inline', 'static'] (at pp.c:12588)
      FuncDecl: quals=None (at pp.c:12588)
        ParamList:  (at pp.c:12588)
          Decl: name='msg', quals=[], storage=[] (at pp.c:12588)
            PtrDecl: quals=[] (at pp.c:12588)
              TypeDecl: declname='msg', quals=[] (at pp.c:12588)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='value', quals=[], storage=[] (at pp.c:12588)
            TypeDecl: declname='value', quals=[] (at pp.c:12588)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='CC2420PacketP__PacketTimeStamp32khz__set', quals=[] (at pp.c:12588)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12589)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint32' (at pp.c:12590)
        ExprList:  (at None)
          StructRef: type='.' (at None)
            StructRef: type='->' (at None)
              FuncCall:  (at None)
                ID: name='CC2420PacketP__CC2420PacketBody__getMetadata' (at pp.c:12590)
                ExprList:  (at pp.c:12590)
                  ID: name='msg' (at pp.c:12590)
              ID: name='timestamp' (at pp.c:12590)
            ID: name='nxdata' (at pp.c:12590)
          ID: name='value' (at pp.c:12590)
  FuncDef:  (at pp.c:12594)
    Decl: name='CC2420TransmitP__PacketTimeStamp__set', quals=[], storage=['static', 'inline'] (at pp.c:12594)
      FuncDecl: quals=None (at pp.c:12594)
        ParamList:  (at pp.c:12594)
          Decl: name='msg', quals=[], storage=[] (at pp.c:12594)
            PtrDecl: quals=[] (at pp.c:12594)
              TypeDecl: declname='msg', quals=[] (at pp.c:12594)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='value', quals=[], storage=[] (at pp.c:12594)
            TypeDecl: declname='value', quals=[] (at pp.c:12594)
              IdentifierType: names=['CC2420TransmitP__PacketTimeStamp__size_type'] (at None)
        TypeDecl: declname='CC2420TransmitP__PacketTimeStamp__set', quals=[] (at pp.c:12594)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12594)
      FuncCall:  (at None)
        ID: name='CC2420PacketP__PacketTimeStamp32khz__set' (at pp.c:12596)
        ExprList:  (at pp.c:12596)
          ID: name='msg' (at pp.c:12596)
          ID: name='value' (at pp.c:12596)
  FuncDef:  (at pp.c:12601)
    Decl: name='CC2420TransmitP__BackoffTimer__getNow', quals=[], storage=['static', 'inline'] (at pp.c:12601)
      FuncDecl: quals=None (at pp.c:12601)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__BackoffTimer__getNow', quals=[] (at pp.c:12601)
          IdentifierType: names=['CC2420TransmitP__BackoffTimer__size_type'] (at None)
    Compound:  (at pp.c:12601)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12603)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12603)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12607)
        ID: name='__nesc_result' (at pp.c:12607)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__0__Alarm__getNow' (at pp.c:12607)
      Return:  (at pp.c:12611)
        ID: name='__nesc_result' (at pp.c:12611)
  FuncDef:  (at pp.c:12616)
    Decl: name='CC2420TransmitP__getTime32', quals=[], storage=['__inline', 'static'] (at pp.c:12616)
      FuncDecl: quals=None (at pp.c:12616)
        ParamList:  (at pp.c:12616)
          Decl: name='captured_time', quals=[], storage=[] (at pp.c:12616)
            TypeDecl: declname='captured_time', quals=[] (at pp.c:12616)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__getTime32', quals=[] (at pp.c:12616)
          IdentifierType: names=['uint32_t'] (at None)
    Compound:  (at pp.c:12617)
      Decl: name='now', quals=[], storage=[] (at pp.c:12618)
        TypeDecl: declname='now', quals=[] (at pp.c:12618)
          IdentifierType: names=['uint32_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420TransmitP__BackoffTimer__getNow' (at pp.c:12618)
      Return:  (at pp.c:12621)
        BinaryOp: op='-' (at pp.c:12621)
          ID: name='now' (at pp.c:12621)
          Cast:  (at None)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['uint16_t'] (at None)
            BinaryOp: op='-' (at pp.c:12621)
              ID: name='now' (at pp.c:12621)
              ID: name='captured_time' (at pp.c:12621)
  FuncDef:  (at pp.c:12625)
    Decl: name='CC2420TransmitP__CaptureSFD__captured', quals=[], storage=['inline', 'static'] (at pp.c:12625)
      FuncDecl: quals=None (at pp.c:12625)
        ParamList:  (at pp.c:12625)
          Decl: name='time', quals=[], storage=[] (at pp.c:12625)
            TypeDecl: declname='time', quals=[] (at pp.c:12625)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__CaptureSFD__captured', quals=[] (at pp.c:12625)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12627)
      Decl: name='__nesc_temp47', quals=[], storage=[] (at pp.c:12628)
        PtrDecl: quals=[] (at pp.c:12628)
          TypeDecl: declname='__nesc_temp47', quals=[] (at pp.c:12628)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='__nesc_temp46', quals=[], storage=[] (at pp.c:12629)
        PtrDecl: quals=[] (at pp.c:12629)
          TypeDecl: declname='__nesc_temp46', quals=[] (at pp.c:12629)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='time32', quals=[], storage=[] (at pp.c:12631)
        TypeDecl: declname='time32', quals=[] (at pp.c:12631)
          IdentifierType: names=['uint32_t'] (at None)
      Decl: name='sfd_state', quals=[], storage=[] (at pp.c:12632)
        TypeDecl: declname='sfd_state', quals=[] (at pp.c:12632)
          IdentifierType: names=['uint8_t'] (at None)
        Constant: type='int', value='0' (at pp.c:12632)
      Compound:  (at pp.c:12636)
        Assignment: op='=' (at pp.c:12637)
          ID: name='time32' (at pp.c:12637)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__getTime32' (at pp.c:12637)
            ExprList:  (at pp.c:12637)
              ID: name='time' (at pp.c:12637)
        Switch:  (at pp.c:12638)
          ID: name='CC2420TransmitP__m_state' (at pp.c:12638)
          Compound:  (at pp.c:12638)
            Case:  (at pp.c:12640)
              ID: name='CC2420TransmitP__S_SFD' (at pp.c:12640)
              Assignment: op='=' (at pp.c:12641)
                ID: name='CC2420TransmitP__m_state' (at pp.c:12641)
                ID: name='CC2420TransmitP__S_EFD' (at pp.c:12641)
            Assignment: op='=' (at pp.c:12642)
              ID: name='CC2420TransmitP__sfdHigh' (at pp.c:12642)
              ID: name='TRUE' (at pp.c:12642)
            Assignment: op='=' (at pp.c:12645)
              ID: name='CC2420TransmitP__m_receiving' (at pp.c:12645)
              ID: name='FALSE' (at pp.c:12645)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__CaptureSFD__captureFallingEdge' (at pp.c:12646)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__PacketTimeStamp__set' (at pp.c:12647)
              ExprList:  (at pp.c:12647)
                ID: name='CC2420TransmitP__m_msg' (at pp.c:12647)
                ID: name='time32' (at pp.c:12647)
            If:  (at pp.c:12648)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__PacketTimeSyncOffset__isSet' (at pp.c:12648)
                ExprList:  (at pp.c:12648)
                  ID: name='CC2420TransmitP__m_msg' (at pp.c:12648)
              Compound:  (at pp.c:12648)
                Decl: name='absOffset', quals=[], storage=[] (at pp.c:12649)
                  TypeDecl: declname='absOffset', quals=[] (at pp.c:12649)
                    IdentifierType: names=['uint8_t'] (at None)
                  BinaryOp: op='+' (at pp.c:12649)
                    BinaryOp: op='-' (at pp.c:12649)
                      UnaryOp: op='sizeof' (at pp.c:12649)
                        Typename: quals=[] (at None)
                          TypeDecl: declname=None, quals=[] (at None)
                            IdentifierType: names=['message_header_t'] (at None)
                      UnaryOp: op='sizeof' (at pp.c:12649)
                        Typename: quals=[] (at None)
                          TypeDecl: declname=None, quals=[] (at None)
                            IdentifierType: names=['cc2420_header_t'] (at None)
                    FuncCall:  (at None)
                      ID: name='CC2420TransmitP__PacketTimeSyncOffset__get' (at pp.c:12649)
                      ExprList:  (at pp.c:12649)
                        ID: name='CC2420TransmitP__m_msg' (at pp.c:12649)
                Decl: name='timesync', quals=[], storage=[] (at pp.c:12650)
                  PtrDecl: quals=[] (at pp.c:12650)
                    TypeDecl: declname='timesync', quals=[] (at pp.c:12650)
                      IdentifierType: names=['timesync_radio_t'] (at None)
                  Cast:  (at None)
                    Typename: quals=[] (at None)
                      PtrDecl: quals=[] (at pp.c:12650)
                        TypeDecl: declname=None, quals=[] (at None)
                          IdentifierType: names=['timesync_radio_t'] (at None)
                    BinaryOp: op='+' (at None)
                      Cast:  (at None)
                        Typename: quals=[] (at None)
                          PtrDecl: quals=[] (at pp.c:12650)
                            TypeDecl: declname=None, quals=[] (at None)
                              IdentifierType: names=['nx_uint8_t'] (at None)
                        ID: name='CC2420TransmitP__m_msg' (at pp.c:12650)
                      ID: name='absOffset' (at pp.c:12650)
                ExprList:  (at pp.c:12652)
                  Assignment: op='=' (at pp.c:12652)
                    ID: name='__nesc_temp46' (at pp.c:12652)
                    StructRef: type='.' (at pp.c:12652)
                      UnaryOp: op='*' (at pp.c:12652)
                        ID: name='timesync' (at pp.c:12652)
                      ID: name='nxdata' (at pp.c:12652)
                  FuncCall:  (at None)
                    ID: name='__nesc_hton_uint32' (at pp.c:12652)
                    ExprList:  (at pp.c:12652)
                      ID: name='__nesc_temp46' (at pp.c:12652)
                      BinaryOp: op='-' (at None)
                        FuncCall:  (at None)
                          ID: name='__nesc_ntoh_uint32' (at pp.c:12652)
                          ExprList:  (at pp.c:12652)
                            ID: name='__nesc_temp46' (at pp.c:12652)
                        ID: name='time32' (at pp.c:12652)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__CSN__clr' (at pp.c:12653)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__TXFIFO_RAM__write' (at pp.c:12654)
                  ExprList:  (at pp.c:12654)
                    ID: name='absOffset' (at pp.c:12654)
                    Cast:  (at None)
                      Typename: quals=[] (at None)
                        PtrDecl: quals=[] (at pp.c:12654)
                          TypeDecl: declname=None, quals=[] (at None)
                            IdentifierType: names=['uint8_t'] (at None)
                      ID: name='timesync' (at pp.c:12654)
                    UnaryOp: op='sizeof' (at pp.c:12654)
                      Typename: quals=[] (at None)
                        TypeDecl: declname=None, quals=[] (at None)
                          IdentifierType: names=['timesync_radio_t'] (at None)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__CSN__set' (at pp.c:12655)
                ExprList:  (at pp.c:12657)
                  Assignment: op='=' (at pp.c:12657)
                    ID: name='__nesc_temp47' (at pp.c:12657)
                    StructRef: type='.' (at pp.c:12657)
                      UnaryOp: op='*' (at pp.c:12657)
                        ID: name='timesync' (at pp.c:12657)
                      ID: name='nxdata' (at pp.c:12657)
                  FuncCall:  (at None)
                    ID: name='__nesc_hton_uint32' (at pp.c:12657)
                    ExprList:  (at pp.c:12657)
                      ID: name='__nesc_temp47' (at pp.c:12657)
                      BinaryOp: op='+' (at None)
                        FuncCall:  (at None)
                          ID: name='__nesc_ntoh_uint32' (at pp.c:12657)
                          ExprList:  (at pp.c:12657)
                            ID: name='__nesc_temp47' (at pp.c:12657)
                        ID: name='time32' (at pp.c:12657)
            If:  (at pp.c:12660)
              BinaryOp: op='&' (at None)
                FuncCall:  (at None)
                  ID: name='__nesc_ntoh_leuint16' (at pp.c:12660)
                  ExprList:  (at None)
                    StructRef: type='.' (at None)
                      StructRef: type='->' (at None)
                        FuncCall:  (at None)
                          ID: name='CC2420TransmitP__CC2420PacketBody__getHeader' (at pp.c:12660)
                          ExprList:  (at pp.c:12660)
                            ID: name='CC2420TransmitP__m_msg' (at pp.c:12660)
                        ID: name='fcf' (at pp.c:12660)
                      ID: name='nxdata' (at pp.c:12660)
                BinaryOp: op='<<' (at pp.c:12660)
                  Constant: type='int', value='1' (at pp.c:12660)
                  ID: name='IEEE154_FCF_ACK_REQ' (at pp.c:12660)
              Compound:  (at pp.c:12660)
                Assignment: op='=' (at pp.c:12662)
                  ID: name='CC2420TransmitP__abortSpiRelease' (at pp.c:12662)
                  ID: name='TRUE' (at pp.c:12662)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__releaseSpiResource' (at pp.c:12664)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__BackoffTimer__stop' (at pp.c:12665)
            If:  (at pp.c:12667)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__SFD__get' (at pp.c:12667)
              Compound:  (at pp.c:12667)
                Break:  (at pp.c:12668)
            Case:  (at pp.c:12672)
              ID: name='CC2420TransmitP__S_EFD' (at pp.c:12672)
              Assignment: op='=' (at pp.c:12673)
                ID: name='CC2420TransmitP__sfdHigh' (at pp.c:12673)
                ID: name='FALSE' (at pp.c:12673)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__CaptureSFD__captureRisingEdge' (at pp.c:12674)
            If:  (at pp.c:12676)
              BinaryOp: op='&' (at None)
                FuncCall:  (at None)
                  ID: name='__nesc_ntoh_leuint16' (at pp.c:12676)
                  ExprList:  (at None)
                    StructRef: type='.' (at None)
                      StructRef: type='->' (at None)
                        FuncCall:  (at None)
                          ID: name='CC2420TransmitP__CC2420PacketBody__getHeader' (at pp.c:12676)
                          ExprList:  (at pp.c:12676)
                            ID: name='CC2420TransmitP__m_msg' (at pp.c:12676)
                        ID: name='fcf' (at pp.c:12676)
                      ID: name='nxdata' (at pp.c:12676)
                BinaryOp: op='<<' (at pp.c:12676)
                  Constant: type='int', value='1' (at pp.c:12676)
                  ID: name='IEEE154_FCF_ACK_REQ' (at pp.c:12676)
              Compound:  (at pp.c:12676)
                Assignment: op='=' (at pp.c:12677)
                  ID: name='CC2420TransmitP__m_state' (at pp.c:12677)
                  ID: name='CC2420TransmitP__S_ACK_WAIT' (at pp.c:12677)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__BackoffTimer__start' (at pp.c:12678)
                  ExprList:  (at pp.c:12678)
                    ID: name='CC2420_ACK_WAIT_DELAY' (at pp.c:12678)
              Compound:  (at pp.c:12682)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__signalDone' (at pp.c:12683)
                  ExprList:  (at pp.c:12683)
                    ID: name='SUCCESS' (at pp.c:12683)
            If:  (at pp.c:12686)
              UnaryOp: op='!' (at None)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__SFD__get' (at pp.c:12686)
              Compound:  (at pp.c:12686)
                Break:  (at pp.c:12687)
            Default:  (at pp.c:12691)
              If:  (at pp.c:12693)
                BinaryOp: op='&&' (at pp.c:12693)
                  UnaryOp: op='!' (at pp.c:12693)
                    ID: name='CC2420TransmitP__m_receiving' (at pp.c:12693)
                  BinaryOp: op='==' (at pp.c:12693)
                    ID: name='CC2420TransmitP__sfdHigh' (at pp.c:12693)
                    ID: name='FALSE' (at pp.c:12693)
                Compound:  (at pp.c:12693)
                  Assignment: op='=' (at pp.c:12694)
                    ID: name='CC2420TransmitP__sfdHigh' (at pp.c:12694)
                    ID: name='TRUE' (at pp.c:12694)
                  FuncCall:  (at None)
                    ID: name='CC2420TransmitP__CaptureSFD__captureFallingEdge' (at pp.c:12695)
                  Assignment: op='=' (at pp.c:12697)
                    ID: name='sfd_state' (at pp.c:12697)
                    FuncCall:  (at None)
                      ID: name='CC2420TransmitP__SFD__get' (at pp.c:12697)
                  FuncCall:  (at None)
                    ID: name='CC2420TransmitP__CC2420Receive__sfd' (at pp.c:12698)
                    ExprList:  (at pp.c:12698)
                      ID: name='time32' (at pp.c:12698)
                  Assignment: op='=' (at pp.c:12699)
                    ID: name='CC2420TransmitP__m_receiving' (at pp.c:12699)
                    ID: name='TRUE' (at pp.c:12699)
                  Assignment: op='=' (at pp.c:12700)
                    ID: name='CC2420TransmitP__m_prev_time' (at pp.c:12700)
                    ID: name='time' (at pp.c:12700)
                  If:  (at pp.c:12701)
                    FuncCall:  (at None)
                      ID: name='CC2420TransmitP__SFD__get' (at pp.c:12701)
                    Compound:  (at pp.c:12701)
                      Return:  (at pp.c:12703)
            If:  (at pp.c:12709)
              BinaryOp: op='==' (at pp.c:12709)
                ID: name='CC2420TransmitP__sfdHigh' (at pp.c:12709)
                ID: name='TRUE' (at pp.c:12709)
              Compound:  (at pp.c:12709)
                Assignment: op='=' (at pp.c:12710)
                  ID: name='CC2420TransmitP__sfdHigh' (at pp.c:12710)
                  ID: name='FALSE' (at pp.c:12710)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__CaptureSFD__captureRisingEdge' (at pp.c:12711)
                Assignment: op='=' (at pp.c:12712)
                  ID: name='CC2420TransmitP__m_receiving' (at pp.c:12712)
                  ID: name='FALSE' (at pp.c:12712)
                If:  (at pp.c:12721)
                  BinaryOp: op='&&' (at pp.c:12721)
                    BinaryOp: op='==' (at pp.c:12721)
                      ID: name='sfd_state' (at pp.c:12721)
                      Constant: type='int', value='0' (at pp.c:12721)
                    BinaryOp: op='<' (at pp.c:12721)
                      BinaryOp: op='-' (at pp.c:12721)
                        ID: name='time' (at pp.c:12721)
                        ID: name='CC2420TransmitP__m_prev_time' (at pp.c:12721)
                      Constant: type='int', value='10' (at pp.c:12721)
                  Compound:  (at pp.c:12721)
                    FuncCall:  (at None)
                      ID: name='CC2420TransmitP__CC2420Receive__sfd_dropped' (at pp.c:12722)
                    If:  (at pp.c:12723)
                      ID: name='CC2420TransmitP__m_msg' (at pp.c:12723)
                      Compound:  (at pp.c:12723)
                        FuncCall:  (at None)
                          ID: name='CC2420TransmitP__PacketTimeStamp__clear' (at pp.c:12724)
                          ExprList:  (at pp.c:12724)
                            ID: name='CC2420TransmitP__m_msg' (at pp.c:12724)
                Break:  (at pp.c:12728)
  FuncDef:  (at pp.c:12735)
    Decl: name='GpioCaptureC__0__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:12735)
      FuncDecl: quals=None (at pp.c:12735)
        ParamList:  (at pp.c:12735)
          Decl: name='time', quals=[], storage=[] (at pp.c:12735)
            TypeDecl: declname='time', quals=[] (at pp.c:12735)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='GpioCaptureC__0__Capture__captured', quals=[] (at pp.c:12735)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12735)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__CaptureSFD__captured' (at pp.c:12737)
        ExprList:  (at pp.c:12737)
          ID: name='time' (at pp.c:12737)
  FuncDef:  (at pp.c:12742)
    Decl: name='Msp430TimerCapComP__4__Capture__clearOverflow', quals=[], storage=['inline', 'static'] (at pp.c:12742)
      FuncDecl: quals=None (at pp.c:12742)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Capture__clearOverflow', quals=[] (at pp.c:12742)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12743)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12744)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='388U' (at pp.c:12744)
        UnaryOp: op='~' (at pp.c:12744)
          Constant: type='int', value='0x0002' (at pp.c:12744)
  FuncDef:  (at pp.c:12748)
    Decl: name='GpioCaptureC__0__Msp430Capture__clearOverflow', quals=[], storage=['static', 'inline'] (at pp.c:12748)
      FuncDecl: quals=None (at pp.c:12748)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='GpioCaptureC__0__Msp430Capture__clearOverflow', quals=[] (at pp.c:12748)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12748)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__4__Capture__clearOverflow' (at pp.c:12750)
  FuncDef:  (at pp.c:12755)
    Decl: name='Msp430TimerCapComP__4__Control__clearPendingInterrupt', quals=[], storage=['inline', 'static'] (at pp.c:12755)
      FuncDecl: quals=None (at pp.c:12755)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Control__clearPendingInterrupt', quals=[] (at pp.c:12755)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12756)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12757)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='388U' (at pp.c:12757)
        UnaryOp: op='~' (at pp.c:12757)
          Constant: type='int', value='0x0001' (at pp.c:12757)
  FuncDef:  (at pp.c:12761)
    Decl: name='GpioCaptureC__0__Msp430TimerControl__clearPendingInterrupt', quals=[], storage=['static', 'inline'] (at pp.c:12761)
      FuncDecl: quals=None (at pp.c:12761)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='GpioCaptureC__0__Msp430TimerControl__clearPendingInterrupt', quals=[] (at pp.c:12761)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12761)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__4__Control__clearPendingInterrupt' (at pp.c:12763)
  FuncDef:  (at pp.c:12768)
    Decl: name='GpioCaptureC__0__Msp430Capture__captured', quals=[], storage=['inline', 'static'] (at pp.c:12768)
      FuncDecl: quals=None (at pp.c:12768)
        ParamList:  (at pp.c:12768)
          Decl: name='time', quals=[], storage=[] (at pp.c:12768)
            TypeDecl: declname='time', quals=[] (at pp.c:12768)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='GpioCaptureC__0__Msp430Capture__captured', quals=[] (at pp.c:12768)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12770)
      FuncCall:  (at None)
        ID: name='GpioCaptureC__0__Msp430TimerControl__clearPendingInterrupt' (at pp.c:12771)
      FuncCall:  (at None)
        ID: name='GpioCaptureC__0__Msp430Capture__clearOverflow' (at pp.c:12772)
      FuncCall:  (at None)
        ID: name='GpioCaptureC__0__Capture__captured' (at pp.c:12773)
        ExprList:  (at pp.c:12773)
          ID: name='time' (at pp.c:12773)
  FuncDef:  (at pp.c:12777)
    Decl: name='Msp430TimerCapComP__4__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:12777)
      FuncDecl: quals=None (at pp.c:12777)
        ParamList:  (at pp.c:12777)
          Decl: name='time', quals=[], storage=[] (at pp.c:12777)
            TypeDecl: declname='time', quals=[] (at pp.c:12777)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Capture__captured', quals=[] (at pp.c:12777)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12777)
      FuncCall:  (at None)
        ID: name='GpioCaptureC__0__Msp430Capture__captured' (at pp.c:12779)
        ExprList:  (at pp.c:12779)
          ID: name='time' (at pp.c:12779)
  FuncDef:  (at pp.c:12784)
    Decl: name='Msp430TimerCapComP__4__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:12784)
      FuncDecl: quals=None (at pp.c:12784)
        ParamList:  (at pp.c:12784)
          Decl: name='x', quals=[], storage=[] (at pp.c:12784)
            TypeDecl: declname='x', quals=[] (at pp.c:12784)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__int2CC', quals=[] (at pp.c:12784)
          IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
    Compound:  (at pp.c:12786)
      Decl: name='c', quals=[], storage=[] (at pp.c:12795)
        TypeDecl: declname='c', quals=[] (at pp.c:12795)
          Union: name='Msp430TimerCapComP__4____nesc_unnamed4386', packed=False (at pp.c:12788)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:12790)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:12792)
                IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
        ExprList:  (at pp.c:12795)
          Assignment: op='=' (at pp.c:12795)
            StructRef: type='.' (at pp.c:12795)
              ID: name='f' (at pp.c:12795)
            ID: name='x' (at pp.c:12795)
      Return:  (at pp.c:12798)
        StructRef: type='.' (at pp.c:12798)
          ID: name='c' (at pp.c:12798)
          ID: name='t' (at pp.c:12798)
  FuncDef:  (at pp.c:12802)
    Decl: name='Msp430TimerCapComP__4__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:12802)
      FuncDecl: quals=None (at pp.c:12802)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Control__getControl', quals=[] (at pp.c:12802)
          IdentifierType: names=['Msp430TimerCapComP__4__cc_t'] (at None)
    Compound:  (at pp.c:12803)
      Return:  (at pp.c:12804)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__4__int2CC' (at pp.c:12804)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:12804)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='388U' (at pp.c:12804)
  FuncDef:  (at pp.c:12808)
    Decl: name='Msp430TimerCapComP__4__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:12808)
      FuncDecl: quals=None (at pp.c:12808)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Event__fired', quals=[] (at pp.c:12808)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12809)
      If:  (at pp.c:12810)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__4__Control__getControl' (at pp.c:12810)
          ID: name='cap' (at pp.c:12810)
        Compound:  (at pp.c:12810)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__4__Capture__captured' (at pp.c:12811)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__4__Capture__getEvent' (at pp.c:12811)
        Compound:  (at pp.c:12813)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__4__Compare__fired' (at pp.c:12815)
  FuncDef:  (at pp.c:12820)
    Decl: name='AlarmToTimerC__0__fired__postTask', quals=[], storage=['static', 'inline'] (at pp.c:12820)
      FuncDecl: quals=None (at pp.c:12820)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__fired__postTask', quals=[] (at pp.c:12820)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:12820)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12822)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12822)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12826)
        ID: name='__nesc_result' (at pp.c:12826)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:12826)
          ExprList:  (at pp.c:12826)
            ID: name='AlarmToTimerC__0__fired' (at pp.c:12826)
      Return:  (at pp.c:12830)
        ID: name='__nesc_result' (at pp.c:12830)
  FuncDef:  (at pp.c:12835)
    Decl: name='AlarmToTimerC__0__Alarm__fired', quals=[], storage=['inline', 'static'] (at pp.c:12835)
      FuncDecl: quals=None (at pp.c:12835)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Alarm__fired', quals=[] (at pp.c:12835)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12836)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__fired__postTask' (at pp.c:12838)
  FuncDef:  (at pp.c:12842)
    Decl: name='TransformAlarmC__1__Alarm__fired', quals=[], storage=['static', 'inline'] (at pp.c:12842)
      FuncDecl: quals=None (at pp.c:12842)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__Alarm__fired', quals=[] (at pp.c:12842)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12842)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Alarm__fired' (at pp.c:12844)
  FuncDef:  (at pp.c:12849)
    Decl: name='TransformAlarmC__1__AlarmFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:12849)
      FuncDecl: quals=None (at pp.c:12849)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__AlarmFrom__fired', quals=[] (at pp.c:12849)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12850)
      Compound:  (at pp.c:12852)
        If:  (at pp.c:12853)
          BinaryOp: op='==' (at pp.c:12853)
            ID: name='TransformAlarmC__1__m_dt' (at pp.c:12853)
            Constant: type='int', value='0' (at pp.c:12853)
          Compound:  (at pp.c:12854)
            FuncCall:  (at None)
              ID: name='TransformAlarmC__1__Alarm__fired' (at pp.c:12855)
          Compound:  (at pp.c:12858)
            FuncCall:  (at None)
              ID: name='TransformAlarmC__1__set_alarm' (at pp.c:12859)
  FuncDef:  (at pp.c:12865)
    Decl: name='Msp430AlarmC__1__Alarm__fired', quals=[], storage=['static', 'inline'] (at pp.c:12865)
      FuncDecl: quals=None (at pp.c:12865)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Alarm__fired', quals=[] (at pp.c:12865)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12865)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__1__AlarmFrom__fired' (at pp.c:12867)
  FuncDef:  (at pp.c:12872)
    Decl: name='Msp430TimerCapComP__5__Control__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:12872)
      FuncDecl: quals=None (at pp.c:12872)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Control__disableEvents', quals=[] (at pp.c:12872)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12873)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12874)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='390U' (at pp.c:12874)
        UnaryOp: op='~' (at pp.c:12874)
          Constant: type='int', value='0x0010' (at pp.c:12874)
  FuncDef:  (at pp.c:12878)
    Decl: name='Msp430AlarmC__1__Msp430TimerControl__disableEvents', quals=[], storage=['static', 'inline'] (at pp.c:12878)
      FuncDecl: quals=None (at pp.c:12878)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__disableEvents', quals=[] (at pp.c:12878)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12878)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Control__disableEvents' (at pp.c:12880)
  FuncDef:  (at pp.c:12885)
    Decl: name='Msp430AlarmC__1__Msp430Compare__fired', quals=[], storage=['inline', 'static'] (at pp.c:12885)
      FuncDecl: quals=None (at pp.c:12885)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430Compare__fired', quals=[] (at pp.c:12885)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12886)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Msp430TimerControl__disableEvents' (at pp.c:12887)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Alarm__fired' (at pp.c:12888)
  FuncDef:  (at pp.c:12892)
    Decl: name='Msp430TimerCapComP__5__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:12892)
      FuncDecl: quals=None (at pp.c:12892)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Compare__fired', quals=[] (at pp.c:12892)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12892)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Msp430Compare__fired' (at pp.c:12894)
  FuncDef:  (at pp.c:12899)
    Decl: name='Msp430TimerCapComP__5__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:12899)
      FuncDecl: quals=None (at pp.c:12899)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Capture__getEvent', quals=[] (at pp.c:12899)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:12900)
      Return:  (at pp.c:12901)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12901)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='406U' (at pp.c:12901)
  FuncDef:  (at pp.c:12905)
    Decl: name='Msp430TimerCapComP__5__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:12905)
      FuncDecl: quals=None (at pp.c:12905)
        ParamList:  (at pp.c:12905)
          Decl: name='n', quals=[], storage=[] (at pp.c:12905)
            TypeDecl: declname='n', quals=[] (at pp.c:12905)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Capture__default__captured', quals=[] (at pp.c:12905)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12906)
  FuncDef:  (at pp.c:12910)
    Decl: name='Msp430TimerCapComP__5__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:12910)
      FuncDecl: quals=None (at pp.c:12910)
        ParamList:  (at pp.c:12910)
          Decl: name='time', quals=[], storage=[] (at pp.c:12910)
            TypeDecl: declname='time', quals=[] (at pp.c:12910)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Capture__captured', quals=[] (at pp.c:12910)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12910)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Capture__default__captured' (at pp.c:12912)
        ExprList:  (at pp.c:12912)
          ID: name='time' (at pp.c:12912)
  FuncDef:  (at pp.c:12917)
    Decl: name='Msp430TimerCapComP__5__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:12917)
      FuncDecl: quals=None (at pp.c:12917)
        ParamList:  (at pp.c:12917)
          Decl: name='x', quals=[], storage=[] (at pp.c:12917)
            TypeDecl: declname='x', quals=[] (at pp.c:12917)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__int2CC', quals=[] (at pp.c:12917)
          IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
    Compound:  (at pp.c:12919)
      Decl: name='c', quals=[], storage=[] (at pp.c:12928)
        TypeDecl: declname='c', quals=[] (at pp.c:12928)
          Union: name='Msp430TimerCapComP__5____nesc_unnamed4387', packed=False (at pp.c:12921)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:12923)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:12925)
                IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
        ExprList:  (at pp.c:12928)
          Assignment: op='=' (at pp.c:12928)
            StructRef: type='.' (at pp.c:12928)
              ID: name='f' (at pp.c:12928)
            ID: name='x' (at pp.c:12928)
      Return:  (at pp.c:12931)
        StructRef: type='.' (at pp.c:12931)
          ID: name='c' (at pp.c:12931)
          ID: name='t' (at pp.c:12931)
  FuncDef:  (at pp.c:12935)
    Decl: name='Msp430TimerCapComP__5__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:12935)
      FuncDecl: quals=None (at pp.c:12935)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Control__getControl', quals=[] (at pp.c:12935)
          IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
    Compound:  (at pp.c:12936)
      Return:  (at pp.c:12937)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__5__int2CC' (at pp.c:12937)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:12937)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='390U' (at pp.c:12937)
  FuncDef:  (at pp.c:12941)
    Decl: name='Msp430TimerCapComP__5__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:12941)
      FuncDecl: quals=None (at pp.c:12941)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Event__fired', quals=[] (at pp.c:12941)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12942)
      If:  (at pp.c:12943)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__5__Control__getControl' (at pp.c:12943)
          ID: name='cap' (at pp.c:12943)
        Compound:  (at pp.c:12943)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__5__Capture__captured' (at pp.c:12944)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__5__Capture__getEvent' (at pp.c:12944)
        Compound:  (at pp.c:12946)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__5__Compare__fired' (at pp.c:12948)
  FuncDef:  (at pp.c:12953)
    Decl: name='TransformCounterC__1__CounterFrom__get', quals=[], storage=['static', 'inline'] (at pp.c:12953)
      FuncDecl: quals=None (at pp.c:12953)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__1__CounterFrom__get', quals=[] (at pp.c:12953)
          IdentifierType: names=['TransformCounterC__1__CounterFrom__size_type'] (at None)
    Compound:  (at pp.c:12953)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12955)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12955)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12959)
        ID: name='__nesc_result' (at pp.c:12959)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__0__Counter__get' (at pp.c:12959)
      Return:  (at pp.c:12963)
        ID: name='__nesc_result' (at pp.c:12963)
  FuncDef:  (at pp.c:12974)
    Decl: name='TransformCounterC__1__CounterFrom__isOverflowPending', quals=[], storage=['static', 'inline'] (at pp.c:12974)
      FuncDecl: quals=None (at pp.c:12974)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__1__CounterFrom__isOverflowPending', quals=[] (at pp.c:12974)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:12974)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:12976)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:12976)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:12980)
        ID: name='__nesc_result' (at pp.c:12980)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__0__Counter__isOverflowPending' (at pp.c:12980)
      Return:  (at pp.c:12984)
        ID: name='__nesc_result' (at pp.c:12984)
  FuncDef:  (at pp.c:12989)
    Decl: name='Msp430TimerCapComP__5__Control__enableEvents', quals=[], storage=['inline', 'static'] (at pp.c:12989)
      FuncDecl: quals=None (at pp.c:12989)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Control__enableEvents', quals=[] (at pp.c:12989)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12990)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:12991)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='390U' (at pp.c:12991)
        Constant: type='int', value='0x0010' (at pp.c:12991)
  FuncDef:  (at pp.c:12995)
    Decl: name='Msp430AlarmC__1__Msp430TimerControl__enableEvents', quals=[], storage=['static', 'inline'] (at pp.c:12995)
      FuncDecl: quals=None (at pp.c:12995)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__enableEvents', quals=[] (at pp.c:12995)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:12995)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Control__enableEvents' (at pp.c:12997)
  FuncDef:  (at pp.c:13002)
    Decl: name='Msp430TimerCapComP__5__Control__clearPendingInterrupt', quals=[], storage=['inline', 'static'] (at pp.c:13002)
      FuncDecl: quals=None (at pp.c:13002)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Control__clearPendingInterrupt', quals=[] (at pp.c:13002)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13003)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13004)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='390U' (at pp.c:13004)
        UnaryOp: op='~' (at pp.c:13004)
          Constant: type='int', value='0x0001' (at pp.c:13004)
  FuncDef:  (at pp.c:13008)
    Decl: name='Msp430AlarmC__1__Msp430TimerControl__clearPendingInterrupt', quals=[], storage=['static', 'inline'] (at pp.c:13008)
      FuncDecl: quals=None (at pp.c:13008)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__clearPendingInterrupt', quals=[] (at pp.c:13008)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13008)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Control__clearPendingInterrupt' (at pp.c:13010)
  FuncDef:  (at pp.c:13015)
    Decl: name='Msp430TimerCapComP__5__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:13015)
      FuncDecl: quals=None (at pp.c:13015)
        ParamList:  (at pp.c:13015)
          Decl: name='x', quals=[], storage=[] (at pp.c:13015)
            TypeDecl: declname='x', quals=[] (at pp.c:13015)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Compare__setEvent', quals=[] (at pp.c:13015)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13016)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13017)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='406U' (at pp.c:13017)
        ID: name='x' (at pp.c:13017)
  FuncDef:  (at pp.c:13021)
    Decl: name='Msp430AlarmC__1__Msp430Compare__setEvent', quals=[], storage=['static', 'inline'] (at pp.c:13021)
      FuncDecl: quals=None (at pp.c:13021)
        ParamList:  (at pp.c:13021)
          Decl: name='time', quals=[], storage=[] (at pp.c:13021)
            TypeDecl: declname='time', quals=[] (at pp.c:13021)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430Compare__setEvent', quals=[] (at pp.c:13021)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13021)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Compare__setEvent' (at pp.c:13023)
        ExprList:  (at pp.c:13023)
          ID: name='time' (at pp.c:13023)
  FuncDef:  (at pp.c:13028)
    Decl: name='Msp430TimerCapComP__5__Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:13028)
      FuncDecl: quals=None (at pp.c:13028)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Timer__get', quals=[] (at pp.c:13028)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:13028)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:13030)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:13030)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:13034)
        ID: name='__nesc_result' (at pp.c:13034)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__get' (at pp.c:13034)
      Return:  (at pp.c:13038)
        ID: name='__nesc_result' (at pp.c:13038)
  FuncDef:  (at pp.c:13043)
    Decl: name='Msp430TimerCapComP__5__Compare__setEventFromNow', quals=[], storage=['inline', 'static'] (at pp.c:13043)
      FuncDecl: quals=None (at pp.c:13043)
        ParamList:  (at pp.c:13043)
          Decl: name='x', quals=[], storage=[] (at pp.c:13043)
            TypeDecl: declname='x', quals=[] (at pp.c:13043)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Compare__setEventFromNow', quals=[] (at pp.c:13043)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13044)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13045)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='406U' (at pp.c:13045)
        BinaryOp: op='+' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__5__Timer__get' (at pp.c:13045)
          ID: name='x' (at pp.c:13045)
  FuncDef:  (at pp.c:13049)
    Decl: name='Msp430AlarmC__1__Msp430Compare__setEventFromNow', quals=[], storage=['static', 'inline'] (at pp.c:13049)
      FuncDecl: quals=None (at pp.c:13049)
        ParamList:  (at pp.c:13049)
          Decl: name='delta', quals=[], storage=[] (at pp.c:13049)
            TypeDecl: declname='delta', quals=[] (at pp.c:13049)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430Compare__setEventFromNow', quals=[] (at pp.c:13049)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13049)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Compare__setEventFromNow' (at pp.c:13051)
        ExprList:  (at pp.c:13051)
          ID: name='delta' (at pp.c:13051)
  FuncDef:  (at pp.c:13056)
    Decl: name='Msp430AlarmC__1__Msp430Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:13056)
      FuncDecl: quals=None (at pp.c:13056)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430Timer__get', quals=[] (at pp.c:13056)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:13056)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:13058)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:13058)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:13062)
        ID: name='__nesc_result' (at pp.c:13062)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__get' (at pp.c:13062)
      Return:  (at pp.c:13066)
        ID: name='__nesc_result' (at pp.c:13066)
  FuncDef:  (at pp.c:13071)
    Decl: name='Msp430AlarmC__1__Alarm__startAt', quals=[], storage=['inline', 'static'] (at pp.c:13071)
      FuncDecl: quals=None (at pp.c:13071)
        ParamList:  (at pp.c:13071)
          Decl: name='t0', quals=[], storage=[] (at pp.c:13071)
            TypeDecl: declname='t0', quals=[] (at pp.c:13071)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:13071)
            TypeDecl: declname='dt', quals=[] (at pp.c:13071)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Alarm__startAt', quals=[] (at pp.c:13071)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13072)
      Compound:  (at pp.c:13074)
        Decl: name='now', quals=[], storage=[] (at pp.c:13075)
          TypeDecl: declname='now', quals=[] (at pp.c:13075)
            IdentifierType: names=['uint16_t'] (at None)
          FuncCall:  (at None)
            ID: name='Msp430AlarmC__1__Msp430Timer__get' (at pp.c:13075)
        Decl: name='elapsed', quals=[], storage=[] (at pp.c:13076)
          TypeDecl: declname='elapsed', quals=[] (at pp.c:13076)
            IdentifierType: names=['uint16_t'] (at None)
          BinaryOp: op='-' (at pp.c:13076)
            ID: name='now' (at pp.c:13076)
            ID: name='t0' (at pp.c:13076)
        If:  (at pp.c:13079)
          BinaryOp: op='>=' (at pp.c:13079)
            ID: name='elapsed' (at pp.c:13079)
            ID: name='dt' (at pp.c:13079)
          Compound:  (at pp.c:13080)
            FuncCall:  (at None)
              ID: name='Msp430AlarmC__1__Msp430Compare__setEventFromNow' (at pp.c:13081)
              ExprList:  (at pp.c:13081)
                Constant: type='int', value='2' (at pp.c:13081)
          Compound:  (at pp.c:13084)
            Decl: name='remaining', quals=[], storage=[] (at pp.c:13085)
              TypeDecl: declname='remaining', quals=[] (at pp.c:13085)
                IdentifierType: names=['uint16_t'] (at None)
              BinaryOp: op='-' (at pp.c:13085)
                ID: name='dt' (at pp.c:13085)
                ID: name='elapsed' (at pp.c:13085)
            If:  (at pp.c:13088)
              BinaryOp: op='<=' (at pp.c:13088)
                ID: name='remaining' (at pp.c:13088)
                Constant: type='int', value='2' (at pp.c:13088)
              Compound:  (at pp.c:13088)
                FuncCall:  (at None)
                  ID: name='Msp430AlarmC__1__Msp430Compare__setEventFromNow' (at pp.c:13089)
                  ExprList:  (at pp.c:13089)
                    Constant: type='int', value='2' (at pp.c:13089)
              Compound:  (at pp.c:13091)
                FuncCall:  (at None)
                  ID: name='Msp430AlarmC__1__Msp430Compare__setEvent' (at pp.c:13093)
                  ExprList:  (at pp.c:13093)
                    BinaryOp: op='+' (at pp.c:13093)
                      ID: name='now' (at pp.c:13093)
                      ID: name='remaining' (at pp.c:13093)
        FuncCall:  (at None)
          ID: name='Msp430AlarmC__1__Msp430TimerControl__clearPendingInterrupt' (at pp.c:13097)
        FuncCall:  (at None)
          ID: name='Msp430AlarmC__1__Msp430TimerControl__enableEvents' (at pp.c:13098)
  FuncDef:  (at pp.c:13103)
    Decl: name='TransformAlarmC__1__AlarmFrom__startAt', quals=[], storage=['static', 'inline'] (at pp.c:13103)
      FuncDecl: quals=None (at pp.c:13103)
        ParamList:  (at pp.c:13103)
          Decl: name='t0', quals=[], storage=[] (at pp.c:13103)
            TypeDecl: declname='t0', quals=[] (at pp.c:13103)
              IdentifierType: names=['TransformAlarmC__1__AlarmFrom__size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:13103)
            TypeDecl: declname='dt', quals=[] (at pp.c:13103)
              IdentifierType: names=['TransformAlarmC__1__AlarmFrom__size_type'] (at None)
        TypeDecl: declname='TransformAlarmC__1__AlarmFrom__startAt', quals=[] (at pp.c:13103)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13103)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Alarm__startAt' (at pp.c:13105)
        ExprList:  (at pp.c:13105)
          ID: name='t0' (at pp.c:13105)
          ID: name='dt' (at pp.c:13105)
  FuncDef:  (at pp.c:13110)
    Decl: name='AdcStreamP__SingleChannel__default__getData', quals=[], storage=['inline', 'static'] (at pp.c:13110)
      FuncDecl: quals=None (at pp.c:13110)
        ParamList:  (at pp.c:13110)
          Decl: name='c', quals=[], storage=[] (at pp.c:13110)
            TypeDecl: declname='c', quals=[] (at pp.c:13110)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcStreamP__SingleChannel__default__getData', quals=[] (at pp.c:13110)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:13111)
      Return:  (at pp.c:13112)
        ID: name='FAIL' (at pp.c:13112)
  FuncDef:  (at pp.c:13116)
    Decl: name='AdcStreamP__SingleChannel__getData', quals=[], storage=['static', 'inline'] (at pp.c:13116)
      FuncDecl: quals=None (at pp.c:13116)
        ParamList:  (at pp.c:13116)
          Decl: name='arg_0x1028c6b90', quals=[], storage=[] (at pp.c:13116)
            TypeDecl: declname='arg_0x1028c6b90', quals=[] (at pp.c:13116)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcStreamP__SingleChannel__getData', quals=[] (at pp.c:13116)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:13116)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:13118)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:13118)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:13122)
        ID: name='arg_0x1028c6b90' (at pp.c:13122)
        Compound:  (at pp.c:13122)
          Case:  (at pp.c:13124)
            ID: name='AdcReadStreamClientC__0__RSCLIENT' (at pp.c:13124)
            Assignment: op='=' (at pp.c:13126)
              ID: name='__nesc_result' (at pp.c:13126)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__SingleChannel__getData' (at pp.c:13126)
                ExprList:  (at pp.c:13126)
                  ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:13126)
          Break:  (at pp.c:13128)
          Default:  (at pp.c:13130)
            Assignment: op='=' (at pp.c:13132)
              ID: name='__nesc_result' (at pp.c:13132)
              FuncCall:  (at None)
                ID: name='AdcStreamP__SingleChannel__default__getData' (at pp.c:13132)
                ExprList:  (at pp.c:13132)
                  ID: name='arg_0x1028c6b90' (at pp.c:13132)
          Break:  (at pp.c:13134)
      Return:  (at pp.c:13140)
        ID: name='__nesc_result' (at pp.c:13140)
  FuncDef:  (at pp.c:13145)
    Decl: name='AdcStreamP__sampleSingle', quals=[], storage=['inline', 'static'] (at pp.c:13145)
      FuncDecl: quals=None (at pp.c:13145)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__sampleSingle', quals=[] (at pp.c:13145)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13147)
      FuncCall:  (at None)
        ID: name='AdcStreamP__SingleChannel__getData' (at pp.c:13148)
        ExprList:  (at pp.c:13148)
          ID: name='AdcStreamP__client' (at pp.c:13148)
  FuncDef:  (at pp.c:13152)
    Decl: name='AdcStreamP__Alarm__fired', quals=[], storage=['inline', 'static'] (at pp.c:13152)
      FuncDecl: quals=None (at pp.c:13152)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__Alarm__fired', quals=[] (at pp.c:13152)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13154)
      FuncCall:  (at None)
        ID: name='AdcStreamP__sampleSingle' (at pp.c:13155)
  FuncDef:  (at pp.c:13159)
    Decl: name='TransformAlarmC__2__Alarm__fired', quals=[], storage=['static', 'inline'] (at pp.c:13159)
      FuncDecl: quals=None (at pp.c:13159)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__2__Alarm__fired', quals=[] (at pp.c:13159)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13159)
      FuncCall:  (at None)
        ID: name='AdcStreamP__Alarm__fired' (at pp.c:13161)
  FuncDef:  (at pp.c:13166)
    Decl: name='TransformAlarmC__2__AlarmFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:13166)
      FuncDecl: quals=None (at pp.c:13166)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__2__AlarmFrom__fired', quals=[] (at pp.c:13166)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13167)
      Compound:  (at pp.c:13169)
        If:  (at pp.c:13170)
          BinaryOp: op='==' (at pp.c:13170)
            ID: name='TransformAlarmC__2__m_dt' (at pp.c:13170)
            Constant: type='int', value='0' (at pp.c:13170)
          Compound:  (at pp.c:13171)
            FuncCall:  (at None)
              ID: name='TransformAlarmC__2__Alarm__fired' (at pp.c:13172)
          Compound:  (at pp.c:13175)
            FuncCall:  (at None)
              ID: name='TransformAlarmC__2__set_alarm' (at pp.c:13176)
  FuncDef:  (at pp.c:13182)
    Decl: name='Msp430AlarmC__2__Alarm__fired', quals=[], storage=['static', 'inline'] (at pp.c:13182)
      FuncDecl: quals=None (at pp.c:13182)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__2__Alarm__fired', quals=[] (at pp.c:13182)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13182)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__2__AlarmFrom__fired' (at pp.c:13184)
  FuncDef:  (at pp.c:13189)
    Decl: name='Msp430TimerCapComP__6__Control__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:13189)
      FuncDecl: quals=None (at pp.c:13189)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Control__disableEvents', quals=[] (at pp.c:13189)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13190)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13191)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='392U' (at pp.c:13191)
        UnaryOp: op='~' (at pp.c:13191)
          Constant: type='int', value='0x0010' (at pp.c:13191)
  FuncDef:  (at pp.c:13195)
    Decl: name='Msp430AlarmC__2__Msp430TimerControl__disableEvents', quals=[], storage=['static', 'inline'] (at pp.c:13195)
      FuncDecl: quals=None (at pp.c:13195)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__2__Msp430TimerControl__disableEvents', quals=[] (at pp.c:13195)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13195)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__6__Control__disableEvents' (at pp.c:13197)
  FuncDef:  (at pp.c:13202)
    Decl: name='Msp430AlarmC__2__Msp430Compare__fired', quals=[], storage=['inline', 'static'] (at pp.c:13202)
      FuncDecl: quals=None (at pp.c:13202)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__2__Msp430Compare__fired', quals=[] (at pp.c:13202)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13203)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__2__Msp430TimerControl__disableEvents' (at pp.c:13204)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__2__Alarm__fired' (at pp.c:13205)
  FuncDef:  (at pp.c:13209)
    Decl: name='Msp430TimerCapComP__6__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:13209)
      FuncDecl: quals=None (at pp.c:13209)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Compare__fired', quals=[] (at pp.c:13209)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13209)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__2__Msp430Compare__fired' (at pp.c:13211)
  FuncDef:  (at pp.c:13216)
    Decl: name='Msp430TimerCapComP__6__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:13216)
      FuncDecl: quals=None (at pp.c:13216)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Capture__getEvent', quals=[] (at pp.c:13216)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:13217)
      Return:  (at pp.c:13218)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13218)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='408U' (at pp.c:13218)
  FuncDef:  (at pp.c:13222)
    Decl: name='Msp430TimerCapComP__6__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:13222)
      FuncDecl: quals=None (at pp.c:13222)
        ParamList:  (at pp.c:13222)
          Decl: name='n', quals=[], storage=[] (at pp.c:13222)
            TypeDecl: declname='n', quals=[] (at pp.c:13222)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Capture__default__captured', quals=[] (at pp.c:13222)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13223)
  FuncDef:  (at pp.c:13227)
    Decl: name='Msp430TimerCapComP__6__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:13227)
      FuncDecl: quals=None (at pp.c:13227)
        ParamList:  (at pp.c:13227)
          Decl: name='time', quals=[], storage=[] (at pp.c:13227)
            TypeDecl: declname='time', quals=[] (at pp.c:13227)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Capture__captured', quals=[] (at pp.c:13227)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13227)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__6__Capture__default__captured' (at pp.c:13229)
        ExprList:  (at pp.c:13229)
          ID: name='time' (at pp.c:13229)
  FuncDef:  (at pp.c:13234)
    Decl: name='Msp430TimerCapComP__6__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:13234)
      FuncDecl: quals=None (at pp.c:13234)
        ParamList:  (at pp.c:13234)
          Decl: name='x', quals=[], storage=[] (at pp.c:13234)
            TypeDecl: declname='x', quals=[] (at pp.c:13234)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__int2CC', quals=[] (at pp.c:13234)
          IdentifierType: names=['Msp430TimerCapComP__6__cc_t'] (at None)
    Compound:  (at pp.c:13236)
      Decl: name='c', quals=[], storage=[] (at pp.c:13245)
        TypeDecl: declname='c', quals=[] (at pp.c:13245)
          Union: name='Msp430TimerCapComP__6____nesc_unnamed4388', packed=False (at pp.c:13238)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:13240)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:13242)
                IdentifierType: names=['Msp430TimerCapComP__6__cc_t'] (at None)
        ExprList:  (at pp.c:13245)
          Assignment: op='=' (at pp.c:13245)
            StructRef: type='.' (at pp.c:13245)
              ID: name='f' (at pp.c:13245)
            ID: name='x' (at pp.c:13245)
      Return:  (at pp.c:13248)
        StructRef: type='.' (at pp.c:13248)
          ID: name='c' (at pp.c:13248)
          ID: name='t' (at pp.c:13248)
  FuncDef:  (at pp.c:13252)
    Decl: name='Msp430TimerCapComP__6__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:13252)
      FuncDecl: quals=None (at pp.c:13252)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Control__getControl', quals=[] (at pp.c:13252)
          IdentifierType: names=['Msp430TimerCapComP__6__cc_t'] (at None)
    Compound:  (at pp.c:13253)
      Return:  (at pp.c:13254)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__6__int2CC' (at pp.c:13254)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:13254)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='392U' (at pp.c:13254)
  FuncDef:  (at pp.c:13258)
    Decl: name='Msp430TimerCapComP__6__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:13258)
      FuncDecl: quals=None (at pp.c:13258)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Event__fired', quals=[] (at pp.c:13258)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13259)
      If:  (at pp.c:13260)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__6__Control__getControl' (at pp.c:13260)
          ID: name='cap' (at pp.c:13260)
        Compound:  (at pp.c:13260)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__6__Capture__captured' (at pp.c:13261)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__6__Capture__getEvent' (at pp.c:13261)
        Compound:  (at pp.c:13263)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__6__Compare__fired' (at pp.c:13265)
  FuncDef:  (at pp.c:13270)
    Decl: name='HplMsp430GeneralIOP__47__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:13270)
      FuncDecl: quals=None (at pp.c:13270)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__47__IO__makeInput', quals=[] (at pp.c:13270)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13272)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13275)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='54U' (at pp.c:13275)
        UnaryOp: op='~' (at pp.c:13275)
          BinaryOp: op='<<' (at pp.c:13275)
            Constant: type='int', value='0x01' (at pp.c:13275)
            Constant: type='int', value='7' (at pp.c:13275)
  FuncDef:  (at pp.c:13279)
    Decl: name='Msp430Adc12ImplP__Port67__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:13279)
      FuncDecl: quals=None (at pp.c:13279)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port67__makeInput', quals=[] (at pp.c:13279)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13279)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__47__IO__makeInput' (at pp.c:13281)
  FuncDef:  (at pp.c:13286)
    Decl: name='HplMsp430GeneralIOP__47__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:13286)
      FuncDecl: quals=None (at pp.c:13286)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__47__IO__selectModuleFunc', quals=[] (at pp.c:13286)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13288)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13291)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:13291)
        BinaryOp: op='<<' (at pp.c:13291)
          Constant: type='int', value='0x01' (at pp.c:13291)
          Constant: type='int', value='7' (at pp.c:13291)
  FuncDef:  (at pp.c:13295)
    Decl: name='Msp430Adc12ImplP__Port67__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:13295)
      FuncDecl: quals=None (at pp.c:13295)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port67__selectModuleFunc', quals=[] (at pp.c:13295)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13295)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__47__IO__selectModuleFunc' (at pp.c:13297)
  FuncDef:  (at pp.c:13302)
    Decl: name='HplMsp430GeneralIOP__46__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:13302)
      FuncDecl: quals=None (at pp.c:13302)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__46__IO__makeInput', quals=[] (at pp.c:13302)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13304)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13307)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='54U' (at pp.c:13307)
        UnaryOp: op='~' (at pp.c:13307)
          BinaryOp: op='<<' (at pp.c:13307)
            Constant: type='int', value='0x01' (at pp.c:13307)
            Constant: type='int', value='6' (at pp.c:13307)
  FuncDef:  (at pp.c:13311)
    Decl: name='Msp430Adc12ImplP__Port66__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:13311)
      FuncDecl: quals=None (at pp.c:13311)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port66__makeInput', quals=[] (at pp.c:13311)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13311)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__46__IO__makeInput' (at pp.c:13313)
  FuncDef:  (at pp.c:13318)
    Decl: name='HplMsp430GeneralIOP__46__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:13318)
      FuncDecl: quals=None (at pp.c:13318)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__46__IO__selectModuleFunc', quals=[] (at pp.c:13318)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13320)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13323)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:13323)
        BinaryOp: op='<<' (at pp.c:13323)
          Constant: type='int', value='0x01' (at pp.c:13323)
          Constant: type='int', value='6' (at pp.c:13323)
  FuncDef:  (at pp.c:13327)
    Decl: name='Msp430Adc12ImplP__Port66__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:13327)
      FuncDecl: quals=None (at pp.c:13327)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port66__selectModuleFunc', quals=[] (at pp.c:13327)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13327)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__46__IO__selectModuleFunc' (at pp.c:13329)
  FuncDef:  (at pp.c:13334)
    Decl: name='HplMsp430GeneralIOP__45__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:13334)
      FuncDecl: quals=None (at pp.c:13334)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__45__IO__makeInput', quals=[] (at pp.c:13334)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13336)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13339)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='54U' (at pp.c:13339)
        UnaryOp: op='~' (at pp.c:13339)
          BinaryOp: op='<<' (at pp.c:13339)
            Constant: type='int', value='0x01' (at pp.c:13339)
            Constant: type='int', value='5' (at pp.c:13339)
  FuncDef:  (at pp.c:13343)
    Decl: name='Msp430Adc12ImplP__Port65__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:13343)
      FuncDecl: quals=None (at pp.c:13343)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port65__makeInput', quals=[] (at pp.c:13343)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13343)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__45__IO__makeInput' (at pp.c:13345)
  FuncDef:  (at pp.c:13350)
    Decl: name='HplMsp430GeneralIOP__45__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:13350)
      FuncDecl: quals=None (at pp.c:13350)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__45__IO__selectModuleFunc', quals=[] (at pp.c:13350)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13352)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13355)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:13355)
        BinaryOp: op='<<' (at pp.c:13355)
          Constant: type='int', value='0x01' (at pp.c:13355)
          Constant: type='int', value='5' (at pp.c:13355)
  FuncDef:  (at pp.c:13359)
    Decl: name='Msp430Adc12ImplP__Port65__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:13359)
      FuncDecl: quals=None (at pp.c:13359)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port65__selectModuleFunc', quals=[] (at pp.c:13359)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13359)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__45__IO__selectModuleFunc' (at pp.c:13361)
  FuncDef:  (at pp.c:13366)
    Decl: name='HplMsp430GeneralIOP__44__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:13366)
      FuncDecl: quals=None (at pp.c:13366)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__44__IO__makeInput', quals=[] (at pp.c:13366)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13368)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13371)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='54U' (at pp.c:13371)
        UnaryOp: op='~' (at pp.c:13371)
          BinaryOp: op='<<' (at pp.c:13371)
            Constant: type='int', value='0x01' (at pp.c:13371)
            Constant: type='int', value='4' (at pp.c:13371)
  FuncDef:  (at pp.c:13375)
    Decl: name='Msp430Adc12ImplP__Port64__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:13375)
      FuncDecl: quals=None (at pp.c:13375)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port64__makeInput', quals=[] (at pp.c:13375)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13375)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__44__IO__makeInput' (at pp.c:13377)
  FuncDef:  (at pp.c:13382)
    Decl: name='HplMsp430GeneralIOP__44__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:13382)
      FuncDecl: quals=None (at pp.c:13382)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__44__IO__selectModuleFunc', quals=[] (at pp.c:13382)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13384)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13387)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:13387)
        BinaryOp: op='<<' (at pp.c:13387)
          Constant: type='int', value='0x01' (at pp.c:13387)
          Constant: type='int', value='4' (at pp.c:13387)
  FuncDef:  (at pp.c:13391)
    Decl: name='Msp430Adc12ImplP__Port64__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:13391)
      FuncDecl: quals=None (at pp.c:13391)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port64__selectModuleFunc', quals=[] (at pp.c:13391)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13391)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__44__IO__selectModuleFunc' (at pp.c:13393)
  FuncDef:  (at pp.c:13398)
    Decl: name='HplMsp430GeneralIOP__43__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:13398)
      FuncDecl: quals=None (at pp.c:13398)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__43__IO__makeInput', quals=[] (at pp.c:13398)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13400)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13403)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='54U' (at pp.c:13403)
        UnaryOp: op='~' (at pp.c:13403)
          BinaryOp: op='<<' (at pp.c:13403)
            Constant: type='int', value='0x01' (at pp.c:13403)
            Constant: type='int', value='3' (at pp.c:13403)
  FuncDef:  (at pp.c:13407)
    Decl: name='Msp430Adc12ImplP__Port63__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:13407)
      FuncDecl: quals=None (at pp.c:13407)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port63__makeInput', quals=[] (at pp.c:13407)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13407)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__43__IO__makeInput' (at pp.c:13409)
  FuncDef:  (at pp.c:13414)
    Decl: name='HplMsp430GeneralIOP__43__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:13414)
      FuncDecl: quals=None (at pp.c:13414)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__43__IO__selectModuleFunc', quals=[] (at pp.c:13414)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13416)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13419)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:13419)
        BinaryOp: op='<<' (at pp.c:13419)
          Constant: type='int', value='0x01' (at pp.c:13419)
          Constant: type='int', value='3' (at pp.c:13419)
  FuncDef:  (at pp.c:13423)
    Decl: name='Msp430Adc12ImplP__Port63__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:13423)
      FuncDecl: quals=None (at pp.c:13423)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port63__selectModuleFunc', quals=[] (at pp.c:13423)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13423)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__43__IO__selectModuleFunc' (at pp.c:13425)
  FuncDef:  (at pp.c:13430)
    Decl: name='HplMsp430GeneralIOP__42__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:13430)
      FuncDecl: quals=None (at pp.c:13430)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__42__IO__makeInput', quals=[] (at pp.c:13430)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13432)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13435)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='54U' (at pp.c:13435)
        UnaryOp: op='~' (at pp.c:13435)
          BinaryOp: op='<<' (at pp.c:13435)
            Constant: type='int', value='0x01' (at pp.c:13435)
            Constant: type='int', value='2' (at pp.c:13435)
  FuncDef:  (at pp.c:13439)
    Decl: name='Msp430Adc12ImplP__Port62__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:13439)
      FuncDecl: quals=None (at pp.c:13439)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port62__makeInput', quals=[] (at pp.c:13439)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13439)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__42__IO__makeInput' (at pp.c:13441)
  FuncDef:  (at pp.c:13446)
    Decl: name='HplMsp430GeneralIOP__42__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:13446)
      FuncDecl: quals=None (at pp.c:13446)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__42__IO__selectModuleFunc', quals=[] (at pp.c:13446)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13448)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13451)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:13451)
        BinaryOp: op='<<' (at pp.c:13451)
          Constant: type='int', value='0x01' (at pp.c:13451)
          Constant: type='int', value='2' (at pp.c:13451)
  FuncDef:  (at pp.c:13455)
    Decl: name='Msp430Adc12ImplP__Port62__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:13455)
      FuncDecl: quals=None (at pp.c:13455)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port62__selectModuleFunc', quals=[] (at pp.c:13455)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13455)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__42__IO__selectModuleFunc' (at pp.c:13457)
  FuncDef:  (at pp.c:13462)
    Decl: name='HplMsp430GeneralIOP__41__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:13462)
      FuncDecl: quals=None (at pp.c:13462)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__41__IO__makeInput', quals=[] (at pp.c:13462)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13464)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13467)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='54U' (at pp.c:13467)
        UnaryOp: op='~' (at pp.c:13467)
          BinaryOp: op='<<' (at pp.c:13467)
            Constant: type='int', value='0x01' (at pp.c:13467)
            Constant: type='int', value='1' (at pp.c:13467)
  FuncDef:  (at pp.c:13471)
    Decl: name='Msp430Adc12ImplP__Port61__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:13471)
      FuncDecl: quals=None (at pp.c:13471)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port61__makeInput', quals=[] (at pp.c:13471)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13471)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__41__IO__makeInput' (at pp.c:13473)
  FuncDef:  (at pp.c:13478)
    Decl: name='HplMsp430GeneralIOP__41__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:13478)
      FuncDecl: quals=None (at pp.c:13478)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__41__IO__selectModuleFunc', quals=[] (at pp.c:13478)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13480)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13483)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:13483)
        BinaryOp: op='<<' (at pp.c:13483)
          Constant: type='int', value='0x01' (at pp.c:13483)
          Constant: type='int', value='1' (at pp.c:13483)
  FuncDef:  (at pp.c:13487)
    Decl: name='Msp430Adc12ImplP__Port61__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:13487)
      FuncDecl: quals=None (at pp.c:13487)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port61__selectModuleFunc', quals=[] (at pp.c:13487)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13487)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__41__IO__selectModuleFunc' (at pp.c:13489)
  FuncDef:  (at pp.c:13494)
    Decl: name='HplMsp430GeneralIOP__40__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:13494)
      FuncDecl: quals=None (at pp.c:13494)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__40__IO__makeInput', quals=[] (at pp.c:13494)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13496)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13499)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='54U' (at pp.c:13499)
        UnaryOp: op='~' (at pp.c:13499)
          BinaryOp: op='<<' (at pp.c:13499)
            Constant: type='int', value='0x01' (at pp.c:13499)
            Constant: type='int', value='0' (at pp.c:13499)
  FuncDef:  (at pp.c:13503)
    Decl: name='Msp430Adc12ImplP__Port60__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:13503)
      FuncDecl: quals=None (at pp.c:13503)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port60__makeInput', quals=[] (at pp.c:13503)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13503)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__40__IO__makeInput' (at pp.c:13505)
  FuncDef:  (at pp.c:13510)
    Decl: name='HplMsp430GeneralIOP__40__IO__selectModuleFunc', quals=[], storage=['inline', 'static'] (at pp.c:13510)
      FuncDecl: quals=None (at pp.c:13510)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__40__IO__selectModuleFunc', quals=[] (at pp.c:13510)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13512)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13515)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:13515)
        BinaryOp: op='<<' (at pp.c:13515)
          Constant: type='int', value='0x01' (at pp.c:13515)
          Constant: type='int', value='0' (at pp.c:13515)
  FuncDef:  (at pp.c:13519)
    Decl: name='Msp430Adc12ImplP__Port60__selectModuleFunc', quals=[], storage=['static', 'inline'] (at pp.c:13519)
      FuncDecl: quals=None (at pp.c:13519)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port60__selectModuleFunc', quals=[] (at pp.c:13519)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13519)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__40__IO__selectModuleFunc' (at pp.c:13521)
  FuncDef:  (at pp.c:13526)
    Decl: name='Msp430Adc12ImplP__configureAdcPin', quals=[], storage=['inline', 'static'] (at pp.c:13526)
      FuncDecl: quals=None (at pp.c:13526)
        ParamList:  (at pp.c:13526)
          Decl: name='inch', quals=[], storage=[] (at pp.c:13526)
            TypeDecl: declname='inch', quals=[] (at pp.c:13526)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__configureAdcPin', quals=[] (at pp.c:13526)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13527)
      Switch:  (at pp.c:13529)
        ID: name='inch' (at pp.c:13529)
        Compound:  (at pp.c:13530)
          Case:  (at pp.c:13531)
            Constant: type='int', value='0' (at pp.c:13531)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port60__selectModuleFunc' (at pp.c:13531)
          FuncCall:  (at None)
            ID: name='Msp430Adc12ImplP__Port60__makeInput' (at pp.c:13533)
          Break:  (at pp.c:13535)
          Case:  (at pp.c:13536)
            Constant: type='int', value='1' (at pp.c:13536)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port61__selectModuleFunc' (at pp.c:13536)
          FuncCall:  (at None)
            ID: name='Msp430Adc12ImplP__Port61__makeInput' (at pp.c:13538)
          Break:  (at pp.c:13540)
          Case:  (at pp.c:13541)
            Constant: type='int', value='2' (at pp.c:13541)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port62__selectModuleFunc' (at pp.c:13541)
          FuncCall:  (at None)
            ID: name='Msp430Adc12ImplP__Port62__makeInput' (at pp.c:13543)
          Break:  (at pp.c:13545)
          Case:  (at pp.c:13546)
            Constant: type='int', value='3' (at pp.c:13546)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port63__selectModuleFunc' (at pp.c:13546)
          FuncCall:  (at None)
            ID: name='Msp430Adc12ImplP__Port63__makeInput' (at pp.c:13548)
          Break:  (at pp.c:13550)
          Case:  (at pp.c:13551)
            Constant: type='int', value='4' (at pp.c:13551)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port64__selectModuleFunc' (at pp.c:13551)
          FuncCall:  (at None)
            ID: name='Msp430Adc12ImplP__Port64__makeInput' (at pp.c:13553)
          Break:  (at pp.c:13555)
          Case:  (at pp.c:13556)
            Constant: type='int', value='5' (at pp.c:13556)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port65__selectModuleFunc' (at pp.c:13556)
          FuncCall:  (at None)
            ID: name='Msp430Adc12ImplP__Port65__makeInput' (at pp.c:13558)
          Break:  (at pp.c:13560)
          Case:  (at pp.c:13561)
            Constant: type='int', value='6' (at pp.c:13561)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port66__selectModuleFunc' (at pp.c:13561)
          FuncCall:  (at None)
            ID: name='Msp430Adc12ImplP__Port66__makeInput' (at pp.c:13563)
          Break:  (at pp.c:13565)
          Case:  (at pp.c:13566)
            Constant: type='int', value='7' (at pp.c:13566)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port67__selectModuleFunc' (at pp.c:13566)
          FuncCall:  (at None)
            ID: name='Msp430Adc12ImplP__Port67__makeInput' (at pp.c:13568)
          Break:  (at pp.c:13570)
  FuncDef:  (at pp.c:13575)
    Decl: name='HplAdc12P__HplAdc12__startConversion', quals=[], storage=['inline', 'static'] (at pp.c:13575)
      FuncDecl: quals=None (at pp.c:13575)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__startConversion', quals=[] (at pp.c:13575)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13577)
      Assignment: op='|=' (at pp.c:13578)
        ID: name='HplAdc12P__ADC12CTL0' (at pp.c:13578)
        Constant: type='int', value='0x0010' (at pp.c:13578)
      Assignment: op='|=' (at pp.c:13579)
        ID: name='HplAdc12P__ADC12CTL0' (at pp.c:13579)
        BinaryOp: op='+' (at pp.c:13579)
          Constant: type='int', value='0x0001' (at pp.c:13579)
          Constant: type='int', value='0x0002' (at pp.c:13579)
  FuncDef:  (at pp.c:13583)
    Decl: name='Msp430Adc12ImplP__HplAdc12__startConversion', quals=[], storage=['static', 'inline'] (at pp.c:13583)
      FuncDecl: quals=None (at pp.c:13583)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__startConversion', quals=[] (at pp.c:13583)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13583)
      FuncCall:  (at None)
        ID: name='HplAdc12P__HplAdc12__startConversion' (at pp.c:13585)
  FuncDef:  (at pp.c:13590)
    Decl: name='Msp430Adc12ImplP__TimerA__setMode', quals=[], storage=['static', 'inline'] (at pp.c:13590)
      FuncDecl: quals=None (at pp.c:13590)
        ParamList:  (at pp.c:13590)
          Decl: name='mode', quals=[], storage=[] (at pp.c:13590)
            TypeDecl: declname='mode', quals=[] (at pp.c:13590)
              IdentifierType: names=['int'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__TimerA__setMode', quals=[] (at pp.c:13590)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13590)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Timer__setMode' (at pp.c:13592)
        ExprList:  (at pp.c:13592)
          ID: name='mode' (at pp.c:13592)
  FuncDef:  (at pp.c:13597)
    Decl: name='Msp430TimerCapComP__1__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:13597)
      FuncDecl: quals=None (at pp.c:13597)
        ParamList:  (at pp.c:13597)
          Decl: name='x', quals=[], storage=[] (at pp.c:13597)
            TypeDecl: declname='x', quals=[] (at pp.c:13597)
              IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__CC2int', quals=[] (at pp.c:13597)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:13599)
      Decl: name='c', quals=[], storage=[] (at pp.c:13608)
        TypeDecl: declname='c', quals=[] (at pp.c:13608)
          Union: name='Msp430TimerCapComP__1____nesc_unnamed4389', packed=False (at pp.c:13601)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:13603)
                IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:13605)
                IdentifierType: names=['uint16_t'] (at None)
        ExprList:  (at pp.c:13608)
          Assignment: op='=' (at pp.c:13608)
            StructRef: type='.' (at pp.c:13608)
              ID: name='f' (at pp.c:13608)
            ID: name='x' (at pp.c:13608)
      Return:  (at pp.c:13611)
        StructRef: type='.' (at pp.c:13611)
          ID: name='c' (at pp.c:13611)
          ID: name='t' (at pp.c:13611)
  FuncDef:  (at pp.c:13615)
    Decl: name='Msp430TimerCapComP__1__Control__setControl', quals=[], storage=['inline', 'static'] (at pp.c:13615)
      FuncDecl: quals=None (at pp.c:13615)
        ParamList:  (at pp.c:13615)
          Decl: name='x', quals=[], storage=[] (at pp.c:13615)
            TypeDecl: declname='x', quals=[] (at pp.c:13615)
              IdentifierType: names=['Msp430TimerCapComP__1__cc_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Control__setControl', quals=[] (at pp.c:13615)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13616)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13617)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='356U' (at pp.c:13617)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__1__CC2int' (at pp.c:13617)
          ExprList:  (at pp.c:13617)
            ID: name='x' (at pp.c:13617)
  FuncDef:  (at pp.c:13621)
    Decl: name='Msp430Adc12ImplP__ControlA1__setControl', quals=[], storage=['static', 'inline'] (at pp.c:13621)
      FuncDecl: quals=None (at pp.c:13621)
        ParamList:  (at pp.c:13621)
          Decl: name='control', quals=[], storage=[] (at pp.c:13621)
            TypeDecl: declname='control', quals=[] (at pp.c:13621)
              IdentifierType: names=['msp430_compare_control_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__ControlA1__setControl', quals=[] (at pp.c:13621)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13621)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__1__Control__setControl' (at pp.c:13623)
        ExprList:  (at pp.c:13623)
          ID: name='control' (at pp.c:13623)
  FuncDef:  (at pp.c:13628)
    Decl: name='Msp430Adc12ImplP__startTimerA', quals=[], storage=['inline', 'static'] (at pp.c:13628)
      FuncDecl: quals=None (at pp.c:13628)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__startTimerA', quals=[] (at pp.c:13628)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13629)
      Decl: name='ccSetSHI', quals=[], storage=[] (at pp.c:13631)
        TypeDecl: declname='ccSetSHI', quals=[] (at pp.c:13631)
          IdentifierType: names=['msp430_compare_control_t'] (at None)
        ExprList:  (at pp.c:13632)
          Assignment: op='=' (at pp.c:13632)
            StructRef: type='.' (at pp.c:13632)
              ID: name='ccifg' (at pp.c:13632)
            Constant: type='int', value='0' (at pp.c:13632)
          Assignment: op='=' (at pp.c:13632)
            StructRef: type='.' (at pp.c:13632)
              ID: name='cov' (at pp.c:13632)
            Constant: type='int', value='0' (at pp.c:13632)
          Assignment: op='=' (at pp.c:13632)
            StructRef: type='.' (at pp.c:13632)
              ID: name='out' (at pp.c:13632)
            Constant: type='int', value='1' (at pp.c:13632)
          Assignment: op='=' (at pp.c:13632)
            StructRef: type='.' (at pp.c:13632)
              ID: name='cci' (at pp.c:13632)
            Constant: type='int', value='0' (at pp.c:13632)
          Assignment: op='=' (at pp.c:13632)
            StructRef: type='.' (at pp.c:13632)
              ID: name='ccie' (at pp.c:13632)
            Constant: type='int', value='0' (at pp.c:13632)
          Assignment: op='=' (at pp.c:13633)
            StructRef: type='.' (at pp.c:13633)
              ID: name='outmod' (at pp.c:13633)
            Constant: type='int', value='0' (at pp.c:13633)
          Assignment: op='=' (at pp.c:13633)
            StructRef: type='.' (at pp.c:13633)
              ID: name='cap' (at pp.c:13633)
            Constant: type='int', value='0' (at pp.c:13633)
          Assignment: op='=' (at pp.c:13633)
            StructRef: type='.' (at pp.c:13633)
              ID: name='clld' (at pp.c:13633)
            Constant: type='int', value='0' (at pp.c:13633)
          Assignment: op='=' (at pp.c:13633)
            StructRef: type='.' (at pp.c:13633)
              ID: name='scs' (at pp.c:13633)
            Constant: type='int', value='0' (at pp.c:13633)
          Assignment: op='=' (at pp.c:13633)
            StructRef: type='.' (at pp.c:13633)
              ID: name='ccis' (at pp.c:13633)
            Constant: type='int', value='0' (at pp.c:13633)
          Assignment: op='=' (at pp.c:13633)
            StructRef: type='.' (at pp.c:13633)
              ID: name='cm' (at pp.c:13633)
            Constant: type='int', value='0' (at pp.c:13633)
      Decl: name='ccResetSHI', quals=[], storage=[] (at pp.c:13634)
        TypeDecl: declname='ccResetSHI', quals=[] (at pp.c:13634)
          IdentifierType: names=['msp430_compare_control_t'] (at None)
        ExprList:  (at pp.c:13635)
          Assignment: op='=' (at pp.c:13635)
            StructRef: type='.' (at pp.c:13635)
              ID: name='ccifg' (at pp.c:13635)
            Constant: type='int', value='0' (at pp.c:13635)
          Assignment: op='=' (at pp.c:13635)
            StructRef: type='.' (at pp.c:13635)
              ID: name='cov' (at pp.c:13635)
            Constant: type='int', value='0' (at pp.c:13635)
          Assignment: op='=' (at pp.c:13635)
            StructRef: type='.' (at pp.c:13635)
              ID: name='out' (at pp.c:13635)
            Constant: type='int', value='0' (at pp.c:13635)
          Assignment: op='=' (at pp.c:13635)
            StructRef: type='.' (at pp.c:13635)
              ID: name='cci' (at pp.c:13635)
            Constant: type='int', value='0' (at pp.c:13635)
          Assignment: op='=' (at pp.c:13635)
            StructRef: type='.' (at pp.c:13635)
              ID: name='ccie' (at pp.c:13635)
            Constant: type='int', value='0' (at pp.c:13635)
          Assignment: op='=' (at pp.c:13636)
            StructRef: type='.' (at pp.c:13636)
              ID: name='outmod' (at pp.c:13636)
            Constant: type='int', value='0' (at pp.c:13636)
          Assignment: op='=' (at pp.c:13636)
            StructRef: type='.' (at pp.c:13636)
              ID: name='cap' (at pp.c:13636)
            Constant: type='int', value='0' (at pp.c:13636)
          Assignment: op='=' (at pp.c:13636)
            StructRef: type='.' (at pp.c:13636)
              ID: name='clld' (at pp.c:13636)
            Constant: type='int', value='0' (at pp.c:13636)
          Assignment: op='=' (at pp.c:13636)
            StructRef: type='.' (at pp.c:13636)
              ID: name='scs' (at pp.c:13636)
            Constant: type='int', value='0' (at pp.c:13636)
          Assignment: op='=' (at pp.c:13636)
            StructRef: type='.' (at pp.c:13636)
              ID: name='ccis' (at pp.c:13636)
            Constant: type='int', value='0' (at pp.c:13636)
          Assignment: op='=' (at pp.c:13636)
            StructRef: type='.' (at pp.c:13636)
              ID: name='cm' (at pp.c:13636)
            Constant: type='int', value='0' (at pp.c:13636)
      Decl: name='ccRSOutmod', quals=[], storage=[] (at pp.c:13637)
        TypeDecl: declname='ccRSOutmod', quals=[] (at pp.c:13637)
          IdentifierType: names=['msp430_compare_control_t'] (at None)
        ExprList:  (at pp.c:13638)
          Assignment: op='=' (at pp.c:13638)
            StructRef: type='.' (at pp.c:13638)
              ID: name='ccifg' (at pp.c:13638)
            Constant: type='int', value='0' (at pp.c:13638)
          Assignment: op='=' (at pp.c:13638)
            StructRef: type='.' (at pp.c:13638)
              ID: name='cov' (at pp.c:13638)
            Constant: type='int', value='0' (at pp.c:13638)
          Assignment: op='=' (at pp.c:13638)
            StructRef: type='.' (at pp.c:13638)
              ID: name='out' (at pp.c:13638)
            Constant: type='int', value='0' (at pp.c:13638)
          Assignment: op='=' (at pp.c:13638)
            StructRef: type='.' (at pp.c:13638)
              ID: name='cci' (at pp.c:13638)
            Constant: type='int', value='0' (at pp.c:13638)
          Assignment: op='=' (at pp.c:13638)
            StructRef: type='.' (at pp.c:13638)
              ID: name='ccie' (at pp.c:13638)
            Constant: type='int', value='0' (at pp.c:13638)
          Assignment: op='=' (at pp.c:13639)
            StructRef: type='.' (at pp.c:13639)
              ID: name='outmod' (at pp.c:13639)
            Constant: type='int', value='7' (at pp.c:13639)
          Assignment: op='=' (at pp.c:13639)
            StructRef: type='.' (at pp.c:13639)
              ID: name='cap' (at pp.c:13639)
            Constant: type='int', value='0' (at pp.c:13639)
          Assignment: op='=' (at pp.c:13639)
            StructRef: type='.' (at pp.c:13639)
              ID: name='clld' (at pp.c:13639)
            Constant: type='int', value='0' (at pp.c:13639)
          Assignment: op='=' (at pp.c:13639)
            StructRef: type='.' (at pp.c:13639)
              ID: name='scs' (at pp.c:13639)
            Constant: type='int', value='0' (at pp.c:13639)
          Assignment: op='=' (at pp.c:13639)
            StructRef: type='.' (at pp.c:13639)
              ID: name='ccis' (at pp.c:13639)
            Constant: type='int', value='0' (at pp.c:13639)
          Assignment: op='=' (at pp.c:13639)
            StructRef: type='.' (at pp.c:13639)
              ID: name='cm' (at pp.c:13639)
            Constant: type='int', value='0' (at pp.c:13639)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__ControlA1__setControl' (at pp.c:13641)
        ExprList:  (at pp.c:13641)
          ID: name='ccResetSHI' (at pp.c:13641)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__ControlA1__setControl' (at pp.c:13642)
        ExprList:  (at pp.c:13642)
          ID: name='ccSetSHI' (at pp.c:13642)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__ControlA1__setControl' (at pp.c:13644)
        ExprList:  (at pp.c:13644)
          ID: name='ccRSOutmod' (at pp.c:13644)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__TimerA__setMode' (at pp.c:13645)
        ExprList:  (at pp.c:13645)
          ID: name='MSP430TIMER_UP_MODE' (at pp.c:13645)
  FuncDef:  (at pp.c:13649)
    Decl: name='Msp430TimerCapComP__6__Control__enableEvents', quals=[], storage=['inline', 'static'] (at pp.c:13649)
      FuncDecl: quals=None (at pp.c:13649)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Control__enableEvents', quals=[] (at pp.c:13649)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13650)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13651)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='392U' (at pp.c:13651)
        Constant: type='int', value='0x0010' (at pp.c:13651)
  FuncDef:  (at pp.c:13655)
    Decl: name='Msp430AlarmC__2__Msp430TimerControl__enableEvents', quals=[], storage=['static', 'inline'] (at pp.c:13655)
      FuncDecl: quals=None (at pp.c:13655)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__2__Msp430TimerControl__enableEvents', quals=[] (at pp.c:13655)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13655)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__6__Control__enableEvents' (at pp.c:13657)
  FuncDef:  (at pp.c:13662)
    Decl: name='Msp430TimerCapComP__6__Control__clearPendingInterrupt', quals=[], storage=['inline', 'static'] (at pp.c:13662)
      FuncDecl: quals=None (at pp.c:13662)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Control__clearPendingInterrupt', quals=[] (at pp.c:13662)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13663)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13664)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='392U' (at pp.c:13664)
        UnaryOp: op='~' (at pp.c:13664)
          Constant: type='int', value='0x0001' (at pp.c:13664)
  FuncDef:  (at pp.c:13668)
    Decl: name='Msp430AlarmC__2__Msp430TimerControl__clearPendingInterrupt', quals=[], storage=['static', 'inline'] (at pp.c:13668)
      FuncDecl: quals=None (at pp.c:13668)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__2__Msp430TimerControl__clearPendingInterrupt', quals=[] (at pp.c:13668)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13668)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__6__Control__clearPendingInterrupt' (at pp.c:13670)
  FuncDef:  (at pp.c:13675)
    Decl: name='Msp430TimerCapComP__6__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:13675)
      FuncDecl: quals=None (at pp.c:13675)
        ParamList:  (at pp.c:13675)
          Decl: name='x', quals=[], storage=[] (at pp.c:13675)
            TypeDecl: declname='x', quals=[] (at pp.c:13675)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Compare__setEvent', quals=[] (at pp.c:13675)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13676)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13677)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='408U' (at pp.c:13677)
        ID: name='x' (at pp.c:13677)
  FuncDef:  (at pp.c:13681)
    Decl: name='Msp430AlarmC__2__Msp430Compare__setEvent', quals=[], storage=['static', 'inline'] (at pp.c:13681)
      FuncDecl: quals=None (at pp.c:13681)
        ParamList:  (at pp.c:13681)
          Decl: name='time', quals=[], storage=[] (at pp.c:13681)
            TypeDecl: declname='time', quals=[] (at pp.c:13681)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__2__Msp430Compare__setEvent', quals=[] (at pp.c:13681)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13681)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__6__Compare__setEvent' (at pp.c:13683)
        ExprList:  (at pp.c:13683)
          ID: name='time' (at pp.c:13683)
  FuncDef:  (at pp.c:13688)
    Decl: name='Msp430TimerCapComP__6__Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:13688)
      FuncDecl: quals=None (at pp.c:13688)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Timer__get', quals=[] (at pp.c:13688)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:13688)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:13690)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:13690)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:13694)
        ID: name='__nesc_result' (at pp.c:13694)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__get' (at pp.c:13694)
      Return:  (at pp.c:13698)
        ID: name='__nesc_result' (at pp.c:13698)
  FuncDef:  (at pp.c:13703)
    Decl: name='Msp430TimerCapComP__6__Compare__setEventFromNow', quals=[], storage=['inline', 'static'] (at pp.c:13703)
      FuncDecl: quals=None (at pp.c:13703)
        ParamList:  (at pp.c:13703)
          Decl: name='x', quals=[], storage=[] (at pp.c:13703)
            TypeDecl: declname='x', quals=[] (at pp.c:13703)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__6__Compare__setEventFromNow', quals=[] (at pp.c:13703)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13704)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13705)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='408U' (at pp.c:13705)
        BinaryOp: op='+' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__6__Timer__get' (at pp.c:13705)
          ID: name='x' (at pp.c:13705)
  FuncDef:  (at pp.c:13709)
    Decl: name='Msp430AlarmC__2__Msp430Compare__setEventFromNow', quals=[], storage=['static', 'inline'] (at pp.c:13709)
      FuncDecl: quals=None (at pp.c:13709)
        ParamList:  (at pp.c:13709)
          Decl: name='delta', quals=[], storage=[] (at pp.c:13709)
            TypeDecl: declname='delta', quals=[] (at pp.c:13709)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__2__Msp430Compare__setEventFromNow', quals=[] (at pp.c:13709)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13709)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__6__Compare__setEventFromNow' (at pp.c:13711)
        ExprList:  (at pp.c:13711)
          ID: name='delta' (at pp.c:13711)
  FuncDef:  (at pp.c:13716)
    Decl: name='Msp430AlarmC__2__Msp430Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:13716)
      FuncDecl: quals=None (at pp.c:13716)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__2__Msp430Timer__get', quals=[] (at pp.c:13716)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:13716)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:13718)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:13718)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:13722)
        ID: name='__nesc_result' (at pp.c:13722)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__1__Timer__get' (at pp.c:13722)
      Return:  (at pp.c:13726)
        ID: name='__nesc_result' (at pp.c:13726)
  FuncDef:  (at pp.c:13731)
    Decl: name='Msp430AlarmC__2__Alarm__startAt', quals=[], storage=['inline', 'static'] (at pp.c:13731)
      FuncDecl: quals=None (at pp.c:13731)
        ParamList:  (at pp.c:13731)
          Decl: name='t0', quals=[], storage=[] (at pp.c:13731)
            TypeDecl: declname='t0', quals=[] (at pp.c:13731)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:13731)
            TypeDecl: declname='dt', quals=[] (at pp.c:13731)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430AlarmC__2__Alarm__startAt', quals=[] (at pp.c:13731)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13732)
      Compound:  (at pp.c:13734)
        Decl: name='now', quals=[], storage=[] (at pp.c:13735)
          TypeDecl: declname='now', quals=[] (at pp.c:13735)
            IdentifierType: names=['uint16_t'] (at None)
          FuncCall:  (at None)
            ID: name='Msp430AlarmC__2__Msp430Timer__get' (at pp.c:13735)
        Decl: name='elapsed', quals=[], storage=[] (at pp.c:13736)
          TypeDecl: declname='elapsed', quals=[] (at pp.c:13736)
            IdentifierType: names=['uint16_t'] (at None)
          BinaryOp: op='-' (at pp.c:13736)
            ID: name='now' (at pp.c:13736)
            ID: name='t0' (at pp.c:13736)
        If:  (at pp.c:13739)
          BinaryOp: op='>=' (at pp.c:13739)
            ID: name='elapsed' (at pp.c:13739)
            ID: name='dt' (at pp.c:13739)
          Compound:  (at pp.c:13740)
            FuncCall:  (at None)
              ID: name='Msp430AlarmC__2__Msp430Compare__setEventFromNow' (at pp.c:13741)
              ExprList:  (at pp.c:13741)
                Constant: type='int', value='2' (at pp.c:13741)
          Compound:  (at pp.c:13744)
            Decl: name='remaining', quals=[], storage=[] (at pp.c:13745)
              TypeDecl: declname='remaining', quals=[] (at pp.c:13745)
                IdentifierType: names=['uint16_t'] (at None)
              BinaryOp: op='-' (at pp.c:13745)
                ID: name='dt' (at pp.c:13745)
                ID: name='elapsed' (at pp.c:13745)
            If:  (at pp.c:13748)
              BinaryOp: op='<=' (at pp.c:13748)
                ID: name='remaining' (at pp.c:13748)
                Constant: type='int', value='2' (at pp.c:13748)
              Compound:  (at pp.c:13748)
                FuncCall:  (at None)
                  ID: name='Msp430AlarmC__2__Msp430Compare__setEventFromNow' (at pp.c:13749)
                  ExprList:  (at pp.c:13749)
                    Constant: type='int', value='2' (at pp.c:13749)
              Compound:  (at pp.c:13751)
                FuncCall:  (at None)
                  ID: name='Msp430AlarmC__2__Msp430Compare__setEvent' (at pp.c:13753)
                  ExprList:  (at pp.c:13753)
                    BinaryOp: op='+' (at pp.c:13753)
                      ID: name='now' (at pp.c:13753)
                      ID: name='remaining' (at pp.c:13753)
        FuncCall:  (at None)
          ID: name='Msp430AlarmC__2__Msp430TimerControl__clearPendingInterrupt' (at pp.c:13757)
        FuncCall:  (at None)
          ID: name='Msp430AlarmC__2__Msp430TimerControl__enableEvents' (at pp.c:13758)
  FuncDef:  (at pp.c:13763)
    Decl: name='TransformAlarmC__2__AlarmFrom__startAt', quals=[], storage=['static', 'inline'] (at pp.c:13763)
      FuncDecl: quals=None (at pp.c:13763)
        ParamList:  (at pp.c:13763)
          Decl: name='t0', quals=[], storage=[] (at pp.c:13763)
            TypeDecl: declname='t0', quals=[] (at pp.c:13763)
              IdentifierType: names=['TransformAlarmC__2__AlarmFrom__size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:13763)
            TypeDecl: declname='dt', quals=[] (at pp.c:13763)
              IdentifierType: names=['TransformAlarmC__2__AlarmFrom__size_type'] (at None)
        TypeDecl: declname='TransformAlarmC__2__AlarmFrom__startAt', quals=[] (at pp.c:13763)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13763)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__2__Alarm__startAt' (at pp.c:13765)
        ExprList:  (at pp.c:13765)
          ID: name='t0' (at pp.c:13765)
          ID: name='dt' (at pp.c:13765)
  FuncDef:  (at pp.c:13770)
    Decl: name='Msp430TimerCapComP__7__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:13770)
      FuncDecl: quals=None (at pp.c:13770)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Compare__default__fired', quals=[] (at pp.c:13770)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13771)
  FuncDef:  (at pp.c:13775)
    Decl: name='Msp430TimerCapComP__7__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:13775)
      FuncDecl: quals=None (at pp.c:13775)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Compare__fired', quals=[] (at pp.c:13775)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13775)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__7__Compare__default__fired' (at pp.c:13777)
  FuncDef:  (at pp.c:13782)
    Decl: name='Msp430TimerCapComP__7__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:13782)
      FuncDecl: quals=None (at pp.c:13782)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Capture__getEvent', quals=[] (at pp.c:13782)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:13783)
      Return:  (at pp.c:13784)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13784)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='410U' (at pp.c:13784)
  FuncDef:  (at pp.c:13788)
    Decl: name='Msp430TimerCapComP__7__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:13788)
      FuncDecl: quals=None (at pp.c:13788)
        ParamList:  (at pp.c:13788)
          Decl: name='n', quals=[], storage=[] (at pp.c:13788)
            TypeDecl: declname='n', quals=[] (at pp.c:13788)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Capture__default__captured', quals=[] (at pp.c:13788)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13789)
  FuncDef:  (at pp.c:13793)
    Decl: name='Msp430TimerCapComP__7__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:13793)
      FuncDecl: quals=None (at pp.c:13793)
        ParamList:  (at pp.c:13793)
          Decl: name='time', quals=[], storage=[] (at pp.c:13793)
            TypeDecl: declname='time', quals=[] (at pp.c:13793)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Capture__captured', quals=[] (at pp.c:13793)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13793)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__7__Capture__default__captured' (at pp.c:13795)
        ExprList:  (at pp.c:13795)
          ID: name='time' (at pp.c:13795)
  FuncDef:  (at pp.c:13800)
    Decl: name='Msp430TimerCapComP__7__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:13800)
      FuncDecl: quals=None (at pp.c:13800)
        ParamList:  (at pp.c:13800)
          Decl: name='x', quals=[], storage=[] (at pp.c:13800)
            TypeDecl: declname='x', quals=[] (at pp.c:13800)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__int2CC', quals=[] (at pp.c:13800)
          IdentifierType: names=['Msp430TimerCapComP__7__cc_t'] (at None)
    Compound:  (at pp.c:13802)
      Decl: name='c', quals=[], storage=[] (at pp.c:13811)
        TypeDecl: declname='c', quals=[] (at pp.c:13811)
          Union: name='Msp430TimerCapComP__7____nesc_unnamed4390', packed=False (at pp.c:13804)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:13806)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:13808)
                IdentifierType: names=['Msp430TimerCapComP__7__cc_t'] (at None)
        ExprList:  (at pp.c:13811)
          Assignment: op='=' (at pp.c:13811)
            StructRef: type='.' (at pp.c:13811)
              ID: name='f' (at pp.c:13811)
            ID: name='x' (at pp.c:13811)
      Return:  (at pp.c:13814)
        StructRef: type='.' (at pp.c:13814)
          ID: name='c' (at pp.c:13814)
          ID: name='t' (at pp.c:13814)
  FuncDef:  (at pp.c:13818)
    Decl: name='Msp430TimerCapComP__7__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:13818)
      FuncDecl: quals=None (at pp.c:13818)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Control__getControl', quals=[] (at pp.c:13818)
          IdentifierType: names=['Msp430TimerCapComP__7__cc_t'] (at None)
    Compound:  (at pp.c:13819)
      Return:  (at pp.c:13820)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__7__int2CC' (at pp.c:13820)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:13820)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='394U' (at pp.c:13820)
  FuncDef:  (at pp.c:13824)
    Decl: name='Msp430TimerCapComP__7__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:13824)
      FuncDecl: quals=None (at pp.c:13824)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__7__Event__fired', quals=[] (at pp.c:13824)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13825)
      If:  (at pp.c:13826)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__7__Control__getControl' (at pp.c:13826)
          ID: name='cap' (at pp.c:13826)
        Compound:  (at pp.c:13826)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__7__Capture__captured' (at pp.c:13827)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__7__Capture__getEvent' (at pp.c:13827)
        Compound:  (at pp.c:13829)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__7__Compare__fired' (at pp.c:13831)
  FuncDef:  (at pp.c:13838)
    Decl: name='Msp430TimerCapComP__8__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:13838)
      FuncDecl: quals=None (at pp.c:13838)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Compare__default__fired', quals=[] (at pp.c:13838)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13839)
  FuncDef:  (at pp.c:13843)
    Decl: name='Msp430TimerCapComP__8__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:13843)
      FuncDecl: quals=None (at pp.c:13843)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Compare__fired', quals=[] (at pp.c:13843)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13843)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__8__Compare__default__fired' (at pp.c:13845)
  FuncDef:  (at pp.c:13850)
    Decl: name='Msp430TimerCapComP__8__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:13850)
      FuncDecl: quals=None (at pp.c:13850)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Capture__getEvent', quals=[] (at pp.c:13850)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:13851)
      Return:  (at pp.c:13852)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13852)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='412U' (at pp.c:13852)
  FuncDef:  (at pp.c:13856)
    Decl: name='Msp430TimerCapComP__8__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:13856)
      FuncDecl: quals=None (at pp.c:13856)
        ParamList:  (at pp.c:13856)
          Decl: name='n', quals=[], storage=[] (at pp.c:13856)
            TypeDecl: declname='n', quals=[] (at pp.c:13856)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Capture__default__captured', quals=[] (at pp.c:13856)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13857)
  FuncDef:  (at pp.c:13861)
    Decl: name='Msp430TimerCapComP__8__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:13861)
      FuncDecl: quals=None (at pp.c:13861)
        ParamList:  (at pp.c:13861)
          Decl: name='time', quals=[], storage=[] (at pp.c:13861)
            TypeDecl: declname='time', quals=[] (at pp.c:13861)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Capture__captured', quals=[] (at pp.c:13861)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13861)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__8__Capture__default__captured' (at pp.c:13863)
        ExprList:  (at pp.c:13863)
          ID: name='time' (at pp.c:13863)
  FuncDef:  (at pp.c:13868)
    Decl: name='Msp430TimerCapComP__8__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:13868)
      FuncDecl: quals=None (at pp.c:13868)
        ParamList:  (at pp.c:13868)
          Decl: name='x', quals=[], storage=[] (at pp.c:13868)
            TypeDecl: declname='x', quals=[] (at pp.c:13868)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__int2CC', quals=[] (at pp.c:13868)
          IdentifierType: names=['Msp430TimerCapComP__8__cc_t'] (at None)
    Compound:  (at pp.c:13870)
      Decl: name='c', quals=[], storage=[] (at pp.c:13879)
        TypeDecl: declname='c', quals=[] (at pp.c:13879)
          Union: name='Msp430TimerCapComP__8____nesc_unnamed4391', packed=False (at pp.c:13872)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:13874)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:13876)
                IdentifierType: names=['Msp430TimerCapComP__8__cc_t'] (at None)
        ExprList:  (at pp.c:13879)
          Assignment: op='=' (at pp.c:13879)
            StructRef: type='.' (at pp.c:13879)
              ID: name='f' (at pp.c:13879)
            ID: name='x' (at pp.c:13879)
      Return:  (at pp.c:13882)
        StructRef: type='.' (at pp.c:13882)
          ID: name='c' (at pp.c:13882)
          ID: name='t' (at pp.c:13882)
  FuncDef:  (at pp.c:13886)
    Decl: name='Msp430TimerCapComP__8__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:13886)
      FuncDecl: quals=None (at pp.c:13886)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Control__getControl', quals=[] (at pp.c:13886)
          IdentifierType: names=['Msp430TimerCapComP__8__cc_t'] (at None)
    Compound:  (at pp.c:13887)
      Return:  (at pp.c:13888)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__8__int2CC' (at pp.c:13888)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:13888)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='396U' (at pp.c:13888)
  FuncDef:  (at pp.c:13892)
    Decl: name='Msp430TimerCapComP__8__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:13892)
      FuncDecl: quals=None (at pp.c:13892)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__8__Event__fired', quals=[] (at pp.c:13892)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13893)
      If:  (at pp.c:13894)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__8__Control__getControl' (at pp.c:13894)
          ID: name='cap' (at pp.c:13894)
        Compound:  (at pp.c:13894)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__8__Capture__captured' (at pp.c:13895)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__8__Capture__getEvent' (at pp.c:13895)
        Compound:  (at pp.c:13897)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__8__Compare__fired' (at pp.c:13899)
  FuncDef:  (at pp.c:13906)
    Decl: name='Msp430TimerCapComP__9__Compare__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:13906)
      FuncDecl: quals=None (at pp.c:13906)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Compare__default__fired', quals=[] (at pp.c:13906)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13907)
  FuncDef:  (at pp.c:13911)
    Decl: name='Msp430TimerCapComP__9__Compare__fired', quals=[], storage=['static', 'inline'] (at pp.c:13911)
      FuncDecl: quals=None (at pp.c:13911)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Compare__fired', quals=[] (at pp.c:13911)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13911)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__9__Compare__default__fired' (at pp.c:13913)
  FuncDef:  (at pp.c:13918)
    Decl: name='Msp430TimerCapComP__9__Capture__getEvent', quals=[], storage=['inline', 'static'] (at pp.c:13918)
      FuncDecl: quals=None (at pp.c:13918)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Capture__getEvent', quals=[] (at pp.c:13918)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:13919)
      Return:  (at pp.c:13920)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13920)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='414U' (at pp.c:13920)
  FuncDef:  (at pp.c:13924)
    Decl: name='Msp430TimerCapComP__9__Capture__default__captured', quals=[], storage=['inline', 'static'] (at pp.c:13924)
      FuncDecl: quals=None (at pp.c:13924)
        ParamList:  (at pp.c:13924)
          Decl: name='n', quals=[], storage=[] (at pp.c:13924)
            TypeDecl: declname='n', quals=[] (at pp.c:13924)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Capture__default__captured', quals=[] (at pp.c:13924)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13925)
  FuncDef:  (at pp.c:13929)
    Decl: name='Msp430TimerCapComP__9__Capture__captured', quals=[], storage=['static', 'inline'] (at pp.c:13929)
      FuncDecl: quals=None (at pp.c:13929)
        ParamList:  (at pp.c:13929)
          Decl: name='time', quals=[], storage=[] (at pp.c:13929)
            TypeDecl: declname='time', quals=[] (at pp.c:13929)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Capture__captured', quals=[] (at pp.c:13929)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13929)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__9__Capture__default__captured' (at pp.c:13931)
        ExprList:  (at pp.c:13931)
          ID: name='time' (at pp.c:13931)
  FuncDef:  (at pp.c:13936)
    Decl: name='Msp430TimerCapComP__9__int2CC', quals=[], storage=['inline', 'static'] (at pp.c:13936)
      FuncDecl: quals=None (at pp.c:13936)
        ParamList:  (at pp.c:13936)
          Decl: name='x', quals=[], storage=[] (at pp.c:13936)
            TypeDecl: declname='x', quals=[] (at pp.c:13936)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__int2CC', quals=[] (at pp.c:13936)
          IdentifierType: names=['Msp430TimerCapComP__9__cc_t'] (at None)
    Compound:  (at pp.c:13938)
      Decl: name='c', quals=[], storage=[] (at pp.c:13947)
        TypeDecl: declname='c', quals=[] (at pp.c:13947)
          Union: name='Msp430TimerCapComP__9____nesc_unnamed4392', packed=False (at pp.c:13940)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:13942)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:13944)
                IdentifierType: names=['Msp430TimerCapComP__9__cc_t'] (at None)
        ExprList:  (at pp.c:13947)
          Assignment: op='=' (at pp.c:13947)
            StructRef: type='.' (at pp.c:13947)
              ID: name='f' (at pp.c:13947)
            ID: name='x' (at pp.c:13947)
      Return:  (at pp.c:13950)
        StructRef: type='.' (at pp.c:13950)
          ID: name='c' (at pp.c:13950)
          ID: name='t' (at pp.c:13950)
  FuncDef:  (at pp.c:13954)
    Decl: name='Msp430TimerCapComP__9__Control__getControl', quals=[], storage=['inline', 'static'] (at pp.c:13954)
      FuncDecl: quals=None (at pp.c:13954)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Control__getControl', quals=[] (at pp.c:13954)
          IdentifierType: names=['Msp430TimerCapComP__9__cc_t'] (at None)
    Compound:  (at pp.c:13955)
      Return:  (at pp.c:13956)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__9__int2CC' (at pp.c:13956)
          ExprList:  (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:13956)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='398U' (at pp.c:13956)
  FuncDef:  (at pp.c:13960)
    Decl: name='Msp430TimerCapComP__9__Event__fired', quals=[], storage=['inline', 'static'] (at pp.c:13960)
      FuncDecl: quals=None (at pp.c:13960)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__9__Event__fired', quals=[] (at pp.c:13960)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13961)
      If:  (at pp.c:13962)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__9__Control__getControl' (at pp.c:13962)
          ID: name='cap' (at pp.c:13962)
        Compound:  (at pp.c:13962)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__9__Capture__captured' (at pp.c:13963)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__9__Capture__getEvent' (at pp.c:13963)
        Compound:  (at pp.c:13965)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__9__Compare__fired' (at pp.c:13967)
  FuncDef:  (at pp.c:13972)
    Decl: name='Msp430TimerP__1__VectorTimerX1__fired', quals=[], storage=['inline', 'static'] (at pp.c:13972)
      FuncDecl: quals=None (at pp.c:13972)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__VectorTimerX1__fired', quals=[] (at pp.c:13972)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13973)
      Decl: name='n', quals=[], storage=[] (at pp.c:13974)
        TypeDecl: declname='n', quals=[] (at pp.c:13974)
          IdentifierType: names=['uint8_t'] (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:13974)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='286U' (at pp.c:13974)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__1__Event__fired' (at pp.c:13977)
        ExprList:  (at pp.c:13977)
          BinaryOp: op='>>' (at pp.c:13977)
            ID: name='n' (at pp.c:13977)
            Constant: type='int', value='1' (at pp.c:13977)
  FuncDef:  (at pp.c:13981)
    Decl: name='Msp430TimerCommonP__VectorTimerB1__fired', quals=[], storage=['static', 'inline'] (at pp.c:13981)
      FuncDecl: quals=None (at pp.c:13981)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCommonP__VectorTimerB1__fired', quals=[] (at pp.c:13981)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13981)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__1__VectorTimerX1__fired' (at pp.c:13983)
  FuncDef:  (at pp.c:13988)
    Decl: name='SchedulerBasicP__Scheduler__init', quals=[], storage=['inline', 'static'] (at pp.c:13988)
      FuncDecl: quals=None (at pp.c:13988)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SchedulerBasicP__Scheduler__init', quals=[] (at pp.c:13988)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13989)
      Compound:  (at pp.c:13991)
        FuncCall:  (at None)
          ID: name='memset' (at pp.c:13992)
          ExprList:  (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                PtrDecl: quals=[] (at pp.c:13992)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['void'] (at None)
              ID: name='SchedulerBasicP__m_next' (at pp.c:13992)
            ID: name='SchedulerBasicP__NO_TASK' (at pp.c:13992)
            UnaryOp: op='sizeof' (at pp.c:13992)
              ID: name='SchedulerBasicP__m_next' (at pp.c:13992)
        Assignment: op='=' (at pp.c:13993)
          ID: name='SchedulerBasicP__m_head' (at pp.c:13993)
          ID: name='SchedulerBasicP__NO_TASK' (at pp.c:13993)
        Assignment: op='=' (at pp.c:13994)
          ID: name='SchedulerBasicP__m_tail' (at pp.c:13994)
          ID: name='SchedulerBasicP__NO_TASK' (at pp.c:13994)
  FuncDef:  (at pp.c:13999)
    Decl: name='RealMainP__Scheduler__init', quals=[], storage=['static', 'inline'] (at pp.c:13999)
      FuncDecl: quals=None (at pp.c:13999)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__Scheduler__init', quals=[] (at pp.c:13999)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:13999)
      FuncCall:  (at None)
        ID: name='SchedulerBasicP__Scheduler__init' (at pp.c:14001)
  FuncDef:  (at pp.c:14006)
    Decl: name='HplMsp430GeneralIOP__31__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:14006)
      FuncDecl: quals=None (at pp.c:14006)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__31__IO__set', quals=[] (at pp.c:14006)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14008)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:14011)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='29U' (at pp.c:14011)
        BinaryOp: op='<<' (at pp.c:14011)
          Constant: type='int', value='0x01' (at pp.c:14011)
          Constant: type='int', value='7' (at pp.c:14011)
  FuncDef:  (at pp.c:14015)
    Decl: name='Msp430GpioC__9__HplGeneralIO__set', quals=[], storage=['static', 'inline'] (at pp.c:14015)
      FuncDecl: quals=None (at pp.c:14015)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__9__HplGeneralIO__set', quals=[] (at pp.c:14015)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14015)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__31__IO__set' (at pp.c:14017)
  FuncDef:  (at pp.c:14022)
    Decl: name='Msp430GpioC__9__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:14022)
      FuncDecl: quals=None (at pp.c:14022)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__9__GeneralIO__set', quals=[] (at pp.c:14022)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14024)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__9__HplGeneralIO__set' (at pp.c:14026)
  FuncDef:  (at pp.c:14030)
    Decl: name='LedsP__Led2__set', quals=[], storage=['static', 'inline'] (at pp.c:14030)
      FuncDecl: quals=None (at pp.c:14030)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led2__set', quals=[] (at pp.c:14030)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14030)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__9__GeneralIO__set' (at pp.c:14032)
  FuncDef:  (at pp.c:14037)
    Decl: name='HplMsp430GeneralIOP__27__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:14037)
      FuncDecl: quals=None (at pp.c:14037)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__27__IO__set', quals=[] (at pp.c:14037)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14039)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:14042)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='29U' (at pp.c:14042)
        BinaryOp: op='<<' (at pp.c:14042)
          Constant: type='int', value='0x01' (at pp.c:14042)
          Constant: type='int', value='3' (at pp.c:14042)
  FuncDef:  (at pp.c:14046)
    Decl: name='Msp430GpioC__8__HplGeneralIO__set', quals=[], storage=['static', 'inline'] (at pp.c:14046)
      FuncDecl: quals=None (at pp.c:14046)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__8__HplGeneralIO__set', quals=[] (at pp.c:14046)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14046)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__27__IO__set' (at pp.c:14048)
  FuncDef:  (at pp.c:14053)
    Decl: name='Msp430GpioC__8__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:14053)
      FuncDecl: quals=None (at pp.c:14053)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__8__GeneralIO__set', quals=[] (at pp.c:14053)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14055)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__8__HplGeneralIO__set' (at pp.c:14057)
  FuncDef:  (at pp.c:14061)
    Decl: name='LedsP__Led1__set', quals=[], storage=['static', 'inline'] (at pp.c:14061)
      FuncDecl: quals=None (at pp.c:14061)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led1__set', quals=[] (at pp.c:14061)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14061)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__8__GeneralIO__set' (at pp.c:14063)
  FuncDef:  (at pp.c:14068)
    Decl: name='HplMsp430GeneralIOP__24__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:14068)
      FuncDecl: quals=None (at pp.c:14068)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__24__IO__set', quals=[] (at pp.c:14068)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14070)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:14073)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='29U' (at pp.c:14073)
        BinaryOp: op='<<' (at pp.c:14073)
          Constant: type='int', value='0x01' (at pp.c:14073)
          Constant: type='int', value='0' (at pp.c:14073)
  FuncDef:  (at pp.c:14077)
    Decl: name='Msp430GpioC__7__HplGeneralIO__set', quals=[], storage=['static', 'inline'] (at pp.c:14077)
      FuncDecl: quals=None (at pp.c:14077)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__7__HplGeneralIO__set', quals=[] (at pp.c:14077)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14077)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__24__IO__set' (at pp.c:14079)
  FuncDef:  (at pp.c:14084)
    Decl: name='Msp430GpioC__7__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:14084)
      FuncDecl: quals=None (at pp.c:14084)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__7__GeneralIO__set', quals=[] (at pp.c:14084)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14086)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__7__HplGeneralIO__set' (at pp.c:14088)
  FuncDef:  (at pp.c:14092)
    Decl: name='LedsP__Led0__set', quals=[], storage=['static', 'inline'] (at pp.c:14092)
      FuncDecl: quals=None (at pp.c:14092)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led0__set', quals=[] (at pp.c:14092)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14092)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__7__GeneralIO__set' (at pp.c:14094)
  FuncDef:  (at pp.c:14099)
    Decl: name='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:14099)
      FuncDecl: quals=None (at pp.c:14099)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__31__IO__makeOutput', quals=[] (at pp.c:14099)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14101)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:14104)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='30U' (at pp.c:14104)
        BinaryOp: op='<<' (at pp.c:14104)
          Constant: type='int', value='0x01' (at pp.c:14104)
          Constant: type='int', value='7' (at pp.c:14104)
  FuncDef:  (at pp.c:14108)
    Decl: name='Msp430GpioC__9__HplGeneralIO__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:14108)
      FuncDecl: quals=None (at pp.c:14108)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__9__HplGeneralIO__makeOutput', quals=[] (at pp.c:14108)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14108)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__31__IO__makeOutput' (at pp.c:14110)
  FuncDef:  (at pp.c:14115)
    Decl: name='Msp430GpioC__9__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:14115)
      FuncDecl: quals=None (at pp.c:14115)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__9__GeneralIO__makeOutput', quals=[] (at pp.c:14115)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14117)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__9__HplGeneralIO__makeOutput' (at pp.c:14119)
  FuncDef:  (at pp.c:14123)
    Decl: name='LedsP__Led2__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:14123)
      FuncDecl: quals=None (at pp.c:14123)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led2__makeOutput', quals=[] (at pp.c:14123)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14123)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__9__GeneralIO__makeOutput' (at pp.c:14125)
  FuncDef:  (at pp.c:14130)
    Decl: name='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:14130)
      FuncDecl: quals=None (at pp.c:14130)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__27__IO__makeOutput', quals=[] (at pp.c:14130)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14132)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:14135)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='30U' (at pp.c:14135)
        BinaryOp: op='<<' (at pp.c:14135)
          Constant: type='int', value='0x01' (at pp.c:14135)
          Constant: type='int', value='3' (at pp.c:14135)
  FuncDef:  (at pp.c:14139)
    Decl: name='Msp430GpioC__8__HplGeneralIO__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:14139)
      FuncDecl: quals=None (at pp.c:14139)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__8__HplGeneralIO__makeOutput', quals=[] (at pp.c:14139)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14139)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__27__IO__makeOutput' (at pp.c:14141)
  FuncDef:  (at pp.c:14146)
    Decl: name='Msp430GpioC__8__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:14146)
      FuncDecl: quals=None (at pp.c:14146)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__8__GeneralIO__makeOutput', quals=[] (at pp.c:14146)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14148)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__8__HplGeneralIO__makeOutput' (at pp.c:14150)
  FuncDef:  (at pp.c:14154)
    Decl: name='LedsP__Led1__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:14154)
      FuncDecl: quals=None (at pp.c:14154)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led1__makeOutput', quals=[] (at pp.c:14154)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14154)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__8__GeneralIO__makeOutput' (at pp.c:14156)
  FuncDef:  (at pp.c:14161)
    Decl: name='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:14161)
      FuncDecl: quals=None (at pp.c:14161)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__24__IO__makeOutput', quals=[] (at pp.c:14161)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14163)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:14166)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='30U' (at pp.c:14166)
        BinaryOp: op='<<' (at pp.c:14166)
          Constant: type='int', value='0x01' (at pp.c:14166)
          Constant: type='int', value='0' (at pp.c:14166)
  FuncDef:  (at pp.c:14170)
    Decl: name='Msp430GpioC__7__HplGeneralIO__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:14170)
      FuncDecl: quals=None (at pp.c:14170)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__7__HplGeneralIO__makeOutput', quals=[] (at pp.c:14170)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14170)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__24__IO__makeOutput' (at pp.c:14172)
  FuncDef:  (at pp.c:14177)
    Decl: name='Msp430GpioC__7__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:14177)
      FuncDecl: quals=None (at pp.c:14177)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__7__GeneralIO__makeOutput', quals=[] (at pp.c:14177)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14179)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__7__HplGeneralIO__makeOutput' (at pp.c:14181)
  FuncDef:  (at pp.c:14185)
    Decl: name='LedsP__Led0__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:14185)
      FuncDecl: quals=None (at pp.c:14185)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led0__makeOutput', quals=[] (at pp.c:14185)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14185)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__7__GeneralIO__makeOutput' (at pp.c:14187)
  FuncDef:  (at pp.c:14192)
    Decl: name='LedsP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:14192)
      FuncDecl: quals=None (at pp.c:14192)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Init__init', quals=[] (at pp.c:14192)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14194)
      Compound:  (at pp.c:14197)
        FuncCall:  (at None)
          ID: name='LedsP__Led0__makeOutput' (at pp.c:14199)
        FuncCall:  (at None)
          ID: name='LedsP__Led1__makeOutput' (at pp.c:14200)
        FuncCall:  (at None)
          ID: name='LedsP__Led2__makeOutput' (at pp.c:14201)
        FuncCall:  (at None)
          ID: name='LedsP__Led0__set' (at pp.c:14202)
        FuncCall:  (at None)
          ID: name='LedsP__Led1__set' (at pp.c:14203)
        FuncCall:  (at None)
          ID: name='LedsP__Led2__set' (at pp.c:14204)
      Return:  (at pp.c:14206)
        ID: name='SUCCESS' (at pp.c:14206)
  FuncDef:  (at pp.c:14210)
    Decl: name='PlatformP__LedsInit__init', quals=[], storage=['static', 'inline'] (at pp.c:14210)
      FuncDecl: quals=None (at pp.c:14210)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='PlatformP__LedsInit__init', quals=[] (at pp.c:14210)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14210)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14212)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14212)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14216)
        ID: name='__nesc_result' (at pp.c:14216)
        FuncCall:  (at None)
          ID: name='LedsP__Init__init' (at pp.c:14216)
      Return:  (at pp.c:14220)
        ID: name='__nesc_result' (at pp.c:14220)
  FuncDef:  (at pp.c:14225)
    Decl: name='MotePlatformC__SubInit__default__init', quals=[], storage=['inline', 'static'] (at pp.c:14225)
      FuncDecl: quals=None (at pp.c:14225)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='MotePlatformC__SubInit__default__init', quals=[] (at pp.c:14225)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14227)
      Return:  (at pp.c:14229)
        ID: name='SUCCESS' (at pp.c:14229)
  FuncDef:  (at pp.c:14233)
    Decl: name='MotePlatformC__SubInit__init', quals=[], storage=['static', 'inline'] (at pp.c:14233)
      FuncDecl: quals=None (at pp.c:14233)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='MotePlatformC__SubInit__init', quals=[] (at pp.c:14233)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14233)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14235)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14235)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14239)
        ID: name='__nesc_result' (at pp.c:14239)
        FuncCall:  (at None)
          ID: name='MotePlatformC__SubInit__default__init' (at pp.c:14239)
      Return:  (at pp.c:14243)
        ID: name='__nesc_result' (at pp.c:14243)
  FuncDef:  (at pp.c:14248)
    Decl: name='MotePlatformC__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:14248)
      FuncDecl: quals=None (at pp.c:14248)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='MotePlatformC__Init__init', quals=[] (at pp.c:14248)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14250)
      Compound:  (at pp.c:14253)
        Assignment: op='=' (at pp.c:14254)
          ID: name='P1SEL' (at pp.c:14254)
          Constant: type='int', value='0' (at pp.c:14254)
        Assignment: op='=' (at pp.c:14255)
          ID: name='P2SEL' (at pp.c:14255)
          Constant: type='int', value='0' (at pp.c:14255)
        Assignment: op='=' (at pp.c:14256)
          ID: name='P3SEL' (at pp.c:14256)
          Constant: type='int', value='0' (at pp.c:14256)
        Assignment: op='=' (at pp.c:14257)
          ID: name='P4SEL' (at pp.c:14257)
          Constant: type='int', value='0' (at pp.c:14257)
        Assignment: op='=' (at pp.c:14258)
          ID: name='P5SEL' (at pp.c:14258)
          Constant: type='int', value='0' (at pp.c:14258)
        Assignment: op='=' (at pp.c:14259)
          ID: name='P6SEL' (at pp.c:14259)
          Constant: type='int', value='0' (at pp.c:14259)
        Assignment: op='=' (at pp.c:14261)
          ID: name='P1OUT' (at pp.c:14261)
          Constant: type='int', value='0x00' (at pp.c:14261)
        Assignment: op='=' (at pp.c:14262)
          ID: name='P1DIR' (at pp.c:14262)
          Constant: type='int', value='0xe0' (at pp.c:14262)
        Assignment: op='=' (at pp.c:14264)
          ID: name='P2OUT' (at pp.c:14264)
          Constant: type='int', value='0x30' (at pp.c:14264)
        Assignment: op='=' (at pp.c:14265)
          ID: name='P2DIR' (at pp.c:14265)
          Constant: type='int', value='0x7b' (at pp.c:14265)
        Assignment: op='=' (at pp.c:14267)
          ID: name='P3OUT' (at pp.c:14267)
          Constant: type='int', value='0x00' (at pp.c:14267)
        Assignment: op='=' (at pp.c:14268)
          ID: name='P3DIR' (at pp.c:14268)
          Constant: type='int', value='0xf1' (at pp.c:14268)
        Assignment: op='=' (at pp.c:14270)
          ID: name='P4OUT' (at pp.c:14270)
          Constant: type='int', value='0xdd' (at pp.c:14270)
        Assignment: op='=' (at pp.c:14271)
          ID: name='P4DIR' (at pp.c:14271)
          Constant: type='int', value='0xfd' (at pp.c:14271)
        Assignment: op='=' (at pp.c:14273)
          ID: name='P5OUT' (at pp.c:14273)
          Constant: type='int', value='0xff' (at pp.c:14273)
        Assignment: op='=' (at pp.c:14274)
          ID: name='P5DIR' (at pp.c:14274)
          Constant: type='int', value='0xff' (at pp.c:14274)
        Assignment: op='=' (at pp.c:14276)
          ID: name='P6OUT' (at pp.c:14276)
          Constant: type='int', value='0x00' (at pp.c:14276)
        Assignment: op='=' (at pp.c:14277)
          ID: name='P6DIR' (at pp.c:14277)
          Constant: type='int', value='0xff' (at pp.c:14277)
        Assignment: op='=' (at pp.c:14279)
          ID: name='P1IE' (at pp.c:14279)
          Constant: type='int', value='0' (at pp.c:14279)
        Assignment: op='=' (at pp.c:14280)
          ID: name='P2IE' (at pp.c:14280)
          Constant: type='int', value='0' (at pp.c:14280)
      Return:  (at pp.c:14287)
        FuncCall:  (at None)
          ID: name='MotePlatformC__SubInit__init' (at pp.c:14287)
  FuncDef:  (at pp.c:14291)
    Decl: name='PlatformP__MoteInit__init', quals=[], storage=['static', 'inline'] (at pp.c:14291)
      FuncDecl: quals=None (at pp.c:14291)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='PlatformP__MoteInit__init', quals=[] (at pp.c:14291)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14291)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14293)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14293)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14297)
        ID: name='__nesc_result' (at pp.c:14297)
        FuncCall:  (at None)
          ID: name='MotePlatformC__Init__init' (at pp.c:14297)
      Return:  (at pp.c:14301)
        ID: name='__nesc_result' (at pp.c:14301)
  FuncDef:  (at pp.c:14306)
    Decl: name='Msp430ClockP__startTimerB', quals=[], storage=['inline', 'static'] (at pp.c:14306)
      FuncDecl: quals=None (at pp.c:14306)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__startTimerB', quals=[] (at pp.c:14306)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14307)
      Assignment: op='=' (at pp.c:14309)
        ID: name='Msp430ClockP__TBCTL' (at pp.c:14309)
        BinaryOp: op='|' (at pp.c:14309)
          Constant: type='int', value='0x0020' (at pp.c:14309)
          BinaryOp: op='&' (at pp.c:14309)
            ID: name='Msp430ClockP__TBCTL' (at pp.c:14309)
            UnaryOp: op='~' (at pp.c:14309)
              BinaryOp: op='|' (at pp.c:14309)
                Constant: type='int', value='0x0020' (at pp.c:14309)
                Constant: type='int', value='0x0010' (at pp.c:14309)
  FuncDef:  (at pp.c:14313)
    Decl: name='Msp430ClockP__startTimerA', quals=[], storage=['inline', 'static'] (at pp.c:14313)
      FuncDecl: quals=None (at pp.c:14313)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__startTimerA', quals=[] (at pp.c:14313)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14314)
      Assignment: op='=' (at pp.c:14316)
        ID: name='Msp430ClockP__TA0CTL' (at pp.c:14316)
        BinaryOp: op='|' (at pp.c:14316)
          Constant: type='int', value='0x0020' (at pp.c:14316)
          BinaryOp: op='&' (at pp.c:14316)
            ID: name='Msp430ClockP__TA0CTL' (at pp.c:14316)
            UnaryOp: op='~' (at pp.c:14316)
              BinaryOp: op='|' (at pp.c:14316)
                Constant: type='int', value='0x0020' (at pp.c:14316)
                Constant: type='int', value='0x0010' (at pp.c:14316)
  FuncDef:  (at pp.c:14320)
    Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[], storage=['inline', 'static'] (at pp.c:14320)
      FuncDecl: quals=None (at pp.c:14320)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerB', quals=[] (at pp.c:14320)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14321)
      Assignment: op='=' (at pp.c:14322)
        ID: name='TBR' (at pp.c:14322)
        Constant: type='int', value='0' (at pp.c:14322)
      Assignment: op='=' (at pp.c:14332)
        ID: name='Msp430ClockP__TBCTL' (at pp.c:14332)
        BinaryOp: op='|' (at pp.c:14332)
          Constant: type='int', value='0x0100' (at pp.c:14332)
          Constant: type='int', value='0x0002' (at pp.c:14332)
  FuncDef:  (at pp.c:14336)
    Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[], storage=['inline', 'static'] (at pp.c:14336)
      FuncDecl: quals=None (at pp.c:14336)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerB', quals=[] (at pp.c:14336)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14337)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerB' (at pp.c:14338)
  FuncDef:  (at pp.c:14342)
    Decl: name='Msp430ClockP__Msp430ClockInit__initTimerB', quals=[], storage=['static', 'inline'] (at pp.c:14342)
      FuncDecl: quals=None (at pp.c:14342)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initTimerB', quals=[] (at pp.c:14342)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14342)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__default__initTimerB' (at pp.c:14344)
  FuncDef:  (at pp.c:14349)
    Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[], storage=['inline', 'static'] (at pp.c:14349)
      FuncDecl: quals=None (at pp.c:14349)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitTimerA', quals=[] (at pp.c:14349)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14350)
      Assignment: op='=' (at pp.c:14351)
        ID: name='TA0R' (at pp.c:14351)
        Constant: type='int', value='0' (at pp.c:14351)
      Assignment: op='=' (at pp.c:14361)
        ID: name='Msp430ClockP__TA0CTL' (at pp.c:14361)
        BinaryOp: op='|' (at pp.c:14361)
          Constant: type='int', value='0x0200' (at pp.c:14361)
          Constant: type='int', value='0x0002' (at pp.c:14361)
  FuncDef:  (at pp.c:14365)
    Decl: name='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[], storage=['inline', 'static'] (at pp.c:14365)
      FuncDecl: quals=None (at pp.c:14365)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initTimerA', quals=[] (at pp.c:14365)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14366)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__defaultInitTimerA' (at pp.c:14367)
  FuncDef:  (at pp.c:14371)
    Decl: name='Msp430ClockP__Msp430ClockInit__initTimerA', quals=[], storage=['static', 'inline'] (at pp.c:14371)
      FuncDecl: quals=None (at pp.c:14371)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initTimerA', quals=[] (at pp.c:14371)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14371)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__default__initTimerA' (at pp.c:14373)
  FuncDef:  (at pp.c:14378)
    Decl: name='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[], storage=['inline', 'static'] (at pp.c:14378)
      FuncDecl: quals=None (at pp.c:14378)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultInitClocks', quals=[] (at pp.c:14378)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14379)
      Assignment: op='=' (at pp.c:14385)
        ID: name='BCSCTL1' (at pp.c:14385)
        BinaryOp: op='|' (at pp.c:14385)
          Constant: type='int', value='0x80' (at pp.c:14385)
          BinaryOp: op='&' (at pp.c:14385)
            ID: name='BCSCTL1' (at pp.c:14385)
            BinaryOp: op='|' (at pp.c:14385)
              BinaryOp: op='|' (at pp.c:14385)
                Constant: type='int', value='0x04' (at pp.c:14385)
                Constant: type='int', value='0x02' (at pp.c:14385)
              Constant: type='int', value='0x01' (at pp.c:14385)
      Assignment: op='=' (at pp.c:14393)
        ID: name='BCSCTL2' (at pp.c:14393)
        Constant: type='int', value='0x04' (at pp.c:14393)
      Assignment: op='&=' (at pp.c:14396)
        ID: name='Msp430ClockP__IE1' (at pp.c:14396)
        UnaryOp: op='~' (at pp.c:14396)
          BinaryOp: op='<<' (at pp.c:14396)
            Constant: type='int', value='1' (at pp.c:14396)
            Constant: type='int', value='1' (at pp.c:14396)
  FuncDef:  (at pp.c:14400)
    Decl: name='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[], storage=['inline', 'static'] (at pp.c:14400)
      FuncDecl: quals=None (at pp.c:14400)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__initClocks', quals=[] (at pp.c:14400)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14401)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__defaultInitClocks' (at pp.c:14402)
  FuncDef:  (at pp.c:14406)
    Decl: name='Msp430ClockP__Msp430ClockInit__initClocks', quals=[], storage=['static', 'inline'] (at pp.c:14406)
      FuncDecl: quals=None (at pp.c:14406)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__initClocks', quals=[] (at pp.c:14406)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14406)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__default__initClocks' (at pp.c:14408)
  FuncDef:  (at pp.c:14413)
    Decl: name='Msp430ClockP__test_calib_busywait_delta', quals=[], storage=['inline', 'static'] (at pp.c:14413)
      FuncDecl: quals=None (at pp.c:14413)
        ParamList:  (at pp.c:14413)
          Decl: name='calib', quals=[], storage=[] (at pp.c:14413)
            TypeDecl: declname='calib', quals=[] (at pp.c:14413)
              IdentifierType: names=['int'] (at None)
        TypeDecl: declname='Msp430ClockP__test_calib_busywait_delta', quals=[] (at pp.c:14413)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:14414)
      Decl: name='aclk_count', quals=[], storage=[] (at pp.c:14415)
        TypeDecl: declname='aclk_count', quals=[] (at pp.c:14415)
          IdentifierType: names=['int8_t'] (at None)
        Constant: type='int', value='2' (at pp.c:14415)
      Decl: name='dco_prev', quals=[], storage=[] (at pp.c:14416)
        TypeDecl: declname='dco_prev', quals=[] (at pp.c:14416)
          IdentifierType: names=['uint16_t'] (at None)
        Constant: type='int', value='0' (at pp.c:14416)
      Decl: name='dco_curr', quals=[], storage=[] (at pp.c:14417)
        TypeDecl: declname='dco_curr', quals=[] (at pp.c:14417)
          IdentifierType: names=['uint16_t'] (at None)
        Constant: type='int', value='0' (at pp.c:14417)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__set_dco_calib' (at pp.c:14419)
        ExprList:  (at pp.c:14419)
          ID: name='calib' (at pp.c:14419)
      While:  (at pp.c:14421)
        BinaryOp: op='>' (at pp.c:14421)
          UnaryOp: op='p--' (at pp.c:14421)
            ID: name='aclk_count' (at pp.c:14421)
          Constant: type='int', value='0' (at pp.c:14421)
        Compound:  (at pp.c:14422)
          Assignment: op='=' (at pp.c:14423)
            ID: name='TBCCR0' (at pp.c:14423)
            BinaryOp: op='+' (at pp.c:14423)
              ID: name='TBR' (at pp.c:14423)
              ID: name='Msp430ClockP__ACLK_CALIB_PERIOD' (at pp.c:14423)
          Assignment: op='&=' (at pp.c:14424)
            ID: name='TBCCTL0' (at pp.c:14424)
            UnaryOp: op='~' (at pp.c:14424)
              Constant: type='int', value='0x0001' (at pp.c:14424)
          While:  (at pp.c:14425)
            BinaryOp: op='==' (at pp.c:14425)
              BinaryOp: op='&' (at pp.c:14425)
                ID: name='TBCCTL0' (at pp.c:14425)
                Constant: type='int', value='0x0001' (at pp.c:14425)
              Constant: type='int', value='0' (at pp.c:14425)
          Assignment: op='=' (at pp.c:14426)
            ID: name='dco_prev' (at pp.c:14426)
            ID: name='dco_curr' (at pp.c:14426)
          Assignment: op='=' (at pp.c:14427)
            ID: name='dco_curr' (at pp.c:14427)
            ID: name='TA0R' (at pp.c:14427)
      Return:  (at pp.c:14430)
        BinaryOp: op='-' (at pp.c:14430)
          ID: name='dco_curr' (at pp.c:14430)
          ID: name='dco_prev' (at pp.c:14430)
  FuncDef:  (at pp.c:14436)
    Decl: name='Msp430ClockP__busyCalibrateDco', quals=[], storage=['inline', 'static'] (at pp.c:14436)
      FuncDecl: quals=None (at pp.c:14436)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__busyCalibrateDco', quals=[] (at pp.c:14436)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14437)
      Decl: name='calib', quals=[], storage=[] (at pp.c:14439)
        TypeDecl: declname='calib', quals=[] (at pp.c:14439)
          IdentifierType: names=['int'] (at None)
      Decl: name='step', quals=[], storage=[] (at pp.c:14440)
        TypeDecl: declname='step', quals=[] (at pp.c:14440)
          IdentifierType: names=['int'] (at None)
      For:  (at pp.c:14447)
        ExprList:  (at pp.c:14447)
          Assignment: op='=' (at pp.c:14447)
            ID: name='calib' (at pp.c:14447)
            Constant: type='int', value='0' (at pp.c:14447)
          Assignment: op='=' (at pp.c:14447)
            ID: name='step' (at pp.c:14447)
            Constant: type='int', value='0x800' (at pp.c:14447)
        BinaryOp: op='!=' (at pp.c:14447)
          ID: name='step' (at pp.c:14447)
          Constant: type='int', value='0' (at pp.c:14447)
        Assignment: op='>>=' (at pp.c:14447)
          ID: name='step' (at pp.c:14447)
          Constant: type='int', value='1' (at pp.c:14447)
        Compound:  (at pp.c:14448)
          If:  (at pp.c:14450)
            BinaryOp: op='<=' (at None)
              FuncCall:  (at None)
                ID: name='Msp430ClockP__test_calib_busywait_delta' (at pp.c:14450)
                ExprList:  (at pp.c:14450)
                  BinaryOp: op='|' (at pp.c:14450)
                    ID: name='calib' (at pp.c:14450)
                    ID: name='step' (at pp.c:14450)
              ID: name='Msp430ClockP__TARGET_DCO_DELTA' (at pp.c:14450)
            Compound:  (at pp.c:14450)
              Assignment: op='|=' (at pp.c:14451)
                ID: name='calib' (at pp.c:14451)
                ID: name='step' (at pp.c:14451)
      If:  (at pp.c:14455)
        BinaryOp: op='==' (at pp.c:14455)
          BinaryOp: op='&' (at pp.c:14455)
            ID: name='calib' (at pp.c:14455)
            Constant: type='int', value='0x0e0' (at pp.c:14455)
          Constant: type='int', value='0x0e0' (at pp.c:14455)
        Compound:  (at pp.c:14455)
          Assignment: op='&=' (at pp.c:14456)
            ID: name='calib' (at pp.c:14456)
            UnaryOp: op='~' (at pp.c:14456)
              Constant: type='int', value='0x01f' (at pp.c:14456)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__set_dco_calib' (at pp.c:14458)
        ExprList:  (at pp.c:14458)
          ID: name='calib' (at pp.c:14458)
  FuncDef:  (at pp.c:14462)
    Decl: name='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[], storage=['inline', 'static'] (at pp.c:14462)
      FuncDecl: quals=None (at pp.c:14462)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate', quals=[] (at pp.c:14462)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14463)
      Assignment: op='=' (at pp.c:14467)
        ID: name='Msp430ClockP__TA0CTL' (at pp.c:14467)
        BinaryOp: op='|' (at pp.c:14467)
          Constant: type='int', value='0x0200' (at pp.c:14467)
          Constant: type='int', value='0x0020' (at pp.c:14467)
      Assignment: op='=' (at pp.c:14468)
        ID: name='Msp430ClockP__TBCTL' (at pp.c:14468)
        BinaryOp: op='|' (at pp.c:14468)
          Constant: type='int', value='0x0100' (at pp.c:14468)
          Constant: type='int', value='0x0020' (at pp.c:14468)
      Assignment: op='=' (at pp.c:14469)
        ID: name='BCSCTL1' (at pp.c:14469)
        BinaryOp: op='|' (at pp.c:14469)
          Constant: type='int', value='0x80' (at pp.c:14469)
          Constant: type='int', value='0x04' (at pp.c:14469)
      Assignment: op='=' (at pp.c:14470)
        ID: name='BCSCTL2' (at pp.c:14470)
        Constant: type='int', value='0' (at pp.c:14470)
      Assignment: op='=' (at pp.c:14471)
        ID: name='TBCCTL0' (at pp.c:14471)
        Constant: type='int', value='0x4000' (at pp.c:14471)
  FuncDef:  (at pp.c:14475)
    Decl: name='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[], storage=['inline', 'static'] (at pp.c:14475)
      FuncDecl: quals=None (at pp.c:14475)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate', quals=[] (at pp.c:14475)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14476)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate' (at pp.c:14477)
  FuncDef:  (at pp.c:14481)
    Decl: name='Msp430ClockP__Msp430ClockInit__setupDcoCalibrate', quals=[], storage=['static', 'inline'] (at pp.c:14481)
      FuncDecl: quals=None (at pp.c:14481)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Msp430ClockInit__setupDcoCalibrate', quals=[] (at pp.c:14481)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14481)
      FuncCall:  (at None)
        ID: name='Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate' (at pp.c:14483)
  FuncDef:  (at pp.c:14488)
    Decl: name='Msp430ClockP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:14488)
      FuncDecl: quals=None (at pp.c:14488)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__Init__init', quals=[] (at pp.c:14488)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14489)
      Assignment: op='=' (at pp.c:14491)
        ID: name='Msp430ClockP__TA0CTL' (at pp.c:14491)
        Constant: type='int', value='0x0004' (at pp.c:14491)
      Assignment: op='=' (at pp.c:14492)
        ID: name='Msp430ClockP__TA0IV' (at pp.c:14492)
        Constant: type='int', value='0' (at pp.c:14492)
      Assignment: op='=' (at pp.c:14493)
        ID: name='Msp430ClockP__TBCTL' (at pp.c:14493)
        Constant: type='int', value='0x0004' (at pp.c:14493)
      Assignment: op='=' (at pp.c:14494)
        ID: name='Msp430ClockP__TBIV' (at pp.c:14494)
        Constant: type='int', value='0' (at pp.c:14494)
      Compound:  (at pp.c:14497)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__Msp430ClockInit__setupDcoCalibrate' (at pp.c:14498)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__busyCalibrateDco' (at pp.c:14499)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__Msp430ClockInit__initClocks' (at pp.c:14500)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__Msp430ClockInit__initTimerA' (at pp.c:14501)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__Msp430ClockInit__initTimerB' (at pp.c:14502)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__startTimerA' (at pp.c:14503)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__startTimerB' (at pp.c:14504)
      Return:  (at pp.c:14507)
        ID: name='SUCCESS' (at pp.c:14507)
  FuncDef:  (at pp.c:14511)
    Decl: name='PlatformP__MoteClockInit__init', quals=[], storage=['static', 'inline'] (at pp.c:14511)
      FuncDecl: quals=None (at pp.c:14511)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='PlatformP__MoteClockInit__init', quals=[] (at pp.c:14511)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14511)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14513)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14513)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14517)
        ID: name='__nesc_result' (at pp.c:14517)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__Init__init' (at pp.c:14517)
      Return:  (at pp.c:14521)
        ID: name='__nesc_result' (at pp.c:14521)
  FuncDef:  (at pp.c:14526)
    Decl: name='PlatformP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:14526)
      FuncDecl: quals=None (at pp.c:14526)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='PlatformP__Init__init', quals=[] (at pp.c:14526)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14528)
      FuncCall:  (at None)
        ID: name='PlatformP__MoteClockInit__init' (at pp.c:14529)
      FuncCall:  (at None)
        ID: name='PlatformP__MoteInit__init' (at pp.c:14530)
      FuncCall:  (at None)
        ID: name='PlatformP__LedsInit__init' (at pp.c:14531)
      Return:  (at pp.c:14532)
        ID: name='SUCCESS' (at pp.c:14532)
  FuncDef:  (at pp.c:14536)
    Decl: name='RealMainP__PlatformInit__init', quals=[], storage=['static', 'inline'] (at pp.c:14536)
      FuncDecl: quals=None (at pp.c:14536)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__PlatformInit__init', quals=[] (at pp.c:14536)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14536)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14538)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14538)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14542)
        ID: name='__nesc_result' (at pp.c:14542)
        FuncCall:  (at None)
          ID: name='PlatformP__Init__init' (at pp.c:14542)
      Return:  (at pp.c:14546)
        ID: name='__nesc_result' (at pp.c:14546)
  FuncDef:  (at pp.c:14551)
    Decl: name='RealMainP__Scheduler__runNextTask', quals=[], storage=['static', 'inline'] (at pp.c:14551)
      FuncDecl: quals=None (at pp.c:14551)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__Scheduler__runNextTask', quals=[] (at pp.c:14551)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:14551)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14553)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14553)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14557)
        ID: name='__nesc_result' (at pp.c:14557)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__Scheduler__runNextTask' (at pp.c:14557)
      Return:  (at pp.c:14561)
        ID: name='__nesc_result' (at pp.c:14561)
  FuncDef:  (at pp.c:14566)
    Decl: name='Msp430GpioC__7__HplGeneralIO__toggle', quals=[], storage=['static', 'inline'] (at pp.c:14566)
      FuncDecl: quals=None (at pp.c:14566)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__7__HplGeneralIO__toggle', quals=[] (at pp.c:14566)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14566)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__24__IO__toggle' (at pp.c:14568)
  FuncDef:  (at pp.c:14573)
    Decl: name='Msp430GpioC__7__GeneralIO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:14573)
      FuncDecl: quals=None (at pp.c:14573)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__7__GeneralIO__toggle', quals=[] (at pp.c:14573)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14575)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__7__HplGeneralIO__toggle' (at pp.c:14577)
  FuncDef:  (at pp.c:14581)
    Decl: name='LedsP__Led0__toggle', quals=[], storage=['static', 'inline'] (at pp.c:14581)
      FuncDecl: quals=None (at pp.c:14581)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led0__toggle', quals=[] (at pp.c:14581)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14581)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__7__GeneralIO__toggle' (at pp.c:14583)
  FuncDef:  (at pp.c:14588)
    Decl: name='LedsP__Leds__led0Toggle', quals=[], storage=['inline', 'static'] (at pp.c:14588)
      FuncDecl: quals=None (at pp.c:14588)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Leds__led0Toggle', quals=[] (at pp.c:14588)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14590)
      FuncCall:  (at None)
        ID: name='LedsP__Led0__toggle' (at pp.c:14591)
  FuncDef:  (at pp.c:14598)
    Decl: name='OscilloscopeC__Leds__led0Toggle', quals=[], storage=['static', 'inline'] (at pp.c:14598)
      FuncDecl: quals=None (at pp.c:14598)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OscilloscopeC__Leds__led0Toggle', quals=[] (at pp.c:14598)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14598)
      FuncCall:  (at None)
        ID: name='LedsP__Leds__led0Toggle' (at pp.c:14600)
  FuncDef:  (at pp.c:14605)
    Decl: name='OscilloscopeC__report_problem', quals=[], storage=['inline', 'static'] (at pp.c:14605)
      FuncDecl: quals=None (at pp.c:14605)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OscilloscopeC__report_problem', quals=[] (at pp.c:14605)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14607)
      FuncCall:  (at None)
        ID: name='OscilloscopeC__Leds__led0Toggle' (at pp.c:14609)
  FuncDef:  (at pp.c:14613)
    Decl: name='Msp430GpioC__8__HplGeneralIO__toggle', quals=[], storage=['static', 'inline'] (at pp.c:14613)
      FuncDecl: quals=None (at pp.c:14613)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__8__HplGeneralIO__toggle', quals=[] (at pp.c:14613)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14613)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__27__IO__toggle' (at pp.c:14615)
  FuncDef:  (at pp.c:14620)
    Decl: name='Msp430GpioC__8__GeneralIO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:14620)
      FuncDecl: quals=None (at pp.c:14620)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__8__GeneralIO__toggle', quals=[] (at pp.c:14620)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14622)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__8__HplGeneralIO__toggle' (at pp.c:14624)
  FuncDef:  (at pp.c:14628)
    Decl: name='LedsP__Led1__toggle', quals=[], storage=['static', 'inline'] (at pp.c:14628)
      FuncDecl: quals=None (at pp.c:14628)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led1__toggle', quals=[] (at pp.c:14628)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14628)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__8__GeneralIO__toggle' (at pp.c:14630)
  FuncDef:  (at pp.c:14635)
    Decl: name='LedsP__Leds__led1Toggle', quals=[], storage=['inline', 'static'] (at pp.c:14635)
      FuncDecl: quals=None (at pp.c:14635)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Leds__led1Toggle', quals=[] (at pp.c:14635)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14637)
      FuncCall:  (at None)
        ID: name='LedsP__Led1__toggle' (at pp.c:14638)
  FuncDef:  (at pp.c:14645)
    Decl: name='OscilloscopeC__Leds__led1Toggle', quals=[], storage=['static', 'inline'] (at pp.c:14645)
      FuncDecl: quals=None (at pp.c:14645)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OscilloscopeC__Leds__led1Toggle', quals=[] (at pp.c:14645)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14645)
      FuncCall:  (at None)
        ID: name='LedsP__Leds__led1Toggle' (at pp.c:14647)
  FuncDef:  (at pp.c:14652)
    Decl: name='OscilloscopeC__report_sent', quals=[], storage=['inline', 'static'] (at pp.c:14652)
      FuncDecl: quals=None (at pp.c:14652)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OscilloscopeC__report_sent', quals=[] (at pp.c:14652)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14654)
      FuncCall:  (at None)
        ID: name='OscilloscopeC__Leds__led1Toggle' (at pp.c:14656)
  FuncDef:  (at pp.c:14660)
    Decl: name='OscilloscopeC__AMSend__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:14660)
      FuncDecl: quals=None (at pp.c:14660)
        ParamList:  (at pp.c:14660)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14660)
            PtrDecl: quals=[] (at pp.c:14660)
              TypeDecl: declname='msg', quals=[] (at pp.c:14660)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:14660)
            TypeDecl: declname='error', quals=[] (at pp.c:14660)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='OscilloscopeC__AMSend__sendDone', quals=[] (at pp.c:14660)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14662)
      If:  (at pp.c:14663)
        BinaryOp: op='==' (at pp.c:14663)
          ID: name='error' (at pp.c:14663)
          ID: name='SUCCESS' (at pp.c:14663)
        Compound:  (at pp.c:14663)
          FuncCall:  (at None)
            ID: name='OscilloscopeC__report_sent' (at pp.c:14664)
        Compound:  (at pp.c:14666)
          FuncCall:  (at None)
            ID: name='OscilloscopeC__report_problem' (at pp.c:14668)
      Assignment: op='=' (at pp.c:14670)
        ID: name='OscilloscopeC__sendBusy' (at pp.c:14670)
        ID: name='FALSE' (at pp.c:14670)
  FuncDef:  (at pp.c:14674)
    Decl: name='AMQueueEntryP__0__AMSend__sendDone', quals=[], storage=['static', 'inline'] (at pp.c:14674)
      FuncDecl: quals=None (at pp.c:14674)
        ParamList:  (at pp.c:14674)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14674)
            PtrDecl: quals=[] (at pp.c:14674)
              TypeDecl: declname='msg', quals=[] (at pp.c:14674)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:14674)
            TypeDecl: declname='error', quals=[] (at pp.c:14674)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='AMQueueEntryP__0__AMSend__sendDone', quals=[] (at pp.c:14674)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14674)
      FuncCall:  (at None)
        ID: name='OscilloscopeC__AMSend__sendDone' (at pp.c:14676)
        ExprList:  (at pp.c:14676)
          ID: name='msg' (at pp.c:14676)
          ID: name='error' (at pp.c:14676)
  FuncDef:  (at pp.c:14681)
    Decl: name='AMQueueEntryP__0__Send__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:14681)
      FuncDecl: quals=None (at pp.c:14681)
        ParamList:  (at pp.c:14681)
          Decl: name='m', quals=[], storage=[] (at pp.c:14681)
            PtrDecl: quals=[] (at pp.c:14681)
              TypeDecl: declname='m', quals=[] (at pp.c:14681)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='err', quals=[], storage=[] (at pp.c:14681)
            TypeDecl: declname='err', quals=[] (at pp.c:14681)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='AMQueueEntryP__0__Send__sendDone', quals=[] (at pp.c:14681)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14683)
      FuncCall:  (at None)
        ID: name='AMQueueEntryP__0__AMSend__sendDone' (at pp.c:14684)
        ExprList:  (at pp.c:14684)
          ID: name='m' (at pp.c:14684)
          ID: name='err' (at pp.c:14684)
  FuncDef:  (at pp.c:14688)
    Decl: name='AMQueueImplP__0__Send__default__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:14688)
      FuncDecl: quals=None (at pp.c:14688)
        ParamList:  (at pp.c:14688)
          Decl: name='id', quals=[], storage=[] (at pp.c:14688)
            TypeDecl: declname='id', quals=[] (at pp.c:14688)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14688)
            PtrDecl: quals=[] (at pp.c:14688)
              TypeDecl: declname='msg', quals=[] (at pp.c:14688)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='err', quals=[], storage=[] (at pp.c:14688)
            TypeDecl: declname='err', quals=[] (at pp.c:14688)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='AMQueueImplP__0__Send__default__sendDone', quals=[] (at pp.c:14688)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14690)
  FuncDef:  (at pp.c:14694)
    Decl: name='AMQueueImplP__0__Send__sendDone', quals=[], storage=['static', 'inline'] (at pp.c:14694)
      FuncDecl: quals=None (at pp.c:14694)
        ParamList:  (at pp.c:14694)
          Decl: name='arg_0x1029ea990', quals=[], storage=[] (at pp.c:14694)
            TypeDecl: declname='arg_0x1029ea990', quals=[] (at pp.c:14694)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14694)
            PtrDecl: quals=[] (at pp.c:14694)
              TypeDecl: declname='msg', quals=[] (at pp.c:14694)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:14694)
            TypeDecl: declname='error', quals=[] (at pp.c:14694)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='AMQueueImplP__0__Send__sendDone', quals=[] (at pp.c:14694)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14694)
      Switch:  (at pp.c:14696)
        ID: name='arg_0x1029ea990' (at pp.c:14696)
        Compound:  (at pp.c:14696)
          Case:  (at pp.c:14698)
            Constant: type='int', value='0U' (at pp.c:14698)
            FuncCall:  (at None)
              ID: name='AMQueueEntryP__0__Send__sendDone' (at pp.c:14700)
              ExprList:  (at pp.c:14700)
                ID: name='msg' (at pp.c:14700)
                ID: name='error' (at pp.c:14700)
          Break:  (at pp.c:14702)
          Default:  (at pp.c:14704)
            FuncCall:  (at None)
              ID: name='AMQueueImplP__0__Send__default__sendDone' (at pp.c:14706)
              ExprList:  (at pp.c:14706)
                ID: name='arg_0x1029ea990' (at pp.c:14706)
                ID: name='msg' (at pp.c:14706)
                ID: name='error' (at pp.c:14706)
          Break:  (at pp.c:14708)
  FuncDef:  (at pp.c:14715)
    Decl: name='AMQueueImplP__0__CancelTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:14715)
      FuncDecl: quals=None (at pp.c:14715)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AMQueueImplP__0__CancelTask__runTask', quals=[] (at pp.c:14715)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14717)
      Decl: name='i', quals=[], storage=[] (at pp.c:14718)
        TypeDecl: declname='i', quals=[] (at pp.c:14718)
          IdentifierType: names=['uint8_t'] (at None)
      Decl: name='j', quals=[], storage=[] (at pp.c:14720)
        TypeDecl: declname='j', quals=[] (at pp.c:14720)
          IdentifierType: names=['uint8_t'] (at None)
      Decl: name='mask', quals=[], storage=[] (at pp.c:14722)
        TypeDecl: declname='mask', quals=[] (at pp.c:14722)
          IdentifierType: names=['uint8_t'] (at None)
      Decl: name='last', quals=[], storage=[] (at pp.c:14724)
        TypeDecl: declname='last', quals=[] (at pp.c:14724)
          IdentifierType: names=['uint8_t'] (at None)
      Decl: name='msg', quals=[], storage=[] (at pp.c:14725)
        PtrDecl: quals=[] (at pp.c:14725)
          TypeDecl: declname='msg', quals=[] (at pp.c:14725)
            IdentifierType: names=['message_t'] (at None)
      For:  (at pp.c:14728)
        Assignment: op='=' (at pp.c:14728)
          ID: name='i' (at pp.c:14728)
          Constant: type='int', value='0' (at pp.c:14728)
        BinaryOp: op='<' (at pp.c:14728)
          ID: name='i' (at pp.c:14728)
          BinaryOp: op='+' (at pp.c:14728)
            BinaryOp: op='/' (at pp.c:14728)
              Constant: type='int', value='1' (at pp.c:14728)
              Constant: type='int', value='8' (at pp.c:14728)
            Constant: type='int', value='1' (at pp.c:14728)
        UnaryOp: op='p++' (at pp.c:14728)
          ID: name='i' (at pp.c:14728)
        Compound:  (at pp.c:14728)
          If:  (at pp.c:14729)
            ArrayRef:  (at pp.c:14729)
              ID: name='AMQueueImplP__0__cancelMask' (at pp.c:14729)
              ID: name='i' (at pp.c:14729)
            Compound:  (at pp.c:14729)
              For:  (at pp.c:14730)
                ExprList:  (at pp.c:14730)
                  Assignment: op='=' (at pp.c:14730)
                    ID: name='mask' (at pp.c:14730)
                    Constant: type='int', value='1' (at pp.c:14730)
                  Assignment: op='=' (at pp.c:14730)
                    ID: name='j' (at pp.c:14730)
                    Constant: type='int', value='0' (at pp.c:14730)
                BinaryOp: op='<' (at pp.c:14730)
                  ID: name='j' (at pp.c:14730)
                  Constant: type='int', value='8' (at pp.c:14730)
                UnaryOp: op='p++' (at pp.c:14730)
                  ID: name='j' (at pp.c:14730)
                Compound:  (at pp.c:14730)
                  If:  (at pp.c:14731)
                    BinaryOp: op='&' (at pp.c:14731)
                      ArrayRef:  (at pp.c:14731)
                        ID: name='AMQueueImplP__0__cancelMask' (at pp.c:14731)
                        ID: name='i' (at pp.c:14731)
                      ID: name='mask' (at pp.c:14731)
                    Compound:  (at pp.c:14731)
                      Assignment: op='=' (at pp.c:14732)
                        ID: name='last' (at pp.c:14732)
                        BinaryOp: op='+' (at pp.c:14732)
                          BinaryOp: op='*' (at pp.c:14732)
                            ID: name='i' (at pp.c:14732)
                            Constant: type='int', value='8' (at pp.c:14732)
                          ID: name='j' (at pp.c:14732)
                      Assignment: op='=' (at pp.c:14733)
                        ID: name='msg' (at pp.c:14733)
                        StructRef: type='.' (at pp.c:14733)
                          ArrayRef:  (at pp.c:14733)
                            ID: name='AMQueueImplP__0__queue' (at pp.c:14733)
                            ID: name='last' (at pp.c:14733)
                          ID: name='msg' (at pp.c:14733)
                      Assignment: op='=' (at pp.c:14734)
                        StructRef: type='.' (at pp.c:14734)
                          ArrayRef:  (at pp.c:14734)
                            ID: name='AMQueueImplP__0__queue' (at pp.c:14734)
                            ID: name='last' (at pp.c:14734)
                          ID: name='msg' (at pp.c:14734)
                        Cast:  (at None)
                          Typename: quals=[] (at None)
                            PtrDecl: quals=[] (at pp.c:14734)
                              TypeDecl: declname=None, quals=[] (at None)
                                IdentifierType: names=['void'] (at None)
                          Constant: type='int', value='0' (at pp.c:14734)
                      Assignment: op='&=' (at pp.c:14735)
                        ArrayRef:  (at pp.c:14735)
                          ID: name='AMQueueImplP__0__cancelMask' (at pp.c:14735)
                          ID: name='i' (at pp.c:14735)
                        UnaryOp: op='~' (at pp.c:14735)
                          ID: name='mask' (at pp.c:14735)
                      FuncCall:  (at None)
                        ID: name='AMQueueImplP__0__Send__sendDone' (at pp.c:14736)
                        ExprList:  (at pp.c:14736)
                          ID: name='last' (at pp.c:14736)
                          ID: name='msg' (at pp.c:14736)
                          ID: name='ECANCEL' (at pp.c:14736)
                  Assignment: op='<<=' (at pp.c:14738)
                    ID: name='mask' (at pp.c:14738)
                    Constant: type='int', value='1' (at pp.c:14738)
  FuncDef:  (at pp.c:14745)
    Decl: name='AMQueueImplP__0__errorTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:14745)
      FuncDecl: quals=None (at pp.c:14745)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AMQueueImplP__0__errorTask__runTask', quals=[] (at pp.c:14745)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14747)
      FuncCall:  (at None)
        ID: name='AMQueueImplP__0__sendDone' (at pp.c:14748)
        ExprList:  (at pp.c:14748)
          ID: name='AMQueueImplP__0__current' (at pp.c:14748)
          StructRef: type='.' (at pp.c:14748)
            ArrayRef:  (at pp.c:14748)
              ID: name='AMQueueImplP__0__queue' (at pp.c:14748)
              ID: name='AMQueueImplP__0__current' (at pp.c:14748)
            ID: name='msg' (at pp.c:14748)
          ID: name='FAIL' (at pp.c:14748)
  FuncDef:  (at pp.c:14752)
    Decl: name='AMQueueImplP__0__errorTask__postTask', quals=[], storage=['static', 'inline'] (at pp.c:14752)
      FuncDecl: quals=None (at pp.c:14752)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AMQueueImplP__0__errorTask__postTask', quals=[] (at pp.c:14752)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14752)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14754)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14754)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14758)
        ID: name='__nesc_result' (at pp.c:14758)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:14758)
          ExprList:  (at pp.c:14758)
            ID: name='AMQueueImplP__0__errorTask' (at pp.c:14758)
      Return:  (at pp.c:14762)
        ID: name='__nesc_result' (at pp.c:14762)
  FuncDef:  (at pp.c:14767)
    Decl: name='AMQueueImplP__0__AMSend__send', quals=[], storage=['static', 'inline'] (at pp.c:14767)
      FuncDecl: quals=None (at pp.c:14767)
        ParamList:  (at pp.c:14767)
          Decl: name='arg_0x1029e9c70', quals=[], storage=[] (at pp.c:14767)
            TypeDecl: declname='arg_0x1029e9c70', quals=[] (at pp.c:14767)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='addr', quals=[], storage=[] (at pp.c:14767)
            TypeDecl: declname='addr', quals=[] (at pp.c:14767)
              IdentifierType: names=['am_addr_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14767)
            PtrDecl: quals=[] (at pp.c:14767)
              TypeDecl: declname='msg', quals=[] (at pp.c:14767)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:14767)
            TypeDecl: declname='len', quals=[] (at pp.c:14767)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AMQueueImplP__0__AMSend__send', quals=[] (at pp.c:14767)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14767)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14769)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14769)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14773)
        ID: name='__nesc_result' (at pp.c:14773)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__AMSend__send' (at pp.c:14773)
          ExprList:  (at pp.c:14773)
            ID: name='arg_0x1029e9c70' (at pp.c:14773)
            ID: name='addr' (at pp.c:14773)
            ID: name='msg' (at pp.c:14773)
            ID: name='len' (at pp.c:14773)
      Return:  (at pp.c:14777)
        ID: name='__nesc_result' (at pp.c:14777)
  FuncDef:  (at pp.c:14782)
    Decl: name='CC2420ActiveMessageP__CC2420PacketBody__getHeader', quals=[], storage=['static', 'inline'] (at pp.c:14782)
      FuncDecl: quals=None (at pp.c:14782)
        ParamList:  (at pp.c:14782)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14782)
            PtrDecl: quals=[] (at pp.c:14782)
              TypeDecl: declname='msg', quals=[] (at pp.c:14782)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:14782)
          TypeDecl: declname='CC2420ActiveMessageP__CC2420PacketBody__getHeader', quals=[] (at pp.c:14782)
            IdentifierType: names=['cc2420_header_t'] (at None)
    Compound:  (at pp.c:14782)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14784)
        PtrDecl: quals=[] (at pp.c:14784)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14784)
            Struct: name='cc2420_header_t', packed=False (at pp.c:14784)
      Assignment: op='=' (at pp.c:14788)
        ID: name='__nesc_result' (at pp.c:14788)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getHeader' (at pp.c:14788)
          ExprList:  (at pp.c:14788)
            ID: name='msg' (at pp.c:14788)
      Return:  (at pp.c:14792)
        ID: name='__nesc_result' (at pp.c:14792)
  FuncDef:  (at pp.c:14797)
    Decl: name='CC2420ActiveMessageP__Packet__payloadLength', quals=[], storage=['inline', 'static'] (at pp.c:14797)
      FuncDecl: quals=None (at pp.c:14797)
        ParamList:  (at pp.c:14797)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14797)
            PtrDecl: quals=[] (at pp.c:14797)
              TypeDecl: declname='msg', quals=[] (at pp.c:14797)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__Packet__payloadLength', quals=[] (at pp.c:14797)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:14799)
      Return:  (at pp.c:14800)
        BinaryOp: op='-' (at None)
          FuncCall:  (at None)
            ID: name='__nesc_ntoh_leuint8' (at pp.c:14800)
            ExprList:  (at None)
              StructRef: type='.' (at None)
                StructRef: type='->' (at None)
                  FuncCall:  (at None)
                    ID: name='CC2420ActiveMessageP__CC2420PacketBody__getHeader' (at pp.c:14800)
                    ExprList:  (at pp.c:14800)
                      ID: name='msg' (at pp.c:14800)
                  ID: name='length' (at pp.c:14800)
                ID: name='nxdata' (at pp.c:14800)
          ID: name='CC2420_SIZE' (at pp.c:14800)
  FuncDef:  (at pp.c:14804)
    Decl: name='AMQueueImplP__0__Packet__payloadLength', quals=[], storage=['static', 'inline'] (at pp.c:14804)
      FuncDecl: quals=None (at pp.c:14804)
        ParamList:  (at pp.c:14804)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14804)
            PtrDecl: quals=[] (at pp.c:14804)
              TypeDecl: declname='msg', quals=[] (at pp.c:14804)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='AMQueueImplP__0__Packet__payloadLength', quals=[] (at pp.c:14804)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:14804)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14806)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14806)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14810)
        ID: name='__nesc_result' (at pp.c:14810)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__Packet__payloadLength' (at pp.c:14810)
          ExprList:  (at pp.c:14810)
            ID: name='msg' (at pp.c:14810)
      Return:  (at pp.c:14814)
        ID: name='__nesc_result' (at pp.c:14814)
  FuncDef:  (at pp.c:14819)
    Decl: name='AMQueueImplP__0__AMPacket__destination', quals=[], storage=['static', 'inline'] (at pp.c:14819)
      FuncDecl: quals=None (at pp.c:14819)
        ParamList:  (at pp.c:14819)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:14819)
            PtrDecl: quals=[] (at pp.c:14819)
              TypeDecl: declname='amsg', quals=[] (at pp.c:14819)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='AMQueueImplP__0__AMPacket__destination', quals=[] (at pp.c:14819)
          IdentifierType: names=['am_addr_t'] (at None)
    Compound:  (at pp.c:14819)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14821)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14821)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14825)
        ID: name='__nesc_result' (at pp.c:14825)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__AMPacket__destination' (at pp.c:14825)
          ExprList:  (at pp.c:14825)
            ID: name='amsg' (at pp.c:14825)
      Return:  (at pp.c:14829)
        ID: name='__nesc_result' (at pp.c:14829)
  FuncDef:  (at pp.c:14834)
    Decl: name='CC2420ActiveMessageP__AMPacket__type', quals=[], storage=['inline', 'static'] (at pp.c:14834)
      FuncDecl: quals=None (at pp.c:14834)
        ParamList:  (at pp.c:14834)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:14834)
            PtrDecl: quals=[] (at pp.c:14834)
              TypeDecl: declname='amsg', quals=[] (at pp.c:14834)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__AMPacket__type', quals=[] (at pp.c:14834)
          IdentifierType: names=['am_id_t'] (at None)
    Compound:  (at pp.c:14836)
      Decl: name='header', quals=[], storage=[] (at pp.c:14837)
        PtrDecl: quals=[] (at pp.c:14837)
          TypeDecl: declname='header', quals=[] (at pp.c:14837)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__CC2420PacketBody__getHeader' (at pp.c:14837)
          ExprList:  (at pp.c:14837)
            ID: name='amsg' (at pp.c:14837)
      Return:  (at pp.c:14840)
        FuncCall:  (at None)
          ID: name='__nesc_ntoh_leuint8' (at pp.c:14840)
          ExprList:  (at pp.c:14840)
            StructRef: type='.' (at pp.c:14840)
              StructRef: type='->' (at pp.c:14840)
                ID: name='header' (at pp.c:14840)
                ID: name='type' (at pp.c:14840)
              ID: name='nxdata' (at pp.c:14840)
  FuncDef:  (at pp.c:14844)
    Decl: name='AMQueueImplP__0__AMPacket__type', quals=[], storage=['static', 'inline'] (at pp.c:14844)
      FuncDecl: quals=None (at pp.c:14844)
        ParamList:  (at pp.c:14844)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:14844)
            PtrDecl: quals=[] (at pp.c:14844)
              TypeDecl: declname='amsg', quals=[] (at pp.c:14844)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='AMQueueImplP__0__AMPacket__type', quals=[] (at pp.c:14844)
          IdentifierType: names=['am_id_t'] (at None)
    Compound:  (at pp.c:14844)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14846)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14846)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14850)
        ID: name='__nesc_result' (at pp.c:14850)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__AMPacket__type' (at pp.c:14850)
          ExprList:  (at pp.c:14850)
            ID: name='amsg' (at pp.c:14850)
      Return:  (at pp.c:14854)
        ID: name='__nesc_result' (at pp.c:14854)
  FuncDef:  (at pp.c:14859)
    Decl: name='AMQueueImplP__0__nextPacket', quals=[], storage=['inline', 'static'] (at pp.c:14859)
      FuncDecl: quals=None (at pp.c:14859)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AMQueueImplP__0__nextPacket', quals=[] (at pp.c:14859)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14861)
      Decl: name='i', quals=[], storage=[] (at pp.c:14862)
        TypeDecl: declname='i', quals=[] (at pp.c:14862)
          IdentifierType: names=['uint8_t'] (at None)
      Assignment: op='=' (at pp.c:14865)
        ID: name='AMQueueImplP__0__current' (at pp.c:14865)
        BinaryOp: op='%' (at pp.c:14865)
          BinaryOp: op='+' (at pp.c:14865)
            ID: name='AMQueueImplP__0__current' (at pp.c:14865)
            Constant: type='int', value='1' (at pp.c:14865)
          Constant: type='int', value='1' (at pp.c:14865)
      For:  (at pp.c:14866)
        Assignment: op='=' (at pp.c:14866)
          ID: name='i' (at pp.c:14866)
          Constant: type='int', value='0' (at pp.c:14866)
        BinaryOp: op='<' (at pp.c:14866)
          ID: name='i' (at pp.c:14866)
          Constant: type='int', value='1' (at pp.c:14866)
        UnaryOp: op='p++' (at pp.c:14866)
          ID: name='i' (at pp.c:14866)
        Compound:  (at pp.c:14866)
          If:  (at pp.c:14867)
            BinaryOp: op='||' (at pp.c:14867)
              BinaryOp: op='==' (at pp.c:14867)
                StructRef: type='.' (at pp.c:14867)
                  ArrayRef:  (at pp.c:14867)
                    ID: name='AMQueueImplP__0__queue' (at pp.c:14867)
                    ID: name='AMQueueImplP__0__current' (at pp.c:14867)
                  ID: name='msg' (at pp.c:14867)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    PtrDecl: quals=[] (at pp.c:14867)
                      TypeDecl: declname=None, quals=[] (at None)
                        IdentifierType: names=['void'] (at None)
                  Constant: type='int', value='0' (at pp.c:14867)
              BinaryOp: op='&' (at pp.c:14868)
                ArrayRef:  (at pp.c:14868)
                  ID: name='AMQueueImplP__0__cancelMask' (at pp.c:14868)
                  BinaryOp: op='/' (at pp.c:14868)
                    ID: name='AMQueueImplP__0__current' (at pp.c:14868)
                    Constant: type='int', value='8' (at pp.c:14868)
                BinaryOp: op='<<' (at pp.c:14868)
                  Constant: type='int', value='1' (at pp.c:14868)
                  BinaryOp: op='%' (at pp.c:14868)
                    ID: name='AMQueueImplP__0__current' (at pp.c:14868)
                    Constant: type='int', value='8' (at pp.c:14868)
            Compound:  (at pp.c:14869)
              Assignment: op='=' (at pp.c:14870)
                ID: name='AMQueueImplP__0__current' (at pp.c:14870)
                BinaryOp: op='%' (at pp.c:14870)
                  BinaryOp: op='+' (at pp.c:14870)
                    ID: name='AMQueueImplP__0__current' (at pp.c:14870)
                    Constant: type='int', value='1' (at pp.c:14870)
                  Constant: type='int', value='1' (at pp.c:14870)
            Compound:  (at pp.c:14872)
              Break:  (at pp.c:14873)
      If:  (at pp.c:14876)
        BinaryOp: op='>=' (at pp.c:14876)
          ID: name='i' (at pp.c:14876)
          Constant: type='int', value='1' (at pp.c:14876)
        Compound:  (at pp.c:14876)
          Assignment: op='=' (at pp.c:14878)
            ID: name='AMQueueImplP__0__current' (at pp.c:14878)
            Constant: type='int', value='1' (at pp.c:14878)
  FuncDef:  (at pp.c:14883)
    Decl: name='AMQueueImplP__0__tryToSend', quals=[], storage=['inline', 'static'] (at pp.c:14883)
      FuncDecl: quals=None (at pp.c:14883)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AMQueueImplP__0__tryToSend', quals=[] (at pp.c:14883)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14885)
      FuncCall:  (at None)
        ID: name='AMQueueImplP__0__nextPacket' (at pp.c:14886)
      If:  (at pp.c:14887)
        BinaryOp: op='<' (at pp.c:14887)
          ID: name='AMQueueImplP__0__current' (at pp.c:14887)
          Constant: type='int', value='1' (at pp.c:14887)
        Compound:  (at pp.c:14887)
          Decl: name='nextErr', quals=[], storage=[] (at pp.c:14888)
            TypeDecl: declname='nextErr', quals=[] (at pp.c:14888)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='nextMsg', quals=[], storage=[] (at pp.c:14889)
            PtrDecl: quals=[] (at pp.c:14889)
              TypeDecl: declname='nextMsg', quals=[] (at pp.c:14889)
                IdentifierType: names=['message_t'] (at None)
            StructRef: type='.' (at pp.c:14889)
              ArrayRef:  (at pp.c:14889)
                ID: name='AMQueueImplP__0__queue' (at pp.c:14889)
                ID: name='AMQueueImplP__0__current' (at pp.c:14889)
              ID: name='msg' (at pp.c:14889)
          Decl: name='nextId', quals=[], storage=[] (at pp.c:14890)
            TypeDecl: declname='nextId', quals=[] (at pp.c:14890)
              IdentifierType: names=['am_id_t'] (at None)
            FuncCall:  (at None)
              ID: name='AMQueueImplP__0__AMPacket__type' (at pp.c:14890)
              ExprList:  (at pp.c:14890)
                ID: name='nextMsg' (at pp.c:14890)
          Decl: name='nextDest', quals=[], storage=[] (at pp.c:14891)
            TypeDecl: declname='nextDest', quals=[] (at pp.c:14891)
              IdentifierType: names=['am_addr_t'] (at None)
            FuncCall:  (at None)
              ID: name='AMQueueImplP__0__AMPacket__destination' (at pp.c:14891)
              ExprList:  (at pp.c:14891)
                ID: name='nextMsg' (at pp.c:14891)
          Decl: name='len', quals=[], storage=[] (at pp.c:14892)
            TypeDecl: declname='len', quals=[] (at pp.c:14892)
              IdentifierType: names=['uint8_t'] (at None)
            FuncCall:  (at None)
              ID: name='AMQueueImplP__0__Packet__payloadLength' (at pp.c:14892)
              ExprList:  (at pp.c:14892)
                ID: name='nextMsg' (at pp.c:14892)
          Assignment: op='=' (at pp.c:14895)
            ID: name='nextErr' (at pp.c:14895)
            FuncCall:  (at None)
              ID: name='AMQueueImplP__0__AMSend__send' (at pp.c:14895)
              ExprList:  (at pp.c:14895)
                ID: name='nextId' (at pp.c:14895)
                ID: name='nextDest' (at pp.c:14895)
                ID: name='nextMsg' (at pp.c:14895)
                ID: name='len' (at pp.c:14895)
          If:  (at pp.c:14896)
            BinaryOp: op='!=' (at pp.c:14896)
              ID: name='nextErr' (at pp.c:14896)
              ID: name='SUCCESS' (at pp.c:14896)
            Compound:  (at pp.c:14896)
              FuncCall:  (at None)
                ID: name='AMQueueImplP__0__errorTask__postTask' (at pp.c:14897)
  FuncDef:  (at pp.c:14903)
    Decl: name='CC2420ControlP__CC2420Config__getPanAddr', quals=[], storage=['inline', 'static'] (at pp.c:14903)
      FuncDecl: quals=None (at pp.c:14903)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Config__getPanAddr', quals=[] (at pp.c:14903)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:14905)
      Compound:  (at pp.c:14906)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:14906)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:14906)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:14906)
        Compound:  (at pp.c:14908)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:14909)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:14909)
              IdentifierType: names=['int', 'unsigned'] (at None)
            ID: name='CC2420ControlP__m_pan' (at pp.c:14911)
          Compound:  (at pp.c:14913)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:14915)
              ExprList:  (at pp.c:14915)
                ID: name='__nesc_atomic' (at pp.c:14915)
            Return:  (at pp.c:14917)
              ID: name='__nesc_temp' (at pp.c:14917)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:14921)
          ExprList:  (at pp.c:14921)
            ID: name='__nesc_atomic' (at pp.c:14921)
  FuncDef:  (at pp.c:14925)
    Decl: name='CC2420ActiveMessageP__CC2420Config__getPanAddr', quals=[], storage=['static', 'inline'] (at pp.c:14925)
      FuncDecl: quals=None (at pp.c:14925)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__CC2420Config__getPanAddr', quals=[] (at pp.c:14925)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:14925)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14927)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14927)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14931)
        ID: name='__nesc_result' (at pp.c:14931)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__CC2420Config__getPanAddr' (at pp.c:14931)
      Return:  (at pp.c:14935)
        ID: name='__nesc_result' (at pp.c:14935)
  FuncDef:  (at pp.c:14940)
    Decl: name='CC2420TinyosNetworkP__Queue__isEmpty', quals=[], storage=['static', 'inline'] (at pp.c:14940)
      FuncDecl: quals=None (at pp.c:14940)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__Queue__isEmpty', quals=[] (at pp.c:14940)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:14940)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14942)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14942)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14946)
        ID: name='__nesc_result' (at pp.c:14946)
        FuncCall:  (at None)
          ID: name='FcfsResourceQueueC__0__FcfsQueue__isEmpty' (at pp.c:14946)
      Return:  (at pp.c:14950)
        ID: name='__nesc_result' (at pp.c:14950)
  FuncDef:  (at pp.c:14955)
    Decl: name='CC2420TinyosNetworkP__Resource__immediateRequest', quals=[], storage=['inline', 'static'] (at pp.c:14955)
      FuncDecl: quals=None (at pp.c:14955)
        ParamList:  (at pp.c:14955)
          Decl: name='id', quals=[], storage=[] (at pp.c:14955)
            TypeDecl: declname='id', quals=[] (at pp.c:14955)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__Resource__immediateRequest', quals=[] (at pp.c:14955)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14957)
      If:  (at pp.c:14958)
        BinaryOp: op='==' (at pp.c:14958)
          ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:14958)
          ID: name='id' (at pp.c:14958)
        Compound:  (at pp.c:14958)
          Return:  (at pp.c:14960)
            ID: name='EALREADY' (at pp.c:14960)
      If:  (at pp.c:14962)
        BinaryOp: op='>' (at pp.c:14962)
          ID: name='CC2420TinyosNetworkP__TINYOS_N_NETWORKS' (at pp.c:14962)
          Constant: type='int', value='1' (at pp.c:14962)
        Compound:  (at pp.c:14962)
          If:  (at pp.c:14963)
            BinaryOp: op='&&' (at pp.c:14963)
              BinaryOp: op='==' (at pp.c:14963)
                ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:14963)
                ID: name='CC2420TinyosNetworkP__OWNER_NONE' (at pp.c:14963)
              FuncCall:  (at None)
                ID: name='CC2420TinyosNetworkP__Queue__isEmpty' (at pp.c:14963)
            Compound:  (at pp.c:14963)
              Assignment: op='=' (at pp.c:14964)
                ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:14964)
                ID: name='id' (at pp.c:14964)
              Return:  (at pp.c:14965)
                ID: name='SUCCESS' (at pp.c:14965)
          Return:  (at pp.c:14967)
            ID: name='FAIL' (at pp.c:14967)
        Compound:  (at pp.c:14971)
          Assignment: op='=' (at pp.c:14972)
            ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:14972)
            ID: name='id' (at pp.c:14972)
          Return:  (at pp.c:14973)
            ID: name='SUCCESS' (at pp.c:14973)
  FuncDef:  (at pp.c:14978)
    Decl: name='CC2420ActiveMessageP__RadioResource__immediateRequest', quals=[], storage=['static', 'inline'] (at pp.c:14978)
      FuncDecl: quals=None (at pp.c:14978)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__RadioResource__immediateRequest', quals=[] (at pp.c:14978)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:14978)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:14980)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:14980)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:14984)
        ID: name='__nesc_result' (at pp.c:14984)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__Resource__immediateRequest' (at pp.c:14984)
          ExprList:  (at pp.c:14984)
            ID: name='CC2420ActiveMessageC__CC2420_AM_SEND_ID' (at pp.c:14984)
      Return:  (at pp.c:14988)
        ID: name='__nesc_result' (at pp.c:14988)
  FuncDef:  (at pp.c:14993)
    Decl: name='CC2420ActiveMessageP__SendNotifier__default__aboutToSend', quals=[], storage=['inline', 'static'] (at pp.c:14993)
      FuncDecl: quals=None (at pp.c:14993)
        ParamList:  (at pp.c:14993)
          Decl: name='amId', quals=[], storage=[] (at pp.c:14993)
            TypeDecl: declname='amId', quals=[] (at pp.c:14993)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='addr', quals=[], storage=[] (at pp.c:14993)
            TypeDecl: declname='addr', quals=[] (at pp.c:14993)
              IdentifierType: names=['am_addr_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14993)
            PtrDecl: quals=[] (at pp.c:14993)
              TypeDecl: declname='msg', quals=[] (at pp.c:14993)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__SendNotifier__default__aboutToSend', quals=[] (at pp.c:14993)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14995)
  FuncDef:  (at pp.c:14999)
    Decl: name='CC2420ActiveMessageP__SendNotifier__aboutToSend', quals=[], storage=['static', 'inline'] (at pp.c:14999)
      FuncDecl: quals=None (at pp.c:14999)
        ParamList:  (at pp.c:14999)
          Decl: name='arg_0x1024e7258', quals=[], storage=[] (at pp.c:14999)
            TypeDecl: declname='arg_0x1024e7258', quals=[] (at pp.c:14999)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='dest', quals=[], storage=[] (at pp.c:14999)
            TypeDecl: declname='dest', quals=[] (at pp.c:14999)
              IdentifierType: names=['am_addr_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:14999)
            PtrDecl: quals=[] (at pp.c:14999)
              TypeDecl: declname='msg', quals=[] (at pp.c:14999)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__SendNotifier__aboutToSend', quals=[] (at pp.c:14999)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:14999)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__SendNotifier__default__aboutToSend' (at pp.c:15001)
        ExprList:  (at pp.c:15001)
          ID: name='arg_0x1024e7258' (at pp.c:15001)
          ID: name='dest' (at pp.c:15001)
          ID: name='msg' (at pp.c:15001)
  FuncDef:  (at pp.c:15006)
    Decl: name='CC2420ActiveMessageP__SubSend__send', quals=[], storage=['static', 'inline'] (at pp.c:15006)
      FuncDecl: quals=None (at pp.c:15006)
        ParamList:  (at pp.c:15006)
          Decl: name='msg', quals=[], storage=[] (at pp.c:15006)
            PtrDecl: quals=[] (at pp.c:15006)
              TypeDecl: declname='msg', quals=[] (at pp.c:15006)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:15006)
            TypeDecl: declname='len', quals=[] (at pp.c:15006)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__SubSend__send', quals=[] (at pp.c:15006)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15006)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15008)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15008)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15012)
        ID: name='__nesc_result' (at pp.c:15012)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__ActiveSend__send' (at pp.c:15012)
          ExprList:  (at pp.c:15012)
            ID: name='msg' (at pp.c:15012)
            ID: name='len' (at pp.c:15012)
      Return:  (at pp.c:15016)
        ID: name='__nesc_result' (at pp.c:15016)
  FuncDef:  (at pp.c:15021)
    Decl: name='CC2420PacketP__CC2420Packet__setNetwork', quals=[], storage=['inline', 'static'] (at pp.c:15021)
      FuncDecl: quals=None (at pp.c:15021)
        ParamList:  (at pp.c:15021)
          Decl: name='p_msg', quals=[], storage=[] (at pp.c:15021)
            PtrDecl: quals=[] (at pp.c:15021)
              TypeDecl: declname='p_msg', quals=[] (at pp.c:15021)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='networkId', quals=[], storage=[] (at pp.c:15021)
            TypeDecl: declname='networkId', quals=[] (at pp.c:15021)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420PacketP__CC2420Packet__setNetwork', quals=[] (at pp.c:15021)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15023)
      Compound:  (at pp.c:15025)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15025)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15025)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:15025)
        Assignment: op='=' (at None)
          UnaryOp: op='*' (at None)
            FuncCall:  (at None)
              ID: name='CC2420PacketP__getNetwork' (at pp.c:15026)
              ExprList:  (at pp.c:15026)
                ID: name='p_msg' (at pp.c:15026)
          ID: name='networkId' (at pp.c:15026)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:15028)
          ExprList:  (at pp.c:15028)
            ID: name='__nesc_atomic' (at pp.c:15028)
  FuncDef:  (at pp.c:15032)
    Decl: name='CC2420TinyosNetworkP__CC2420Packet__setNetwork', quals=[], storage=['static', 'inline'] (at pp.c:15032)
      FuncDecl: quals=None (at pp.c:15032)
        ParamList:  (at pp.c:15032)
          Decl: name='p_msg', quals=[], storage=[] (at pp.c:15032)
            PtrDecl: quals=[] (at pp.c:15032)
              TypeDecl: declname='p_msg', quals=[] (at pp.c:15032)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='networkId', quals=[], storage=[] (at pp.c:15032)
            TypeDecl: declname='networkId', quals=[] (at pp.c:15032)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__CC2420Packet__setNetwork', quals=[] (at pp.c:15032)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15032)
      FuncCall:  (at None)
        ID: name='CC2420PacketP__CC2420Packet__setNetwork' (at pp.c:15034)
        ExprList:  (at pp.c:15034)
          ID: name='p_msg' (at pp.c:15034)
          ID: name='networkId' (at pp.c:15034)
  FuncDef:  (at pp.c:15039)
    Decl: name='CC2420PacketP__getAddressLength', quals=[], storage=['inline', 'static'] (at pp.c:15039)
      FuncDecl: quals=None (at pp.c:15039)
        ParamList:  (at pp.c:15039)
          Decl: name='type', quals=[], storage=[] (at pp.c:15039)
            TypeDecl: declname='type', quals=[] (at pp.c:15039)
              IdentifierType: names=['int'] (at None)
        TypeDecl: declname='CC2420PacketP__getAddressLength', quals=[] (at pp.c:15039)
          IdentifierType: names=['int'] (at None)
    Compound:  (at pp.c:15041)
      Switch:  (at pp.c:15042)
        ID: name='type' (at pp.c:15042)
        Compound:  (at pp.c:15042)
          Case:  (at pp.c:15043)
            ID: name='IEEE154_ADDR_SHORT' (at pp.c:15043)
            Return:  (at pp.c:15043)
              Constant: type='int', value='2' (at pp.c:15043)
          Case:  (at pp.c:15044)
            ID: name='IEEE154_ADDR_EXT' (at pp.c:15044)
            Return:  (at pp.c:15044)
              Constant: type='int', value='8' (at pp.c:15044)
          Case:  (at pp.c:15045)
            ID: name='IEEE154_ADDR_NONE' (at pp.c:15045)
            Return:  (at pp.c:15045)
              Constant: type='int', value='0' (at pp.c:15045)
          Default:  (at pp.c:15046)
            Return:  (at pp.c:15046)
              UnaryOp: op='-' (at pp.c:15046)
                Constant: type='int', value='100' (at pp.c:15046)
  FuncDef:  (at pp.c:15051)
    Decl: name='__nesc_hton_leuint8', quals=[], storage=['__inline', 'static'] (at pp.c:15051)
      FuncDecl: quals=None (at pp.c:15051)
        ParamList:  (at pp.c:15051)
          Decl: name='target', quals=[], storage=[] (at pp.c:15051)
            PtrDecl: quals=[] (at pp.c:15051)
              TypeDecl: declname='target', quals=[] (at pp.c:15051)
                IdentifierType: names=['void'] (at None)
          Decl: name='value', quals=[], storage=[] (at pp.c:15051)
            TypeDecl: declname='value', quals=[] (at pp.c:15051)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='__nesc_hton_leuint8', quals=[] (at pp.c:15051)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:15053)
      Decl: name='base', quals=[], storage=[] (at pp.c:15054)
        PtrDecl: quals=[] (at pp.c:15054)
          TypeDecl: declname='base', quals=[] (at pp.c:15054)
            IdentifierType: names=['uint8_t'] (at None)
        ID: name='target' (at pp.c:15054)
      Assignment: op='=' (at pp.c:15057)
        ArrayRef:  (at pp.c:15057)
          ID: name='base' (at pp.c:15057)
          Constant: type='int', value='0' (at pp.c:15057)
        ID: name='value' (at pp.c:15057)
      Return:  (at pp.c:15058)
        ID: name='value' (at pp.c:15058)
  FuncDef:  (at pp.c:15062)
    Decl: name='__nesc_hton_uint8', quals=[], storage=['__inline', 'static'] (at pp.c:15062)
      FuncDecl: quals=None (at pp.c:15062)
        ParamList:  (at pp.c:15062)
          Decl: name='target', quals=[], storage=[] (at pp.c:15062)
            PtrDecl: quals=[] (at pp.c:15062)
              TypeDecl: declname='target', quals=[] (at pp.c:15062)
                IdentifierType: names=['void'] (at None)
          Decl: name='value', quals=[], storage=[] (at pp.c:15062)
            TypeDecl: declname='value', quals=[] (at pp.c:15062)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='__nesc_hton_uint8', quals=[] (at pp.c:15062)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:15064)
      Decl: name='base', quals=[], storage=[] (at pp.c:15065)
        PtrDecl: quals=[] (at pp.c:15065)
          TypeDecl: declname='base', quals=[] (at pp.c:15065)
            IdentifierType: names=['uint8_t'] (at None)
        ID: name='target' (at pp.c:15065)
      Assignment: op='=' (at pp.c:15068)
        ArrayRef:  (at pp.c:15068)
          ID: name='base' (at pp.c:15068)
          Constant: type='int', value='0' (at pp.c:15068)
        ID: name='value' (at pp.c:15068)
      Return:  (at pp.c:15069)
        ID: name='value' (at pp.c:15069)
  FuncDef:  (at pp.c:15073)
    Decl: name='__nesc_hton_int8', quals=[], storage=['__inline', 'static'] (at pp.c:15073)
      FuncDecl: quals=None (at pp.c:15073)
        ParamList:  (at pp.c:15073)
          Decl: name='target', quals=[], storage=[] (at pp.c:15073)
            PtrDecl: quals=[] (at pp.c:15073)
              TypeDecl: declname='target', quals=[] (at pp.c:15073)
                IdentifierType: names=['void'] (at None)
          Decl: name='value', quals=[], storage=[] (at pp.c:15073)
            TypeDecl: declname='value', quals=[] (at pp.c:15073)
              IdentifierType: names=['int8_t'] (at None)
        TypeDecl: declname='__nesc_hton_int8', quals=[] (at pp.c:15073)
          IdentifierType: names=['int8_t'] (at None)
    Compound:  (at pp.c:15075)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint8' (at pp.c:15077)
        ExprList:  (at pp.c:15077)
          ID: name='target' (at pp.c:15077)
          ID: name='value' (at pp.c:15077)
      Return:  (at pp.c:15079)
        ID: name='value' (at pp.c:15079)
  FuncDef:  (at pp.c:15083)
    Decl: name='__nesc_hton_leuint16', quals=[], storage=['__inline', 'static'] (at pp.c:15083)
      FuncDecl: quals=None (at pp.c:15083)
        ParamList:  (at pp.c:15083)
          Decl: name='target', quals=[], storage=[] (at pp.c:15083)
            PtrDecl: quals=[] (at pp.c:15083)
              TypeDecl: declname='target', quals=[] (at pp.c:15083)
                IdentifierType: names=['void'] (at None)
          Decl: name='value', quals=[], storage=[] (at pp.c:15083)
            TypeDecl: declname='value', quals=[] (at pp.c:15083)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='__nesc_hton_leuint16', quals=[] (at pp.c:15083)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:15085)
      Decl: name='base', quals=[], storage=[] (at pp.c:15086)
        PtrDecl: quals=[] (at pp.c:15086)
          TypeDecl: declname='base', quals=[] (at pp.c:15086)
            IdentifierType: names=['uint8_t'] (at None)
        ID: name='target' (at pp.c:15086)
      Assignment: op='=' (at pp.c:15089)
        ArrayRef:  (at pp.c:15089)
          ID: name='base' (at pp.c:15089)
          Constant: type='int', value='0' (at pp.c:15089)
        ID: name='value' (at pp.c:15089)
      Assignment: op='=' (at pp.c:15090)
        ArrayRef:  (at pp.c:15090)
          ID: name='base' (at pp.c:15090)
          Constant: type='int', value='1' (at pp.c:15090)
        BinaryOp: op='>>' (at pp.c:15090)
          ID: name='value' (at pp.c:15090)
          Constant: type='int', value='8' (at pp.c:15090)
      Return:  (at pp.c:15091)
        ID: name='value' (at pp.c:15091)
  FuncDef:  (at pp.c:15095)
    Decl: name='CC2420TransmitP__send', quals=[], storage=['inline', 'static'] (at pp.c:15095)
      FuncDecl: quals=None (at pp.c:15095)
        ParamList:  (at pp.c:15095)
          Decl: name='p_msg', quals=[], storage=[] (at pp.c:15095)
            PtrDecl: quals=[] (at pp.c:15095)
              TypeDecl: declname='p_msg', quals=[] (at pp.c:15095)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='cca', quals=[], storage=[] (at pp.c:15095)
            TypeDecl: declname='cca', quals=[] (at pp.c:15095)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='CC2420TransmitP__send', quals=[] (at pp.c:15095)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15097)
      Compound:  (at pp.c:15098)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15098)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15098)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:15098)
        Compound:  (at pp.c:15100)
          If:  (at pp.c:15101)
            BinaryOp: op='==' (at pp.c:15101)
              ID: name='CC2420TransmitP__m_state' (at pp.c:15101)
              ID: name='CC2420TransmitP__S_CANCEL' (at pp.c:15101)
            Compound:  (at pp.c:15101)
              Compound:  (at pp.c:15102)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:15103)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:15103)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='ECANCEL' (at pp.c:15105)
                Compound:  (at pp.c:15107)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:15109)
                    ExprList:  (at pp.c:15109)
                      ID: name='__nesc_atomic' (at pp.c:15109)
                  Return:  (at pp.c:15111)
                    ID: name='__nesc_temp' (at pp.c:15111)
          If:  (at pp.c:15116)
            BinaryOp: op='!=' (at pp.c:15116)
              ID: name='CC2420TransmitP__m_state' (at pp.c:15116)
              ID: name='CC2420TransmitP__S_STARTED' (at pp.c:15116)
            Compound:  (at pp.c:15116)
              Compound:  (at pp.c:15117)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:15118)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:15118)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='FAIL' (at pp.c:15120)
                Compound:  (at pp.c:15122)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:15124)
                    ExprList:  (at pp.c:15124)
                      ID: name='__nesc_atomic' (at pp.c:15124)
                  Return:  (at pp.c:15126)
                    ID: name='__nesc_temp' (at pp.c:15126)
          Assignment: op='=' (at pp.c:15132)
            ID: name='CC2420TransmitP__m_state' (at pp.c:15132)
            ID: name='CC2420TransmitP__S_LOAD' (at pp.c:15132)
          Assignment: op='=' (at pp.c:15133)
            ID: name='CC2420TransmitP__m_cca' (at pp.c:15133)
            ID: name='cca' (at pp.c:15133)
          Assignment: op='=' (at pp.c:15134)
            ID: name='CC2420TransmitP__m_msg' (at pp.c:15134)
            ID: name='p_msg' (at pp.c:15134)
          Assignment: op='=' (at pp.c:15135)
            ID: name='CC2420TransmitP__totalCcaChecks' (at pp.c:15135)
            Constant: type='int', value='0' (at pp.c:15135)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:15138)
          ExprList:  (at pp.c:15138)
            ID: name='__nesc_atomic' (at pp.c:15138)
      If:  (at pp.c:15140)
        BinaryOp: op='==' (at None)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__acquireSpiResource' (at pp.c:15140)
          ID: name='SUCCESS' (at pp.c:15140)
        Compound:  (at pp.c:15140)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__loadTXFIFO' (at pp.c:15141)
      Return:  (at pp.c:15144)
        ID: name='SUCCESS' (at pp.c:15144)
  FuncDef:  (at pp.c:15148)
    Decl: name='CC2420TransmitP__Send__send', quals=[], storage=['inline', 'static'] (at pp.c:15148)
      FuncDecl: quals=None (at pp.c:15148)
        ParamList:  (at pp.c:15148)
          Decl: name='p_msg', quals=[], storage=[] (at pp.c:15148)
            PtrDecl: quals=[] (at pp.c:15148)
              TypeDecl: declname='p_msg', quals=[] (at pp.c:15148)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='useCca', quals=[], storage=[] (at pp.c:15148)
            TypeDecl: declname='useCca', quals=[] (at pp.c:15148)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='CC2420TransmitP__Send__send', quals=[] (at pp.c:15148)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15150)
      Return:  (at pp.c:15151)
        FuncCall:  (at None)
          ID: name='CC2420TransmitP__send' (at pp.c:15151)
          ExprList:  (at pp.c:15151)
            ID: name='p_msg' (at pp.c:15151)
            ID: name='useCca' (at pp.c:15151)
  FuncDef:  (at pp.c:15155)
    Decl: name='CC2420CsmaP__CC2420Transmit__send', quals=[], storage=['static', 'inline'] (at pp.c:15155)
      FuncDecl: quals=None (at pp.c:15155)
        ParamList:  (at pp.c:15155)
          Decl: name='p_msg', quals=[], storage=[] (at pp.c:15155)
            PtrDecl: quals=[] (at pp.c:15155)
              TypeDecl: declname='p_msg', quals=[] (at pp.c:15155)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='useCca', quals=[], storage=[] (at pp.c:15155)
            TypeDecl: declname='useCca', quals=[] (at pp.c:15155)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='CC2420CsmaP__CC2420Transmit__send', quals=[] (at pp.c:15155)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15155)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15157)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15157)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15161)
        ID: name='__nesc_result' (at pp.c:15161)
        FuncCall:  (at None)
          ID: name='CC2420TransmitP__Send__send' (at pp.c:15161)
          ExprList:  (at pp.c:15161)
            ID: name='p_msg' (at pp.c:15161)
            ID: name='useCca' (at pp.c:15161)
      Return:  (at pp.c:15165)
        ID: name='__nesc_result' (at pp.c:15165)
  FuncDef:  (at pp.c:15170)
    Decl: name='CC2420ActiveMessageP__RadioBackoff__default__requestCca', quals=[], storage=['inline', 'static'] (at pp.c:15170)
      FuncDecl: quals=None (at pp.c:15170)
        ParamList:  (at pp.c:15170)
          Decl: name='id', quals=[], storage=[] (at pp.c:15170)
            TypeDecl: declname='id', quals=[] (at pp.c:15170)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:15171)
            PtrDecl: quals=[] (at pp.c:15171)
              TypeDecl: declname='msg', quals=[] (at pp.c:15171)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__default__requestCca', quals=[] (at pp.c:15170)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15173)
  FuncDef:  (at pp.c:15177)
    Decl: name='CC2420ActiveMessageP__RadioBackoff__requestCca', quals=[], storage=['static', 'inline'] (at pp.c:15177)
      FuncDecl: quals=None (at pp.c:15177)
        ParamList:  (at pp.c:15177)
          Decl: name='arg_0x1024e7d60', quals=[], storage=[] (at pp.c:15177)
            TypeDecl: declname='arg_0x1024e7d60', quals=[] (at pp.c:15177)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:15177)
            PtrDecl: quals=[] (at pp.c:15177)
              TypeDecl: declname='msg', quals=[] (at pp.c:15177)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__requestCca', quals=[] (at pp.c:15177)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15177)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__RadioBackoff__default__requestCca' (at pp.c:15179)
        ExprList:  (at pp.c:15179)
          ID: name='arg_0x1024e7d60' (at pp.c:15179)
          ID: name='msg' (at pp.c:15179)
  FuncDef:  (at pp.c:15184)
    Decl: name='CC2420ActiveMessageP__SubBackoff__requestCca', quals=[], storage=['inline', 'static'] (at pp.c:15184)
      FuncDecl: quals=None (at pp.c:15184)
        ParamList:  (at pp.c:15184)
          Decl: name='msg', quals=[], storage=[] (at pp.c:15184)
            PtrDecl: quals=[] (at pp.c:15184)
              TypeDecl: declname='msg', quals=[] (at pp.c:15184)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__SubBackoff__requestCca', quals=[] (at pp.c:15184)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15186)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__RadioBackoff__requestCca' (at pp.c:15188)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='__nesc_ntoh_leuint8' (at pp.c:15188)
            ExprList:  (at None)
              StructRef: type='.' (at None)
                StructRef: type='->' (at None)
                  Cast:  (at None)
                    Typename: quals=[] (at None)
                      PtrDecl: quals=[] (at pp.c:15188)
                        TypeDecl: declname=None, quals=[] (at None)
                          IdentifierType: names=['cc2420_header_t'] (at None)
                    BinaryOp: op='-' (at None)
                      BinaryOp: op='+' (at None)
                        Cast:  (at None)
                          Typename: quals=[] (at None)
                            PtrDecl: quals=[] (at pp.c:15188)
                              TypeDecl: declname=None, quals=[] (at None)
                                IdentifierType: names=['uint8_t'] (at None)
                          ID: name='msg' (at pp.c:15188)
                        Cast:  (at None)
                          Typename: quals=[] (at None)
                            TypeDecl: declname=None, quals=[] (at None)
                              IdentifierType: names=['size_t'] (at None)
                          UnaryOp: op='&' (at None)
                            StructRef: type='->' (at None)
                              Cast:  (at None)
                                Typename: quals=[] (at None)
                                  PtrDecl: quals=[] (at pp.c:15188)
                                    TypeDecl: declname=None, quals=[] (at None)
                                      IdentifierType: names=['message_t'] (at None)
                                Constant: type='int', value='0' (at pp.c:15188)
                              ID: name='data' (at pp.c:15188)
                      UnaryOp: op='sizeof' (at pp.c:15188)
                        Typename: quals=[] (at None)
                          TypeDecl: declname=None, quals=[] (at None)
                            IdentifierType: names=['cc2420_header_t'] (at None)
                  ID: name='type' (at pp.c:15188)
                ID: name='nxdata' (at pp.c:15188)
          ID: name='msg' (at pp.c:15188)
  FuncDef:  (at pp.c:15192)
    Decl: name='CC2420CsmaP__RadioBackoff__requestCca', quals=[], storage=['static', 'inline'] (at pp.c:15192)
      FuncDecl: quals=None (at pp.c:15192)
        ParamList:  (at pp.c:15192)
          Decl: name='msg', quals=[], storage=[] (at pp.c:15192)
            PtrDecl: quals=[] (at pp.c:15192)
              TypeDecl: declname='msg', quals=[] (at pp.c:15192)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__RadioBackoff__requestCca', quals=[] (at pp.c:15192)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15192)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__SubBackoff__requestCca' (at pp.c:15194)
        ExprList:  (at pp.c:15194)
          ID: name='msg' (at pp.c:15194)
  FuncDef:  (at pp.c:15199)
    Decl: name='StateImplP__State__forceState', quals=[], storage=['inline', 'static'] (at pp.c:15199)
      FuncDecl: quals=None (at pp.c:15199)
        ParamList:  (at pp.c:15199)
          Decl: name='id', quals=[], storage=[] (at pp.c:15199)
            TypeDecl: declname='id', quals=[] (at pp.c:15199)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='reqState', quals=[], storage=[] (at pp.c:15199)
            TypeDecl: declname='reqState', quals=[] (at pp.c:15199)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='StateImplP__State__forceState', quals=[] (at pp.c:15199)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15201)
      Compound:  (at pp.c:15202)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15202)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15202)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:15202)
        Assignment: op='=' (at pp.c:15204)
          ArrayRef:  (at pp.c:15204)
            ID: name='StateImplP__state' (at pp.c:15204)
            ID: name='id' (at pp.c:15204)
          ID: name='reqState' (at pp.c:15204)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:15206)
          ExprList:  (at pp.c:15206)
            ID: name='__nesc_atomic' (at pp.c:15206)
  FuncDef:  (at pp.c:15210)
    Decl: name='CC2420CsmaP__SplitControlState__forceState', quals=[], storage=['static', 'inline'] (at pp.c:15210)
      FuncDecl: quals=None (at pp.c:15210)
        ParamList:  (at pp.c:15210)
          Decl: name='reqState', quals=[], storage=[] (at pp.c:15210)
            TypeDecl: declname='reqState', quals=[] (at pp.c:15210)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__SplitControlState__forceState', quals=[] (at pp.c:15210)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15210)
      FuncCall:  (at None)
        ID: name='StateImplP__State__forceState' (at pp.c:15212)
        ExprList:  (at pp.c:15212)
          Constant: type='int', value='1U' (at pp.c:15212)
          ID: name='reqState' (at pp.c:15212)
  FuncDef:  (at pp.c:15217)
    Decl: name='CC2420CsmaP__SplitControlState__isState', quals=[], storage=['static', 'inline'] (at pp.c:15217)
      FuncDecl: quals=None (at pp.c:15217)
        ParamList:  (at pp.c:15217)
          Decl: name='myState', quals=[], storage=[] (at pp.c:15217)
            TypeDecl: declname='myState', quals=[] (at pp.c:15217)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__SplitControlState__isState', quals=[] (at pp.c:15217)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:15217)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15219)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15219)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15223)
        ID: name='__nesc_result' (at pp.c:15223)
        FuncCall:  (at None)
          ID: name='StateImplP__State__isState' (at pp.c:15223)
          ExprList:  (at pp.c:15223)
            Constant: type='int', value='1U' (at pp.c:15223)
            ID: name='myState' (at pp.c:15223)
      Return:  (at pp.c:15227)
        ID: name='__nesc_result' (at pp.c:15227)
  FuncDef:  (at pp.c:15232)
    Decl: name='CC2420CsmaP__CC2420PacketBody__getMetadata', quals=[], storage=['static', 'inline'] (at pp.c:15232)
      FuncDecl: quals=None (at pp.c:15232)
        ParamList:  (at pp.c:15232)
          Decl: name='msg', quals=[], storage=[] (at pp.c:15232)
            PtrDecl: quals=[] (at pp.c:15232)
              TypeDecl: declname='msg', quals=[] (at pp.c:15232)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:15232)
          TypeDecl: declname='CC2420CsmaP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:15232)
            IdentifierType: names=['cc2420_metadata_t'] (at None)
    Compound:  (at pp.c:15232)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15234)
        PtrDecl: quals=[] (at pp.c:15234)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15234)
            Struct: name='cc2420_metadata_t', packed=False (at pp.c:15234)
      Assignment: op='=' (at pp.c:15238)
        ID: name='__nesc_result' (at pp.c:15238)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getMetadata' (at pp.c:15238)
          ExprList:  (at pp.c:15238)
            ID: name='msg' (at pp.c:15238)
      Return:  (at pp.c:15242)
        ID: name='__nesc_result' (at pp.c:15242)
  FuncDef:  (at pp.c:15247)
    Decl: name='CC2420CsmaP__CC2420PacketBody__getHeader', quals=[], storage=['static', 'inline'] (at pp.c:15247)
      FuncDecl: quals=None (at pp.c:15247)
        ParamList:  (at pp.c:15247)
          Decl: name='msg', quals=[], storage=[] (at pp.c:15247)
            PtrDecl: quals=[] (at pp.c:15247)
              TypeDecl: declname='msg', quals=[] (at pp.c:15247)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:15247)
          TypeDecl: declname='CC2420CsmaP__CC2420PacketBody__getHeader', quals=[] (at pp.c:15247)
            IdentifierType: names=['cc2420_header_t'] (at None)
    Compound:  (at pp.c:15247)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15249)
        PtrDecl: quals=[] (at pp.c:15249)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15249)
            Struct: name='cc2420_header_t', packed=False (at pp.c:15249)
      Assignment: op='=' (at pp.c:15253)
        ID: name='__nesc_result' (at pp.c:15253)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getHeader' (at pp.c:15253)
          ExprList:  (at pp.c:15253)
            ID: name='msg' (at pp.c:15253)
      Return:  (at pp.c:15257)
        ID: name='__nesc_result' (at pp.c:15257)
  FuncDef:  (at pp.c:15262)
    Decl: name='CC2420CsmaP__Send__send', quals=[], storage=['inline', 'static'] (at pp.c:15262)
      FuncDecl: quals=None (at pp.c:15262)
        ParamList:  (at pp.c:15262)
          Decl: name='p_msg', quals=[], storage=[] (at pp.c:15262)
            PtrDecl: quals=[] (at pp.c:15262)
              TypeDecl: declname='p_msg', quals=[] (at pp.c:15262)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:15262)
            TypeDecl: declname='len', quals=[] (at pp.c:15262)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__Send__send', quals=[] (at pp.c:15262)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15264)
      Decl: name='__nesc_temp45', quals=[], storage=[] (at pp.c:15265)
        PtrDecl: quals=[] (at pp.c:15265)
          TypeDecl: declname='__nesc_temp45', quals=[] (at pp.c:15265)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='__nesc_temp44', quals=[], storage=[] (at pp.c:15266)
        PtrDecl: quals=[] (at pp.c:15266)
          TypeDecl: declname='__nesc_temp44', quals=[] (at pp.c:15266)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='header', quals=[], storage=[] (at pp.c:15268)
        PtrDecl: quals=[] (at pp.c:15268)
          TypeDecl: declname='header', quals=[] (at pp.c:15268)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420CsmaP__CC2420PacketBody__getHeader' (at pp.c:15268)
          ExprList:  (at pp.c:15268)
            ID: name='p_msg' (at pp.c:15268)
      Decl: name='metadata', quals=[], storage=[] (at pp.c:15269)
        PtrDecl: quals=[] (at pp.c:15269)
          TypeDecl: declname='metadata', quals=[] (at pp.c:15269)
            IdentifierType: names=['cc2420_metadata_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420CsmaP__CC2420PacketBody__getMetadata' (at pp.c:15269)
          ExprList:  (at pp.c:15269)
            ID: name='p_msg' (at pp.c:15269)
      Compound:  (at pp.c:15271)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15271)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15271)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:15271)
        Compound:  (at pp.c:15273)
          If:  (at pp.c:15274)
            UnaryOp: op='!' (at None)
              FuncCall:  (at None)
                ID: name='CC2420CsmaP__SplitControlState__isState' (at pp.c:15274)
                ExprList:  (at pp.c:15274)
                  ID: name='CC2420CsmaP__S_STARTED' (at pp.c:15274)
            Compound:  (at pp.c:15274)
              Compound:  (at pp.c:15275)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:15276)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:15276)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='FAIL' (at pp.c:15278)
                Compound:  (at pp.c:15280)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:15282)
                    ExprList:  (at pp.c:15282)
                      ID: name='__nesc_atomic' (at pp.c:15282)
                  Return:  (at pp.c:15284)
                    ID: name='__nesc_temp' (at pp.c:15284)
          FuncCall:  (at None)
            ID: name='CC2420CsmaP__SplitControlState__forceState' (at pp.c:15289)
            ExprList:  (at pp.c:15289)
              ID: name='CC2420CsmaP__S_TRANSMITTING' (at pp.c:15289)
          Assignment: op='=' (at pp.c:15290)
            ID: name='CC2420CsmaP__m_msg' (at pp.c:15290)
            ID: name='p_msg' (at pp.c:15290)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:15293)
          ExprList:  (at pp.c:15293)
            ID: name='__nesc_atomic' (at pp.c:15293)
      ExprList:  (at pp.c:15302)
        Assignment: op='=' (at pp.c:15302)
          ID: name='__nesc_temp44' (at pp.c:15302)
          StructRef: type='.' (at pp.c:15302)
            StructRef: type='->' (at pp.c:15302)
              ID: name='header' (at pp.c:15302)
              ID: name='fcf' (at pp.c:15302)
            ID: name='nxdata' (at pp.c:15302)
        FuncCall:  (at None)
          ID: name='__nesc_hton_leuint16' (at pp.c:15302)
          ExprList:  (at pp.c:15302)
            ID: name='__nesc_temp44' (at pp.c:15302)
            BinaryOp: op='&' (at None)
              FuncCall:  (at None)
                ID: name='__nesc_ntoh_leuint16' (at pp.c:15302)
                ExprList:  (at pp.c:15302)
                  ID: name='__nesc_temp44' (at pp.c:15302)
              BinaryOp: op='|' (at pp.c:15302)
                BinaryOp: op='|' (at pp.c:15302)
                  BinaryOp: op='<<' (at pp.c:15302)
                    Constant: type='int', value='1' (at pp.c:15302)
                    ID: name='IEEE154_FCF_ACK_REQ' (at pp.c:15302)
                  BinaryOp: op='<<' (at pp.c:15303)
                    Constant: type='int', value='0x3' (at pp.c:15303)
                    ID: name='IEEE154_FCF_SRC_ADDR_MODE' (at pp.c:15303)
                BinaryOp: op='<<' (at pp.c:15304)
                  Constant: type='int', value='0x3' (at pp.c:15304)
                  ID: name='IEEE154_FCF_DEST_ADDR_MODE' (at pp.c:15304)
      ExprList:  (at pp.c:15306)
        Assignment: op='=' (at pp.c:15306)
          ID: name='__nesc_temp45' (at pp.c:15306)
          StructRef: type='.' (at pp.c:15306)
            StructRef: type='->' (at pp.c:15306)
              ID: name='header' (at pp.c:15306)
              ID: name='fcf' (at pp.c:15306)
            ID: name='nxdata' (at pp.c:15306)
        FuncCall:  (at None)
          ID: name='__nesc_hton_leuint16' (at pp.c:15306)
          ExprList:  (at pp.c:15306)
            ID: name='__nesc_temp45' (at pp.c:15306)
            BinaryOp: op='|' (at None)
              FuncCall:  (at None)
                ID: name='__nesc_ntoh_leuint16' (at pp.c:15306)
                ExprList:  (at pp.c:15306)
                  ID: name='__nesc_temp45' (at pp.c:15306)
              BinaryOp: op='|' (at pp.c:15306)
                BinaryOp: op='<<' (at pp.c:15306)
                  ID: name='IEEE154_TYPE_DATA' (at pp.c:15306)
                  ID: name='IEEE154_FCF_FRAME_TYPE' (at pp.c:15306)
                BinaryOp: op='<<' (at pp.c:15307)
                  Constant: type='int', value='1' (at pp.c:15307)
                  ID: name='IEEE154_FCF_INTRAPAN' (at pp.c:15307)
      FuncCall:  (at None)
        ID: name='__nesc_hton_int8' (at pp.c:15309)
        ExprList:  (at pp.c:15309)
          StructRef: type='.' (at pp.c:15309)
            StructRef: type='->' (at pp.c:15309)
              ID: name='metadata' (at pp.c:15309)
              ID: name='ack' (at pp.c:15309)
            ID: name='nxdata' (at pp.c:15309)
          ID: name='FALSE' (at pp.c:15309)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint8' (at pp.c:15310)
        ExprList:  (at pp.c:15310)
          StructRef: type='.' (at pp.c:15310)
            StructRef: type='->' (at pp.c:15310)
              ID: name='metadata' (at pp.c:15310)
              ID: name='rssi' (at pp.c:15310)
            ID: name='nxdata' (at pp.c:15310)
          Constant: type='int', value='0' (at pp.c:15310)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint8' (at pp.c:15311)
        ExprList:  (at pp.c:15311)
          StructRef: type='.' (at pp.c:15311)
            StructRef: type='->' (at pp.c:15311)
              ID: name='metadata' (at pp.c:15311)
              ID: name='lqi' (at pp.c:15311)
            ID: name='nxdata' (at pp.c:15311)
          Constant: type='int', value='0' (at pp.c:15311)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint32' (at pp.c:15313)
        ExprList:  (at pp.c:15313)
          StructRef: type='.' (at pp.c:15313)
            StructRef: type='->' (at pp.c:15313)
              ID: name='metadata' (at pp.c:15313)
              ID: name='timestamp' (at pp.c:15313)
            ID: name='nxdata' (at pp.c:15313)
          ID: name='CC2420_INVALID_TIMESTAMP' (at pp.c:15313)
      Assignment: op='=' (at pp.c:15315)
        ID: name='CC2420CsmaP__ccaOn' (at pp.c:15315)
        ID: name='TRUE' (at pp.c:15315)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__RadioBackoff__requestCca' (at pp.c:15316)
        ExprList:  (at pp.c:15316)
          ID: name='CC2420CsmaP__m_msg' (at pp.c:15316)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__CC2420Transmit__send' (at pp.c:15318)
        ExprList:  (at pp.c:15318)
          ID: name='CC2420CsmaP__m_msg' (at pp.c:15318)
          ID: name='CC2420CsmaP__ccaOn' (at pp.c:15318)
      Return:  (at pp.c:15319)
        ID: name='SUCCESS' (at pp.c:15319)
  FuncDef:  (at pp.c:15323)
    Decl: name='UniqueSendP__SubSend__send', quals=[], storage=['static', 'inline'] (at pp.c:15323)
      FuncDecl: quals=None (at pp.c:15323)
        ParamList:  (at pp.c:15323)
          Decl: name='msg', quals=[], storage=[] (at pp.c:15323)
            PtrDecl: quals=[] (at pp.c:15323)
              TypeDecl: declname='msg', quals=[] (at pp.c:15323)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:15323)
            TypeDecl: declname='len', quals=[] (at pp.c:15323)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='UniqueSendP__SubSend__send', quals=[] (at pp.c:15323)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15323)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15325)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15325)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15329)
        ID: name='__nesc_result' (at pp.c:15329)
        FuncCall:  (at None)
          ID: name='CC2420CsmaP__Send__send' (at pp.c:15329)
          ExprList:  (at pp.c:15329)
            ID: name='msg' (at pp.c:15329)
            ID: name='len' (at pp.c:15329)
      Return:  (at pp.c:15333)
        ID: name='__nesc_result' (at pp.c:15333)
  FuncDef:  (at pp.c:15338)
    Decl: name='UniqueSendP__CC2420PacketBody__getHeader', quals=[], storage=['static', 'inline'] (at pp.c:15338)
      FuncDecl: quals=None (at pp.c:15338)
        ParamList:  (at pp.c:15338)
          Decl: name='msg', quals=[], storage=[] (at pp.c:15338)
            PtrDecl: quals=[] (at pp.c:15338)
              TypeDecl: declname='msg', quals=[] (at pp.c:15338)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:15338)
          TypeDecl: declname='UniqueSendP__CC2420PacketBody__getHeader', quals=[] (at pp.c:15338)
            IdentifierType: names=['cc2420_header_t'] (at None)
    Compound:  (at pp.c:15338)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15340)
        PtrDecl: quals=[] (at pp.c:15340)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15340)
            Struct: name='cc2420_header_t', packed=False (at pp.c:15340)
      Assignment: op='=' (at pp.c:15344)
        ID: name='__nesc_result' (at pp.c:15344)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getHeader' (at pp.c:15344)
          ExprList:  (at pp.c:15344)
            ID: name='msg' (at pp.c:15344)
      Return:  (at pp.c:15348)
        ID: name='__nesc_result' (at pp.c:15348)
  FuncDef:  (at pp.c:15353)
    Decl: name='UniqueSendP__State__requestState', quals=[], storage=['static', 'inline'] (at pp.c:15353)
      FuncDecl: quals=None (at pp.c:15353)
        ParamList:  (at pp.c:15353)
          Decl: name='reqState', quals=[], storage=[] (at pp.c:15353)
            TypeDecl: declname='reqState', quals=[] (at pp.c:15353)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='UniqueSendP__State__requestState', quals=[] (at pp.c:15353)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15353)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15355)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15355)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15359)
        ID: name='__nesc_result' (at pp.c:15359)
        FuncCall:  (at None)
          ID: name='StateImplP__State__requestState' (at pp.c:15359)
          ExprList:  (at pp.c:15359)
            Constant: type='int', value='2U' (at pp.c:15359)
            ID: name='reqState' (at pp.c:15359)
      Return:  (at pp.c:15363)
        ID: name='__nesc_result' (at pp.c:15363)
  FuncDef:  (at pp.c:15368)
    Decl: name='UniqueSendP__Send__send', quals=[], storage=['inline', 'static'] (at pp.c:15368)
      FuncDecl: quals=None (at pp.c:15368)
        ParamList:  (at pp.c:15368)
          Decl: name='msg', quals=[], storage=[] (at pp.c:15368)
            PtrDecl: quals=[] (at pp.c:15368)
              TypeDecl: declname='msg', quals=[] (at pp.c:15368)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:15368)
            TypeDecl: declname='len', quals=[] (at pp.c:15368)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='UniqueSendP__Send__send', quals=[] (at pp.c:15368)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15370)
      Decl: name='error', quals=[], storage=[] (at pp.c:15371)
        TypeDecl: declname='error', quals=[] (at pp.c:15371)
          IdentifierType: names=['error_t'] (at None)
      If:  (at pp.c:15374)
        BinaryOp: op='==' (at None)
          FuncCall:  (at None)
            ID: name='UniqueSendP__State__requestState' (at pp.c:15374)
            ExprList:  (at pp.c:15374)
              ID: name='UniqueSendP__S_SENDING' (at pp.c:15374)
          ID: name='SUCCESS' (at pp.c:15374)
        Compound:  (at pp.c:15374)
          FuncCall:  (at None)
            ID: name='__nesc_hton_leuint8' (at pp.c:15375)
            ExprList:  (at None)
              StructRef: type='.' (at None)
                StructRef: type='->' (at None)
                  FuncCall:  (at None)
                    ID: name='UniqueSendP__CC2420PacketBody__getHeader' (at pp.c:15375)
                    ExprList:  (at pp.c:15375)
                      ID: name='msg' (at pp.c:15375)
                  ID: name='dsn' (at pp.c:15375)
                ID: name='nxdata' (at pp.c:15375)
              UnaryOp: op='p++' (at pp.c:15375)
                ID: name='UniqueSendP__localSendId' (at pp.c:15375)
          If:  (at pp.c:15377)
            BinaryOp: op='!=' (at pp.c:15377)
              Assignment: op='=' (at pp.c:15377)
                ID: name='error' (at pp.c:15377)
                FuncCall:  (at None)
                  ID: name='UniqueSendP__SubSend__send' (at pp.c:15377)
                  ExprList:  (at pp.c:15377)
                    ID: name='msg' (at pp.c:15377)
                    ID: name='len' (at pp.c:15377)
              ID: name='SUCCESS' (at pp.c:15377)
            Compound:  (at pp.c:15377)
              FuncCall:  (at None)
                ID: name='UniqueSendP__State__toIdle' (at pp.c:15378)
          Return:  (at pp.c:15381)
            ID: name='error' (at pp.c:15381)
      Return:  (at pp.c:15384)
        ID: name='EBUSY' (at pp.c:15384)
  FuncDef:  (at pp.c:15388)
    Decl: name='CC2420TinyosNetworkP__SubSend__send', quals=[], storage=['static', 'inline'] (at pp.c:15388)
      FuncDecl: quals=None (at pp.c:15388)
        ParamList:  (at pp.c:15388)
          Decl: name='msg', quals=[], storage=[] (at pp.c:15388)
            PtrDecl: quals=[] (at pp.c:15388)
              TypeDecl: declname='msg', quals=[] (at pp.c:15388)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:15388)
            TypeDecl: declname='len', quals=[] (at pp.c:15388)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__SubSend__send', quals=[] (at pp.c:15388)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15388)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15390)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15390)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15394)
        ID: name='__nesc_result' (at pp.c:15394)
        FuncCall:  (at None)
          ID: name='UniqueSendP__Send__send' (at pp.c:15394)
          ExprList:  (at pp.c:15394)
            ID: name='msg' (at pp.c:15394)
            ID: name='len' (at pp.c:15394)
      Return:  (at pp.c:15398)
        ID: name='__nesc_result' (at pp.c:15398)
  FuncDef:  (at pp.c:15403)
    Decl: name='CC2420TransmitP__TXCTRL__write', quals=[], storage=['static', 'inline'] (at pp.c:15403)
      FuncDecl: quals=None (at pp.c:15403)
        ParamList:  (at pp.c:15403)
          Decl: name='data', quals=[], storage=[] (at pp.c:15403)
            TypeDecl: declname='data', quals=[] (at pp.c:15403)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__TXCTRL__write', quals=[] (at pp.c:15403)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:15403)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15405)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15405)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15409)
        ID: name='__nesc_result' (at pp.c:15409)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Reg__write' (at pp.c:15409)
          ExprList:  (at pp.c:15409)
            ID: name='CC2420_TXCTRL' (at pp.c:15409)
            ID: name='data' (at pp.c:15409)
      Return:  (at pp.c:15413)
        ID: name='__nesc_result' (at pp.c:15413)
  FuncDef:  (at pp.c:15418)
    Decl: name='CC2420SpiP__SpiPacket__send', quals=[], storage=['static', 'inline'] (at pp.c:15418)
      FuncDecl: quals=None (at pp.c:15418)
        ParamList:  (at pp.c:15418)
          Decl: name='txBuf', quals=[], storage=[] (at pp.c:15418)
            PtrDecl: quals=[] (at pp.c:15418)
              TypeDecl: declname='txBuf', quals=[] (at pp.c:15418)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='rxBuf', quals=[], storage=[] (at pp.c:15418)
            PtrDecl: quals=[] (at pp.c:15418)
              TypeDecl: declname='rxBuf', quals=[] (at pp.c:15418)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:15418)
            TypeDecl: declname='len', quals=[] (at pp.c:15418)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420SpiP__SpiPacket__send', quals=[] (at pp.c:15418)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15418)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15420)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15420)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15424)
        ID: name='__nesc_result' (at pp.c:15424)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__SpiPacket__send' (at pp.c:15424)
          ExprList:  (at pp.c:15424)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:15424)
            ID: name='txBuf' (at pp.c:15424)
            ID: name='rxBuf' (at pp.c:15424)
            ID: name='len' (at pp.c:15424)
      Return:  (at pp.c:15428)
        ID: name='__nesc_result' (at pp.c:15428)
  FuncDef:  (at pp.c:15433)
    Decl: name='CC2420SpiP__SpiByte__write', quals=[], storage=['static', 'inline'] (at pp.c:15433)
      FuncDecl: quals=None (at pp.c:15433)
        ParamList:  (at pp.c:15433)
          Decl: name='tx', quals=[], storage=[] (at pp.c:15433)
            TypeDecl: declname='tx', quals=[] (at pp.c:15433)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__SpiByte__write', quals=[] (at pp.c:15433)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:15433)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15435)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15435)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15439)
        ID: name='__nesc_result' (at pp.c:15439)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__SpiByte__write' (at pp.c:15439)
          ExprList:  (at pp.c:15439)
            ID: name='tx' (at pp.c:15439)
      Return:  (at pp.c:15443)
        ID: name='__nesc_result' (at pp.c:15443)
  FuncDef:  (at pp.c:15448)
    Decl: name='StateImplP__State__isIdle', quals=[], storage=['inline', 'static'] (at pp.c:15448)
      FuncDecl: quals=None (at pp.c:15448)
        ParamList:  (at pp.c:15448)
          Decl: name='id', quals=[], storage=[] (at pp.c:15448)
            TypeDecl: declname='id', quals=[] (at pp.c:15448)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='StateImplP__State__isIdle', quals=[] (at pp.c:15448)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:15450)
      Return:  (at pp.c:15451)
        FuncCall:  (at None)
          ID: name='StateImplP__State__isState' (at pp.c:15451)
          ExprList:  (at pp.c:15451)
            ID: name='id' (at pp.c:15451)
            ID: name='StateImplP__S_IDLE' (at pp.c:15451)
  FuncDef:  (at pp.c:15455)
    Decl: name='CC2420SpiP__WorkingState__isIdle', quals=[], storage=['static', 'inline'] (at pp.c:15455)
      FuncDecl: quals=None (at pp.c:15455)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__WorkingState__isIdle', quals=[] (at pp.c:15455)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:15455)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15457)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15457)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15461)
        ID: name='__nesc_result' (at pp.c:15461)
        FuncCall:  (at None)
          ID: name='StateImplP__State__isIdle' (at pp.c:15461)
          ExprList:  (at pp.c:15461)
            Constant: type='int', value='0U' (at pp.c:15461)
      Return:  (at pp.c:15465)
        ID: name='__nesc_result' (at pp.c:15465)
  FuncDef:  (at pp.c:15470)
    Decl: name='CC2420SpiP__Fifo__write', quals=[], storage=['inline', 'static'] (at pp.c:15470)
      FuncDecl: quals=None (at pp.c:15470)
        ParamList:  (at pp.c:15470)
          Decl: name='addr', quals=[], storage=[] (at pp.c:15470)
            TypeDecl: declname='addr', quals=[] (at pp.c:15470)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:15470)
            PtrDecl: quals=[] (at pp.c:15470)
              TypeDecl: declname='data', quals=[] (at pp.c:15470)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:15471)
            TypeDecl: declname='len', quals=[] (at pp.c:15471)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Fifo__write', quals=[] (at pp.c:15470)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:15473)
      Decl: name='status', quals=[], storage=[] (at pp.c:15475)
        TypeDecl: declname='status', quals=[] (at pp.c:15475)
          IdentifierType: names=['uint8_t'] (at None)
        Constant: type='int', value='0' (at pp.c:15475)
      Compound:  (at pp.c:15477)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15477)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15477)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:15477)
        Compound:  (at pp.c:15479)
          If:  (at pp.c:15480)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__WorkingState__isIdle' (at pp.c:15480)
            Compound:  (at pp.c:15480)
              Compound:  (at pp.c:15481)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:15482)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:15482)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='status' (at pp.c:15484)
                Compound:  (at pp.c:15486)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:15488)
                    ExprList:  (at pp.c:15488)
                      ID: name='__nesc_atomic' (at pp.c:15488)
                  Return:  (at pp.c:15490)
                    ID: name='__nesc_temp' (at pp.c:15490)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:15496)
          ExprList:  (at pp.c:15496)
            ID: name='__nesc_atomic' (at pp.c:15496)
      Assignment: op='=' (at pp.c:15498)
        ID: name='CC2420SpiP__m_addr' (at pp.c:15498)
        ID: name='addr' (at pp.c:15498)
      Assignment: op='=' (at pp.c:15500)
        ID: name='status' (at pp.c:15500)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__SpiByte__write' (at pp.c:15500)
          ExprList:  (at pp.c:15500)
            ID: name='CC2420SpiP__m_addr' (at pp.c:15500)
      FuncCall:  (at None)
        ID: name='CC2420SpiP__SpiPacket__send' (at pp.c:15501)
        ExprList:  (at pp.c:15501)
          ID: name='data' (at pp.c:15501)
          Cast:  (at None)
            Typename: quals=[] (at None)
              PtrDecl: quals=[] (at pp.c:15501)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['void'] (at None)
            Constant: type='int', value='0' (at pp.c:15501)
          ID: name='len' (at pp.c:15501)
      Return:  (at pp.c:15503)
        ID: name='status' (at pp.c:15503)
  FuncDef:  (at pp.c:15507)
    Decl: name='CC2420TransmitP__TXFIFO__write', quals=[], storage=['static', 'inline'] (at pp.c:15507)
      FuncDecl: quals=None (at pp.c:15507)
        ParamList:  (at pp.c:15507)
          Decl: name='data', quals=[], storage=[] (at pp.c:15507)
            PtrDecl: quals=[] (at pp.c:15507)
              TypeDecl: declname='data', quals=[] (at pp.c:15507)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='length', quals=[], storage=[] (at pp.c:15507)
            TypeDecl: declname='length', quals=[] (at pp.c:15507)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__TXFIFO__write', quals=[] (at pp.c:15507)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:15507)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15509)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15509)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15513)
        ID: name='__nesc_result' (at pp.c:15513)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Fifo__write' (at pp.c:15513)
          ExprList:  (at pp.c:15513)
            ID: name='CC2420_TXFIFO' (at pp.c:15513)
            ID: name='data' (at pp.c:15513)
            ID: name='length' (at pp.c:15513)
      Return:  (at pp.c:15517)
        ID: name='__nesc_result' (at pp.c:15517)
  FuncDef:  (at pp.c:15522)
    Decl: name='HplMsp430Usart0P__Usart__enableRxIntr', quals=[], storage=['inline', 'static'] (at pp.c:15522)
      FuncDecl: quals=None (at pp.c:15522)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__enableRxIntr', quals=[] (at pp.c:15522)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15524)
      Compound:  (at pp.c:15525)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15525)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15525)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:15525)
        Compound:  (at pp.c:15527)
          Assignment: op='&=' (at pp.c:15528)
            ID: name='HplMsp430Usart0P__IFG1' (at pp.c:15528)
            UnaryOp: op='~' (at pp.c:15528)
              BinaryOp: op='<<' (at pp.c:15528)
                Constant: type='int', value='1' (at pp.c:15528)
                Constant: type='int', value='6' (at pp.c:15528)
          Assignment: op='|=' (at pp.c:15529)
            ID: name='HplMsp430Usart0P__IE1' (at pp.c:15529)
            BinaryOp: op='<<' (at pp.c:15529)
              Constant: type='int', value='1' (at pp.c:15529)
              Constant: type='int', value='6' (at pp.c:15529)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:15532)
          ExprList:  (at pp.c:15532)
            ID: name='__nesc_atomic' (at pp.c:15532)
  FuncDef:  (at pp.c:15536)
    Decl: name='Msp430SpiNoDmaP__0__Usart__enableRxIntr', quals=[], storage=['static', 'inline'] (at pp.c:15536)
      FuncDecl: quals=None (at pp.c:15536)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__enableRxIntr', quals=[] (at pp.c:15536)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15536)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Usart__enableRxIntr' (at pp.c:15538)
  FuncDef:  (at pp.c:15543)
    Decl: name='Msp430SpiNoDmaP__0__signalDone_task__postTask', quals=[], storage=['static', 'inline'] (at pp.c:15543)
      FuncDecl: quals=None (at pp.c:15543)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__signalDone_task__postTask', quals=[] (at pp.c:15543)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15543)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15545)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15545)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15549)
        ID: name='__nesc_result' (at pp.c:15549)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:15549)
          ExprList:  (at pp.c:15549)
            ID: name='Msp430SpiNoDmaP__0__signalDone_task' (at pp.c:15549)
      Return:  (at pp.c:15553)
        ID: name='__nesc_result' (at pp.c:15553)
  FuncDef:  (at pp.c:15558)
    Decl: name='FcfsResourceQueueC__0__FcfsQueue__isEnqueued', quals=[], storage=['inline', 'static'] (at pp.c:15558)
      FuncDecl: quals=None (at pp.c:15558)
        ParamList:  (at pp.c:15558)
          Decl: name='id', quals=[], storage=[] (at pp.c:15558)
            TypeDecl: declname='id', quals=[] (at pp.c:15558)
              IdentifierType: names=['resource_client_id_t'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__isEnqueued', quals=[] (at pp.c:15558)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:15560)
      Compound:  (at pp.c:15563)
        Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:15564)
          TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:15564)
            IdentifierType: names=['char', 'unsigned'] (at None)
          BinaryOp: op='||' (at pp.c:15566)
            BinaryOp: op='!=' (at pp.c:15566)
              ArrayRef:  (at pp.c:15566)
                ID: name='FcfsResourceQueueC__0__resQ' (at pp.c:15566)
                ID: name='id' (at pp.c:15566)
              ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:15566)
            BinaryOp: op='==' (at pp.c:15566)
              ID: name='FcfsResourceQueueC__0__qTail' (at pp.c:15566)
              ID: name='id' (at pp.c:15566)
        Return:  (at pp.c:15569)
          ID: name='__nesc_temp' (at pp.c:15569)
  FuncDef:  (at pp.c:15574)
    Decl: name='FcfsResourceQueueC__0__FcfsQueue__enqueue', quals=[], storage=['inline', 'static'] (at pp.c:15574)
      FuncDecl: quals=None (at pp.c:15574)
        ParamList:  (at pp.c:15574)
          Decl: name='id', quals=[], storage=[] (at pp.c:15574)
            TypeDecl: declname='id', quals=[] (at pp.c:15574)
              IdentifierType: names=['resource_client_id_t'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__enqueue', quals=[] (at pp.c:15574)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15576)
      Compound:  (at pp.c:15577)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15577)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15577)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:15577)
        Compound:  (at pp.c:15579)
          If:  (at pp.c:15580)
            UnaryOp: op='!' (at None)
              FuncCall:  (at None)
                ID: name='FcfsResourceQueueC__0__FcfsQueue__isEnqueued' (at pp.c:15580)
                ExprList:  (at pp.c:15580)
                  ID: name='id' (at pp.c:15580)
            Compound:  (at pp.c:15580)
              If:  (at pp.c:15581)
                BinaryOp: op='==' (at pp.c:15581)
                  ID: name='FcfsResourceQueueC__0__qHead' (at pp.c:15581)
                  ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:15581)
                Compound:  (at pp.c:15581)
                  Assignment: op='=' (at pp.c:15582)
                    ID: name='FcfsResourceQueueC__0__qHead' (at pp.c:15582)
                    ID: name='id' (at pp.c:15582)
                Compound:  (at pp.c:15584)
                  Assignment: op='=' (at pp.c:15586)
                    ArrayRef:  (at pp.c:15586)
                      ID: name='FcfsResourceQueueC__0__resQ' (at pp.c:15586)
                      ID: name='FcfsResourceQueueC__0__qTail' (at pp.c:15586)
                    ID: name='id' (at pp.c:15586)
              Assignment: op='=' (at pp.c:15589)
                ID: name='FcfsResourceQueueC__0__qTail' (at pp.c:15589)
                ID: name='id' (at pp.c:15589)
              Compound:  (at pp.c:15590)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:15591)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:15591)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='SUCCESS' (at pp.c:15593)
                Compound:  (at pp.c:15595)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:15597)
                    ExprList:  (at pp.c:15597)
                      ID: name='__nesc_atomic' (at pp.c:15597)
                  Return:  (at pp.c:15599)
                    ID: name='__nesc_temp' (at pp.c:15599)
          Compound:  (at pp.c:15604)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:15605)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:15605)
                IdentifierType: names=['char', 'unsigned'] (at None)
              ID: name='EBUSY' (at pp.c:15607)
            Compound:  (at pp.c:15609)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_end' (at pp.c:15611)
                ExprList:  (at pp.c:15611)
                  ID: name='__nesc_atomic' (at pp.c:15611)
              Return:  (at pp.c:15613)
                ID: name='__nesc_temp' (at pp.c:15613)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:15618)
          ExprList:  (at pp.c:15618)
            ID: name='__nesc_atomic' (at pp.c:15618)
  FuncDef:  (at pp.c:15622)
    Decl: name='CC2420TinyosNetworkP__Queue__enqueue', quals=[], storage=['static', 'inline'] (at pp.c:15622)
      FuncDecl: quals=None (at pp.c:15622)
        ParamList:  (at pp.c:15622)
          Decl: name='id', quals=[], storage=[] (at pp.c:15622)
            TypeDecl: declname='id', quals=[] (at pp.c:15622)
              IdentifierType: names=['resource_client_id_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__Queue__enqueue', quals=[] (at pp.c:15622)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15622)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15624)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15624)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15628)
        ID: name='__nesc_result' (at pp.c:15628)
        FuncCall:  (at None)
          ID: name='FcfsResourceQueueC__0__FcfsQueue__enqueue' (at pp.c:15628)
          ExprList:  (at pp.c:15628)
            ID: name='id' (at pp.c:15628)
      Return:  (at pp.c:15632)
        ID: name='__nesc_result' (at pp.c:15632)
  FuncDef:  (at pp.c:15637)
    Decl: name='CC2420TinyosNetworkP__grantTask__postTask', quals=[], storage=['static', 'inline'] (at pp.c:15637)
      FuncDecl: quals=None (at pp.c:15637)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__grantTask__postTask', quals=[] (at pp.c:15637)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15637)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15639)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15639)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15643)
        ID: name='__nesc_result' (at pp.c:15643)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:15643)
          ExprList:  (at pp.c:15643)
            ID: name='CC2420TinyosNetworkP__grantTask' (at pp.c:15643)
      Return:  (at pp.c:15647)
        ID: name='__nesc_result' (at pp.c:15647)
  FuncDef:  (at pp.c:15652)
    Decl: name='CC2420TinyosNetworkP__Resource__request', quals=[], storage=['inline', 'static'] (at pp.c:15652)
      FuncDecl: quals=None (at pp.c:15652)
        ParamList:  (at pp.c:15652)
          Decl: name='id', quals=[], storage=[] (at pp.c:15652)
            TypeDecl: declname='id', quals=[] (at pp.c:15652)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__Resource__request', quals=[] (at pp.c:15652)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15654)
      FuncCall:  (at None)
        ID: name='CC2420TinyosNetworkP__grantTask__postTask' (at pp.c:15656)
      If:  (at pp.c:15658)
        BinaryOp: op='>' (at pp.c:15658)
          ID: name='CC2420TinyosNetworkP__TINYOS_N_NETWORKS' (at pp.c:15658)
          Constant: type='int', value='1' (at pp.c:15658)
        Compound:  (at pp.c:15658)
          Return:  (at pp.c:15659)
            FuncCall:  (at None)
              ID: name='CC2420TinyosNetworkP__Queue__enqueue' (at pp.c:15659)
              ExprList:  (at pp.c:15659)
                ID: name='id' (at pp.c:15659)
        Compound:  (at pp.c:15663)
          If:  (at pp.c:15664)
            BinaryOp: op='==' (at pp.c:15664)
              ID: name='id' (at pp.c:15664)
              ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:15664)
            Compound:  (at pp.c:15664)
              Return:  (at pp.c:15665)
                ID: name='EALREADY' (at pp.c:15665)
            Compound:  (at pp.c:15669)
              Assignment: op='=' (at pp.c:15670)
                ID: name='CC2420TinyosNetworkP__next_owner' (at pp.c:15670)
                ID: name='id' (at pp.c:15670)
              Return:  (at pp.c:15671)
                ID: name='SUCCESS' (at pp.c:15671)
  FuncDef:  (at pp.c:15677)
    Decl: name='CC2420ActiveMessageP__RadioResource__request', quals=[], storage=['static', 'inline'] (at pp.c:15677)
      FuncDecl: quals=None (at pp.c:15677)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__RadioResource__request', quals=[] (at pp.c:15677)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15677)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15679)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15679)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15683)
        ID: name='__nesc_result' (at pp.c:15683)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__Resource__request' (at pp.c:15683)
          ExprList:  (at pp.c:15683)
            ID: name='CC2420ActiveMessageC__CC2420_AM_SEND_ID' (at pp.c:15683)
      Return:  (at pp.c:15687)
        ID: name='__nesc_result' (at pp.c:15687)
  FuncDef:  (at pp.c:15692)
    Decl: name='ArbitratedReadStreamC__0__ReadStream__default__bufferDone', quals=[], storage=['inline', 'static'] (at pp.c:15692)
      FuncDecl: quals=None (at pp.c:15692)
        ParamList:  (at pp.c:15692)
          Decl: name='client', quals=[], storage=[] (at pp.c:15692)
            TypeDecl: declname='client', quals=[] (at pp.c:15692)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:15692)
            TypeDecl: declname='result', quals=[] (at pp.c:15692)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:15692)
            PtrDecl: quals=[] (at pp.c:15692)
              TypeDecl: declname='buf', quals=[] (at pp.c:15692)
                IdentifierType: names=['ArbitratedReadStreamC__0__val_t'] (at None)
          Decl: name='count', quals=[], storage=[] (at pp.c:15692)
            TypeDecl: declname='count', quals=[] (at pp.c:15692)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__default__bufferDone', quals=[] (at pp.c:15692)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15693)
  FuncDef:  (at pp.c:15697)
    Decl: name='ArbitratedReadStreamC__0__ReadStream__bufferDone', quals=[], storage=['static', 'inline'] (at pp.c:15697)
      FuncDecl: quals=None (at pp.c:15697)
        ParamList:  (at pp.c:15697)
          Decl: name='arg_0x102931020', quals=[], storage=[] (at pp.c:15697)
            TypeDecl: declname='arg_0x102931020', quals=[] (at pp.c:15697)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:15697)
            TypeDecl: declname='result', quals=[] (at pp.c:15697)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:15697)
            PtrDecl: quals=[] (at pp.c:15697)
              TypeDecl: declname='buf', quals=[] (at pp.c:15697)
                IdentifierType: names=['ArbitratedReadStreamC__0__ReadStream__val_t'] (at None)
          Decl: name='count', quals=[], storage=[] (at pp.c:15697)
            TypeDecl: declname='count', quals=[] (at pp.c:15697)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__bufferDone', quals=[] (at pp.c:15697)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15697)
      FuncCall:  (at None)
        ID: name='ArbitratedReadStreamC__0__ReadStream__default__bufferDone' (at pp.c:15699)
        ExprList:  (at pp.c:15699)
          ID: name='arg_0x102931020' (at pp.c:15699)
          ID: name='result' (at pp.c:15699)
          ID: name='buf' (at pp.c:15699)
          ID: name='count' (at pp.c:15699)
  FuncDef:  (at pp.c:15704)
    Decl: name='ArbitratedReadStreamC__0__Service__bufferDone', quals=[], storage=['inline', 'static'] (at pp.c:15704)
      FuncDecl: quals=None (at pp.c:15704)
        ParamList:  (at pp.c:15704)
          Decl: name='client', quals=[], storage=[] (at pp.c:15704)
            TypeDecl: declname='client', quals=[] (at pp.c:15704)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:15704)
            TypeDecl: declname='result', quals=[] (at pp.c:15704)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:15704)
            PtrDecl: quals=[] (at pp.c:15704)
              TypeDecl: declname='buf', quals=[] (at pp.c:15704)
                IdentifierType: names=['ArbitratedReadStreamC__0__val_t'] (at None)
          Decl: name='count', quals=[], storage=[] (at pp.c:15704)
            TypeDecl: declname='count', quals=[] (at pp.c:15704)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='ArbitratedReadStreamC__0__Service__bufferDone', quals=[] (at pp.c:15704)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15705)
      FuncCall:  (at None)
        ID: name='ArbitratedReadStreamC__0__ReadStream__bufferDone' (at pp.c:15706)
        ExprList:  (at pp.c:15706)
          ID: name='client' (at pp.c:15706)
          ID: name='result' (at pp.c:15706)
          ID: name='buf' (at pp.c:15706)
          ID: name='count' (at pp.c:15706)
  FuncDef:  (at pp.c:15710)
    Decl: name='AdcStreamP__ReadStream__bufferDone', quals=[], storage=['static', 'inline'] (at pp.c:15710)
      FuncDecl: quals=None (at pp.c:15710)
        ParamList:  (at pp.c:15710)
          Decl: name='arg_0x1028c9b08', quals=[], storage=[] (at pp.c:15710)
            TypeDecl: declname='arg_0x1028c9b08', quals=[] (at pp.c:15710)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:15710)
            TypeDecl: declname='result', quals=[] (at pp.c:15710)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:15710)
            PtrDecl: quals=[] (at pp.c:15710)
              TypeDecl: declname='buf', quals=[] (at pp.c:15710)
                IdentifierType: names=['AdcStreamP__ReadStream__val_t'] (at None)
          Decl: name='count', quals=[], storage=[] (at pp.c:15710)
            TypeDecl: declname='count', quals=[] (at pp.c:15710)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='AdcStreamP__ReadStream__bufferDone', quals=[] (at pp.c:15710)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15710)
      FuncCall:  (at None)
        ID: name='ArbitratedReadStreamC__0__Service__bufferDone' (at pp.c:15712)
        ExprList:  (at pp.c:15712)
          ID: name='arg_0x1028c9b08' (at pp.c:15712)
          ID: name='result' (at pp.c:15712)
          ID: name='buf' (at pp.c:15712)
          ID: name='count' (at pp.c:15712)
  FuncDef:  (at pp.c:15717)
    Decl: name='AdcStreamP__bufferDone__runTask', quals=[], storage=['inline', 'static'] (at pp.c:15717)
      FuncDecl: quals=None (at pp.c:15717)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__bufferDone__runTask', quals=[] (at pp.c:15717)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15719)
      Decl: name='b', quals=[], storage=[] (at pp.c:15720)
        PtrDecl: quals=[] (at pp.c:15720)
          TypeDecl: declname='b', quals=[] (at pp.c:15720)
            IdentifierType: names=['uint16_t'] (at None)
      Decl: name='c', quals=[], storage=[] (at pp.c:15722)
        TypeDecl: declname='c', quals=[] (at pp.c:15722)
          IdentifierType: names=['uint16_t'] (at None)
      Compound:  (at pp.c:15725)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15725)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15725)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:15725)
        Compound:  (at pp.c:15726)
          Assignment: op='=' (at pp.c:15727)
            ID: name='b' (at pp.c:15727)
            ID: name='AdcStreamP__lastBuffer' (at pp.c:15727)
          Assignment: op='=' (at pp.c:15728)
            ID: name='c' (at pp.c:15728)
            ID: name='AdcStreamP__lastCount' (at pp.c:15728)
          Assignment: op='=' (at pp.c:15729)
            ID: name='AdcStreamP__lastBuffer' (at pp.c:15729)
            Cast:  (at None)
              Typename: quals=[] (at None)
                PtrDecl: quals=[] (at pp.c:15729)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['void'] (at None)
              Constant: type='int', value='0' (at pp.c:15729)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:15732)
          ExprList:  (at pp.c:15732)
            ID: name='__nesc_atomic' (at pp.c:15732)
      FuncCall:  (at None)
        ID: name='AdcStreamP__ReadStream__bufferDone' (at pp.c:15734)
        ExprList:  (at pp.c:15734)
          ID: name='AdcStreamP__client' (at pp.c:15734)
          ID: name='SUCCESS' (at pp.c:15734)
          ID: name='b' (at pp.c:15734)
          ID: name='c' (at pp.c:15734)
  FuncDef:  (at pp.c:15738)
    Decl: name='ArbitratedReadStreamC__0__ReadStream__default__readDone', quals=[], storage=['inline', 'static'] (at pp.c:15738)
      FuncDecl: quals=None (at pp.c:15738)
        ParamList:  (at pp.c:15738)
          Decl: name='client', quals=[], storage=[] (at pp.c:15738)
            TypeDecl: declname='client', quals=[] (at pp.c:15738)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:15738)
            TypeDecl: declname='result', quals=[] (at pp.c:15738)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='actualPeriod', quals=[], storage=[] (at pp.c:15738)
            TypeDecl: declname='actualPeriod', quals=[] (at pp.c:15738)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__default__readDone', quals=[] (at pp.c:15738)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15739)
  FuncDef:  (at pp.c:15743)
    Decl: name='ArbitratedReadStreamC__0__ReadStream__readDone', quals=[], storage=['static', 'inline'] (at pp.c:15743)
      FuncDecl: quals=None (at pp.c:15743)
        ParamList:  (at pp.c:15743)
          Decl: name='arg_0x102931020', quals=[], storage=[] (at pp.c:15743)
            TypeDecl: declname='arg_0x102931020', quals=[] (at pp.c:15743)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:15743)
            TypeDecl: declname='result', quals=[] (at pp.c:15743)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='usActualPeriod', quals=[], storage=[] (at pp.c:15743)
            TypeDecl: declname='usActualPeriod', quals=[] (at pp.c:15743)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='ArbitratedReadStreamC__0__ReadStream__readDone', quals=[] (at pp.c:15743)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15743)
      FuncCall:  (at None)
        ID: name='ArbitratedReadStreamC__0__ReadStream__default__readDone' (at pp.c:15745)
        ExprList:  (at pp.c:15745)
          ID: name='arg_0x102931020' (at pp.c:15745)
          ID: name='result' (at pp.c:15745)
          ID: name='usActualPeriod' (at pp.c:15745)
  FuncDef:  (at pp.c:15750)
    Decl: name='ArbitratedReadStreamC__0__Resource__default__release', quals=[], storage=['inline', 'static'] (at pp.c:15750)
      FuncDecl: quals=None (at pp.c:15750)
        ParamList:  (at pp.c:15750)
          Decl: name='client', quals=[], storage=[] (at pp.c:15750)
            TypeDecl: declname='client', quals=[] (at pp.c:15750)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbitratedReadStreamC__0__Resource__default__release', quals=[] (at pp.c:15750)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15752)
      Return:  (at pp.c:15754)
        ID: name='FAIL' (at pp.c:15754)
  FuncDef:  (at pp.c:15758)
    Decl: name='ArbitratedReadStreamC__0__Resource__release', quals=[], storage=['static', 'inline'] (at pp.c:15758)
      FuncDecl: quals=None (at pp.c:15758)
        ParamList:  (at pp.c:15758)
          Decl: name='arg_0x102929020', quals=[], storage=[] (at pp.c:15758)
            TypeDecl: declname='arg_0x102929020', quals=[] (at pp.c:15758)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbitratedReadStreamC__0__Resource__release', quals=[] (at pp.c:15758)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15758)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15760)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15760)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:15764)
        ID: name='arg_0x102929020' (at pp.c:15764)
        Compound:  (at pp.c:15764)
          Case:  (at pp.c:15766)
            ID: name='AdcReadStreamClientC__0__RSCLIENT' (at pp.c:15766)
            Assignment: op='=' (at pp.c:15768)
              ID: name='__nesc_result' (at pp.c:15768)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__ClientResource__release' (at pp.c:15768)
                ExprList:  (at pp.c:15768)
                  ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:15768)
          Break:  (at pp.c:15770)
          Default:  (at pp.c:15772)
            Assignment: op='=' (at pp.c:15774)
              ID: name='__nesc_result' (at pp.c:15774)
              FuncCall:  (at None)
                ID: name='ArbitratedReadStreamC__0__Resource__default__release' (at pp.c:15774)
                ExprList:  (at pp.c:15774)
                  ID: name='arg_0x102929020' (at pp.c:15774)
          Break:  (at pp.c:15776)
      Return:  (at pp.c:15782)
        ID: name='__nesc_result' (at pp.c:15782)
  FuncDef:  (at pp.c:15787)
    Decl: name='ArbitratedReadStreamC__0__Service__readDone', quals=[], storage=['inline', 'static'] (at pp.c:15787)
      FuncDecl: quals=None (at pp.c:15787)
        ParamList:  (at pp.c:15787)
          Decl: name='client', quals=[], storage=[] (at pp.c:15787)
            TypeDecl: declname='client', quals=[] (at pp.c:15787)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:15787)
            TypeDecl: declname='result', quals=[] (at pp.c:15787)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='actualPeriod', quals=[], storage=[] (at pp.c:15787)
            TypeDecl: declname='actualPeriod', quals=[] (at pp.c:15787)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='ArbitratedReadStreamC__0__Service__readDone', quals=[] (at pp.c:15787)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15788)
      FuncCall:  (at None)
        ID: name='ArbitratedReadStreamC__0__Resource__release' (at pp.c:15789)
        ExprList:  (at pp.c:15789)
          ID: name='client' (at pp.c:15789)
      FuncCall:  (at None)
        ID: name='ArbitratedReadStreamC__0__ReadStream__readDone' (at pp.c:15790)
        ExprList:  (at pp.c:15790)
          ID: name='client' (at pp.c:15790)
          ID: name='result' (at pp.c:15790)
          ID: name='actualPeriod' (at pp.c:15790)
  FuncDef:  (at pp.c:15794)
    Decl: name='AdcStreamP__ReadStream__readDone', quals=[], storage=['static', 'inline'] (at pp.c:15794)
      FuncDecl: quals=None (at pp.c:15794)
        ParamList:  (at pp.c:15794)
          Decl: name='arg_0x1028c9b08', quals=[], storage=[] (at pp.c:15794)
            TypeDecl: declname='arg_0x1028c9b08', quals=[] (at pp.c:15794)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:15794)
            TypeDecl: declname='result', quals=[] (at pp.c:15794)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='usActualPeriod', quals=[], storage=[] (at pp.c:15794)
            TypeDecl: declname='usActualPeriod', quals=[] (at pp.c:15794)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='AdcStreamP__ReadStream__readDone', quals=[] (at pp.c:15794)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15794)
      FuncCall:  (at None)
        ID: name='ArbitratedReadStreamC__0__Service__readDone' (at pp.c:15796)
        ExprList:  (at pp.c:15796)
          ID: name='arg_0x1028c9b08' (at pp.c:15796)
          ID: name='result' (at pp.c:15796)
          ID: name='usActualPeriod' (at pp.c:15796)
  FuncDef:  (at pp.c:15801)
    Decl: name='AdcStreamP__readStreamFail__runTask', quals=[], storage=['inline', 'static'] (at pp.c:15801)
      FuncDecl: quals=None (at pp.c:15801)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__readStreamFail__runTask', quals=[] (at pp.c:15801)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15803)
      Decl: name='entry', quals=[], storage=[] (at pp.c:15805)
        PtrDecl: quals=[] (at pp.c:15805)
          TypeDecl: declname='entry', quals=[] (at pp.c:15805)
            Struct: name='AdcStreamP__list_entry_t', packed=False (at pp.c:15805)
      Decl: name='c', quals=[], storage=[] (at pp.c:15806)
        TypeDecl: declname='c', quals=[] (at pp.c:15806)
          IdentifierType: names=['uint8_t'] (at None)
        ID: name='AdcStreamP__client' (at pp.c:15806)
      Compound:  (at pp.c:15808)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15808)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15808)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:15808)
        Assignment: op='=' (at pp.c:15810)
          ID: name='entry' (at pp.c:15810)
          ArrayRef:  (at pp.c:15810)
            ID: name='AdcStreamP__bufferQueue' (at pp.c:15810)
            ID: name='c' (at pp.c:15810)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:15812)
          ExprList:  (at pp.c:15812)
            ID: name='__nesc_atomic' (at pp.c:15812)
      For:  (at pp.c:15813)
        ID: name='entry' (at pp.c:15813)
        Assignment: op='=' (at pp.c:15813)
          ID: name='entry' (at pp.c:15813)
          StructRef: type='->' (at pp.c:15813)
            ID: name='entry' (at pp.c:15813)
            ID: name='next' (at pp.c:15813)
        Compound:  (at pp.c:15813)
          Decl: name='tmp_count', quals=[], storage=[] (at pp.c:15814)
            TypeDecl: declname='tmp_count', quals=[] (at pp.c:15814)
              IdentifierType: names=['uint16_t'] (at None)
            StructRef: type='->' (at pp.c:15814)
              ID: name='entry' (at pp.c:15814)
              ID: name='count' (at pp.c:15814)
          FuncCall:  (at None)
            ID: name='AdcStreamP__ReadStream__bufferDone' (at pp.c:15817)
            ExprList:  (at pp.c:15817)
              ID: name='c' (at pp.c:15817)
              ID: name='FAIL' (at pp.c:15817)
              Cast:  (at None)
                Typename: quals=[] (at None)
                  PtrDecl: quals=[] (at pp.c:15817)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                ID: name='entry' (at pp.c:15817)
              StructRef: type='->' (at pp.c:15817)
                ID: name='entry' (at pp.c:15817)
                ID: name='count' (at pp.c:15817)
      Compound:  (at pp.c:15820)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:15820)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:15820)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:15820)
        Compound:  (at pp.c:15821)
          Assignment: op='=' (at pp.c:15822)
            ArrayRef:  (at pp.c:15822)
              ID: name='AdcStreamP__bufferQueue' (at pp.c:15822)
              ID: name='c' (at pp.c:15822)
            Cast:  (at None)
              Typename: quals=[] (at None)
                PtrDecl: quals=[] (at pp.c:15822)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['void'] (at None)
              Constant: type='int', value='0' (at pp.c:15822)
          Assignment: op='=' (at pp.c:15823)
            ArrayRef:  (at pp.c:15823)
              ID: name='AdcStreamP__bufferQueueEnd' (at pp.c:15823)
              ID: name='c' (at pp.c:15823)
            UnaryOp: op='&' (at pp.c:15823)
              ArrayRef:  (at pp.c:15823)
                ID: name='AdcStreamP__bufferQueue' (at pp.c:15823)
                ID: name='c' (at pp.c:15823)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:15826)
          ExprList:  (at pp.c:15826)
            ID: name='__nesc_atomic' (at pp.c:15826)
      Assignment: op='=' (at pp.c:15828)
        ID: name='AdcStreamP__client' (at pp.c:15828)
        ID: name='AdcStreamP__NSTREAM' (at pp.c:15828)
      FuncCall:  (at None)
        ID: name='AdcStreamP__ReadStream__readDone' (at pp.c:15829)
        ExprList:  (at pp.c:15829)
          ID: name='c' (at pp.c:15829)
          ID: name='FAIL' (at pp.c:15829)
          Constant: type='int', value='0' (at pp.c:15829)
  FuncDef:  (at pp.c:15833)
    Decl: name='Msp430RefVoltArbiterImplP__AdcResource__default__release', quals=[], storage=['inline', 'static'] (at pp.c:15833)
      FuncDecl: quals=None (at pp.c:15833)
        ParamList:  (at pp.c:15833)
          Decl: name='client', quals=[], storage=[] (at pp.c:15833)
            TypeDecl: declname='client', quals=[] (at pp.c:15833)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__default__release', quals=[] (at pp.c:15833)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15835)
      Return:  (at pp.c:15837)
        ID: name='FAIL' (at pp.c:15837)
  FuncDef:  (at pp.c:15841)
    Decl: name='Msp430RefVoltArbiterImplP__AdcResource__release', quals=[], storage=['static', 'inline'] (at pp.c:15841)
      FuncDecl: quals=None (at pp.c:15841)
        ParamList:  (at pp.c:15841)
          Decl: name='arg_0x102871e18', quals=[], storage=[] (at pp.c:15841)
            TypeDecl: declname='arg_0x102871e18', quals=[] (at pp.c:15841)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__release', quals=[] (at pp.c:15841)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15841)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15843)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15843)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:15847)
        ID: name='arg_0x102871e18' (at pp.c:15847)
        Compound:  (at pp.c:15847)
          Case:  (at pp.c:15849)
            ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:15849)
            Assignment: op='=' (at pp.c:15851)
              ID: name='__nesc_result' (at pp.c:15851)
              FuncCall:  (at None)
                ID: name='SimpleArbiterP__0__Resource__release' (at pp.c:15851)
                ExprList:  (at pp.c:15851)
                  ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:15851)
          Break:  (at pp.c:15853)
          Case:  (at pp.c:15855)
            ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:15855)
            Assignment: op='=' (at pp.c:15857)
              ID: name='__nesc_result' (at pp.c:15857)
              FuncCall:  (at None)
                ID: name='SimpleArbiterP__0__Resource__release' (at pp.c:15857)
                ExprList:  (at pp.c:15857)
                  ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:15857)
          Break:  (at pp.c:15859)
          Case:  (at pp.c:15861)
            ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:15861)
            Assignment: op='=' (at pp.c:15863)
              ID: name='__nesc_result' (at pp.c:15863)
              FuncCall:  (at None)
                ID: name='SimpleArbiterP__0__Resource__release' (at pp.c:15863)
                ExprList:  (at pp.c:15863)
                  ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:15863)
          Break:  (at pp.c:15865)
          Default:  (at pp.c:15867)
            Assignment: op='=' (at pp.c:15869)
              ID: name='__nesc_result' (at pp.c:15869)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__AdcResource__default__release' (at pp.c:15869)
                ExprList:  (at pp.c:15869)
                  ID: name='arg_0x102871e18' (at pp.c:15869)
          Break:  (at pp.c:15871)
      Return:  (at pp.c:15877)
        ID: name='__nesc_result' (at pp.c:15877)
  FuncDef:  (at pp.c:15882)
    Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__isEmpty', quals=[], storage=['inline', 'static'] (at pp.c:15882)
      FuncDecl: quals=None (at pp.c:15882)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__isEmpty', quals=[] (at pp.c:15882)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:15884)
      Decl: name='i', quals=[], storage=[] (at pp.c:15885)
        TypeDecl: declname='i', quals=[] (at pp.c:15885)
          IdentifierType: names=['int'] (at None)
      Compound:  (at pp.c:15889)
        For:  (at pp.c:15890)
          Assignment: op='=' (at pp.c:15890)
            ID: name='i' (at pp.c:15890)
            Constant: type='int', value='0' (at pp.c:15890)
          BinaryOp: op='<' (at pp.c:15890)
            ID: name='i' (at pp.c:15890)
            UnaryOp: op='sizeof' (at pp.c:15890)
              ID: name='RoundRobinResourceQueueC__0__resQ' (at pp.c:15890)
          UnaryOp: op='p++' (at pp.c:15890)
            ID: name='i' (at pp.c:15890)
          If:  (at pp.c:15891)
            BinaryOp: op='>' (at pp.c:15891)
              ArrayRef:  (at pp.c:15891)
                ID: name='RoundRobinResourceQueueC__0__resQ' (at pp.c:15891)
                ID: name='i' (at pp.c:15891)
              Constant: type='int', value='0' (at pp.c:15891)
            Compound:  (at pp.c:15891)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:15892)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:15892)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='FALSE' (at pp.c:15894)
              Return:  (at pp.c:15897)
                ID: name='__nesc_temp' (at pp.c:15897)
        Compound:  (at pp.c:15900)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:15901)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:15901)
              IdentifierType: names=['char', 'unsigned'] (at None)
            ID: name='TRUE' (at pp.c:15903)
          Return:  (at pp.c:15906)
            ID: name='__nesc_temp' (at pp.c:15906)
  FuncDef:  (at pp.c:15912)
    Decl: name='SimpleArbiterP__0__Queue__isEmpty', quals=[], storage=['static', 'inline'] (at pp.c:15912)
      FuncDecl: quals=None (at pp.c:15912)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__Queue__isEmpty', quals=[] (at pp.c:15912)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:15912)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15914)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15914)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15918)
        ID: name='__nesc_result' (at pp.c:15918)
        FuncCall:  (at None)
          ID: name='RoundRobinResourceQueueC__0__RoundRobinQueue__isEmpty' (at pp.c:15918)
      Return:  (at pp.c:15922)
        ID: name='__nesc_result' (at pp.c:15922)
  FuncDef:  (at pp.c:15927)
    Decl: name='RoundRobinResourceQueueC__0__clearEntry', quals=[], storage=['inline', 'static'] (at pp.c:15927)
      FuncDecl: quals=None (at pp.c:15927)
        ParamList:  (at pp.c:15927)
          Decl: name='id', quals=[], storage=[] (at pp.c:15927)
            TypeDecl: declname='id', quals=[] (at pp.c:15927)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='RoundRobinResourceQueueC__0__clearEntry', quals=[] (at pp.c:15927)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:15929)
      Assignment: op='&=' (at pp.c:15930)
        ArrayRef:  (at pp.c:15930)
          ID: name='RoundRobinResourceQueueC__0__resQ' (at pp.c:15930)
          BinaryOp: op='/' (at pp.c:15930)
            ID: name='id' (at pp.c:15930)
            Constant: type='int', value='8' (at pp.c:15930)
        UnaryOp: op='~' (at pp.c:15930)
          BinaryOp: op='<<' (at pp.c:15930)
            Constant: type='int', value='1' (at pp.c:15930)
            BinaryOp: op='%' (at pp.c:15930)
              ID: name='id' (at pp.c:15930)
              Constant: type='int', value='8' (at pp.c:15930)
  FuncDef:  (at pp.c:15934)
    Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__dequeue', quals=[], storage=['inline', 'static'] (at pp.c:15934)
      FuncDecl: quals=None (at pp.c:15934)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__dequeue', quals=[] (at pp.c:15934)
          IdentifierType: names=['resource_client_id_t'] (at None)
    Compound:  (at pp.c:15936)
      Decl: name='i', quals=[], storage=[] (at pp.c:15937)
        TypeDecl: declname='i', quals=[] (at pp.c:15937)
          IdentifierType: names=['int'] (at None)
      Compound:  (at pp.c:15941)
        For:  (at pp.c:15942)
          Assignment: op='=' (at pp.c:15942)
            ID: name='i' (at pp.c:15942)
            BinaryOp: op='+' (at pp.c:15942)
              ID: name='RoundRobinResourceQueueC__0__last' (at pp.c:15942)
              Constant: type='int', value='1' (at pp.c:15942)
          UnaryOp: op='p++' (at pp.c:15942)
            ID: name='i' (at pp.c:15942)
          Compound:  (at pp.c:15942)
            If:  (at pp.c:15943)
              BinaryOp: op='==' (at pp.c:15943)
                ID: name='i' (at pp.c:15943)
                Constant: type='int', value='3U' (at pp.c:15943)
              Compound:  (at pp.c:15943)
                Assignment: op='=' (at pp.c:15944)
                  ID: name='i' (at pp.c:15944)
                  Constant: type='int', value='0' (at pp.c:15944)
            If:  (at pp.c:15947)
              FuncCall:  (at None)
                ID: name='RoundRobinResourceQueueC__0__RoundRobinQueue__isEnqueued' (at pp.c:15947)
                ExprList:  (at pp.c:15947)
                  ID: name='i' (at pp.c:15947)
              Compound:  (at pp.c:15947)
                FuncCall:  (at None)
                  ID: name='RoundRobinResourceQueueC__0__clearEntry' (at pp.c:15948)
                  ExprList:  (at pp.c:15948)
                    ID: name='i' (at pp.c:15948)
                Assignment: op='=' (at pp.c:15949)
                  ID: name='RoundRobinResourceQueueC__0__last' (at pp.c:15949)
                  ID: name='i' (at pp.c:15949)
                Compound:  (at pp.c:15950)
                  Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:15951)
                    TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:15951)
                      IdentifierType: names=['char', 'unsigned'] (at None)
                    ID: name='i' (at pp.c:15953)
                  Return:  (at pp.c:15956)
                    ID: name='__nesc_temp' (at pp.c:15956)
            If:  (at pp.c:15960)
              BinaryOp: op='==' (at pp.c:15960)
                ID: name='i' (at pp.c:15960)
                ID: name='RoundRobinResourceQueueC__0__last' (at pp.c:15960)
              Compound:  (at pp.c:15960)
                Break:  (at pp.c:15961)
        Compound:  (at pp.c:15965)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:15966)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:15966)
              IdentifierType: names=['char', 'unsigned'] (at None)
            ID: name='RoundRobinResourceQueueC__0__NO_ENTRY' (at pp.c:15968)
          Return:  (at pp.c:15971)
            ID: name='__nesc_temp' (at pp.c:15971)
  FuncDef:  (at pp.c:15977)
    Decl: name='SimpleArbiterP__0__Queue__dequeue', quals=[], storage=['static', 'inline'] (at pp.c:15977)
      FuncDecl: quals=None (at pp.c:15977)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__Queue__dequeue', quals=[] (at pp.c:15977)
          IdentifierType: names=['resource_client_id_t'] (at None)
    Compound:  (at pp.c:15977)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15979)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15979)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15983)
        ID: name='__nesc_result' (at pp.c:15983)
        FuncCall:  (at None)
          ID: name='RoundRobinResourceQueueC__0__RoundRobinQueue__dequeue' (at pp.c:15983)
      Return:  (at pp.c:15987)
        ID: name='__nesc_result' (at pp.c:15987)
  FuncDef:  (at pp.c:15992)
    Decl: name='SimpleArbiterP__0__grantedTask__postTask', quals=[], storage=['static', 'inline'] (at pp.c:15992)
      FuncDecl: quals=None (at pp.c:15992)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__grantedTask__postTask', quals=[] (at pp.c:15992)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:15992)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:15994)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:15994)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:15998)
        ID: name='__nesc_result' (at pp.c:15998)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:15998)
          ExprList:  (at pp.c:15998)
            ID: name='SimpleArbiterP__0__grantedTask' (at pp.c:15998)
      Return:  (at pp.c:16002)
        ID: name='__nesc_result' (at pp.c:16002)
  FuncDef:  (at pp.c:16007)
    Decl: name='SimpleArbiterP__0__ResourceConfigure__default__unconfigure', quals=[], storage=['inline', 'static'] (at pp.c:16007)
      FuncDecl: quals=None (at pp.c:16007)
        ParamList:  (at pp.c:16007)
          Decl: name='id', quals=[], storage=[] (at pp.c:16007)
            TypeDecl: declname='id', quals=[] (at pp.c:16007)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__ResourceConfigure__default__unconfigure', quals=[] (at pp.c:16007)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16009)
  FuncDef:  (at pp.c:16013)
    Decl: name='SimpleArbiterP__0__ResourceConfigure__unconfigure', quals=[], storage=['static', 'inline'] (at pp.c:16013)
      FuncDecl: quals=None (at pp.c:16013)
        ParamList:  (at pp.c:16013)
          Decl: name='arg_0x102774220', quals=[], storage=[] (at pp.c:16013)
            TypeDecl: declname='arg_0x102774220', quals=[] (at pp.c:16013)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__ResourceConfigure__unconfigure', quals=[] (at pp.c:16013)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16013)
      FuncCall:  (at None)
        ID: name='SimpleArbiterP__0__ResourceConfigure__default__unconfigure' (at pp.c:16015)
        ExprList:  (at pp.c:16015)
          ID: name='arg_0x102774220' (at pp.c:16015)
  FuncDef:  (at pp.c:16020)
    Decl: name='AdcStreamP__readStreamDone__runTask', quals=[], storage=['inline', 'static'] (at pp.c:16020)
      FuncDecl: quals=None (at pp.c:16020)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__readStreamDone__runTask', quals=[] (at pp.c:16020)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16022)
      Decl: name='c', quals=[], storage=[] (at pp.c:16023)
        TypeDecl: declname='c', quals=[] (at pp.c:16023)
          IdentifierType: names=['uint8_t'] (at None)
        ID: name='AdcStreamP__client' (at pp.c:16023)
      Decl: name='actualPeriod', quals=[], storage=[] (at pp.c:16024)
        TypeDecl: declname='actualPeriod', quals=[] (at pp.c:16024)
          IdentifierType: names=['uint32_t'] (at None)
        ID: name='AdcStreamP__period' (at pp.c:16024)
      If:  (at pp.c:16027)
        ID: name='AdcStreamP__periodModified' (at pp.c:16027)
        Compound:  (at pp.c:16027)
          Assignment: op='=' (at pp.c:16028)
            ID: name='actualPeriod' (at pp.c:16028)
            BinaryOp: op='-' (at pp.c:16028)
              ID: name='AdcStreamP__period' (at pp.c:16028)
              BinaryOp: op='%' (at pp.c:16028)
                ID: name='AdcStreamP__period' (at pp.c:16028)
                Constant: type='int', value='1000' (at pp.c:16028)
      Compound:  (at pp.c:16030)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:16030)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:16030)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:16030)
        Compound:  (at pp.c:16031)
          Assignment: op='=' (at pp.c:16032)
            ArrayRef:  (at pp.c:16032)
              ID: name='AdcStreamP__bufferQueue' (at pp.c:16032)
              ID: name='c' (at pp.c:16032)
            Cast:  (at None)
              Typename: quals=[] (at None)
                PtrDecl: quals=[] (at pp.c:16032)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['void'] (at None)
              Constant: type='int', value='0' (at pp.c:16032)
          Assignment: op='=' (at pp.c:16033)
            ArrayRef:  (at pp.c:16033)
              ID: name='AdcStreamP__bufferQueueEnd' (at pp.c:16033)
              ID: name='c' (at pp.c:16033)
            UnaryOp: op='&' (at pp.c:16033)
              ArrayRef:  (at pp.c:16033)
                ID: name='AdcStreamP__bufferQueue' (at pp.c:16033)
                ID: name='c' (at pp.c:16033)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:16036)
          ExprList:  (at pp.c:16036)
            ID: name='__nesc_atomic' (at pp.c:16036)
      Assignment: op='=' (at pp.c:16038)
        ID: name='AdcStreamP__client' (at pp.c:16038)
        ID: name='AdcStreamP__NSTREAM' (at pp.c:16038)
      FuncCall:  (at None)
        ID: name='AdcStreamP__ReadStream__readDone' (at pp.c:16039)
        ExprList:  (at pp.c:16039)
          ID: name='c' (at pp.c:16039)
          ID: name='SUCCESS' (at pp.c:16039)
          ID: name='actualPeriod' (at pp.c:16039)
  FuncDef:  (at pp.c:16043)
    Decl: name='Msp430RefVoltArbiterImplP__switchOff__postTask', quals=[], storage=['static', 'inline'] (at pp.c:16043)
      FuncDecl: quals=None (at pp.c:16043)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__switchOff__postTask', quals=[] (at pp.c:16043)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16043)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16045)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16045)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16049)
        ID: name='__nesc_result' (at pp.c:16049)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:16049)
          ExprList:  (at pp.c:16049)
            ID: name='Msp430RefVoltArbiterImplP__switchOff' (at pp.c:16049)
      Return:  (at pp.c:16053)
        ID: name='__nesc_result' (at pp.c:16053)
  FuncDef:  (at pp.c:16058)
    Decl: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__stop', quals=[], storage=['inline', 'static'] (at pp.c:16058)
      FuncDecl: quals=None (at pp.c:16058)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_1_5V__stop', quals=[] (at pp.c:16058)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16060)
      Return:  (at pp.c:16061)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltGeneratorP__stop' (at pp.c:16061)
          ExprList:  (at pp.c:16061)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_OFF_PENDING' (at pp.c:16061)
  FuncDef:  (at pp.c:16065)
    Decl: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stop', quals=[], storage=['static', 'inline'] (at pp.c:16065)
      FuncDecl: quals=None (at pp.c:16065)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stop', quals=[] (at pp.c:16065)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16065)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16067)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16067)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16071)
        ID: name='__nesc_result' (at pp.c:16071)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__stop' (at pp.c:16071)
      Return:  (at pp.c:16075)
        ID: name='__nesc_result' (at pp.c:16075)
  FuncDef:  (at pp.c:16080)
    Decl: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__stop', quals=[], storage=['inline', 'static'] (at pp.c:16080)
      FuncDecl: quals=None (at pp.c:16080)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_2_5V__stop', quals=[] (at pp.c:16080)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16082)
      Return:  (at pp.c:16083)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltGeneratorP__stop' (at pp.c:16083)
          ExprList:  (at pp.c:16083)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_OFF_PENDING' (at pp.c:16083)
  FuncDef:  (at pp.c:16087)
    Decl: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stop', quals=[], storage=['static', 'inline'] (at pp.c:16087)
      FuncDecl: quals=None (at pp.c:16087)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stop', quals=[] (at pp.c:16087)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16087)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16089)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16089)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16093)
        ID: name='__nesc_result' (at pp.c:16093)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__stop' (at pp.c:16093)
      Return:  (at pp.c:16097)
        ID: name='__nesc_result' (at pp.c:16097)
  FuncDef:  (at pp.c:16102)
    Decl: name='Msp430RefVoltArbiterImplP__switchOff__runTask', quals=[], storage=['inline', 'static'] (at pp.c:16102)
      FuncDecl: quals=None (at pp.c:16102)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__switchOff__runTask', quals=[] (at pp.c:16102)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16103)
      Decl: name='stopped', quals=[], storage=[] (at pp.c:16104)
        TypeDecl: declname='stopped', quals=[] (at pp.c:16104)
          IdentifierType: names=['error_t'] (at None)
      If:  (at pp.c:16106)
        BinaryOp: op='!=' (at pp.c:16106)
          ID: name='Msp430RefVoltArbiterImplP__syncOwner' (at pp.c:16106)
          ID: name='Msp430RefVoltArbiterImplP__NO_OWNER' (at pp.c:16106)
        Compound:  (at pp.c:16106)
          If:  (at pp.c:16107)
            ID: name='Msp430RefVoltArbiterImplP__ref2_5v' (at pp.c:16107)
            Compound:  (at pp.c:16107)
              Assignment: op='=' (at pp.c:16108)
                ID: name='stopped' (at pp.c:16108)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stop' (at pp.c:16108)
            Compound:  (at pp.c:16110)
              Assignment: op='=' (at pp.c:16112)
                ID: name='stopped' (at pp.c:16112)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stop' (at pp.c:16112)
          If:  (at pp.c:16115)
            BinaryOp: op='==' (at pp.c:16115)
              ID: name='stopped' (at pp.c:16115)
              ID: name='SUCCESS' (at pp.c:16115)
            Compound:  (at pp.c:16115)
              Assignment: op='=' (at pp.c:16116)
                ID: name='Msp430RefVoltArbiterImplP__syncOwner' (at pp.c:16116)
                ID: name='Msp430RefVoltArbiterImplP__NO_OWNER' (at pp.c:16116)
            Compound:  (at pp.c:16118)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__switchOff__postTask' (at pp.c:16120)
  FuncDef:  (at pp.c:16126)
    Decl: name='VirtualizeTimerC__0__updateFromTimer__postTask', quals=[], storage=['static', 'inline'] (at pp.c:16126)
      FuncDecl: quals=None (at pp.c:16126)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__updateFromTimer__postTask', quals=[] (at pp.c:16126)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16126)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16128)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16128)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16132)
        ID: name='__nesc_result' (at pp.c:16132)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:16132)
          ExprList:  (at pp.c:16132)
            ID: name='VirtualizeTimerC__0__updateFromTimer' (at pp.c:16132)
      Return:  (at pp.c:16136)
        ID: name='__nesc_result' (at pp.c:16136)
  FuncDef:  (at pp.c:16141)
    Decl: name='HplAdc12P__HplAdc12__isBusy', quals=[], storage=['inline', 'static'] (at pp.c:16141)
      FuncDecl: quals=None (at pp.c:16141)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__isBusy', quals=[] (at pp.c:16141)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:16143)
      Return:  (at pp.c:16145)
        BinaryOp: op='&' (at pp.c:16145)
          ID: name='HplAdc12P__ADC12CTL1' (at pp.c:16145)
          Constant: type='int', value='0x0001' (at pp.c:16145)
  FuncDef:  (at pp.c:16149)
    Decl: name='Msp430RefVoltGeneratorP__HplAdc12__isBusy', quals=[], storage=['static', 'inline'] (at pp.c:16149)
      FuncDecl: quals=None (at pp.c:16149)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__HplAdc12__isBusy', quals=[] (at pp.c:16149)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:16149)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16151)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16151)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16155)
        ID: name='__nesc_result' (at pp.c:16155)
        FuncCall:  (at None)
          ID: name='HplAdc12P__HplAdc12__isBusy' (at pp.c:16155)
      Return:  (at pp.c:16159)
        ID: name='__nesc_result' (at pp.c:16159)
  FuncDef:  (at pp.c:16164)
    Decl: name='HplAdc12P__int2adc12ctl0', quals=[], storage=['inline', 'static'] (at pp.c:16164)
      FuncDecl: quals=None (at pp.c:16164)
        ParamList:  (at pp.c:16164)
          Decl: name='x', quals=[], storage=[] (at pp.c:16164)
            TypeDecl: declname='x', quals=[] (at pp.c:16164)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='HplAdc12P__int2adc12ctl0', quals=[] (at pp.c:16164)
          IdentifierType: names=['adc12ctl0_t'] (at None)
    Compound:  (at pp.c:16166)
      Decl: name='c', quals=[], storage=[] (at pp.c:16175)
        TypeDecl: declname='c', quals=[] (at pp.c:16175)
          Union: name='__nesc_unnamed4393', packed=False (at pp.c:16168)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:16170)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:16172)
                IdentifierType: names=['adc12ctl0_t'] (at None)
        ExprList:  (at pp.c:16175)
          Assignment: op='=' (at pp.c:16175)
            StructRef: type='.' (at pp.c:16175)
              ID: name='f' (at pp.c:16175)
            ID: name='x' (at pp.c:16175)
      Return:  (at pp.c:16178)
        StructRef: type='.' (at pp.c:16178)
          ID: name='c' (at pp.c:16178)
          ID: name='t' (at pp.c:16178)
  FuncDef:  (at pp.c:16182)
    Decl: name='HplAdc12P__HplAdc12__getCtl0', quals=[], storage=['inline', 'static'] (at pp.c:16182)
      FuncDecl: quals=None (at pp.c:16182)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__getCtl0', quals=[] (at pp.c:16182)
          IdentifierType: names=['adc12ctl0_t'] (at None)
    Compound:  (at pp.c:16184)
      Return:  (at pp.c:16185)
        FuncCall:  (at None)
          ID: name='HplAdc12P__int2adc12ctl0' (at pp.c:16185)
          ExprList:  (at pp.c:16185)
            ID: name='HplAdc12P__ADC12CTL0' (at pp.c:16185)
  FuncDef:  (at pp.c:16189)
    Decl: name='Msp430RefVoltGeneratorP__HplAdc12__getCtl0', quals=[], storage=['static', 'inline'] (at pp.c:16189)
      FuncDecl: quals=None (at pp.c:16189)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__HplAdc12__getCtl0', quals=[] (at pp.c:16189)
          IdentifierType: names=['adc12ctl0_t'] (at None)
    Compound:  (at pp.c:16189)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16191)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16191)
          Struct: name='__nesc_unnamed4254', packed=False (at pp.c:16191)
      Assignment: op='=' (at pp.c:16195)
        ID: name='__nesc_result' (at pp.c:16195)
        FuncCall:  (at None)
          ID: name='HplAdc12P__HplAdc12__getCtl0' (at pp.c:16195)
      Return:  (at pp.c:16199)
        ID: name='__nesc_result' (at pp.c:16199)
  FuncDef:  (at pp.c:16204)
    Decl: name='HplAdc12P__adc12ctl0cast2int', quals=[], storage=['inline', 'static'] (at pp.c:16204)
      FuncDecl: quals=None (at pp.c:16204)
        ParamList:  (at pp.c:16204)
          Decl: name='x', quals=[], storage=[] (at pp.c:16204)
            TypeDecl: declname='x', quals=[] (at pp.c:16204)
              IdentifierType: names=['adc12ctl0_t'] (at None)
        TypeDecl: declname='HplAdc12P__adc12ctl0cast2int', quals=[] (at pp.c:16204)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:16206)
      Decl: name='c', quals=[], storage=[] (at pp.c:16215)
        TypeDecl: declname='c', quals=[] (at pp.c:16215)
          Union: name='__nesc_unnamed4394', packed=False (at pp.c:16208)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:16210)
                IdentifierType: names=['adc12ctl0_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:16212)
                IdentifierType: names=['uint16_t'] (at None)
        ExprList:  (at pp.c:16215)
          Assignment: op='=' (at pp.c:16215)
            StructRef: type='.' (at pp.c:16215)
              ID: name='f' (at pp.c:16215)
            ID: name='x' (at pp.c:16215)
      Return:  (at pp.c:16218)
        StructRef: type='.' (at pp.c:16218)
          ID: name='c' (at pp.c:16218)
          ID: name='t' (at pp.c:16218)
  FuncDef:  (at pp.c:16223)
    Decl: name='HplAdc12P__HplAdc12__setCtl0', quals=[], storage=['inline', 'static'] (at pp.c:16223)
      FuncDecl: quals=None (at pp.c:16223)
        ParamList:  (at pp.c:16223)
          Decl: name='control0', quals=[], storage=[] (at pp.c:16223)
            TypeDecl: declname='control0', quals=[] (at pp.c:16223)
              IdentifierType: names=['adc12ctl0_t'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__setCtl0', quals=[] (at pp.c:16223)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16225)
      Assignment: op='=' (at pp.c:16226)
        ID: name='HplAdc12P__ADC12CTL0' (at pp.c:16226)
        FuncCall:  (at None)
          ID: name='HplAdc12P__adc12ctl0cast2int' (at pp.c:16226)
          ExprList:  (at pp.c:16226)
            ID: name='control0' (at pp.c:16226)
  FuncDef:  (at pp.c:16230)
    Decl: name='Msp430RefVoltGeneratorP__HplAdc12__setCtl0', quals=[], storage=['static', 'inline'] (at pp.c:16230)
      FuncDecl: quals=None (at pp.c:16230)
        ParamList:  (at pp.c:16230)
          Decl: name='control0', quals=[], storage=[] (at pp.c:16230)
            TypeDecl: declname='control0', quals=[] (at pp.c:16230)
              IdentifierType: names=['adc12ctl0_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__HplAdc12__setCtl0', quals=[] (at pp.c:16230)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16230)
      FuncCall:  (at None)
        ID: name='HplAdc12P__HplAdc12__setCtl0' (at pp.c:16232)
        ExprList:  (at pp.c:16232)
          ID: name='control0' (at pp.c:16232)
  FuncDef:  (at pp.c:16237)
    Decl: name='VirtualizeTimerC__0__Timer__stop', quals=[], storage=['inline', 'static'] (at pp.c:16237)
      FuncDecl: quals=None (at pp.c:16237)
        ParamList:  (at pp.c:16237)
          Decl: name='num', quals=[], storage=[] (at pp.c:16237)
            TypeDecl: declname='num', quals=[] (at pp.c:16237)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__Timer__stop', quals=[] (at pp.c:16237)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16238)
      Assignment: op='=' (at pp.c:16239)
        StructRef: type='.' (at pp.c:16239)
          ArrayRef:  (at pp.c:16239)
            ID: name='VirtualizeTimerC__0__m_timers' (at pp.c:16239)
            ID: name='num' (at pp.c:16239)
          ID: name='isrunning' (at pp.c:16239)
        ID: name='FALSE' (at pp.c:16239)
  FuncDef:  (at pp.c:16243)
    Decl: name='Msp430RefVoltGeneratorP__SwitchOnTimer__stop', quals=[], storage=['static', 'inline'] (at pp.c:16243)
      FuncDecl: quals=None (at pp.c:16243)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOnTimer__stop', quals=[] (at pp.c:16243)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16243)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__Timer__stop' (at pp.c:16245)
        ExprList:  (at pp.c:16245)
          Constant: type='int', value='2U' (at pp.c:16245)
  FuncDef:  (at pp.c:16250)
    Decl: name='Msp430InternalVoltageP__AdcConfigure__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:16250)
      FuncDecl: quals=None (at pp.c:16250)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        PtrDecl: quals=[] (at pp.c:16250)
          TypeDecl: declname='Msp430InternalVoltageP__AdcConfigure__getConfiguration', quals=['const'] (at pp.c:16250)
            IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    Compound:  (at pp.c:16251)
      Return:  (at pp.c:16252)
        UnaryOp: op='&' (at pp.c:16252)
          ID: name='Msp430InternalVoltageP__config' (at pp.c:16252)
  FuncDef:  (at pp.c:16257)
    Decl: name='AdcP__Config__default__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:16257)
      FuncDecl: quals=None (at pp.c:16257)
        ParamList:  (at pp.c:16257)
          Decl: name='client', quals=[], storage=[] (at pp.c:16257)
            TypeDecl: declname='client', quals=[] (at pp.c:16257)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:16256)
          TypeDecl: declname='AdcP__Config__default__getConfiguration', quals=['const'] (at pp.c:16257)
            IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    Compound:  (at pp.c:16258)
      Return:  (at pp.c:16259)
        UnaryOp: op='&' (at pp.c:16259)
          ID: name='AdcP__defaultConfig' (at pp.c:16259)
  FuncDef:  (at pp.c:16263)
    Decl: name='AdcP__Config__getConfiguration', quals=[], storage=['static', 'inline'] (at pp.c:16263)
      FuncDecl: quals=None (at pp.c:16263)
        ParamList:  (at pp.c:16263)
          Decl: name='arg_0x1025f2350', quals=[], storage=[] (at pp.c:16263)
            TypeDecl: declname='arg_0x1025f2350', quals=[] (at pp.c:16263)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__Config__getConfiguration', quals=[] (at pp.c:16263)
          IdentifierType: names=['AdcP__Config__adc_config_t'] (at None)
    Compound:  (at pp.c:16263)
      Decl: name='__nesc_result', quals=['const'], storage=[] (at pp.c:16265)
        PtrDecl: quals=[] (at pp.c:16265)
          TypeDecl: declname='__nesc_result', quals=['const'] (at pp.c:16265)
            Struct: name='__nesc_unnamed4300', packed=False (at pp.c:16265)
      Switch:  (at pp.c:16269)
        ID: name='arg_0x1025f2350' (at pp.c:16269)
        Compound:  (at pp.c:16269)
          Case:  (at pp.c:16271)
            ID: name='AdcReadClientC__0__CLIENT' (at pp.c:16271)
            Assignment: op='=' (at pp.c:16273)
              ID: name='__nesc_result' (at pp.c:16273)
              FuncCall:  (at None)
                ID: name='Msp430InternalVoltageP__AdcConfigure__getConfiguration' (at pp.c:16273)
          Break:  (at pp.c:16275)
          Case:  (at pp.c:16277)
            ID: name='AdcReadNowClientC__0__CLIENT' (at pp.c:16277)
            Assignment: op='=' (at pp.c:16279)
              ID: name='__nesc_result' (at pp.c:16279)
              FuncCall:  (at None)
                ID: name='Msp430InternalVoltageP__AdcConfigure__getConfiguration' (at pp.c:16279)
          Break:  (at pp.c:16281)
          Default:  (at pp.c:16283)
            Assignment: op='=' (at pp.c:16285)
              ID: name='__nesc_result' (at pp.c:16285)
              FuncCall:  (at None)
                ID: name='AdcP__Config__default__getConfiguration' (at pp.c:16285)
                ExprList:  (at pp.c:16285)
                  ID: name='arg_0x1025f2350' (at pp.c:16285)
          Break:  (at pp.c:16287)
      Return:  (at pp.c:16293)
        ID: name='__nesc_result' (at pp.c:16293)
  FuncDef:  (at pp.c:16298)
    Decl: name='AdcP__SingleChannel__default__configureSingle', quals=[], storage=['inline', 'static'] (at pp.c:16298)
      FuncDecl: quals=None (at pp.c:16298)
        ParamList:  (at pp.c:16298)
          Decl: name='client', quals=[], storage=[] (at pp.c:16298)
            TypeDecl: declname='client', quals=[] (at pp.c:16298)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='config', quals=['const'], storage=[] (at pp.c:16299)
            PtrDecl: quals=[] (at pp.c:16299)
              TypeDecl: declname='config', quals=['const'] (at pp.c:16299)
                IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        TypeDecl: declname='AdcP__SingleChannel__default__configureSingle', quals=[] (at pp.c:16298)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16301)
      Return:  (at pp.c:16303)
        ID: name='FAIL' (at pp.c:16303)
  FuncDef:  (at pp.c:16307)
    Decl: name='AdcP__SingleChannel__configureSingle', quals=[], storage=['static', 'inline'] (at pp.c:16307)
      FuncDecl: quals=None (at pp.c:16307)
        ParamList:  (at pp.c:16307)
          Decl: name='arg_0x1025e0910', quals=[], storage=[] (at pp.c:16307)
            TypeDecl: declname='arg_0x1025e0910', quals=[] (at pp.c:16307)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='config', quals=['const'], storage=[] (at pp.c:16307)
            PtrDecl: quals=[] (at pp.c:16307)
              TypeDecl: declname='config', quals=['const'] (at pp.c:16307)
                IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        TypeDecl: declname='AdcP__SingleChannel__configureSingle', quals=[] (at pp.c:16307)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16307)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16309)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16309)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:16313)
        ID: name='arg_0x1025e0910' (at pp.c:16313)
        Compound:  (at pp.c:16313)
          Case:  (at pp.c:16315)
            ID: name='AdcReadClientC__0__CLIENT' (at pp.c:16315)
            Assignment: op='=' (at pp.c:16317)
              ID: name='__nesc_result' (at pp.c:16317)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__SingleChannel__configureSingle' (at pp.c:16317)
                ExprList:  (at pp.c:16317)
                  ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:16317)
                  ID: name='config' (at pp.c:16317)
          Break:  (at pp.c:16319)
          Case:  (at pp.c:16321)
            ID: name='AdcReadNowClientC__0__CLIENT' (at pp.c:16321)
            Assignment: op='=' (at pp.c:16323)
              ID: name='__nesc_result' (at pp.c:16323)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__SingleChannel__configureSingle' (at pp.c:16323)
                ExprList:  (at pp.c:16323)
                  ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:16323)
                  ID: name='config' (at pp.c:16323)
          Break:  (at pp.c:16325)
          Default:  (at pp.c:16327)
            Assignment: op='=' (at pp.c:16329)
              ID: name='__nesc_result' (at pp.c:16329)
              FuncCall:  (at None)
                ID: name='AdcP__SingleChannel__default__configureSingle' (at pp.c:16329)
                ExprList:  (at pp.c:16329)
                  ID: name='arg_0x1025e0910' (at pp.c:16329)
                  ID: name='config' (at pp.c:16329)
          Break:  (at pp.c:16331)
      Return:  (at pp.c:16337)
        ID: name='__nesc_result' (at pp.c:16337)
  FuncDef:  (at pp.c:16342)
    Decl: name='AdcP__ResourceReadNow__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:16342)
      FuncDecl: quals=None (at pp.c:16342)
        ParamList:  (at pp.c:16342)
          Decl: name='nowClient', quals=[], storage=[] (at pp.c:16342)
            TypeDecl: declname='nowClient', quals=[] (at pp.c:16342)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__ResourceReadNow__default__granted', quals=[] (at pp.c:16342)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16344)
  FuncDef:  (at pp.c:16348)
    Decl: name='AdcP__ResourceReadNow__granted', quals=[], storage=['static', 'inline'] (at pp.c:16348)
      FuncDecl: quals=None (at pp.c:16348)
        ParamList:  (at pp.c:16348)
          Decl: name='arg_0x1025f7748', quals=[], storage=[] (at pp.c:16348)
            TypeDecl: declname='arg_0x1025f7748', quals=[] (at pp.c:16348)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__ResourceReadNow__granted', quals=[] (at pp.c:16348)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16348)
      FuncCall:  (at None)
        ID: name='AdcP__ResourceReadNow__default__granted' (at pp.c:16350)
        ExprList:  (at pp.c:16350)
          ID: name='arg_0x1025f7748' (at pp.c:16350)
  FuncDef:  (at pp.c:16355)
    Decl: name='TransformAlarmC__2__Counter__get', quals=[], storage=['static', 'inline'] (at pp.c:16355)
      FuncDecl: quals=None (at pp.c:16355)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__2__Counter__get', quals=[] (at pp.c:16355)
          IdentifierType: names=['TransformAlarmC__2__Counter__size_type'] (at None)
    Compound:  (at pp.c:16355)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16357)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16357)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16361)
        ID: name='__nesc_result' (at pp.c:16361)
        FuncCall:  (at None)
          ID: name='TransformCounterC__1__Counter__get' (at pp.c:16361)
      Return:  (at pp.c:16365)
        ID: name='__nesc_result' (at pp.c:16365)
  FuncDef:  (at pp.c:16370)
    Decl: name='TransformAlarmC__2__Alarm__getNow', quals=[], storage=['inline', 'static'] (at pp.c:16370)
      FuncDecl: quals=None (at pp.c:16370)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__2__Alarm__getNow', quals=[] (at pp.c:16370)
          IdentifierType: names=['TransformAlarmC__2__to_size_type'] (at None)
    Compound:  (at pp.c:16371)
      Return:  (at pp.c:16372)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__2__Counter__get' (at pp.c:16372)
  FuncDef:  (at pp.c:16376)
    Decl: name='AdcStreamP__Alarm__getNow', quals=[], storage=['static', 'inline'] (at pp.c:16376)
      FuncDecl: quals=None (at pp.c:16376)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__Alarm__getNow', quals=[] (at pp.c:16376)
          IdentifierType: names=['AdcStreamP__Alarm__size_type'] (at None)
    Compound:  (at pp.c:16376)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16378)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16378)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16382)
        ID: name='__nesc_result' (at pp.c:16382)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__2__Alarm__getNow' (at pp.c:16382)
      Return:  (at pp.c:16386)
        ID: name='__nesc_result' (at pp.c:16386)
  FuncDef:  (at pp.c:16391)
    Decl: name='AdcStreamP__SingleChannel__default__configureSingle', quals=[], storage=['inline', 'static'] (at pp.c:16391)
      FuncDecl: quals=None (at pp.c:16391)
        ParamList:  (at pp.c:16391)
          Decl: name='c', quals=[], storage=[] (at pp.c:16391)
            TypeDecl: declname='c', quals=[] (at pp.c:16391)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='config', quals=['const'], storage=[] (at pp.c:16392)
            PtrDecl: quals=[] (at pp.c:16392)
              TypeDecl: declname='config', quals=['const'] (at pp.c:16392)
                IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        TypeDecl: declname='AdcStreamP__SingleChannel__default__configureSingle', quals=[] (at pp.c:16391)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16394)
      Return:  (at pp.c:16396)
        ID: name='FAIL' (at pp.c:16396)
  FuncDef:  (at pp.c:16400)
    Decl: name='AdcStreamP__SingleChannel__configureSingle', quals=[], storage=['static', 'inline'] (at pp.c:16400)
      FuncDecl: quals=None (at pp.c:16400)
        ParamList:  (at pp.c:16400)
          Decl: name='arg_0x1028c6b90', quals=[], storage=[] (at pp.c:16400)
            TypeDecl: declname='arg_0x1028c6b90', quals=[] (at pp.c:16400)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='config', quals=['const'], storage=[] (at pp.c:16400)
            PtrDecl: quals=[] (at pp.c:16400)
              TypeDecl: declname='config', quals=['const'] (at pp.c:16400)
                IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        TypeDecl: declname='AdcStreamP__SingleChannel__configureSingle', quals=[] (at pp.c:16400)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16400)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16402)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16402)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:16406)
        ID: name='arg_0x1028c6b90' (at pp.c:16406)
        Compound:  (at pp.c:16406)
          Case:  (at pp.c:16408)
            ID: name='AdcReadStreamClientC__0__RSCLIENT' (at pp.c:16408)
            Assignment: op='=' (at pp.c:16410)
              ID: name='__nesc_result' (at pp.c:16410)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__SingleChannel__configureSingle' (at pp.c:16410)
                ExprList:  (at pp.c:16410)
                  ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:16410)
                  ID: name='config' (at pp.c:16410)
          Break:  (at pp.c:16412)
          Default:  (at pp.c:16414)
            Assignment: op='=' (at pp.c:16416)
              ID: name='__nesc_result' (at pp.c:16416)
              FuncCall:  (at None)
                ID: name='AdcStreamP__SingleChannel__default__configureSingle' (at pp.c:16416)
                ExprList:  (at pp.c:16416)
                  ID: name='arg_0x1028c6b90' (at pp.c:16416)
                  ID: name='config' (at pp.c:16416)
          Break:  (at pp.c:16418)
      Return:  (at pp.c:16424)
        ID: name='__nesc_result' (at pp.c:16424)
  FuncDef:  (at pp.c:16429)
    Decl: name='AdcStreamP__AdcConfigure__default__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:16429)
      FuncDecl: quals=None (at pp.c:16429)
        ParamList:  (at pp.c:16429)
          Decl: name='c', quals=[], storage=[] (at pp.c:16429)
            TypeDecl: declname='c', quals=[] (at pp.c:16429)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:16429)
          TypeDecl: declname='AdcStreamP__AdcConfigure__default__getConfiguration', quals=['const'] (at pp.c:16429)
            IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    Compound:  (at pp.c:16430)
      Return:  (at pp.c:16431)
        UnaryOp: op='&' (at pp.c:16431)
          ID: name='AdcStreamP__defaultConfig' (at pp.c:16431)
  FuncDef:  (at pp.c:16435)
    Decl: name='AdcStreamP__AdcConfigure__getConfiguration', quals=[], storage=['static', 'inline'] (at pp.c:16435)
      FuncDecl: quals=None (at pp.c:16435)
        ParamList:  (at pp.c:16435)
          Decl: name='arg_0x1028c3318', quals=[], storage=[] (at pp.c:16435)
            TypeDecl: declname='arg_0x1028c3318', quals=[] (at pp.c:16435)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcStreamP__AdcConfigure__getConfiguration', quals=[] (at pp.c:16435)
          IdentifierType: names=['AdcStreamP__AdcConfigure__adc_config_t'] (at None)
    Compound:  (at pp.c:16435)
      Decl: name='__nesc_result', quals=['const'], storage=[] (at pp.c:16437)
        PtrDecl: quals=[] (at pp.c:16437)
          TypeDecl: declname='__nesc_result', quals=['const'] (at pp.c:16437)
            Struct: name='__nesc_unnamed4300', packed=False (at pp.c:16437)
      Switch:  (at pp.c:16441)
        ID: name='arg_0x1028c3318' (at pp.c:16441)
        Compound:  (at pp.c:16441)
          Case:  (at pp.c:16443)
            ID: name='AdcReadStreamClientC__0__RSCLIENT' (at pp.c:16443)
            Assignment: op='=' (at pp.c:16445)
              ID: name='__nesc_result' (at pp.c:16445)
              FuncCall:  (at None)
                ID: name='Msp430InternalVoltageP__AdcConfigure__getConfiguration' (at pp.c:16445)
          Break:  (at pp.c:16447)
          Default:  (at pp.c:16449)
            Assignment: op='=' (at pp.c:16451)
              ID: name='__nesc_result' (at pp.c:16451)
              FuncCall:  (at None)
                ID: name='AdcStreamP__AdcConfigure__default__getConfiguration' (at pp.c:16451)
                ExprList:  (at pp.c:16451)
                  ID: name='arg_0x1028c3318' (at pp.c:16451)
          Break:  (at pp.c:16453)
      Return:  (at pp.c:16459)
        ID: name='__nesc_result' (at pp.c:16459)
  FuncDef:  (at pp.c:16464)
    Decl: name='AdcStreamP__readStreamDone__postTask', quals=[], storage=['static', 'inline'] (at pp.c:16464)
      FuncDecl: quals=None (at pp.c:16464)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__readStreamDone__postTask', quals=[] (at pp.c:16464)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16464)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16466)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16466)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16470)
        ID: name='__nesc_result' (at pp.c:16470)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:16470)
          ExprList:  (at pp.c:16470)
            ID: name='AdcStreamP__readStreamDone' (at pp.c:16470)
      Return:  (at pp.c:16474)
        ID: name='__nesc_result' (at pp.c:16474)
  FuncDef:  (at pp.c:16479)
    Decl: name='TransformAlarmC__2__Alarm__startAt', quals=[], storage=['inline', 'static'] (at pp.c:16479)
      FuncDecl: quals=None (at pp.c:16479)
        ParamList:  (at pp.c:16479)
          Decl: name='t0', quals=[], storage=[] (at pp.c:16479)
            TypeDecl: declname='t0', quals=[] (at pp.c:16479)
              IdentifierType: names=['TransformAlarmC__2__to_size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:16479)
            TypeDecl: declname='dt', quals=[] (at pp.c:16479)
              IdentifierType: names=['TransformAlarmC__2__to_size_type'] (at None)
        TypeDecl: declname='TransformAlarmC__2__Alarm__startAt', quals=[] (at pp.c:16479)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16480)
      Compound:  (at pp.c:16482)
        Assignment: op='=' (at pp.c:16483)
          ID: name='TransformAlarmC__2__m_t0' (at pp.c:16483)
          ID: name='t0' (at pp.c:16483)
        Assignment: op='=' (at pp.c:16484)
          ID: name='TransformAlarmC__2__m_dt' (at pp.c:16484)
          ID: name='dt' (at pp.c:16484)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__2__set_alarm' (at pp.c:16485)
  FuncDef:  (at pp.c:16490)
    Decl: name='AdcStreamP__Alarm__startAt', quals=[], storage=['static', 'inline'] (at pp.c:16490)
      FuncDecl: quals=None (at pp.c:16490)
        ParamList:  (at pp.c:16490)
          Decl: name='t0', quals=[], storage=[] (at pp.c:16490)
            TypeDecl: declname='t0', quals=[] (at pp.c:16490)
              IdentifierType: names=['AdcStreamP__Alarm__size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:16490)
            TypeDecl: declname='dt', quals=[] (at pp.c:16490)
              IdentifierType: names=['AdcStreamP__Alarm__size_type'] (at None)
        TypeDecl: declname='AdcStreamP__Alarm__startAt', quals=[] (at pp.c:16490)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16490)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__2__Alarm__startAt' (at pp.c:16492)
        ExprList:  (at pp.c:16492)
          ID: name='t0' (at pp.c:16492)
          ID: name='dt' (at pp.c:16492)
  FuncDef:  (at pp.c:16497)
    Decl: name='AdcStreamP__nextAlarm', quals=[], storage=['inline', 'static'] (at pp.c:16497)
      FuncDecl: quals=None (at pp.c:16497)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__nextAlarm', quals=[] (at pp.c:16497)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16499)
      FuncCall:  (at None)
        ID: name='AdcStreamP__Alarm__startAt' (at pp.c:16500)
        ExprList:  (at pp.c:16500)
          ID: name='AdcStreamP__now' (at pp.c:16500)
          ID: name='AdcStreamP__period' (at pp.c:16500)
      Assignment: op='+=' (at pp.c:16501)
        ID: name='AdcStreamP__now' (at pp.c:16501)
        ID: name='AdcStreamP__period' (at pp.c:16501)
  FuncDef:  (at pp.c:16505)
    Decl: name='Msp430TimerCapComP__1__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:16505)
      FuncDecl: quals=None (at pp.c:16505)
        ParamList:  (at pp.c:16505)
          Decl: name='x', quals=[], storage=[] (at pp.c:16505)
            TypeDecl: declname='x', quals=[] (at pp.c:16505)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Compare__setEvent', quals=[] (at pp.c:16505)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16506)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:16507)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='372U' (at pp.c:16507)
        ID: name='x' (at pp.c:16507)
  FuncDef:  (at pp.c:16511)
    Decl: name='Msp430Adc12ImplP__CompareA1__setEvent', quals=[], storage=['static', 'inline'] (at pp.c:16511)
      FuncDecl: quals=None (at pp.c:16511)
        ParamList:  (at pp.c:16511)
          Decl: name='time', quals=[], storage=[] (at pp.c:16511)
            TypeDecl: declname='time', quals=[] (at pp.c:16511)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__CompareA1__setEvent', quals=[] (at pp.c:16511)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16511)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__1__Compare__setEvent' (at pp.c:16513)
        ExprList:  (at pp.c:16513)
          ID: name='time' (at pp.c:16513)
  FuncDef:  (at pp.c:16518)
    Decl: name='Msp430TimerCapComP__0__Compare__setEvent', quals=[], storage=['inline', 'static'] (at pp.c:16518)
      FuncDecl: quals=None (at pp.c:16518)
        ParamList:  (at pp.c:16518)
          Decl: name='x', quals=[], storage=[] (at pp.c:16518)
            TypeDecl: declname='x', quals=[] (at pp.c:16518)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Compare__setEvent', quals=[] (at pp.c:16518)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16519)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:16520)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='370U' (at pp.c:16520)
        ID: name='x' (at pp.c:16520)
  FuncDef:  (at pp.c:16524)
    Decl: name='Msp430Adc12ImplP__CompareA0__setEvent', quals=[], storage=['static', 'inline'] (at pp.c:16524)
      FuncDecl: quals=None (at pp.c:16524)
        ParamList:  (at pp.c:16524)
          Decl: name='time', quals=[], storage=[] (at pp.c:16524)
            TypeDecl: declname='time', quals=[] (at pp.c:16524)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__CompareA0__setEvent', quals=[] (at pp.c:16524)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16524)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__0__Compare__setEvent' (at pp.c:16526)
        ExprList:  (at pp.c:16526)
          ID: name='time' (at pp.c:16526)
  FuncDef:  (at pp.c:16531)
    Decl: name='Msp430TimerCapComP__0__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:16531)
      FuncDecl: quals=None (at pp.c:16531)
        ParamList:  (at pp.c:16531)
          Decl: name='x', quals=[], storage=[] (at pp.c:16531)
            TypeDecl: declname='x', quals=[] (at pp.c:16531)
              IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__CC2int', quals=[] (at pp.c:16531)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:16533)
      Decl: name='c', quals=[], storage=[] (at pp.c:16542)
        TypeDecl: declname='c', quals=[] (at pp.c:16542)
          Union: name='Msp430TimerCapComP__0____nesc_unnamed4395', packed=False (at pp.c:16535)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:16537)
                IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:16539)
                IdentifierType: names=['uint16_t'] (at None)
        ExprList:  (at pp.c:16542)
          Assignment: op='=' (at pp.c:16542)
            StructRef: type='.' (at pp.c:16542)
              ID: name='f' (at pp.c:16542)
            ID: name='x' (at pp.c:16542)
      Return:  (at pp.c:16545)
        StructRef: type='.' (at pp.c:16545)
          ID: name='c' (at pp.c:16545)
          ID: name='t' (at pp.c:16545)
  FuncDef:  (at pp.c:16549)
    Decl: name='Msp430TimerCapComP__0__Control__setControl', quals=[], storage=['inline', 'static'] (at pp.c:16549)
      FuncDecl: quals=None (at pp.c:16549)
        ParamList:  (at pp.c:16549)
          Decl: name='x', quals=[], storage=[] (at pp.c:16549)
            TypeDecl: declname='x', quals=[] (at pp.c:16549)
              IdentifierType: names=['Msp430TimerCapComP__0__cc_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Control__setControl', quals=[] (at pp.c:16549)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16550)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:16551)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='354U' (at pp.c:16551)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__0__CC2int' (at pp.c:16551)
          ExprList:  (at pp.c:16551)
            ID: name='x' (at pp.c:16551)
  FuncDef:  (at pp.c:16555)
    Decl: name='Msp430Adc12ImplP__ControlA0__setControl', quals=[], storage=['static', 'inline'] (at pp.c:16555)
      FuncDecl: quals=None (at pp.c:16555)
        ParamList:  (at pp.c:16555)
          Decl: name='control', quals=[], storage=[] (at pp.c:16555)
            TypeDecl: declname='control', quals=[] (at pp.c:16555)
              IdentifierType: names=['msp430_compare_control_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__ControlA0__setControl', quals=[] (at pp.c:16555)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16555)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__0__Control__setControl' (at pp.c:16557)
        ExprList:  (at pp.c:16557)
          ID: name='control' (at pp.c:16557)
  FuncDef:  (at pp.c:16562)
    Decl: name='Msp430TimerP__0__Timer__setInputDivider', quals=[], storage=['inline', 'static'] (at pp.c:16562)
      FuncDecl: quals=None (at pp.c:16562)
        ParamList:  (at pp.c:16562)
          Decl: name='inputDivider', quals=[], storage=[] (at pp.c:16562)
            TypeDecl: declname='inputDivider', quals=[] (at pp.c:16562)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Timer__setInputDivider', quals=[] (at pp.c:16562)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16563)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:16564)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='352U' (at pp.c:16564)
        BinaryOp: op='|' (at None)
          BinaryOp: op='&' (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:16564)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='352U' (at pp.c:16564)
            UnaryOp: op='~' (at pp.c:16564)
              BinaryOp: op='|' (at pp.c:16564)
                Constant: type='int', value='0x0040' (at pp.c:16564)
                Constant: type='int', value='0x0080' (at pp.c:16564)
          BinaryOp: op='&' (at pp.c:16564)
            BinaryOp: op='<<' (at pp.c:16564)
              ID: name='inputDivider' (at pp.c:16564)
              Constant: type='int', value='6' (at pp.c:16564)
            BinaryOp: op='|' (at pp.c:16564)
              Constant: type='int', value='0x0040' (at pp.c:16564)
              Constant: type='int', value='0x0080' (at pp.c:16564)
  FuncDef:  (at pp.c:16568)
    Decl: name='Msp430Adc12ImplP__TimerA__setInputDivider', quals=[], storage=['static', 'inline'] (at pp.c:16568)
      FuncDecl: quals=None (at pp.c:16568)
        ParamList:  (at pp.c:16568)
          Decl: name='inputDivider', quals=[], storage=[] (at pp.c:16568)
            TypeDecl: declname='inputDivider', quals=[] (at pp.c:16568)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__TimerA__setInputDivider', quals=[] (at pp.c:16568)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16568)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Timer__setInputDivider' (at pp.c:16570)
        ExprList:  (at pp.c:16570)
          ID: name='inputDivider' (at pp.c:16570)
  FuncDef:  (at pp.c:16575)
    Decl: name='Msp430TimerP__0__Timer__setClockSource', quals=[], storage=['inline', 'static'] (at pp.c:16575)
      FuncDecl: quals=None (at pp.c:16575)
        ParamList:  (at pp.c:16575)
          Decl: name='clockSource', quals=[], storage=[] (at pp.c:16575)
            TypeDecl: declname='clockSource', quals=[] (at pp.c:16575)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Timer__setClockSource', quals=[] (at pp.c:16575)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16576)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:16577)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='352U' (at pp.c:16577)
        BinaryOp: op='|' (at None)
          BinaryOp: op='&' (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:16577)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='352U' (at pp.c:16577)
            UnaryOp: op='~' (at pp.c:16577)
              BinaryOp: op='|' (at pp.c:16577)
                Constant: type='int', value='256U' (at pp.c:16577)
                Constant: type='int', value='512U' (at pp.c:16577)
          BinaryOp: op='&' (at pp.c:16577)
            BinaryOp: op='<<' (at pp.c:16577)
              ID: name='clockSource' (at pp.c:16577)
              Constant: type='int', value='8' (at pp.c:16577)
            BinaryOp: op='|' (at pp.c:16577)
              Constant: type='int', value='256U' (at pp.c:16577)
              Constant: type='int', value='512U' (at pp.c:16577)
  FuncDef:  (at pp.c:16581)
    Decl: name='Msp430Adc12ImplP__TimerA__setClockSource', quals=[], storage=['static', 'inline'] (at pp.c:16581)
      FuncDecl: quals=None (at pp.c:16581)
        ParamList:  (at pp.c:16581)
          Decl: name='clockSource', quals=[], storage=[] (at pp.c:16581)
            TypeDecl: declname='clockSource', quals=[] (at pp.c:16581)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__TimerA__setClockSource', quals=[] (at pp.c:16581)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16581)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Timer__setClockSource' (at pp.c:16583)
        ExprList:  (at pp.c:16583)
          ID: name='clockSource' (at pp.c:16583)
  FuncDef:  (at pp.c:16588)
    Decl: name='Msp430TimerP__0__Timer__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:16588)
      FuncDecl: quals=None (at pp.c:16588)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Timer__disableEvents', quals=[] (at pp.c:16588)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16589)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:16590)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='352U' (at pp.c:16590)
        UnaryOp: op='~' (at pp.c:16590)
          Constant: type='int', value='2U' (at pp.c:16590)
  FuncDef:  (at pp.c:16594)
    Decl: name='Msp430Adc12ImplP__TimerA__disableEvents', quals=[], storage=['static', 'inline'] (at pp.c:16594)
      FuncDecl: quals=None (at pp.c:16594)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__TimerA__disableEvents', quals=[] (at pp.c:16594)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16594)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Timer__disableEvents' (at pp.c:16596)
  FuncDef:  (at pp.c:16601)
    Decl: name='Msp430TimerP__0__Timer__clear', quals=[], storage=['inline', 'static'] (at pp.c:16601)
      FuncDecl: quals=None (at pp.c:16601)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Timer__clear', quals=[] (at pp.c:16601)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16602)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:16603)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='352U' (at pp.c:16603)
        Constant: type='int', value='4U' (at pp.c:16603)
  FuncDef:  (at pp.c:16607)
    Decl: name='Msp430Adc12ImplP__TimerA__clear', quals=[], storage=['static', 'inline'] (at pp.c:16607)
      FuncDecl: quals=None (at pp.c:16607)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__TimerA__clear', quals=[] (at pp.c:16607)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16607)
      FuncCall:  (at None)
        ID: name='Msp430TimerP__0__Timer__clear' (at pp.c:16609)
  FuncDef:  (at pp.c:16614)
    Decl: name='Msp430Adc12ImplP__prepareTimerA', quals=[], storage=['inline', 'static'] (at pp.c:16614)
      FuncDecl: quals=None (at pp.c:16614)
        ParamList:  (at pp.c:16614)
          Decl: name='interval', quals=[], storage=[] (at pp.c:16614)
            TypeDecl: declname='interval', quals=[] (at pp.c:16614)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='csSAMPCON', quals=[], storage=[] (at pp.c:16614)
            TypeDecl: declname='csSAMPCON', quals=[] (at pp.c:16614)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='cdSAMPCON', quals=[], storage=[] (at pp.c:16614)
            TypeDecl: declname='cdSAMPCON', quals=[] (at pp.c:16614)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__prepareTimerA', quals=[] (at pp.c:16614)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16615)
      Decl: name='ccResetSHI', quals=[], storage=[] (at pp.c:16617)
        TypeDecl: declname='ccResetSHI', quals=[] (at pp.c:16617)
          IdentifierType: names=['msp430_compare_control_t'] (at None)
        ExprList:  (at pp.c:16618)
          Assignment: op='=' (at pp.c:16618)
            StructRef: type='.' (at pp.c:16618)
              ID: name='ccifg' (at pp.c:16618)
            Constant: type='int', value='0' (at pp.c:16618)
          Assignment: op='=' (at pp.c:16618)
            StructRef: type='.' (at pp.c:16618)
              ID: name='cov' (at pp.c:16618)
            Constant: type='int', value='0' (at pp.c:16618)
          Assignment: op='=' (at pp.c:16618)
            StructRef: type='.' (at pp.c:16618)
              ID: name='out' (at pp.c:16618)
            Constant: type='int', value='0' (at pp.c:16618)
          Assignment: op='=' (at pp.c:16618)
            StructRef: type='.' (at pp.c:16618)
              ID: name='cci' (at pp.c:16618)
            Constant: type='int', value='0' (at pp.c:16618)
          Assignment: op='=' (at pp.c:16618)
            StructRef: type='.' (at pp.c:16618)
              ID: name='ccie' (at pp.c:16618)
            Constant: type='int', value='0' (at pp.c:16618)
          Assignment: op='=' (at pp.c:16619)
            StructRef: type='.' (at pp.c:16619)
              ID: name='outmod' (at pp.c:16619)
            Constant: type='int', value='0' (at pp.c:16619)
          Assignment: op='=' (at pp.c:16619)
            StructRef: type='.' (at pp.c:16619)
              ID: name='cap' (at pp.c:16619)
            Constant: type='int', value='0' (at pp.c:16619)
          Assignment: op='=' (at pp.c:16619)
            StructRef: type='.' (at pp.c:16619)
              ID: name='clld' (at pp.c:16619)
            Constant: type='int', value='0' (at pp.c:16619)
          Assignment: op='=' (at pp.c:16619)
            StructRef: type='.' (at pp.c:16619)
              ID: name='scs' (at pp.c:16619)
            Constant: type='int', value='0' (at pp.c:16619)
          Assignment: op='=' (at pp.c:16619)
            StructRef: type='.' (at pp.c:16619)
              ID: name='ccis' (at pp.c:16619)
            Constant: type='int', value='0' (at pp.c:16619)
          Assignment: op='=' (at pp.c:16619)
            StructRef: type='.' (at pp.c:16619)
              ID: name='cm' (at pp.c:16619)
            Constant: type='int', value='0' (at pp.c:16619)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__TimerA__setMode' (at pp.c:16621)
        ExprList:  (at pp.c:16621)
          ID: name='MSP430TIMER_STOP_MODE' (at pp.c:16621)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__TimerA__clear' (at pp.c:16622)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__TimerA__disableEvents' (at pp.c:16623)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__TimerA__setClockSource' (at pp.c:16624)
        ExprList:  (at pp.c:16624)
          ID: name='csSAMPCON' (at pp.c:16624)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__TimerA__setInputDivider' (at pp.c:16625)
        ExprList:  (at pp.c:16625)
          ID: name='cdSAMPCON' (at pp.c:16625)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__ControlA0__setControl' (at pp.c:16626)
        ExprList:  (at pp.c:16626)
          ID: name='ccResetSHI' (at pp.c:16626)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__CompareA0__setEvent' (at pp.c:16627)
        ExprList:  (at pp.c:16627)
          BinaryOp: op='-' (at pp.c:16627)
            ID: name='interval' (at pp.c:16627)
            Constant: type='int', value='1' (at pp.c:16627)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__CompareA1__setEvent' (at pp.c:16628)
        ExprList:  (at pp.c:16628)
          BinaryOp: op='/' (at pp.c:16628)
            BinaryOp: op='-' (at pp.c:16628)
              ID: name='interval' (at pp.c:16628)
              Constant: type='int', value='1' (at pp.c:16628)
            Constant: type='int', value='2' (at pp.c:16628)
  FuncDef:  (at pp.c:16632)
    Decl: name='HplAdc12P__HplAdc12__setIEFlags', quals=[], storage=['inline', 'static'] (at pp.c:16632)
      FuncDecl: quals=None (at pp.c:16632)
        ParamList:  (at pp.c:16632)
          Decl: name='mask', quals=[], storage=[] (at pp.c:16632)
            TypeDecl: declname='mask', quals=[] (at pp.c:16632)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__setIEFlags', quals=[] (at pp.c:16632)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16634)
      Assignment: op='=' (at pp.c:16636)
        ID: name='HplAdc12P__ADC12IE' (at pp.c:16636)
        ID: name='mask' (at pp.c:16636)
  FuncDef:  (at pp.c:16640)
    Decl: name='Msp430Adc12ImplP__HplAdc12__setIEFlags', quals=[], storage=['static', 'inline'] (at pp.c:16640)
      FuncDecl: quals=None (at pp.c:16640)
        ParamList:  (at pp.c:16640)
          Decl: name='mask', quals=[], storage=[] (at pp.c:16640)
            TypeDecl: declname='mask', quals=[] (at pp.c:16640)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__setIEFlags', quals=[] (at pp.c:16640)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16640)
      FuncCall:  (at None)
        ID: name='HplAdc12P__HplAdc12__setIEFlags' (at pp.c:16642)
        ExprList:  (at pp.c:16642)
          ID: name='mask' (at pp.c:16642)
  FuncDef:  (at pp.c:16647)
    Decl: name='HplAdc12P__adc12memctl2int', quals=[], storage=['inline', 'static'] (at pp.c:16647)
      FuncDecl: quals=None (at pp.c:16647)
        ParamList:  (at pp.c:16647)
          Decl: name='x', quals=[], storage=[] (at pp.c:16647)
            TypeDecl: declname='x', quals=[] (at pp.c:16647)
              IdentifierType: names=['adc12memctl_t'] (at None)
        TypeDecl: declname='HplAdc12P__adc12memctl2int', quals=[] (at pp.c:16647)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:16649)
      Decl: name='c', quals=[], storage=[] (at pp.c:16658)
        TypeDecl: declname='c', quals=[] (at pp.c:16658)
          Union: name='__nesc_unnamed4396', packed=False (at pp.c:16651)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:16653)
                IdentifierType: names=['adc12memctl_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:16655)
                IdentifierType: names=['uint8_t'] (at None)
        ExprList:  (at pp.c:16658)
          Assignment: op='=' (at pp.c:16658)
            StructRef: type='.' (at pp.c:16658)
              ID: name='f' (at pp.c:16658)
            ID: name='x' (at pp.c:16658)
      Return:  (at pp.c:16661)
        StructRef: type='.' (at pp.c:16661)
          ID: name='c' (at pp.c:16661)
          ID: name='t' (at pp.c:16661)
  FuncDef:  (at pp.c:16665)
    Decl: name='HplAdc12P__HplAdc12__setMCtl', quals=[], storage=['inline', 'static'] (at pp.c:16665)
      FuncDecl: quals=None (at pp.c:16665)
        ParamList:  (at pp.c:16665)
          Decl: name='i', quals=[], storage=[] (at pp.c:16665)
            TypeDecl: declname='i', quals=[] (at pp.c:16665)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='memCtl', quals=[], storage=[] (at pp.c:16665)
            TypeDecl: declname='memCtl', quals=[] (at pp.c:16665)
              IdentifierType: names=['adc12memctl_t'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__setMCtl', quals=[] (at pp.c:16665)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16667)
      Assignment: op='=' (at None)
        ArrayRef:  (at None)
          Cast:  (at None)
            Typename: quals=[] (at None)
              PtrDecl: quals=[] (at pp.c:16668)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['char'] (at None)
            Constant: type='int', value='0x0080' (at pp.c:16668)
          ID: name='i' (at pp.c:16668)
        FuncCall:  (at None)
          ID: name='HplAdc12P__adc12memctl2int' (at pp.c:16668)
          ExprList:  (at pp.c:16668)
            ID: name='memCtl' (at pp.c:16668)
  FuncDef:  (at pp.c:16672)
    Decl: name='Msp430Adc12ImplP__HplAdc12__setMCtl', quals=[], storage=['static', 'inline'] (at pp.c:16672)
      FuncDecl: quals=None (at pp.c:16672)
        ParamList:  (at pp.c:16672)
          Decl: name='idx', quals=[], storage=[] (at pp.c:16672)
            TypeDecl: declname='idx', quals=[] (at pp.c:16672)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='memControl', quals=[], storage=[] (at pp.c:16672)
            TypeDecl: declname='memControl', quals=[] (at pp.c:16672)
              IdentifierType: names=['adc12memctl_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__setMCtl', quals=[] (at pp.c:16672)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16672)
      FuncCall:  (at None)
        ID: name='HplAdc12P__HplAdc12__setMCtl' (at pp.c:16674)
        ExprList:  (at pp.c:16674)
          ID: name='idx' (at pp.c:16674)
          ID: name='memControl' (at pp.c:16674)
  FuncDef:  (at pp.c:16679)
    Decl: name='HplAdc12P__adc12ctl1cast2int', quals=[], storage=['inline', 'static'] (at pp.c:16679)
      FuncDecl: quals=None (at pp.c:16679)
        ParamList:  (at pp.c:16679)
          Decl: name='x', quals=[], storage=[] (at pp.c:16679)
            TypeDecl: declname='x', quals=[] (at pp.c:16679)
              IdentifierType: names=['adc12ctl1_t'] (at None)
        TypeDecl: declname='HplAdc12P__adc12ctl1cast2int', quals=[] (at pp.c:16679)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:16681)
      Decl: name='c', quals=[], storage=[] (at pp.c:16690)
        TypeDecl: declname='c', quals=[] (at pp.c:16690)
          Union: name='__nesc_unnamed4397', packed=False (at pp.c:16683)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:16685)
                IdentifierType: names=['adc12ctl1_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:16687)
                IdentifierType: names=['uint16_t'] (at None)
        ExprList:  (at pp.c:16690)
          Assignment: op='=' (at pp.c:16690)
            StructRef: type='.' (at pp.c:16690)
              ID: name='f' (at pp.c:16690)
            ID: name='x' (at pp.c:16690)
      Return:  (at pp.c:16693)
        StructRef: type='.' (at pp.c:16693)
          ID: name='c' (at pp.c:16693)
          ID: name='t' (at pp.c:16693)
  FuncDef:  (at pp.c:16701)
    Decl: name='HplAdc12P__HplAdc12__setCtl1', quals=[], storage=['inline', 'static'] (at pp.c:16701)
      FuncDecl: quals=None (at pp.c:16701)
        ParamList:  (at pp.c:16701)
          Decl: name='control1', quals=[], storage=[] (at pp.c:16701)
            TypeDecl: declname='control1', quals=[] (at pp.c:16701)
              IdentifierType: names=['adc12ctl1_t'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__setCtl1', quals=[] (at pp.c:16701)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16703)
      Assignment: op='=' (at pp.c:16704)
        ID: name='HplAdc12P__ADC12CTL1' (at pp.c:16704)
        FuncCall:  (at None)
          ID: name='HplAdc12P__adc12ctl1cast2int' (at pp.c:16704)
          ExprList:  (at pp.c:16704)
            ID: name='control1' (at pp.c:16704)
  FuncDef:  (at pp.c:16708)
    Decl: name='Msp430Adc12ImplP__HplAdc12__setCtl1', quals=[], storage=['static', 'inline'] (at pp.c:16708)
      FuncDecl: quals=None (at pp.c:16708)
        ParamList:  (at pp.c:16708)
          Decl: name='control1', quals=[], storage=[] (at pp.c:16708)
            TypeDecl: declname='control1', quals=[] (at pp.c:16708)
              IdentifierType: names=['adc12ctl1_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__setCtl1', quals=[] (at pp.c:16708)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16708)
      FuncCall:  (at None)
        ID: name='HplAdc12P__HplAdc12__setCtl1' (at pp.c:16710)
        ExprList:  (at pp.c:16710)
          ID: name='control1' (at pp.c:16710)
  FuncDef:  (at pp.c:16715)
    Decl: name='Msp430Adc12ImplP__HplAdc12__setCtl0', quals=[], storage=['static', 'inline'] (at pp.c:16715)
      FuncDecl: quals=None (at pp.c:16715)
        ParamList:  (at pp.c:16715)
          Decl: name='control0', quals=[], storage=[] (at pp.c:16715)
            TypeDecl: declname='control0', quals=[] (at pp.c:16715)
              IdentifierType: names=['adc12ctl0_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__setCtl0', quals=[] (at pp.c:16715)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16715)
      FuncCall:  (at None)
        ID: name='HplAdc12P__HplAdc12__setCtl0' (at pp.c:16717)
        ExprList:  (at pp.c:16717)
          ID: name='control0' (at pp.c:16717)
  FuncDef:  (at pp.c:16722)
    Decl: name='Msp430Adc12ImplP__HplAdc12__getCtl0', quals=[], storage=['static', 'inline'] (at pp.c:16722)
      FuncDecl: quals=None (at pp.c:16722)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__getCtl0', quals=[] (at pp.c:16722)
          IdentifierType: names=['adc12ctl0_t'] (at None)
    Compound:  (at pp.c:16722)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16724)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16724)
          Struct: name='__nesc_unnamed4254', packed=False (at pp.c:16724)
      Assignment: op='=' (at pp.c:16728)
        ID: name='__nesc_result' (at pp.c:16728)
        FuncCall:  (at None)
          ID: name='HplAdc12P__HplAdc12__getCtl0' (at pp.c:16728)
      Return:  (at pp.c:16732)
        ID: name='__nesc_result' (at pp.c:16732)
  FuncDef:  (at pp.c:16737)
    Decl: name='Msp430Adc12ImplP__ADCArbiterInfo__userId', quals=[], storage=['static', 'inline'] (at pp.c:16737)
      FuncDecl: quals=None (at pp.c:16737)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__ADCArbiterInfo__userId', quals=[] (at pp.c:16737)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:16737)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16739)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16739)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16743)
        ID: name='__nesc_result' (at pp.c:16743)
        FuncCall:  (at None)
          ID: name='SimpleArbiterP__0__ArbiterInfo__userId' (at pp.c:16743)
      Return:  (at pp.c:16747)
        ID: name='__nesc_result' (at pp.c:16747)
  FuncDef:  (at pp.c:16752)
    Decl: name='Msp430Adc12ImplP__SingleChannel__configureMultiple', quals=[], storage=['inline', 'static'] (at pp.c:16752)
      FuncDecl: quals=None (at pp.c:16752)
        ParamList:  (at pp.c:16752)
          Decl: name='id', quals=[], storage=[] (at pp.c:16752)
            TypeDecl: declname='id', quals=[] (at pp.c:16752)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='config', quals=['const'], storage=[] (at pp.c:16753)
            PtrDecl: quals=[] (at pp.c:16753)
              TypeDecl: declname='config', quals=['const'] (at pp.c:16753)
                IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:16754)
            PtrDecl: quals=[] (at pp.c:16754)
              TypeDecl: declname='buf', quals=[] (at pp.c:16754)
                IdentifierType: names=['uint16_t'] (at None)
          Decl: name='length', quals=[], storage=[] (at pp.c:16754)
            TypeDecl: declname='length', quals=[] (at pp.c:16754)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='jiffies', quals=[], storage=[] (at pp.c:16754)
            TypeDecl: declname='jiffies', quals=[] (at pp.c:16754)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__configureMultiple', quals=[] (at pp.c:16752)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16755)
      Decl: name='result', quals=[], storage=[] (at pp.c:16756)
        TypeDecl: declname='result', quals=[] (at pp.c:16756)
          IdentifierType: names=['error_t'] (at None)
        ID: name='ERESERVE' (at pp.c:16756)
      If:  (at pp.c:16762)
        BinaryOp: op='||' (at pp.c:16762)
          BinaryOp: op='||' (at pp.c:16762)
            BinaryOp: op='||' (at pp.c:16762)
              BinaryOp: op='||' (at pp.c:16762)
                UnaryOp: op='!' (at pp.c:16762)
                  ID: name='config' (at pp.c:16762)
                UnaryOp: op='!' (at pp.c:16762)
                  ID: name='buf' (at pp.c:16762)
              UnaryOp: op='!' (at pp.c:16762)
                ID: name='length' (at pp.c:16762)
            BinaryOp: op='==' (at pp.c:16762)
              ID: name='jiffies' (at pp.c:16762)
              Constant: type='int', value='1' (at pp.c:16762)
          BinaryOp: op='==' (at pp.c:16762)
            ID: name='jiffies' (at pp.c:16762)
            Constant: type='int', value='2' (at pp.c:16762)
        Compound:  (at pp.c:16762)
          Return:  (at pp.c:16763)
            ID: name='EINVAL' (at pp.c:16763)
      Compound:  (at pp.c:16765)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:16765)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:16765)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:16765)
        Compound:  (at pp.c:16767)
          If:  (at pp.c:16768)
            BinaryOp: op='&' (at pp.c:16768)
              ID: name='Msp430Adc12ImplP__state' (at pp.c:16768)
              ID: name='Msp430Adc12ImplP__ADC_BUSY' (at pp.c:16768)
            Compound:  (at pp.c:16769)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:16770)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:16770)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='EBUSY' (at pp.c:16772)
              Compound:  (at pp.c:16774)
                FuncCall:  (at None)
                  ID: name='__nesc_atomic_end' (at pp.c:16776)
                  ExprList:  (at pp.c:16776)
                    ID: name='__nesc_atomic' (at pp.c:16776)
                Return:  (at pp.c:16778)
                  ID: name='__nesc_temp' (at pp.c:16778)
          If:  (at pp.c:16782)
            BinaryOp: op='==' (at None)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__ADCArbiterInfo__userId' (at pp.c:16782)
              ID: name='id' (at pp.c:16782)
            Compound:  (at pp.c:16782)
              Decl: name='ctl1', quals=[], storage=[] (at pp.c:16783)
                TypeDecl: declname='ctl1', quals=[] (at pp.c:16783)
                  IdentifierType: names=['adc12ctl1_t'] (at None)
                ExprList:  (at pp.c:16784)
                  Assignment: op='=' (at pp.c:16784)
                    StructRef: type='.' (at pp.c:16784)
                      ID: name='adc12busy' (at pp.c:16784)
                    Constant: type='int', value='0' (at pp.c:16784)
                  Assignment: op='=' (at pp.c:16785)
                    StructRef: type='.' (at pp.c:16785)
                      ID: name='conseq' (at pp.c:16785)
                    TernaryOp:  (at pp.c:16785)
                      BinaryOp: op='>' (at pp.c:16785)
                        ID: name='length' (at pp.c:16785)
                        Constant: type='int', value='16' (at pp.c:16785)
                      Constant: type='int', value='3' (at pp.c:16785)
                      Constant: type='int', value='1' (at pp.c:16785)
                  Assignment: op='=' (at pp.c:16786)
                    StructRef: type='.' (at pp.c:16786)
                      ID: name='adc12ssel' (at pp.c:16786)
                    StructRef: type='->' (at pp.c:16786)
                      ID: name='config' (at pp.c:16786)
                      ID: name='adc12ssel' (at pp.c:16786)
                  Assignment: op='=' (at pp.c:16787)
                    StructRef: type='.' (at pp.c:16787)
                      ID: name='adc12div' (at pp.c:16787)
                    StructRef: type='->' (at pp.c:16787)
                      ID: name='config' (at pp.c:16787)
                      ID: name='adc12div' (at pp.c:16787)
                  Assignment: op='=' (at pp.c:16788)
                    StructRef: type='.' (at pp.c:16788)
                      ID: name='issh' (at pp.c:16788)
                    Constant: type='int', value='0' (at pp.c:16788)
                  Assignment: op='=' (at pp.c:16789)
                    StructRef: type='.' (at pp.c:16789)
                      ID: name='shp' (at pp.c:16789)
                    Constant: type='int', value='1' (at pp.c:16789)
                  Assignment: op='=' (at pp.c:16790)
                    StructRef: type='.' (at pp.c:16790)
                      ID: name='shs' (at pp.c:16790)
                    TernaryOp:  (at pp.c:16790)
                      BinaryOp: op='==' (at pp.c:16790)
                        ID: name='jiffies' (at pp.c:16790)
                        Constant: type='int', value='0' (at pp.c:16790)
                      Constant: type='int', value='0' (at pp.c:16790)
                      Constant: type='int', value='1' (at pp.c:16790)
                  Assignment: op='=' (at pp.c:16791)
                    StructRef: type='.' (at pp.c:16791)
                      ID: name='cstartadd' (at pp.c:16791)
                    Constant: type='int', value='0' (at pp.c:16791)
              Decl: name='memctl', quals=[], storage=[] (at pp.c:16793)
                TypeDecl: declname='memctl', quals=[] (at pp.c:16793)
                  IdentifierType: names=['adc12memctl_t'] (at None)
                ExprList:  (at pp.c:16794)
                  Assignment: op='=' (at pp.c:16794)
                    StructRef: type='.' (at pp.c:16794)
                      ID: name='inch' (at pp.c:16794)
                    StructRef: type='->' (at pp.c:16794)
                      ID: name='config' (at pp.c:16794)
                      ID: name='inch' (at pp.c:16794)
                  Assignment: op='=' (at pp.c:16795)
                    StructRef: type='.' (at pp.c:16795)
                      ID: name='sref' (at pp.c:16795)
                    StructRef: type='->' (at pp.c:16795)
                      ID: name='config' (at pp.c:16795)
                      ID: name='sref' (at pp.c:16795)
                  Assignment: op='=' (at pp.c:16796)
                    StructRef: type='.' (at pp.c:16796)
                      ID: name='eos' (at pp.c:16796)
                    Constant: type='int', value='0' (at pp.c:16796)
              Decl: name='i', quals=[], storage=[] (at pp.c:16798)
                TypeDecl: declname='i', quals=[] (at pp.c:16798)
                  IdentifierType: names=['uint16_t'] (at None)
              Decl: name='mask', quals=[], storage=[] (at pp.c:16800)
                TypeDecl: declname='mask', quals=[] (at pp.c:16800)
                  IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='1' (at pp.c:16800)
              Decl: name='ctl0', quals=[], storage=[] (at pp.c:16801)
                TypeDecl: declname='ctl0', quals=[] (at pp.c:16801)
                  IdentifierType: names=['adc12ctl0_t'] (at None)
                FuncCall:  (at None)
                  ID: name='Msp430Adc12ImplP__HplAdc12__getCtl0' (at pp.c:16801)
              Assignment: op='=' (at pp.c:16804)
                StructRef: type='.' (at pp.c:16804)
                  ID: name='ctl0' (at pp.c:16804)
                  ID: name='msc' (at pp.c:16804)
                TernaryOp:  (at pp.c:16804)
                  BinaryOp: op='==' (at pp.c:16804)
                    ID: name='jiffies' (at pp.c:16804)
                    Constant: type='int', value='0' (at pp.c:16804)
                  Constant: type='int', value='1' (at pp.c:16804)
                  Constant: type='int', value='0' (at pp.c:16804)
              Assignment: op='=' (at pp.c:16805)
                StructRef: type='.' (at pp.c:16805)
                  ID: name='ctl0' (at pp.c:16805)
                  ID: name='sht0' (at pp.c:16805)
                StructRef: type='->' (at pp.c:16805)
                  ID: name='config' (at pp.c:16805)
                  ID: name='sht' (at pp.c:16805)
              Assignment: op='=' (at pp.c:16806)
                StructRef: type='.' (at pp.c:16806)
                  ID: name='ctl0' (at pp.c:16806)
                  ID: name='sht1' (at pp.c:16806)
                StructRef: type='->' (at pp.c:16806)
                  ID: name='config' (at pp.c:16806)
                  ID: name='sht' (at pp.c:16806)
              Assignment: op='=' (at pp.c:16808)
                ID: name='Msp430Adc12ImplP__state' (at pp.c:16808)
                ID: name='Msp430Adc12ImplP__MULTIPLE_DATA' (at pp.c:16808)
              Assignment: op='=' (at pp.c:16809)
                ID: name='Msp430Adc12ImplP__resultBufferStart' (at pp.c:16809)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    PtrDecl: quals=[] (at pp.c:16809)
                      TypeDecl: declname=None, quals=[] (at None)
                        IdentifierType: names=['void'] (at None)
                  Constant: type='int', value='0' (at pp.c:16809)
              Assignment: op='=' (at pp.c:16810)
                ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:16810)
                ID: name='length' (at pp.c:16810)
              Assignment: op='=' (at pp.c:16811)
                ID: name='Msp430Adc12ImplP__resultBufferStart' (at pp.c:16811)
                ID: name='buf' (at pp.c:16811)
              Assignment: op='=' (at pp.c:16812)
                ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:16812)
                Constant: type='int', value='0' (at pp.c:16812)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__HplAdc12__setCtl0' (at pp.c:16813)
                ExprList:  (at pp.c:16813)
                  ID: name='ctl0' (at pp.c:16813)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__HplAdc12__setCtl1' (at pp.c:16814)
                ExprList:  (at pp.c:16814)
                  ID: name='ctl1' (at pp.c:16814)
              For:  (at pp.c:16815)
                Assignment: op='=' (at pp.c:16815)
                  ID: name='i' (at pp.c:16815)
                  Constant: type='int', value='0' (at pp.c:16815)
                BinaryOp: op='&&' (at pp.c:16815)
                  BinaryOp: op='<' (at pp.c:16815)
                    ID: name='i' (at pp.c:16815)
                    BinaryOp: op='-' (at pp.c:16815)
                      ID: name='length' (at pp.c:16815)
                      Constant: type='int', value='1' (at pp.c:16815)
                  BinaryOp: op='<' (at pp.c:16815)
                    ID: name='i' (at pp.c:16815)
                    Constant: type='int', value='15' (at pp.c:16815)
                UnaryOp: op='p++' (at pp.c:16815)
                  ID: name='i' (at pp.c:16815)
                FuncCall:  (at None)
                  ID: name='Msp430Adc12ImplP__HplAdc12__setMCtl' (at pp.c:16816)
                  ExprList:  (at pp.c:16816)
                    ID: name='i' (at pp.c:16816)
                    ID: name='memctl' (at pp.c:16816)
              Assignment: op='=' (at pp.c:16817)
                StructRef: type='.' (at pp.c:16817)
                  ID: name='memctl' (at pp.c:16817)
                  ID: name='eos' (at pp.c:16817)
                Constant: type='int', value='1' (at pp.c:16817)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__HplAdc12__setMCtl' (at pp.c:16818)
                ExprList:  (at pp.c:16818)
                  ID: name='i' (at pp.c:16818)
                  ID: name='memctl' (at pp.c:16818)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__HplAdc12__setIEFlags' (at pp.c:16819)
                ExprList:  (at pp.c:16819)
                  BinaryOp: op='<<' (at pp.c:16819)
                    ID: name='mask' (at pp.c:16819)
                    ID: name='i' (at pp.c:16819)
              If:  (at pp.c:16821)
                ID: name='jiffies' (at pp.c:16821)
                Compound:  (at pp.c:16821)
                  Assignment: op='|=' (at pp.c:16822)
                    ID: name='Msp430Adc12ImplP__state' (at pp.c:16822)
                    ID: name='Msp430Adc12ImplP__USE_TIMERA' (at pp.c:16822)
                  FuncCall:  (at None)
                    ID: name='Msp430Adc12ImplP__prepareTimerA' (at pp.c:16823)
                    ExprList:  (at pp.c:16823)
                      ID: name='jiffies' (at pp.c:16823)
                      StructRef: type='->' (at pp.c:16823)
                        ID: name='config' (at pp.c:16823)
                        ID: name='sampcon_ssel' (at pp.c:16823)
                      StructRef: type='->' (at pp.c:16823)
                        ID: name='config' (at pp.c:16823)
                        ID: name='sampcon_id' (at pp.c:16823)
              Assignment: op='=' (at pp.c:16825)
                ID: name='result' (at pp.c:16825)
                ID: name='SUCCESS' (at pp.c:16825)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:16829)
          ExprList:  (at pp.c:16829)
            ID: name='__nesc_atomic' (at pp.c:16829)
      Return:  (at pp.c:16830)
        ID: name='result' (at pp.c:16830)
  FuncDef:  (at pp.c:16834)
    Decl: name='AdcStreamP__SingleChannel__default__configureMultiple', quals=[], storage=['inline', 'static'] (at pp.c:16834)
      FuncDecl: quals=None (at pp.c:16834)
        ParamList:  (at pp.c:16834)
          Decl: name='c', quals=[], storage=[] (at pp.c:16834)
            TypeDecl: declname='c', quals=[] (at pp.c:16834)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='config', quals=['const'], storage=[] (at pp.c:16835)
            PtrDecl: quals=[] (at pp.c:16835)
              TypeDecl: declname='config', quals=['const'] (at pp.c:16835)
                IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
          Decl: name='b', quals=[], storage=[] (at pp.c:16835)
            ArrayDecl:  (at pp.c:16835)
              TypeDecl: declname='b', quals=[] (at pp.c:16835)
                IdentifierType: names=['uint16_t'] (at None)
          Decl: name='numSamples', quals=[], storage=[] (at pp.c:16836)
            TypeDecl: declname='numSamples', quals=[] (at pp.c:16836)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='jiffies', quals=[], storage=[] (at pp.c:16836)
            TypeDecl: declname='jiffies', quals=[] (at pp.c:16836)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='AdcStreamP__SingleChannel__default__configureMultiple', quals=[] (at pp.c:16834)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16837)
      Return:  (at pp.c:16838)
        ID: name='FAIL' (at pp.c:16838)
  FuncDef:  (at pp.c:16842)
    Decl: name='AdcStreamP__SingleChannel__configureMultiple', quals=[], storage=['static', 'inline'] (at pp.c:16842)
      FuncDecl: quals=None (at pp.c:16842)
        ParamList:  (at pp.c:16842)
          Decl: name='arg_0x1028c6b90', quals=[], storage=[] (at pp.c:16842)
            TypeDecl: declname='arg_0x1028c6b90', quals=[] (at pp.c:16842)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='config', quals=['const'], storage=[] (at pp.c:16842)
            PtrDecl: quals=[] (at pp.c:16842)
              TypeDecl: declname='config', quals=['const'] (at pp.c:16842)
                IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
          Decl: name='buffer', quals=[], storage=[] (at pp.c:16842)
            PtrDecl: quals=[] (at pp.c:16842)
              TypeDecl: declname='buffer', quals=[] (at pp.c:16842)
                IdentifierType: names=['uint16_t'] (at None)
          Decl: name='numSamples', quals=[], storage=[] (at pp.c:16842)
            TypeDecl: declname='numSamples', quals=[] (at pp.c:16842)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='jiffies', quals=[], storage=[] (at pp.c:16842)
            TypeDecl: declname='jiffies', quals=[] (at pp.c:16842)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='AdcStreamP__SingleChannel__configureMultiple', quals=[] (at pp.c:16842)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16842)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16844)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16844)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:16848)
        ID: name='arg_0x1028c6b90' (at pp.c:16848)
        Compound:  (at pp.c:16848)
          Case:  (at pp.c:16850)
            ID: name='AdcReadStreamClientC__0__RSCLIENT' (at pp.c:16850)
            Assignment: op='=' (at pp.c:16852)
              ID: name='__nesc_result' (at pp.c:16852)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__SingleChannel__configureMultiple' (at pp.c:16852)
                ExprList:  (at pp.c:16852)
                  ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:16852)
                  ID: name='config' (at pp.c:16852)
                  ID: name='buffer' (at pp.c:16852)
                  ID: name='numSamples' (at pp.c:16852)
                  ID: name='jiffies' (at pp.c:16852)
          Break:  (at pp.c:16854)
          Default:  (at pp.c:16856)
            Assignment: op='=' (at pp.c:16858)
              ID: name='__nesc_result' (at pp.c:16858)
              FuncCall:  (at None)
                ID: name='AdcStreamP__SingleChannel__default__configureMultiple' (at pp.c:16858)
                ExprList:  (at pp.c:16858)
                  ID: name='arg_0x1028c6b90' (at pp.c:16858)
                  ID: name='config' (at pp.c:16858)
                  ID: name='buffer' (at pp.c:16858)
                  ID: name='numSamples' (at pp.c:16858)
                  ID: name='jiffies' (at pp.c:16858)
          Break:  (at pp.c:16860)
      Return:  (at pp.c:16866)
        ID: name='__nesc_result' (at pp.c:16866)
  FuncDef:  (at pp.c:16871)
    Decl: name='AdcStreamP__postBuffer', quals=[], storage=['inline', 'static'] (at pp.c:16871)
      FuncDecl: quals=None (at pp.c:16871)
        ParamList:  (at pp.c:16871)
          Decl: name='c', quals=[], storage=[] (at pp.c:16871)
            TypeDecl: declname='c', quals=[] (at pp.c:16871)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:16871)
            PtrDecl: quals=[] (at pp.c:16871)
              TypeDecl: declname='buf', quals=[] (at pp.c:16871)
                IdentifierType: names=['uint16_t'] (at None)
          Decl: name='n', quals=[], storage=[] (at pp.c:16871)
            TypeDecl: declname='n', quals=[] (at pp.c:16871)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='AdcStreamP__postBuffer', quals=[] (at pp.c:16871)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16872)
      If:  (at pp.c:16873)
        BinaryOp: op='<' (at pp.c:16873)
          ID: name='n' (at pp.c:16873)
          UnaryOp: op='sizeof' (at pp.c:16873)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                Struct: name='AdcStreamP__list_entry_t', packed=False (at pp.c:16873)
        Compound:  (at pp.c:16873)
          Return:  (at pp.c:16874)
            ID: name='ESIZE' (at pp.c:16874)
      Compound:  (at pp.c:16877)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:16877)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:16877)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:16877)
        Compound:  (at pp.c:16878)
          Decl: name='newEntry', quals=[], storage=[] (at pp.c:16879)
            PtrDecl: quals=[] (at pp.c:16879)
              TypeDecl: declname='newEntry', quals=[] (at pp.c:16879)
                Struct: name='AdcStreamP__list_entry_t', packed=False (at pp.c:16879)
            Cast:  (at None)
              Typename: quals=[] (at None)
                PtrDecl: quals=[] (at pp.c:16879)
                  TypeDecl: declname=None, quals=[] (at None)
                    Struct: name='AdcStreamP__list_entry_t', packed=False (at pp.c:16879)
              ID: name='buf' (at pp.c:16879)
          If:  (at pp.c:16881)
            UnaryOp: op='!' (at pp.c:16881)
              ArrayRef:  (at pp.c:16881)
                ID: name='AdcStreamP__bufferQueueEnd' (at pp.c:16881)
                ID: name='c' (at pp.c:16881)
            Compound:  (at pp.c:16882)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:16883)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:16883)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='FAIL' (at pp.c:16885)
              Compound:  (at pp.c:16887)
                FuncCall:  (at None)
                  ID: name='__nesc_atomic_end' (at pp.c:16889)
                  ExprList:  (at pp.c:16889)
                    ID: name='__nesc_atomic' (at pp.c:16889)
                Return:  (at pp.c:16891)
                  ID: name='__nesc_temp' (at pp.c:16891)
          Assignment: op='=' (at pp.c:16895)
            StructRef: type='->' (at pp.c:16895)
              ID: name='newEntry' (at pp.c:16895)
              ID: name='count' (at pp.c:16895)
            ID: name='n' (at pp.c:16895)
          Assignment: op='=' (at pp.c:16896)
            StructRef: type='->' (at pp.c:16896)
              ID: name='newEntry' (at pp.c:16896)
              ID: name='next' (at pp.c:16896)
            Cast:  (at None)
              Typename: quals=[] (at None)
                PtrDecl: quals=[] (at pp.c:16896)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['void'] (at None)
              Constant: type='int', value='0' (at pp.c:16896)
          Assignment: op='=' (at pp.c:16897)
            UnaryOp: op='*' (at pp.c:16897)
              ArrayRef:  (at pp.c:16897)
                ID: name='AdcStreamP__bufferQueueEnd' (at pp.c:16897)
                ID: name='c' (at pp.c:16897)
            ID: name='newEntry' (at pp.c:16897)
          Assignment: op='=' (at pp.c:16898)
            ArrayRef:  (at pp.c:16898)
              ID: name='AdcStreamP__bufferQueueEnd' (at pp.c:16898)
              ID: name='c' (at pp.c:16898)
            UnaryOp: op='&' (at pp.c:16898)
              StructRef: type='->' (at pp.c:16898)
                ID: name='newEntry' (at pp.c:16898)
                ID: name='next' (at pp.c:16898)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:16901)
          ExprList:  (at pp.c:16901)
            ID: name='__nesc_atomic' (at pp.c:16901)
      Return:  (at pp.c:16902)
        ID: name='SUCCESS' (at pp.c:16902)
  FuncDef:  (at pp.c:16906)
    Decl: name='AdcStreamP__readStreamFail__postTask', quals=[], storage=['static', 'inline'] (at pp.c:16906)
      FuncDecl: quals=None (at pp.c:16906)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__readStreamFail__postTask', quals=[] (at pp.c:16906)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16906)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16908)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16908)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:16912)
        ID: name='__nesc_result' (at pp.c:16912)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:16912)
          ExprList:  (at pp.c:16912)
            ID: name='AdcStreamP__readStreamFail' (at pp.c:16912)
      Return:  (at pp.c:16916)
        ID: name='__nesc_result' (at pp.c:16916)
  FuncDef:  (at pp.c:16921)
    Decl: name='AdcP__SingleChannel__default__getData', quals=[], storage=['inline', 'static'] (at pp.c:16921)
      FuncDecl: quals=None (at pp.c:16921)
        ParamList:  (at pp.c:16921)
          Decl: name='client', quals=[], storage=[] (at pp.c:16921)
            TypeDecl: declname='client', quals=[] (at pp.c:16921)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__SingleChannel__default__getData', quals=[] (at pp.c:16921)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16922)
      Return:  (at pp.c:16923)
        ID: name='EINVAL' (at pp.c:16923)
  FuncDef:  (at pp.c:16927)
    Decl: name='AdcP__SingleChannel__getData', quals=[], storage=['static', 'inline'] (at pp.c:16927)
      FuncDecl: quals=None (at pp.c:16927)
        ParamList:  (at pp.c:16927)
          Decl: name='arg_0x1025e0910', quals=[], storage=[] (at pp.c:16927)
            TypeDecl: declname='arg_0x1025e0910', quals=[] (at pp.c:16927)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__SingleChannel__getData', quals=[] (at pp.c:16927)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:16927)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:16929)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:16929)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:16933)
        ID: name='arg_0x1025e0910' (at pp.c:16933)
        Compound:  (at pp.c:16933)
          Case:  (at pp.c:16935)
            ID: name='AdcReadClientC__0__CLIENT' (at pp.c:16935)
            Assignment: op='=' (at pp.c:16937)
              ID: name='__nesc_result' (at pp.c:16937)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__SingleChannel__getData' (at pp.c:16937)
                ExprList:  (at pp.c:16937)
                  ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:16937)
          Break:  (at pp.c:16939)
          Case:  (at pp.c:16941)
            ID: name='AdcReadNowClientC__0__CLIENT' (at pp.c:16941)
            Assignment: op='=' (at pp.c:16943)
              ID: name='__nesc_result' (at pp.c:16943)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__SingleChannel__getData' (at pp.c:16943)
                ExprList:  (at pp.c:16943)
                  ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:16943)
          Break:  (at pp.c:16945)
          Default:  (at pp.c:16947)
            Assignment: op='=' (at pp.c:16949)
              ID: name='__nesc_result' (at pp.c:16949)
              FuncCall:  (at None)
                ID: name='AdcP__SingleChannel__default__getData' (at pp.c:16949)
                ExprList:  (at pp.c:16949)
                  ID: name='arg_0x1025e0910' (at pp.c:16949)
          Break:  (at pp.c:16951)
      Return:  (at pp.c:16957)
        ID: name='__nesc_result' (at pp.c:16957)
  FuncDef:  (at pp.c:16962)
    Decl: name='SimpleArbiterP__0__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:16962)
      FuncDecl: quals=None (at pp.c:16962)
        ParamList:  (at pp.c:16962)
          Decl: name='id', quals=[], storage=[] (at pp.c:16962)
            TypeDecl: declname='id', quals=[] (at pp.c:16962)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__Resource__default__granted', quals=[] (at pp.c:16962)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16964)
  FuncDef:  (at pp.c:16968)
    Decl: name='SimpleArbiterP__0__Resource__granted', quals=[], storage=['static', 'inline'] (at pp.c:16968)
      FuncDecl: quals=None (at pp.c:16968)
        ParamList:  (at pp.c:16968)
          Decl: name='arg_0x1027779b0', quals=[], storage=[] (at pp.c:16968)
            TypeDecl: declname='arg_0x1027779b0', quals=[] (at pp.c:16968)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__Resource__granted', quals=[] (at pp.c:16968)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:16968)
      Switch:  (at pp.c:16970)
        ID: name='arg_0x1027779b0' (at pp.c:16970)
        Compound:  (at pp.c:16970)
          Case:  (at pp.c:16972)
            ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:16972)
            FuncCall:  (at None)
              ID: name='Msp430RefVoltArbiterImplP__AdcResource__granted' (at pp.c:16974)
              ExprList:  (at pp.c:16974)
                ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:16974)
          Break:  (at pp.c:16976)
          Case:  (at pp.c:16978)
            ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:16978)
            FuncCall:  (at None)
              ID: name='Msp430RefVoltArbiterImplP__AdcResource__granted' (at pp.c:16980)
              ExprList:  (at pp.c:16980)
                ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:16980)
          Break:  (at pp.c:16982)
          Case:  (at pp.c:16984)
            ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:16984)
            FuncCall:  (at None)
              ID: name='Msp430RefVoltArbiterImplP__AdcResource__granted' (at pp.c:16986)
              ExprList:  (at pp.c:16986)
                ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:16986)
          Break:  (at pp.c:16988)
          Default:  (at pp.c:16990)
            FuncCall:  (at None)
              ID: name='SimpleArbiterP__0__Resource__default__granted' (at pp.c:16992)
              ExprList:  (at pp.c:16992)
                ID: name='arg_0x1027779b0' (at pp.c:16992)
          Break:  (at pp.c:16994)
  FuncDef:  (at pp.c:17001)
    Decl: name='SimpleArbiterP__0__ResourceConfigure__default__configure', quals=[], storage=['inline', 'static'] (at pp.c:17001)
      FuncDecl: quals=None (at pp.c:17001)
        ParamList:  (at pp.c:17001)
          Decl: name='id', quals=[], storage=[] (at pp.c:17001)
            TypeDecl: declname='id', quals=[] (at pp.c:17001)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__ResourceConfigure__default__configure', quals=[] (at pp.c:17001)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17003)
  FuncDef:  (at pp.c:17007)
    Decl: name='SimpleArbiterP__0__ResourceConfigure__configure', quals=[], storage=['static', 'inline'] (at pp.c:17007)
      FuncDecl: quals=None (at pp.c:17007)
        ParamList:  (at pp.c:17007)
          Decl: name='arg_0x102774220', quals=[], storage=[] (at pp.c:17007)
            TypeDecl: declname='arg_0x102774220', quals=[] (at pp.c:17007)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__ResourceConfigure__configure', quals=[] (at pp.c:17007)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17007)
      FuncCall:  (at None)
        ID: name='SimpleArbiterP__0__ResourceConfigure__default__configure' (at pp.c:17009)
        ExprList:  (at pp.c:17009)
          ID: name='arg_0x102774220' (at pp.c:17009)
  FuncDef:  (at pp.c:17014)
    Decl: name='SimpleArbiterP__0__grantedTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:17014)
      FuncDecl: quals=None (at pp.c:17014)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__grantedTask__runTask', quals=[] (at pp.c:17014)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17016)
      Compound:  (at pp.c:17017)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:17017)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:17017)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:17017)
        Compound:  (at pp.c:17019)
          Assignment: op='=' (at pp.c:17020)
            ID: name='SimpleArbiterP__0__resId' (at pp.c:17020)
            ID: name='SimpleArbiterP__0__reqResId' (at pp.c:17020)
          Assignment: op='=' (at pp.c:17021)
            ID: name='SimpleArbiterP__0__state' (at pp.c:17021)
            ID: name='SimpleArbiterP__0__RES_BUSY' (at pp.c:17021)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:17024)
          ExprList:  (at pp.c:17024)
            ID: name='__nesc_atomic' (at pp.c:17024)
      FuncCall:  (at None)
        ID: name='SimpleArbiterP__0__ResourceConfigure__configure' (at pp.c:17025)
        ExprList:  (at pp.c:17025)
          ID: name='SimpleArbiterP__0__resId' (at pp.c:17025)
      FuncCall:  (at None)
        ID: name='SimpleArbiterP__0__Resource__granted' (at pp.c:17026)
        ExprList:  (at pp.c:17026)
          ID: name='SimpleArbiterP__0__resId' (at pp.c:17026)
  FuncDef:  (at pp.c:17030)
    Decl: name='Msp430Adc12ConfAlertC__0__ConfUp__getConfiguration', quals=[], storage=['static', 'inline'] (at pp.c:17030)
      FuncDecl: quals=None (at pp.c:17030)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ConfAlertC__0__ConfUp__getConfiguration', quals=[] (at pp.c:17030)
          IdentifierType: names=['Msp430Adc12ConfAlertC__0__ConfUp__adc_config_t'] (at None)
    Compound:  (at pp.c:17030)
      Decl: name='__nesc_result', quals=['const'], storage=[] (at pp.c:17032)
        PtrDecl: quals=[] (at pp.c:17032)
          TypeDecl: declname='__nesc_result', quals=['const'] (at pp.c:17032)
            Struct: name='__nesc_unnamed4300', packed=False (at pp.c:17032)
      Assignment: op='=' (at pp.c:17036)
        ID: name='__nesc_result' (at pp.c:17036)
        FuncCall:  (at None)
          ID: name='Msp430InternalVoltageP__AdcConfigure__getConfiguration' (at pp.c:17036)
      Return:  (at pp.c:17040)
        ID: name='__nesc_result' (at pp.c:17040)
  FuncDef:  (at pp.c:17045)
    Decl: name='Msp430Adc12ConfAlertC__0__ConfSub__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:17045)
      FuncDecl: quals=None (at pp.c:17045)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        PtrDecl: quals=[] (at pp.c:17045)
          TypeDecl: declname='Msp430Adc12ConfAlertC__0__ConfSub__getConfiguration', quals=['const'] (at pp.c:17045)
            IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    Compound:  (at pp.c:17046)
      Return:  (at pp.c:17047)
        FuncCall:  (at None)
          ID: name='Msp430Adc12ConfAlertC__0__ConfUp__getConfiguration' (at pp.c:17047)
  FuncDef:  (at pp.c:17051)
    Decl: name='Msp430Adc12ConfAlertC__1__ConfUp__getConfiguration', quals=[], storage=['static', 'inline'] (at pp.c:17051)
      FuncDecl: quals=None (at pp.c:17051)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ConfAlertC__1__ConfUp__getConfiguration', quals=[] (at pp.c:17051)
          IdentifierType: names=['Msp430Adc12ConfAlertC__1__ConfUp__adc_config_t'] (at None)
    Compound:  (at pp.c:17051)
      Decl: name='__nesc_result', quals=['const'], storage=[] (at pp.c:17053)
        PtrDecl: quals=[] (at pp.c:17053)
          TypeDecl: declname='__nesc_result', quals=['const'] (at pp.c:17053)
            Struct: name='__nesc_unnamed4300', packed=False (at pp.c:17053)
      Assignment: op='=' (at pp.c:17057)
        ID: name='__nesc_result' (at pp.c:17057)
        FuncCall:  (at None)
          ID: name='Msp430InternalVoltageP__AdcConfigure__getConfiguration' (at pp.c:17057)
      Return:  (at pp.c:17061)
        ID: name='__nesc_result' (at pp.c:17061)
  FuncDef:  (at pp.c:17066)
    Decl: name='Msp430Adc12ConfAlertC__1__ConfSub__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:17066)
      FuncDecl: quals=None (at pp.c:17066)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        PtrDecl: quals=[] (at pp.c:17066)
          TypeDecl: declname='Msp430Adc12ConfAlertC__1__ConfSub__getConfiguration', quals=['const'] (at pp.c:17066)
            IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    Compound:  (at pp.c:17067)
      Return:  (at pp.c:17068)
        FuncCall:  (at None)
          ID: name='Msp430Adc12ConfAlertC__1__ConfUp__getConfiguration' (at pp.c:17068)
  FuncDef:  (at pp.c:17072)
    Decl: name='Msp430Adc12ConfAlertC__2__ConfUp__getConfiguration', quals=[], storage=['static', 'inline'] (at pp.c:17072)
      FuncDecl: quals=None (at pp.c:17072)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ConfAlertC__2__ConfUp__getConfiguration', quals=[] (at pp.c:17072)
          IdentifierType: names=['Msp430Adc12ConfAlertC__2__ConfUp__adc_config_t'] (at None)
    Compound:  (at pp.c:17072)
      Decl: name='__nesc_result', quals=['const'], storage=[] (at pp.c:17074)
        PtrDecl: quals=[] (at pp.c:17074)
          TypeDecl: declname='__nesc_result', quals=['const'] (at pp.c:17074)
            Struct: name='__nesc_unnamed4300', packed=False (at pp.c:17074)
      Assignment: op='=' (at pp.c:17078)
        ID: name='__nesc_result' (at pp.c:17078)
        FuncCall:  (at None)
          ID: name='Msp430InternalVoltageP__AdcConfigure__getConfiguration' (at pp.c:17078)
      Return:  (at pp.c:17082)
        ID: name='__nesc_result' (at pp.c:17082)
  FuncDef:  (at pp.c:17087)
    Decl: name='Msp430Adc12ConfAlertC__2__ConfSub__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:17087)
      FuncDecl: quals=None (at pp.c:17087)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        PtrDecl: quals=[] (at pp.c:17087)
          TypeDecl: declname='Msp430Adc12ConfAlertC__2__ConfSub__getConfiguration', quals=['const'] (at pp.c:17087)
            IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    Compound:  (at pp.c:17088)
      Return:  (at pp.c:17089)
        FuncCall:  (at None)
          ID: name='Msp430Adc12ConfAlertC__2__ConfUp__getConfiguration' (at pp.c:17089)
  FuncDef:  (at pp.c:17094)
    Decl: name='Msp430RefVoltArbiterImplP__Config__default__getConfiguration', quals=['const'], storage=['inline', 'static'] (at pp.c:17094)
      FuncDecl: quals=None (at pp.c:17094)
        ParamList:  (at pp.c:17094)
          Decl: name='client', quals=[], storage=[] (at pp.c:17094)
            TypeDecl: declname='client', quals=[] (at pp.c:17094)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:17093)
          TypeDecl: declname='Msp430RefVoltArbiterImplP__Config__default__getConfiguration', quals=['const'] (at pp.c:17094)
            IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
    Compound:  (at pp.c:17095)
      Return:  (at pp.c:17096)
        UnaryOp: op='&' (at pp.c:17096)
          ID: name='Msp430RefVoltArbiterImplP__defaultConfig' (at pp.c:17096)
  FuncDef:  (at pp.c:17100)
    Decl: name='Msp430RefVoltArbiterImplP__Config__getConfiguration', quals=[], storage=['static', 'inline'] (at pp.c:17100)
      FuncDecl: quals=None (at pp.c:17100)
        ParamList:  (at pp.c:17100)
          Decl: name='arg_0x10286daf8', quals=[], storage=[] (at pp.c:17100)
            TypeDecl: declname='arg_0x10286daf8', quals=[] (at pp.c:17100)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__Config__getConfiguration', quals=[] (at pp.c:17100)
          IdentifierType: names=['Msp430RefVoltArbiterImplP__Config__adc_config_t'] (at None)
    Compound:  (at pp.c:17100)
      Decl: name='__nesc_result', quals=['const'], storage=[] (at pp.c:17102)
        PtrDecl: quals=[] (at pp.c:17102)
          TypeDecl: declname='__nesc_result', quals=['const'] (at pp.c:17102)
            Struct: name='__nesc_unnamed4300', packed=False (at pp.c:17102)
      Switch:  (at pp.c:17106)
        ID: name='arg_0x10286daf8' (at pp.c:17106)
        Compound:  (at pp.c:17106)
          Case:  (at pp.c:17108)
            ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:17108)
            Assignment: op='=' (at pp.c:17110)
              ID: name='__nesc_result' (at pp.c:17110)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ConfAlertC__0__ConfSub__getConfiguration' (at pp.c:17110)
          Break:  (at pp.c:17112)
          Case:  (at pp.c:17114)
            ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:17114)
            Assignment: op='=' (at pp.c:17116)
              ID: name='__nesc_result' (at pp.c:17116)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ConfAlertC__1__ConfSub__getConfiguration' (at pp.c:17116)
          Break:  (at pp.c:17118)
          Case:  (at pp.c:17120)
            ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:17120)
            Assignment: op='=' (at pp.c:17122)
              ID: name='__nesc_result' (at pp.c:17122)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ConfAlertC__2__ConfSub__getConfiguration' (at pp.c:17122)
          Break:  (at pp.c:17124)
          Default:  (at pp.c:17126)
            Assignment: op='=' (at pp.c:17128)
              ID: name='__nesc_result' (at pp.c:17128)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__Config__default__getConfiguration' (at pp.c:17128)
                ExprList:  (at pp.c:17128)
                  ID: name='arg_0x10286daf8' (at pp.c:17128)
          Break:  (at pp.c:17130)
      Return:  (at pp.c:17136)
        ID: name='__nesc_result' (at pp.c:17136)
  FuncDef:  (at pp.c:17141)
    Decl: name='SimpleArbiterP__0__ResourceRequested__default__requested', quals=[], storage=['inline', 'static'] (at pp.c:17141)
      FuncDecl: quals=None (at pp.c:17141)
        ParamList:  (at pp.c:17141)
          Decl: name='id', quals=[], storage=[] (at pp.c:17141)
            TypeDecl: declname='id', quals=[] (at pp.c:17141)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__ResourceRequested__default__requested', quals=[] (at pp.c:17141)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17143)
  FuncDef:  (at pp.c:17147)
    Decl: name='SimpleArbiterP__0__ResourceRequested__requested', quals=[], storage=['static', 'inline'] (at pp.c:17147)
      FuncDecl: quals=None (at pp.c:17147)
        ParamList:  (at pp.c:17147)
          Decl: name='arg_0x102776c80', quals=[], storage=[] (at pp.c:17147)
            TypeDecl: declname='arg_0x102776c80', quals=[] (at pp.c:17147)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__ResourceRequested__requested', quals=[] (at pp.c:17147)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17147)
      FuncCall:  (at None)
        ID: name='SimpleArbiterP__0__ResourceRequested__default__requested' (at pp.c:17149)
        ExprList:  (at pp.c:17149)
          ID: name='arg_0x102776c80' (at pp.c:17149)
  FuncDef:  (at pp.c:17154)
    Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__enqueue', quals=[], storage=['inline', 'static'] (at pp.c:17154)
      FuncDecl: quals=None (at pp.c:17154)
        ParamList:  (at pp.c:17154)
          Decl: name='id', quals=[], storage=[] (at pp.c:17154)
            TypeDecl: declname='id', quals=[] (at pp.c:17154)
              IdentifierType: names=['resource_client_id_t'] (at None)
        TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__enqueue', quals=[] (at pp.c:17154)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17156)
      Compound:  (at pp.c:17159)
        If:  (at pp.c:17160)
          UnaryOp: op='!' (at None)
            FuncCall:  (at None)
              ID: name='RoundRobinResourceQueueC__0__RoundRobinQueue__isEnqueued' (at pp.c:17160)
              ExprList:  (at pp.c:17160)
                ID: name='id' (at pp.c:17160)
          Compound:  (at pp.c:17160)
            Assignment: op='|=' (at pp.c:17161)
              ArrayRef:  (at pp.c:17161)
                ID: name='RoundRobinResourceQueueC__0__resQ' (at pp.c:17161)
                BinaryOp: op='/' (at pp.c:17161)
                  ID: name='id' (at pp.c:17161)
                  Constant: type='int', value='8' (at pp.c:17161)
              BinaryOp: op='<<' (at pp.c:17161)
                Constant: type='int', value='1' (at pp.c:17161)
                BinaryOp: op='%' (at pp.c:17161)
                  ID: name='id' (at pp.c:17161)
                  Constant: type='int', value='8' (at pp.c:17161)
            Compound:  (at pp.c:17162)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:17163)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:17163)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='SUCCESS' (at pp.c:17165)
              Return:  (at pp.c:17168)
                ID: name='__nesc_temp' (at pp.c:17168)
        Compound:  (at pp.c:17172)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:17173)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:17173)
              IdentifierType: names=['char', 'unsigned'] (at None)
            ID: name='EBUSY' (at pp.c:17175)
          Return:  (at pp.c:17178)
            ID: name='__nesc_temp' (at pp.c:17178)
  FuncDef:  (at pp.c:17184)
    Decl: name='SimpleArbiterP__0__Queue__enqueue', quals=[], storage=['static', 'inline'] (at pp.c:17184)
      FuncDecl: quals=None (at pp.c:17184)
        ParamList:  (at pp.c:17184)
          Decl: name='id', quals=[], storage=[] (at pp.c:17184)
            TypeDecl: declname='id', quals=[] (at pp.c:17184)
              IdentifierType: names=['resource_client_id_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__Queue__enqueue', quals=[] (at pp.c:17184)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17184)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17186)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17186)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17190)
        ID: name='__nesc_result' (at pp.c:17190)
        FuncCall:  (at None)
          ID: name='RoundRobinResourceQueueC__0__RoundRobinQueue__enqueue' (at pp.c:17190)
          ExprList:  (at pp.c:17190)
            ID: name='id' (at pp.c:17190)
      Return:  (at pp.c:17194)
        ID: name='__nesc_result' (at pp.c:17194)
  FuncDef:  (at pp.c:17199)
    Decl: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__start', quals=[], storage=['inline', 'static'] (at pp.c:17199)
      FuncDecl: quals=None (at pp.c:17199)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_1_5V__start', quals=[] (at pp.c:17199)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17201)
      Return:  (at pp.c:17202)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltGeneratorP__start' (at pp.c:17202)
          ExprList:  (at pp.c:17202)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_STABLE' (at pp.c:17202)
  FuncDef:  (at pp.c:17206)
    Decl: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__start', quals=[], storage=['static', 'inline'] (at pp.c:17206)
      FuncDecl: quals=None (at pp.c:17206)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_1_5V__start', quals=[] (at pp.c:17206)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17206)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17208)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17208)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17212)
        ID: name='__nesc_result' (at pp.c:17212)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__start' (at pp.c:17212)
      Return:  (at pp.c:17216)
        ID: name='__nesc_result' (at pp.c:17216)
  FuncDef:  (at pp.c:17221)
    Decl: name='VirtualizeTimerC__0__Timer__isRunning', quals=[], storage=['inline', 'static'] (at pp.c:17221)
      FuncDecl: quals=None (at pp.c:17221)
        ParamList:  (at pp.c:17221)
          Decl: name='num', quals=[], storage=[] (at pp.c:17221)
            TypeDecl: declname='num', quals=[] (at pp.c:17221)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__Timer__isRunning', quals=[] (at pp.c:17221)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:17222)
      Return:  (at pp.c:17223)
        StructRef: type='.' (at pp.c:17223)
          ArrayRef:  (at pp.c:17223)
            ID: name='VirtualizeTimerC__0__m_timers' (at pp.c:17223)
            ID: name='num' (at pp.c:17223)
          ID: name='isrunning' (at pp.c:17223)
  FuncDef:  (at pp.c:17227)
    Decl: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__isRunning', quals=[], storage=['static', 'inline'] (at pp.c:17227)
      FuncDecl: quals=None (at pp.c:17227)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__isRunning', quals=[] (at pp.c:17227)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:17227)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17229)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17229)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17233)
        ID: name='__nesc_result' (at pp.c:17233)
        FuncCall:  (at None)
          ID: name='VirtualizeTimerC__0__Timer__isRunning' (at pp.c:17233)
          ExprList:  (at pp.c:17233)
            Constant: type='int', value='4U' (at pp.c:17233)
      Return:  (at pp.c:17237)
        ID: name='__nesc_result' (at pp.c:17237)
  FuncDef:  (at pp.c:17242)
    Decl: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__stop', quals=[], storage=['static', 'inline'] (at pp.c:17242)
      FuncDecl: quals=None (at pp.c:17242)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__stop', quals=[] (at pp.c:17242)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17242)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__Timer__stop' (at pp.c:17244)
        ExprList:  (at pp.c:17244)
          Constant: type='int', value='4U' (at pp.c:17244)
  FuncDef:  (at pp.c:17248)
    Decl: name='Msp430RefVoltGeneratorP__SwitchOffTimer__stop', quals=[], storage=['static', 'inline'] (at pp.c:17248)
      FuncDecl: quals=None (at pp.c:17248)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffTimer__stop', quals=[] (at pp.c:17248)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17248)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__Timer__stop' (at pp.c:17250)
        ExprList:  (at pp.c:17250)
          Constant: type='int', value='3U' (at pp.c:17250)
  FuncDef:  (at pp.c:17255)
    Decl: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__start', quals=[], storage=['inline', 'static'] (at pp.c:17255)
      FuncDecl: quals=None (at pp.c:17255)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_2_5V__start', quals=[] (at pp.c:17255)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17257)
      Return:  (at pp.c:17258)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltGeneratorP__start' (at pp.c:17258)
          ExprList:  (at pp.c:17258)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_STABLE' (at pp.c:17258)
  FuncDef:  (at pp.c:17262)
    Decl: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__start', quals=[], storage=['static', 'inline'] (at pp.c:17262)
      FuncDecl: quals=None (at pp.c:17262)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_2_5V__start', quals=[] (at pp.c:17262)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17262)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17264)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17264)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17268)
        ID: name='__nesc_result' (at pp.c:17268)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__start' (at pp.c:17268)
      Return:  (at pp.c:17272)
        ID: name='__nesc_result' (at pp.c:17272)
  FuncDef:  (at pp.c:17277)
    Decl: name='AdcP__Read__default__readDone', quals=[], storage=['inline', 'static'] (at pp.c:17277)
      FuncDecl: quals=None (at pp.c:17277)
        ParamList:  (at pp.c:17277)
          Decl: name='client', quals=[], storage=[] (at pp.c:17277)
            TypeDecl: declname='client', quals=[] (at pp.c:17277)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:17277)
            TypeDecl: declname='result', quals=[] (at pp.c:17277)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='val', quals=[], storage=[] (at pp.c:17277)
            TypeDecl: declname='val', quals=[] (at pp.c:17277)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='AdcP__Read__default__readDone', quals=[] (at pp.c:17277)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17279)
  FuncDef:  (at pp.c:17283)
    Decl: name='AdcP__Read__readDone', quals=[], storage=['static', 'inline'] (at pp.c:17283)
      FuncDecl: quals=None (at pp.c:17283)
        ParamList:  (at pp.c:17283)
          Decl: name='arg_0x102600db0', quals=[], storage=[] (at pp.c:17283)
            TypeDecl: declname='arg_0x102600db0', quals=[] (at pp.c:17283)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:17283)
            TypeDecl: declname='result', quals=[] (at pp.c:17283)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='val', quals=[], storage=[] (at pp.c:17283)
            TypeDecl: declname='val', quals=[] (at pp.c:17283)
              IdentifierType: names=['AdcP__Read__val_t'] (at None)
        TypeDecl: declname='AdcP__Read__readDone', quals=[] (at pp.c:17283)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17283)
      Switch:  (at pp.c:17285)
        ID: name='arg_0x102600db0' (at pp.c:17285)
        Compound:  (at pp.c:17285)
          Case:  (at pp.c:17287)
            ID: name='AdcReadClientC__0__CLIENT' (at pp.c:17287)
            FuncCall:  (at None)
              ID: name='OscilloscopeC__Read__readDone' (at pp.c:17289)
              ExprList:  (at pp.c:17289)
                ID: name='result' (at pp.c:17289)
                ID: name='val' (at pp.c:17289)
          Break:  (at pp.c:17291)
          Default:  (at pp.c:17293)
            FuncCall:  (at None)
              ID: name='AdcP__Read__default__readDone' (at pp.c:17295)
              ExprList:  (at pp.c:17295)
                ID: name='arg_0x102600db0' (at pp.c:17295)
                ID: name='result' (at pp.c:17295)
                ID: name='val' (at pp.c:17295)
          Break:  (at pp.c:17297)
  FuncDef:  (at pp.c:17304)
    Decl: name='AdcP__ResourceRead__default__release', quals=[], storage=['inline', 'static'] (at pp.c:17304)
      FuncDecl: quals=None (at pp.c:17304)
        ParamList:  (at pp.c:17304)
          Decl: name='client', quals=[], storage=[] (at pp.c:17304)
            TypeDecl: declname='client', quals=[] (at pp.c:17304)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__ResourceRead__default__release', quals=[] (at pp.c:17304)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17306)
      Return:  (at pp.c:17308)
        ID: name='FAIL' (at pp.c:17308)
  FuncDef:  (at pp.c:17312)
    Decl: name='AdcP__ResourceRead__release', quals=[], storage=['static', 'inline'] (at pp.c:17312)
      FuncDecl: quals=None (at pp.c:17312)
        ParamList:  (at pp.c:17312)
          Decl: name='arg_0x1025f6aa0', quals=[], storage=[] (at pp.c:17312)
            TypeDecl: declname='arg_0x1025f6aa0', quals=[] (at pp.c:17312)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__ResourceRead__release', quals=[] (at pp.c:17312)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17312)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17314)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17314)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:17318)
        ID: name='arg_0x1025f6aa0' (at pp.c:17318)
        Compound:  (at pp.c:17318)
          Case:  (at pp.c:17320)
            ID: name='AdcReadClientC__0__CLIENT' (at pp.c:17320)
            Assignment: op='=' (at pp.c:17322)
              ID: name='__nesc_result' (at pp.c:17322)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__ClientResource__release' (at pp.c:17322)
                ExprList:  (at pp.c:17322)
                  ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:17322)
          Break:  (at pp.c:17324)
          Default:  (at pp.c:17326)
            Assignment: op='=' (at pp.c:17328)
              ID: name='__nesc_result' (at pp.c:17328)
              FuncCall:  (at None)
                ID: name='AdcP__ResourceRead__default__release' (at pp.c:17328)
                ExprList:  (at pp.c:17328)
                  ID: name='arg_0x1025f6aa0' (at pp.c:17328)
          Break:  (at pp.c:17330)
      Return:  (at pp.c:17336)
        ID: name='__nesc_result' (at pp.c:17336)
  FuncDef:  (at pp.c:17341)
    Decl: name='AdcP__readDone__runTask', quals=[], storage=['inline', 'static'] (at pp.c:17341)
      FuncDecl: quals=None (at pp.c:17341)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcP__readDone__runTask', quals=[] (at pp.c:17341)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17342)
      FuncCall:  (at None)
        ID: name='AdcP__ResourceRead__release' (at pp.c:17343)
        ExprList:  (at pp.c:17343)
          ID: name='AdcP__owner' (at pp.c:17343)
      FuncCall:  (at None)
        ID: name='AdcP__Read__readDone' (at pp.c:17344)
        ExprList:  (at pp.c:17344)
          ID: name='AdcP__owner' (at pp.c:17344)
          ID: name='SUCCESS' (at pp.c:17344)
          ID: name='AdcP__value' (at pp.c:17344)
  FuncDef:  (at pp.c:17348)
    Decl: name='CC2420TinyosNetworkP__Resource__release', quals=[], storage=['inline', 'static'] (at pp.c:17348)
      FuncDecl: quals=None (at pp.c:17348)
        ParamList:  (at pp.c:17348)
          Decl: name='id', quals=[], storage=[] (at pp.c:17348)
            TypeDecl: declname='id', quals=[] (at pp.c:17348)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__Resource__release', quals=[] (at pp.c:17348)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17350)
      If:  (at pp.c:17351)
        BinaryOp: op='>' (at pp.c:17351)
          ID: name='CC2420TinyosNetworkP__TINYOS_N_NETWORKS' (at pp.c:17351)
          Constant: type='int', value='1' (at pp.c:17351)
        Compound:  (at pp.c:17351)
          FuncCall:  (at None)
            ID: name='CC2420TinyosNetworkP__grantTask__postTask' (at pp.c:17352)
      Assignment: op='=' (at pp.c:17354)
        ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:17354)
        ID: name='CC2420TinyosNetworkP__OWNER_NONE' (at pp.c:17354)
      Return:  (at pp.c:17355)
        ID: name='SUCCESS' (at pp.c:17355)
  FuncDef:  (at pp.c:17359)
    Decl: name='CC2420TinyosNetworkP__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:17359)
      FuncDecl: quals=None (at pp.c:17359)
        ParamList:  (at pp.c:17359)
          Decl: name='client', quals=[], storage=[] (at pp.c:17359)
            TypeDecl: declname='client', quals=[] (at pp.c:17359)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__Resource__default__granted', quals=[] (at pp.c:17359)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17361)
      FuncCall:  (at None)
        ID: name='CC2420TinyosNetworkP__Resource__release' (at pp.c:17362)
        ExprList:  (at pp.c:17362)
          ID: name='client' (at pp.c:17362)
  FuncDef:  (at pp.c:17366)
    Decl: name='CC2420TinyosNetworkP__Resource__granted', quals=[], storage=['static', 'inline'] (at pp.c:17366)
      FuncDecl: quals=None (at pp.c:17366)
        ParamList:  (at pp.c:17366)
          Decl: name='arg_0x102460060', quals=[], storage=[] (at pp.c:17366)
            TypeDecl: declname='arg_0x102460060', quals=[] (at pp.c:17366)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__Resource__granted', quals=[] (at pp.c:17366)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17366)
      Switch:  (at pp.c:17368)
        ID: name='arg_0x102460060' (at pp.c:17368)
        Compound:  (at pp.c:17368)
          Case:  (at pp.c:17370)
            ID: name='CC2420ActiveMessageC__CC2420_AM_SEND_ID' (at pp.c:17370)
            FuncCall:  (at None)
              ID: name='CC2420ActiveMessageP__RadioResource__granted' (at pp.c:17372)
          Break:  (at pp.c:17374)
          Default:  (at pp.c:17376)
            FuncCall:  (at None)
              ID: name='CC2420TinyosNetworkP__Resource__default__granted' (at pp.c:17378)
              ExprList:  (at pp.c:17378)
                ID: name='arg_0x102460060' (at pp.c:17378)
          Break:  (at pp.c:17380)
  FuncDef:  (at pp.c:17387)
    Decl: name='FcfsResourceQueueC__0__FcfsQueue__dequeue', quals=[], storage=['inline', 'static'] (at pp.c:17387)
      FuncDecl: quals=None (at pp.c:17387)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__dequeue', quals=[] (at pp.c:17387)
          IdentifierType: names=['resource_client_id_t'] (at None)
    Compound:  (at pp.c:17389)
      Compound:  (at pp.c:17390)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:17390)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:17390)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:17390)
        Compound:  (at pp.c:17392)
          If:  (at pp.c:17393)
            BinaryOp: op='!=' (at pp.c:17393)
              ID: name='FcfsResourceQueueC__0__qHead' (at pp.c:17393)
              ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:17393)
            Compound:  (at pp.c:17393)
              Decl: name='id', quals=[], storage=[] (at pp.c:17394)
                TypeDecl: declname='id', quals=[] (at pp.c:17394)
                  IdentifierType: names=['uint8_t'] (at None)
                ID: name='FcfsResourceQueueC__0__qHead' (at pp.c:17394)
              Assignment: op='=' (at pp.c:17397)
                ID: name='FcfsResourceQueueC__0__qHead' (at pp.c:17397)
                ArrayRef:  (at pp.c:17397)
                  ID: name='FcfsResourceQueueC__0__resQ' (at pp.c:17397)
                  ID: name='FcfsResourceQueueC__0__qHead' (at pp.c:17397)
              If:  (at pp.c:17398)
                BinaryOp: op='==' (at pp.c:17398)
                  ID: name='FcfsResourceQueueC__0__qHead' (at pp.c:17398)
                  ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:17398)
                Compound:  (at pp.c:17398)
                  Assignment: op='=' (at pp.c:17399)
                    ID: name='FcfsResourceQueueC__0__qTail' (at pp.c:17399)
                    ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:17399)
              Assignment: op='=' (at pp.c:17402)
                ArrayRef:  (at pp.c:17402)
                  ID: name='FcfsResourceQueueC__0__resQ' (at pp.c:17402)
                  ID: name='id' (at pp.c:17402)
                ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:17402)
              Compound:  (at pp.c:17403)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:17404)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:17404)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='id' (at pp.c:17406)
                Compound:  (at pp.c:17408)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:17410)
                    ExprList:  (at pp.c:17410)
                      ID: name='__nesc_atomic' (at pp.c:17410)
                  Return:  (at pp.c:17412)
                    ID: name='__nesc_temp' (at pp.c:17412)
          Compound:  (at pp.c:17417)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:17418)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:17418)
                IdentifierType: names=['char', 'unsigned'] (at None)
              ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:17420)
            Compound:  (at pp.c:17422)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_end' (at pp.c:17424)
                ExprList:  (at pp.c:17424)
                  ID: name='__nesc_atomic' (at pp.c:17424)
              Return:  (at pp.c:17426)
                ID: name='__nesc_temp' (at pp.c:17426)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:17431)
          ExprList:  (at pp.c:17431)
            ID: name='__nesc_atomic' (at pp.c:17431)
  FuncDef:  (at pp.c:17435)
    Decl: name='CC2420TinyosNetworkP__Queue__dequeue', quals=[], storage=['static', 'inline'] (at pp.c:17435)
      FuncDecl: quals=None (at pp.c:17435)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__Queue__dequeue', quals=[] (at pp.c:17435)
          IdentifierType: names=['resource_client_id_t'] (at None)
    Compound:  (at pp.c:17435)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17437)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17437)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17441)
        ID: name='__nesc_result' (at pp.c:17441)
        FuncCall:  (at None)
          ID: name='FcfsResourceQueueC__0__FcfsQueue__dequeue' (at pp.c:17441)
      Return:  (at pp.c:17445)
        ID: name='__nesc_result' (at pp.c:17445)
  FuncDef:  (at pp.c:17450)
    Decl: name='CC2420TinyosNetworkP__grantTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:17450)
      FuncDecl: quals=None (at pp.c:17450)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__grantTask__runTask', quals=[] (at pp.c:17450)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17452)
      If:  (at pp.c:17455)
        BinaryOp: op='>' (at pp.c:17455)
          ID: name='CC2420TinyosNetworkP__TINYOS_N_NETWORKS' (at pp.c:17455)
          Constant: type='int', value='1' (at pp.c:17455)
        Compound:  (at pp.c:17455)
          If:  (at pp.c:17456)
            BinaryOp: op='&&' (at pp.c:17456)
              BinaryOp: op='==' (at pp.c:17456)
                ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:17456)
                ID: name='CC2420TinyosNetworkP__OWNER_NONE' (at pp.c:17456)
              UnaryOp: op='!' (at None)
                FuncCall:  (at None)
                  ID: name='CC2420TinyosNetworkP__Queue__isEmpty' (at pp.c:17456)
            Compound:  (at pp.c:17456)
              Assignment: op='=' (at pp.c:17457)
                ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:17457)
                FuncCall:  (at None)
                  ID: name='CC2420TinyosNetworkP__Queue__dequeue' (at pp.c:17457)
              If:  (at pp.c:17459)
                BinaryOp: op='!=' (at pp.c:17459)
                  ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:17459)
                  ID: name='CC2420TinyosNetworkP__OWNER_NONE' (at pp.c:17459)
                Compound:  (at pp.c:17459)
                  FuncCall:  (at None)
                    ID: name='CC2420TinyosNetworkP__Resource__granted' (at pp.c:17460)
                    ExprList:  (at pp.c:17460)
                      ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:17460)
        Compound:  (at pp.c:17466)
          If:  (at pp.c:17467)
            BinaryOp: op='!=' (at pp.c:17467)
              ID: name='CC2420TinyosNetworkP__next_owner' (at pp.c:17467)
              ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:17467)
            Compound:  (at pp.c:17467)
              Assignment: op='=' (at pp.c:17468)
                ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:17468)
                ID: name='CC2420TinyosNetworkP__next_owner' (at pp.c:17468)
              FuncCall:  (at None)
                ID: name='CC2420TinyosNetworkP__Resource__granted' (at pp.c:17469)
                ExprList:  (at pp.c:17469)
                  ID: name='CC2420TinyosNetworkP__resource_owner' (at pp.c:17469)
  FuncDef:  (at pp.c:17475)
    Decl: name='AlarmToTimerC__0__Alarm__startAt', quals=[], storage=['static', 'inline'] (at pp.c:17475)
      FuncDecl: quals=None (at pp.c:17475)
        ParamList:  (at pp.c:17475)
          Decl: name='t0', quals=[], storage=[] (at pp.c:17475)
            TypeDecl: declname='t0', quals=[] (at pp.c:17475)
              IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:17475)
            TypeDecl: declname='dt', quals=[] (at pp.c:17475)
              IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Alarm__startAt', quals=[] (at pp.c:17475)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17475)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__1__Alarm__startAt' (at pp.c:17477)
        ExprList:  (at pp.c:17477)
          ID: name='t0' (at pp.c:17477)
          ID: name='dt' (at pp.c:17477)
  FuncDef:  (at pp.c:17482)
    Decl: name='AlarmToTimerC__0__start', quals=[], storage=['inline', 'static'] (at pp.c:17482)
      FuncDecl: quals=None (at pp.c:17482)
        ParamList:  (at pp.c:17482)
          Decl: name='t0', quals=[], storage=[] (at pp.c:17482)
            TypeDecl: declname='t0', quals=[] (at pp.c:17482)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:17482)
            TypeDecl: declname='dt', quals=[] (at pp.c:17482)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='oneshot', quals=[], storage=[] (at pp.c:17482)
            TypeDecl: declname='oneshot', quals=[] (at pp.c:17482)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__start', quals=[] (at pp.c:17482)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17483)
      Assignment: op='=' (at pp.c:17484)
        ID: name='AlarmToTimerC__0__m_dt' (at pp.c:17484)
        ID: name='dt' (at pp.c:17484)
      Assignment: op='=' (at pp.c:17485)
        ID: name='AlarmToTimerC__0__m_oneshot' (at pp.c:17485)
        ID: name='oneshot' (at pp.c:17485)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Alarm__startAt' (at pp.c:17486)
        ExprList:  (at pp.c:17486)
          ID: name='t0' (at pp.c:17486)
          ID: name='dt' (at pp.c:17486)
  FuncDef:  (at pp.c:17490)
    Decl: name='AlarmToTimerC__0__Timer__startOneShotAt', quals=[], storage=['inline', 'static'] (at pp.c:17490)
      FuncDecl: quals=None (at pp.c:17490)
        ParamList:  (at pp.c:17490)
          Decl: name='t0', quals=[], storage=[] (at pp.c:17490)
            TypeDecl: declname='t0', quals=[] (at pp.c:17490)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:17490)
            TypeDecl: declname='dt', quals=[] (at pp.c:17490)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Timer__startOneShotAt', quals=[] (at pp.c:17490)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17491)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__start' (at pp.c:17493)
        ExprList:  (at pp.c:17493)
          ID: name='t0' (at pp.c:17493)
          ID: name='dt' (at pp.c:17493)
          ID: name='TRUE' (at pp.c:17493)
  FuncDef:  (at pp.c:17497)
    Decl: name='VirtualizeTimerC__0__TimerFrom__startOneShotAt', quals=[], storage=['static', 'inline'] (at pp.c:17497)
      FuncDecl: quals=None (at pp.c:17497)
        ParamList:  (at pp.c:17497)
          Decl: name='t0', quals=[], storage=[] (at pp.c:17497)
            TypeDecl: declname='t0', quals=[] (at pp.c:17497)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:17497)
            TypeDecl: declname='dt', quals=[] (at pp.c:17497)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__startOneShotAt', quals=[] (at pp.c:17497)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17497)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Timer__startOneShotAt' (at pp.c:17499)
        ExprList:  (at pp.c:17499)
          ID: name='t0' (at pp.c:17499)
          ID: name='dt' (at pp.c:17499)
  FuncDef:  (at pp.c:17504)
    Decl: name='Msp430AlarmC__1__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:17504)
      FuncDecl: quals=None (at pp.c:17504)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Alarm__stop', quals=[] (at pp.c:17504)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17505)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Msp430TimerControl__disableEvents' (at pp.c:17506)
  FuncDef:  (at pp.c:17510)
    Decl: name='TransformAlarmC__1__AlarmFrom__stop', quals=[], storage=['static', 'inline'] (at pp.c:17510)
      FuncDecl: quals=None (at pp.c:17510)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__AlarmFrom__stop', quals=[] (at pp.c:17510)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17510)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Alarm__stop' (at pp.c:17512)
  FuncDef:  (at pp.c:17517)
    Decl: name='TransformAlarmC__1__Alarm__stop', quals=[], storage=['inline', 'static'] (at pp.c:17517)
      FuncDecl: quals=None (at pp.c:17517)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__Alarm__stop', quals=[] (at pp.c:17517)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17518)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__1__AlarmFrom__stop' (at pp.c:17519)
  FuncDef:  (at pp.c:17523)
    Decl: name='AlarmToTimerC__0__Alarm__stop', quals=[], storage=['static', 'inline'] (at pp.c:17523)
      FuncDecl: quals=None (at pp.c:17523)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Alarm__stop', quals=[] (at pp.c:17523)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17523)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__1__Alarm__stop' (at pp.c:17525)
  FuncDef:  (at pp.c:17530)
    Decl: name='AlarmToTimerC__0__Timer__stop', quals=[], storage=['inline', 'static'] (at pp.c:17530)
      FuncDecl: quals=None (at pp.c:17530)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Timer__stop', quals=[] (at pp.c:17530)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17531)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Alarm__stop' (at pp.c:17533)
  FuncDef:  (at pp.c:17537)
    Decl: name='VirtualizeTimerC__0__TimerFrom__stop', quals=[], storage=['static', 'inline'] (at pp.c:17537)
      FuncDecl: quals=None (at pp.c:17537)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__stop', quals=[] (at pp.c:17537)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17537)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Timer__stop' (at pp.c:17539)
  FuncDef:  (at pp.c:17544)
    Decl: name='TransformAlarmC__1__Counter__get', quals=[], storage=['static', 'inline'] (at pp.c:17544)
      FuncDecl: quals=None (at pp.c:17544)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__Counter__get', quals=[] (at pp.c:17544)
          IdentifierType: names=['TransformAlarmC__1__Counter__size_type'] (at None)
    Compound:  (at pp.c:17544)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17546)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17546)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17550)
        ID: name='__nesc_result' (at pp.c:17550)
        FuncCall:  (at None)
          ID: name='TransformCounterC__1__Counter__get' (at pp.c:17550)
      Return:  (at pp.c:17554)
        ID: name='__nesc_result' (at pp.c:17554)
  FuncDef:  (at pp.c:17559)
    Decl: name='TransformAlarmC__1__Alarm__getNow', quals=[], storage=['inline', 'static'] (at pp.c:17559)
      FuncDecl: quals=None (at pp.c:17559)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__Alarm__getNow', quals=[] (at pp.c:17559)
          IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
    Compound:  (at pp.c:17560)
      Return:  (at pp.c:17561)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__1__Counter__get' (at pp.c:17561)
  FuncDef:  (at pp.c:17565)
    Decl: name='AlarmToTimerC__0__Alarm__getNow', quals=[], storage=['static', 'inline'] (at pp.c:17565)
      FuncDecl: quals=None (at pp.c:17565)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Alarm__getNow', quals=[] (at pp.c:17565)
          IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
    Compound:  (at pp.c:17565)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17567)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17567)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17571)
        ID: name='__nesc_result' (at pp.c:17571)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__1__Alarm__getNow' (at pp.c:17571)
      Return:  (at pp.c:17575)
        ID: name='__nesc_result' (at pp.c:17575)
  FuncDef:  (at pp.c:17580)
    Decl: name='AlarmToTimerC__0__Timer__getNow', quals=[], storage=['inline', 'static'] (at pp.c:17580)
      FuncDecl: quals=None (at pp.c:17580)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Timer__getNow', quals=[] (at pp.c:17580)
          IdentifierType: names=['uint32_t'] (at None)
    Compound:  (at pp.c:17581)
      Return:  (at pp.c:17583)
        FuncCall:  (at None)
          ID: name='AlarmToTimerC__0__Alarm__getNow' (at pp.c:17583)
  FuncDef:  (at pp.c:17587)
    Decl: name='VirtualizeTimerC__0__TimerFrom__getNow', quals=[], storage=['static', 'inline'] (at pp.c:17587)
      FuncDecl: quals=None (at pp.c:17587)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__getNow', quals=[] (at pp.c:17587)
          IdentifierType: names=['uint32_t'] (at None)
    Compound:  (at pp.c:17587)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17589)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17589)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17593)
        ID: name='__nesc_result' (at pp.c:17593)
        FuncCall:  (at None)
          ID: name='AlarmToTimerC__0__Timer__getNow' (at pp.c:17593)
      Return:  (at pp.c:17597)
        ID: name='__nesc_result' (at pp.c:17597)
  FuncDef:  (at pp.c:17602)
    Decl: name='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[], storage=['inline', 'static'] (at pp.c:17602)
      FuncDecl: quals=None (at pp.c:17602)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__updateFromTimer__runTask', quals=[] (at pp.c:17602)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17603)
      Decl: name='now', quals=[], storage=[] (at pp.c:17608)
        TypeDecl: declname='now', quals=[] (at pp.c:17608)
          IdentifierType: names=['uint32_t'] (at None)
        FuncCall:  (at None)
          ID: name='VirtualizeTimerC__0__TimerFrom__getNow' (at pp.c:17608)
      Decl: name='min_remaining', quals=[], storage=[] (at pp.c:17609)
        TypeDecl: declname='min_remaining', quals=[] (at pp.c:17609)
          IdentifierType: names=['int32_t'] (at None)
        BinaryOp: op='-' (at pp.c:17609)
          BinaryOp: op='<<' (at pp.c:17609)
            Constant: type='int', value='1UL' (at pp.c:17609)
            Constant: type='int', value='31' (at pp.c:17609)
          Constant: type='int', value='1' (at pp.c:17609)
      Decl: name='min_remaining_isset', quals=[], storage=[] (at pp.c:17610)
        TypeDecl: declname='min_remaining_isset', quals=[] (at pp.c:17610)
          IdentifierType: names=['bool'] (at None)
        ID: name='FALSE' (at pp.c:17610)
      Decl: name='num', quals=[], storage=[] (at pp.c:17611)
        TypeDecl: declname='num', quals=[] (at pp.c:17611)
          IdentifierType: names=['uint8_t'] (at None)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__TimerFrom__stop' (at pp.c:17613)
      For:  (at pp.c:17615)
        Assignment: op='=' (at pp.c:17615)
          ID: name='num' (at pp.c:17615)
          Constant: type='int', value='0' (at pp.c:17615)
        BinaryOp: op='<' (at pp.c:17615)
          ID: name='num' (at pp.c:17615)
          ID: name='VirtualizeTimerC__0__NUM_TIMERS' (at pp.c:17615)
        UnaryOp: op='p++' (at pp.c:17615)
          ID: name='num' (at pp.c:17615)
        Compound:  (at pp.c:17616)
          Decl: name='timer', quals=[], storage=[] (at pp.c:17617)
            PtrDecl: quals=[] (at pp.c:17617)
              TypeDecl: declname='timer', quals=[] (at pp.c:17617)
                IdentifierType: names=['VirtualizeTimerC__0__Timer_t'] (at None)
            UnaryOp: op='&' (at pp.c:17617)
              ArrayRef:  (at pp.c:17617)
                ID: name='VirtualizeTimerC__0__m_timers' (at pp.c:17617)
                ID: name='num' (at pp.c:17617)
          If:  (at pp.c:17619)
            StructRef: type='->' (at pp.c:17619)
              ID: name='timer' (at pp.c:17619)
              ID: name='isrunning' (at pp.c:17619)
            Compound:  (at pp.c:17620)
              Decl: name='elapsed', quals=[], storage=[] (at pp.c:17621)
                TypeDecl: declname='elapsed', quals=[] (at pp.c:17621)
                  IdentifierType: names=['uint32_t'] (at None)
                BinaryOp: op='-' (at pp.c:17621)
                  ID: name='now' (at pp.c:17621)
                  StructRef: type='->' (at pp.c:17621)
                    ID: name='timer' (at pp.c:17621)
                    ID: name='t0' (at pp.c:17621)
              Decl: name='remaining', quals=[], storage=[] (at pp.c:17622)
                TypeDecl: declname='remaining', quals=[] (at pp.c:17622)
                  IdentifierType: names=['int32_t'] (at None)
                BinaryOp: op='-' (at pp.c:17622)
                  StructRef: type='->' (at pp.c:17622)
                    ID: name='timer' (at pp.c:17622)
                    ID: name='dt' (at pp.c:17622)
                  ID: name='elapsed' (at pp.c:17622)
              If:  (at pp.c:17624)
                BinaryOp: op='<' (at pp.c:17624)
                  ID: name='remaining' (at pp.c:17624)
                  ID: name='min_remaining' (at pp.c:17624)
                Compound:  (at pp.c:17625)
                  Assignment: op='=' (at pp.c:17626)
                    ID: name='min_remaining' (at pp.c:17626)
                    ID: name='remaining' (at pp.c:17626)
                  Assignment: op='=' (at pp.c:17627)
                    ID: name='min_remaining_isset' (at pp.c:17627)
                    ID: name='TRUE' (at pp.c:17627)
      If:  (at pp.c:17632)
        ID: name='min_remaining_isset' (at pp.c:17632)
        Compound:  (at pp.c:17633)
          If:  (at pp.c:17634)
            BinaryOp: op='<=' (at pp.c:17634)
              ID: name='min_remaining' (at pp.c:17634)
              Constant: type='int', value='0' (at pp.c:17634)
            Compound:  (at pp.c:17634)
              FuncCall:  (at None)
                ID: name='VirtualizeTimerC__0__fireTimers' (at pp.c:17635)
                ExprList:  (at pp.c:17635)
                  ID: name='now' (at pp.c:17635)
            Compound:  (at pp.c:17637)
              FuncCall:  (at None)
                ID: name='VirtualizeTimerC__0__TimerFrom__startOneShotAt' (at pp.c:17639)
                ExprList:  (at pp.c:17639)
                  ID: name='now' (at pp.c:17639)
                  ID: name='min_remaining' (at pp.c:17639)
  FuncDef:  (at pp.c:17645)
    Decl: name='__nesc_hton_uint16', quals=[], storage=['__inline', 'static'] (at pp.c:17645)
      FuncDecl: quals=None (at pp.c:17645)
        ParamList:  (at pp.c:17645)
          Decl: name='target', quals=[], storage=[] (at pp.c:17645)
            PtrDecl: quals=[] (at pp.c:17645)
              TypeDecl: declname='target', quals=[] (at pp.c:17645)
                IdentifierType: names=['void'] (at None)
          Decl: name='value', quals=[], storage=[] (at pp.c:17645)
            TypeDecl: declname='value', quals=[] (at pp.c:17645)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='__nesc_hton_uint16', quals=[] (at pp.c:17645)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:17647)
      Decl: name='base', quals=[], storage=[] (at pp.c:17648)
        PtrDecl: quals=[] (at pp.c:17648)
          TypeDecl: declname='base', quals=[] (at pp.c:17648)
            IdentifierType: names=['uint8_t'] (at None)
        ID: name='target' (at pp.c:17648)
      Assignment: op='=' (at pp.c:17651)
        ArrayRef:  (at pp.c:17651)
          ID: name='base' (at pp.c:17651)
          Constant: type='int', value='1' (at pp.c:17651)
        ID: name='value' (at pp.c:17651)
      Assignment: op='=' (at pp.c:17652)
        ArrayRef:  (at pp.c:17652)
          ID: name='base' (at pp.c:17652)
          Constant: type='int', value='0' (at pp.c:17652)
        BinaryOp: op='>>' (at pp.c:17652)
          ID: name='value' (at pp.c:17652)
          Constant: type='int', value='8' (at pp.c:17652)
      Return:  (at pp.c:17653)
        ID: name='value' (at pp.c:17653)
  FuncDef:  (at pp.c:17657)
    Decl: name='__nesc_ntoh_uint16', quals=[], storage=['__inline', 'static'] (at pp.c:17657)
      FuncDecl: quals=None (at pp.c:17657)
        ParamList:  (at pp.c:17657)
          Decl: name='source', quals=['const'], storage=[] (at pp.c:17657)
            PtrDecl: quals=[] (at pp.c:17657)
              TypeDecl: declname='source', quals=['const'] (at pp.c:17657)
                IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_ntoh_uint16', quals=[] (at pp.c:17657)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:17659)
      Decl: name='base', quals=['const'], storage=[] (at pp.c:17660)
        PtrDecl: quals=[] (at pp.c:17660)
          TypeDecl: declname='base', quals=['const'] (at pp.c:17660)
            IdentifierType: names=['uint8_t'] (at None)
        ID: name='source' (at pp.c:17660)
      Return:  (at pp.c:17663)
        BinaryOp: op='|' (at None)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
              ArrayRef:  (at pp.c:17663)
                ID: name='base' (at pp.c:17663)
                Constant: type='int', value='0' (at pp.c:17663)
            Constant: type='int', value='8' (at pp.c:17663)
          ArrayRef:  (at pp.c:17663)
            ID: name='base' (at pp.c:17663)
            Constant: type='int', value='1' (at pp.c:17663)
  FuncDef:  (at pp.c:17667)
    Decl: name='Msp430RefVoltArbiterImplP__AdcResource__default__request', quals=[], storage=['inline', 'static'] (at pp.c:17667)
      FuncDecl: quals=None (at pp.c:17667)
        ParamList:  (at pp.c:17667)
          Decl: name='client', quals=[], storage=[] (at pp.c:17667)
            TypeDecl: declname='client', quals=[] (at pp.c:17667)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__default__request', quals=[] (at pp.c:17667)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17668)
      Return:  (at pp.c:17669)
        ID: name='FAIL' (at pp.c:17669)
  FuncDef:  (at pp.c:17673)
    Decl: name='Msp430RefVoltArbiterImplP__AdcResource__request', quals=[], storage=['static', 'inline'] (at pp.c:17673)
      FuncDecl: quals=None (at pp.c:17673)
        ParamList:  (at pp.c:17673)
          Decl: name='arg_0x102871e18', quals=[], storage=[] (at pp.c:17673)
            TypeDecl: declname='arg_0x102871e18', quals=[] (at pp.c:17673)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__request', quals=[] (at pp.c:17673)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17673)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17675)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17675)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:17679)
        ID: name='arg_0x102871e18' (at pp.c:17679)
        Compound:  (at pp.c:17679)
          Case:  (at pp.c:17681)
            ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:17681)
            Assignment: op='=' (at pp.c:17683)
              ID: name='__nesc_result' (at pp.c:17683)
              FuncCall:  (at None)
                ID: name='SimpleArbiterP__0__Resource__request' (at pp.c:17683)
                ExprList:  (at pp.c:17683)
                  ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:17683)
          Break:  (at pp.c:17685)
          Case:  (at pp.c:17687)
            ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:17687)
            Assignment: op='=' (at pp.c:17689)
              ID: name='__nesc_result' (at pp.c:17689)
              FuncCall:  (at None)
                ID: name='SimpleArbiterP__0__Resource__request' (at pp.c:17689)
                ExprList:  (at pp.c:17689)
                  ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:17689)
          Break:  (at pp.c:17691)
          Case:  (at pp.c:17693)
            ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:17693)
            Assignment: op='=' (at pp.c:17695)
              ID: name='__nesc_result' (at pp.c:17695)
              FuncCall:  (at None)
                ID: name='SimpleArbiterP__0__Resource__request' (at pp.c:17695)
                ExprList:  (at pp.c:17695)
                  ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:17695)
          Break:  (at pp.c:17697)
          Default:  (at pp.c:17699)
            Assignment: op='=' (at pp.c:17701)
              ID: name='__nesc_result' (at pp.c:17701)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__AdcResource__default__request' (at pp.c:17701)
                ExprList:  (at pp.c:17701)
                  ID: name='arg_0x102871e18' (at pp.c:17701)
          Break:  (at pp.c:17703)
      Return:  (at pp.c:17709)
        ID: name='__nesc_result' (at pp.c:17709)
  FuncDef:  (at pp.c:17714)
    Decl: name='Msp430RefVoltArbiterImplP__ClientResource__request', quals=[], storage=['inline', 'static'] (at pp.c:17714)
      FuncDecl: quals=None (at pp.c:17714)
        ParamList:  (at pp.c:17714)
          Decl: name='client', quals=[], storage=[] (at pp.c:17714)
            TypeDecl: declname='client', quals=[] (at pp.c:17714)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__request', quals=[] (at pp.c:17714)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17715)
      Return:  (at pp.c:17716)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltArbiterImplP__AdcResource__request' (at pp.c:17716)
          ExprList:  (at pp.c:17716)
            ID: name='client' (at pp.c:17716)
  FuncDef:  (at pp.c:17720)
    Decl: name='AdcP__ResourceRead__default__request', quals=[], storage=['inline', 'static'] (at pp.c:17720)
      FuncDecl: quals=None (at pp.c:17720)
        ParamList:  (at pp.c:17720)
          Decl: name='client', quals=[], storage=[] (at pp.c:17720)
            TypeDecl: declname='client', quals=[] (at pp.c:17720)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__ResourceRead__default__request', quals=[] (at pp.c:17720)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17722)
      Return:  (at pp.c:17724)
        ID: name='FAIL' (at pp.c:17724)
  FuncDef:  (at pp.c:17728)
    Decl: name='AdcP__ResourceRead__request', quals=[], storage=['static', 'inline'] (at pp.c:17728)
      FuncDecl: quals=None (at pp.c:17728)
        ParamList:  (at pp.c:17728)
          Decl: name='arg_0x1025f6aa0', quals=[], storage=[] (at pp.c:17728)
            TypeDecl: declname='arg_0x1025f6aa0', quals=[] (at pp.c:17728)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__ResourceRead__request', quals=[] (at pp.c:17728)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17728)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17730)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17730)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:17734)
        ID: name='arg_0x1025f6aa0' (at pp.c:17734)
        Compound:  (at pp.c:17734)
          Case:  (at pp.c:17736)
            ID: name='AdcReadClientC__0__CLIENT' (at pp.c:17736)
            Assignment: op='=' (at pp.c:17738)
              ID: name='__nesc_result' (at pp.c:17738)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__ClientResource__request' (at pp.c:17738)
                ExprList:  (at pp.c:17738)
                  ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:17738)
          Break:  (at pp.c:17740)
          Default:  (at pp.c:17742)
            Assignment: op='=' (at pp.c:17744)
              ID: name='__nesc_result' (at pp.c:17744)
              FuncCall:  (at None)
                ID: name='AdcP__ResourceRead__default__request' (at pp.c:17744)
                ExprList:  (at pp.c:17744)
                  ID: name='arg_0x1025f6aa0' (at pp.c:17744)
          Break:  (at pp.c:17746)
      Return:  (at pp.c:17752)
        ID: name='__nesc_result' (at pp.c:17752)
  FuncDef:  (at pp.c:17757)
    Decl: name='AdcP__Read__read', quals=[], storage=['inline', 'static'] (at pp.c:17757)
      FuncDecl: quals=None (at pp.c:17757)
        ParamList:  (at pp.c:17757)
          Decl: name='client', quals=[], storage=[] (at pp.c:17757)
            TypeDecl: declname='client', quals=[] (at pp.c:17757)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__Read__read', quals=[] (at pp.c:17757)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17758)
      Return:  (at pp.c:17759)
        FuncCall:  (at None)
          ID: name='AdcP__ResourceRead__request' (at pp.c:17759)
          ExprList:  (at pp.c:17759)
            ID: name='client' (at pp.c:17759)
  FuncDef:  (at pp.c:17763)
    Decl: name='OscilloscopeC__Read__read', quals=[], storage=['static', 'inline'] (at pp.c:17763)
      FuncDecl: quals=None (at pp.c:17763)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OscilloscopeC__Read__read', quals=[] (at pp.c:17763)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17763)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17765)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17765)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17769)
        ID: name='__nesc_result' (at pp.c:17769)
        FuncCall:  (at None)
          ID: name='AdcP__Read__read' (at pp.c:17769)
          ExprList:  (at pp.c:17769)
            ID: name='AdcReadClientC__0__CLIENT' (at pp.c:17769)
      Return:  (at pp.c:17773)
        ID: name='__nesc_result' (at pp.c:17773)
  FuncDef:  (at pp.c:17778)
    Decl: name='CC2420ActiveMessageP__Packet__setPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:17778)
      FuncDecl: quals=None (at pp.c:17778)
        ParamList:  (at pp.c:17778)
          Decl: name='msg', quals=[], storage=[] (at pp.c:17778)
            PtrDecl: quals=[] (at pp.c:17778)
              TypeDecl: declname='msg', quals=[] (at pp.c:17778)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:17778)
            TypeDecl: declname='len', quals=[] (at pp.c:17778)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__Packet__setPayloadLength', quals=[] (at pp.c:17778)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17780)
      FuncCall:  (at None)
        ID: name='__nesc_hton_leuint8' (at pp.c:17781)
        ExprList:  (at None)
          StructRef: type='.' (at None)
            StructRef: type='->' (at None)
              FuncCall:  (at None)
                ID: name='CC2420ActiveMessageP__CC2420PacketBody__getHeader' (at pp.c:17781)
                ExprList:  (at pp.c:17781)
                  ID: name='msg' (at pp.c:17781)
              ID: name='length' (at pp.c:17781)
            ID: name='nxdata' (at pp.c:17781)
          BinaryOp: op='+' (at pp.c:17781)
            ID: name='len' (at pp.c:17781)
            ID: name='CC2420_SIZE' (at pp.c:17781)
  FuncDef:  (at pp.c:17785)
    Decl: name='AMQueueImplP__0__Packet__setPayloadLength', quals=[], storage=['static', 'inline'] (at pp.c:17785)
      FuncDecl: quals=None (at pp.c:17785)
        ParamList:  (at pp.c:17785)
          Decl: name='msg', quals=[], storage=[] (at pp.c:17785)
            PtrDecl: quals=[] (at pp.c:17785)
              TypeDecl: declname='msg', quals=[] (at pp.c:17785)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:17785)
            TypeDecl: declname='len', quals=[] (at pp.c:17785)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AMQueueImplP__0__Packet__setPayloadLength', quals=[] (at pp.c:17785)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17785)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__Packet__setPayloadLength' (at pp.c:17787)
        ExprList:  (at pp.c:17787)
          ID: name='msg' (at pp.c:17787)
          ID: name='len' (at pp.c:17787)
  FuncDef:  (at pp.c:17792)
    Decl: name='AMQueueImplP__0__Send__send', quals=[], storage=['inline', 'static'] (at pp.c:17792)
      FuncDecl: quals=None (at pp.c:17792)
        ParamList:  (at pp.c:17792)
          Decl: name='clientId', quals=[], storage=[] (at pp.c:17792)
            TypeDecl: declname='clientId', quals=[] (at pp.c:17792)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:17792)
            PtrDecl: quals=[] (at pp.c:17792)
              TypeDecl: declname='msg', quals=[] (at pp.c:17792)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:17793)
            TypeDecl: declname='len', quals=[] (at pp.c:17793)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AMQueueImplP__0__Send__send', quals=[] (at pp.c:17792)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17795)
      If:  (at pp.c:17796)
        BinaryOp: op='>=' (at pp.c:17796)
          ID: name='clientId' (at pp.c:17796)
          Constant: type='int', value='1' (at pp.c:17796)
        Compound:  (at pp.c:17796)
          Return:  (at pp.c:17797)
            ID: name='FAIL' (at pp.c:17797)
      If:  (at pp.c:17799)
        BinaryOp: op='!=' (at pp.c:17799)
          StructRef: type='.' (at pp.c:17799)
            ArrayRef:  (at pp.c:17799)
              ID: name='AMQueueImplP__0__queue' (at pp.c:17799)
              ID: name='clientId' (at pp.c:17799)
            ID: name='msg' (at pp.c:17799)
          Cast:  (at None)
            Typename: quals=[] (at None)
              PtrDecl: quals=[] (at pp.c:17799)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['void'] (at None)
            Constant: type='int', value='0' (at pp.c:17799)
        Compound:  (at pp.c:17799)
          Return:  (at pp.c:17800)
            ID: name='EBUSY' (at pp.c:17800)
      Assignment: op='=' (at pp.c:17804)
        StructRef: type='.' (at pp.c:17804)
          ArrayRef:  (at pp.c:17804)
            ID: name='AMQueueImplP__0__queue' (at pp.c:17804)
            ID: name='clientId' (at pp.c:17804)
          ID: name='msg' (at pp.c:17804)
        ID: name='msg' (at pp.c:17804)
      FuncCall:  (at None)
        ID: name='AMQueueImplP__0__Packet__setPayloadLength' (at pp.c:17805)
        ExprList:  (at pp.c:17805)
          ID: name='msg' (at pp.c:17805)
          ID: name='len' (at pp.c:17805)
      If:  (at pp.c:17807)
        BinaryOp: op='>=' (at pp.c:17807)
          ID: name='AMQueueImplP__0__current' (at pp.c:17807)
          Constant: type='int', value='1' (at pp.c:17807)
        Compound:  (at pp.c:17807)
          Decl: name='err', quals=[], storage=[] (at pp.c:17808)
            TypeDecl: declname='err', quals=[] (at pp.c:17808)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='amId', quals=[], storage=[] (at pp.c:17809)
            TypeDecl: declname='amId', quals=[] (at pp.c:17809)
              IdentifierType: names=['am_id_t'] (at None)
            FuncCall:  (at None)
              ID: name='AMQueueImplP__0__AMPacket__type' (at pp.c:17809)
              ExprList:  (at pp.c:17809)
                ID: name='msg' (at pp.c:17809)
          Decl: name='dest', quals=[], storage=[] (at pp.c:17810)
            TypeDecl: declname='dest', quals=[] (at pp.c:17810)
              IdentifierType: names=['am_addr_t'] (at None)
            FuncCall:  (at None)
              ID: name='AMQueueImplP__0__AMPacket__destination' (at pp.c:17810)
              ExprList:  (at pp.c:17810)
                ID: name='msg' (at pp.c:17810)
          Assignment: op='=' (at pp.c:17813)
            ID: name='AMQueueImplP__0__current' (at pp.c:17813)
            ID: name='clientId' (at pp.c:17813)
          Assignment: op='=' (at pp.c:17815)
            ID: name='err' (at pp.c:17815)
            FuncCall:  (at None)
              ID: name='AMQueueImplP__0__AMSend__send' (at pp.c:17815)
              ExprList:  (at pp.c:17815)
                ID: name='amId' (at pp.c:17815)
                ID: name='dest' (at pp.c:17815)
                ID: name='msg' (at pp.c:17815)
                ID: name='len' (at pp.c:17815)
          If:  (at pp.c:17816)
            BinaryOp: op='!=' (at pp.c:17816)
              ID: name='err' (at pp.c:17816)
              ID: name='SUCCESS' (at pp.c:17816)
            Compound:  (at pp.c:17816)
              Assignment: op='=' (at pp.c:17818)
                ID: name='AMQueueImplP__0__current' (at pp.c:17818)
                Constant: type='int', value='1' (at pp.c:17818)
              Assignment: op='=' (at pp.c:17819)
                StructRef: type='.' (at pp.c:17819)
                  ArrayRef:  (at pp.c:17819)
                    ID: name='AMQueueImplP__0__queue' (at pp.c:17819)
                    ID: name='clientId' (at pp.c:17819)
                  ID: name='msg' (at pp.c:17819)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    PtrDecl: quals=[] (at pp.c:17819)
                      TypeDecl: declname=None, quals=[] (at None)
                        IdentifierType: names=['void'] (at None)
                  Constant: type='int', value='0' (at pp.c:17819)
          Return:  (at pp.c:17822)
            ID: name='err' (at pp.c:17822)
        Compound:  (at pp.c:17824)
      Return:  (at pp.c:17827)
        ID: name='SUCCESS' (at pp.c:17827)
  FuncDef:  (at pp.c:17831)
    Decl: name='AMQueueEntryP__0__Send__send', quals=[], storage=['static', 'inline'] (at pp.c:17831)
      FuncDecl: quals=None (at pp.c:17831)
        ParamList:  (at pp.c:17831)
          Decl: name='msg', quals=[], storage=[] (at pp.c:17831)
            PtrDecl: quals=[] (at pp.c:17831)
              TypeDecl: declname='msg', quals=[] (at pp.c:17831)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:17831)
            TypeDecl: declname='len', quals=[] (at pp.c:17831)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AMQueueEntryP__0__Send__send', quals=[] (at pp.c:17831)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17831)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17833)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17833)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17837)
        ID: name='__nesc_result' (at pp.c:17837)
        FuncCall:  (at None)
          ID: name='AMQueueImplP__0__Send__send' (at pp.c:17837)
          ExprList:  (at pp.c:17837)
            Constant: type='int', value='0U' (at pp.c:17837)
            ID: name='msg' (at pp.c:17837)
            ID: name='len' (at pp.c:17837)
      Return:  (at pp.c:17841)
        ID: name='__nesc_result' (at pp.c:17841)
  FuncDef:  (at pp.c:17846)
    Decl: name='CC2420ActiveMessageP__AMPacket__setType', quals=[], storage=['inline', 'static'] (at pp.c:17846)
      FuncDecl: quals=None (at pp.c:17846)
        ParamList:  (at pp.c:17846)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:17846)
            PtrDecl: quals=[] (at pp.c:17846)
              TypeDecl: declname='amsg', quals=[] (at pp.c:17846)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='type', quals=[], storage=[] (at pp.c:17846)
            TypeDecl: declname='type', quals=[] (at pp.c:17846)
              IdentifierType: names=['am_id_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__AMPacket__setType', quals=[] (at pp.c:17846)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17848)
      Decl: name='header', quals=[], storage=[] (at pp.c:17849)
        PtrDecl: quals=[] (at pp.c:17849)
          TypeDecl: declname='header', quals=[] (at pp.c:17849)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__CC2420PacketBody__getHeader' (at pp.c:17849)
          ExprList:  (at pp.c:17849)
            ID: name='amsg' (at pp.c:17849)
      FuncCall:  (at None)
        ID: name='__nesc_hton_leuint8' (at pp.c:17852)
        ExprList:  (at pp.c:17852)
          StructRef: type='.' (at pp.c:17852)
            StructRef: type='->' (at pp.c:17852)
              ID: name='header' (at pp.c:17852)
              ID: name='type' (at pp.c:17852)
            ID: name='nxdata' (at pp.c:17852)
          ID: name='type' (at pp.c:17852)
  FuncDef:  (at pp.c:17856)
    Decl: name='AMQueueEntryP__0__AMPacket__setType', quals=[], storage=['static', 'inline'] (at pp.c:17856)
      FuncDecl: quals=None (at pp.c:17856)
        ParamList:  (at pp.c:17856)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:17856)
            PtrDecl: quals=[] (at pp.c:17856)
              TypeDecl: declname='amsg', quals=[] (at pp.c:17856)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='t', quals=[], storage=[] (at pp.c:17856)
            TypeDecl: declname='t', quals=[] (at pp.c:17856)
              IdentifierType: names=['am_id_t'] (at None)
        TypeDecl: declname='AMQueueEntryP__0__AMPacket__setType', quals=[] (at pp.c:17856)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17856)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__AMPacket__setType' (at pp.c:17858)
        ExprList:  (at pp.c:17858)
          ID: name='amsg' (at pp.c:17858)
          ID: name='t' (at pp.c:17858)
  FuncDef:  (at pp.c:17863)
    Decl: name='CC2420ActiveMessageP__AMPacket__setDestination', quals=[], storage=['inline', 'static'] (at pp.c:17863)
      FuncDecl: quals=None (at pp.c:17863)
        ParamList:  (at pp.c:17863)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:17863)
            PtrDecl: quals=[] (at pp.c:17863)
              TypeDecl: declname='amsg', quals=[] (at pp.c:17863)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='addr', quals=[], storage=[] (at pp.c:17863)
            TypeDecl: declname='addr', quals=[] (at pp.c:17863)
              IdentifierType: names=['am_addr_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__AMPacket__setDestination', quals=[] (at pp.c:17863)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17865)
      Decl: name='header', quals=[], storage=[] (at pp.c:17866)
        PtrDecl: quals=[] (at pp.c:17866)
          TypeDecl: declname='header', quals=[] (at pp.c:17866)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__CC2420PacketBody__getHeader' (at pp.c:17866)
          ExprList:  (at pp.c:17866)
            ID: name='amsg' (at pp.c:17866)
      FuncCall:  (at None)
        ID: name='__nesc_hton_leuint16' (at pp.c:17869)
        ExprList:  (at pp.c:17869)
          StructRef: type='.' (at pp.c:17869)
            StructRef: type='->' (at pp.c:17869)
              ID: name='header' (at pp.c:17869)
              ID: name='dest' (at pp.c:17869)
            ID: name='nxdata' (at pp.c:17869)
          ID: name='addr' (at pp.c:17869)
  FuncDef:  (at pp.c:17873)
    Decl: name='AMQueueEntryP__0__AMPacket__setDestination', quals=[], storage=['static', 'inline'] (at pp.c:17873)
      FuncDecl: quals=None (at pp.c:17873)
        ParamList:  (at pp.c:17873)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:17873)
            PtrDecl: quals=[] (at pp.c:17873)
              TypeDecl: declname='amsg', quals=[] (at pp.c:17873)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='addr', quals=[], storage=[] (at pp.c:17873)
            TypeDecl: declname='addr', quals=[] (at pp.c:17873)
              IdentifierType: names=['am_addr_t'] (at None)
        TypeDecl: declname='AMQueueEntryP__0__AMPacket__setDestination', quals=[] (at pp.c:17873)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17873)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__AMPacket__setDestination' (at pp.c:17875)
        ExprList:  (at pp.c:17875)
          ID: name='amsg' (at pp.c:17875)
          ID: name='addr' (at pp.c:17875)
  FuncDef:  (at pp.c:17880)
    Decl: name='AMQueueEntryP__0__AMSend__send', quals=[], storage=['inline', 'static'] (at pp.c:17880)
      FuncDecl: quals=None (at pp.c:17880)
        ParamList:  (at pp.c:17880)
          Decl: name='dest', quals=[], storage=[] (at pp.c:17880)
            TypeDecl: declname='dest', quals=[] (at pp.c:17880)
              IdentifierType: names=['am_addr_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:17881)
            PtrDecl: quals=[] (at pp.c:17881)
              TypeDecl: declname='msg', quals=[] (at pp.c:17881)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:17882)
            TypeDecl: declname='len', quals=[] (at pp.c:17882)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AMQueueEntryP__0__AMSend__send', quals=[] (at pp.c:17880)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17884)
      FuncCall:  (at None)
        ID: name='AMQueueEntryP__0__AMPacket__setDestination' (at pp.c:17885)
        ExprList:  (at pp.c:17885)
          ID: name='msg' (at pp.c:17885)
          ID: name='dest' (at pp.c:17885)
      FuncCall:  (at None)
        ID: name='AMQueueEntryP__0__AMPacket__setType' (at pp.c:17886)
        ExprList:  (at pp.c:17886)
          ID: name='msg' (at pp.c:17886)
          Constant: type='int', value='147' (at pp.c:17886)
      Return:  (at pp.c:17887)
        FuncCall:  (at None)
          ID: name='AMQueueEntryP__0__Send__send' (at pp.c:17887)
          ExprList:  (at pp.c:17887)
            ID: name='msg' (at pp.c:17887)
            ID: name='len' (at pp.c:17887)
  FuncDef:  (at pp.c:17891)
    Decl: name='OscilloscopeC__AMSend__send', quals=[], storage=['static', 'inline'] (at pp.c:17891)
      FuncDecl: quals=None (at pp.c:17891)
        ParamList:  (at pp.c:17891)
          Decl: name='addr', quals=[], storage=[] (at pp.c:17891)
            TypeDecl: declname='addr', quals=[] (at pp.c:17891)
              IdentifierType: names=['am_addr_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:17891)
            PtrDecl: quals=[] (at pp.c:17891)
              TypeDecl: declname='msg', quals=[] (at pp.c:17891)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:17891)
            TypeDecl: declname='len', quals=[] (at pp.c:17891)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='OscilloscopeC__AMSend__send', quals=[] (at pp.c:17891)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:17891)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17893)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17893)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17897)
        ID: name='__nesc_result' (at pp.c:17897)
        FuncCall:  (at None)
          ID: name='AMQueueEntryP__0__AMSend__send' (at pp.c:17897)
          ExprList:  (at pp.c:17897)
            ID: name='addr' (at pp.c:17897)
            ID: name='msg' (at pp.c:17897)
            ID: name='len' (at pp.c:17897)
      Return:  (at pp.c:17901)
        ID: name='__nesc_result' (at pp.c:17901)
  FuncDef:  (at pp.c:17906)
    Decl: name='CC2420CsmaP__Send__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:17906)
      FuncDecl: quals=None (at pp.c:17906)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__Send__maxPayloadLength', quals=[] (at pp.c:17906)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:17908)
      Return:  (at pp.c:17909)
        Constant: type='int', value='28' (at pp.c:17909)
  FuncDef:  (at pp.c:17913)
    Decl: name='UniqueSendP__SubSend__maxPayloadLength', quals=[], storage=['static', 'inline'] (at pp.c:17913)
      FuncDecl: quals=None (at pp.c:17913)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='UniqueSendP__SubSend__maxPayloadLength', quals=[] (at pp.c:17913)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:17913)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17915)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17915)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17919)
        ID: name='__nesc_result' (at pp.c:17919)
        FuncCall:  (at None)
          ID: name='CC2420CsmaP__Send__maxPayloadLength' (at pp.c:17919)
      Return:  (at pp.c:17923)
        ID: name='__nesc_result' (at pp.c:17923)
  FuncDef:  (at pp.c:17928)
    Decl: name='UniqueSendP__Send__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:17928)
      FuncDecl: quals=None (at pp.c:17928)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='UniqueSendP__Send__maxPayloadLength', quals=[] (at pp.c:17928)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:17930)
      Return:  (at pp.c:17931)
        FuncCall:  (at None)
          ID: name='UniqueSendP__SubSend__maxPayloadLength' (at pp.c:17931)
  FuncDef:  (at pp.c:17935)
    Decl: name='CC2420TinyosNetworkP__SubSend__maxPayloadLength', quals=[], storage=['static', 'inline'] (at pp.c:17935)
      FuncDecl: quals=None (at pp.c:17935)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__SubSend__maxPayloadLength', quals=[] (at pp.c:17935)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:17935)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17937)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17937)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:17941)
        ID: name='__nesc_result' (at pp.c:17941)
        FuncCall:  (at None)
          ID: name='UniqueSendP__Send__maxPayloadLength' (at pp.c:17941)
      Return:  (at pp.c:17945)
        ID: name='__nesc_result' (at pp.c:17945)
  FuncDef:  (at pp.c:17950)
    Decl: name='CC2420TinyosNetworkP__ActiveSend__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:17950)
      FuncDecl: quals=None (at pp.c:17950)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__ActiveSend__maxPayloadLength', quals=[] (at pp.c:17950)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:17952)
      Return:  (at pp.c:17953)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__SubSend__maxPayloadLength' (at pp.c:17953)
  FuncDef:  (at pp.c:17956)
    Decl: name='CC2420TinyosNetworkP__ActiveSend__getPayload', quals=[], storage=['inline', 'static'] (at pp.c:17956)
      FuncDecl: quals=None (at pp.c:17956)
        ParamList:  (at pp.c:17956)
          Decl: name='msg', quals=[], storage=[] (at pp.c:17956)
            PtrDecl: quals=[] (at pp.c:17956)
              TypeDecl: declname='msg', quals=[] (at pp.c:17956)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:17956)
            TypeDecl: declname='len', quals=[] (at pp.c:17956)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:17956)
          TypeDecl: declname='CC2420TinyosNetworkP__ActiveSend__getPayload', quals=[] (at pp.c:17956)
            IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17958)
      If:  (at pp.c:17959)
        BinaryOp: op='<=' (at pp.c:17959)
          ID: name='len' (at pp.c:17959)
          FuncCall:  (at None)
            ID: name='CC2420TinyosNetworkP__ActiveSend__maxPayloadLength' (at pp.c:17959)
        Compound:  (at pp.c:17959)
          Return:  (at pp.c:17960)
            StructRef: type='->' (at pp.c:17960)
              ID: name='msg' (at pp.c:17960)
              ID: name='data' (at pp.c:17960)
        Compound:  (at pp.c:17964)
          Return:  (at pp.c:17965)
            Cast:  (at None)
              Typename: quals=[] (at None)
                PtrDecl: quals=[] (at pp.c:17965)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['void'] (at None)
              Constant: type='int', value='0' (at pp.c:17965)
  FuncDef:  (at pp.c:17970)
    Decl: name='CC2420ActiveMessageP__SubSend__getPayload', quals=[], storage=['static', 'inline'] (at pp.c:17970)
      FuncDecl: quals=None (at pp.c:17970)
        ParamList:  (at pp.c:17970)
          Decl: name='msg', quals=[], storage=[] (at pp.c:17970)
            PtrDecl: quals=[] (at pp.c:17970)
              TypeDecl: declname='msg', quals=[] (at pp.c:17970)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:17970)
            TypeDecl: declname='len', quals=[] (at pp.c:17970)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:17970)
          TypeDecl: declname='CC2420ActiveMessageP__SubSend__getPayload', quals=[] (at pp.c:17970)
            IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17970)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:17972)
        PtrDecl: quals=[] (at pp.c:17972)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:17972)
            IdentifierType: names=['void'] (at None)
      Assignment: op='=' (at pp.c:17976)
        ID: name='__nesc_result' (at pp.c:17976)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__ActiveSend__getPayload' (at pp.c:17976)
          ExprList:  (at pp.c:17976)
            ID: name='msg' (at pp.c:17976)
            ID: name='len' (at pp.c:17976)
      Return:  (at pp.c:17980)
        ID: name='__nesc_result' (at pp.c:17980)
  FuncDef:  (at pp.c:17985)
    Decl: name='CC2420ActiveMessageP__Packet__getPayload', quals=[], storage=['inline', 'static'] (at pp.c:17985)
      FuncDecl: quals=None (at pp.c:17985)
        ParamList:  (at pp.c:17985)
          Decl: name='msg', quals=[], storage=[] (at pp.c:17985)
            PtrDecl: quals=[] (at pp.c:17985)
              TypeDecl: declname='msg', quals=[] (at pp.c:17985)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:17985)
            TypeDecl: declname='len', quals=[] (at pp.c:17985)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:17985)
          TypeDecl: declname='CC2420ActiveMessageP__Packet__getPayload', quals=[] (at pp.c:17985)
            IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17987)
      Return:  (at pp.c:17988)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__SubSend__getPayload' (at pp.c:17988)
          ExprList:  (at pp.c:17988)
            ID: name='msg' (at pp.c:17988)
            ID: name='len' (at pp.c:17988)
  FuncDef:  (at pp.c:17992)
    Decl: name='CC2420ActiveMessageP__AMSend__getPayload', quals=[], storage=['inline', 'static'] (at pp.c:17992)
      FuncDecl: quals=None (at pp.c:17992)
        ParamList:  (at pp.c:17992)
          Decl: name='id', quals=[], storage=[] (at pp.c:17992)
            TypeDecl: declname='id', quals=[] (at pp.c:17992)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='m', quals=[], storage=[] (at pp.c:17992)
            PtrDecl: quals=[] (at pp.c:17992)
              TypeDecl: declname='m', quals=[] (at pp.c:17992)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:17992)
            TypeDecl: declname='len', quals=[] (at pp.c:17992)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:17992)
          TypeDecl: declname='CC2420ActiveMessageP__AMSend__getPayload', quals=[] (at pp.c:17992)
            IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17994)
      Return:  (at pp.c:17995)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__Packet__getPayload' (at pp.c:17995)
          ExprList:  (at pp.c:17995)
            ID: name='m' (at pp.c:17995)
            ID: name='len' (at pp.c:17995)
  FuncDef:  (at pp.c:17999)
    Decl: name='AMQueueImplP__0__AMSend__getPayload', quals=[], storage=['static', 'inline'] (at pp.c:17999)
      FuncDecl: quals=None (at pp.c:17999)
        ParamList:  (at pp.c:17999)
          Decl: name='arg_0x1029e9c70', quals=[], storage=[] (at pp.c:17999)
            TypeDecl: declname='arg_0x1029e9c70', quals=[] (at pp.c:17999)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:17999)
            PtrDecl: quals=[] (at pp.c:17999)
              TypeDecl: declname='msg', quals=[] (at pp.c:17999)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:17999)
            TypeDecl: declname='len', quals=[] (at pp.c:17999)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:17999)
          TypeDecl: declname='AMQueueImplP__0__AMSend__getPayload', quals=[] (at pp.c:17999)
            IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:17999)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18001)
        PtrDecl: quals=[] (at pp.c:18001)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18001)
            IdentifierType: names=['void'] (at None)
      Assignment: op='=' (at pp.c:18005)
        ID: name='__nesc_result' (at pp.c:18005)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__AMSend__getPayload' (at pp.c:18005)
          ExprList:  (at pp.c:18005)
            ID: name='arg_0x1029e9c70' (at pp.c:18005)
            ID: name='msg' (at pp.c:18005)
            ID: name='len' (at pp.c:18005)
      Return:  (at pp.c:18009)
        ID: name='__nesc_result' (at pp.c:18009)
  FuncDef:  (at pp.c:18014)
    Decl: name='AMQueueImplP__0__Send__getPayload', quals=[], storage=['inline', 'static'] (at pp.c:18014)
      FuncDecl: quals=None (at pp.c:18014)
        ParamList:  (at pp.c:18014)
          Decl: name='id', quals=[], storage=[] (at pp.c:18014)
            TypeDecl: declname='id', quals=[] (at pp.c:18014)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='m', quals=[], storage=[] (at pp.c:18014)
            PtrDecl: quals=[] (at pp.c:18014)
              TypeDecl: declname='m', quals=[] (at pp.c:18014)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:18014)
            TypeDecl: declname='len', quals=[] (at pp.c:18014)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18014)
          TypeDecl: declname='AMQueueImplP__0__Send__getPayload', quals=[] (at pp.c:18014)
            IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18016)
      Return:  (at pp.c:18017)
        FuncCall:  (at None)
          ID: name='AMQueueImplP__0__AMSend__getPayload' (at pp.c:18017)
          ExprList:  (at pp.c:18017)
            Constant: type='int', value='0' (at pp.c:18017)
            ID: name='m' (at pp.c:18017)
            ID: name='len' (at pp.c:18017)
  FuncDef:  (at pp.c:18021)
    Decl: name='AMQueueEntryP__0__Send__getPayload', quals=[], storage=['static', 'inline'] (at pp.c:18021)
      FuncDecl: quals=None (at pp.c:18021)
        ParamList:  (at pp.c:18021)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18021)
            PtrDecl: quals=[] (at pp.c:18021)
              TypeDecl: declname='msg', quals=[] (at pp.c:18021)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:18021)
            TypeDecl: declname='len', quals=[] (at pp.c:18021)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18021)
          TypeDecl: declname='AMQueueEntryP__0__Send__getPayload', quals=[] (at pp.c:18021)
            IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18021)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18023)
        PtrDecl: quals=[] (at pp.c:18023)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18023)
            IdentifierType: names=['void'] (at None)
      Assignment: op='=' (at pp.c:18027)
        ID: name='__nesc_result' (at pp.c:18027)
        FuncCall:  (at None)
          ID: name='AMQueueImplP__0__Send__getPayload' (at pp.c:18027)
          ExprList:  (at pp.c:18027)
            Constant: type='int', value='0U' (at pp.c:18027)
            ID: name='msg' (at pp.c:18027)
            ID: name='len' (at pp.c:18027)
      Return:  (at pp.c:18031)
        ID: name='__nesc_result' (at pp.c:18031)
  FuncDef:  (at pp.c:18036)
    Decl: name='AMQueueEntryP__0__AMSend__getPayload', quals=[], storage=['inline', 'static'] (at pp.c:18036)
      FuncDecl: quals=None (at pp.c:18036)
        ParamList:  (at pp.c:18036)
          Decl: name='m', quals=[], storage=[] (at pp.c:18036)
            PtrDecl: quals=[] (at pp.c:18036)
              TypeDecl: declname='m', quals=[] (at pp.c:18036)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:18036)
            TypeDecl: declname='len', quals=[] (at pp.c:18036)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18036)
          TypeDecl: declname='AMQueueEntryP__0__AMSend__getPayload', quals=[] (at pp.c:18036)
            IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18038)
      Return:  (at pp.c:18039)
        FuncCall:  (at None)
          ID: name='AMQueueEntryP__0__Send__getPayload' (at pp.c:18039)
          ExprList:  (at pp.c:18039)
            ID: name='m' (at pp.c:18039)
            ID: name='len' (at pp.c:18039)
  FuncDef:  (at pp.c:18043)
    Decl: name='OscilloscopeC__AMSend__getPayload', quals=[], storage=['static', 'inline'] (at pp.c:18043)
      FuncDecl: quals=None (at pp.c:18043)
        ParamList:  (at pp.c:18043)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18043)
            PtrDecl: quals=[] (at pp.c:18043)
              TypeDecl: declname='msg', quals=[] (at pp.c:18043)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:18043)
            TypeDecl: declname='len', quals=[] (at pp.c:18043)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18043)
          TypeDecl: declname='OscilloscopeC__AMSend__getPayload', quals=[] (at pp.c:18043)
            IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18043)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18045)
        PtrDecl: quals=[] (at pp.c:18045)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18045)
            IdentifierType: names=['void'] (at None)
      Assignment: op='=' (at pp.c:18049)
        ID: name='__nesc_result' (at pp.c:18049)
        FuncCall:  (at None)
          ID: name='AMQueueEntryP__0__AMSend__getPayload' (at pp.c:18049)
          ExprList:  (at pp.c:18049)
            ID: name='msg' (at pp.c:18049)
            ID: name='len' (at pp.c:18049)
      Return:  (at pp.c:18053)
        ID: name='__nesc_result' (at pp.c:18053)
  FuncDef:  (at pp.c:18058)
    Decl: name='CC2420ActiveMessageP__SubSend__maxPayloadLength', quals=[], storage=['static', 'inline'] (at pp.c:18058)
      FuncDecl: quals=None (at pp.c:18058)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__SubSend__maxPayloadLength', quals=[] (at pp.c:18058)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:18058)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18060)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18060)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18064)
        ID: name='__nesc_result' (at pp.c:18064)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__ActiveSend__maxPayloadLength' (at pp.c:18064)
      Return:  (at pp.c:18068)
        ID: name='__nesc_result' (at pp.c:18068)
  FuncDef:  (at pp.c:18073)
    Decl: name='CC2420ActiveMessageP__Packet__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:18073)
      FuncDecl: quals=None (at pp.c:18073)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__Packet__maxPayloadLength', quals=[] (at pp.c:18073)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:18075)
      Return:  (at pp.c:18076)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__SubSend__maxPayloadLength' (at pp.c:18076)
  FuncDef:  (at pp.c:18080)
    Decl: name='CC2420ActiveMessageP__AMSend__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:18080)
      FuncDecl: quals=None (at pp.c:18080)
        ParamList:  (at pp.c:18080)
          Decl: name='id', quals=[], storage=[] (at pp.c:18080)
            TypeDecl: declname='id', quals=[] (at pp.c:18080)
              IdentifierType: names=['am_id_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__AMSend__maxPayloadLength', quals=[] (at pp.c:18080)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:18082)
      Return:  (at pp.c:18083)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__Packet__maxPayloadLength' (at pp.c:18083)
  FuncDef:  (at pp.c:18087)
    Decl: name='AMQueueImplP__0__AMSend__maxPayloadLength', quals=[], storage=['static', 'inline'] (at pp.c:18087)
      FuncDecl: quals=None (at pp.c:18087)
        ParamList:  (at pp.c:18087)
          Decl: name='arg_0x1029e9c70', quals=[], storage=[] (at pp.c:18087)
            TypeDecl: declname='arg_0x1029e9c70', quals=[] (at pp.c:18087)
              IdentifierType: names=['am_id_t'] (at None)
        TypeDecl: declname='AMQueueImplP__0__AMSend__maxPayloadLength', quals=[] (at pp.c:18087)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:18087)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18089)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18089)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18093)
        ID: name='__nesc_result' (at pp.c:18093)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__AMSend__maxPayloadLength' (at pp.c:18093)
          ExprList:  (at pp.c:18093)
            ID: name='arg_0x1029e9c70' (at pp.c:18093)
      Return:  (at pp.c:18097)
        ID: name='__nesc_result' (at pp.c:18097)
  FuncDef:  (at pp.c:18102)
    Decl: name='AMQueueImplP__0__Send__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:18102)
      FuncDecl: quals=None (at pp.c:18102)
        ParamList:  (at pp.c:18102)
          Decl: name='id', quals=[], storage=[] (at pp.c:18102)
            TypeDecl: declname='id', quals=[] (at pp.c:18102)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AMQueueImplP__0__Send__maxPayloadLength', quals=[] (at pp.c:18102)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:18104)
      Return:  (at pp.c:18105)
        FuncCall:  (at None)
          ID: name='AMQueueImplP__0__AMSend__maxPayloadLength' (at pp.c:18105)
          ExprList:  (at pp.c:18105)
            Constant: type='int', value='0' (at pp.c:18105)
  FuncDef:  (at pp.c:18109)
    Decl: name='AMQueueEntryP__0__Send__maxPayloadLength', quals=[], storage=['static', 'inline'] (at pp.c:18109)
      FuncDecl: quals=None (at pp.c:18109)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AMQueueEntryP__0__Send__maxPayloadLength', quals=[] (at pp.c:18109)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:18109)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18111)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18111)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18115)
        ID: name='__nesc_result' (at pp.c:18115)
        FuncCall:  (at None)
          ID: name='AMQueueImplP__0__Send__maxPayloadLength' (at pp.c:18115)
          ExprList:  (at pp.c:18115)
            Constant: type='int', value='0U' (at pp.c:18115)
      Return:  (at pp.c:18119)
        ID: name='__nesc_result' (at pp.c:18119)
  FuncDef:  (at pp.c:18124)
    Decl: name='AMQueueEntryP__0__AMSend__maxPayloadLength', quals=[], storage=['inline', 'static'] (at pp.c:18124)
      FuncDecl: quals=None (at pp.c:18124)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AMQueueEntryP__0__AMSend__maxPayloadLength', quals=[] (at pp.c:18124)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:18126)
      Return:  (at pp.c:18127)
        FuncCall:  (at None)
          ID: name='AMQueueEntryP__0__Send__maxPayloadLength' (at pp.c:18127)
  FuncDef:  (at pp.c:18131)
    Decl: name='OscilloscopeC__AMSend__maxPayloadLength', quals=[], storage=['static', 'inline'] (at pp.c:18131)
      FuncDecl: quals=None (at pp.c:18131)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OscilloscopeC__AMSend__maxPayloadLength', quals=[] (at pp.c:18131)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:18131)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18133)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18133)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18137)
        ID: name='__nesc_result' (at pp.c:18137)
        FuncCall:  (at None)
          ID: name='AMQueueEntryP__0__AMSend__maxPayloadLength' (at pp.c:18137)
      Return:  (at pp.c:18141)
        ID: name='__nesc_result' (at pp.c:18141)
  FuncDef:  (at pp.c:18146)
    Decl: name='OscilloscopeC__Timer__fired', quals=[], storage=['inline', 'static'] (at pp.c:18146)
      FuncDecl: quals=None (at pp.c:18146)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OscilloscopeC__Timer__fired', quals=[] (at pp.c:18146)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18148)
      Decl: name='__nesc_temp43', quals=[], storage=[] (at pp.c:18149)
        TypeDecl: declname='__nesc_temp43', quals=[] (at pp.c:18149)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Decl: name='__nesc_temp42', quals=[], storage=[] (at pp.c:18150)
        PtrDecl: quals=[] (at pp.c:18150)
          TypeDecl: declname='__nesc_temp42', quals=[] (at pp.c:18150)
            IdentifierType: names=['char', 'unsigned'] (at None)
      If:  (at pp.c:18153)
        BinaryOp: op='==' (at pp.c:18153)
          ID: name='OscilloscopeC__reading' (at pp.c:18153)
          ID: name='NREADINGS' (at pp.c:18153)
        Compound:  (at pp.c:18154)
          If:  (at pp.c:18155)
            BinaryOp: op='&&' (at pp.c:18155)
              UnaryOp: op='!' (at pp.c:18155)
                ID: name='OscilloscopeC__sendBusy' (at pp.c:18155)
              BinaryOp: op='<=' (at pp.c:18155)
                UnaryOp: op='sizeof' (at pp.c:18155)
                  ID: name='OscilloscopeC__local' (at pp.c:18155)
                FuncCall:  (at None)
                  ID: name='OscilloscopeC__AMSend__maxPayloadLength' (at pp.c:18155)
            Compound:  (at pp.c:18156)
              FuncCall:  (at None)
                ID: name='memcpy' (at pp.c:18159)
                ExprList:  (at None)
                  FuncCall:  (at None)
                    ID: name='OscilloscopeC__AMSend__getPayload' (at pp.c:18159)
                    ExprList:  (at pp.c:18159)
                      UnaryOp: op='&' (at pp.c:18159)
                        ID: name='OscilloscopeC__sendBuf' (at pp.c:18159)
                      UnaryOp: op='sizeof' (at pp.c:18159)
                        ID: name='OscilloscopeC__local' (at pp.c:18159)
                  UnaryOp: op='&' (at pp.c:18159)
                    ID: name='OscilloscopeC__local' (at pp.c:18159)
                  UnaryOp: op='sizeof' (at pp.c:18159)
                    ID: name='OscilloscopeC__local' (at pp.c:18159)
              If:  (at pp.c:18160)
                BinaryOp: op='==' (at None)
                  FuncCall:  (at None)
                    ID: name='OscilloscopeC__AMSend__send' (at pp.c:18160)
                    ExprList:  (at pp.c:18160)
                      ID: name='AM_BROADCAST_ADDR' (at pp.c:18160)
                      UnaryOp: op='&' (at pp.c:18160)
                        ID: name='OscilloscopeC__sendBuf' (at pp.c:18160)
                      UnaryOp: op='sizeof' (at pp.c:18160)
                        ID: name='OscilloscopeC__local' (at pp.c:18160)
                  ID: name='SUCCESS' (at pp.c:18160)
                Compound:  (at pp.c:18160)
                  Assignment: op='=' (at pp.c:18161)
                    ID: name='OscilloscopeC__sendBusy' (at pp.c:18161)
                    ID: name='TRUE' (at pp.c:18161)
          If:  (at pp.c:18165)
            UnaryOp: op='!' (at pp.c:18165)
              ID: name='OscilloscopeC__sendBusy' (at pp.c:18165)
            Compound:  (at pp.c:18165)
              FuncCall:  (at None)
                ID: name='OscilloscopeC__report_problem' (at pp.c:18166)
          Assignment: op='=' (at pp.c:18168)
            ID: name='OscilloscopeC__reading' (at pp.c:18168)
            Constant: type='int', value='0' (at pp.c:18168)
          If:  (at pp.c:18171)
            UnaryOp: op='!' (at pp.c:18171)
              ID: name='OscilloscopeC__suppressCountChange' (at pp.c:18171)
            Compound:  (at pp.c:18171)
              ExprList:  (at pp.c:18172)
                Assignment: op='=' (at pp.c:18172)
                  ID: name='__nesc_temp42' (at pp.c:18172)
                  StructRef: type='.' (at pp.c:18172)
                    StructRef: type='.' (at pp.c:18172)
                      ID: name='OscilloscopeC__local' (at pp.c:18172)
                      ID: name='count' (at pp.c:18172)
                    ID: name='nxdata' (at pp.c:18172)
                FuncCall:  (at None)
                  ID: name='__nesc_hton_uint16' (at pp.c:18172)
                  ExprList:  (at pp.c:18172)
                    ID: name='__nesc_temp42' (at pp.c:18172)
                    BinaryOp: op='+' (at pp.c:18172)
                      Assignment: op='=' (at pp.c:18172)
                        ID: name='__nesc_temp43' (at pp.c:18172)
                        FuncCall:  (at None)
                          ID: name='__nesc_ntoh_uint16' (at pp.c:18172)
                          ExprList:  (at pp.c:18172)
                            ID: name='__nesc_temp42' (at pp.c:18172)
                      Constant: type='int', value='1' (at pp.c:18172)
                ID: name='__nesc_temp43' (at pp.c:18172)
          Assignment: op='=' (at pp.c:18175)
            ID: name='OscilloscopeC__suppressCountChange' (at pp.c:18175)
            ID: name='FALSE' (at pp.c:18175)
      If:  (at pp.c:18177)
        BinaryOp: op='!=' (at None)
          FuncCall:  (at None)
            ID: name='OscilloscopeC__Read__read' (at pp.c:18177)
          ID: name='SUCCESS' (at pp.c:18177)
        Compound:  (at pp.c:18177)
          FuncCall:  (at None)
            ID: name='OscilloscopeC__report_problem' (at pp.c:18178)
  FuncDef:  (at pp.c:18183)
    Decl: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__startDone', quals=[], storage=['static', 'inline'] (at pp.c:18183)
      FuncDecl: quals=None (at pp.c:18183)
        ParamList:  (at pp.c:18183)
          Decl: name='error', quals=[], storage=[] (at pp.c:18183)
            TypeDecl: declname='error', quals=[] (at pp.c:18183)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_2_5V__startDone', quals=[] (at pp.c:18183)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18183)
      FuncCall:  (at None)
        ID: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__startDone' (at pp.c:18185)
        ExprList:  (at pp.c:18185)
          ID: name='error' (at pp.c:18185)
  FuncDef:  (at pp.c:18190)
    Decl: name='ArbitratedReadStreamC__0__Service__read', quals=[], storage=['static', 'inline'] (at pp.c:18190)
      FuncDecl: quals=None (at pp.c:18190)
        ParamList:  (at pp.c:18190)
          Decl: name='arg_0x10292d148', quals=[], storage=[] (at pp.c:18190)
            TypeDecl: declname='arg_0x10292d148', quals=[] (at pp.c:18190)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='usPeriod', quals=[], storage=[] (at pp.c:18190)
            TypeDecl: declname='usPeriod', quals=[] (at pp.c:18190)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='ArbitratedReadStreamC__0__Service__read', quals=[] (at pp.c:18190)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:18190)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18192)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18192)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18196)
        ID: name='__nesc_result' (at pp.c:18196)
        FuncCall:  (at None)
          ID: name='AdcStreamP__ReadStream__read' (at pp.c:18196)
          ExprList:  (at pp.c:18196)
            ID: name='arg_0x10292d148' (at pp.c:18196)
            ID: name='usPeriod' (at pp.c:18196)
      Return:  (at pp.c:18200)
        ID: name='__nesc_result' (at pp.c:18200)
  FuncDef:  (at pp.c:18205)
    Decl: name='ArbitratedReadStreamC__0__Resource__granted', quals=[], storage=['inline', 'static'] (at pp.c:18205)
      FuncDecl: quals=None (at pp.c:18205)
        ParamList:  (at pp.c:18205)
          Decl: name='client', quals=[], storage=[] (at pp.c:18205)
            TypeDecl: declname='client', quals=[] (at pp.c:18205)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbitratedReadStreamC__0__Resource__granted', quals=[] (at pp.c:18205)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18207)
      FuncCall:  (at None)
        ID: name='ArbitratedReadStreamC__0__Service__read' (at pp.c:18208)
        ExprList:  (at pp.c:18208)
          ID: name='client' (at pp.c:18208)
          ArrayRef:  (at pp.c:18208)
            ID: name='ArbitratedReadStreamC__0__period' (at pp.c:18208)
            ID: name='client' (at pp.c:18208)
  FuncDef:  (at pp.c:18212)
    Decl: name='Msp430RefVoltArbiterImplP__ClientResource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:18212)
      FuncDecl: quals=None (at pp.c:18212)
        ParamList:  (at pp.c:18212)
          Decl: name='client', quals=[], storage=[] (at pp.c:18212)
            TypeDecl: declname='client', quals=[] (at pp.c:18212)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__default__granted', quals=[] (at pp.c:18212)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18214)
  FuncDef:  (at pp.c:18218)
    Decl: name='Msp430RefVoltArbiterImplP__ClientResource__granted', quals=[], storage=['static', 'inline'] (at pp.c:18218)
      FuncDecl: quals=None (at pp.c:18218)
        ParamList:  (at pp.c:18218)
          Decl: name='arg_0x102809b98', quals=[], storage=[] (at pp.c:18218)
            TypeDecl: declname='arg_0x102809b98', quals=[] (at pp.c:18218)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__granted', quals=[] (at pp.c:18218)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18218)
      Switch:  (at pp.c:18220)
        ID: name='arg_0x102809b98' (at pp.c:18220)
        Compound:  (at pp.c:18220)
          Case:  (at pp.c:18222)
            ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:18222)
            FuncCall:  (at None)
              ID: name='AdcP__ResourceRead__granted' (at pp.c:18224)
              ExprList:  (at pp.c:18224)
                ID: name='AdcReadClientC__0__CLIENT' (at pp.c:18224)
          Break:  (at pp.c:18226)
          Case:  (at pp.c:18228)
            ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:18228)
            FuncCall:  (at None)
              ID: name='ArbitratedReadStreamC__0__Resource__granted' (at pp.c:18230)
              ExprList:  (at pp.c:18230)
                ID: name='AdcReadStreamClientC__0__RSCLIENT' (at pp.c:18230)
          Break:  (at pp.c:18232)
          Case:  (at pp.c:18234)
            ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:18234)
            FuncCall:  (at None)
              ID: name='AdcP__SubResourceReadNow__granted' (at pp.c:18236)
              ExprList:  (at pp.c:18236)
                ID: name='AdcReadNowClientC__0__CLIENT' (at pp.c:18236)
          Break:  (at pp.c:18238)
          Default:  (at pp.c:18240)
            FuncCall:  (at None)
              ID: name='Msp430RefVoltArbiterImplP__ClientResource__default__granted' (at pp.c:18242)
              ExprList:  (at pp.c:18242)
                ID: name='arg_0x102809b98' (at pp.c:18242)
          Break:  (at pp.c:18244)
  FuncDef:  (at pp.c:18251)
    Decl: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__startDone', quals=[], storage=['inline', 'static'] (at pp.c:18251)
      FuncDecl: quals=None (at pp.c:18251)
        ParamList:  (at pp.c:18251)
          Decl: name='error', quals=[], storage=[] (at pp.c:18251)
            TypeDecl: declname='error', quals=[] (at pp.c:18251)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_1_5V__startDone', quals=[] (at pp.c:18251)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18252)
      If:  (at pp.c:18253)
        BinaryOp: op='!=' (at pp.c:18253)
          ID: name='Msp430RefVoltArbiterImplP__syncOwner' (at pp.c:18253)
          ID: name='Msp430RefVoltArbiterImplP__NO_OWNER' (at pp.c:18253)
        Compound:  (at pp.c:18253)
          FuncCall:  (at None)
            ID: name='Msp430RefVoltArbiterImplP__ClientResource__granted' (at pp.c:18256)
            ExprList:  (at pp.c:18256)
              ID: name='Msp430RefVoltArbiterImplP__syncOwner' (at pp.c:18256)
  FuncDef:  (at pp.c:18261)
    Decl: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__startDone', quals=[], storage=['static', 'inline'] (at pp.c:18261)
      FuncDecl: quals=None (at pp.c:18261)
        ParamList:  (at pp.c:18261)
          Decl: name='error', quals=[], storage=[] (at pp.c:18261)
            TypeDecl: declname='error', quals=[] (at pp.c:18261)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_1_5V__startDone', quals=[] (at pp.c:18261)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18261)
      FuncCall:  (at None)
        ID: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__startDone' (at pp.c:18263)
        ExprList:  (at pp.c:18263)
          ID: name='error' (at pp.c:18263)
  FuncDef:  (at pp.c:18268)
    Decl: name='Msp430RefVoltGeneratorP__SwitchOnTimer__fired', quals=[], storage=['inline', 'static'] (at pp.c:18268)
      FuncDecl: quals=None (at pp.c:18268)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOnTimer__fired', quals=[] (at pp.c:18268)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18270)
      Switch:  (at pp.c:18271)
        ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:18271)
        Compound:  (at pp.c:18271)
          Case:  (at pp.c:18272)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_ON_PENDING' (at pp.c:18272)
            Assignment: op='=' (at pp.c:18273)
              ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:18273)
              ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_STABLE' (at pp.c:18273)
          FuncCall:  (at None)
            ID: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__startDone' (at pp.c:18274)
            ExprList:  (at pp.c:18274)
              ID: name='SUCCESS' (at pp.c:18274)
          Break:  (at pp.c:18275)
          Case:  (at pp.c:18277)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_ON_PENDING' (at pp.c:18277)
            Assignment: op='=' (at pp.c:18278)
              ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:18278)
              ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_STABLE' (at pp.c:18278)
          FuncCall:  (at None)
            ID: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__startDone' (at pp.c:18279)
            ExprList:  (at pp.c:18279)
              ID: name='SUCCESS' (at pp.c:18279)
          Break:  (at pp.c:18280)
          Default:  (at pp.c:18282)
            Return:  (at pp.c:18283)
  FuncDef:  (at pp.c:18288)
    Decl: name='VirtualizeTimerC__0__Timer__startOneShot', quals=[], storage=['inline', 'static'] (at pp.c:18288)
      FuncDecl: quals=None (at pp.c:18288)
        ParamList:  (at pp.c:18288)
          Decl: name='num', quals=[], storage=[] (at pp.c:18288)
            TypeDecl: declname='num', quals=[] (at pp.c:18288)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:18288)
            TypeDecl: declname='dt', quals=[] (at pp.c:18288)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__Timer__startOneShot', quals=[] (at pp.c:18288)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18289)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__startTimer' (at pp.c:18290)
        ExprList:  (at pp.c:18290)
          ID: name='num' (at pp.c:18290)
          FuncCall:  (at None)
            ID: name='VirtualizeTimerC__0__TimerFrom__getNow' (at pp.c:18290)
          ID: name='dt' (at pp.c:18290)
          ID: name='TRUE' (at pp.c:18290)
  FuncDef:  (at pp.c:18294)
    Decl: name='Msp430RefVoltGeneratorP__SwitchOffTimer__startOneShot', quals=[], storage=['static', 'inline'] (at pp.c:18294)
      FuncDecl: quals=None (at pp.c:18294)
        ParamList:  (at pp.c:18294)
          Decl: name='dt', quals=[], storage=[] (at pp.c:18294)
            TypeDecl: declname='dt', quals=[] (at pp.c:18294)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffTimer__startOneShot', quals=[] (at pp.c:18294)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18294)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__Timer__startOneShot' (at pp.c:18296)
        ExprList:  (at pp.c:18296)
          Constant: type='int', value='3U' (at pp.c:18296)
          ID: name='dt' (at pp.c:18296)
  FuncDef:  (at pp.c:18300)
    Decl: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__startOneShot', quals=[], storage=['static', 'inline'] (at pp.c:18300)
      FuncDecl: quals=None (at pp.c:18300)
        ParamList:  (at pp.c:18300)
          Decl: name='dt', quals=[], storage=[] (at pp.c:18300)
            TypeDecl: declname='dt', quals=[] (at pp.c:18300)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__startOneShot', quals=[] (at pp.c:18300)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18300)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__Timer__startOneShot' (at pp.c:18302)
        ExprList:  (at pp.c:18302)
          Constant: type='int', value='4U' (at pp.c:18302)
          ID: name='dt' (at pp.c:18302)
  FuncDef:  (at pp.c:18307)
    Decl: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stopDone', quals=[], storage=['inline', 'static'] (at pp.c:18307)
      FuncDecl: quals=None (at pp.c:18307)
        ParamList:  (at pp.c:18307)
          Decl: name='error', quals=[], storage=[] (at pp.c:18307)
            TypeDecl: declname='error', quals=[] (at pp.c:18307)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stopDone', quals=[] (at pp.c:18307)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18308)
  FuncDef:  (at pp.c:18312)
    Decl: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__stopDone', quals=[], storage=['static', 'inline'] (at pp.c:18312)
      FuncDecl: quals=None (at pp.c:18312)
        ParamList:  (at pp.c:18312)
          Decl: name='error', quals=[], storage=[] (at pp.c:18312)
            TypeDecl: declname='error', quals=[] (at pp.c:18312)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_2_5V__stopDone', quals=[] (at pp.c:18312)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18312)
      FuncCall:  (at None)
        ID: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__stopDone' (at pp.c:18314)
        ExprList:  (at pp.c:18314)
          ID: name='error' (at pp.c:18314)
  FuncDef:  (at pp.c:18319)
    Decl: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stopDone', quals=[], storage=['inline', 'static'] (at pp.c:18319)
      FuncDecl: quals=None (at pp.c:18319)
        ParamList:  (at pp.c:18319)
          Decl: name='error', quals=[], storage=[] (at pp.c:18319)
            TypeDecl: declname='error', quals=[] (at pp.c:18319)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stopDone', quals=[] (at pp.c:18319)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18320)
  FuncDef:  (at pp.c:18324)
    Decl: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__stopDone', quals=[], storage=['static', 'inline'] (at pp.c:18324)
      FuncDecl: quals=None (at pp.c:18324)
        ParamList:  (at pp.c:18324)
          Decl: name='error', quals=[], storage=[] (at pp.c:18324)
            TypeDecl: declname='error', quals=[] (at pp.c:18324)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__RefVolt_1_5V__stopDone', quals=[] (at pp.c:18324)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18324)
      FuncCall:  (at None)
        ID: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__stopDone' (at pp.c:18326)
        ExprList:  (at pp.c:18326)
          ID: name='error' (at pp.c:18326)
  FuncDef:  (at pp.c:18331)
    Decl: name='Msp430RefVoltGeneratorP__SwitchOffTimer__fired', quals=[], storage=['inline', 'static'] (at pp.c:18331)
      FuncDecl: quals=None (at pp.c:18331)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffTimer__fired', quals=[] (at pp.c:18331)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18333)
      Switch:  (at pp.c:18334)
        ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:18334)
        Compound:  (at pp.c:18334)
          Case:  (at pp.c:18335)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_OFF_PENDING' (at pp.c:18335)
            If:  (at pp.c:18336)
              BinaryOp: op='==' (at None)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltGeneratorP__switchOff' (at pp.c:18336)
                ID: name='SUCCESS' (at pp.c:18336)
              Compound:  (at pp.c:18336)
                Assignment: op='=' (at pp.c:18337)
                  ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:18337)
                  ID: name='Msp430RefVoltGeneratorP__GENERATOR_OFF' (at pp.c:18337)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__stopDone' (at pp.c:18338)
                  ExprList:  (at pp.c:18338)
                    ID: name='SUCCESS' (at pp.c:18338)
              Compound:  (at pp.c:18340)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltGeneratorP__SwitchOffTimer__startOneShot' (at pp.c:18341)
                  ExprList:  (at pp.c:18341)
                    Constant: type='int', value='20' (at pp.c:18341)
          Break:  (at pp.c:18343)
          Case:  (at pp.c:18345)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_OFF_PENDING' (at pp.c:18345)
            If:  (at pp.c:18346)
              BinaryOp: op='==' (at None)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltGeneratorP__switchOff' (at pp.c:18346)
                ID: name='SUCCESS' (at pp.c:18346)
              Compound:  (at pp.c:18346)
                Assignment: op='=' (at pp.c:18347)
                  ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:18347)
                  ID: name='Msp430RefVoltGeneratorP__GENERATOR_OFF' (at pp.c:18347)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__stopDone' (at pp.c:18348)
                  ExprList:  (at pp.c:18348)
                    ID: name='SUCCESS' (at pp.c:18348)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__startOneShot' (at pp.c:18350)
                  ExprList:  (at pp.c:18350)
                    Constant: type='int', value='2048' (at pp.c:18350)
              Compound:  (at pp.c:18354)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltGeneratorP__SwitchOffTimer__startOneShot' (at pp.c:18355)
                  ExprList:  (at pp.c:18355)
                    Constant: type='int', value='20' (at pp.c:18355)
          Break:  (at pp.c:18357)
          Default:  (at pp.c:18359)
            Break:  (at pp.c:18360)
  FuncDef:  (at pp.c:18364)
    Decl: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__fired', quals=[], storage=['inline', 'static'] (at pp.c:18364)
      FuncDecl: quals=None (at pp.c:18364)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__fired', quals=[] (at pp.c:18364)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18366)
  FuncDef:  (at pp.c:18370)
    Decl: name='VirtualizeTimerC__0__Timer__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:18370)
      FuncDecl: quals=None (at pp.c:18370)
        ParamList:  (at pp.c:18370)
          Decl: name='num', quals=[], storage=[] (at pp.c:18370)
            TypeDecl: declname='num', quals=[] (at pp.c:18370)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__Timer__default__fired', quals=[] (at pp.c:18370)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18371)
  FuncDef:  (at pp.c:18375)
    Decl: name='VirtualizeTimerC__0__Timer__fired', quals=[], storage=['static', 'inline'] (at pp.c:18375)
      FuncDecl: quals=None (at pp.c:18375)
        ParamList:  (at pp.c:18375)
          Decl: name='arg_0x1023622f8', quals=[], storage=[] (at pp.c:18375)
            TypeDecl: declname='arg_0x1023622f8', quals=[] (at pp.c:18375)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__Timer__fired', quals=[] (at pp.c:18375)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18375)
      Switch:  (at pp.c:18377)
        ID: name='arg_0x1023622f8' (at pp.c:18377)
        Compound:  (at pp.c:18377)
          Case:  (at pp.c:18379)
            Constant: type='int', value='1U' (at pp.c:18379)
            FuncCall:  (at None)
              ID: name='OscilloscopeC__Timer__fired' (at pp.c:18381)
          Break:  (at pp.c:18383)
          Case:  (at pp.c:18385)
            Constant: type='int', value='2U' (at pp.c:18385)
            FuncCall:  (at None)
              ID: name='Msp430RefVoltGeneratorP__SwitchOnTimer__fired' (at pp.c:18387)
          Break:  (at pp.c:18389)
          Case:  (at pp.c:18391)
            Constant: type='int', value='3U' (at pp.c:18391)
            FuncCall:  (at None)
              ID: name='Msp430RefVoltGeneratorP__SwitchOffTimer__fired' (at pp.c:18393)
          Break:  (at pp.c:18395)
          Case:  (at pp.c:18397)
            Constant: type='int', value='4U' (at pp.c:18397)
            FuncCall:  (at None)
              ID: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__fired' (at pp.c:18399)
          Break:  (at pp.c:18401)
          Default:  (at pp.c:18403)
            FuncCall:  (at None)
              ID: name='VirtualizeTimerC__0__Timer__default__fired' (at pp.c:18405)
              ExprList:  (at pp.c:18405)
                ID: name='arg_0x1023622f8' (at pp.c:18405)
          Break:  (at pp.c:18407)
  FuncDef:  (at pp.c:18414)
    Decl: name='VirtualizeTimerC__0__TimerFrom__fired', quals=[], storage=['inline', 'static'] (at pp.c:18414)
      FuncDecl: quals=None (at pp.c:18414)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__TimerFrom__fired', quals=[] (at pp.c:18414)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18415)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__fireTimers' (at pp.c:18416)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='VirtualizeTimerC__0__TimerFrom__getNow' (at pp.c:18416)
  FuncDef:  (at pp.c:18420)
    Decl: name='AlarmToTimerC__0__Timer__fired', quals=[], storage=['static', 'inline'] (at pp.c:18420)
      FuncDecl: quals=None (at pp.c:18420)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Timer__fired', quals=[] (at pp.c:18420)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18420)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__TimerFrom__fired' (at pp.c:18422)
  FuncDef:  (at pp.c:18427)
    Decl: name='TransformAlarmC__1__Alarm__getAlarm', quals=[], storage=['inline', 'static'] (at pp.c:18427)
      FuncDecl: quals=None (at pp.c:18427)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__Alarm__getAlarm', quals=[] (at pp.c:18427)
          IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
    Compound:  (at pp.c:18428)
      Compound:  (at pp.c:18429)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:18429)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:18429)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:18429)
        Compound:  (at pp.c:18431)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:18432)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:18432)
              IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
            BinaryOp: op='+' (at pp.c:18434)
              ID: name='TransformAlarmC__1__m_t0' (at pp.c:18434)
              ID: name='TransformAlarmC__1__m_dt' (at pp.c:18434)
          Compound:  (at pp.c:18436)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:18438)
              ExprList:  (at pp.c:18438)
                ID: name='__nesc_atomic' (at pp.c:18438)
            Return:  (at pp.c:18440)
              ID: name='__nesc_temp' (at pp.c:18440)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:18444)
          ExprList:  (at pp.c:18444)
            ID: name='__nesc_atomic' (at pp.c:18444)
  FuncDef:  (at pp.c:18448)
    Decl: name='AlarmToTimerC__0__Alarm__getAlarm', quals=[], storage=['static', 'inline'] (at pp.c:18448)
      FuncDecl: quals=None (at pp.c:18448)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__Alarm__getAlarm', quals=[] (at pp.c:18448)
          IdentifierType: names=['AlarmToTimerC__0__Alarm__size_type'] (at None)
    Compound:  (at pp.c:18448)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18450)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18450)
          IdentifierType: names=['long', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18454)
        ID: name='__nesc_result' (at pp.c:18454)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__1__Alarm__getAlarm' (at pp.c:18454)
      Return:  (at pp.c:18458)
        ID: name='__nesc_result' (at pp.c:18458)
  FuncDef:  (at pp.c:18463)
    Decl: name='AlarmToTimerC__0__fired__runTask', quals=[], storage=['inline', 'static'] (at pp.c:18463)
      FuncDecl: quals=None (at pp.c:18463)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AlarmToTimerC__0__fired__runTask', quals=[] (at pp.c:18463)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18464)
      If:  (at pp.c:18465)
        BinaryOp: op='==' (at pp.c:18465)
          ID: name='AlarmToTimerC__0__m_oneshot' (at pp.c:18465)
          ID: name='FALSE' (at pp.c:18465)
        Compound:  (at pp.c:18465)
          FuncCall:  (at None)
            ID: name='AlarmToTimerC__0__start' (at pp.c:18466)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='AlarmToTimerC__0__Alarm__getAlarm' (at pp.c:18466)
              ID: name='AlarmToTimerC__0__m_dt' (at pp.c:18466)
              ID: name='FALSE' (at pp.c:18466)
      FuncCall:  (at None)
        ID: name='AlarmToTimerC__0__Timer__fired' (at pp.c:18469)
  FuncDef:  (at pp.c:18473)
    Decl: name='CC2420TinyosNetworkP__CC2420PacketBody__getHeader', quals=[], storage=['static', 'inline'] (at pp.c:18473)
      FuncDecl: quals=None (at pp.c:18473)
        ParamList:  (at pp.c:18473)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18473)
            PtrDecl: quals=[] (at pp.c:18473)
              TypeDecl: declname='msg', quals=[] (at pp.c:18473)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18473)
          TypeDecl: declname='CC2420TinyosNetworkP__CC2420PacketBody__getHeader', quals=[] (at pp.c:18473)
            IdentifierType: names=['cc2420_header_t'] (at None)
    Compound:  (at pp.c:18473)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18475)
        PtrDecl: quals=[] (at pp.c:18475)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18475)
            Struct: name='cc2420_header_t', packed=False (at pp.c:18475)
      Assignment: op='=' (at pp.c:18479)
        ID: name='__nesc_result' (at pp.c:18479)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getHeader' (at pp.c:18479)
          ExprList:  (at pp.c:18479)
            ID: name='msg' (at pp.c:18479)
      Return:  (at pp.c:18483)
        ID: name='__nesc_result' (at pp.c:18483)
  FuncDef:  (at pp.c:18488)
    Decl: name='CC2420TinyosNetworkP__BareSend__getPayload', quals=[], storage=['inline', 'static'] (at pp.c:18488)
      FuncDecl: quals=None (at pp.c:18488)
        ParamList:  (at pp.c:18488)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18488)
            PtrDecl: quals=[] (at pp.c:18488)
              TypeDecl: declname='msg', quals=[] (at pp.c:18488)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:18488)
            TypeDecl: declname='len', quals=[] (at pp.c:18488)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18488)
          TypeDecl: declname='CC2420TinyosNetworkP__BareSend__getPayload', quals=[] (at pp.c:18488)
            IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18490)
      Decl: name='hdr', quals=[], storage=[] (at pp.c:18492)
        PtrDecl: quals=[] (at pp.c:18492)
          TypeDecl: declname='hdr', quals=[] (at pp.c:18492)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__CC2420PacketBody__getHeader' (at pp.c:18492)
          ExprList:  (at pp.c:18492)
            ID: name='msg' (at pp.c:18492)
      Return:  (at pp.c:18495)
        ID: name='hdr' (at pp.c:18495)
  FuncDef:  (at pp.c:18499)
    Decl: name='CC2420TinyosNetworkP__BareReceive__default__receive', quals=[], storage=['inline', 'static'] (at pp.c:18499)
      FuncDecl: quals=None (at pp.c:18499)
        ParamList:  (at pp.c:18499)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18499)
            PtrDecl: quals=[] (at pp.c:18499)
              TypeDecl: declname='msg', quals=[] (at pp.c:18499)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:18499)
            PtrDecl: quals=[] (at pp.c:18499)
              TypeDecl: declname='payload', quals=[] (at pp.c:18499)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:18499)
            TypeDecl: declname='len', quals=[] (at pp.c:18499)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18499)
          TypeDecl: declname='CC2420TinyosNetworkP__BareReceive__default__receive', quals=[] (at pp.c:18499)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:18501)
      Return:  (at pp.c:18502)
        ID: name='msg' (at pp.c:18502)
  FuncDef:  (at pp.c:18506)
    Decl: name='CC2420TinyosNetworkP__BareReceive__receive', quals=[], storage=['static', 'inline'] (at pp.c:18506)
      FuncDecl: quals=None (at pp.c:18506)
        ParamList:  (at pp.c:18506)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18506)
            PtrDecl: quals=[] (at pp.c:18506)
              TypeDecl: declname='msg', quals=[] (at pp.c:18506)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:18506)
            PtrDecl: quals=[] (at pp.c:18506)
              TypeDecl: declname='payload', quals=[] (at pp.c:18506)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:18506)
            TypeDecl: declname='len', quals=[] (at pp.c:18506)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18506)
          TypeDecl: declname='CC2420TinyosNetworkP__BareReceive__receive', quals=[] (at pp.c:18506)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:18506)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18508)
        PtrDecl: quals=[] (at pp.c:18508)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18508)
            Struct: name='message_t', packed=False (at pp.c:18508)
      Assignment: op='=' (at pp.c:18512)
        ID: name='__nesc_result' (at pp.c:18512)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__BareReceive__default__receive' (at pp.c:18512)
          ExprList:  (at pp.c:18512)
            ID: name='msg' (at pp.c:18512)
            ID: name='payload' (at pp.c:18512)
            ID: name='len' (at pp.c:18512)
      Return:  (at pp.c:18516)
        ID: name='__nesc_result' (at pp.c:18516)
  FuncDef:  (at pp.c:18521)
    Decl: name='CC2420ActiveMessageP__Snoop__default__receive', quals=[], storage=['inline', 'static'] (at pp.c:18521)
      FuncDecl: quals=None (at pp.c:18521)
        ParamList:  (at pp.c:18521)
          Decl: name='id', quals=[], storage=[] (at pp.c:18521)
            TypeDecl: declname='id', quals=[] (at pp.c:18521)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18521)
            PtrDecl: quals=[] (at pp.c:18521)
              TypeDecl: declname='msg', quals=[] (at pp.c:18521)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:18521)
            PtrDecl: quals=[] (at pp.c:18521)
              TypeDecl: declname='payload', quals=[] (at pp.c:18521)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:18521)
            TypeDecl: declname='len', quals=[] (at pp.c:18521)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18521)
          TypeDecl: declname='CC2420ActiveMessageP__Snoop__default__receive', quals=[] (at pp.c:18521)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:18523)
      Return:  (at pp.c:18524)
        ID: name='msg' (at pp.c:18524)
  FuncDef:  (at pp.c:18528)
    Decl: name='CC2420ActiveMessageP__Snoop__receive', quals=[], storage=['static', 'inline'] (at pp.c:18528)
      FuncDecl: quals=None (at pp.c:18528)
        ParamList:  (at pp.c:18528)
          Decl: name='arg_0x1024ea480', quals=[], storage=[] (at pp.c:18528)
            TypeDecl: declname='arg_0x1024ea480', quals=[] (at pp.c:18528)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18528)
            PtrDecl: quals=[] (at pp.c:18528)
              TypeDecl: declname='msg', quals=[] (at pp.c:18528)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:18528)
            PtrDecl: quals=[] (at pp.c:18528)
              TypeDecl: declname='payload', quals=[] (at pp.c:18528)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:18528)
            TypeDecl: declname='len', quals=[] (at pp.c:18528)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18528)
          TypeDecl: declname='CC2420ActiveMessageP__Snoop__receive', quals=[] (at pp.c:18528)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:18528)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18530)
        PtrDecl: quals=[] (at pp.c:18530)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18530)
            Struct: name='message_t', packed=False (at pp.c:18530)
      Assignment: op='=' (at pp.c:18534)
        ID: name='__nesc_result' (at pp.c:18534)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__Snoop__default__receive' (at pp.c:18534)
          ExprList:  (at pp.c:18534)
            ID: name='arg_0x1024ea480' (at pp.c:18534)
            ID: name='msg' (at pp.c:18534)
            ID: name='payload' (at pp.c:18534)
            ID: name='len' (at pp.c:18534)
      Return:  (at pp.c:18538)
        ID: name='__nesc_result' (at pp.c:18538)
  FuncDef:  (at pp.c:18543)
    Decl: name='OscilloscopeC__Timer__startPeriodic', quals=[], storage=['static', 'inline'] (at pp.c:18543)
      FuncDecl: quals=None (at pp.c:18543)
        ParamList:  (at pp.c:18543)
          Decl: name='dt', quals=[], storage=[] (at pp.c:18543)
            TypeDecl: declname='dt', quals=[] (at pp.c:18543)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='OscilloscopeC__Timer__startPeriodic', quals=[] (at pp.c:18543)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18543)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__Timer__startPeriodic' (at pp.c:18545)
        ExprList:  (at pp.c:18545)
          Constant: type='int', value='1U' (at pp.c:18545)
          ID: name='dt' (at pp.c:18545)
  FuncDef:  (at pp.c:18550)
    Decl: name='OscilloscopeC__startTimer', quals=[], storage=['inline', 'static'] (at pp.c:18550)
      FuncDecl: quals=None (at pp.c:18550)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OscilloscopeC__startTimer', quals=[] (at pp.c:18550)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18552)
      FuncCall:  (at None)
        ID: name='OscilloscopeC__Timer__startPeriodic' (at pp.c:18553)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='__nesc_ntoh_uint16' (at pp.c:18553)
            ExprList:  (at pp.c:18553)
              StructRef: type='.' (at pp.c:18553)
                StructRef: type='.' (at pp.c:18553)
                  ID: name='OscilloscopeC__local' (at pp.c:18553)
                  ID: name='interval' (at pp.c:18553)
                ID: name='nxdata' (at pp.c:18553)
      Assignment: op='=' (at pp.c:18554)
        ID: name='OscilloscopeC__reading' (at pp.c:18554)
        Constant: type='int', value='0' (at pp.c:18554)
  FuncDef:  (at pp.c:18558)
    Decl: name='HplMsp430GeneralIOP__31__IO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:18558)
      FuncDecl: quals=None (at pp.c:18558)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__31__IO__toggle', quals=[] (at pp.c:18558)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18560)
      Compound:  (at pp.c:18562)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:18562)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:18562)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:18562)
        Assignment: op='^=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:18564)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:18564)
          BinaryOp: op='<<' (at pp.c:18564)
            Constant: type='int', value='0x01' (at pp.c:18564)
            Constant: type='int', value='7' (at pp.c:18564)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:18566)
          ExprList:  (at pp.c:18566)
            ID: name='__nesc_atomic' (at pp.c:18566)
  FuncDef:  (at pp.c:18570)
    Decl: name='Msp430GpioC__9__HplGeneralIO__toggle', quals=[], storage=['static', 'inline'] (at pp.c:18570)
      FuncDecl: quals=None (at pp.c:18570)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__9__HplGeneralIO__toggle', quals=[] (at pp.c:18570)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18570)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__31__IO__toggle' (at pp.c:18572)
  FuncDef:  (at pp.c:18577)
    Decl: name='Msp430GpioC__9__GeneralIO__toggle', quals=[], storage=['inline', 'static'] (at pp.c:18577)
      FuncDecl: quals=None (at pp.c:18577)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__9__GeneralIO__toggle', quals=[] (at pp.c:18577)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18579)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__9__HplGeneralIO__toggle' (at pp.c:18581)
  FuncDef:  (at pp.c:18585)
    Decl: name='LedsP__Led2__toggle', quals=[], storage=['static', 'inline'] (at pp.c:18585)
      FuncDecl: quals=None (at pp.c:18585)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Led2__toggle', quals=[] (at pp.c:18585)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18585)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__9__GeneralIO__toggle' (at pp.c:18587)
  FuncDef:  (at pp.c:18592)
    Decl: name='LedsP__Leds__led2Toggle', quals=[], storage=['inline', 'static'] (at pp.c:18592)
      FuncDecl: quals=None (at pp.c:18592)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='LedsP__Leds__led2Toggle', quals=[] (at pp.c:18592)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18594)
      FuncCall:  (at None)
        ID: name='LedsP__Led2__toggle' (at pp.c:18595)
  FuncDef:  (at pp.c:18602)
    Decl: name='OscilloscopeC__Leds__led2Toggle', quals=[], storage=['static', 'inline'] (at pp.c:18602)
      FuncDecl: quals=None (at pp.c:18602)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OscilloscopeC__Leds__led2Toggle', quals=[] (at pp.c:18602)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18602)
      FuncCall:  (at None)
        ID: name='LedsP__Leds__led2Toggle' (at pp.c:18604)
  FuncDef:  (at pp.c:18609)
    Decl: name='OscilloscopeC__report_received', quals=[], storage=['inline', 'static'] (at pp.c:18609)
      FuncDecl: quals=None (at pp.c:18609)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OscilloscopeC__report_received', quals=[] (at pp.c:18609)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18611)
      FuncCall:  (at None)
        ID: name='OscilloscopeC__Leds__led2Toggle' (at pp.c:18613)
  FuncDef:  (at pp.c:18617)
    Decl: name='OscilloscopeC__Receive__receive', quals=[], storage=['inline', 'static'] (at pp.c:18617)
      FuncDecl: quals=None (at pp.c:18617)
        ParamList:  (at pp.c:18617)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18617)
            PtrDecl: quals=[] (at pp.c:18617)
              TypeDecl: declname='msg', quals=[] (at pp.c:18617)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:18617)
            PtrDecl: quals=[] (at pp.c:18617)
              TypeDecl: declname='payload', quals=[] (at pp.c:18617)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:18617)
            TypeDecl: declname='len', quals=[] (at pp.c:18617)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18617)
          TypeDecl: declname='OscilloscopeC__Receive__receive', quals=[] (at pp.c:18617)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:18619)
      Decl: name='omsg', quals=[], storage=[] (at pp.c:18620)
        PtrDecl: quals=[] (at pp.c:18620)
          TypeDecl: declname='omsg', quals=[] (at pp.c:18620)
            IdentifierType: names=['oscilloscope_t'] (at None)
        ID: name='payload' (at pp.c:18620)
      FuncCall:  (at None)
        ID: name='OscilloscopeC__report_received' (at pp.c:18622)
      If:  (at pp.c:18627)
        BinaryOp: op='>' (at None)
          FuncCall:  (at None)
            ID: name='__nesc_ntoh_uint16' (at pp.c:18627)
            ExprList:  (at pp.c:18627)
              StructRef: type='.' (at pp.c:18627)
                StructRef: type='->' (at pp.c:18627)
                  ID: name='omsg' (at pp.c:18627)
                  ID: name='version' (at pp.c:18627)
                ID: name='nxdata' (at pp.c:18627)
          FuncCall:  (at None)
            ID: name='__nesc_ntoh_uint16' (at pp.c:18627)
            ExprList:  (at pp.c:18627)
              StructRef: type='.' (at pp.c:18627)
                StructRef: type='.' (at pp.c:18627)
                  ID: name='OscilloscopeC__local' (at pp.c:18627)
                  ID: name='version' (at pp.c:18627)
                ID: name='nxdata' (at pp.c:18627)
        Compound:  (at pp.c:18628)
          FuncCall:  (at None)
            ID: name='__nesc_hton_uint16' (at pp.c:18629)
            ExprList:  (at pp.c:18629)
              StructRef: type='.' (at pp.c:18629)
                StructRef: type='.' (at pp.c:18629)
                  ID: name='OscilloscopeC__local' (at pp.c:18629)
                  ID: name='version' (at pp.c:18629)
                ID: name='nxdata' (at pp.c:18629)
              FuncCall:  (at None)
                ID: name='__nesc_ntoh_uint16' (at pp.c:18629)
                ExprList:  (at pp.c:18629)
                  StructRef: type='.' (at pp.c:18629)
                    StructRef: type='->' (at pp.c:18629)
                      ID: name='omsg' (at pp.c:18629)
                      ID: name='version' (at pp.c:18629)
                    ID: name='nxdata' (at pp.c:18629)
          FuncCall:  (at None)
            ID: name='__nesc_hton_uint16' (at pp.c:18630)
            ExprList:  (at pp.c:18630)
              StructRef: type='.' (at pp.c:18630)
                StructRef: type='.' (at pp.c:18630)
                  ID: name='OscilloscopeC__local' (at pp.c:18630)
                  ID: name='interval' (at pp.c:18630)
                ID: name='nxdata' (at pp.c:18630)
              FuncCall:  (at None)
                ID: name='__nesc_ntoh_uint16' (at pp.c:18630)
                ExprList:  (at pp.c:18630)
                  StructRef: type='.' (at pp.c:18630)
                    StructRef: type='->' (at pp.c:18630)
                      ID: name='omsg' (at pp.c:18630)
                      ID: name='interval' (at pp.c:18630)
                    ID: name='nxdata' (at pp.c:18630)
          FuncCall:  (at None)
            ID: name='OscilloscopeC__startTimer' (at pp.c:18631)
      If:  (at pp.c:18633)
        BinaryOp: op='>' (at None)
          FuncCall:  (at None)
            ID: name='__nesc_ntoh_uint16' (at pp.c:18633)
            ExprList:  (at pp.c:18633)
              StructRef: type='.' (at pp.c:18633)
                StructRef: type='->' (at pp.c:18633)
                  ID: name='omsg' (at pp.c:18633)
                  ID: name='count' (at pp.c:18633)
                ID: name='nxdata' (at pp.c:18633)
          FuncCall:  (at None)
            ID: name='__nesc_ntoh_uint16' (at pp.c:18633)
            ExprList:  (at pp.c:18633)
              StructRef: type='.' (at pp.c:18633)
                StructRef: type='.' (at pp.c:18633)
                  ID: name='OscilloscopeC__local' (at pp.c:18633)
                  ID: name='count' (at pp.c:18633)
                ID: name='nxdata' (at pp.c:18633)
        Compound:  (at pp.c:18634)
          FuncCall:  (at None)
            ID: name='__nesc_hton_uint16' (at pp.c:18635)
            ExprList:  (at pp.c:18635)
              StructRef: type='.' (at pp.c:18635)
                StructRef: type='.' (at pp.c:18635)
                  ID: name='OscilloscopeC__local' (at pp.c:18635)
                  ID: name='count' (at pp.c:18635)
                ID: name='nxdata' (at pp.c:18635)
              FuncCall:  (at None)
                ID: name='__nesc_ntoh_uint16' (at pp.c:18635)
                ExprList:  (at pp.c:18635)
                  StructRef: type='.' (at pp.c:18635)
                    StructRef: type='->' (at pp.c:18635)
                      ID: name='omsg' (at pp.c:18635)
                      ID: name='count' (at pp.c:18635)
                    ID: name='nxdata' (at pp.c:18635)
          Assignment: op='=' (at pp.c:18636)
            ID: name='OscilloscopeC__suppressCountChange' (at pp.c:18636)
            ID: name='TRUE' (at pp.c:18636)
      Return:  (at pp.c:18639)
        ID: name='msg' (at pp.c:18639)
  FuncDef:  (at pp.c:18643)
    Decl: name='CC2420ActiveMessageP__Receive__default__receive', quals=[], storage=['inline', 'static'] (at pp.c:18643)
      FuncDecl: quals=None (at pp.c:18643)
        ParamList:  (at pp.c:18643)
          Decl: name='id', quals=[], storage=[] (at pp.c:18643)
            TypeDecl: declname='id', quals=[] (at pp.c:18643)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18643)
            PtrDecl: quals=[] (at pp.c:18643)
              TypeDecl: declname='msg', quals=[] (at pp.c:18643)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:18643)
            PtrDecl: quals=[] (at pp.c:18643)
              TypeDecl: declname='payload', quals=[] (at pp.c:18643)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:18643)
            TypeDecl: declname='len', quals=[] (at pp.c:18643)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18643)
          TypeDecl: declname='CC2420ActiveMessageP__Receive__default__receive', quals=[] (at pp.c:18643)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:18645)
      Return:  (at pp.c:18646)
        ID: name='msg' (at pp.c:18646)
  FuncDef:  (at pp.c:18650)
    Decl: name='CC2420ActiveMessageP__Receive__receive', quals=[], storage=['static', 'inline'] (at pp.c:18650)
      FuncDecl: quals=None (at pp.c:18650)
        ParamList:  (at pp.c:18650)
          Decl: name='arg_0x1024ec908', quals=[], storage=[] (at pp.c:18650)
            TypeDecl: declname='arg_0x1024ec908', quals=[] (at pp.c:18650)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18650)
            PtrDecl: quals=[] (at pp.c:18650)
              TypeDecl: declname='msg', quals=[] (at pp.c:18650)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:18650)
            PtrDecl: quals=[] (at pp.c:18650)
              TypeDecl: declname='payload', quals=[] (at pp.c:18650)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:18650)
            TypeDecl: declname='len', quals=[] (at pp.c:18650)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18650)
          TypeDecl: declname='CC2420ActiveMessageP__Receive__receive', quals=[] (at pp.c:18650)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:18650)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18652)
        PtrDecl: quals=[] (at pp.c:18652)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18652)
            Struct: name='message_t', packed=False (at pp.c:18652)
      Switch:  (at pp.c:18656)
        ID: name='arg_0x1024ec908' (at pp.c:18656)
        Compound:  (at pp.c:18656)
          Case:  (at pp.c:18658)
            Constant: type='int', value='147' (at pp.c:18658)
            Assignment: op='=' (at pp.c:18660)
              ID: name='__nesc_result' (at pp.c:18660)
              FuncCall:  (at None)
                ID: name='OscilloscopeC__Receive__receive' (at pp.c:18660)
                ExprList:  (at pp.c:18660)
                  ID: name='msg' (at pp.c:18660)
                  ID: name='payload' (at pp.c:18660)
                  ID: name='len' (at pp.c:18660)
          Break:  (at pp.c:18662)
          Default:  (at pp.c:18664)
            Assignment: op='=' (at pp.c:18666)
              ID: name='__nesc_result' (at pp.c:18666)
              FuncCall:  (at None)
                ID: name='CC2420ActiveMessageP__Receive__default__receive' (at pp.c:18666)
                ExprList:  (at pp.c:18666)
                  ID: name='arg_0x1024ec908' (at pp.c:18666)
                  ID: name='msg' (at pp.c:18666)
                  ID: name='payload' (at pp.c:18666)
                  ID: name='len' (at pp.c:18666)
          Break:  (at pp.c:18668)
      Return:  (at pp.c:18674)
        ID: name='__nesc_result' (at pp.c:18674)
  FuncDef:  (at pp.c:18679)
    Decl: name='ActiveMessageAddressC__ActiveMessageAddress__amAddress', quals=[], storage=['inline', 'static'] (at pp.c:18679)
      FuncDecl: quals=None (at pp.c:18679)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ActiveMessageAddressC__ActiveMessageAddress__amAddress', quals=[] (at pp.c:18679)
          IdentifierType: names=['am_addr_t'] (at None)
    Compound:  (at pp.c:18681)
      Return:  (at pp.c:18682)
        FuncCall:  (at None)
          ID: name='ActiveMessageAddressC__amAddress' (at pp.c:18682)
  FuncDef:  (at pp.c:18686)
    Decl: name='CC2420ActiveMessageP__ActiveMessageAddress__amAddress', quals=[], storage=['static', 'inline'] (at pp.c:18686)
      FuncDecl: quals=None (at pp.c:18686)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__ActiveMessageAddress__amAddress', quals=[] (at pp.c:18686)
          IdentifierType: names=['am_addr_t'] (at None)
    Compound:  (at pp.c:18686)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18688)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18688)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18692)
        ID: name='__nesc_result' (at pp.c:18692)
        FuncCall:  (at None)
          ID: name='ActiveMessageAddressC__ActiveMessageAddress__amAddress' (at pp.c:18692)
      Return:  (at pp.c:18696)
        ID: name='__nesc_result' (at pp.c:18696)
  FuncDef:  (at pp.c:18701)
    Decl: name='CC2420ActiveMessageP__AMPacket__address', quals=[], storage=['inline', 'static'] (at pp.c:18701)
      FuncDecl: quals=None (at pp.c:18701)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__AMPacket__address', quals=[] (at pp.c:18701)
          IdentifierType: names=['am_addr_t'] (at None)
    Compound:  (at pp.c:18703)
      Return:  (at pp.c:18704)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__ActiveMessageAddress__amAddress' (at pp.c:18704)
  FuncDef:  (at pp.c:18708)
    Decl: name='CC2420ActiveMessageP__AMPacket__isForMe', quals=[], storage=['inline', 'static'] (at pp.c:18708)
      FuncDecl: quals=None (at pp.c:18708)
        ParamList:  (at pp.c:18708)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:18708)
            PtrDecl: quals=[] (at pp.c:18708)
              TypeDecl: declname='amsg', quals=[] (at pp.c:18708)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__AMPacket__isForMe', quals=[] (at pp.c:18708)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:18710)
      Return:  (at pp.c:18711)
        BinaryOp: op='||' (at None)
          BinaryOp: op='==' (at None)
            FuncCall:  (at None)
              ID: name='CC2420ActiveMessageP__AMPacket__destination' (at pp.c:18711)
              ExprList:  (at pp.c:18711)
                ID: name='amsg' (at pp.c:18711)
            FuncCall:  (at None)
              ID: name='CC2420ActiveMessageP__AMPacket__address' (at pp.c:18711)
          BinaryOp: op='==' (at None)
            FuncCall:  (at None)
              ID: name='CC2420ActiveMessageP__AMPacket__destination' (at pp.c:18712)
              ExprList:  (at pp.c:18712)
                ID: name='amsg' (at pp.c:18712)
            ID: name='AM_BROADCAST_ADDR' (at pp.c:18712)
  FuncDef:  (at pp.c:18716)
    Decl: name='CC2420ActiveMessageP__SubReceive__receive', quals=[], storage=['inline', 'static'] (at pp.c:18716)
      FuncDecl: quals=None (at pp.c:18716)
        ParamList:  (at pp.c:18716)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18716)
            PtrDecl: quals=[] (at pp.c:18716)
              TypeDecl: declname='msg', quals=[] (at pp.c:18716)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:18716)
            PtrDecl: quals=[] (at pp.c:18716)
              TypeDecl: declname='payload', quals=[] (at pp.c:18716)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:18716)
            TypeDecl: declname='len', quals=[] (at pp.c:18716)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18716)
          TypeDecl: declname='CC2420ActiveMessageP__SubReceive__receive', quals=[] (at pp.c:18716)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:18718)
      If:  (at pp.c:18720)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__AMPacket__isForMe' (at pp.c:18720)
          ExprList:  (at pp.c:18720)
            ID: name='msg' (at pp.c:18720)
        Compound:  (at pp.c:18720)
          Return:  (at pp.c:18721)
            FuncCall:  (at None)
              ID: name='CC2420ActiveMessageP__Receive__receive' (at pp.c:18721)
              ExprList:  (at None)
                FuncCall:  (at None)
                  ID: name='CC2420ActiveMessageP__AMPacket__type' (at pp.c:18721)
                  ExprList:  (at pp.c:18721)
                    ID: name='msg' (at pp.c:18721)
                ID: name='msg' (at pp.c:18721)
                ID: name='payload' (at pp.c:18721)
                ID: name='len' (at pp.c:18721)
        Compound:  (at pp.c:18723)
          Return:  (at pp.c:18724)
            FuncCall:  (at None)
              ID: name='CC2420ActiveMessageP__Snoop__receive' (at pp.c:18724)
              ExprList:  (at None)
                FuncCall:  (at None)
                  ID: name='CC2420ActiveMessageP__AMPacket__type' (at pp.c:18724)
                  ExprList:  (at pp.c:18724)
                    ID: name='msg' (at pp.c:18724)
                ID: name='msg' (at pp.c:18724)
                ID: name='payload' (at pp.c:18724)
                ID: name='len' (at pp.c:18724)
  FuncDef:  (at pp.c:18729)
    Decl: name='CC2420TinyosNetworkP__ActiveReceive__receive', quals=[], storage=['static', 'inline'] (at pp.c:18729)
      FuncDecl: quals=None (at pp.c:18729)
        ParamList:  (at pp.c:18729)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18729)
            PtrDecl: quals=[] (at pp.c:18729)
              TypeDecl: declname='msg', quals=[] (at pp.c:18729)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:18729)
            PtrDecl: quals=[] (at pp.c:18729)
              TypeDecl: declname='payload', quals=[] (at pp.c:18729)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:18729)
            TypeDecl: declname='len', quals=[] (at pp.c:18729)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18729)
          TypeDecl: declname='CC2420TinyosNetworkP__ActiveReceive__receive', quals=[] (at pp.c:18729)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:18729)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18731)
        PtrDecl: quals=[] (at pp.c:18731)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18731)
            Struct: name='message_t', packed=False (at pp.c:18731)
      Assignment: op='=' (at pp.c:18735)
        ID: name='__nesc_result' (at pp.c:18735)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__SubReceive__receive' (at pp.c:18735)
          ExprList:  (at pp.c:18735)
            ID: name='msg' (at pp.c:18735)
            ID: name='payload' (at pp.c:18735)
            ID: name='len' (at pp.c:18735)
      Return:  (at pp.c:18739)
        ID: name='__nesc_result' (at pp.c:18739)
  FuncDef:  (at pp.c:18744)
    Decl: name='CC2420TinyosNetworkP__CC2420PacketBody__getMetadata', quals=[], storage=['static', 'inline'] (at pp.c:18744)
      FuncDecl: quals=None (at pp.c:18744)
        ParamList:  (at pp.c:18744)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18744)
            PtrDecl: quals=[] (at pp.c:18744)
              TypeDecl: declname='msg', quals=[] (at pp.c:18744)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18744)
          TypeDecl: declname='CC2420TinyosNetworkP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:18744)
            IdentifierType: names=['cc2420_metadata_t'] (at None)
    Compound:  (at pp.c:18744)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18746)
        PtrDecl: quals=[] (at pp.c:18746)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18746)
            Struct: name='cc2420_metadata_t', packed=False (at pp.c:18746)
      Assignment: op='=' (at pp.c:18750)
        ID: name='__nesc_result' (at pp.c:18750)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getMetadata' (at pp.c:18750)
          ExprList:  (at pp.c:18750)
            ID: name='msg' (at pp.c:18750)
      Return:  (at pp.c:18754)
        ID: name='__nesc_result' (at pp.c:18754)
  FuncDef:  (at pp.c:18759)
    Decl: name='CC2420PacketP__CC2420Packet__getNetwork', quals=[], storage=['inline', 'static'] (at pp.c:18759)
      FuncDecl: quals=None (at pp.c:18759)
        ParamList:  (at pp.c:18759)
          Decl: name='p_msg', quals=[], storage=[] (at pp.c:18759)
            PtrDecl: quals=[] (at pp.c:18759)
              TypeDecl: declname='p_msg', quals=[] (at pp.c:18759)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420PacketP__CC2420Packet__getNetwork', quals=[] (at pp.c:18759)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:18761)
      Compound:  (at pp.c:18765)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:18765)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:18765)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:18765)
        Compound:  (at pp.c:18766)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:18767)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:18767)
              IdentifierType: names=['char', 'unsigned'] (at None)
            UnaryOp: op='*' (at None)
              FuncCall:  (at None)
                ID: name='CC2420PacketP__getNetwork' (at pp.c:18769)
                ExprList:  (at pp.c:18769)
                  ID: name='p_msg' (at pp.c:18769)
          Compound:  (at pp.c:18771)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:18773)
              ExprList:  (at pp.c:18773)
                ID: name='__nesc_atomic' (at pp.c:18773)
            Return:  (at pp.c:18775)
              ID: name='__nesc_temp' (at pp.c:18775)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:18779)
          ExprList:  (at pp.c:18779)
            ID: name='__nesc_atomic' (at pp.c:18779)
  FuncDef:  (at pp.c:18783)
    Decl: name='CC2420TinyosNetworkP__CC2420Packet__getNetwork', quals=[], storage=['static', 'inline'] (at pp.c:18783)
      FuncDecl: quals=None (at pp.c:18783)
        ParamList:  (at pp.c:18783)
          Decl: name='p_msg', quals=[], storage=[] (at pp.c:18783)
            PtrDecl: quals=[] (at pp.c:18783)
              TypeDecl: declname='p_msg', quals=[] (at pp.c:18783)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__CC2420Packet__getNetwork', quals=[] (at pp.c:18783)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:18783)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18785)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18785)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:18789)
        ID: name='__nesc_result' (at pp.c:18789)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420Packet__getNetwork' (at pp.c:18789)
          ExprList:  (at pp.c:18789)
            ID: name='p_msg' (at pp.c:18789)
      Return:  (at pp.c:18793)
        ID: name='__nesc_result' (at pp.c:18793)
  FuncDef:  (at pp.c:18798)
    Decl: name='CC2420TinyosNetworkP__SubReceive__receive', quals=[], storage=['inline', 'static'] (at pp.c:18798)
      FuncDecl: quals=None (at pp.c:18798)
        ParamList:  (at pp.c:18798)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18798)
            PtrDecl: quals=[] (at pp.c:18798)
              TypeDecl: declname='msg', quals=[] (at pp.c:18798)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:18798)
            PtrDecl: quals=[] (at pp.c:18798)
              TypeDecl: declname='payload', quals=[] (at pp.c:18798)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:18798)
            TypeDecl: declname='len', quals=[] (at pp.c:18798)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18798)
          TypeDecl: declname='CC2420TinyosNetworkP__SubReceive__receive', quals=[] (at pp.c:18798)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:18800)
      Decl: name='network', quals=[], storage=[] (at pp.c:18801)
        TypeDecl: declname='network', quals=[] (at pp.c:18801)
          IdentifierType: names=['uint8_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__CC2420Packet__getNetwork' (at pp.c:18801)
          ExprList:  (at pp.c:18801)
            ID: name='msg' (at pp.c:18801)
      If:  (at pp.c:18803)
        UnaryOp: op='!' (at None)
          FuncCall:  (at None)
            ID: name='__nesc_ntoh_int8' (at pp.c:18803)
            ExprList:  (at None)
              StructRef: type='.' (at None)
                StructRef: type='->' (at None)
                  FuncCall:  (at None)
                    ID: name='CC2420TinyosNetworkP__CC2420PacketBody__getMetadata' (at pp.c:18803)
                    ExprList:  (at pp.c:18803)
                      ID: name='msg' (at pp.c:18803)
                  ID: name='crc' (at pp.c:18803)
                ID: name='nxdata' (at pp.c:18803)
        Compound:  (at pp.c:18803)
          Return:  (at pp.c:18804)
            ID: name='msg' (at pp.c:18804)
      If:  (at pp.c:18807)
        BinaryOp: op='==' (at pp.c:18807)
          ID: name='network' (at pp.c:18807)
          Constant: type='int', value='0x3f' (at pp.c:18807)
        Compound:  (at pp.c:18807)
          Return:  (at pp.c:18808)
            FuncCall:  (at None)
              ID: name='CC2420TinyosNetworkP__ActiveReceive__receive' (at pp.c:18808)
              ExprList:  (at pp.c:18808)
                ID: name='msg' (at pp.c:18808)
                ID: name='payload' (at pp.c:18808)
                ID: name='len' (at pp.c:18808)
        Compound:  (at pp.c:18812)
          Return:  (at pp.c:18813)
            FuncCall:  (at None)
              ID: name='CC2420TinyosNetworkP__BareReceive__receive' (at pp.c:18813)
              ExprList:  (at pp.c:18813)
                ID: name='msg' (at pp.c:18813)
                FuncCall:  (at None)
                  ID: name='CC2420TinyosNetworkP__BareSend__getPayload' (at pp.c:18814)
                  ExprList:  (at pp.c:18814)
                    ID: name='msg' (at pp.c:18814)
                    ID: name='len' (at pp.c:18814)
                BinaryOp: op='+' (at pp.c:18815)
                  ID: name='len' (at pp.c:18815)
                  UnaryOp: op='sizeof' (at pp.c:18815)
                    Typename: quals=[] (at None)
                      TypeDecl: declname=None, quals=[] (at None)
                        IdentifierType: names=['cc2420_header_t'] (at None)
  FuncDef:  (at pp.c:18820)
    Decl: name='UniqueReceiveP__Receive__receive', quals=[], storage=['static', 'inline'] (at pp.c:18820)
      FuncDecl: quals=None (at pp.c:18820)
        ParamList:  (at pp.c:18820)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18820)
            PtrDecl: quals=[] (at pp.c:18820)
              TypeDecl: declname='msg', quals=[] (at pp.c:18820)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:18820)
            PtrDecl: quals=[] (at pp.c:18820)
              TypeDecl: declname='payload', quals=[] (at pp.c:18820)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:18820)
            TypeDecl: declname='len', quals=[] (at pp.c:18820)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18820)
          TypeDecl: declname='UniqueReceiveP__Receive__receive', quals=[] (at pp.c:18820)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:18820)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18822)
        PtrDecl: quals=[] (at pp.c:18822)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18822)
            Struct: name='message_t', packed=False (at pp.c:18822)
      Assignment: op='=' (at pp.c:18826)
        ID: name='__nesc_result' (at pp.c:18826)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__SubReceive__receive' (at pp.c:18826)
          ExprList:  (at pp.c:18826)
            ID: name='msg' (at pp.c:18826)
            ID: name='payload' (at pp.c:18826)
            ID: name='len' (at pp.c:18826)
      Return:  (at pp.c:18830)
        ID: name='__nesc_result' (at pp.c:18830)
  FuncDef:  (at pp.c:18835)
    Decl: name='UniqueReceiveP__insert', quals=[], storage=['inline', 'static'] (at pp.c:18835)
      FuncDecl: quals=None (at pp.c:18835)
        ParamList:  (at pp.c:18835)
          Decl: name='msgSource', quals=[], storage=[] (at pp.c:18835)
            TypeDecl: declname='msgSource', quals=[] (at pp.c:18835)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='msgDsn', quals=[], storage=[] (at pp.c:18835)
            TypeDecl: declname='msgDsn', quals=[] (at pp.c:18835)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='UniqueReceiveP__insert', quals=[] (at pp.c:18835)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:18837)
      Decl: name='element', quals=[], storage=[] (at pp.c:18838)
        TypeDecl: declname='element', quals=[] (at pp.c:18838)
          IdentifierType: names=['uint8_t'] (at None)
        ID: name='UniqueReceiveP__recycleSourceElement' (at pp.c:18838)
      Decl: name='increment', quals=[], storage=[] (at pp.c:18839)
        TypeDecl: declname='increment', quals=[] (at pp.c:18839)
          IdentifierType: names=['bool'] (at None)
        ID: name='FALSE' (at pp.c:18839)
      Compound:  (at pp.c:18841)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:18841)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:18841)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:18841)
        Compound:  (at pp.c:18843)
          If:  (at pp.c:18844)
            BinaryOp: op='||' (at pp.c:18844)
              BinaryOp: op='==' (at pp.c:18844)
                ID: name='element' (at pp.c:18844)
                ID: name='UniqueReceiveP__INVALID_ELEMENT' (at pp.c:18844)
              BinaryOp: op='==' (at pp.c:18844)
                ID: name='UniqueReceiveP__writeIndex' (at pp.c:18844)
                ID: name='element' (at pp.c:18844)
            Compound:  (at pp.c:18844)
              Assignment: op='=' (at pp.c:18846)
                ID: name='element' (at pp.c:18846)
                ID: name='UniqueReceiveP__writeIndex' (at pp.c:18846)
              Assignment: op='=' (at pp.c:18847)
                ID: name='increment' (at pp.c:18847)
                ID: name='TRUE' (at pp.c:18847)
          Assignment: op='=' (at pp.c:18850)
            StructRef: type='.' (at pp.c:18850)
              ArrayRef:  (at pp.c:18850)
                ID: name='UniqueReceiveP__receivedMessages' (at pp.c:18850)
                ID: name='element' (at pp.c:18850)
              ID: name='source' (at pp.c:18850)
            ID: name='msgSource' (at pp.c:18850)
          Assignment: op='=' (at pp.c:18851)
            StructRef: type='.' (at pp.c:18851)
              ArrayRef:  (at pp.c:18851)
                ID: name='UniqueReceiveP__receivedMessages' (at pp.c:18851)
                ID: name='element' (at pp.c:18851)
              ID: name='dsn' (at pp.c:18851)
            ID: name='msgDsn' (at pp.c:18851)
          If:  (at pp.c:18852)
            ID: name='increment' (at pp.c:18852)
            Compound:  (at pp.c:18852)
              UnaryOp: op='p++' (at pp.c:18853)
                ID: name='UniqueReceiveP__writeIndex' (at pp.c:18853)
              Assignment: op='%=' (at pp.c:18854)
                ID: name='UniqueReceiveP__writeIndex' (at pp.c:18854)
                Constant: type='int', value='4' (at pp.c:18854)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:18858)
          ExprList:  (at pp.c:18858)
            ID: name='__nesc_atomic' (at pp.c:18858)
  FuncDef:  (at pp.c:18862)
    Decl: name='UniqueReceiveP__DuplicateReceive__default__receive', quals=[], storage=['inline', 'static'] (at pp.c:18862)
      FuncDecl: quals=None (at pp.c:18862)
        ParamList:  (at pp.c:18862)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18862)
            PtrDecl: quals=[] (at pp.c:18862)
              TypeDecl: declname='msg', quals=[] (at pp.c:18862)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:18862)
            PtrDecl: quals=[] (at pp.c:18862)
              TypeDecl: declname='payload', quals=[] (at pp.c:18862)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:18862)
            TypeDecl: declname='len', quals=[] (at pp.c:18862)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18862)
          TypeDecl: declname='UniqueReceiveP__DuplicateReceive__default__receive', quals=[] (at pp.c:18862)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:18864)
      Return:  (at pp.c:18865)
        ID: name='msg' (at pp.c:18865)
  FuncDef:  (at pp.c:18869)
    Decl: name='UniqueReceiveP__DuplicateReceive__receive', quals=[], storage=['static', 'inline'] (at pp.c:18869)
      FuncDecl: quals=None (at pp.c:18869)
        ParamList:  (at pp.c:18869)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18869)
            PtrDecl: quals=[] (at pp.c:18869)
              TypeDecl: declname='msg', quals=[] (at pp.c:18869)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:18869)
            PtrDecl: quals=[] (at pp.c:18869)
              TypeDecl: declname='payload', quals=[] (at pp.c:18869)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:18869)
            TypeDecl: declname='len', quals=[] (at pp.c:18869)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18869)
          TypeDecl: declname='UniqueReceiveP__DuplicateReceive__receive', quals=[] (at pp.c:18869)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:18869)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18871)
        PtrDecl: quals=[] (at pp.c:18871)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18871)
            Struct: name='message_t', packed=False (at pp.c:18871)
      Assignment: op='=' (at pp.c:18875)
        ID: name='__nesc_result' (at pp.c:18875)
        FuncCall:  (at None)
          ID: name='UniqueReceiveP__DuplicateReceive__default__receive' (at pp.c:18875)
          ExprList:  (at pp.c:18875)
            ID: name='msg' (at pp.c:18875)
            ID: name='payload' (at pp.c:18875)
            ID: name='len' (at pp.c:18875)
      Return:  (at pp.c:18879)
        ID: name='__nesc_result' (at pp.c:18879)
  FuncDef:  (at pp.c:18884)
    Decl: name='UniqueReceiveP__hasSeen', quals=[], storage=['inline', 'static'] (at pp.c:18884)
      FuncDecl: quals=None (at pp.c:18884)
        ParamList:  (at pp.c:18884)
          Decl: name='msgSource', quals=[], storage=[] (at pp.c:18884)
            TypeDecl: declname='msgSource', quals=[] (at pp.c:18884)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='msgDsn', quals=[], storage=[] (at pp.c:18884)
            TypeDecl: declname='msgDsn', quals=[] (at pp.c:18884)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='UniqueReceiveP__hasSeen', quals=[] (at pp.c:18884)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:18886)
      Decl: name='i', quals=[], storage=[] (at pp.c:18887)
        TypeDecl: declname='i', quals=[] (at pp.c:18887)
          IdentifierType: names=['int'] (at None)
      Assignment: op='=' (at pp.c:18890)
        ID: name='UniqueReceiveP__recycleSourceElement' (at pp.c:18890)
        ID: name='UniqueReceiveP__INVALID_ELEMENT' (at pp.c:18890)
      Compound:  (at pp.c:18892)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:18892)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:18892)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:18892)
        Compound:  (at pp.c:18894)
          For:  (at pp.c:18895)
            Assignment: op='=' (at pp.c:18895)
              ID: name='i' (at pp.c:18895)
              Constant: type='int', value='0' (at pp.c:18895)
            BinaryOp: op='<' (at pp.c:18895)
              ID: name='i' (at pp.c:18895)
              Constant: type='int', value='4' (at pp.c:18895)
            UnaryOp: op='p++' (at pp.c:18895)
              ID: name='i' (at pp.c:18895)
            Compound:  (at pp.c:18895)
              If:  (at pp.c:18896)
                BinaryOp: op='==' (at pp.c:18896)
                  StructRef: type='.' (at pp.c:18896)
                    ArrayRef:  (at pp.c:18896)
                      ID: name='UniqueReceiveP__receivedMessages' (at pp.c:18896)
                      ID: name='i' (at pp.c:18896)
                    ID: name='source' (at pp.c:18896)
                  ID: name='msgSource' (at pp.c:18896)
                Compound:  (at pp.c:18896)
                  If:  (at pp.c:18897)
                    BinaryOp: op='==' (at pp.c:18897)
                      StructRef: type='.' (at pp.c:18897)
                        ArrayRef:  (at pp.c:18897)
                          ID: name='UniqueReceiveP__receivedMessages' (at pp.c:18897)
                          ID: name='i' (at pp.c:18897)
                        ID: name='dsn' (at pp.c:18897)
                      ID: name='msgDsn' (at pp.c:18897)
                    Compound:  (at pp.c:18897)
                      Compound:  (at pp.c:18899)
                        Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:18900)
                          TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:18900)
                            IdentifierType: names=['char', 'unsigned'] (at None)
                          ID: name='TRUE' (at pp.c:18902)
                        Compound:  (at pp.c:18904)
                          FuncCall:  (at None)
                            ID: name='__nesc_atomic_end' (at pp.c:18906)
                            ExprList:  (at pp.c:18906)
                              ID: name='__nesc_atomic' (at pp.c:18906)
                          Return:  (at pp.c:18908)
                            ID: name='__nesc_temp' (at pp.c:18908)
                  Assignment: op='=' (at pp.c:18913)
                    ID: name='UniqueReceiveP__recycleSourceElement' (at pp.c:18913)
                    ID: name='i' (at pp.c:18913)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:18918)
          ExprList:  (at pp.c:18918)
            ID: name='__nesc_atomic' (at pp.c:18918)
      Return:  (at pp.c:18920)
        ID: name='FALSE' (at pp.c:18920)
  FuncDef:  (at pp.c:18924)
    Decl: name='UniqueReceiveP__CC2420PacketBody__getHeader', quals=[], storage=['static', 'inline'] (at pp.c:18924)
      FuncDecl: quals=None (at pp.c:18924)
        ParamList:  (at pp.c:18924)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18924)
            PtrDecl: quals=[] (at pp.c:18924)
              TypeDecl: declname='msg', quals=[] (at pp.c:18924)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18924)
          TypeDecl: declname='UniqueReceiveP__CC2420PacketBody__getHeader', quals=[] (at pp.c:18924)
            IdentifierType: names=['cc2420_header_t'] (at None)
    Compound:  (at pp.c:18924)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18926)
        PtrDecl: quals=[] (at pp.c:18926)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18926)
            Struct: name='cc2420_header_t', packed=False (at pp.c:18926)
      Assignment: op='=' (at pp.c:18930)
        ID: name='__nesc_result' (at pp.c:18930)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getHeader' (at pp.c:18930)
          ExprList:  (at pp.c:18930)
            ID: name='msg' (at pp.c:18930)
      Return:  (at pp.c:18934)
        ID: name='__nesc_result' (at pp.c:18934)
  FuncDef:  (at pp.c:18939)
    Decl: name='UniqueReceiveP__getSourceKey', quals=[], storage=['inline', 'static'] (at pp.c:18939)
      FuncDecl: quals=None (at pp.c:18939)
        ParamList:  (at pp.c:18939)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18939)
            PtrDecl: quals=[] (at pp.c:18939)
              TypeDecl: declname='msg', quals=[] (at pp.c:18939)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='UniqueReceiveP__getSourceKey', quals=[] (at pp.c:18939)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:18941)
      Decl: name='hdr', quals=[], storage=[] (at pp.c:18942)
        PtrDecl: quals=[] (at pp.c:18942)
          TypeDecl: declname='hdr', quals=[] (at pp.c:18942)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='UniqueReceiveP__CC2420PacketBody__getHeader' (at pp.c:18942)
          ExprList:  (at pp.c:18942)
            ID: name='msg' (at pp.c:18942)
      Decl: name='s_mode', quals=[], storage=[] (at pp.c:18943)
        TypeDecl: declname='s_mode', quals=[] (at pp.c:18943)
          IdentifierType: names=['int'] (at None)
        BinaryOp: op='&' (at None)
          BinaryOp: op='>>' (at None)
            FuncCall:  (at None)
              ID: name='__nesc_ntoh_leuint16' (at pp.c:18943)
              ExprList:  (at pp.c:18943)
                StructRef: type='.' (at pp.c:18943)
                  StructRef: type='->' (at pp.c:18943)
                    ID: name='hdr' (at pp.c:18943)
                    ID: name='fcf' (at pp.c:18943)
                  ID: name='nxdata' (at pp.c:18943)
            ID: name='IEEE154_FCF_SRC_ADDR_MODE' (at pp.c:18943)
          Constant: type='int', value='0x3' (at pp.c:18943)
      Decl: name='d_mode', quals=[], storage=[] (at pp.c:18944)
        TypeDecl: declname='d_mode', quals=[] (at pp.c:18944)
          IdentifierType: names=['int'] (at None)
        BinaryOp: op='&' (at None)
          BinaryOp: op='>>' (at None)
            FuncCall:  (at None)
              ID: name='__nesc_ntoh_leuint16' (at pp.c:18944)
              ExprList:  (at pp.c:18944)
                StructRef: type='.' (at pp.c:18944)
                  StructRef: type='->' (at pp.c:18944)
                    ID: name='hdr' (at pp.c:18944)
                    ID: name='fcf' (at pp.c:18944)
                  ID: name='nxdata' (at pp.c:18944)
            ID: name='IEEE154_FCF_DEST_ADDR_MODE' (at pp.c:18944)
          Constant: type='int', value='0x3' (at pp.c:18944)
      Decl: name='s_offset', quals=[], storage=[] (at pp.c:18945)
        TypeDecl: declname='s_offset', quals=[] (at pp.c:18945)
          IdentifierType: names=['int'] (at None)
        Constant: type='int', value='2' (at pp.c:18945)
      Decl: name='s_len', quals=[], storage=[] (at pp.c:18947)
        TypeDecl: declname='s_len', quals=[] (at pp.c:18947)
          IdentifierType: names=['int'] (at None)
        Constant: type='int', value='2' (at pp.c:18947)
      Decl: name='key', quals=[], storage=[] (at pp.c:18948)
        TypeDecl: declname='key', quals=[] (at pp.c:18948)
          IdentifierType: names=['uint16_t'] (at None)
        Constant: type='int', value='0' (at pp.c:18948)
      Decl: name='current', quals=[], storage=[] (at pp.c:18949)
        PtrDecl: quals=[] (at pp.c:18949)
          TypeDecl: declname='current', quals=[] (at pp.c:18949)
            IdentifierType: names=['uint8_t'] (at None)
        Cast:  (at None)
          Typename: quals=[] (at None)
            PtrDecl: quals=[] (at pp.c:18949)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['uint8_t'] (at None)
          UnaryOp: op='&' (at pp.c:18949)
            StructRef: type='->' (at pp.c:18949)
              ID: name='hdr' (at pp.c:18949)
              ID: name='dest' (at pp.c:18949)
      Decl: name='i', quals=[], storage=[] (at pp.c:18950)
        TypeDecl: declname='i', quals=[] (at pp.c:18950)
          IdentifierType: names=['int'] (at None)
      If:  (at pp.c:18952)
        BinaryOp: op='==' (at pp.c:18952)
          ID: name='s_mode' (at pp.c:18952)
          ID: name='IEEE154_ADDR_EXT' (at pp.c:18952)
        Compound:  (at pp.c:18952)
          Assignment: op='=' (at pp.c:18953)
            ID: name='s_len' (at pp.c:18953)
            Constant: type='int', value='8' (at pp.c:18953)
      If:  (at pp.c:18955)
        BinaryOp: op='==' (at pp.c:18955)
          ID: name='d_mode' (at pp.c:18955)
          ID: name='IEEE154_ADDR_EXT' (at pp.c:18955)
        Compound:  (at pp.c:18955)
          Assignment: op='=' (at pp.c:18956)
            ID: name='s_offset' (at pp.c:18956)
            Constant: type='int', value='8' (at pp.c:18956)
      Assignment: op='+=' (at pp.c:18959)
        ID: name='current' (at pp.c:18959)
        ID: name='s_offset' (at pp.c:18959)
      For:  (at pp.c:18961)
        Assignment: op='=' (at pp.c:18961)
          ID: name='i' (at pp.c:18961)
          Constant: type='int', value='0' (at pp.c:18961)
        BinaryOp: op='<' (at pp.c:18961)
          ID: name='i' (at pp.c:18961)
          ID: name='s_len' (at pp.c:18961)
        UnaryOp: op='p++' (at pp.c:18961)
          ID: name='i' (at pp.c:18961)
        Compound:  (at pp.c:18961)
          Assignment: op='+=' (at pp.c:18962)
            ID: name='key' (at pp.c:18962)
            ArrayRef:  (at pp.c:18962)
              ID: name='current' (at pp.c:18962)
              ID: name='i' (at pp.c:18962)
      Return:  (at pp.c:18964)
        ID: name='key' (at pp.c:18964)
  FuncDef:  (at pp.c:18968)
    Decl: name='UniqueReceiveP__SubReceive__receive', quals=[], storage=['inline', 'static'] (at pp.c:18968)
      FuncDecl: quals=None (at pp.c:18968)
        ParamList:  (at pp.c:18968)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18968)
            PtrDecl: quals=[] (at pp.c:18968)
              TypeDecl: declname='msg', quals=[] (at pp.c:18968)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:18968)
            PtrDecl: quals=[] (at pp.c:18968)
              TypeDecl: declname='payload', quals=[] (at pp.c:18968)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:18969)
            TypeDecl: declname='len', quals=[] (at pp.c:18969)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18968)
          TypeDecl: declname='UniqueReceiveP__SubReceive__receive', quals=[] (at pp.c:18968)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:18971)
      Decl: name='msgSource', quals=[], storage=[] (at pp.c:18973)
        TypeDecl: declname='msgSource', quals=[] (at pp.c:18973)
          IdentifierType: names=['uint16_t'] (at None)
        FuncCall:  (at None)
          ID: name='UniqueReceiveP__getSourceKey' (at pp.c:18973)
          ExprList:  (at pp.c:18973)
            ID: name='msg' (at pp.c:18973)
      Decl: name='msgDsn', quals=[], storage=[] (at pp.c:18974)
        TypeDecl: declname='msgDsn', quals=[] (at pp.c:18974)
          IdentifierType: names=['uint8_t'] (at None)
        FuncCall:  (at None)
          ID: name='__nesc_ntoh_leuint8' (at pp.c:18974)
          ExprList:  (at None)
            StructRef: type='.' (at None)
              StructRef: type='->' (at None)
                FuncCall:  (at None)
                  ID: name='UniqueReceiveP__CC2420PacketBody__getHeader' (at pp.c:18974)
                  ExprList:  (at pp.c:18974)
                    ID: name='msg' (at pp.c:18974)
                ID: name='dsn' (at pp.c:18974)
              ID: name='nxdata' (at pp.c:18974)
      If:  (at pp.c:18976)
        FuncCall:  (at None)
          ID: name='UniqueReceiveP__hasSeen' (at pp.c:18976)
          ExprList:  (at pp.c:18976)
            ID: name='msgSource' (at pp.c:18976)
            ID: name='msgDsn' (at pp.c:18976)
        Compound:  (at pp.c:18976)
          Return:  (at pp.c:18977)
            FuncCall:  (at None)
              ID: name='UniqueReceiveP__DuplicateReceive__receive' (at pp.c:18977)
              ExprList:  (at pp.c:18977)
                ID: name='msg' (at pp.c:18977)
                ID: name='payload' (at pp.c:18977)
                ID: name='len' (at pp.c:18977)
        Compound:  (at pp.c:18981)
          FuncCall:  (at None)
            ID: name='UniqueReceiveP__insert' (at pp.c:18982)
            ExprList:  (at pp.c:18982)
              ID: name='msgSource' (at pp.c:18982)
              ID: name='msgDsn' (at pp.c:18982)
          Return:  (at pp.c:18983)
            FuncCall:  (at None)
              ID: name='UniqueReceiveP__Receive__receive' (at pp.c:18983)
              ExprList:  (at pp.c:18983)
                ID: name='msg' (at pp.c:18983)
                ID: name='payload' (at pp.c:18983)
                ID: name='len' (at pp.c:18983)
  FuncDef:  (at pp.c:18988)
    Decl: name='CC2420ReceiveP__Receive__receive', quals=[], storage=['static', 'inline'] (at pp.c:18988)
      FuncDecl: quals=None (at pp.c:18988)
        ParamList:  (at pp.c:18988)
          Decl: name='msg', quals=[], storage=[] (at pp.c:18988)
            PtrDecl: quals=[] (at pp.c:18988)
              TypeDecl: declname='msg', quals=[] (at pp.c:18988)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='payload', quals=[], storage=[] (at pp.c:18988)
            PtrDecl: quals=[] (at pp.c:18988)
              TypeDecl: declname='payload', quals=[] (at pp.c:18988)
                IdentifierType: names=['void'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:18988)
            TypeDecl: declname='len', quals=[] (at pp.c:18988)
              IdentifierType: names=['uint8_t'] (at None)
        PtrDecl: quals=[] (at pp.c:18988)
          TypeDecl: declname='CC2420ReceiveP__Receive__receive', quals=[] (at pp.c:18988)
            IdentifierType: names=['message_t'] (at None)
    Compound:  (at pp.c:18988)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:18990)
        PtrDecl: quals=[] (at pp.c:18990)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:18990)
            Struct: name='message_t', packed=False (at pp.c:18990)
      Assignment: op='=' (at pp.c:18994)
        ID: name='__nesc_result' (at pp.c:18994)
        FuncCall:  (at None)
          ID: name='UniqueReceiveP__SubReceive__receive' (at pp.c:18994)
          ExprList:  (at pp.c:18994)
            ID: name='msg' (at pp.c:18994)
            ID: name='payload' (at pp.c:18994)
            ID: name='len' (at pp.c:18994)
      Return:  (at pp.c:18998)
        ID: name='__nesc_result' (at pp.c:18998)
  FuncDef:  (at pp.c:19003)
    Decl: name='CC2420ControlP__LocalIeeeEui64__getId', quals=[], storage=['static', 'inline'] (at pp.c:19003)
      FuncDecl: quals=None (at pp.c:19003)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__LocalIeeeEui64__getId', quals=[] (at pp.c:19003)
          IdentifierType: names=['ieee_eui64_t'] (at None)
    Compound:  (at pp.c:19003)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19005)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19005)
          Struct: name='ieee_eui64', packed=False (at pp.c:19005)
      Assignment: op='=' (at pp.c:19009)
        ID: name='__nesc_result' (at pp.c:19009)
        FuncCall:  (at None)
          ID: name='DallasId48ToIeeeEui64C__LocalIeeeEui64__getId' (at pp.c:19009)
      Return:  (at pp.c:19013)
        ID: name='__nesc_result' (at pp.c:19013)
  FuncDef:  (at pp.c:19018)
    Decl: name='CC2420ControlP__CC2420Config__getExtAddr', quals=[], storage=['inline', 'static'] (at pp.c:19018)
      FuncDecl: quals=None (at pp.c:19018)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Config__getExtAddr', quals=[] (at pp.c:19018)
          IdentifierType: names=['ieee_eui64_t'] (at None)
    Compound:  (at pp.c:19020)
      Return:  (at pp.c:19021)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__LocalIeeeEui64__getId' (at pp.c:19021)
  FuncDef:  (at pp.c:19025)
    Decl: name='CC2420ReceiveP__CC2420Config__getExtAddr', quals=[], storage=['static', 'inline'] (at pp.c:19025)
      FuncDecl: quals=None (at pp.c:19025)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CC2420Config__getExtAddr', quals=[] (at pp.c:19025)
          IdentifierType: names=['ieee_eui64_t'] (at None)
    Compound:  (at pp.c:19025)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19027)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19027)
          Struct: name='ieee_eui64', packed=False (at pp.c:19027)
      Assignment: op='=' (at pp.c:19031)
        ID: name='__nesc_result' (at pp.c:19031)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__CC2420Config__getExtAddr' (at pp.c:19031)
      Return:  (at pp.c:19035)
        ID: name='__nesc_result' (at pp.c:19035)
  FuncDef:  (at pp.c:19044)
    Decl: name='CC2420ReceiveP__CC2420Config__getShortAddr', quals=[], storage=['static', 'inline'] (at pp.c:19044)
      FuncDecl: quals=None (at pp.c:19044)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CC2420Config__getShortAddr', quals=[] (at pp.c:19044)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:19044)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19046)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19046)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19050)
        ID: name='__nesc_result' (at pp.c:19050)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__CC2420Config__getShortAddr' (at pp.c:19050)
      Return:  (at pp.c:19054)
        ID: name='__nesc_result' (at pp.c:19054)
  FuncDef:  (at pp.c:19059)
    Decl: name='CC2420ControlP__CC2420Config__isAddressRecognitionEnabled', quals=[], storage=['inline', 'static'] (at pp.c:19059)
      FuncDecl: quals=None (at pp.c:19059)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Config__isAddressRecognitionEnabled', quals=[] (at pp.c:19059)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:19061)
      Compound:  (at pp.c:19062)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:19062)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:19062)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:19062)
        Compound:  (at pp.c:19064)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:19065)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:19065)
              IdentifierType: names=['char', 'unsigned'] (at None)
            ID: name='CC2420ControlP__addressRecognition' (at pp.c:19067)
          Compound:  (at pp.c:19069)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:19071)
              ExprList:  (at pp.c:19071)
                ID: name='__nesc_atomic' (at pp.c:19071)
            Return:  (at pp.c:19073)
              ID: name='__nesc_temp' (at pp.c:19073)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:19077)
          ExprList:  (at pp.c:19077)
            ID: name='__nesc_atomic' (at pp.c:19077)
  FuncDef:  (at pp.c:19081)
    Decl: name='CC2420ReceiveP__CC2420Config__isAddressRecognitionEnabled', quals=[], storage=['static', 'inline'] (at pp.c:19081)
      FuncDecl: quals=None (at pp.c:19081)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CC2420Config__isAddressRecognitionEnabled', quals=[] (at pp.c:19081)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:19081)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19083)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19083)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19087)
        ID: name='__nesc_result' (at pp.c:19087)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__CC2420Config__isAddressRecognitionEnabled' (at pp.c:19087)
      Return:  (at pp.c:19091)
        ID: name='__nesc_result' (at pp.c:19091)
  FuncDef:  (at pp.c:19096)
    Decl: name='CC2420ReceiveP__CC2420PacketBody__getHeader', quals=[], storage=['static', 'inline'] (at pp.c:19096)
      FuncDecl: quals=None (at pp.c:19096)
        ParamList:  (at pp.c:19096)
          Decl: name='msg', quals=[], storage=[] (at pp.c:19096)
            PtrDecl: quals=[] (at pp.c:19096)
              TypeDecl: declname='msg', quals=[] (at pp.c:19096)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:19096)
          TypeDecl: declname='CC2420ReceiveP__CC2420PacketBody__getHeader', quals=[] (at pp.c:19096)
            IdentifierType: names=['cc2420_header_t'] (at None)
    Compound:  (at pp.c:19096)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19098)
        PtrDecl: quals=[] (at pp.c:19098)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19098)
            Struct: name='cc2420_header_t', packed=False (at pp.c:19098)
      Assignment: op='=' (at pp.c:19102)
        ID: name='__nesc_result' (at pp.c:19102)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getHeader' (at pp.c:19102)
          ExprList:  (at pp.c:19102)
            ID: name='msg' (at pp.c:19102)
      Return:  (at pp.c:19106)
        ID: name='__nesc_result' (at pp.c:19106)
  FuncDef:  (at pp.c:19111)
    Decl: name='CC2420ReceiveP__passesAddressCheck', quals=[], storage=['inline', 'static'] (at pp.c:19111)
      FuncDecl: quals=None (at pp.c:19111)
        ParamList:  (at pp.c:19111)
          Decl: name='msg', quals=[], storage=[] (at pp.c:19111)
            PtrDecl: quals=[] (at pp.c:19111)
              TypeDecl: declname='msg', quals=[] (at pp.c:19111)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ReceiveP__passesAddressCheck', quals=[] (at pp.c:19111)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:19113)
      Decl: name='header', quals=[], storage=[] (at pp.c:19114)
        PtrDecl: quals=[] (at pp.c:19114)
          TypeDecl: declname='header', quals=[] (at pp.c:19114)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420ReceiveP__CC2420PacketBody__getHeader' (at pp.c:19114)
          ExprList:  (at pp.c:19114)
            ID: name='msg' (at pp.c:19114)
      Decl: name='mode', quals=[], storage=[] (at pp.c:19115)
        TypeDecl: declname='mode', quals=[] (at pp.c:19115)
          IdentifierType: names=['int'] (at None)
        BinaryOp: op='&' (at None)
          BinaryOp: op='>>' (at None)
            FuncCall:  (at None)
              ID: name='__nesc_ntoh_leuint16' (at pp.c:19115)
              ExprList:  (at pp.c:19115)
                StructRef: type='.' (at pp.c:19115)
                  StructRef: type='->' (at pp.c:19115)
                    ID: name='header' (at pp.c:19115)
                    ID: name='fcf' (at pp.c:19115)
                  ID: name='nxdata' (at pp.c:19115)
            ID: name='IEEE154_FCF_DEST_ADDR_MODE' (at pp.c:19115)
          Constant: type='int', value='3' (at pp.c:19115)
      Decl: name='ext_addr', quals=[], storage=[] (at pp.c:19116)
        PtrDecl: quals=[] (at pp.c:19116)
          TypeDecl: declname='ext_addr', quals=[] (at pp.c:19116)
            IdentifierType: names=['ieee_eui64_t'] (at None)
      If:  (at pp.c:19118)
        UnaryOp: op='!' (at None)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__CC2420Config__isAddressRecognitionEnabled' (at pp.c:19118)
        Compound:  (at pp.c:19118)
          Return:  (at pp.c:19119)
            ID: name='TRUE' (at pp.c:19119)
      If:  (at pp.c:19122)
        BinaryOp: op='==' (at pp.c:19122)
          ID: name='mode' (at pp.c:19122)
          ID: name='IEEE154_ADDR_SHORT' (at pp.c:19122)
        Compound:  (at pp.c:19122)
          Return:  (at pp.c:19123)
            BinaryOp: op='||' (at None)
              BinaryOp: op='==' (at None)
                FuncCall:  (at None)
                  ID: name='__nesc_ntoh_leuint16' (at pp.c:19123)
                  ExprList:  (at pp.c:19123)
                    StructRef: type='.' (at pp.c:19123)
                      StructRef: type='->' (at pp.c:19123)
                        ID: name='header' (at pp.c:19123)
                        ID: name='dest' (at pp.c:19123)
                      ID: name='nxdata' (at pp.c:19123)
                FuncCall:  (at None)
                  ID: name='CC2420ReceiveP__CC2420Config__getShortAddr' (at pp.c:19123)
              BinaryOp: op='==' (at None)
                FuncCall:  (at None)
                  ID: name='__nesc_ntoh_leuint16' (at pp.c:19124)
                  ExprList:  (at pp.c:19124)
                    StructRef: type='.' (at pp.c:19124)
                      StructRef: type='->' (at pp.c:19124)
                        ID: name='header' (at pp.c:19124)
                        ID: name='dest' (at pp.c:19124)
                      ID: name='nxdata' (at pp.c:19124)
                ID: name='IEEE154_BROADCAST_ADDR' (at pp.c:19124)
        Compound:  (at pp.c:19126)
          If:  (at pp.c:19128)
            BinaryOp: op='==' (at pp.c:19128)
              ID: name='mode' (at pp.c:19128)
              ID: name='IEEE154_ADDR_EXT' (at pp.c:19128)
            Compound:  (at pp.c:19128)
              Decl: name='local_addr', quals=[], storage=[] (at pp.c:19129)
                TypeDecl: declname='local_addr', quals=[] (at pp.c:19129)
                  IdentifierType: names=['ieee_eui64_t'] (at None)
                FuncCall:  (at None)
                  ID: name='CC2420ReceiveP__CC2420Config__getExtAddr' (at pp.c:19129)
              Assignment: op='=' (at pp.c:19132)
                ID: name='ext_addr' (at pp.c:19132)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    PtrDecl: quals=[] (at pp.c:19132)
                      TypeDecl: declname=None, quals=[] (at None)
                        IdentifierType: names=['ieee_eui64_t'] (at None)
                  UnaryOp: op='&' (at pp.c:19132)
                    StructRef: type='->' (at pp.c:19132)
                      ID: name='header' (at pp.c:19132)
                      ID: name='dest' (at pp.c:19132)
              Return:  (at pp.c:19133)
                BinaryOp: op='==' (at None)
                  FuncCall:  (at None)
                    ID: name='memcmp' (at pp.c:19133)
                    ExprList:  (at pp.c:19133)
                      StructRef: type='->' (at pp.c:19133)
                        ID: name='ext_addr' (at pp.c:19133)
                        ID: name='data' (at pp.c:19133)
                      StructRef: type='.' (at pp.c:19133)
                        ID: name='local_addr' (at pp.c:19133)
                        ID: name='data' (at pp.c:19133)
                      ID: name='IEEE_EUI64_LENGTH' (at pp.c:19133)
                  Constant: type='int', value='0' (at pp.c:19133)
            Compound:  (at pp.c:19137)
              Return:  (at pp.c:19139)
                ID: name='FALSE' (at pp.c:19139)
  FuncDef:  (at pp.c:19145)
    Decl: name='CC2420ReceiveP__CC2420PacketBody__getMetadata', quals=[], storage=['static', 'inline'] (at pp.c:19145)
      FuncDecl: quals=None (at pp.c:19145)
        ParamList:  (at pp.c:19145)
          Decl: name='msg', quals=[], storage=[] (at pp.c:19145)
            PtrDecl: quals=[] (at pp.c:19145)
              TypeDecl: declname='msg', quals=[] (at pp.c:19145)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:19145)
          TypeDecl: declname='CC2420ReceiveP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:19145)
            IdentifierType: names=['cc2420_metadata_t'] (at None)
    Compound:  (at pp.c:19145)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19147)
        PtrDecl: quals=[] (at pp.c:19147)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19147)
            Struct: name='cc2420_metadata_t', packed=False (at pp.c:19147)
      Assignment: op='=' (at pp.c:19151)
        ID: name='__nesc_result' (at pp.c:19151)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getMetadata' (at pp.c:19151)
          ExprList:  (at pp.c:19151)
            ID: name='msg' (at pp.c:19151)
      Return:  (at pp.c:19155)
        ID: name='__nesc_result' (at pp.c:19155)
  FuncDef:  (at pp.c:19160)
    Decl: name='CC2420ReceiveP__receiveDone_task__runTask', quals=[], storage=['inline', 'static'] (at pp.c:19160)
      FuncDecl: quals=None (at pp.c:19160)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__receiveDone_task__runTask', quals=[] (at pp.c:19160)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19162)
      Decl: name='metadata', quals=[], storage=[] (at pp.c:19163)
        PtrDecl: quals=[] (at pp.c:19163)
          TypeDecl: declname='metadata', quals=[] (at pp.c:19163)
            IdentifierType: names=['cc2420_metadata_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420ReceiveP__CC2420PacketBody__getMetadata' (at pp.c:19163)
          ExprList:  (at pp.c:19163)
            ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:19163)
      Decl: name='header', quals=[], storage=[] (at pp.c:19164)
        PtrDecl: quals=[] (at pp.c:19164)
          TypeDecl: declname='header', quals=[] (at pp.c:19164)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420ReceiveP__CC2420PacketBody__getHeader' (at pp.c:19164)
          ExprList:  (at pp.c:19164)
            ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:19164)
      Decl: name='length', quals=[], storage=[] (at pp.c:19165)
        TypeDecl: declname='length', quals=[] (at pp.c:19165)
          IdentifierType: names=['uint8_t'] (at None)
        FuncCall:  (at None)
          ID: name='__nesc_ntoh_leuint8' (at pp.c:19165)
          ExprList:  (at pp.c:19165)
            StructRef: type='.' (at pp.c:19165)
              StructRef: type='->' (at pp.c:19165)
                ID: name='header' (at pp.c:19165)
                ID: name='length' (at pp.c:19165)
              ID: name='nxdata' (at pp.c:19165)
      Decl: name='tmpLen', quals=[], storage=[] (at pp.c:19166)
        TypeDecl: declname='tmpLen', quals=[] (at pp.c:19166)
          IdentifierType: names=['uint8_t'] (at None)
        BinaryOp: op='-' (at pp.c:19166)
          UnaryOp: op='sizeof' (at pp.c:19166)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['message_t'] (at None)
          BinaryOp: op='-' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['size_t'] (at None)
              UnaryOp: op='&' (at None)
                StructRef: type='->' (at None)
                  Cast:  (at None)
                    Typename: quals=[] (at None)
                      PtrDecl: quals=[] (at pp.c:19166)
                        TypeDecl: declname=None, quals=[] (at None)
                          IdentifierType: names=['message_t'] (at None)
                    Constant: type='int', value='0' (at pp.c:19166)
                  ID: name='data' (at pp.c:19166)
            UnaryOp: op='sizeof' (at pp.c:19166)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['cc2420_header_t'] (at None)
      Decl: name='buf', quals=[], storage=[] (at pp.c:19167)
        PtrDecl: quals=[] (at pp.c:19167)
          TypeDecl: declname='buf', quals=[] (at pp.c:19167)
            IdentifierType: names=['uint8_t'] (at None)
        Cast:  (at None)
          Typename: quals=[] (at None)
            PtrDecl: quals=[] (at pp.c:19167)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['uint8_t'] (at None)
          ID: name='header' (at pp.c:19167)
      FuncCall:  (at None)
        ID: name='__nesc_hton_int8' (at pp.c:19169)
        ExprList:  (at pp.c:19169)
          StructRef: type='.' (at pp.c:19169)
            StructRef: type='->' (at pp.c:19169)
              ID: name='metadata' (at pp.c:19169)
              ID: name='crc' (at pp.c:19169)
            ID: name='nxdata' (at pp.c:19169)
          BinaryOp: op='>>' (at pp.c:19169)
            ArrayRef:  (at pp.c:19169)
              ID: name='buf' (at pp.c:19169)
              ID: name='length' (at pp.c:19169)
            Constant: type='int', value='7' (at pp.c:19169)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint8' (at pp.c:19170)
        ExprList:  (at pp.c:19170)
          StructRef: type='.' (at pp.c:19170)
            StructRef: type='->' (at pp.c:19170)
              ID: name='metadata' (at pp.c:19170)
              ID: name='lqi' (at pp.c:19170)
            ID: name='nxdata' (at pp.c:19170)
          BinaryOp: op='&' (at pp.c:19170)
            ArrayRef:  (at pp.c:19170)
              ID: name='buf' (at pp.c:19170)
              ID: name='length' (at pp.c:19170)
            Constant: type='int', value='0x7f' (at pp.c:19170)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint8' (at pp.c:19171)
        ExprList:  (at pp.c:19171)
          StructRef: type='.' (at pp.c:19171)
            StructRef: type='->' (at pp.c:19171)
              ID: name='metadata' (at pp.c:19171)
              ID: name='rssi' (at pp.c:19171)
            ID: name='nxdata' (at pp.c:19171)
          ArrayRef:  (at pp.c:19171)
            ID: name='buf' (at pp.c:19171)
            BinaryOp: op='-' (at pp.c:19171)
              ID: name='length' (at pp.c:19171)
              Constant: type='int', value='1' (at pp.c:19171)
      If:  (at pp.c:19173)
        BinaryOp: op='&&' (at None)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__passesAddressCheck' (at pp.c:19173)
            ExprList:  (at pp.c:19173)
              ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:19173)
          BinaryOp: op='>=' (at pp.c:19173)
            ID: name='length' (at pp.c:19173)
            ID: name='CC2420_SIZE' (at pp.c:19173)
        Compound:  (at pp.c:19173)
          Assignment: op='=' (at pp.c:19175)
            ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:19175)
            FuncCall:  (at None)
              ID: name='CC2420ReceiveP__Receive__receive' (at pp.c:19175)
              ExprList:  (at pp.c:19175)
                ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:19175)
                StructRef: type='->' (at pp.c:19175)
                  ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:19175)
                  ID: name='data' (at pp.c:19175)
                BinaryOp: op='-' (at pp.c:19176)
                  ID: name='length' (at pp.c:19176)
                  ID: name='CC2420_SIZE' (at pp.c:19176)
      Compound:  (at pp.c:19178)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:19178)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:19178)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:19178)
        Assignment: op='=' (at pp.c:19180)
          ID: name='CC2420ReceiveP__receivingPacket' (at pp.c:19180)
          ID: name='FALSE' (at pp.c:19180)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:19182)
          ExprList:  (at pp.c:19182)
            ID: name='__nesc_atomic' (at pp.c:19182)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__waitForNextPacket' (at pp.c:19183)
  FuncDef:  (at pp.c:19187)
    Decl: name='dallasid48checkCrc', quals=[], storage=['inline', 'static'] (at pp.c:19187)
      FuncDecl: quals=None (at pp.c:19187)
        ParamList:  (at pp.c:19187)
          Decl: name='id', quals=['const'], storage=[] (at pp.c:19187)
            PtrDecl: quals=[] (at pp.c:19187)
              TypeDecl: declname='id', quals=['const'] (at pp.c:19187)
                IdentifierType: names=['dallasid48_serial_t'] (at None)
        TypeDecl: declname='dallasid48checkCrc', quals=[] (at pp.c:19187)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:19189)
      Decl: name='crc', quals=[], storage=[] (at pp.c:19190)
        TypeDecl: declname='crc', quals=[] (at pp.c:19190)
          IdentifierType: names=['uint8_t'] (at None)
        Constant: type='int', value='0' (at pp.c:19190)
      Decl: name='idx', quals=[], storage=[] (at pp.c:19191)
        TypeDecl: declname='idx', quals=[] (at pp.c:19191)
          IdentifierType: names=['uint8_t'] (at None)
      For:  (at pp.c:19194)
        Assignment: op='=' (at pp.c:19194)
          ID: name='idx' (at pp.c:19194)
          Constant: type='int', value='0' (at pp.c:19194)
        BinaryOp: op='<' (at pp.c:19194)
          ID: name='idx' (at pp.c:19194)
          ID: name='DALLASID48_DATA_LENGTH' (at pp.c:19194)
        UnaryOp: op='p++' (at pp.c:19194)
          ID: name='idx' (at pp.c:19194)
        Compound:  (at pp.c:19194)
          Decl: name='i', quals=[], storage=[] (at pp.c:19195)
            TypeDecl: declname='i', quals=[] (at pp.c:19195)
              IdentifierType: names=['uint8_t'] (at None)
          Assignment: op='=' (at pp.c:19198)
            ID: name='crc' (at pp.c:19198)
            BinaryOp: op='^' (at pp.c:19198)
              ID: name='crc' (at pp.c:19198)
              ArrayRef:  (at pp.c:19198)
                StructRef: type='->' (at pp.c:19198)
                  ID: name='id' (at pp.c:19198)
                  ID: name='data' (at pp.c:19198)
                ID: name='idx' (at pp.c:19198)
          For:  (at pp.c:19199)
            Assignment: op='=' (at pp.c:19199)
              ID: name='i' (at pp.c:19199)
              Constant: type='int', value='0' (at pp.c:19199)
            BinaryOp: op='<' (at pp.c:19199)
              ID: name='i' (at pp.c:19199)
              Constant: type='int', value='8' (at pp.c:19199)
            UnaryOp: op='p++' (at pp.c:19199)
              ID: name='i' (at pp.c:19199)
            Compound:  (at pp.c:19199)
              If:  (at pp.c:19200)
                BinaryOp: op='&' (at pp.c:19200)
                  ID: name='crc' (at pp.c:19200)
                  Constant: type='int', value='0x01' (at pp.c:19200)
                Compound:  (at pp.c:19200)
                  Assignment: op='=' (at pp.c:19201)
                    ID: name='crc' (at pp.c:19201)
                    BinaryOp: op='^' (at pp.c:19201)
                      BinaryOp: op='>>' (at pp.c:19201)
                        ID: name='crc' (at pp.c:19201)
                        Constant: type='int', value='1' (at pp.c:19201)
                      Constant: type='int', value='0x8C' (at pp.c:19201)
                Compound:  (at pp.c:19203)
                  Assignment: op='>>=' (at pp.c:19204)
                    ID: name='crc' (at pp.c:19204)
                    Constant: type='int', value='1' (at pp.c:19204)
      Return:  (at pp.c:19208)
        BinaryOp: op='==' (at pp.c:19208)
          ID: name='crc' (at pp.c:19208)
          Constant: type='int', value='0' (at pp.c:19208)
  FuncDef:  (at pp.c:19212)
    Decl: name='OneWireMasterC__BusyWait__wait', quals=[], storage=['static', 'inline'] (at pp.c:19212)
      FuncDecl: quals=None (at pp.c:19212)
        ParamList:  (at pp.c:19212)
          Decl: name='dt', quals=[], storage=[] (at pp.c:19212)
            TypeDecl: declname='dt', quals=[] (at pp.c:19212)
              IdentifierType: names=['OneWireMasterC__BusyWait__size_type'] (at None)
        TypeDecl: declname='OneWireMasterC__BusyWait__wait', quals=[] (at pp.c:19212)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19212)
      FuncCall:  (at None)
        ID: name='BusyWaitCounterC__0__BusyWait__wait' (at pp.c:19214)
        ExprList:  (at pp.c:19214)
          ID: name='dt' (at pp.c:19214)
  FuncDef:  (at pp.c:19219)
    Decl: name='HplMsp430GeneralIOP__12__IO__getRaw', quals=[], storage=['inline', 'static'] (at pp.c:19219)
      FuncDecl: quals=None (at pp.c:19219)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__12__IO__getRaw', quals=[] (at pp.c:19219)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:19221)
      Return:  (at pp.c:19223)
        BinaryOp: op='&' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:19223)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='40U' (at pp.c:19223)
          BinaryOp: op='<<' (at pp.c:19223)
            Constant: type='int', value='0x01' (at pp.c:19223)
            Constant: type='int', value='4' (at pp.c:19223)
  FuncDef:  (at pp.c:19227)
    Decl: name='HplMsp430GeneralIOP__12__IO__get', quals=[], storage=['inline', 'static'] (at pp.c:19227)
      FuncDecl: quals=None (at pp.c:19227)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__12__IO__get', quals=[] (at pp.c:19227)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:19229)
      Return:  (at pp.c:19231)
        BinaryOp: op='!=' (at None)
          FuncCall:  (at None)
            ID: name='HplMsp430GeneralIOP__12__IO__getRaw' (at pp.c:19231)
          Constant: type='int', value='0' (at pp.c:19231)
  FuncDef:  (at pp.c:19235)
    Decl: name='Msp430GpioC__11__HplGeneralIO__get', quals=[], storage=['static', 'inline'] (at pp.c:19235)
      FuncDecl: quals=None (at pp.c:19235)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__11__HplGeneralIO__get', quals=[] (at pp.c:19235)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:19235)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19237)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19237)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19241)
        ID: name='__nesc_result' (at pp.c:19241)
        FuncCall:  (at None)
          ID: name='HplMsp430GeneralIOP__12__IO__get' (at pp.c:19241)
      Return:  (at pp.c:19245)
        ID: name='__nesc_result' (at pp.c:19245)
  FuncDef:  (at pp.c:19250)
    Decl: name='Msp430GpioC__11__GeneralIO__get', quals=[], storage=['inline', 'static'] (at pp.c:19250)
      FuncDecl: quals=None (at pp.c:19250)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__11__GeneralIO__get', quals=[] (at pp.c:19250)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:19252)
      Return:  (at pp.c:19254)
        FuncCall:  (at None)
          ID: name='Msp430GpioC__11__HplGeneralIO__get' (at pp.c:19254)
  FuncDef:  (at pp.c:19258)
    Decl: name='OneWireMasterC__Pin__get', quals=[], storage=['static', 'inline'] (at pp.c:19258)
      FuncDecl: quals=None (at pp.c:19258)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OneWireMasterC__Pin__get', quals=[] (at pp.c:19258)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:19258)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19260)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19260)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19264)
        ID: name='__nesc_result' (at pp.c:19264)
        FuncCall:  (at None)
          ID: name='Msp430GpioC__11__GeneralIO__get' (at pp.c:19264)
      Return:  (at pp.c:19268)
        ID: name='__nesc_result' (at pp.c:19268)
  FuncDef:  (at pp.c:19273)
    Decl: name='HplMsp430GeneralIOP__12__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:19273)
      FuncDecl: quals=None (at pp.c:19273)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__12__IO__makeInput', quals=[] (at pp.c:19273)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19275)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:19278)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='42U' (at pp.c:19278)
        UnaryOp: op='~' (at pp.c:19278)
          BinaryOp: op='<<' (at pp.c:19278)
            Constant: type='int', value='0x01' (at pp.c:19278)
            Constant: type='int', value='4' (at pp.c:19278)
  FuncDef:  (at pp.c:19282)
    Decl: name='Msp430GpioC__11__HplGeneralIO__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:19282)
      FuncDecl: quals=None (at pp.c:19282)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__11__HplGeneralIO__makeInput', quals=[] (at pp.c:19282)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19282)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__12__IO__makeInput' (at pp.c:19284)
  FuncDef:  (at pp.c:19289)
    Decl: name='Msp430GpioC__11__GeneralIO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:19289)
      FuncDecl: quals=None (at pp.c:19289)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__11__GeneralIO__makeInput', quals=[] (at pp.c:19289)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19291)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__11__HplGeneralIO__makeInput' (at pp.c:19293)
  FuncDef:  (at pp.c:19297)
    Decl: name='OneWireMasterC__Pin__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:19297)
      FuncDecl: quals=None (at pp.c:19297)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OneWireMasterC__Pin__makeInput', quals=[] (at pp.c:19297)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19297)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__11__GeneralIO__makeInput' (at pp.c:19299)
  FuncDef:  (at pp.c:19304)
    Decl: name='HplMsp430GeneralIOP__12__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:19304)
      FuncDecl: quals=None (at pp.c:19304)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__12__IO__makeOutput', quals=[] (at pp.c:19304)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19306)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:19309)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='42U' (at pp.c:19309)
        BinaryOp: op='<<' (at pp.c:19309)
          Constant: type='int', value='0x01' (at pp.c:19309)
          Constant: type='int', value='4' (at pp.c:19309)
  FuncDef:  (at pp.c:19313)
    Decl: name='Msp430GpioC__11__HplGeneralIO__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:19313)
      FuncDecl: quals=None (at pp.c:19313)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__11__HplGeneralIO__makeOutput', quals=[] (at pp.c:19313)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19313)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__12__IO__makeOutput' (at pp.c:19315)
  FuncDef:  (at pp.c:19320)
    Decl: name='Msp430GpioC__11__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:19320)
      FuncDecl: quals=None (at pp.c:19320)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__11__GeneralIO__makeOutput', quals=[] (at pp.c:19320)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19322)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__11__HplGeneralIO__makeOutput' (at pp.c:19324)
  FuncDef:  (at pp.c:19328)
    Decl: name='OneWireMasterC__Pin__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:19328)
      FuncDecl: quals=None (at pp.c:19328)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OneWireMasterC__Pin__makeOutput', quals=[] (at pp.c:19328)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19328)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__11__GeneralIO__makeOutput' (at pp.c:19330)
  FuncDef:  (at pp.c:19335)
    Decl: name='OneWireMasterC__readBit', quals=[], storage=['inline', 'static'] (at pp.c:19335)
      FuncDecl: quals=None (at pp.c:19335)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OneWireMasterC__readBit', quals=[] (at pp.c:19335)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:19337)
      Decl: name='bit', quals=[], storage=[] (at pp.c:19338)
        TypeDecl: declname='bit', quals=[] (at pp.c:19338)
          IdentifierType: names=['bool'] (at None)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__Pin__makeOutput' (at pp.c:19341)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:19342)
        ExprList:  (at pp.c:19342)
          ID: name='OneWireMasterC__DELAY_5US' (at pp.c:19342)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__Pin__makeInput' (at pp.c:19343)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:19344)
        ExprList:  (at pp.c:19344)
          ID: name='OneWireMasterC__DELAY_5US' (at pp.c:19344)
      Assignment: op='=' (at pp.c:19345)
        ID: name='bit' (at pp.c:19345)
        FuncCall:  (at None)
          ID: name='OneWireMasterC__Pin__get' (at pp.c:19345)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:19346)
        ExprList:  (at pp.c:19346)
          ID: name='OneWireMasterC__SLOT_TIME' (at pp.c:19346)
      Return:  (at pp.c:19347)
        ID: name='bit' (at pp.c:19347)
  FuncDef:  (at pp.c:19351)
    Decl: name='OneWireMasterC__readByte', quals=[], storage=['inline', 'static'] (at pp.c:19351)
      FuncDecl: quals=None (at pp.c:19351)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OneWireMasterC__readByte', quals=[] (at pp.c:19351)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:19353)
      Decl: name='i', quals=[], storage=[] (at pp.c:19354)
        TypeDecl: declname='i', quals=[] (at pp.c:19354)
          IdentifierType: names=['uint8_t'] (at None)
      Decl: name='c', quals=[], storage=[] (at pp.c:19356)
        TypeDecl: declname='c', quals=[] (at pp.c:19356)
          IdentifierType: names=['uint8_t'] (at None)
        Constant: type='int', value='0' (at pp.c:19356)
      For:  (at pp.c:19359)
        Assignment: op='=' (at pp.c:19359)
          ID: name='i' (at pp.c:19359)
          Constant: type='int', value='0' (at pp.c:19359)
        BinaryOp: op='<' (at pp.c:19359)
          ID: name='i' (at pp.c:19359)
          Constant: type='int', value='8' (at pp.c:19359)
        UnaryOp: op='p++' (at pp.c:19359)
          ID: name='i' (at pp.c:19359)
        Compound:  (at pp.c:19359)
          Assignment: op='>>=' (at pp.c:19360)
            ID: name='c' (at pp.c:19360)
            Constant: type='int', value='1' (at pp.c:19360)
          If:  (at pp.c:19361)
            FuncCall:  (at None)
              ID: name='OneWireMasterC__readBit' (at pp.c:19361)
            Compound:  (at pp.c:19361)
              Assignment: op='|=' (at pp.c:19362)
                ID: name='c' (at pp.c:19362)
                Constant: type='int', value='0x80' (at pp.c:19362)
      Return:  (at pp.c:19365)
        ID: name='c' (at pp.c:19365)
  FuncDef:  (at pp.c:19369)
    Decl: name='OneWireMasterC__writeZero', quals=[], storage=['inline', 'static'] (at pp.c:19369)
      FuncDecl: quals=None (at pp.c:19369)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OneWireMasterC__writeZero', quals=[] (at pp.c:19369)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19371)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__Pin__makeOutput' (at pp.c:19372)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:19373)
        ExprList:  (at pp.c:19373)
          ID: name='OneWireMasterC__DELAY_60US' (at pp.c:19373)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__Pin__makeInput' (at pp.c:19374)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:19375)
        ExprList:  (at pp.c:19375)
          ID: name='OneWireMasterC__DELAY_5US' (at pp.c:19375)
  FuncDef:  (at pp.c:19379)
    Decl: name='OneWireMasterC__writeOne', quals=[], storage=['inline', 'static'] (at pp.c:19379)
      FuncDecl: quals=None (at pp.c:19379)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OneWireMasterC__writeOne', quals=[] (at pp.c:19379)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19381)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__Pin__makeOutput' (at pp.c:19382)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:19383)
        ExprList:  (at pp.c:19383)
          ID: name='OneWireMasterC__DELAY_5US' (at pp.c:19383)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__Pin__makeInput' (at pp.c:19384)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:19385)
        ExprList:  (at pp.c:19385)
          ID: name='OneWireMasterC__SLOT_TIME' (at pp.c:19385)
  FuncDef:  (at pp.c:19389)
    Decl: name='OneWireMasterC__writeByte', quals=[], storage=['inline', 'static'] (at pp.c:19389)
      FuncDecl: quals=None (at pp.c:19389)
        ParamList:  (at pp.c:19389)
          Decl: name='c', quals=[], storage=[] (at pp.c:19389)
            TypeDecl: declname='c', quals=[] (at pp.c:19389)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='OneWireMasterC__writeByte', quals=[] (at pp.c:19389)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19391)
      Decl: name='j', quals=[], storage=[] (at pp.c:19392)
        TypeDecl: declname='j', quals=[] (at pp.c:19392)
          IdentifierType: names=['uint8_t'] (at None)
      For:  (at pp.c:19395)
        Assignment: op='=' (at pp.c:19395)
          ID: name='j' (at pp.c:19395)
          Constant: type='int', value='0' (at pp.c:19395)
        BinaryOp: op='<' (at pp.c:19395)
          ID: name='j' (at pp.c:19395)
          Constant: type='int', value='8' (at pp.c:19395)
        UnaryOp: op='p++' (at pp.c:19395)
          ID: name='j' (at pp.c:19395)
        Compound:  (at pp.c:19395)
          If:  (at pp.c:19396)
            BinaryOp: op='&' (at pp.c:19396)
              ID: name='c' (at pp.c:19396)
              Constant: type='int', value='0x01' (at pp.c:19396)
            Compound:  (at pp.c:19396)
              FuncCall:  (at None)
                ID: name='OneWireMasterC__writeOne' (at pp.c:19397)
            Compound:  (at pp.c:19399)
              FuncCall:  (at None)
                ID: name='OneWireMasterC__writeZero' (at pp.c:19400)
          Assignment: op='>>=' (at pp.c:19402)
            ID: name='c' (at pp.c:19402)
            Constant: type='int', value='1' (at pp.c:19402)
  FuncDef:  (at pp.c:19407)
    Decl: name='HplMsp430GeneralIOP__12__IO__clr', quals=[], storage=['inline', 'static'] (at pp.c:19407)
      FuncDecl: quals=None (at pp.c:19407)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__12__IO__clr', quals=[] (at pp.c:19407)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19409)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:19412)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='41U' (at pp.c:19412)
        UnaryOp: op='~' (at pp.c:19412)
          BinaryOp: op='<<' (at pp.c:19412)
            Constant: type='int', value='0x01' (at pp.c:19412)
            Constant: type='int', value='4' (at pp.c:19412)
  FuncDef:  (at pp.c:19416)
    Decl: name='Msp430GpioC__11__HplGeneralIO__clr', quals=[], storage=['static', 'inline'] (at pp.c:19416)
      FuncDecl: quals=None (at pp.c:19416)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__11__HplGeneralIO__clr', quals=[] (at pp.c:19416)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19416)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__12__IO__clr' (at pp.c:19418)
  FuncDef:  (at pp.c:19423)
    Decl: name='Msp430GpioC__11__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:19423)
      FuncDecl: quals=None (at pp.c:19423)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__11__GeneralIO__clr', quals=[] (at pp.c:19423)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19425)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__11__HplGeneralIO__clr' (at pp.c:19427)
  FuncDef:  (at pp.c:19431)
    Decl: name='OneWireMasterC__Pin__clr', quals=[], storage=['static', 'inline'] (at pp.c:19431)
      FuncDecl: quals=None (at pp.c:19431)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OneWireMasterC__Pin__clr', quals=[] (at pp.c:19431)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19431)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__11__GeneralIO__clr' (at pp.c:19433)
  FuncDef:  (at pp.c:19438)
    Decl: name='OneWireMasterC__reset', quals=[], storage=['inline', 'static'] (at pp.c:19438)
      FuncDecl: quals=None (at pp.c:19438)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OneWireMasterC__reset', quals=[] (at pp.c:19438)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:19440)
      Decl: name='i', quals=[], storage=[] (at pp.c:19441)
        TypeDecl: declname='i', quals=[] (at pp.c:19441)
          IdentifierType: names=['uint16_t'] (at None)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__Pin__makeInput' (at pp.c:19444)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__Pin__clr' (at pp.c:19445)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__Pin__makeOutput' (at pp.c:19446)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:19447)
        ExprList:  (at pp.c:19447)
          ID: name='OneWireMasterC__RESET_LOW_TIME' (at pp.c:19447)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__Pin__makeInput' (at pp.c:19448)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:19449)
        ExprList:  (at pp.c:19449)
          ID: name='OneWireMasterC__DELAY_60US' (at pp.c:19449)
      For:  (at pp.c:19451)
        Assignment: op='=' (at pp.c:19451)
          ID: name='i' (at pp.c:19451)
          Constant: type='int', value='0' (at pp.c:19451)
        BinaryOp: op='<' (at pp.c:19451)
          ID: name='i' (at pp.c:19451)
          ID: name='OneWireMasterC__PRESENCE_DETECT_LOW_TIME' (at pp.c:19451)
        ExprList:  (at pp.c:19451)
          Assignment: op='+=' (at pp.c:19451)
            ID: name='i' (at pp.c:19451)
            ID: name='OneWireMasterC__DELAY_5US' (at pp.c:19451)
          FuncCall:  (at None)
            ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:19451)
            ExprList:  (at pp.c:19451)
              ID: name='OneWireMasterC__DELAY_5US' (at pp.c:19451)
        If:  (at pp.c:19452)
          UnaryOp: op='!' (at None)
            FuncCall:  (at None)
              ID: name='OneWireMasterC__Pin__get' (at pp.c:19452)
          Compound:  (at pp.c:19452)
            Break:  (at pp.c:19454)
      FuncCall:  (at None)
        ID: name='OneWireMasterC__BusyWait__wait' (at pp.c:19457)
        ExprList:  (at pp.c:19457)
          BinaryOp: op='-' (at pp.c:19457)
            ID: name='OneWireMasterC__PRESENCE_RESET_HIGH_TIME' (at pp.c:19457)
            ID: name='OneWireMasterC__DELAY_60US' (at pp.c:19457)
      Return:  (at pp.c:19458)
        BinaryOp: op='<' (at pp.c:19458)
          ID: name='i' (at pp.c:19458)
          ID: name='OneWireMasterC__PRESENCE_DETECT_LOW_TIME' (at pp.c:19458)
  FuncDef:  (at pp.c:19462)
    Decl: name='OneWireMasterC__OneWire__read', quals=[], storage=['inline', 'static'] (at pp.c:19462)
      FuncDecl: quals=None (at pp.c:19462)
        ParamList:  (at pp.c:19462)
          Decl: name='cmd', quals=[], storage=[] (at pp.c:19462)
            TypeDecl: declname='cmd', quals=[] (at pp.c:19462)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:19462)
            PtrDecl: quals=[] (at pp.c:19462)
              TypeDecl: declname='buf', quals=[] (at pp.c:19462)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:19462)
            TypeDecl: declname='len', quals=[] (at pp.c:19462)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='OneWireMasterC__OneWire__read', quals=[] (at pp.c:19462)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19464)
      Decl: name='e', quals=[], storage=[] (at pp.c:19465)
        TypeDecl: declname='e', quals=[] (at pp.c:19465)
          IdentifierType: names=['error_t'] (at None)
        ID: name='SUCCESS' (at pp.c:19465)
      Compound:  (at pp.c:19468)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:19468)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:19468)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:19468)
        Compound:  (at pp.c:19470)
          If:  (at pp.c:19471)
            FuncCall:  (at None)
              ID: name='OneWireMasterC__reset' (at pp.c:19471)
            Compound:  (at pp.c:19471)
              Decl: name='i', quals=[], storage=[] (at pp.c:19472)
                TypeDecl: declname='i', quals=[] (at pp.c:19472)
                  IdentifierType: names=['uint8_t'] (at None)
              FuncCall:  (at None)
                ID: name='OneWireMasterC__writeByte' (at pp.c:19475)
                ExprList:  (at pp.c:19475)
                  ID: name='cmd' (at pp.c:19475)
              For:  (at pp.c:19476)
                Assignment: op='=' (at pp.c:19476)
                  ID: name='i' (at pp.c:19476)
                  Constant: type='int', value='0' (at pp.c:19476)
                BinaryOp: op='<' (at pp.c:19476)
                  ID: name='i' (at pp.c:19476)
                  ID: name='len' (at pp.c:19476)
                UnaryOp: op='p++' (at pp.c:19476)
                  ID: name='i' (at pp.c:19476)
                Compound:  (at pp.c:19476)
                  Assignment: op='=' (at pp.c:19477)
                    ArrayRef:  (at pp.c:19477)
                      ID: name='buf' (at pp.c:19477)
                      ID: name='i' (at pp.c:19477)
                    FuncCall:  (at None)
                      ID: name='OneWireMasterC__readByte' (at pp.c:19477)
            Compound:  (at pp.c:19480)
              Assignment: op='=' (at pp.c:19481)
                ID: name='e' (at pp.c:19481)
                ID: name='EOFF' (at pp.c:19481)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:19485)
          ExprList:  (at pp.c:19485)
            ID: name='__nesc_atomic' (at pp.c:19485)
      Return:  (at pp.c:19486)
        ID: name='e' (at pp.c:19486)
  FuncDef:  (at pp.c:19490)
    Decl: name='Ds2411P__OneWire__read', quals=[], storage=['static', 'inline'] (at pp.c:19490)
      FuncDecl: quals=None (at pp.c:19490)
        ParamList:  (at pp.c:19490)
          Decl: name='cmd', quals=[], storage=[] (at pp.c:19490)
            TypeDecl: declname='cmd', quals=[] (at pp.c:19490)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:19490)
            PtrDecl: quals=[] (at pp.c:19490)
              TypeDecl: declname='buf', quals=[] (at pp.c:19490)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:19490)
            TypeDecl: declname='len', quals=[] (at pp.c:19490)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Ds2411P__OneWire__read', quals=[] (at pp.c:19490)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19490)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19492)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19492)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19496)
        ID: name='__nesc_result' (at pp.c:19496)
        FuncCall:  (at None)
          ID: name='OneWireMasterC__OneWire__read' (at pp.c:19496)
          ExprList:  (at pp.c:19496)
            ID: name='cmd' (at pp.c:19496)
            ID: name='buf' (at pp.c:19496)
            ID: name='len' (at pp.c:19496)
      Return:  (at pp.c:19500)
        ID: name='__nesc_result' (at pp.c:19500)
  FuncDef:  (at pp.c:19505)
    Decl: name='Ds2411P__readId', quals=[], storage=['inline', 'static'] (at pp.c:19505)
      FuncDecl: quals=None (at pp.c:19505)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Ds2411P__readId', quals=[] (at pp.c:19505)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19507)
      Decl: name='e', quals=[], storage=[] (at pp.c:19508)
        TypeDecl: declname='e', quals=[] (at pp.c:19508)
          IdentifierType: names=['error_t'] (at None)
        FuncCall:  (at None)
          ID: name='Ds2411P__OneWire__read' (at pp.c:19508)
          ExprList:  (at pp.c:19508)
            Constant: type='int', value='0x33' (at pp.c:19508)
            StructRef: type='.' (at pp.c:19508)
              ID: name='Ds2411P__ds2411id' (at pp.c:19508)
              ID: name='data' (at pp.c:19508)
            ID: name='DALLASID48_DATA_LENGTH' (at pp.c:19508)
      If:  (at pp.c:19511)
        BinaryOp: op='==' (at pp.c:19511)
          ID: name='e' (at pp.c:19511)
          ID: name='SUCCESS' (at pp.c:19511)
        Compound:  (at pp.c:19511)
          If:  (at pp.c:19512)
            FuncCall:  (at None)
              ID: name='dallasid48checkCrc' (at pp.c:19512)
              ExprList:  (at pp.c:19512)
                UnaryOp: op='&' (at pp.c:19512)
                  ID: name='Ds2411P__ds2411id' (at pp.c:19512)
            Compound:  (at pp.c:19512)
              Assignment: op='=' (at pp.c:19513)
                ID: name='Ds2411P__haveId' (at pp.c:19513)
                ID: name='TRUE' (at pp.c:19513)
            Compound:  (at pp.c:19515)
              Assignment: op='=' (at pp.c:19516)
                ID: name='e' (at pp.c:19516)
                ID: name='EINVAL' (at pp.c:19516)
      Return:  (at pp.c:19519)
        ID: name='e' (at pp.c:19519)
  FuncDef:  (at pp.c:19522)
    Decl: name='Ds2411P__ReadId48__read', quals=[], storage=['inline', 'static'] (at pp.c:19522)
      FuncDecl: quals=None (at pp.c:19522)
        ParamList:  (at pp.c:19522)
          Decl: name='id', quals=[], storage=[] (at pp.c:19522)
            PtrDecl: quals=[] (at pp.c:19522)
              TypeDecl: declname='id', quals=[] (at pp.c:19522)
                IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Ds2411P__ReadId48__read', quals=[] (at pp.c:19522)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19524)
      Decl: name='e', quals=[], storage=[] (at pp.c:19525)
        TypeDecl: declname='e', quals=[] (at pp.c:19525)
          IdentifierType: names=['error_t'] (at None)
        ID: name='SUCCESS' (at pp.c:19525)
      If:  (at pp.c:19528)
        UnaryOp: op='!' (at pp.c:19528)
          ID: name='Ds2411P__haveId' (at pp.c:19528)
        Compound:  (at pp.c:19528)
          Assignment: op='=' (at pp.c:19529)
            ID: name='e' (at pp.c:19529)
            FuncCall:  (at None)
              ID: name='Ds2411P__readId' (at pp.c:19529)
      If:  (at pp.c:19531)
        ID: name='Ds2411P__haveId' (at pp.c:19531)
        Compound:  (at pp.c:19531)
          Decl: name='i', quals=[], storage=[] (at pp.c:19532)
            TypeDecl: declname='i', quals=[] (at pp.c:19532)
              IdentifierType: names=['uint8_t'] (at None)
          For:  (at pp.c:19535)
            Assignment: op='=' (at pp.c:19535)
              ID: name='i' (at pp.c:19535)
              Constant: type='int', value='0' (at pp.c:19535)
            BinaryOp: op='<' (at pp.c:19535)
              ID: name='i' (at pp.c:19535)
              ID: name='DALLASID48_SERIAL_LENGTH' (at pp.c:19535)
            UnaryOp: op='p++' (at pp.c:19535)
              ID: name='i' (at pp.c:19535)
            Compound:  (at pp.c:19535)
              Assignment: op='=' (at pp.c:19536)
                ArrayRef:  (at pp.c:19536)
                  ID: name='id' (at pp.c:19536)
                  ID: name='i' (at pp.c:19536)
                ArrayRef:  (at pp.c:19536)
                  StructRef: type='.' (at pp.c:19536)
                    ID: name='Ds2411P__ds2411id' (at pp.c:19536)
                    ID: name='serial' (at pp.c:19536)
                  ID: name='i' (at pp.c:19536)
      Return:  (at pp.c:19539)
        ID: name='e' (at pp.c:19539)
  FuncDef:  (at pp.c:19543)
    Decl: name='DallasId48ToIeeeEui64C__ReadId48__read', quals=[], storage=['static', 'inline'] (at pp.c:19543)
      FuncDecl: quals=None (at pp.c:19543)
        ParamList:  (at pp.c:19543)
          Decl: name='id', quals=[], storage=[] (at pp.c:19543)
            PtrDecl: quals=[] (at pp.c:19543)
              TypeDecl: declname='id', quals=[] (at pp.c:19543)
                IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='DallasId48ToIeeeEui64C__ReadId48__read', quals=[] (at pp.c:19543)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19543)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19545)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19545)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19549)
        ID: name='__nesc_result' (at pp.c:19549)
        FuncCall:  (at None)
          ID: name='Ds2411P__ReadId48__read' (at pp.c:19549)
          ExprList:  (at pp.c:19549)
            ID: name='id' (at pp.c:19549)
      Return:  (at pp.c:19553)
        ID: name='__nesc_result' (at pp.c:19553)
  FuncDef:  (at pp.c:19558)
    Decl: name='Msp430TimerP__0__Timer__get', quals=[], storage=['inline', 'static'] (at pp.c:19558)
      FuncDecl: quals=None (at pp.c:19558)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Timer__get', quals=[] (at pp.c:19558)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:19559)
      If:  (at pp.c:19564)
        Constant: type='int', value='0' (at pp.c:19564)
        Compound:  (at pp.c:19564)
          Compound:  (at pp.c:19567)
            Decl: name='t0', quals=[], storage=[] (at pp.c:19568)
              TypeDecl: declname='t0', quals=[] (at pp.c:19568)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t1', quals=[], storage=[] (at pp.c:19569)
              TypeDecl: declname='t1', quals=[] (at pp.c:19569)
                IdentifierType: names=['uint16_t'] (at None)
              UnaryOp: op='*' (at None)
                Cast:  (at None)
                  Typename: quals=['volatile'] (at None)
                    PtrDecl: quals=[] (at pp.c:19569)
                      TypeDecl: declname=None, quals=['volatile'] (at None)
                        IdentifierType: names=['uint16_t'] (at None)
                  Constant: type='int', value='368U' (at pp.c:19569)
            DoWhile:  (at pp.c:19572)
              BinaryOp: op='!=' (at pp.c:19580)
                ID: name='t0' (at pp.c:19580)
                ID: name='t1' (at pp.c:19580)
              Compound:  (at pp.c:19572)
                Assignment: op='=' (at pp.c:19574)
                  ID: name='t0' (at pp.c:19574)
                  ID: name='t1' (at pp.c:19574)
                Assignment: op='=' (at pp.c:19576)
                  ID: name='t1' (at pp.c:19576)
                  UnaryOp: op='*' (at None)
                    Cast:  (at None)
                      Typename: quals=['volatile'] (at None)
                        PtrDecl: quals=[] (at pp.c:19576)
                          TypeDecl: declname=None, quals=['volatile'] (at None)
                            IdentifierType: names=['uint16_t'] (at None)
                      Constant: type='int', value='368U' (at pp.c:19576)
            Compound:  (at pp.c:19581)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:19582)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:19582)
                  IdentifierType: names=['int', 'unsigned'] (at None)
                ID: name='t1' (at pp.c:19584)
              Return:  (at pp.c:19587)
                ID: name='__nesc_temp' (at pp.c:19587)
        Compound:  (at pp.c:19593)
          Return:  (at pp.c:19594)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:19594)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='368U' (at pp.c:19594)
  FuncDef:  (at pp.c:19599)
    Decl: name='Msp430CounterC__1__Msp430Timer__get', quals=[], storage=['static', 'inline'] (at pp.c:19599)
      FuncDecl: quals=None (at pp.c:19599)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__1__Msp430Timer__get', quals=[] (at pp.c:19599)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:19599)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19601)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19601)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19605)
        ID: name='__nesc_result' (at pp.c:19605)
        FuncCall:  (at None)
          ID: name='Msp430TimerP__0__Timer__get' (at pp.c:19605)
      Return:  (at pp.c:19609)
        ID: name='__nesc_result' (at pp.c:19609)
  FuncDef:  (at pp.c:19614)
    Decl: name='Msp430CounterC__1__Counter__get', quals=[], storage=['inline', 'static'] (at pp.c:19614)
      FuncDecl: quals=None (at pp.c:19614)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430CounterC__1__Counter__get', quals=[] (at pp.c:19614)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:19615)
      Return:  (at pp.c:19616)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__1__Msp430Timer__get' (at pp.c:19616)
  FuncDef:  (at pp.c:19620)
    Decl: name='BusyWaitCounterC__0__Counter__get', quals=[], storage=['static', 'inline'] (at pp.c:19620)
      FuncDecl: quals=None (at pp.c:19620)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='BusyWaitCounterC__0__Counter__get', quals=[] (at pp.c:19620)
          IdentifierType: names=['BusyWaitCounterC__0__Counter__size_type'] (at None)
    Compound:  (at pp.c:19620)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19622)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19622)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19626)
        ID: name='__nesc_result' (at pp.c:19626)
        FuncCall:  (at None)
          ID: name='Msp430CounterC__1__Counter__get' (at pp.c:19626)
      Return:  (at pp.c:19630)
        ID: name='__nesc_result' (at pp.c:19630)
  FuncDef:  (at pp.c:19635)
    Decl: name='CC2420SpiP__Resource__isOwner', quals=[], storage=['inline', 'static'] (at pp.c:19635)
      FuncDecl: quals=None (at pp.c:19635)
        ParamList:  (at pp.c:19635)
          Decl: name='id', quals=[], storage=[] (at pp.c:19635)
            TypeDecl: declname='id', quals=[] (at pp.c:19635)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Resource__isOwner', quals=[] (at pp.c:19635)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:19637)
      Compound:  (at pp.c:19640)
        Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:19641)
          TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:19641)
            IdentifierType: names=['char', 'unsigned'] (at None)
          BinaryOp: op='==' (at pp.c:19643)
            ID: name='CC2420SpiP__m_holder' (at pp.c:19643)
            ID: name='id' (at pp.c:19643)
        Return:  (at pp.c:19646)
          ID: name='__nesc_temp' (at pp.c:19646)
  FuncDef:  (at pp.c:19651)
    Decl: name='CC2420ReceiveP__SpiResource__isOwner', quals=[], storage=['static', 'inline'] (at pp.c:19651)
      FuncDecl: quals=None (at pp.c:19651)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__SpiResource__isOwner', quals=[] (at pp.c:19651)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:19651)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19653)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19653)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19657)
        ID: name='__nesc_result' (at pp.c:19657)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__isOwner' (at pp.c:19657)
          ExprList:  (at pp.c:19657)
            ID: name='CC2420SpiC__4__CLIENT_ID' (at pp.c:19657)
      Return:  (at pp.c:19661)
        ID: name='__nesc_result' (at pp.c:19661)
  FuncDef:  (at pp.c:19666)
    Decl: name='CC2420ReceiveP__SpiResource__immediateRequest', quals=[], storage=['static', 'inline'] (at pp.c:19666)
      FuncDecl: quals=None (at pp.c:19666)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__SpiResource__immediateRequest', quals=[] (at pp.c:19666)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19666)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19668)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19668)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19672)
        ID: name='__nesc_result' (at pp.c:19672)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__immediateRequest' (at pp.c:19672)
          ExprList:  (at pp.c:19672)
            ID: name='CC2420SpiC__4__CLIENT_ID' (at pp.c:19672)
      Return:  (at pp.c:19676)
        ID: name='__nesc_result' (at pp.c:19676)
  FuncDef:  (at pp.c:19681)
    Decl: name='CC2420ReceiveP__SpiResource__request', quals=[], storage=['static', 'inline'] (at pp.c:19681)
      FuncDecl: quals=None (at pp.c:19681)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__SpiResource__request', quals=[] (at pp.c:19681)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19681)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19683)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19683)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19687)
        ID: name='__nesc_result' (at pp.c:19687)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__request' (at pp.c:19687)
          ExprList:  (at pp.c:19687)
            ID: name='CC2420SpiC__4__CLIENT_ID' (at pp.c:19687)
      Return:  (at pp.c:19691)
        ID: name='__nesc_result' (at pp.c:19691)
  FuncDef:  (at pp.c:19696)
    Decl: name='CC2420SpiP__grant__postTask', quals=[], storage=['static', 'inline'] (at pp.c:19696)
      FuncDecl: quals=None (at pp.c:19696)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__grant__postTask', quals=[] (at pp.c:19696)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19696)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19698)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19698)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19702)
        ID: name='__nesc_result' (at pp.c:19702)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:19702)
          ExprList:  (at pp.c:19702)
            ID: name='CC2420SpiP__grant' (at pp.c:19702)
      Return:  (at pp.c:19706)
        ID: name='__nesc_result' (at pp.c:19706)
  FuncDef:  (at pp.c:19711)
    Decl: name='CC2420SpiP__SpiResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:19711)
      FuncDecl: quals=None (at pp.c:19711)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__SpiResource__granted', quals=[] (at pp.c:19711)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19713)
      FuncCall:  (at None)
        ID: name='CC2420SpiP__grant__postTask' (at pp.c:19714)
  FuncDef:  (at pp.c:19718)
    Decl: name='Msp430SpiNoDmaP__0__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:19718)
      FuncDecl: quals=None (at pp.c:19718)
        ParamList:  (at pp.c:19718)
          Decl: name='id', quals=[], storage=[] (at pp.c:19718)
            TypeDecl: declname='id', quals=[] (at pp.c:19718)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__default__granted', quals=[] (at pp.c:19718)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19720)
  FuncDef:  (at pp.c:19724)
    Decl: name='Msp430SpiNoDmaP__0__Resource__granted', quals=[], storage=['static', 'inline'] (at pp.c:19724)
      FuncDecl: quals=None (at pp.c:19724)
        ParamList:  (at pp.c:19724)
          Decl: name='arg_0x101cf1500', quals=[], storage=[] (at pp.c:19724)
            TypeDecl: declname='arg_0x101cf1500', quals=[] (at pp.c:19724)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Resource__granted', quals=[] (at pp.c:19724)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19724)
      Switch:  (at pp.c:19726)
        ID: name='arg_0x101cf1500' (at pp.c:19726)
        Compound:  (at pp.c:19726)
          Case:  (at pp.c:19728)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:19728)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__SpiResource__granted' (at pp.c:19730)
          Break:  (at pp.c:19732)
          Default:  (at pp.c:19734)
            FuncCall:  (at None)
              ID: name='Msp430SpiNoDmaP__0__Resource__default__granted' (at pp.c:19736)
              ExprList:  (at pp.c:19736)
                ID: name='arg_0x101cf1500' (at pp.c:19736)
          Break:  (at pp.c:19738)
  FuncDef:  (at pp.c:19745)
    Decl: name='Msp430SpiNoDmaP__0__UsartResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:19745)
      FuncDecl: quals=None (at pp.c:19745)
        ParamList:  (at pp.c:19745)
          Decl: name='id', quals=[], storage=[] (at pp.c:19745)
            TypeDecl: declname='id', quals=[] (at pp.c:19745)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartResource__granted', quals=[] (at pp.c:19745)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19747)
      FuncCall:  (at None)
        ID: name='Msp430SpiNoDmaP__0__Resource__granted' (at pp.c:19748)
        ExprList:  (at pp.c:19748)
          ID: name='id' (at pp.c:19748)
  FuncDef:  (at pp.c:19752)
    Decl: name='ArbiterP__0__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:19752)
      FuncDecl: quals=None (at pp.c:19752)
        ParamList:  (at pp.c:19752)
          Decl: name='id', quals=[], storage=[] (at pp.c:19752)
            TypeDecl: declname='id', quals=[] (at pp.c:19752)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__Resource__default__granted', quals=[] (at pp.c:19752)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19754)
  FuncDef:  (at pp.c:19758)
    Decl: name='ArbiterP__0__Resource__granted', quals=[], storage=['static', 'inline'] (at pp.c:19758)
      FuncDecl: quals=None (at pp.c:19758)
        ParamList:  (at pp.c:19758)
          Decl: name='arg_0x101ef3658', quals=[], storage=[] (at pp.c:19758)
            TypeDecl: declname='arg_0x101ef3658', quals=[] (at pp.c:19758)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__Resource__granted', quals=[] (at pp.c:19758)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19758)
      Switch:  (at pp.c:19760)
        ID: name='arg_0x101ef3658' (at pp.c:19760)
        Compound:  (at pp.c:19760)
          Case:  (at pp.c:19762)
            ID: name='Msp430Usart0C__0__CLIENT_ID' (at pp.c:19762)
            FuncCall:  (at None)
              ID: name='Msp430SpiNoDmaP__0__UsartResource__granted' (at pp.c:19764)
              ExprList:  (at pp.c:19764)
                ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:19764)
          Break:  (at pp.c:19766)
          Default:  (at pp.c:19768)
            FuncCall:  (at None)
              ID: name='ArbiterP__0__Resource__default__granted' (at pp.c:19770)
              ExprList:  (at pp.c:19770)
                ID: name='arg_0x101ef3658' (at pp.c:19770)
          Break:  (at pp.c:19772)
  FuncDef:  (at pp.c:19779)
    Decl: name='ArbiterP__0__grantedTask__runTask', quals=[], storage=['inline', 'static'] (at pp.c:19779)
      FuncDecl: quals=None (at pp.c:19779)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__grantedTask__runTask', quals=[] (at pp.c:19779)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19781)
      Compound:  (at pp.c:19782)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:19782)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:19782)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:19782)
        Compound:  (at pp.c:19784)
          Assignment: op='=' (at pp.c:19785)
            ID: name='ArbiterP__0__resId' (at pp.c:19785)
            ID: name='ArbiterP__0__reqResId' (at pp.c:19785)
          Assignment: op='=' (at pp.c:19786)
            ID: name='ArbiterP__0__state' (at pp.c:19786)
            ID: name='ArbiterP__0__RES_BUSY' (at pp.c:19786)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:19789)
          ExprList:  (at pp.c:19789)
            ID: name='__nesc_atomic' (at pp.c:19789)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__ResourceConfigure__configure' (at pp.c:19790)
        ExprList:  (at pp.c:19790)
          ID: name='ArbiterP__0__resId' (at pp.c:19790)
      FuncCall:  (at None)
        ID: name='ArbiterP__0__Resource__granted' (at pp.c:19791)
        ExprList:  (at pp.c:19791)
          ID: name='ArbiterP__0__resId' (at pp.c:19791)
  FuncDef:  (at pp.c:19795)
    Decl: name='Msp430SpiNoDmaP__0__SpiPacket__default__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:19795)
      FuncDecl: quals=None (at pp.c:19795)
        ParamList:  (at pp.c:19795)
          Decl: name='id', quals=[], storage=[] (at pp.c:19795)
            TypeDecl: declname='id', quals=[] (at pp.c:19795)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='tx_buf', quals=[], storage=[] (at pp.c:19795)
            PtrDecl: quals=[] (at pp.c:19795)
              TypeDecl: declname='tx_buf', quals=[] (at pp.c:19795)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='rx_buf', quals=[], storage=[] (at pp.c:19795)
            PtrDecl: quals=[] (at pp.c:19795)
              TypeDecl: declname='rx_buf', quals=[] (at pp.c:19795)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:19795)
            TypeDecl: declname='len', quals=[] (at pp.c:19795)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:19795)
            TypeDecl: declname='error', quals=[] (at pp.c:19795)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__SpiPacket__default__sendDone', quals=[] (at pp.c:19795)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19797)
  FuncDef:  (at pp.c:19801)
    Decl: name='Msp430SpiNoDmaP__0__SpiPacket__sendDone', quals=[], storage=['static', 'inline'] (at pp.c:19801)
      FuncDecl: quals=None (at pp.c:19801)
        ParamList:  (at pp.c:19801)
          Decl: name='arg_0x101cee7d8', quals=[], storage=[] (at pp.c:19801)
            TypeDecl: declname='arg_0x101cee7d8', quals=[] (at pp.c:19801)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='txBuf', quals=[], storage=[] (at pp.c:19801)
            PtrDecl: quals=[] (at pp.c:19801)
              TypeDecl: declname='txBuf', quals=[] (at pp.c:19801)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='rxBuf', quals=[], storage=[] (at pp.c:19801)
            PtrDecl: quals=[] (at pp.c:19801)
              TypeDecl: declname='rxBuf', quals=[] (at pp.c:19801)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:19801)
            TypeDecl: declname='len', quals=[] (at pp.c:19801)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:19801)
            TypeDecl: declname='error', quals=[] (at pp.c:19801)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__SpiPacket__sendDone', quals=[] (at pp.c:19801)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19801)
      Switch:  (at pp.c:19803)
        ID: name='arg_0x101cee7d8' (at pp.c:19803)
        Compound:  (at pp.c:19803)
          Case:  (at pp.c:19805)
            ID: name='Msp430Spi0C__0__CLIENT_ID' (at pp.c:19805)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__SpiPacket__sendDone' (at pp.c:19807)
              ExprList:  (at pp.c:19807)
                ID: name='txBuf' (at pp.c:19807)
                ID: name='rxBuf' (at pp.c:19807)
                ID: name='len' (at pp.c:19807)
                ID: name='error' (at pp.c:19807)
          Break:  (at pp.c:19809)
          Default:  (at pp.c:19811)
            FuncCall:  (at None)
              ID: name='Msp430SpiNoDmaP__0__SpiPacket__default__sendDone' (at pp.c:19813)
              ExprList:  (at pp.c:19813)
                ID: name='arg_0x101cee7d8' (at pp.c:19813)
                ID: name='txBuf' (at pp.c:19813)
                ID: name='rxBuf' (at pp.c:19813)
                ID: name='len' (at pp.c:19813)
                ID: name='error' (at pp.c:19813)
          Break:  (at pp.c:19815)
  FuncDef:  (at pp.c:19822)
    Decl: name='Msp430SpiNoDmaP__0__signalDone', quals=[], storage=['inline', 'static'] (at pp.c:19822)
      FuncDecl: quals=None (at pp.c:19822)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__signalDone', quals=[] (at pp.c:19822)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19824)
      FuncCall:  (at None)
        ID: name='Msp430SpiNoDmaP__0__SpiPacket__sendDone' (at pp.c:19825)
        ExprList:  (at pp.c:19825)
          ID: name='Msp430SpiNoDmaP__0__m_client' (at pp.c:19825)
          ID: name='Msp430SpiNoDmaP__0__m_tx_buf' (at pp.c:19825)
          ID: name='Msp430SpiNoDmaP__0__m_rx_buf' (at pp.c:19825)
          ID: name='Msp430SpiNoDmaP__0__m_len' (at pp.c:19825)
          ID: name='SUCCESS' (at pp.c:19826)
  FuncDef:  (at pp.c:19830)
    Decl: name='Msp430SpiNoDmaP__0__signalDone_task__runTask', quals=[], storage=['inline', 'static'] (at pp.c:19830)
      FuncDecl: quals=None (at pp.c:19830)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__signalDone_task__runTask', quals=[] (at pp.c:19830)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19832)
      Compound:  (at pp.c:19833)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:19833)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:19833)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:19833)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__signalDone' (at pp.c:19835)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:19837)
          ExprList:  (at pp.c:19837)
            ID: name='__nesc_atomic' (at pp.c:19837)
  FuncDef:  (at pp.c:19841)
    Decl: name='CC2420TransmitP__TXFIFO__readDone', quals=[], storage=['inline', 'static'] (at pp.c:19841)
      FuncDecl: quals=None (at pp.c:19841)
        ParamList:  (at pp.c:19841)
          Decl: name='tx_buf', quals=[], storage=[] (at pp.c:19841)
            PtrDecl: quals=[] (at pp.c:19841)
              TypeDecl: declname='tx_buf', quals=[] (at pp.c:19841)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='tx_len', quals=[], storage=[] (at pp.c:19841)
            TypeDecl: declname='tx_len', quals=[] (at pp.c:19841)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:19842)
            TypeDecl: declname='error', quals=[] (at pp.c:19842)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__TXFIFO__readDone', quals=[] (at pp.c:19841)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19844)
  FuncDef:  (at pp.c:19848)
    Decl: name='CC2420ReceiveP__SpiResource__release', quals=[], storage=['static', 'inline'] (at pp.c:19848)
      FuncDecl: quals=None (at pp.c:19848)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__SpiResource__release', quals=[] (at pp.c:19848)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19848)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19850)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19850)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19854)
        ID: name='__nesc_result' (at pp.c:19854)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__release' (at pp.c:19854)
          ExprList:  (at pp.c:19854)
            ID: name='CC2420SpiC__4__CLIENT_ID' (at pp.c:19854)
      Return:  (at pp.c:19858)
        ID: name='__nesc_result' (at pp.c:19858)
  FuncDef:  (at pp.c:19863)
    Decl: name='CC2420ReceiveP__CSN__set', quals=[], storage=['static', 'inline'] (at pp.c:19863)
      FuncDecl: quals=None (at pp.c:19863)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CSN__set', quals=[] (at pp.c:19863)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19863)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__GeneralIO__set' (at pp.c:19865)
  FuncDef:  (at pp.c:19870)
    Decl: name='CC2420ReceiveP__receiveDone_task__postTask', quals=[], storage=['static', 'inline'] (at pp.c:19870)
      FuncDecl: quals=None (at pp.c:19870)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__receiveDone_task__postTask', quals=[] (at pp.c:19870)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:19870)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19872)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19872)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19876)
        ID: name='__nesc_result' (at pp.c:19876)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:19876)
          ExprList:  (at pp.c:19876)
            ID: name='CC2420ReceiveP__receiveDone_task' (at pp.c:19876)
      Return:  (at pp.c:19880)
        ID: name='__nesc_result' (at pp.c:19880)
  FuncDef:  (at pp.c:19885)
    Decl: name='CC2420TransmitP__CC2420PacketBody__getMetadata', quals=[], storage=['static', 'inline'] (at pp.c:19885)
      FuncDecl: quals=None (at pp.c:19885)
        ParamList:  (at pp.c:19885)
          Decl: name='msg', quals=[], storage=[] (at pp.c:19885)
            PtrDecl: quals=[] (at pp.c:19885)
              TypeDecl: declname='msg', quals=[] (at pp.c:19885)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:19885)
          TypeDecl: declname='CC2420TransmitP__CC2420PacketBody__getMetadata', quals=[] (at pp.c:19885)
            IdentifierType: names=['cc2420_metadata_t'] (at None)
    Compound:  (at pp.c:19885)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19887)
        PtrDecl: quals=[] (at pp.c:19887)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19887)
            Struct: name='cc2420_metadata_t', packed=False (at pp.c:19887)
      Assignment: op='=' (at pp.c:19891)
        ID: name='__nesc_result' (at pp.c:19891)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getMetadata' (at pp.c:19891)
          ExprList:  (at pp.c:19891)
            ID: name='msg' (at pp.c:19891)
      Return:  (at pp.c:19895)
        ID: name='__nesc_result' (at pp.c:19895)
  FuncDef:  (at pp.c:19900)
    Decl: name='CC2420TransmitP__CC2420Receive__receive', quals=[], storage=['inline', 'static'] (at pp.c:19900)
      FuncDecl: quals=None (at pp.c:19900)
        ParamList:  (at pp.c:19900)
          Decl: name='type', quals=[], storage=[] (at pp.c:19900)
            TypeDecl: declname='type', quals=[] (at pp.c:19900)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='ack_msg', quals=[], storage=[] (at pp.c:19900)
            PtrDecl: quals=[] (at pp.c:19900)
              TypeDecl: declname='ack_msg', quals=[] (at pp.c:19900)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__CC2420Receive__receive', quals=[] (at pp.c:19900)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19902)
      Decl: name='ack_header', quals=[], storage=[] (at pp.c:19903)
        PtrDecl: quals=[] (at pp.c:19903)
          TypeDecl: declname='ack_header', quals=[] (at pp.c:19903)
            IdentifierType: names=['cc2420_header_t'] (at None)
      Decl: name='msg_header', quals=[], storage=[] (at pp.c:19904)
        PtrDecl: quals=[] (at pp.c:19904)
          TypeDecl: declname='msg_header', quals=[] (at pp.c:19904)
            IdentifierType: names=['cc2420_header_t'] (at None)
      Decl: name='msg_metadata', quals=[], storage=[] (at pp.c:19905)
        PtrDecl: quals=[] (at pp.c:19905)
          TypeDecl: declname='msg_metadata', quals=[] (at pp.c:19905)
            IdentifierType: names=['cc2420_metadata_t'] (at None)
      Decl: name='ack_buf', quals=[], storage=[] (at pp.c:19906)
        PtrDecl: quals=[] (at pp.c:19906)
          TypeDecl: declname='ack_buf', quals=[] (at pp.c:19906)
            IdentifierType: names=['uint8_t'] (at None)
      Decl: name='length', quals=[], storage=[] (at pp.c:19907)
        TypeDecl: declname='length', quals=[] (at pp.c:19907)
          IdentifierType: names=['uint8_t'] (at None)
      If:  (at pp.c:19909)
        BinaryOp: op='&&' (at pp.c:19909)
          BinaryOp: op='==' (at pp.c:19909)
            ID: name='type' (at pp.c:19909)
            ID: name='IEEE154_TYPE_ACK' (at pp.c:19909)
          ID: name='CC2420TransmitP__m_msg' (at pp.c:19909)
        Compound:  (at pp.c:19909)
          Assignment: op='=' (at pp.c:19910)
            ID: name='ack_header' (at pp.c:19910)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__CC2420PacketBody__getHeader' (at pp.c:19910)
              ExprList:  (at pp.c:19910)
                ID: name='ack_msg' (at pp.c:19910)
          Assignment: op='=' (at pp.c:19911)
            ID: name='msg_header' (at pp.c:19911)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__CC2420PacketBody__getHeader' (at pp.c:19911)
              ExprList:  (at pp.c:19911)
                ID: name='CC2420TransmitP__m_msg' (at pp.c:19911)
          If:  (at pp.c:19913)
            BinaryOp: op='&&' (at pp.c:19913)
              BinaryOp: op='==' (at pp.c:19913)
                ID: name='CC2420TransmitP__m_state' (at pp.c:19913)
                ID: name='CC2420TransmitP__S_ACK_WAIT' (at pp.c:19913)
              BinaryOp: op='==' (at None)
                FuncCall:  (at None)
                  ID: name='__nesc_ntoh_leuint8' (at pp.c:19913)
                  ExprList:  (at pp.c:19913)
                    StructRef: type='.' (at pp.c:19913)
                      StructRef: type='->' (at pp.c:19913)
                        ID: name='msg_header' (at pp.c:19913)
                        ID: name='dsn' (at pp.c:19913)
                      ID: name='nxdata' (at pp.c:19913)
                FuncCall:  (at None)
                  ID: name='__nesc_ntoh_leuint8' (at pp.c:19913)
                  ExprList:  (at pp.c:19913)
                    StructRef: type='.' (at pp.c:19913)
                      StructRef: type='->' (at pp.c:19913)
                        ID: name='ack_header' (at pp.c:19913)
                        ID: name='dsn' (at pp.c:19913)
                      ID: name='nxdata' (at pp.c:19913)
            Compound:  (at pp.c:19913)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__BackoffTimer__stop' (at pp.c:19914)
              Assignment: op='=' (at pp.c:19916)
                ID: name='msg_metadata' (at pp.c:19916)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__CC2420PacketBody__getMetadata' (at pp.c:19916)
                  ExprList:  (at pp.c:19916)
                    ID: name='CC2420TransmitP__m_msg' (at pp.c:19916)
              Assignment: op='=' (at pp.c:19917)
                ID: name='ack_buf' (at pp.c:19917)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    PtrDecl: quals=[] (at pp.c:19917)
                      TypeDecl: declname=None, quals=[] (at None)
                        IdentifierType: names=['uint8_t'] (at None)
                  ID: name='ack_header' (at pp.c:19917)
              Assignment: op='=' (at pp.c:19918)
                ID: name='length' (at pp.c:19918)
                FuncCall:  (at None)
                  ID: name='__nesc_ntoh_leuint8' (at pp.c:19918)
                  ExprList:  (at pp.c:19918)
                    StructRef: type='.' (at pp.c:19918)
                      StructRef: type='->' (at pp.c:19918)
                        ID: name='ack_header' (at pp.c:19918)
                        ID: name='length' (at pp.c:19918)
                      ID: name='nxdata' (at pp.c:19918)
              FuncCall:  (at None)
                ID: name='__nesc_hton_int8' (at pp.c:19920)
                ExprList:  (at pp.c:19920)
                  StructRef: type='.' (at pp.c:19920)
                    StructRef: type='->' (at pp.c:19920)
                      ID: name='msg_metadata' (at pp.c:19920)
                      ID: name='ack' (at pp.c:19920)
                    ID: name='nxdata' (at pp.c:19920)
                  ID: name='TRUE' (at pp.c:19920)
              FuncCall:  (at None)
                ID: name='__nesc_hton_uint8' (at pp.c:19921)
                ExprList:  (at pp.c:19921)
                  StructRef: type='.' (at pp.c:19921)
                    StructRef: type='->' (at pp.c:19921)
                      ID: name='msg_metadata' (at pp.c:19921)
                      ID: name='rssi' (at pp.c:19921)
                    ID: name='nxdata' (at pp.c:19921)
                  ArrayRef:  (at pp.c:19921)
                    ID: name='ack_buf' (at pp.c:19921)
                    BinaryOp: op='-' (at pp.c:19921)
                      ID: name='length' (at pp.c:19921)
                      Constant: type='int', value='1' (at pp.c:19921)
              FuncCall:  (at None)
                ID: name='__nesc_hton_uint8' (at pp.c:19922)
                ExprList:  (at pp.c:19922)
                  StructRef: type='.' (at pp.c:19922)
                    StructRef: type='->' (at pp.c:19922)
                      ID: name='msg_metadata' (at pp.c:19922)
                      ID: name='lqi' (at pp.c:19922)
                    ID: name='nxdata' (at pp.c:19922)
                  BinaryOp: op='&' (at pp.c:19922)
                    ArrayRef:  (at pp.c:19922)
                      ID: name='ack_buf' (at pp.c:19922)
                      ID: name='length' (at pp.c:19922)
                    Constant: type='int', value='0x7f' (at pp.c:19922)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__signalDone' (at pp.c:19923)
                ExprList:  (at pp.c:19923)
                  ID: name='SUCCESS' (at pp.c:19923)
  FuncDef:  (at pp.c:19929)
    Decl: name='CC2420ReceiveP__CC2420Receive__receive', quals=[], storage=['static', 'inline'] (at pp.c:19929)
      FuncDecl: quals=None (at pp.c:19929)
        ParamList:  (at pp.c:19929)
          Decl: name='type', quals=[], storage=[] (at pp.c:19929)
            TypeDecl: declname='type', quals=[] (at pp.c:19929)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='message', quals=[], storage=[] (at pp.c:19929)
            PtrDecl: quals=[] (at pp.c:19929)
              TypeDecl: declname='message', quals=[] (at pp.c:19929)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CC2420Receive__receive', quals=[] (at pp.c:19929)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19929)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__CC2420Receive__receive' (at pp.c:19931)
        ExprList:  (at pp.c:19931)
          ID: name='type' (at pp.c:19931)
          ID: name='message' (at pp.c:19931)
  FuncDef:  (at pp.c:19936)
    Decl: name='CC2420ReceiveP__PacketTimeStamp__clear', quals=[], storage=['static', 'inline'] (at pp.c:19936)
      FuncDecl: quals=None (at pp.c:19936)
        ParamList:  (at pp.c:19936)
          Decl: name='msg', quals=[], storage=[] (at pp.c:19936)
            PtrDecl: quals=[] (at pp.c:19936)
              TypeDecl: declname='msg', quals=[] (at pp.c:19936)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ReceiveP__PacketTimeStamp__clear', quals=[] (at pp.c:19936)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19936)
      FuncCall:  (at None)
        ID: name='CC2420PacketP__PacketTimeStamp32khz__clear' (at pp.c:19938)
        ExprList:  (at pp.c:19938)
          ID: name='msg' (at pp.c:19938)
  FuncDef:  (at pp.c:19950)
    Decl: name='CC2420ReceiveP__PacketTimeStamp__set', quals=[], storage=['static', 'inline'] (at pp.c:19950)
      FuncDecl: quals=None (at pp.c:19950)
        ParamList:  (at pp.c:19950)
          Decl: name='msg', quals=[], storage=[] (at pp.c:19950)
            PtrDecl: quals=[] (at pp.c:19950)
              TypeDecl: declname='msg', quals=[] (at pp.c:19950)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='value', quals=[], storage=[] (at pp.c:19950)
            TypeDecl: declname='value', quals=[] (at pp.c:19950)
              IdentifierType: names=['CC2420ReceiveP__PacketTimeStamp__size_type'] (at None)
        TypeDecl: declname='CC2420ReceiveP__PacketTimeStamp__set', quals=[] (at pp.c:19950)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:19950)
      FuncCall:  (at None)
        ID: name='CC2420PacketP__PacketTimeStamp32khz__set' (at pp.c:19952)
        ExprList:  (at pp.c:19952)
          ID: name='msg' (at pp.c:19952)
          ID: name='value' (at pp.c:19952)
  FuncDef:  (at pp.c:19957)
    Decl: name='HplMsp430GeneralIOP__0__IO__getRaw', quals=[], storage=['inline', 'static'] (at pp.c:19957)
      FuncDecl: quals=None (at pp.c:19957)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__0__IO__getRaw', quals=[] (at pp.c:19957)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:19959)
      Return:  (at pp.c:19961)
        BinaryOp: op='&' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:19961)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='32U' (at pp.c:19961)
          BinaryOp: op='<<' (at pp.c:19961)
            Constant: type='int', value='0x01' (at pp.c:19961)
            Constant: type='int', value='0' (at pp.c:19961)
  FuncDef:  (at pp.c:19965)
    Decl: name='HplMsp430GeneralIOP__0__IO__get', quals=[], storage=['inline', 'static'] (at pp.c:19965)
      FuncDecl: quals=None (at pp.c:19965)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__0__IO__get', quals=[] (at pp.c:19965)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:19967)
      Return:  (at pp.c:19969)
        BinaryOp: op='!=' (at None)
          FuncCall:  (at None)
            ID: name='HplMsp430GeneralIOP__0__IO__getRaw' (at pp.c:19969)
          Constant: type='int', value='0' (at pp.c:19969)
  FuncDef:  (at pp.c:19973)
    Decl: name='Msp430GpioC__3__HplGeneralIO__get', quals=[], storage=['static', 'inline'] (at pp.c:19973)
      FuncDecl: quals=None (at pp.c:19973)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__3__HplGeneralIO__get', quals=[] (at pp.c:19973)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:19973)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19975)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19975)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:19979)
        ID: name='__nesc_result' (at pp.c:19979)
        FuncCall:  (at None)
          ID: name='HplMsp430GeneralIOP__0__IO__get' (at pp.c:19979)
      Return:  (at pp.c:19983)
        ID: name='__nesc_result' (at pp.c:19983)
  FuncDef:  (at pp.c:19988)
    Decl: name='Msp430GpioC__3__GeneralIO__get', quals=[], storage=['inline', 'static'] (at pp.c:19988)
      FuncDecl: quals=None (at pp.c:19988)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__3__GeneralIO__get', quals=[] (at pp.c:19988)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:19990)
      Return:  (at pp.c:19992)
        FuncCall:  (at None)
          ID: name='Msp430GpioC__3__HplGeneralIO__get' (at pp.c:19992)
  FuncDef:  (at pp.c:19996)
    Decl: name='CC2420ReceiveP__FIFOP__get', quals=[], storage=['static', 'inline'] (at pp.c:19996)
      FuncDecl: quals=None (at pp.c:19996)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__FIFOP__get', quals=[] (at pp.c:19996)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:19996)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:19998)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:19998)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20002)
        ID: name='__nesc_result' (at pp.c:20002)
        FuncCall:  (at None)
          ID: name='Msp430GpioC__3__GeneralIO__get' (at pp.c:20002)
      Return:  (at pp.c:20006)
        ID: name='__nesc_result' (at pp.c:20006)
  FuncDef:  (at pp.c:20011)
    Decl: name='HplMsp430GeneralIOP__3__IO__getRaw', quals=[], storage=['inline', 'static'] (at pp.c:20011)
      FuncDecl: quals=None (at pp.c:20011)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__3__IO__getRaw', quals=[] (at pp.c:20011)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:20013)
      Return:  (at pp.c:20015)
        BinaryOp: op='&' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:20015)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='32U' (at pp.c:20015)
          BinaryOp: op='<<' (at pp.c:20015)
            Constant: type='int', value='0x01' (at pp.c:20015)
            Constant: type='int', value='3' (at pp.c:20015)
  FuncDef:  (at pp.c:20019)
    Decl: name='HplMsp430GeneralIOP__3__IO__get', quals=[], storage=['inline', 'static'] (at pp.c:20019)
      FuncDecl: quals=None (at pp.c:20019)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__3__IO__get', quals=[] (at pp.c:20019)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:20021)
      Return:  (at pp.c:20023)
        BinaryOp: op='!=' (at None)
          FuncCall:  (at None)
            ID: name='HplMsp430GeneralIOP__3__IO__getRaw' (at pp.c:20023)
          Constant: type='int', value='0' (at pp.c:20023)
  FuncDef:  (at pp.c:20027)
    Decl: name='Msp430GpioC__2__HplGeneralIO__get', quals=[], storage=['static', 'inline'] (at pp.c:20027)
      FuncDecl: quals=None (at pp.c:20027)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__2__HplGeneralIO__get', quals=[] (at pp.c:20027)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:20027)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20029)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20029)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20033)
        ID: name='__nesc_result' (at pp.c:20033)
        FuncCall:  (at None)
          ID: name='HplMsp430GeneralIOP__3__IO__get' (at pp.c:20033)
      Return:  (at pp.c:20037)
        ID: name='__nesc_result' (at pp.c:20037)
  FuncDef:  (at pp.c:20042)
    Decl: name='Msp430GpioC__2__GeneralIO__get', quals=[], storage=['inline', 'static'] (at pp.c:20042)
      FuncDecl: quals=None (at pp.c:20042)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__2__GeneralIO__get', quals=[] (at pp.c:20042)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:20044)
      Return:  (at pp.c:20046)
        FuncCall:  (at None)
          ID: name='Msp430GpioC__2__HplGeneralIO__get' (at pp.c:20046)
  FuncDef:  (at pp.c:20050)
    Decl: name='CC2420ReceiveP__FIFO__get', quals=[], storage=['static', 'inline'] (at pp.c:20050)
      FuncDecl: quals=None (at pp.c:20050)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__FIFO__get', quals=[] (at pp.c:20050)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:20050)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20052)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20052)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20056)
        ID: name='__nesc_result' (at pp.c:20056)
        FuncCall:  (at None)
          ID: name='Msp430GpioC__2__GeneralIO__get' (at pp.c:20056)
      Return:  (at pp.c:20060)
        ID: name='__nesc_result' (at pp.c:20060)
  FuncDef:  (at pp.c:20065)
    Decl: name='CC2420SpiP__Fifo__continueRead', quals=[], storage=['inline', 'static'] (at pp.c:20065)
      FuncDecl: quals=None (at pp.c:20065)
        ParamList:  (at pp.c:20065)
          Decl: name='addr', quals=[], storage=[] (at pp.c:20065)
            TypeDecl: declname='addr', quals=[] (at pp.c:20065)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:20065)
            PtrDecl: quals=[] (at pp.c:20065)
              TypeDecl: declname='data', quals=[] (at pp.c:20065)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:20066)
            TypeDecl: declname='len', quals=[] (at pp.c:20066)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Fifo__continueRead', quals=[] (at pp.c:20065)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20068)
      Return:  (at pp.c:20069)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__SpiPacket__send' (at pp.c:20069)
          ExprList:  (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                PtrDecl: quals=[] (at pp.c:20069)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['void'] (at None)
              Constant: type='int', value='0' (at pp.c:20069)
            ID: name='data' (at pp.c:20069)
            ID: name='len' (at pp.c:20069)
  FuncDef:  (at pp.c:20073)
    Decl: name='CC2420ReceiveP__RXFIFO__continueRead', quals=[], storage=['static', 'inline'] (at pp.c:20073)
      FuncDecl: quals=None (at pp.c:20073)
        ParamList:  (at pp.c:20073)
          Decl: name='data', quals=[], storage=[] (at pp.c:20073)
            PtrDecl: quals=[] (at pp.c:20073)
              TypeDecl: declname='data', quals=[] (at pp.c:20073)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='length', quals=[], storage=[] (at pp.c:20073)
            TypeDecl: declname='length', quals=[] (at pp.c:20073)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420ReceiveP__RXFIFO__continueRead', quals=[] (at pp.c:20073)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20073)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20075)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20075)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20079)
        ID: name='__nesc_result' (at pp.c:20079)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Fifo__continueRead' (at pp.c:20079)
          ExprList:  (at pp.c:20079)
            ID: name='CC2420_RXFIFO' (at pp.c:20079)
            ID: name='data' (at pp.c:20079)
            ID: name='length' (at pp.c:20079)
      Return:  (at pp.c:20083)
        ID: name='__nesc_result' (at pp.c:20083)
  FuncDef:  (at pp.c:20088)
    Decl: name='CC2420ReceiveP__RXFIFO__beginRead', quals=[], storage=['static', 'inline'] (at pp.c:20088)
      FuncDecl: quals=None (at pp.c:20088)
        ParamList:  (at pp.c:20088)
          Decl: name='data', quals=[], storage=[] (at pp.c:20088)
            PtrDecl: quals=[] (at pp.c:20088)
              TypeDecl: declname='data', quals=[] (at pp.c:20088)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='length', quals=[], storage=[] (at pp.c:20088)
            TypeDecl: declname='length', quals=[] (at pp.c:20088)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420ReceiveP__RXFIFO__beginRead', quals=[] (at pp.c:20088)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:20088)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20090)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20090)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20094)
        ID: name='__nesc_result' (at pp.c:20094)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Fifo__beginRead' (at pp.c:20094)
          ExprList:  (at pp.c:20094)
            ID: name='CC2420_RXFIFO' (at pp.c:20094)
            ID: name='data' (at pp.c:20094)
            ID: name='length' (at pp.c:20094)
      Return:  (at pp.c:20098)
        ID: name='__nesc_result' (at pp.c:20098)
  FuncDef:  (at pp.c:20103)
    Decl: name='CC2420ReceiveP__CSN__clr', quals=[], storage=['static', 'inline'] (at pp.c:20103)
      FuncDecl: quals=None (at pp.c:20103)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CSN__clr', quals=[] (at pp.c:20103)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20103)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__GeneralIO__clr' (at pp.c:20105)
  FuncDef:  (at pp.c:20110)
    Decl: name='CC2420ReceiveP__SACK__strobe', quals=[], storage=['static', 'inline'] (at pp.c:20110)
      FuncDecl: quals=None (at pp.c:20110)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__SACK__strobe', quals=[] (at pp.c:20110)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:20110)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20112)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20112)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20116)
        ID: name='__nesc_result' (at pp.c:20116)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Strobe__strobe' (at pp.c:20116)
          ExprList:  (at pp.c:20116)
            ID: name='CC2420_SACK' (at pp.c:20116)
      Return:  (at pp.c:20120)
        ID: name='__nesc_result' (at pp.c:20120)
  FuncDef:  (at pp.c:20125)
    Decl: name='CC2420ControlP__CC2420Config__isHwAutoAckDefault', quals=[], storage=['inline', 'static'] (at pp.c:20125)
      FuncDecl: quals=None (at pp.c:20125)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Config__isHwAutoAckDefault', quals=[] (at pp.c:20125)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:20127)
      Compound:  (at pp.c:20130)
        Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:20131)
          TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:20131)
            IdentifierType: names=['char', 'unsigned'] (at None)
          ID: name='CC2420ControlP__hwAutoAckDefault' (at pp.c:20133)
        Return:  (at pp.c:20136)
          ID: name='__nesc_temp' (at pp.c:20136)
  FuncDef:  (at pp.c:20141)
    Decl: name='CC2420ReceiveP__CC2420Config__isHwAutoAckDefault', quals=[], storage=['static', 'inline'] (at pp.c:20141)
      FuncDecl: quals=None (at pp.c:20141)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CC2420Config__isHwAutoAckDefault', quals=[] (at pp.c:20141)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:20141)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20143)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20143)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20147)
        ID: name='__nesc_result' (at pp.c:20147)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__CC2420Config__isHwAutoAckDefault' (at pp.c:20147)
      Return:  (at pp.c:20151)
        ID: name='__nesc_result' (at pp.c:20151)
  FuncDef:  (at pp.c:20156)
    Decl: name='CC2420ControlP__CC2420Config__isAutoAckEnabled', quals=[], storage=['inline', 'static'] (at pp.c:20156)
      FuncDecl: quals=None (at pp.c:20156)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Config__isAutoAckEnabled', quals=[] (at pp.c:20156)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:20158)
      Compound:  (at pp.c:20161)
        Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:20162)
          TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:20162)
            IdentifierType: names=['char', 'unsigned'] (at None)
          ID: name='CC2420ControlP__autoAckEnabled' (at pp.c:20164)
        Return:  (at pp.c:20167)
          ID: name='__nesc_temp' (at pp.c:20167)
  FuncDef:  (at pp.c:20172)
    Decl: name='CC2420ReceiveP__CC2420Config__isAutoAckEnabled', quals=[], storage=['static', 'inline'] (at pp.c:20172)
      FuncDecl: quals=None (at pp.c:20172)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CC2420Config__isAutoAckEnabled', quals=[] (at pp.c:20172)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:20172)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20174)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20174)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20178)
        ID: name='__nesc_result' (at pp.c:20178)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__CC2420Config__isAutoAckEnabled' (at pp.c:20178)
      Return:  (at pp.c:20182)
        ID: name='__nesc_result' (at pp.c:20182)
  FuncDef:  (at pp.c:20187)
    Decl: name='CC2420ReceiveP__RXFIFO__readDone', quals=[], storage=['inline', 'static'] (at pp.c:20187)
      FuncDecl: quals=None (at pp.c:20187)
        ParamList:  (at pp.c:20187)
          Decl: name='rx_buf', quals=[], storage=[] (at pp.c:20187)
            PtrDecl: quals=[] (at pp.c:20187)
              TypeDecl: declname='rx_buf', quals=[] (at pp.c:20187)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='rx_len', quals=[], storage=[] (at pp.c:20187)
            TypeDecl: declname='rx_len', quals=[] (at pp.c:20187)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:20188)
            TypeDecl: declname='error', quals=[] (at pp.c:20188)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420ReceiveP__RXFIFO__readDone', quals=[] (at pp.c:20187)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20190)
      Decl: name='header', quals=[], storage=[] (at pp.c:20191)
        PtrDecl: quals=[] (at pp.c:20191)
          TypeDecl: declname='header', quals=[] (at pp.c:20191)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420ReceiveP__CC2420PacketBody__getHeader' (at pp.c:20191)
          ExprList:  (at pp.c:20191)
            ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:20191)
      Decl: name='tmpLen', quals=[], storage=[] (at pp.c:20192)
        TypeDecl: declname='tmpLen', quals=[] (at pp.c:20192)
          IdentifierType: names=['uint8_t'] (at None)
        BinaryOp: op='-' (at pp.c:20192)
          UnaryOp: op='sizeof' (at pp.c:20192)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['message_t'] (at None)
          BinaryOp: op='-' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['size_t'] (at None)
              UnaryOp: op='&' (at None)
                StructRef: type='->' (at None)
                  Cast:  (at None)
                    Typename: quals=[] (at None)
                      PtrDecl: quals=[] (at pp.c:20192)
                        TypeDecl: declname=None, quals=[] (at None)
                          IdentifierType: names=['message_t'] (at None)
                    Constant: type='int', value='0' (at pp.c:20192)
                  ID: name='data' (at pp.c:20192)
            UnaryOp: op='sizeof' (at pp.c:20192)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['cc2420_header_t'] (at None)
      Decl: name='buf', quals=[], storage=[] (at pp.c:20193)
        PtrDecl: quals=[] (at pp.c:20193)
          TypeDecl: declname='buf', quals=[] (at pp.c:20193)
            IdentifierType: names=['uint8_t'] (at None)
        Cast:  (at None)
          Typename: quals=[] (at None)
            PtrDecl: quals=[] (at pp.c:20193)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['uint8_t'] (at None)
          ID: name='header' (at pp.c:20193)
      Assignment: op='=' (at pp.c:20196)
        ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:20196)
        ArrayRef:  (at pp.c:20196)
          ID: name='buf' (at pp.c:20196)
          Constant: type='int', value='0' (at pp.c:20196)
      Switch:  (at pp.c:20198)
        ID: name='CC2420ReceiveP__m_state' (at pp.c:20198)
        Compound:  (at pp.c:20198)
          Case:  (at pp.c:20200)
            ID: name='CC2420ReceiveP__S_RX_LENGTH' (at pp.c:20200)
            Assignment: op='=' (at pp.c:20201)
              ID: name='CC2420ReceiveP__m_state' (at pp.c:20201)
              ID: name='CC2420ReceiveP__S_RX_FCF' (at pp.c:20201)
          If:  (at pp.c:20205)
            BinaryOp: op='>' (at pp.c:20205)
              BinaryOp: op='+' (at pp.c:20205)
                ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:20205)
                Constant: type='int', value='1' (at pp.c:20205)
              ID: name='CC2420ReceiveP__m_bytes_left' (at pp.c:20205)
            Compound:  (at pp.c:20209)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__flush' (at pp.c:20211)
            Compound:  (at pp.c:20213)
              If:  (at pp.c:20214)
                BinaryOp: op='&&' (at None)
                  UnaryOp: op='!' (at None)
                    FuncCall:  (at None)
                      ID: name='CC2420ReceiveP__FIFO__get' (at pp.c:20214)
                  UnaryOp: op='!' (at None)
                    FuncCall:  (at None)
                      ID: name='CC2420ReceiveP__FIFOP__get' (at pp.c:20214)
                Compound:  (at pp.c:20214)
                  Assignment: op='-=' (at pp.c:20215)
                    ID: name='CC2420ReceiveP__m_bytes_left' (at pp.c:20215)
                    BinaryOp: op='+' (at pp.c:20215)
                      ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:20215)
                      Constant: type='int', value='1' (at pp.c:20215)
              If:  (at pp.c:20218)
                BinaryOp: op='<=' (at pp.c:20218)
                  ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:20218)
                  ID: name='MAC_PACKET_SIZE' (at pp.c:20218)
                Compound:  (at pp.c:20218)
                  If:  (at pp.c:20219)
                    BinaryOp: op='>' (at pp.c:20219)
                      ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:20219)
                      Constant: type='int', value='0' (at pp.c:20219)
                    Compound:  (at pp.c:20219)
                      If:  (at pp.c:20220)
                        BinaryOp: op='>' (at pp.c:20220)
                          ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:20220)
                          ID: name='CC2420ReceiveP__SACK_HEADER_LENGTH' (at pp.c:20220)
                        Compound:  (at pp.c:20220)
                          FuncCall:  (at None)
                            ID: name='CC2420ReceiveP__RXFIFO__continueRead' (at pp.c:20222)
                            ExprList:  (at pp.c:20222)
                              BinaryOp: op='+' (at pp.c:20222)
                                ID: name='buf' (at pp.c:20222)
                                Constant: type='int', value='1' (at pp.c:20222)
                              ID: name='CC2420ReceiveP__SACK_HEADER_LENGTH' (at pp.c:20222)
                        Compound:  (at pp.c:20224)
                          Assignment: op='=' (at pp.c:20226)
                            ID: name='CC2420ReceiveP__m_state' (at pp.c:20226)
                            ID: name='CC2420ReceiveP__S_RX_PAYLOAD' (at pp.c:20226)
                          FuncCall:  (at None)
                            ID: name='CC2420ReceiveP__RXFIFO__continueRead' (at pp.c:20227)
                            ExprList:  (at pp.c:20227)
                              BinaryOp: op='+' (at pp.c:20227)
                                ID: name='buf' (at pp.c:20227)
                                Constant: type='int', value='1' (at pp.c:20227)
                              ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:20227)
                    Compound:  (at pp.c:20230)
                      Assignment: op='=' (at pp.c:20232)
                        ID: name='CC2420ReceiveP__receivingPacket' (at pp.c:20232)
                        ID: name='FALSE' (at pp.c:20232)
                      FuncCall:  (at None)
                        ID: name='CC2420ReceiveP__CSN__set' (at pp.c:20233)
                      FuncCall:  (at None)
                        ID: name='CC2420ReceiveP__SpiResource__release' (at pp.c:20234)
                      FuncCall:  (at None)
                        ID: name='CC2420ReceiveP__waitForNextPacket' (at pp.c:20235)
                Compound:  (at pp.c:20238)
                  FuncCall:  (at None)
                    ID: name='CC2420ReceiveP__flush' (at pp.c:20240)
          Break:  (at pp.c:20243)
          Case:  (at pp.c:20245)
            ID: name='CC2420ReceiveP__S_RX_FCF' (at pp.c:20245)
            Assignment: op='=' (at pp.c:20246)
              ID: name='CC2420ReceiveP__m_state' (at pp.c:20246)
              ID: name='CC2420ReceiveP__S_RX_PAYLOAD' (at pp.c:20246)
          If:  (at pp.c:20257)
            BinaryOp: op='&&' (at None)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__CC2420Config__isAutoAckEnabled' (at pp.c:20257)
              UnaryOp: op='!' (at None)
                FuncCall:  (at None)
                  ID: name='CC2420ReceiveP__CC2420Config__isHwAutoAckDefault' (at pp.c:20257)
            Compound:  (at pp.c:20257)
              If:  (at pp.c:20261)
                BinaryOp: op='&&' (at None)
                  BinaryOp: op='&&' (at None)
                    BinaryOp: op='==' (at None)
                      BinaryOp: op='&' (at None)
                        BinaryOp: op='>>' (at None)
                          FuncCall:  (at None)
                            ID: name='__nesc_ntoh_leuint16' (at pp.c:20261)
                            ExprList:  (at pp.c:20263)
                              StructRef: type='.' (at pp.c:20263)
                                StructRef: type='->' (at pp.c:20263)
                                  ID: name='header' (at pp.c:20263)
                                  ID: name='fcf' (at pp.c:20263)
                                ID: name='nxdata' (at pp.c:20263)
                          ID: name='IEEE154_FCF_ACK_REQ' (at pp.c:20263)
                        Constant: type='int', value='0x01' (at pp.c:20263)
                      Constant: type='int', value='1' (at pp.c:20263)
                    BinaryOp: op='||' (at None)
                      BinaryOp: op='==' (at None)
                        FuncCall:  (at None)
                          ID: name='__nesc_ntoh_leuint16' (at pp.c:20264)
                          ExprList:  (at pp.c:20264)
                            StructRef: type='.' (at pp.c:20264)
                              StructRef: type='->' (at pp.c:20264)
                                ID: name='header' (at pp.c:20264)
                                ID: name='dest' (at pp.c:20264)
                              ID: name='nxdata' (at pp.c:20264)
                        FuncCall:  (at None)
                          ID: name='CC2420ReceiveP__CC2420Config__getShortAddr' (at pp.c:20264)
                      BinaryOp: op='==' (at None)
                        FuncCall:  (at None)
                          ID: name='__nesc_ntoh_leuint16' (at pp.c:20265)
                          ExprList:  (at pp.c:20265)
                            StructRef: type='.' (at pp.c:20265)
                              StructRef: type='->' (at pp.c:20265)
                                ID: name='header' (at pp.c:20265)
                                ID: name='dest' (at pp.c:20265)
                              ID: name='nxdata' (at pp.c:20265)
                        ID: name='AM_BROADCAST_ADDR' (at pp.c:20265)
                  BinaryOp: op='==' (at None)
                    BinaryOp: op='&' (at None)
                      BinaryOp: op='>>' (at None)
                        FuncCall:  (at None)
                          ID: name='__nesc_ntoh_leuint16' (at pp.c:20266)
                          ExprList:  (at pp.c:20266)
                            StructRef: type='.' (at pp.c:20266)
                              StructRef: type='->' (at pp.c:20266)
                                ID: name='header' (at pp.c:20266)
                                ID: name='fcf' (at pp.c:20266)
                              ID: name='nxdata' (at pp.c:20266)
                        ID: name='IEEE154_FCF_FRAME_TYPE' (at pp.c:20266)
                      Constant: type='int', value='7' (at pp.c:20266)
                    ID: name='IEEE154_TYPE_DATA' (at pp.c:20266)
                Compound:  (at pp.c:20266)
                  FuncCall:  (at None)
                    ID: name='CC2420ReceiveP__CSN__set' (at pp.c:20268)
                  FuncCall:  (at None)
                    ID: name='CC2420ReceiveP__CSN__clr' (at pp.c:20269)
                  FuncCall:  (at None)
                    ID: name='CC2420ReceiveP__SACK__strobe' (at pp.c:20270)
                  FuncCall:  (at None)
                    ID: name='CC2420ReceiveP__CSN__set' (at pp.c:20271)
                  FuncCall:  (at None)
                    ID: name='CC2420ReceiveP__CSN__clr' (at pp.c:20272)
                  FuncCall:  (at None)
                    ID: name='CC2420ReceiveP__RXFIFO__beginRead' (at pp.c:20273)
                    ExprList:  (at pp.c:20273)
                      BinaryOp: op='+' (at pp.c:20273)
                        BinaryOp: op='+' (at pp.c:20273)
                          ID: name='buf' (at pp.c:20273)
                          Constant: type='int', value='1' (at pp.c:20273)
                        ID: name='CC2420ReceiveP__SACK_HEADER_LENGTH' (at pp.c:20273)
                      BinaryOp: op='-' (at pp.c:20274)
                        ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:20274)
                        ID: name='CC2420ReceiveP__SACK_HEADER_LENGTH' (at pp.c:20274)
                  Return:  (at pp.c:20275)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__RXFIFO__continueRead' (at pp.c:20279)
            ExprList:  (at pp.c:20279)
              BinaryOp: op='+' (at pp.c:20279)
                BinaryOp: op='+' (at pp.c:20279)
                  ID: name='buf' (at pp.c:20279)
                  Constant: type='int', value='1' (at pp.c:20279)
                ID: name='CC2420ReceiveP__SACK_HEADER_LENGTH' (at pp.c:20279)
              BinaryOp: op='-' (at pp.c:20280)
                ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:20280)
                ID: name='CC2420ReceiveP__SACK_HEADER_LENGTH' (at pp.c:20280)
          Break:  (at pp.c:20281)
          Case:  (at pp.c:20283)
            ID: name='CC2420ReceiveP__S_RX_PAYLOAD' (at pp.c:20283)
            FuncCall:  (at None)
              ID: name='CC2420ReceiveP__CSN__set' (at pp.c:20285)
          If:  (at pp.c:20286)
            UnaryOp: op='!' (at pp.c:20286)
              ID: name='CC2420ReceiveP__m_missed_packets' (at pp.c:20286)
            Compound:  (at pp.c:20286)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__SpiResource__release' (at pp.c:20288)
          If:  (at pp.c:20294)
            BinaryOp: op='||' (at pp.c:20296)
              BinaryOp: op='||' (at pp.c:20296)
                BinaryOp: op='||' (at pp.c:20296)
                  BinaryOp: op='&&' (at pp.c:20296)
                    ID: name='CC2420ReceiveP__m_missed_packets' (at pp.c:20296)
                    FuncCall:  (at None)
                      ID: name='CC2420ReceiveP__FIFO__get' (at pp.c:20296)
                  UnaryOp: op='!' (at None)
                    FuncCall:  (at None)
                      ID: name='CC2420ReceiveP__FIFOP__get' (at pp.c:20296)
                UnaryOp: op='!' (at pp.c:20297)
                  ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:20297)
              BinaryOp: op='<=' (at pp.c:20298)
                ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:20298)
                Constant: type='int', value='10' (at pp.c:20298)
            Compound:  (at pp.c:20298)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__PacketTimeStamp__clear' (at pp.c:20299)
                ExprList:  (at pp.c:20299)
                  ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:20299)
            Compound:  (at pp.c:20301)
              If:  (at pp.c:20302)
                BinaryOp: op='==' (at pp.c:20302)
                  ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:20302)
                  Constant: type='int', value='1' (at pp.c:20302)
                Compound:  (at pp.c:20302)
                  FuncCall:  (at None)
                    ID: name='CC2420ReceiveP__PacketTimeStamp__set' (at pp.c:20303)
                    ExprList:  (at pp.c:20303)
                      ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:20303)
                      ArrayRef:  (at pp.c:20303)
                        ID: name='CC2420ReceiveP__m_timestamp_queue' (at pp.c:20303)
                        ID: name='CC2420ReceiveP__m_timestamp_head' (at pp.c:20303)
              Assignment: op='=' (at pp.c:20306)
                ID: name='CC2420ReceiveP__m_timestamp_head' (at pp.c:20306)
                BinaryOp: op='%' (at pp.c:20306)
                  BinaryOp: op='+' (at pp.c:20306)
                    ID: name='CC2420ReceiveP__m_timestamp_head' (at pp.c:20306)
                    Constant: type='int', value='1' (at pp.c:20306)
                  ID: name='CC2420ReceiveP__TIMESTAMP_QUEUE_SIZE' (at pp.c:20306)
              UnaryOp: op='p--' (at pp.c:20307)
                ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:20307)
              If:  (at pp.c:20309)
                BinaryOp: op='>' (at pp.c:20309)
                  ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:20309)
                  Constant: type='int', value='0' (at pp.c:20309)
                Compound:  (at pp.c:20309)
                  FuncCall:  (at None)
                    ID: name='CC2420ReceiveP__PacketTimeStamp__clear' (at pp.c:20310)
                    ExprList:  (at pp.c:20310)
                      ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:20310)
                  Assignment: op='=' (at pp.c:20311)
                    ID: name='CC2420ReceiveP__m_timestamp_head' (at pp.c:20311)
                    Constant: type='int', value='0' (at pp.c:20311)
                  Assignment: op='=' (at pp.c:20312)
                    ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:20312)
                    Constant: type='int', value='0' (at pp.c:20312)
          If:  (at pp.c:20318)
            BinaryOp: op='&&' (at pp.c:20318)
              BinaryOp: op='>>' (at pp.c:20318)
                ArrayRef:  (at pp.c:20318)
                  ID: name='buf' (at pp.c:20318)
                  ID: name='CC2420ReceiveP__rxFrameLength' (at pp.c:20318)
                Constant: type='int', value='7' (at pp.c:20318)
              ID: name='rx_buf' (at pp.c:20318)
            Compound:  (at pp.c:20318)
              Decl: name='type', quals=[], storage=[] (at pp.c:20319)
                TypeDecl: declname='type', quals=[] (at pp.c:20319)
                  IdentifierType: names=['uint8_t'] (at None)
                BinaryOp: op='&' (at None)
                  BinaryOp: op='>>' (at None)
                    FuncCall:  (at None)
                      ID: name='__nesc_ntoh_leuint16' (at pp.c:20319)
                      ExprList:  (at pp.c:20319)
                        StructRef: type='.' (at pp.c:20319)
                          StructRef: type='->' (at pp.c:20319)
                            ID: name='header' (at pp.c:20319)
                            ID: name='fcf' (at pp.c:20319)
                          ID: name='nxdata' (at pp.c:20319)
                    ID: name='IEEE154_FCF_FRAME_TYPE' (at pp.c:20319)
                  Constant: type='int', value='7' (at pp.c:20319)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__CC2420Receive__receive' (at pp.c:20322)
                ExprList:  (at pp.c:20322)
                  ID: name='type' (at pp.c:20322)
                  ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:20322)
              If:  (at pp.c:20323)
                BinaryOp: op='==' (at pp.c:20323)
                  ID: name='type' (at pp.c:20323)
                  ID: name='IEEE154_TYPE_DATA' (at pp.c:20323)
                Compound:  (at pp.c:20323)
                  FuncCall:  (at None)
                    ID: name='CC2420ReceiveP__receiveDone_task__postTask' (at pp.c:20324)
                  Return:  (at pp.c:20325)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__waitForNextPacket' (at pp.c:20329)
          Break:  (at pp.c:20330)
          Default:  (at pp.c:20332)
            Assignment: op='=' (at pp.c:20333)
              ID: name='CC2420ReceiveP__receivingPacket' (at pp.c:20333)
              ID: name='FALSE' (at pp.c:20333)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__CSN__set' (at pp.c:20334)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__SpiResource__release' (at pp.c:20335)
          Break:  (at pp.c:20336)
  FuncDef:  (at pp.c:20341)
    Decl: name='CC2420SpiP__Fifo__default__readDone', quals=[], storage=['inline', 'static'] (at pp.c:20341)
      FuncDecl: quals=None (at pp.c:20341)
        ParamList:  (at pp.c:20341)
          Decl: name='addr', quals=[], storage=[] (at pp.c:20341)
            TypeDecl: declname='addr', quals=[] (at pp.c:20341)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='rx_buf', quals=[], storage=[] (at pp.c:20341)
            PtrDecl: quals=[] (at pp.c:20341)
              TypeDecl: declname='rx_buf', quals=[] (at pp.c:20341)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='rx_len', quals=[], storage=[] (at pp.c:20341)
            TypeDecl: declname='rx_len', quals=[] (at pp.c:20341)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:20341)
            TypeDecl: declname='error', quals=[] (at pp.c:20341)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Fifo__default__readDone', quals=[] (at pp.c:20341)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20343)
  FuncDef:  (at pp.c:20347)
    Decl: name='CC2420SpiP__Fifo__readDone', quals=[], storage=['static', 'inline'] (at pp.c:20347)
      FuncDecl: quals=None (at pp.c:20347)
        ParamList:  (at pp.c:20347)
          Decl: name='arg_0x101c0a020', quals=[], storage=[] (at pp.c:20347)
            TypeDecl: declname='arg_0x101c0a020', quals=[] (at pp.c:20347)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:20347)
            PtrDecl: quals=[] (at pp.c:20347)
              TypeDecl: declname='data', quals=[] (at pp.c:20347)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='length', quals=[], storage=[] (at pp.c:20347)
            TypeDecl: declname='length', quals=[] (at pp.c:20347)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:20347)
            TypeDecl: declname='error', quals=[] (at pp.c:20347)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Fifo__readDone', quals=[] (at pp.c:20347)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20347)
      Switch:  (at pp.c:20349)
        ID: name='arg_0x101c0a020' (at pp.c:20349)
        Compound:  (at pp.c:20349)
          Case:  (at pp.c:20351)
            ID: name='CC2420_TXFIFO' (at pp.c:20351)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__TXFIFO__readDone' (at pp.c:20353)
              ExprList:  (at pp.c:20353)
                ID: name='data' (at pp.c:20353)
                ID: name='length' (at pp.c:20353)
                ID: name='error' (at pp.c:20353)
          Break:  (at pp.c:20355)
          Case:  (at pp.c:20357)
            ID: name='CC2420_RXFIFO' (at pp.c:20357)
            FuncCall:  (at None)
              ID: name='CC2420ReceiveP__RXFIFO__readDone' (at pp.c:20359)
              ExprList:  (at pp.c:20359)
                ID: name='data' (at pp.c:20359)
                ID: name='length' (at pp.c:20359)
                ID: name='error' (at pp.c:20359)
          Break:  (at pp.c:20361)
          Default:  (at pp.c:20363)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__Fifo__default__readDone' (at pp.c:20365)
              ExprList:  (at pp.c:20365)
                ID: name='arg_0x101c0a020' (at pp.c:20365)
                ID: name='data' (at pp.c:20365)
                ID: name='length' (at pp.c:20365)
                ID: name='error' (at pp.c:20365)
          Break:  (at pp.c:20367)
  FuncDef:  (at pp.c:20374)
    Decl: name='CC2420ReceiveP__SFLUSHRX__strobe', quals=[], storage=['static', 'inline'] (at pp.c:20374)
      FuncDecl: quals=None (at pp.c:20374)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__SFLUSHRX__strobe', quals=[] (at pp.c:20374)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:20374)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20376)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20376)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20380)
        ID: name='__nesc_result' (at pp.c:20380)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Strobe__strobe' (at pp.c:20380)
          ExprList:  (at pp.c:20380)
            ID: name='CC2420_SFLUSHRX' (at pp.c:20380)
      Return:  (at pp.c:20384)
        ID: name='__nesc_result' (at pp.c:20384)
  FuncDef:  (at pp.c:20389)
    Decl: name='CC2420ActiveMessageP__RadioBackoff__default__requestInitialBackoff', quals=[], storage=['inline', 'static'] (at pp.c:20389)
      FuncDecl: quals=None (at pp.c:20389)
        ParamList:  (at pp.c:20389)
          Decl: name='id', quals=[], storage=[] (at pp.c:20389)
            TypeDecl: declname='id', quals=[] (at pp.c:20389)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20390)
            PtrDecl: quals=[] (at pp.c:20390)
              TypeDecl: declname='msg', quals=[] (at pp.c:20390)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__default__requestInitialBackoff', quals=[] (at pp.c:20389)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20392)
  FuncDef:  (at pp.c:20396)
    Decl: name='CC2420ActiveMessageP__RadioBackoff__requestInitialBackoff', quals=[], storage=['static', 'inline'] (at pp.c:20396)
      FuncDecl: quals=None (at pp.c:20396)
        ParamList:  (at pp.c:20396)
          Decl: name='arg_0x1024e7d60', quals=[], storage=[] (at pp.c:20396)
            TypeDecl: declname='arg_0x1024e7d60', quals=[] (at pp.c:20396)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20396)
            PtrDecl: quals=[] (at pp.c:20396)
              TypeDecl: declname='msg', quals=[] (at pp.c:20396)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__RadioBackoff__requestInitialBackoff', quals=[] (at pp.c:20396)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20396)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__RadioBackoff__default__requestInitialBackoff' (at pp.c:20398)
        ExprList:  (at pp.c:20398)
          ID: name='arg_0x1024e7d60' (at pp.c:20398)
          ID: name='msg' (at pp.c:20398)
  FuncDef:  (at pp.c:20403)
    Decl: name='CC2420ActiveMessageP__SubBackoff__requestInitialBackoff', quals=[], storage=['inline', 'static'] (at pp.c:20403)
      FuncDecl: quals=None (at pp.c:20403)
        ParamList:  (at pp.c:20403)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20403)
            PtrDecl: quals=[] (at pp.c:20403)
              TypeDecl: declname='msg', quals=[] (at pp.c:20403)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__SubBackoff__requestInitialBackoff', quals=[] (at pp.c:20403)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20405)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__RadioBackoff__requestInitialBackoff' (at pp.c:20406)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='__nesc_ntoh_leuint8' (at pp.c:20406)
            ExprList:  (at None)
              StructRef: type='.' (at None)
                StructRef: type='->' (at None)
                  Cast:  (at None)
                    Typename: quals=[] (at None)
                      PtrDecl: quals=[] (at pp.c:20406)
                        TypeDecl: declname=None, quals=[] (at None)
                          IdentifierType: names=['cc2420_header_t'] (at None)
                    BinaryOp: op='-' (at None)
                      BinaryOp: op='+' (at None)
                        Cast:  (at None)
                          Typename: quals=[] (at None)
                            PtrDecl: quals=[] (at pp.c:20406)
                              TypeDecl: declname=None, quals=[] (at None)
                                IdentifierType: names=['uint8_t'] (at None)
                          ID: name='msg' (at pp.c:20406)
                        Cast:  (at None)
                          Typename: quals=[] (at None)
                            TypeDecl: declname=None, quals=[] (at None)
                              IdentifierType: names=['size_t'] (at None)
                          UnaryOp: op='&' (at None)
                            StructRef: type='->' (at None)
                              Cast:  (at None)
                                Typename: quals=[] (at None)
                                  PtrDecl: quals=[] (at pp.c:20406)
                                    TypeDecl: declname=None, quals=[] (at None)
                                      IdentifierType: names=['message_t'] (at None)
                                Constant: type='int', value='0' (at pp.c:20406)
                              ID: name='data' (at pp.c:20406)
                      UnaryOp: op='sizeof' (at pp.c:20406)
                        Typename: quals=[] (at None)
                          TypeDecl: declname=None, quals=[] (at None)
                            IdentifierType: names=['cc2420_header_t'] (at None)
                  ID: name='type' (at pp.c:20406)
                ID: name='nxdata' (at pp.c:20406)
          ID: name='msg' (at pp.c:20406)
  FuncDef:  (at pp.c:20410)
    Decl: name='CC2420CsmaP__RadioBackoff__requestInitialBackoff', quals=[], storage=['static', 'inline'] (at pp.c:20410)
      FuncDecl: quals=None (at pp.c:20410)
        ParamList:  (at pp.c:20410)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20410)
            PtrDecl: quals=[] (at pp.c:20410)
              TypeDecl: declname='msg', quals=[] (at pp.c:20410)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__RadioBackoff__requestInitialBackoff', quals=[] (at pp.c:20410)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20410)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__SubBackoff__requestInitialBackoff' (at pp.c:20412)
        ExprList:  (at pp.c:20412)
          ID: name='msg' (at pp.c:20412)
  FuncDef:  (at pp.c:20417)
    Decl: name='CC2420TransmitP__RadioBackoff__setInitialBackoff', quals=[], storage=['inline', 'static'] (at pp.c:20417)
      FuncDecl: quals=None (at pp.c:20417)
        ParamList:  (at pp.c:20417)
          Decl: name='backoffTime', quals=[], storage=[] (at pp.c:20417)
            TypeDecl: declname='backoffTime', quals=[] (at pp.c:20417)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__RadioBackoff__setInitialBackoff', quals=[] (at pp.c:20417)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20419)
      Assignment: op='=' (at pp.c:20420)
        ID: name='CC2420TransmitP__myInitialBackoff' (at pp.c:20420)
        BinaryOp: op='+' (at pp.c:20420)
          ID: name='backoffTime' (at pp.c:20420)
          Constant: type='int', value='1' (at pp.c:20420)
  FuncDef:  (at pp.c:20424)
    Decl: name='CC2420CsmaP__SubBackoff__setInitialBackoff', quals=[], storage=['static', 'inline'] (at pp.c:20424)
      FuncDecl: quals=None (at pp.c:20424)
        ParamList:  (at pp.c:20424)
          Decl: name='backoffTime', quals=[], storage=[] (at pp.c:20424)
            TypeDecl: declname='backoffTime', quals=[] (at pp.c:20424)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__SubBackoff__setInitialBackoff', quals=[] (at pp.c:20424)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20424)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__RadioBackoff__setInitialBackoff' (at pp.c:20426)
        ExprList:  (at pp.c:20426)
          ID: name='backoffTime' (at pp.c:20426)
  FuncDef:  (at pp.c:20431)
    Decl: name='CC2420CsmaP__SubBackoff__requestInitialBackoff', quals=[], storage=['inline', 'static'] (at pp.c:20431)
      FuncDecl: quals=None (at pp.c:20431)
        ParamList:  (at pp.c:20431)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20431)
            PtrDecl: quals=[] (at pp.c:20431)
              TypeDecl: declname='msg', quals=[] (at pp.c:20431)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__SubBackoff__requestInitialBackoff', quals=[] (at pp.c:20431)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20433)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__SubBackoff__setInitialBackoff' (at pp.c:20434)
        ExprList:  (at None)
          BinaryOp: op='+' (at None)
            BinaryOp: op='%' (at None)
              FuncCall:  (at None)
                ID: name='CC2420CsmaP__Random__rand16' (at pp.c:20434)
              BinaryOp: op='*' (at pp.c:20435)
                Constant: type='int', value='0x1F' (at pp.c:20435)
                ID: name='CC2420_BACKOFF_PERIOD' (at pp.c:20435)
            ID: name='CC2420_MIN_BACKOFF' (at pp.c:20435)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__RadioBackoff__requestInitialBackoff' (at pp.c:20437)
        ExprList:  (at pp.c:20437)
          ID: name='msg' (at pp.c:20437)
  FuncDef:  (at pp.c:20441)
    Decl: name='CC2420TransmitP__RadioBackoff__requestInitialBackoff', quals=[], storage=['static', 'inline'] (at pp.c:20441)
      FuncDecl: quals=None (at pp.c:20441)
        ParamList:  (at pp.c:20441)
          Decl: name='msg', quals=[], storage=[] (at pp.c:20441)
            PtrDecl: quals=[] (at pp.c:20441)
              TypeDecl: declname='msg', quals=[] (at pp.c:20441)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__RadioBackoff__requestInitialBackoff', quals=[] (at pp.c:20441)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20441)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__SubBackoff__requestInitialBackoff' (at pp.c:20443)
        ExprList:  (at pp.c:20443)
          ID: name='msg' (at pp.c:20443)
  FuncDef:  (at pp.c:20448)
    Decl: name='CC2420CsmaP__sendDone_task__postTask', quals=[], storage=['static', 'inline'] (at pp.c:20448)
      FuncDecl: quals=None (at pp.c:20448)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__sendDone_task__postTask', quals=[] (at pp.c:20448)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20448)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20450)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20450)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20454)
        ID: name='__nesc_result' (at pp.c:20454)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:20454)
          ExprList:  (at pp.c:20454)
            ID: name='CC2420CsmaP__sendDone_task' (at pp.c:20454)
      Return:  (at pp.c:20458)
        ID: name='__nesc_result' (at pp.c:20458)
  FuncDef:  (at pp.c:20463)
    Decl: name='CC2420CsmaP__CC2420Transmit__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:20463)
      FuncDecl: quals=None (at pp.c:20463)
        ParamList:  (at pp.c:20463)
          Decl: name='p_msg', quals=[], storage=[] (at pp.c:20463)
            PtrDecl: quals=[] (at pp.c:20463)
              TypeDecl: declname='p_msg', quals=[] (at pp.c:20463)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='err', quals=[], storage=[] (at pp.c:20463)
            TypeDecl: declname='err', quals=[] (at pp.c:20463)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__CC2420Transmit__sendDone', quals=[] (at pp.c:20463)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20465)
      Compound:  (at pp.c:20466)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:20466)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:20466)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:20466)
        Assignment: op='=' (at pp.c:20468)
          ID: name='CC2420CsmaP__sendErr' (at pp.c:20468)
          ID: name='err' (at pp.c:20468)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:20470)
          ExprList:  (at pp.c:20470)
            ID: name='__nesc_atomic' (at pp.c:20470)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__sendDone_task__postTask' (at pp.c:20471)
  FuncDef:  (at pp.c:20475)
    Decl: name='CC2420TransmitP__Send__sendDone', quals=[], storage=['static', 'inline'] (at pp.c:20475)
      FuncDecl: quals=None (at pp.c:20475)
        ParamList:  (at pp.c:20475)
          Decl: name='p_msg', quals=[], storage=[] (at pp.c:20475)
            PtrDecl: quals=[] (at pp.c:20475)
              TypeDecl: declname='p_msg', quals=[] (at pp.c:20475)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:20475)
            TypeDecl: declname='error', quals=[] (at pp.c:20475)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__Send__sendDone', quals=[] (at pp.c:20475)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20475)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__CC2420Transmit__sendDone' (at pp.c:20477)
        ExprList:  (at pp.c:20477)
          ID: name='p_msg' (at pp.c:20477)
          ID: name='error' (at pp.c:20477)
  FuncDef:  (at pp.c:20482)
    Decl: name='CC2420TransmitP__TXFIFO__writeDone', quals=[], storage=['inline', 'static'] (at pp.c:20482)
      FuncDecl: quals=None (at pp.c:20482)
        ParamList:  (at pp.c:20482)
          Decl: name='tx_buf', quals=[], storage=[] (at pp.c:20482)
            PtrDecl: quals=[] (at pp.c:20482)
              TypeDecl: declname='tx_buf', quals=[] (at pp.c:20482)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='tx_len', quals=[], storage=[] (at pp.c:20482)
            TypeDecl: declname='tx_len', quals=[] (at pp.c:20482)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:20483)
            TypeDecl: declname='error', quals=[] (at pp.c:20483)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__TXFIFO__writeDone', quals=[] (at pp.c:20482)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20485)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__CSN__set' (at pp.c:20487)
      If:  (at pp.c:20488)
        BinaryOp: op='==' (at pp.c:20488)
          ID: name='CC2420TransmitP__m_state' (at pp.c:20488)
          ID: name='CC2420TransmitP__S_CANCEL' (at pp.c:20488)
        Compound:  (at pp.c:20488)
          Compound:  (at pp.c:20491)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__CSN__clr' (at pp.c:20492)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__SFLUSHTX__strobe' (at pp.c:20493)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__CSN__set' (at pp.c:20494)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__releaseSpiResource' (at pp.c:20496)
          Assignment: op='=' (at pp.c:20497)
            ID: name='CC2420TransmitP__m_state' (at pp.c:20497)
            ID: name='CC2420TransmitP__S_STARTED' (at pp.c:20497)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__Send__sendDone' (at pp.c:20498)
            ExprList:  (at pp.c:20498)
              ID: name='CC2420TransmitP__m_msg' (at pp.c:20498)
              ID: name='ECANCEL' (at pp.c:20498)
        Compound:  (at pp.c:20500)
          If:  (at pp.c:20502)
            UnaryOp: op='!' (at pp.c:20502)
              ID: name='CC2420TransmitP__m_cca' (at pp.c:20502)
            Compound:  (at pp.c:20502)
              Compound:  (at pp.c:20505)
                Assignment: op='=' (at pp.c:20506)
                  ID: name='CC2420TransmitP__m_state' (at pp.c:20506)
                  ID: name='CC2420TransmitP__S_BEGIN_TRANSMIT' (at pp.c:20506)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__attemptSend' (at pp.c:20508)
            Compound:  (at pp.c:20510)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__releaseSpiResource' (at pp.c:20511)
              Compound:  (at pp.c:20514)
                Assignment: op='=' (at pp.c:20515)
                  ID: name='CC2420TransmitP__m_state' (at pp.c:20515)
                  ID: name='CC2420TransmitP__S_SAMPLE_CCA' (at pp.c:20515)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__RadioBackoff__requestInitialBackoff' (at pp.c:20518)
                ExprList:  (at pp.c:20518)
                  ID: name='CC2420TransmitP__m_msg' (at pp.c:20518)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__BackoffTimer__start' (at pp.c:20519)
                ExprList:  (at pp.c:20519)
                  ID: name='CC2420TransmitP__myInitialBackoff' (at pp.c:20519)
  FuncDef:  (at pp.c:20525)
    Decl: name='CC2420ReceiveP__RXFIFO__writeDone', quals=[], storage=['inline', 'static'] (at pp.c:20525)
      FuncDecl: quals=None (at pp.c:20525)
        ParamList:  (at pp.c:20525)
          Decl: name='tx_buf', quals=[], storage=[] (at pp.c:20525)
            PtrDecl: quals=[] (at pp.c:20525)
              TypeDecl: declname='tx_buf', quals=[] (at pp.c:20525)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='tx_len', quals=[], storage=[] (at pp.c:20525)
            TypeDecl: declname='tx_len', quals=[] (at pp.c:20525)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:20525)
            TypeDecl: declname='error', quals=[] (at pp.c:20525)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420ReceiveP__RXFIFO__writeDone', quals=[] (at pp.c:20525)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20527)
  FuncDef:  (at pp.c:20531)
    Decl: name='CC2420SpiP__Fifo__default__writeDone', quals=[], storage=['inline', 'static'] (at pp.c:20531)
      FuncDecl: quals=None (at pp.c:20531)
        ParamList:  (at pp.c:20531)
          Decl: name='addr', quals=[], storage=[] (at pp.c:20531)
            TypeDecl: declname='addr', quals=[] (at pp.c:20531)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='tx_buf', quals=[], storage=[] (at pp.c:20531)
            PtrDecl: quals=[] (at pp.c:20531)
              TypeDecl: declname='tx_buf', quals=[] (at pp.c:20531)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='tx_len', quals=[], storage=[] (at pp.c:20531)
            TypeDecl: declname='tx_len', quals=[] (at pp.c:20531)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:20531)
            TypeDecl: declname='error', quals=[] (at pp.c:20531)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Fifo__default__writeDone', quals=[] (at pp.c:20531)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20533)
  FuncDef:  (at pp.c:20537)
    Decl: name='CC2420SpiP__Fifo__writeDone', quals=[], storage=['static', 'inline'] (at pp.c:20537)
      FuncDecl: quals=None (at pp.c:20537)
        ParamList:  (at pp.c:20537)
          Decl: name='arg_0x101c0a020', quals=[], storage=[] (at pp.c:20537)
            TypeDecl: declname='arg_0x101c0a020', quals=[] (at pp.c:20537)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:20537)
            PtrDecl: quals=[] (at pp.c:20537)
              TypeDecl: declname='data', quals=[] (at pp.c:20537)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='length', quals=[], storage=[] (at pp.c:20537)
            TypeDecl: declname='length', quals=[] (at pp.c:20537)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:20537)
            TypeDecl: declname='error', quals=[] (at pp.c:20537)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Fifo__writeDone', quals=[] (at pp.c:20537)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20537)
      Switch:  (at pp.c:20539)
        ID: name='arg_0x101c0a020' (at pp.c:20539)
        Compound:  (at pp.c:20539)
          Case:  (at pp.c:20541)
            ID: name='CC2420_TXFIFO' (at pp.c:20541)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__TXFIFO__writeDone' (at pp.c:20543)
              ExprList:  (at pp.c:20543)
                ID: name='data' (at pp.c:20543)
                ID: name='length' (at pp.c:20543)
                ID: name='error' (at pp.c:20543)
          Break:  (at pp.c:20545)
          Case:  (at pp.c:20547)
            ID: name='CC2420_RXFIFO' (at pp.c:20547)
            FuncCall:  (at None)
              ID: name='CC2420ReceiveP__RXFIFO__writeDone' (at pp.c:20549)
              ExprList:  (at pp.c:20549)
                ID: name='data' (at pp.c:20549)
                ID: name='length' (at pp.c:20549)
                ID: name='error' (at pp.c:20549)
          Break:  (at pp.c:20551)
          Default:  (at pp.c:20553)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__Fifo__default__writeDone' (at pp.c:20555)
              ExprList:  (at pp.c:20555)
                ID: name='arg_0x101c0a020' (at pp.c:20555)
                ID: name='data' (at pp.c:20555)
                ID: name='length' (at pp.c:20555)
                ID: name='error' (at pp.c:20555)
          Break:  (at pp.c:20557)
  FuncDef:  (at pp.c:20564)
    Decl: name='CC2420ControlP__RXCTRL1__write', quals=[], storage=['static', 'inline'] (at pp.c:20564)
      FuncDecl: quals=None (at pp.c:20564)
        ParamList:  (at pp.c:20564)
          Decl: name='data', quals=[], storage=[] (at pp.c:20564)
            TypeDecl: declname='data', quals=[] (at pp.c:20564)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420ControlP__RXCTRL1__write', quals=[] (at pp.c:20564)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:20564)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20566)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20566)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20570)
        ID: name='__nesc_result' (at pp.c:20570)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Reg__write' (at pp.c:20570)
          ExprList:  (at pp.c:20570)
            ID: name='CC2420_RXCTRL1' (at pp.c:20570)
            ID: name='data' (at pp.c:20570)
      Return:  (at pp.c:20574)
        ID: name='__nesc_result' (at pp.c:20574)
  FuncDef:  (at pp.c:20578)
    Decl: name='CC2420ControlP__IOCFG0__write', quals=[], storage=['static', 'inline'] (at pp.c:20578)
      FuncDecl: quals=None (at pp.c:20578)
        ParamList:  (at pp.c:20578)
          Decl: name='data', quals=[], storage=[] (at pp.c:20578)
            TypeDecl: declname='data', quals=[] (at pp.c:20578)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420ControlP__IOCFG0__write', quals=[] (at pp.c:20578)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:20578)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20580)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20580)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20584)
        ID: name='__nesc_result' (at pp.c:20584)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Reg__write' (at pp.c:20584)
          ExprList:  (at pp.c:20584)
            ID: name='CC2420_IOCFG0' (at pp.c:20584)
            ID: name='data' (at pp.c:20584)
      Return:  (at pp.c:20588)
        ID: name='__nesc_result' (at pp.c:20588)
  FuncDef:  (at pp.c:20593)
    Decl: name='CC2420ControlP__SXOSCON__strobe', quals=[], storage=['static', 'inline'] (at pp.c:20593)
      FuncDecl: quals=None (at pp.c:20593)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__SXOSCON__strobe', quals=[] (at pp.c:20593)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:20593)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20595)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20595)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20599)
        ID: name='__nesc_result' (at pp.c:20599)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Strobe__strobe' (at pp.c:20599)
          ExprList:  (at pp.c:20599)
            ID: name='CC2420_SXOSCON' (at pp.c:20599)
      Return:  (at pp.c:20603)
        ID: name='__nesc_result' (at pp.c:20603)
  FuncDef:  (at pp.c:20608)
    Decl: name='HplMsp430InterruptP__Port14__enable', quals=[], storage=['inline', 'static'] (at pp.c:20608)
      FuncDecl: quals=None (at pp.c:20608)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port14__enable', quals=[] (at pp.c:20608)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20610)
      Assignment: op='|=' (at pp.c:20612)
        ID: name='P1IE' (at pp.c:20612)
        BinaryOp: op='<<' (at pp.c:20612)
          Constant: type='int', value='1' (at pp.c:20612)
          Constant: type='int', value='4' (at pp.c:20612)
  FuncDef:  (at pp.c:20616)
    Decl: name='Msp430InterruptC__0__HplInterrupt__enable', quals=[], storage=['static', 'inline'] (at pp.c:20616)
      FuncDecl: quals=None (at pp.c:20616)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__enable', quals=[] (at pp.c:20616)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20616)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port14__enable' (at pp.c:20618)
  FuncDef:  (at pp.c:20623)
    Decl: name='HplMsp430InterruptP__Port14__edge', quals=[], storage=['inline', 'static'] (at pp.c:20623)
      FuncDecl: quals=None (at pp.c:20623)
        ParamList:  (at pp.c:20623)
          Decl: name='l2h', quals=[], storage=[] (at pp.c:20623)
            TypeDecl: declname='l2h', quals=[] (at pp.c:20623)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port14__edge', quals=[] (at pp.c:20623)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20625)
      Compound:  (at pp.c:20628)
        If:  (at pp.c:20629)
          ID: name='l2h' (at pp.c:20629)
          Compound:  (at pp.c:20629)
            Assignment: op='&=' (at pp.c:20631)
              ID: name='P1IES' (at pp.c:20631)
              UnaryOp: op='~' (at pp.c:20631)
                BinaryOp: op='<<' (at pp.c:20631)
                  Constant: type='int', value='1' (at pp.c:20631)
                  Constant: type='int', value='4' (at pp.c:20631)
          Compound:  (at pp.c:20633)
            Assignment: op='|=' (at pp.c:20635)
              ID: name='P1IES' (at pp.c:20635)
              BinaryOp: op='<<' (at pp.c:20635)
                Constant: type='int', value='1' (at pp.c:20635)
                Constant: type='int', value='4' (at pp.c:20635)
  FuncDef:  (at pp.c:20641)
    Decl: name='Msp430InterruptC__0__HplInterrupt__edge', quals=[], storage=['static', 'inline'] (at pp.c:20641)
      FuncDecl: quals=None (at pp.c:20641)
        ParamList:  (at pp.c:20641)
          Decl: name='low_to_high', quals=[], storage=[] (at pp.c:20641)
            TypeDecl: declname='low_to_high', quals=[] (at pp.c:20641)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__edge', quals=[] (at pp.c:20641)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20641)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port14__edge' (at pp.c:20643)
        ExprList:  (at pp.c:20643)
          ID: name='low_to_high' (at pp.c:20643)
  FuncDef:  (at pp.c:20648)
    Decl: name='HplMsp430InterruptP__Port14__clear', quals=[], storage=['inline', 'static'] (at pp.c:20648)
      FuncDecl: quals=None (at pp.c:20648)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port14__clear', quals=[] (at pp.c:20648)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20650)
      Assignment: op='&=' (at pp.c:20652)
        ID: name='P1IFG' (at pp.c:20652)
        UnaryOp: op='~' (at pp.c:20652)
          BinaryOp: op='<<' (at pp.c:20652)
            Constant: type='int', value='1' (at pp.c:20652)
            Constant: type='int', value='4' (at pp.c:20652)
  FuncDef:  (at pp.c:20656)
    Decl: name='Msp430InterruptC__0__HplInterrupt__clear', quals=[], storage=['static', 'inline'] (at pp.c:20656)
      FuncDecl: quals=None (at pp.c:20656)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__clear', quals=[] (at pp.c:20656)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20656)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port14__clear' (at pp.c:20658)
  FuncDef:  (at pp.c:20663)
    Decl: name='HplMsp430InterruptP__Port14__disable', quals=[], storage=['inline', 'static'] (at pp.c:20663)
      FuncDecl: quals=None (at pp.c:20663)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port14__disable', quals=[] (at pp.c:20663)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20665)
      Assignment: op='&=' (at pp.c:20667)
        ID: name='P1IE' (at pp.c:20667)
        UnaryOp: op='~' (at pp.c:20667)
          BinaryOp: op='<<' (at pp.c:20667)
            Constant: type='int', value='1' (at pp.c:20667)
            Constant: type='int', value='4' (at pp.c:20667)
  FuncDef:  (at pp.c:20671)
    Decl: name='Msp430InterruptC__0__HplInterrupt__disable', quals=[], storage=['static', 'inline'] (at pp.c:20671)
      FuncDecl: quals=None (at pp.c:20671)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__disable', quals=[] (at pp.c:20671)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20671)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port14__disable' (at pp.c:20673)
  FuncDef:  (at pp.c:20678)
    Decl: name='Msp430InterruptC__0__Interrupt__disable', quals=[], storage=['inline', 'static'] (at pp.c:20678)
      FuncDecl: quals=None (at pp.c:20678)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__0__Interrupt__disable', quals=[] (at pp.c:20678)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20680)
      Compound:  (at pp.c:20683)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__0__HplInterrupt__disable' (at pp.c:20684)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__0__HplInterrupt__clear' (at pp.c:20685)
      Return:  (at pp.c:20687)
        ID: name='SUCCESS' (at pp.c:20687)
  FuncDef:  (at pp.c:20691)
    Decl: name='Msp430InterruptC__0__enable', quals=[], storage=['inline', 'static'] (at pp.c:20691)
      FuncDecl: quals=None (at pp.c:20691)
        ParamList:  (at pp.c:20691)
          Decl: name='rising', quals=[], storage=[] (at pp.c:20691)
            TypeDecl: declname='rising', quals=[] (at pp.c:20691)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='Msp430InterruptC__0__enable', quals=[] (at pp.c:20691)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20693)
      Compound:  (at pp.c:20696)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__0__Interrupt__disable' (at pp.c:20697)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__0__HplInterrupt__edge' (at pp.c:20698)
          ExprList:  (at pp.c:20698)
            ID: name='rising' (at pp.c:20698)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__0__HplInterrupt__enable' (at pp.c:20699)
      Return:  (at pp.c:20701)
        ID: name='SUCCESS' (at pp.c:20701)
  FuncDef:  (at pp.c:20704)
    Decl: name='Msp430InterruptC__0__Interrupt__enableRisingEdge', quals=[], storage=['inline', 'static'] (at pp.c:20704)
      FuncDecl: quals=None (at pp.c:20704)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__0__Interrupt__enableRisingEdge', quals=[] (at pp.c:20704)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20706)
      Return:  (at pp.c:20707)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__0__enable' (at pp.c:20707)
          ExprList:  (at pp.c:20707)
            ID: name='TRUE' (at pp.c:20707)
  FuncDef:  (at pp.c:20711)
    Decl: name='CC2420ControlP__InterruptCCA__enableRisingEdge', quals=[], storage=['static', 'inline'] (at pp.c:20711)
      FuncDecl: quals=None (at pp.c:20711)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__InterruptCCA__enableRisingEdge', quals=[] (at pp.c:20711)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20711)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20713)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20713)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20717)
        ID: name='__nesc_result' (at pp.c:20717)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__0__Interrupt__enableRisingEdge' (at pp.c:20717)
      Return:  (at pp.c:20721)
        ID: name='__nesc_result' (at pp.c:20721)
  FuncDef:  (at pp.c:20726)
    Decl: name='CC2420ControlP__IOCFG1__write', quals=[], storage=['static', 'inline'] (at pp.c:20726)
      FuncDecl: quals=None (at pp.c:20726)
        ParamList:  (at pp.c:20726)
          Decl: name='data', quals=[], storage=[] (at pp.c:20726)
            TypeDecl: declname='data', quals=[] (at pp.c:20726)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420ControlP__IOCFG1__write', quals=[] (at pp.c:20726)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:20726)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20728)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20728)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20732)
        ID: name='__nesc_result' (at pp.c:20732)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Reg__write' (at pp.c:20732)
          ExprList:  (at pp.c:20732)
            ID: name='CC2420_IOCFG1' (at pp.c:20732)
            ID: name='data' (at pp.c:20732)
      Return:  (at pp.c:20736)
        ID: name='__nesc_result' (at pp.c:20736)
  FuncDef:  (at pp.c:20741)
    Decl: name='CC2420ControlP__CC2420Power__startOscillator', quals=[], storage=['inline', 'static'] (at pp.c:20741)
      FuncDecl: quals=None (at pp.c:20741)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Power__startOscillator', quals=[] (at pp.c:20741)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20743)
      Compound:  (at pp.c:20744)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:20744)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:20744)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:20744)
        Compound:  (at pp.c:20746)
          If:  (at pp.c:20747)
            BinaryOp: op='!=' (at pp.c:20747)
              ID: name='CC2420ControlP__m_state' (at pp.c:20747)
              ID: name='CC2420ControlP__S_VREG_STARTED' (at pp.c:20747)
            Compound:  (at pp.c:20747)
              Compound:  (at pp.c:20748)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:20749)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:20749)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='FAIL' (at pp.c:20751)
                Compound:  (at pp.c:20753)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:20755)
                    ExprList:  (at pp.c:20755)
                      ID: name='__nesc_atomic' (at pp.c:20755)
                  Return:  (at pp.c:20757)
                    ID: name='__nesc_temp' (at pp.c:20757)
          Assignment: op='=' (at pp.c:20762)
            ID: name='CC2420ControlP__m_state' (at pp.c:20762)
            ID: name='CC2420ControlP__S_XOSC_STARTING' (at pp.c:20762)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__IOCFG1__write' (at pp.c:20763)
            ExprList:  (at pp.c:20763)
              BinaryOp: op='<<' (at pp.c:20763)
                ID: name='CC2420_SFDMUX_XOSC16M_STABLE' (at pp.c:20763)
                ID: name='CC2420_IOCFG1_CCAMUX' (at pp.c:20764)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__InterruptCCA__enableRisingEdge' (at pp.c:20766)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__SXOSCON__strobe' (at pp.c:20767)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__IOCFG0__write' (at pp.c:20769)
            ExprList:  (at pp.c:20769)
              BinaryOp: op='|' (at pp.c:20769)
                BinaryOp: op='<<' (at pp.c:20769)
                  Constant: type='int', value='1' (at pp.c:20769)
                  ID: name='CC2420_IOCFG0_FIFOP_POLARITY' (at pp.c:20769)
                BinaryOp: op='<<' (at pp.c:20770)
                  Constant: type='int', value='127' (at pp.c:20770)
                  ID: name='CC2420_IOCFG0_FIFOP_THR' (at pp.c:20770)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__writeFsctrl' (at pp.c:20772)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__writeMdmctrl0' (at pp.c:20773)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__RXCTRL1__write' (at pp.c:20775)
            ExprList:  (at pp.c:20775)
              BinaryOp: op='|' (at pp.c:20775)
                BinaryOp: op='|' (at pp.c:20775)
                  BinaryOp: op='|' (at pp.c:20775)
                    BinaryOp: op='|' (at pp.c:20775)
                      BinaryOp: op='|' (at pp.c:20775)
                        BinaryOp: op='|' (at pp.c:20775)
                          BinaryOp: op='<<' (at pp.c:20775)
                            Constant: type='int', value='1' (at pp.c:20775)
                            ID: name='CC2420_RXCTRL1_RXBPF_LOCUR' (at pp.c:20775)
                          BinaryOp: op='<<' (at pp.c:20776)
                            Constant: type='int', value='1' (at pp.c:20776)
                            ID: name='CC2420_RXCTRL1_LOW_LOWGAIN' (at pp.c:20776)
                        BinaryOp: op='<<' (at pp.c:20777)
                          Constant: type='int', value='1' (at pp.c:20777)
                          ID: name='CC2420_RXCTRL1_HIGH_HGM' (at pp.c:20777)
                      BinaryOp: op='<<' (at pp.c:20778)
                        Constant: type='int', value='1' (at pp.c:20778)
                        ID: name='CC2420_RXCTRL1_LNA_CAP_ARRAY' (at pp.c:20778)
                    BinaryOp: op='<<' (at pp.c:20779)
                      Constant: type='int', value='1' (at pp.c:20779)
                      ID: name='CC2420_RXCTRL1_RXMIX_TAIL' (at pp.c:20779)
                  BinaryOp: op='<<' (at pp.c:20780)
                    Constant: type='int', value='1' (at pp.c:20780)
                    ID: name='CC2420_RXCTRL1_RXMIX_VCM' (at pp.c:20780)
                BinaryOp: op='<<' (at pp.c:20781)
                  Constant: type='int', value='2' (at pp.c:20781)
                  ID: name='CC2420_RXCTRL1_RXMIX_CURRENT' (at pp.c:20781)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:20784)
          ExprList:  (at pp.c:20784)
            ID: name='__nesc_atomic' (at pp.c:20784)
      Return:  (at pp.c:20785)
        ID: name='SUCCESS' (at pp.c:20785)
  FuncDef:  (at pp.c:20789)
    Decl: name='CC2420CsmaP__CC2420Power__startOscillator', quals=[], storage=['static', 'inline'] (at pp.c:20789)
      FuncDecl: quals=None (at pp.c:20789)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__CC2420Power__startOscillator', quals=[] (at pp.c:20789)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20789)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20791)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20791)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20795)
        ID: name='__nesc_result' (at pp.c:20795)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__CC2420Power__startOscillator' (at pp.c:20795)
      Return:  (at pp.c:20799)
        ID: name='__nesc_result' (at pp.c:20799)
  FuncDef:  (at pp.c:20804)
    Decl: name='CC2420CsmaP__Resource__granted', quals=[], storage=['inline', 'static'] (at pp.c:20804)
      FuncDecl: quals=None (at pp.c:20804)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__Resource__granted', quals=[] (at pp.c:20804)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20806)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__CC2420Power__startOscillator' (at pp.c:20807)
  FuncDef:  (at pp.c:20811)
    Decl: name='CC2420ControlP__Resource__granted', quals=[], storage=['static', 'inline'] (at pp.c:20811)
      FuncDecl: quals=None (at pp.c:20811)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__Resource__granted', quals=[] (at pp.c:20811)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20811)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__Resource__granted' (at pp.c:20813)
  FuncDef:  (at pp.c:20818)
    Decl: name='CC2420ControlP__CSN__clr', quals=[], storage=['static', 'inline'] (at pp.c:20818)
      FuncDecl: quals=None (at pp.c:20818)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CSN__clr', quals=[] (at pp.c:20818)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20818)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__GeneralIO__clr' (at pp.c:20820)
  FuncDef:  (at pp.c:20825)
    Decl: name='CC2420ControlP__SpiResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:20825)
      FuncDecl: quals=None (at pp.c:20825)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__SpiResource__granted', quals=[] (at pp.c:20825)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20827)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CSN__clr' (at pp.c:20828)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__Resource__granted' (at pp.c:20829)
  FuncDef:  (at pp.c:20833)
    Decl: name='CC2420ControlP__syncDone__postTask', quals=[], storage=['static', 'inline'] (at pp.c:20833)
      FuncDecl: quals=None (at pp.c:20833)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__syncDone__postTask', quals=[] (at pp.c:20833)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20833)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20835)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20835)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20839)
        ID: name='__nesc_result' (at pp.c:20839)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:20839)
          ExprList:  (at pp.c:20839)
            ID: name='CC2420ControlP__syncDone' (at pp.c:20839)
      Return:  (at pp.c:20843)
        ID: name='__nesc_result' (at pp.c:20843)
  FuncDef:  (at pp.c:20848)
    Decl: name='CC2420ControlP__SyncResource__release', quals=[], storage=['static', 'inline'] (at pp.c:20848)
      FuncDecl: quals=None (at pp.c:20848)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__SyncResource__release', quals=[] (at pp.c:20848)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20848)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20850)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20850)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20854)
        ID: name='__nesc_result' (at pp.c:20854)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__release' (at pp.c:20854)
          ExprList:  (at pp.c:20854)
            ID: name='CC2420SpiC__1__CLIENT_ID' (at pp.c:20854)
      Return:  (at pp.c:20858)
        ID: name='__nesc_result' (at pp.c:20858)
  FuncDef:  (at pp.c:20863)
    Decl: name='CC2420ControlP__CSN__set', quals=[], storage=['static', 'inline'] (at pp.c:20863)
      FuncDecl: quals=None (at pp.c:20863)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CSN__set', quals=[] (at pp.c:20863)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20863)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__GeneralIO__set' (at pp.c:20865)
  FuncDef:  (at pp.c:20870)
    Decl: name='CC2420ControlP__SRXON__strobe', quals=[], storage=['static', 'inline'] (at pp.c:20870)
      FuncDecl: quals=None (at pp.c:20870)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__SRXON__strobe', quals=[] (at pp.c:20870)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:20870)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20872)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20872)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20876)
        ID: name='__nesc_result' (at pp.c:20876)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Strobe__strobe' (at pp.c:20876)
          ExprList:  (at pp.c:20876)
            ID: name='CC2420_SRXON' (at pp.c:20876)
      Return:  (at pp.c:20880)
        ID: name='__nesc_result' (at pp.c:20880)
  FuncDef:  (at pp.c:20884)
    Decl: name='CC2420ControlP__SRFOFF__strobe', quals=[], storage=['static', 'inline'] (at pp.c:20884)
      FuncDecl: quals=None (at pp.c:20884)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__SRFOFF__strobe', quals=[] (at pp.c:20884)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:20884)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20886)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20886)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20890)
        ID: name='__nesc_result' (at pp.c:20890)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Strobe__strobe' (at pp.c:20890)
          ExprList:  (at pp.c:20890)
            ID: name='CC2420_SRFOFF' (at pp.c:20890)
      Return:  (at pp.c:20894)
        ID: name='__nesc_result' (at pp.c:20894)
  FuncDef:  (at pp.c:20899)
    Decl: name='CC2420ControlP__SyncResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:20899)
      FuncDecl: quals=None (at pp.c:20899)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__SyncResource__granted', quals=[] (at pp.c:20899)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20901)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CSN__clr' (at pp.c:20902)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__SRFOFF__strobe' (at pp.c:20903)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__writeFsctrl' (at pp.c:20904)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__writeMdmctrl0' (at pp.c:20905)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__writeId' (at pp.c:20906)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CSN__set' (at pp.c:20907)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CSN__clr' (at pp.c:20908)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__SRXON__strobe' (at pp.c:20909)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CSN__set' (at pp.c:20910)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__SyncResource__release' (at pp.c:20911)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__syncDone__postTask' (at pp.c:20912)
  FuncDef:  (at pp.c:20916)
    Decl: name='CC2420ControlP__ReadRssi__default__readDone', quals=[], storage=['inline', 'static'] (at pp.c:20916)
      FuncDecl: quals=None (at pp.c:20916)
        ParamList:  (at pp.c:20916)
          Decl: name='error', quals=[], storage=[] (at pp.c:20916)
            TypeDecl: declname='error', quals=[] (at pp.c:20916)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:20916)
            TypeDecl: declname='data', quals=[] (at pp.c:20916)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420ControlP__ReadRssi__default__readDone', quals=[] (at pp.c:20916)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20918)
  FuncDef:  (at pp.c:20922)
    Decl: name='CC2420ControlP__ReadRssi__readDone', quals=[], storage=['static', 'inline'] (at pp.c:20922)
      FuncDecl: quals=None (at pp.c:20922)
        ParamList:  (at pp.c:20922)
          Decl: name='result', quals=[], storage=[] (at pp.c:20922)
            TypeDecl: declname='result', quals=[] (at pp.c:20922)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='val', quals=[], storage=[] (at pp.c:20922)
            TypeDecl: declname='val', quals=[] (at pp.c:20922)
              IdentifierType: names=['CC2420ControlP__ReadRssi__val_t'] (at None)
        TypeDecl: declname='CC2420ControlP__ReadRssi__readDone', quals=[] (at pp.c:20922)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20922)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__ReadRssi__default__readDone' (at pp.c:20924)
        ExprList:  (at pp.c:20924)
          ID: name='result' (at pp.c:20924)
          ID: name='val' (at pp.c:20924)
  FuncDef:  (at pp.c:20929)
    Decl: name='CC2420ControlP__RssiResource__release', quals=[], storage=['static', 'inline'] (at pp.c:20929)
      FuncDecl: quals=None (at pp.c:20929)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__RssiResource__release', quals=[] (at pp.c:20929)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:20929)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20931)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20931)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20935)
        ID: name='__nesc_result' (at pp.c:20935)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__release' (at pp.c:20935)
          ExprList:  (at pp.c:20935)
            ID: name='CC2420SpiC__2__CLIENT_ID' (at pp.c:20935)
      Return:  (at pp.c:20939)
        ID: name='__nesc_result' (at pp.c:20939)
  FuncDef:  (at pp.c:20944)
    Decl: name='CC2420SpiP__Reg__read', quals=[], storage=['inline', 'static'] (at pp.c:20944)
      FuncDecl: quals=None (at pp.c:20944)
        ParamList:  (at pp.c:20944)
          Decl: name='addr', quals=[], storage=[] (at pp.c:20944)
            TypeDecl: declname='addr', quals=[] (at pp.c:20944)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:20944)
            PtrDecl: quals=[] (at pp.c:20944)
              TypeDecl: declname='data', quals=[] (at pp.c:20944)
                IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Reg__read', quals=[] (at pp.c:20944)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:20946)
      Decl: name='status', quals=[], storage=[] (at pp.c:20948)
        TypeDecl: declname='status', quals=[] (at pp.c:20948)
          IdentifierType: names=['cc2420_status_t'] (at None)
        Constant: type='int', value='0' (at pp.c:20948)
      Compound:  (at pp.c:20950)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:20950)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:20950)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:20950)
        Compound:  (at pp.c:20952)
          If:  (at pp.c:20953)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__WorkingState__isIdle' (at pp.c:20953)
            Compound:  (at pp.c:20953)
              Compound:  (at pp.c:20954)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:20955)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:20955)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='status' (at pp.c:20957)
                Compound:  (at pp.c:20959)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:20961)
                    ExprList:  (at pp.c:20961)
                      ID: name='__nesc_atomic' (at pp.c:20961)
                  Return:  (at pp.c:20963)
                    ID: name='__nesc_temp' (at pp.c:20963)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:20969)
          ExprList:  (at pp.c:20969)
            ID: name='__nesc_atomic' (at pp.c:20969)
      Assignment: op='=' (at pp.c:20971)
        ID: name='status' (at pp.c:20971)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__SpiByte__write' (at pp.c:20971)
          ExprList:  (at pp.c:20971)
            BinaryOp: op='|' (at pp.c:20971)
              ID: name='addr' (at pp.c:20971)
              Constant: type='int', value='0x40' (at pp.c:20971)
      Assignment: op='=' (at pp.c:20972)
        UnaryOp: op='*' (at pp.c:20972)
          ID: name='data' (at pp.c:20972)
        BinaryOp: op='<<' (at None)
          Cast:  (at None)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['uint16_t'] (at None)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__SpiByte__write' (at pp.c:20972)
              ExprList:  (at pp.c:20972)
                Constant: type='int', value='0' (at pp.c:20972)
          Constant: type='int', value='8' (at pp.c:20972)
      Assignment: op='|=' (at pp.c:20973)
        UnaryOp: op='*' (at pp.c:20973)
          ID: name='data' (at pp.c:20973)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__SpiByte__write' (at pp.c:20973)
          ExprList:  (at pp.c:20973)
            Constant: type='int', value='0' (at pp.c:20973)
      Return:  (at pp.c:20975)
        ID: name='status' (at pp.c:20975)
  FuncDef:  (at pp.c:20979)
    Decl: name='CC2420ControlP__RSSI__read', quals=[], storage=['static', 'inline'] (at pp.c:20979)
      FuncDecl: quals=None (at pp.c:20979)
        ParamList:  (at pp.c:20979)
          Decl: name='data', quals=[], storage=[] (at pp.c:20979)
            PtrDecl: quals=[] (at pp.c:20979)
              TypeDecl: declname='data', quals=[] (at pp.c:20979)
                IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420ControlP__RSSI__read', quals=[] (at pp.c:20979)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:20979)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:20981)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:20981)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:20985)
        ID: name='__nesc_result' (at pp.c:20985)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Reg__read' (at pp.c:20985)
          ExprList:  (at pp.c:20985)
            ID: name='CC2420_RSSI' (at pp.c:20985)
            ID: name='data' (at pp.c:20985)
      Return:  (at pp.c:20989)
        ID: name='__nesc_result' (at pp.c:20989)
  FuncDef:  (at pp.c:20994)
    Decl: name='CC2420ControlP__RssiResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:20994)
      FuncDecl: quals=None (at pp.c:20994)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__RssiResource__granted', quals=[] (at pp.c:20994)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:20996)
      Decl: name='data', quals=[], storage=[] (at pp.c:20997)
        TypeDecl: declname='data', quals=[] (at pp.c:20997)
          IdentifierType: names=['uint16_t'] (at None)
        Constant: type='int', value='0' (at pp.c:20997)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CSN__clr' (at pp.c:21000)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__RSSI__read' (at pp.c:21001)
        ExprList:  (at pp.c:21001)
          UnaryOp: op='&' (at pp.c:21001)
            ID: name='data' (at pp.c:21001)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CSN__set' (at pp.c:21002)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__RssiResource__release' (at pp.c:21004)
      Assignment: op='+=' (at pp.c:21005)
        ID: name='data' (at pp.c:21005)
        Constant: type='int', value='0x7f' (at pp.c:21005)
      Assignment: op='&=' (at pp.c:21006)
        ID: name='data' (at pp.c:21006)
        Constant: type='int', value='0x00ff' (at pp.c:21006)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__ReadRssi__readDone' (at pp.c:21007)
        ExprList:  (at pp.c:21007)
          ID: name='SUCCESS' (at pp.c:21007)
          ID: name='data' (at pp.c:21007)
  FuncDef:  (at pp.c:21011)
    Decl: name='CC2420TransmitP__SpiResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:21011)
      FuncDecl: quals=None (at pp.c:21011)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__SpiResource__granted', quals=[] (at pp.c:21011)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21013)
      Decl: name='cur_state', quals=[], storage=[] (at pp.c:21014)
        TypeDecl: declname='cur_state', quals=[] (at pp.c:21014)
          IdentifierType: names=['uint8_t'] (at None)
      Compound:  (at pp.c:21016)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:21016)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:21016)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:21016)
        Compound:  (at pp.c:21018)
          Assignment: op='=' (at pp.c:21019)
            ID: name='cur_state' (at pp.c:21019)
            ID: name='CC2420TransmitP__m_state' (at pp.c:21019)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:21022)
          ExprList:  (at pp.c:21022)
            ID: name='__nesc_atomic' (at pp.c:21022)
      Switch:  (at pp.c:21024)
        ID: name='cur_state' (at pp.c:21024)
        Compound:  (at pp.c:21024)
          Case:  (at pp.c:21025)
            ID: name='CC2420TransmitP__S_LOAD' (at pp.c:21025)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__loadTXFIFO' (at pp.c:21026)
          Break:  (at pp.c:21027)
          Case:  (at pp.c:21029)
            ID: name='CC2420TransmitP__S_BEGIN_TRANSMIT' (at pp.c:21029)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__attemptSend' (at pp.c:21030)
          Break:  (at pp.c:21031)
          Case:  (at pp.c:21033)
            ID: name='CC2420TransmitP__S_CANCEL' (at pp.c:21033)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__CSN__clr' (at pp.c:21034)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__SFLUSHTX__strobe' (at pp.c:21035)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__CSN__set' (at pp.c:21036)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__releaseSpiResource' (at pp.c:21037)
          Compound:  (at pp.c:21038)
            Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:21038)
              TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:21038)
                IdentifierType: names=['__nesc_atomic_t'] (at None)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_start' (at pp.c:21038)
            Compound:  (at pp.c:21040)
              Assignment: op='=' (at pp.c:21041)
                ID: name='CC2420TransmitP__m_state' (at pp.c:21041)
                ID: name='CC2420TransmitP__S_STARTED' (at pp.c:21041)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:21044)
              ExprList:  (at pp.c:21044)
                ID: name='__nesc_atomic' (at pp.c:21044)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__Send__sendDone' (at pp.c:21045)
            ExprList:  (at pp.c:21045)
              ID: name='CC2420TransmitP__m_msg' (at pp.c:21045)
              ID: name='ECANCEL' (at pp.c:21045)
          Break:  (at pp.c:21046)
          Default:  (at pp.c:21048)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__releaseSpiResource' (at pp.c:21049)
          Break:  (at pp.c:21050)
  FuncDef:  (at pp.c:21055)
    Decl: name='CC2420ReceiveP__SpiResource__granted', quals=[], storage=['inline', 'static'] (at pp.c:21055)
      FuncDecl: quals=None (at pp.c:21055)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__SpiResource__granted', quals=[] (at pp.c:21055)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21057)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__receive' (at pp.c:21065)
  FuncDef:  (at pp.c:21069)
    Decl: name='CC2420SpiP__Resource__default__granted', quals=[], storage=['inline', 'static'] (at pp.c:21069)
      FuncDecl: quals=None (at pp.c:21069)
        ParamList:  (at pp.c:21069)
          Decl: name='id', quals=[], storage=[] (at pp.c:21069)
            TypeDecl: declname='id', quals=[] (at pp.c:21069)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Resource__default__granted', quals=[] (at pp.c:21069)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21071)
  FuncDef:  (at pp.c:21075)
    Decl: name='CC2420SpiP__Resource__granted', quals=[], storage=['static', 'inline'] (at pp.c:21075)
      FuncDecl: quals=None (at pp.c:21075)
        ParamList:  (at pp.c:21075)
          Decl: name='arg_0x101c0cd08', quals=[], storage=[] (at pp.c:21075)
            TypeDecl: declname='arg_0x101c0cd08', quals=[] (at pp.c:21075)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Resource__granted', quals=[] (at pp.c:21075)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21075)
      Switch:  (at pp.c:21077)
        ID: name='arg_0x101c0cd08' (at pp.c:21077)
        Compound:  (at pp.c:21077)
          Case:  (at pp.c:21079)
            ID: name='CC2420SpiC__0__CLIENT_ID' (at pp.c:21079)
            FuncCall:  (at None)
              ID: name='CC2420ControlP__SpiResource__granted' (at pp.c:21081)
          Break:  (at pp.c:21083)
          Case:  (at pp.c:21085)
            ID: name='CC2420SpiC__1__CLIENT_ID' (at pp.c:21085)
            FuncCall:  (at None)
              ID: name='CC2420ControlP__SyncResource__granted' (at pp.c:21087)
          Break:  (at pp.c:21089)
          Case:  (at pp.c:21091)
            ID: name='CC2420SpiC__2__CLIENT_ID' (at pp.c:21091)
            FuncCall:  (at None)
              ID: name='CC2420ControlP__RssiResource__granted' (at pp.c:21093)
          Break:  (at pp.c:21095)
          Case:  (at pp.c:21097)
            ID: name='CC2420SpiC__3__CLIENT_ID' (at pp.c:21097)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__SpiResource__granted' (at pp.c:21099)
          Break:  (at pp.c:21101)
          Case:  (at pp.c:21103)
            ID: name='CC2420SpiC__4__CLIENT_ID' (at pp.c:21103)
            FuncCall:  (at None)
              ID: name='CC2420ReceiveP__SpiResource__granted' (at pp.c:21105)
          Break:  (at pp.c:21107)
          Default:  (at pp.c:21109)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__Resource__default__granted' (at pp.c:21111)
              ExprList:  (at pp.c:21111)
                ID: name='arg_0x101c0cd08' (at pp.c:21111)
          Break:  (at pp.c:21113)
  FuncDef:  (at pp.c:21120)
    Decl: name='CC2420SpiP__grant__runTask', quals=[], storage=['inline', 'static'] (at pp.c:21120)
      FuncDecl: quals=None (at pp.c:21120)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__grant__runTask', quals=[] (at pp.c:21120)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21122)
      Decl: name='holder', quals=[], storage=[] (at pp.c:21123)
        TypeDecl: declname='holder', quals=[] (at pp.c:21123)
          IdentifierType: names=['uint8_t'] (at None)
      Compound:  (at pp.c:21126)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:21126)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:21126)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:21126)
        Compound:  (at pp.c:21128)
          Assignment: op='=' (at pp.c:21129)
            ID: name='holder' (at pp.c:21129)
            ID: name='CC2420SpiP__m_holder' (at pp.c:21129)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:21132)
          ExprList:  (at pp.c:21132)
            ID: name='__nesc_atomic' (at pp.c:21132)
      FuncCall:  (at None)
        ID: name='CC2420SpiP__Resource__granted' (at pp.c:21133)
        ExprList:  (at pp.c:21133)
          ID: name='holder' (at pp.c:21133)
  FuncDef:  (at pp.c:21137)
    Decl: name='CC2420ControlP__FSCTRL__write', quals=[], storage=['static', 'inline'] (at pp.c:21137)
      FuncDecl: quals=None (at pp.c:21137)
        ParamList:  (at pp.c:21137)
          Decl: name='data', quals=[], storage=[] (at pp.c:21137)
            TypeDecl: declname='data', quals=[] (at pp.c:21137)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420ControlP__FSCTRL__write', quals=[] (at pp.c:21137)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:21137)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21139)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21139)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21143)
        ID: name='__nesc_result' (at pp.c:21143)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Reg__write' (at pp.c:21143)
          ExprList:  (at pp.c:21143)
            ID: name='CC2420_FSCTRL' (at pp.c:21143)
            ID: name='data' (at pp.c:21143)
      Return:  (at pp.c:21147)
        ID: name='__nesc_result' (at pp.c:21147)
  FuncDef:  (at pp.c:21151)
    Decl: name='CC2420ControlP__MDMCTRL0__write', quals=[], storage=['static', 'inline'] (at pp.c:21151)
      FuncDecl: quals=None (at pp.c:21151)
        ParamList:  (at pp.c:21151)
          Decl: name='data', quals=[], storage=[] (at pp.c:21151)
            TypeDecl: declname='data', quals=[] (at pp.c:21151)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420ControlP__MDMCTRL0__write', quals=[] (at pp.c:21151)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:21151)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21153)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21153)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21157)
        ID: name='__nesc_result' (at pp.c:21157)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Reg__write' (at pp.c:21157)
          ExprList:  (at pp.c:21157)
            ID: name='CC2420_MDMCTRL0' (at pp.c:21157)
            ID: name='data' (at pp.c:21157)
      Return:  (at pp.c:21161)
        ID: name='__nesc_result' (at pp.c:21161)
  FuncDef:  (at pp.c:21166)
    Decl: name='CC2420ControlP__IEEEADR__write', quals=[], storage=['static', 'inline'] (at pp.c:21166)
      FuncDecl: quals=None (at pp.c:21166)
        ParamList:  (at pp.c:21166)
          Decl: name='offset', quals=[], storage=[] (at pp.c:21166)
            TypeDecl: declname='offset', quals=[] (at pp.c:21166)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:21166)
            PtrDecl: quals=[] (at pp.c:21166)
              TypeDecl: declname='data', quals=[] (at pp.c:21166)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='length', quals=[], storage=[] (at pp.c:21166)
            TypeDecl: declname='length', quals=[] (at pp.c:21166)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420ControlP__IEEEADR__write', quals=[] (at pp.c:21166)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:21166)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21168)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21168)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21172)
        ID: name='__nesc_result' (at pp.c:21172)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Ram__write' (at pp.c:21172)
          ExprList:  (at pp.c:21172)
            ID: name='CC2420_RAM_IEEEADR' (at pp.c:21172)
            ID: name='offset' (at pp.c:21172)
            ID: name='data' (at pp.c:21172)
            ID: name='length' (at pp.c:21172)
      Return:  (at pp.c:21176)
        ID: name='__nesc_result' (at pp.c:21176)
  FuncDef:  (at pp.c:21181)
    Decl: name='CC2420ActiveMessageP__CC2420Config__syncDone', quals=[], storage=['inline', 'static'] (at pp.c:21181)
      FuncDecl: quals=None (at pp.c:21181)
        ParamList:  (at pp.c:21181)
          Decl: name='error', quals=[], storage=[] (at pp.c:21181)
            TypeDecl: declname='error', quals=[] (at pp.c:21181)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__CC2420Config__syncDone', quals=[] (at pp.c:21181)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21183)
  FuncDef:  (at pp.c:21187)
    Decl: name='CC2420ReceiveP__CC2420Config__syncDone', quals=[], storage=['inline', 'static'] (at pp.c:21187)
      FuncDecl: quals=None (at pp.c:21187)
        ParamList:  (at pp.c:21187)
          Decl: name='error', quals=[], storage=[] (at pp.c:21187)
            TypeDecl: declname='error', quals=[] (at pp.c:21187)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420ReceiveP__CC2420Config__syncDone', quals=[] (at pp.c:21187)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21189)
  FuncDef:  (at pp.c:21193)
    Decl: name='CC2420ControlP__CC2420Config__syncDone', quals=[], storage=['static', 'inline'] (at pp.c:21193)
      FuncDecl: quals=None (at pp.c:21193)
        ParamList:  (at pp.c:21193)
          Decl: name='error', quals=[], storage=[] (at pp.c:21193)
            TypeDecl: declname='error', quals=[] (at pp.c:21193)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Config__syncDone', quals=[] (at pp.c:21193)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21193)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__CC2420Config__syncDone' (at pp.c:21195)
        ExprList:  (at pp.c:21195)
          ID: name='error' (at pp.c:21195)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__CC2420Config__syncDone' (at pp.c:21197)
        ExprList:  (at pp.c:21197)
          ID: name='error' (at pp.c:21197)
  FuncDef:  (at pp.c:21202)
    Decl: name='CC2420ControlP__syncDone__runTask', quals=[], storage=['inline', 'static'] (at pp.c:21202)
      FuncDecl: quals=None (at pp.c:21202)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__syncDone__runTask', quals=[] (at pp.c:21202)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21204)
      Compound:  (at pp.c:21205)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:21205)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:21205)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:21205)
        Assignment: op='=' (at pp.c:21207)
          ID: name='CC2420ControlP__m_sync_busy' (at pp.c:21207)
          ID: name='FALSE' (at pp.c:21207)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:21209)
          ExprList:  (at pp.c:21209)
            ID: name='__nesc_atomic' (at pp.c:21209)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CC2420Config__syncDone' (at pp.c:21210)
        ExprList:  (at pp.c:21210)
          ID: name='SUCCESS' (at pp.c:21210)
  FuncDef:  (at pp.c:21214)
    Decl: name='CC2420ControlP__SyncResource__request', quals=[], storage=['static', 'inline'] (at pp.c:21214)
      FuncDecl: quals=None (at pp.c:21214)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__SyncResource__request', quals=[] (at pp.c:21214)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21214)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21216)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21216)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21220)
        ID: name='__nesc_result' (at pp.c:21220)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__request' (at pp.c:21220)
          ExprList:  (at pp.c:21220)
            ID: name='CC2420SpiC__1__CLIENT_ID' (at pp.c:21220)
      Return:  (at pp.c:21224)
        ID: name='__nesc_result' (at pp.c:21224)
  FuncDef:  (at pp.c:21229)
    Decl: name='CC2420ControlP__CC2420Config__sync', quals=[], storage=['inline', 'static'] (at pp.c:21229)
      FuncDecl: quals=None (at pp.c:21229)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Config__sync', quals=[] (at pp.c:21229)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21231)
      Compound:  (at pp.c:21232)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:21232)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:21232)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:21232)
        Compound:  (at pp.c:21234)
          If:  (at pp.c:21235)
            ID: name='CC2420ControlP__m_sync_busy' (at pp.c:21235)
            Compound:  (at pp.c:21235)
              Compound:  (at pp.c:21236)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:21237)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:21237)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='FAIL' (at pp.c:21239)
                Compound:  (at pp.c:21241)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:21243)
                    ExprList:  (at pp.c:21243)
                      ID: name='__nesc_atomic' (at pp.c:21243)
                  Return:  (at pp.c:21245)
                    ID: name='__nesc_temp' (at pp.c:21245)
          Assignment: op='=' (at pp.c:21250)
            ID: name='CC2420ControlP__m_sync_busy' (at pp.c:21250)
            ID: name='TRUE' (at pp.c:21250)
          If:  (at pp.c:21251)
            BinaryOp: op='==' (at pp.c:21251)
              ID: name='CC2420ControlP__m_state' (at pp.c:21251)
              ID: name='CC2420ControlP__S_XOSC_STARTED' (at pp.c:21251)
            Compound:  (at pp.c:21251)
              FuncCall:  (at None)
                ID: name='CC2420ControlP__SyncResource__request' (at pp.c:21252)
            Compound:  (at pp.c:21256)
              FuncCall:  (at None)
                ID: name='CC2420ControlP__syncDone__postTask' (at pp.c:21257)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:21261)
          ExprList:  (at pp.c:21261)
            ID: name='__nesc_atomic' (at pp.c:21261)
      Return:  (at pp.c:21262)
        ID: name='SUCCESS' (at pp.c:21262)
  FuncDef:  (at pp.c:21266)
    Decl: name='CC2420ControlP__sync__runTask', quals=[], storage=['inline', 'static'] (at pp.c:21266)
      FuncDecl: quals=None (at pp.c:21266)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__sync__runTask', quals=[] (at pp.c:21266)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21268)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CC2420Config__sync' (at pp.c:21269)
  FuncDef:  (at pp.c:21273)
    Decl: name='CC2420TinyosNetworkP__BareSend__default__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:21273)
      FuncDecl: quals=None (at pp.c:21273)
        ParamList:  (at pp.c:21273)
          Decl: name='msg', quals=[], storage=[] (at pp.c:21273)
            PtrDecl: quals=[] (at pp.c:21273)
              TypeDecl: declname='msg', quals=[] (at pp.c:21273)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:21273)
            TypeDecl: declname='error', quals=[] (at pp.c:21273)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__BareSend__default__sendDone', quals=[] (at pp.c:21273)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21275)
  FuncDef:  (at pp.c:21279)
    Decl: name='CC2420TinyosNetworkP__BareSend__sendDone', quals=[], storage=['static', 'inline'] (at pp.c:21279)
      FuncDecl: quals=None (at pp.c:21279)
        ParamList:  (at pp.c:21279)
          Decl: name='msg', quals=[], storage=[] (at pp.c:21279)
            PtrDecl: quals=[] (at pp.c:21279)
              TypeDecl: declname='msg', quals=[] (at pp.c:21279)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:21279)
            TypeDecl: declname='error', quals=[] (at pp.c:21279)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__BareSend__sendDone', quals=[] (at pp.c:21279)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21279)
      FuncCall:  (at None)
        ID: name='CC2420TinyosNetworkP__BareSend__default__sendDone' (at pp.c:21281)
        ExprList:  (at pp.c:21281)
          ID: name='msg' (at pp.c:21281)
          ID: name='error' (at pp.c:21281)
  FuncDef:  (at pp.c:21286)
    Decl: name='CC2420ActiveMessageP__AMSend__sendDone', quals=[], storage=['static', 'inline'] (at pp.c:21286)
      FuncDecl: quals=None (at pp.c:21286)
        ParamList:  (at pp.c:21286)
          Decl: name='arg_0x1024ed7d8', quals=[], storage=[] (at pp.c:21286)
            TypeDecl: declname='arg_0x1024ed7d8', quals=[] (at pp.c:21286)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:21286)
            PtrDecl: quals=[] (at pp.c:21286)
              TypeDecl: declname='msg', quals=[] (at pp.c:21286)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:21286)
            TypeDecl: declname='error', quals=[] (at pp.c:21286)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__AMSend__sendDone', quals=[] (at pp.c:21286)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21286)
      FuncCall:  (at None)
        ID: name='AMQueueImplP__0__AMSend__sendDone' (at pp.c:21288)
        ExprList:  (at pp.c:21288)
          ID: name='arg_0x1024ed7d8' (at pp.c:21288)
          ID: name='msg' (at pp.c:21288)
          ID: name='error' (at pp.c:21288)
  FuncDef:  (at pp.c:21293)
    Decl: name='CC2420ActiveMessageP__RadioResource__release', quals=[], storage=['static', 'inline'] (at pp.c:21293)
      FuncDecl: quals=None (at pp.c:21293)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__RadioResource__release', quals=[] (at pp.c:21293)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21293)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21295)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21295)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21299)
        ID: name='__nesc_result' (at pp.c:21299)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__Resource__release' (at pp.c:21299)
          ExprList:  (at pp.c:21299)
            ID: name='CC2420ActiveMessageC__CC2420_AM_SEND_ID' (at pp.c:21299)
      Return:  (at pp.c:21303)
        ID: name='__nesc_result' (at pp.c:21303)
  FuncDef:  (at pp.c:21308)
    Decl: name='CC2420ActiveMessageP__SubSend__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:21308)
      FuncDecl: quals=None (at pp.c:21308)
        ParamList:  (at pp.c:21308)
          Decl: name='msg', quals=[], storage=[] (at pp.c:21308)
            PtrDecl: quals=[] (at pp.c:21308)
              TypeDecl: declname='msg', quals=[] (at pp.c:21308)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:21308)
            TypeDecl: declname='result', quals=[] (at pp.c:21308)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__SubSend__sendDone', quals=[] (at pp.c:21308)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21310)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__RadioResource__release' (at pp.c:21311)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__AMSend__sendDone' (at pp.c:21312)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='CC2420ActiveMessageP__AMPacket__type' (at pp.c:21312)
            ExprList:  (at pp.c:21312)
              ID: name='msg' (at pp.c:21312)
          ID: name='msg' (at pp.c:21312)
          ID: name='result' (at pp.c:21312)
  FuncDef:  (at pp.c:21316)
    Decl: name='CC2420TinyosNetworkP__ActiveSend__sendDone', quals=[], storage=['static', 'inline'] (at pp.c:21316)
      FuncDecl: quals=None (at pp.c:21316)
        ParamList:  (at pp.c:21316)
          Decl: name='msg', quals=[], storage=[] (at pp.c:21316)
            PtrDecl: quals=[] (at pp.c:21316)
              TypeDecl: declname='msg', quals=[] (at pp.c:21316)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:21316)
            TypeDecl: declname='error', quals=[] (at pp.c:21316)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__ActiveSend__sendDone', quals=[] (at pp.c:21316)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21316)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__SubSend__sendDone' (at pp.c:21318)
        ExprList:  (at pp.c:21318)
          ID: name='msg' (at pp.c:21318)
          ID: name='error' (at pp.c:21318)
  FuncDef:  (at pp.c:21323)
    Decl: name='CC2420TinyosNetworkP__SubSend__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:21323)
      FuncDecl: quals=None (at pp.c:21323)
        ParamList:  (at pp.c:21323)
          Decl: name='msg', quals=[], storage=[] (at pp.c:21323)
            PtrDecl: quals=[] (at pp.c:21323)
              TypeDecl: declname='msg', quals=[] (at pp.c:21323)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:21323)
            TypeDecl: declname='error', quals=[] (at pp.c:21323)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__SubSend__sendDone', quals=[] (at pp.c:21323)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21325)
      If:  (at pp.c:21326)
        BinaryOp: op='==' (at pp.c:21326)
          ID: name='CC2420TinyosNetworkP__m_busy_client' (at pp.c:21326)
          ID: name='CC2420TinyosNetworkP__CLIENT_AM' (at pp.c:21326)
        Compound:  (at pp.c:21326)
          FuncCall:  (at None)
            ID: name='CC2420TinyosNetworkP__ActiveSend__sendDone' (at pp.c:21327)
            ExprList:  (at pp.c:21327)
              ID: name='msg' (at pp.c:21327)
              ID: name='error' (at pp.c:21327)
        Compound:  (at pp.c:21331)
          FuncCall:  (at None)
            ID: name='CC2420TinyosNetworkP__BareSend__sendDone' (at pp.c:21332)
            ExprList:  (at pp.c:21332)
              ID: name='msg' (at pp.c:21332)
              ID: name='error' (at pp.c:21332)
  FuncDef:  (at pp.c:21337)
    Decl: name='UniqueSendP__Send__sendDone', quals=[], storage=['static', 'inline'] (at pp.c:21337)
      FuncDecl: quals=None (at pp.c:21337)
        ParamList:  (at pp.c:21337)
          Decl: name='msg', quals=[], storage=[] (at pp.c:21337)
            PtrDecl: quals=[] (at pp.c:21337)
              TypeDecl: declname='msg', quals=[] (at pp.c:21337)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:21337)
            TypeDecl: declname='error', quals=[] (at pp.c:21337)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='UniqueSendP__Send__sendDone', quals=[] (at pp.c:21337)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21337)
      FuncCall:  (at None)
        ID: name='CC2420TinyosNetworkP__SubSend__sendDone' (at pp.c:21339)
        ExprList:  (at pp.c:21339)
          ID: name='msg' (at pp.c:21339)
          ID: name='error' (at pp.c:21339)
  FuncDef:  (at pp.c:21344)
    Decl: name='UniqueSendP__SubSend__sendDone', quals=[], storage=['inline', 'static'] (at pp.c:21344)
      FuncDecl: quals=None (at pp.c:21344)
        ParamList:  (at pp.c:21344)
          Decl: name='msg', quals=[], storage=[] (at pp.c:21344)
            PtrDecl: quals=[] (at pp.c:21344)
              TypeDecl: declname='msg', quals=[] (at pp.c:21344)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:21344)
            TypeDecl: declname='error', quals=[] (at pp.c:21344)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='UniqueSendP__SubSend__sendDone', quals=[] (at pp.c:21344)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21346)
      FuncCall:  (at None)
        ID: name='UniqueSendP__State__toIdle' (at pp.c:21347)
      FuncCall:  (at None)
        ID: name='UniqueSendP__Send__sendDone' (at pp.c:21348)
        ExprList:  (at pp.c:21348)
          ID: name='msg' (at pp.c:21348)
          ID: name='error' (at pp.c:21348)
  FuncDef:  (at pp.c:21352)
    Decl: name='CC2420CsmaP__Send__sendDone', quals=[], storage=['static', 'inline'] (at pp.c:21352)
      FuncDecl: quals=None (at pp.c:21352)
        ParamList:  (at pp.c:21352)
          Decl: name='msg', quals=[], storage=[] (at pp.c:21352)
            PtrDecl: quals=[] (at pp.c:21352)
              TypeDecl: declname='msg', quals=[] (at pp.c:21352)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:21352)
            TypeDecl: declname='error', quals=[] (at pp.c:21352)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__Send__sendDone', quals=[] (at pp.c:21352)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21352)
      FuncCall:  (at None)
        ID: name='UniqueSendP__SubSend__sendDone' (at pp.c:21354)
        ExprList:  (at pp.c:21354)
          ID: name='msg' (at pp.c:21354)
          ID: name='error' (at pp.c:21354)
  FuncDef:  (at pp.c:21359)
    Decl: name='CC2420CsmaP__stopDone_task__postTask', quals=[], storage=['static', 'inline'] (at pp.c:21359)
      FuncDecl: quals=None (at pp.c:21359)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__stopDone_task__postTask', quals=[] (at pp.c:21359)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21359)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21361)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21361)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21365)
        ID: name='__nesc_result' (at pp.c:21365)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:21365)
          ExprList:  (at pp.c:21365)
            ID: name='CC2420CsmaP__stopDone_task' (at pp.c:21365)
      Return:  (at pp.c:21369)
        ID: name='__nesc_result' (at pp.c:21369)
  FuncDef:  (at pp.c:21374)
    Decl: name='HplMsp430GeneralIOP__29__IO__clr', quals=[], storage=['inline', 'static'] (at pp.c:21374)
      FuncDecl: quals=None (at pp.c:21374)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__29__IO__clr', quals=[] (at pp.c:21374)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21376)
      Compound:  (at pp.c:21378)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:21378)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:21378)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:21378)
        Assignment: op='&=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:21380)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:21380)
          UnaryOp: op='~' (at pp.c:21380)
            BinaryOp: op='<<' (at pp.c:21380)
              Constant: type='int', value='0x01' (at pp.c:21380)
              Constant: type='int', value='5' (at pp.c:21380)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:21382)
          ExprList:  (at pp.c:21382)
            ID: name='__nesc_atomic' (at pp.c:21382)
  FuncDef:  (at pp.c:21386)
    Decl: name='Msp430GpioC__6__HplGeneralIO__clr', quals=[], storage=['static', 'inline'] (at pp.c:21386)
      FuncDecl: quals=None (at pp.c:21386)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__6__HplGeneralIO__clr', quals=[] (at pp.c:21386)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21386)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__29__IO__clr' (at pp.c:21388)
  FuncDef:  (at pp.c:21393)
    Decl: name='Msp430GpioC__6__GeneralIO__clr', quals=[], storage=['inline', 'static'] (at pp.c:21393)
      FuncDecl: quals=None (at pp.c:21393)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__6__GeneralIO__clr', quals=[] (at pp.c:21393)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21395)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__6__HplGeneralIO__clr' (at pp.c:21397)
  FuncDef:  (at pp.c:21401)
    Decl: name='CC2420ControlP__VREN__clr', quals=[], storage=['static', 'inline'] (at pp.c:21401)
      FuncDecl: quals=None (at pp.c:21401)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__VREN__clr', quals=[] (at pp.c:21401)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21401)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__6__GeneralIO__clr' (at pp.c:21403)
  FuncDef:  (at pp.c:21408)
    Decl: name='CC2420ControlP__CC2420Power__stopVReg', quals=[], storage=['inline', 'static'] (at pp.c:21408)
      FuncDecl: quals=None (at pp.c:21408)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Power__stopVReg', quals=[] (at pp.c:21408)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21410)
      Assignment: op='=' (at pp.c:21411)
        ID: name='CC2420ControlP__m_state' (at pp.c:21411)
        ID: name='CC2420ControlP__S_VREG_STOPPED' (at pp.c:21411)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__RSTN__clr' (at pp.c:21412)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__VREN__clr' (at pp.c:21413)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__RSTN__set' (at pp.c:21414)
      Return:  (at pp.c:21415)
        ID: name='SUCCESS' (at pp.c:21415)
  FuncDef:  (at pp.c:21419)
    Decl: name='CC2420CsmaP__CC2420Power__stopVReg', quals=[], storage=['static', 'inline'] (at pp.c:21419)
      FuncDecl: quals=None (at pp.c:21419)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__CC2420Power__stopVReg', quals=[] (at pp.c:21419)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21419)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21421)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21421)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21425)
        ID: name='__nesc_result' (at pp.c:21425)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__CC2420Power__stopVReg' (at pp.c:21425)
      Return:  (at pp.c:21429)
        ID: name='__nesc_result' (at pp.c:21429)
  FuncDef:  (at pp.c:21434)
    Decl: name='ecombine', quals=[], storage=['inline', 'static'] (at pp.c:21434)
      FuncDecl: quals=None (at pp.c:21434)
        ParamList:  (at pp.c:21434)
          Decl: name='r1', quals=[], storage=[] (at pp.c:21434)
            TypeDecl: declname='r1', quals=[] (at pp.c:21434)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='r2', quals=[], storage=[] (at pp.c:21434)
            TypeDecl: declname='r2', quals=[] (at pp.c:21434)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='ecombine', quals=[] (at pp.c:21434)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21439)
      Return:  (at pp.c:21440)
        TernaryOp:  (at pp.c:21440)
          BinaryOp: op='==' (at pp.c:21440)
            ID: name='r1' (at pp.c:21440)
            ID: name='r2' (at pp.c:21440)
          ID: name='r1' (at pp.c:21440)
          ID: name='FAIL' (at pp.c:21440)
  FuncDef:  (at pp.c:21444)
    Decl: name='HplMsp430InterruptP__Port10__clear', quals=[], storage=['inline', 'static'] (at pp.c:21444)
      FuncDecl: quals=None (at pp.c:21444)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port10__clear', quals=[] (at pp.c:21444)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21446)
      Assignment: op='&=' (at pp.c:21448)
        ID: name='P1IFG' (at pp.c:21448)
        UnaryOp: op='~' (at pp.c:21448)
          BinaryOp: op='<<' (at pp.c:21448)
            Constant: type='int', value='1' (at pp.c:21448)
            Constant: type='int', value='0' (at pp.c:21448)
  FuncDef:  (at pp.c:21452)
    Decl: name='Msp430InterruptC__1__HplInterrupt__clear', quals=[], storage=['static', 'inline'] (at pp.c:21452)
      FuncDecl: quals=None (at pp.c:21452)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__clear', quals=[] (at pp.c:21452)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21452)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port10__clear' (at pp.c:21454)
  FuncDef:  (at pp.c:21459)
    Decl: name='HplMsp430InterruptP__Port10__disable', quals=[], storage=['inline', 'static'] (at pp.c:21459)
      FuncDecl: quals=None (at pp.c:21459)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port10__disable', quals=[] (at pp.c:21459)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21461)
      Assignment: op='&=' (at pp.c:21463)
        ID: name='P1IE' (at pp.c:21463)
        UnaryOp: op='~' (at pp.c:21463)
          BinaryOp: op='<<' (at pp.c:21463)
            Constant: type='int', value='1' (at pp.c:21463)
            Constant: type='int', value='0' (at pp.c:21463)
  FuncDef:  (at pp.c:21467)
    Decl: name='Msp430InterruptC__1__HplInterrupt__disable', quals=[], storage=['static', 'inline'] (at pp.c:21467)
      FuncDecl: quals=None (at pp.c:21467)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__disable', quals=[] (at pp.c:21467)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21467)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port10__disable' (at pp.c:21469)
  FuncDef:  (at pp.c:21474)
    Decl: name='Msp430InterruptC__1__Interrupt__disable', quals=[], storage=['inline', 'static'] (at pp.c:21474)
      FuncDecl: quals=None (at pp.c:21474)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__1__Interrupt__disable', quals=[] (at pp.c:21474)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21476)
      Compound:  (at pp.c:21479)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__1__HplInterrupt__disable' (at pp.c:21480)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__1__HplInterrupt__clear' (at pp.c:21481)
      Return:  (at pp.c:21483)
        ID: name='SUCCESS' (at pp.c:21483)
  FuncDef:  (at pp.c:21487)
    Decl: name='CC2420ReceiveP__InterruptFIFOP__disable', quals=[], storage=['static', 'inline'] (at pp.c:21487)
      FuncDecl: quals=None (at pp.c:21487)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__InterruptFIFOP__disable', quals=[] (at pp.c:21487)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21487)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21489)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21489)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21493)
        ID: name='__nesc_result' (at pp.c:21493)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__1__Interrupt__disable' (at pp.c:21493)
      Return:  (at pp.c:21497)
        ID: name='__nesc_result' (at pp.c:21497)
  FuncDef:  (at pp.c:21502)
    Decl: name='CC2420ReceiveP__StdControl__stop', quals=[], storage=['inline', 'static'] (at pp.c:21502)
      FuncDecl: quals=None (at pp.c:21502)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__StdControl__stop', quals=[] (at pp.c:21502)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21504)
      Compound:  (at pp.c:21505)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:21505)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:21505)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:21505)
        Compound:  (at pp.c:21507)
          Assignment: op='=' (at pp.c:21508)
            ID: name='CC2420ReceiveP__m_state' (at pp.c:21508)
            ID: name='CC2420ReceiveP__S_STOPPED' (at pp.c:21508)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__reset_state' (at pp.c:21509)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__CSN__set' (at pp.c:21510)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__InterruptFIFOP__disable' (at pp.c:21511)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:21514)
          ExprList:  (at pp.c:21514)
            ID: name='__nesc_atomic' (at pp.c:21514)
      Return:  (at pp.c:21515)
        ID: name='SUCCESS' (at pp.c:21515)
  FuncDef:  (at pp.c:21519)
    Decl: name='HplMsp430GeneralIOP__25__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:21519)
      FuncDecl: quals=None (at pp.c:21519)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__25__IO__selectIOFunc', quals=[] (at pp.c:21519)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21521)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:21524)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='31U' (at pp.c:21524)
        UnaryOp: op='~' (at pp.c:21524)
          BinaryOp: op='<<' (at pp.c:21524)
            Constant: type='int', value='0x01' (at pp.c:21524)
            Constant: type='int', value='1' (at pp.c:21524)
  FuncDef:  (at pp.c:21528)
    Decl: name='GpioCaptureC__0__GeneralIO__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:21528)
      FuncDecl: quals=None (at pp.c:21528)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='GpioCaptureC__0__GeneralIO__selectIOFunc', quals=[] (at pp.c:21528)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21528)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__25__IO__selectIOFunc' (at pp.c:21530)
  FuncDef:  (at pp.c:21535)
    Decl: name='Msp430TimerCapComP__4__Control__disableEvents', quals=[], storage=['inline', 'static'] (at pp.c:21535)
      FuncDecl: quals=None (at pp.c:21535)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__4__Control__disableEvents', quals=[] (at pp.c:21535)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21536)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:21537)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='388U' (at pp.c:21537)
        UnaryOp: op='~' (at pp.c:21537)
          Constant: type='int', value='0x0010' (at pp.c:21537)
  FuncDef:  (at pp.c:21541)
    Decl: name='GpioCaptureC__0__Msp430TimerControl__disableEvents', quals=[], storage=['static', 'inline'] (at pp.c:21541)
      FuncDecl: quals=None (at pp.c:21541)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='GpioCaptureC__0__Msp430TimerControl__disableEvents', quals=[] (at pp.c:21541)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21541)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__4__Control__disableEvents' (at pp.c:21543)
  FuncDef:  (at pp.c:21548)
    Decl: name='GpioCaptureC__0__Capture__disable', quals=[], storage=['inline', 'static'] (at pp.c:21548)
      FuncDecl: quals=None (at pp.c:21548)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='GpioCaptureC__0__Capture__disable', quals=[] (at pp.c:21548)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21550)
      Compound:  (at pp.c:21553)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__Msp430TimerControl__disableEvents' (at pp.c:21554)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__GeneralIO__selectIOFunc' (at pp.c:21555)
  FuncDef:  (at pp.c:21560)
    Decl: name='CC2420TransmitP__CaptureSFD__disable', quals=[], storage=['static', 'inline'] (at pp.c:21560)
      FuncDecl: quals=None (at pp.c:21560)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__CaptureSFD__disable', quals=[] (at pp.c:21560)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21560)
      FuncCall:  (at None)
        ID: name='GpioCaptureC__0__Capture__disable' (at pp.c:21562)
  FuncDef:  (at pp.c:21567)
    Decl: name='CC2420TransmitP__StdControl__stop', quals=[], storage=['inline', 'static'] (at pp.c:21567)
      FuncDecl: quals=None (at pp.c:21567)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__StdControl__stop', quals=[] (at pp.c:21567)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21569)
      Compound:  (at pp.c:21570)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:21570)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:21570)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:21570)
        Compound:  (at pp.c:21572)
          Assignment: op='=' (at pp.c:21573)
            ID: name='CC2420TransmitP__m_state' (at pp.c:21573)
            ID: name='CC2420TransmitP__S_STOPPED' (at pp.c:21573)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__BackoffTimer__stop' (at pp.c:21574)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__CaptureSFD__disable' (at pp.c:21575)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__SpiResource__release' (at pp.c:21576)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__CSN__set' (at pp.c:21577)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:21580)
          ExprList:  (at pp.c:21580)
            ID: name='__nesc_atomic' (at pp.c:21580)
      Return:  (at pp.c:21581)
        ID: name='SUCCESS' (at pp.c:21581)
  FuncDef:  (at pp.c:21585)
    Decl: name='CC2420CsmaP__SubControl__stop', quals=[], storage=['static', 'inline'] (at pp.c:21585)
      FuncDecl: quals=None (at pp.c:21585)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__SubControl__stop', quals=[] (at pp.c:21585)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21585)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21587)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21587)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21591)
        ID: name='__nesc_result' (at pp.c:21591)
        FuncCall:  (at None)
          ID: name='CC2420TransmitP__StdControl__stop' (at pp.c:21591)
      Assignment: op='=' (at pp.c:21593)
        ID: name='__nesc_result' (at pp.c:21593)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:21593)
          ExprList:  (at pp.c:21593)
            ID: name='__nesc_result' (at pp.c:21593)
            FuncCall:  (at None)
              ID: name='CC2420ReceiveP__StdControl__stop' (at pp.c:21593)
      Return:  (at pp.c:21597)
        ID: name='__nesc_result' (at pp.c:21597)
  FuncDef:  (at pp.c:21602)
    Decl: name='CC2420CsmaP__shutdown', quals=[], storage=['inline', 'static'] (at pp.c:21602)
      FuncDecl: quals=None (at pp.c:21602)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__shutdown', quals=[] (at pp.c:21602)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21604)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__SubControl__stop' (at pp.c:21605)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__CC2420Power__stopVReg' (at pp.c:21606)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__stopDone_task__postTask' (at pp.c:21607)
  FuncDef:  (at pp.c:21611)
    Decl: name='CC2420CsmaP__sendDone_task__runTask', quals=[], storage=['inline', 'static'] (at pp.c:21611)
      FuncDecl: quals=None (at pp.c:21611)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__sendDone_task__runTask', quals=[] (at pp.c:21611)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21613)
      Decl: name='packetErr', quals=[], storage=[] (at pp.c:21614)
        TypeDecl: declname='packetErr', quals=[] (at pp.c:21614)
          IdentifierType: names=['error_t'] (at None)
      Compound:  (at pp.c:21617)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:21617)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:21617)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:21617)
        Assignment: op='=' (at pp.c:21619)
          ID: name='packetErr' (at pp.c:21619)
          ID: name='CC2420CsmaP__sendErr' (at pp.c:21619)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:21621)
          ExprList:  (at pp.c:21621)
            ID: name='__nesc_atomic' (at pp.c:21621)
      If:  (at pp.c:21622)
        FuncCall:  (at None)
          ID: name='CC2420CsmaP__SplitControlState__isState' (at pp.c:21622)
          ExprList:  (at pp.c:21622)
            ID: name='CC2420CsmaP__S_STOPPING' (at pp.c:21622)
        Compound:  (at pp.c:21622)
          FuncCall:  (at None)
            ID: name='CC2420CsmaP__shutdown' (at pp.c:21623)
        Compound:  (at pp.c:21625)
          FuncCall:  (at None)
            ID: name='CC2420CsmaP__SplitControlState__forceState' (at pp.c:21626)
            ExprList:  (at pp.c:21626)
              ID: name='CC2420CsmaP__S_STARTED' (at pp.c:21626)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__Send__sendDone' (at pp.c:21629)
        ExprList:  (at pp.c:21629)
          ID: name='CC2420CsmaP__m_msg' (at pp.c:21629)
          ID: name='packetErr' (at pp.c:21629)
  FuncDef:  (at pp.c:21633)
    Decl: name='OscilloscopeC__RadioControl__stopDone', quals=[], storage=['inline', 'static'] (at pp.c:21633)
      FuncDecl: quals=None (at pp.c:21633)
        ParamList:  (at pp.c:21633)
          Decl: name='error', quals=[], storage=[] (at pp.c:21633)
            TypeDecl: declname='error', quals=[] (at pp.c:21633)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='OscilloscopeC__RadioControl__stopDone', quals=[] (at pp.c:21633)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21635)
  FuncDef:  (at pp.c:21639)
    Decl: name='CC2420CsmaP__SplitControl__stopDone', quals=[], storage=['static', 'inline'] (at pp.c:21639)
      FuncDecl: quals=None (at pp.c:21639)
        ParamList:  (at pp.c:21639)
          Decl: name='error', quals=[], storage=[] (at pp.c:21639)
            TypeDecl: declname='error', quals=[] (at pp.c:21639)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__SplitControl__stopDone', quals=[] (at pp.c:21639)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21639)
      FuncCall:  (at None)
        ID: name='OscilloscopeC__RadioControl__stopDone' (at pp.c:21641)
        ExprList:  (at pp.c:21641)
          ID: name='error' (at pp.c:21641)
  FuncDef:  (at pp.c:21646)
    Decl: name='CC2420CsmaP__stopDone_task__runTask', quals=[], storage=['inline', 'static'] (at pp.c:21646)
      FuncDecl: quals=None (at pp.c:21646)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__stopDone_task__runTask', quals=[] (at pp.c:21646)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21648)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__SplitControlState__forceState' (at pp.c:21649)
        ExprList:  (at pp.c:21649)
          ID: name='CC2420CsmaP__S_STOPPED' (at pp.c:21649)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__SplitControl__stopDone' (at pp.c:21650)
        ExprList:  (at pp.c:21650)
          ID: name='SUCCESS' (at pp.c:21650)
  FuncDef:  (at pp.c:21654)
    Decl: name='OscilloscopeC__RadioControl__startDone', quals=[], storage=['inline', 'static'] (at pp.c:21654)
      FuncDecl: quals=None (at pp.c:21654)
        ParamList:  (at pp.c:21654)
          Decl: name='error', quals=[], storage=[] (at pp.c:21654)
            TypeDecl: declname='error', quals=[] (at pp.c:21654)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='OscilloscopeC__RadioControl__startDone', quals=[] (at pp.c:21654)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21656)
      FuncCall:  (at None)
        ID: name='OscilloscopeC__startTimer' (at pp.c:21657)
  FuncDef:  (at pp.c:21661)
    Decl: name='CC2420CsmaP__SplitControl__startDone', quals=[], storage=['static', 'inline'] (at pp.c:21661)
      FuncDecl: quals=None (at pp.c:21661)
        ParamList:  (at pp.c:21661)
          Decl: name='error', quals=[], storage=[] (at pp.c:21661)
            TypeDecl: declname='error', quals=[] (at pp.c:21661)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__SplitControl__startDone', quals=[] (at pp.c:21661)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21661)
      FuncCall:  (at None)
        ID: name='OscilloscopeC__RadioControl__startDone' (at pp.c:21663)
        ExprList:  (at pp.c:21663)
          ID: name='error' (at pp.c:21663)
  FuncDef:  (at pp.c:21668)
    Decl: name='CC2420ControlP__SpiResource__release', quals=[], storage=['static', 'inline'] (at pp.c:21668)
      FuncDecl: quals=None (at pp.c:21668)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__SpiResource__release', quals=[] (at pp.c:21668)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21668)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21670)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21670)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21674)
        ID: name='__nesc_result' (at pp.c:21674)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__Resource__release' (at pp.c:21674)
          ExprList:  (at pp.c:21674)
            ID: name='CC2420SpiC__0__CLIENT_ID' (at pp.c:21674)
      Return:  (at pp.c:21678)
        ID: name='__nesc_result' (at pp.c:21678)
  FuncDef:  (at pp.c:21683)
    Decl: name='CC2420ControlP__Resource__release', quals=[], storage=['inline', 'static'] (at pp.c:21683)
      FuncDecl: quals=None (at pp.c:21683)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__Resource__release', quals=[] (at pp.c:21683)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21685)
      Compound:  (at pp.c:21686)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:21686)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:21686)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:21686)
        Compound:  (at pp.c:21688)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__CSN__set' (at pp.c:21689)
          Compound:  (at pp.c:21690)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:21691)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:21691)
                IdentifierType: names=['char', 'unsigned'] (at None)
              FuncCall:  (at None)
                ID: name='CC2420ControlP__SpiResource__release' (at pp.c:21693)
            Compound:  (at pp.c:21695)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_end' (at pp.c:21697)
                ExprList:  (at pp.c:21697)
                  ID: name='__nesc_atomic' (at pp.c:21697)
              Return:  (at pp.c:21699)
                ID: name='__nesc_temp' (at pp.c:21699)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:21704)
          ExprList:  (at pp.c:21704)
            ID: name='__nesc_atomic' (at pp.c:21704)
  FuncDef:  (at pp.c:21708)
    Decl: name='CC2420CsmaP__Resource__release', quals=[], storage=['static', 'inline'] (at pp.c:21708)
      FuncDecl: quals=None (at pp.c:21708)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__Resource__release', quals=[] (at pp.c:21708)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21708)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21710)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21710)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21714)
        ID: name='__nesc_result' (at pp.c:21714)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__Resource__release' (at pp.c:21714)
      Return:  (at pp.c:21718)
        ID: name='__nesc_result' (at pp.c:21718)
  FuncDef:  (at pp.c:21723)
    Decl: name='CC2420ControlP__CC2420Power__rxOn', quals=[], storage=['inline', 'static'] (at pp.c:21723)
      FuncDecl: quals=None (at pp.c:21723)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Power__rxOn', quals=[] (at pp.c:21723)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21725)
      Compound:  (at pp.c:21726)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:21726)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:21726)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:21726)
        Compound:  (at pp.c:21728)
          If:  (at pp.c:21729)
            BinaryOp: op='!=' (at pp.c:21729)
              ID: name='CC2420ControlP__m_state' (at pp.c:21729)
              ID: name='CC2420ControlP__S_XOSC_STARTED' (at pp.c:21729)
            Compound:  (at pp.c:21729)
              Compound:  (at pp.c:21730)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:21731)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:21731)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='FAIL' (at pp.c:21733)
                Compound:  (at pp.c:21735)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:21737)
                    ExprList:  (at pp.c:21737)
                      ID: name='__nesc_atomic' (at pp.c:21737)
                  Return:  (at pp.c:21739)
                    ID: name='__nesc_temp' (at pp.c:21739)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__SRXON__strobe' (at pp.c:21744)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:21747)
          ExprList:  (at pp.c:21747)
            ID: name='__nesc_atomic' (at pp.c:21747)
      Return:  (at pp.c:21748)
        ID: name='SUCCESS' (at pp.c:21748)
  FuncDef:  (at pp.c:21752)
    Decl: name='CC2420CsmaP__CC2420Power__rxOn', quals=[], storage=['static', 'inline'] (at pp.c:21752)
      FuncDecl: quals=None (at pp.c:21752)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__CC2420Power__rxOn', quals=[] (at pp.c:21752)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21752)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21754)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21754)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21758)
        ID: name='__nesc_result' (at pp.c:21758)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__CC2420Power__rxOn' (at pp.c:21758)
      Return:  (at pp.c:21762)
        ID: name='__nesc_result' (at pp.c:21762)
  FuncDef:  (at pp.c:21767)
    Decl: name='HplMsp430InterruptP__Port10__enable', quals=[], storage=['inline', 'static'] (at pp.c:21767)
      FuncDecl: quals=None (at pp.c:21767)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port10__enable', quals=[] (at pp.c:21767)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21769)
      Assignment: op='|=' (at pp.c:21771)
        ID: name='P1IE' (at pp.c:21771)
        BinaryOp: op='<<' (at pp.c:21771)
          Constant: type='int', value='1' (at pp.c:21771)
          Constant: type='int', value='0' (at pp.c:21771)
  FuncDef:  (at pp.c:21775)
    Decl: name='Msp430InterruptC__1__HplInterrupt__enable', quals=[], storage=['static', 'inline'] (at pp.c:21775)
      FuncDecl: quals=None (at pp.c:21775)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__enable', quals=[] (at pp.c:21775)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21775)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port10__enable' (at pp.c:21777)
  FuncDef:  (at pp.c:21782)
    Decl: name='HplMsp430InterruptP__Port10__edge', quals=[], storage=['inline', 'static'] (at pp.c:21782)
      FuncDecl: quals=None (at pp.c:21782)
        ParamList:  (at pp.c:21782)
          Decl: name='l2h', quals=[], storage=[] (at pp.c:21782)
            TypeDecl: declname='l2h', quals=[] (at pp.c:21782)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port10__edge', quals=[] (at pp.c:21782)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21784)
      Compound:  (at pp.c:21787)
        If:  (at pp.c:21788)
          ID: name='l2h' (at pp.c:21788)
          Compound:  (at pp.c:21788)
            Assignment: op='&=' (at pp.c:21790)
              ID: name='P1IES' (at pp.c:21790)
              UnaryOp: op='~' (at pp.c:21790)
                BinaryOp: op='<<' (at pp.c:21790)
                  Constant: type='int', value='1' (at pp.c:21790)
                  Constant: type='int', value='0' (at pp.c:21790)
          Compound:  (at pp.c:21792)
            Assignment: op='|=' (at pp.c:21794)
              ID: name='P1IES' (at pp.c:21794)
              BinaryOp: op='<<' (at pp.c:21794)
                Constant: type='int', value='1' (at pp.c:21794)
                Constant: type='int', value='0' (at pp.c:21794)
  FuncDef:  (at pp.c:21800)
    Decl: name='Msp430InterruptC__1__HplInterrupt__edge', quals=[], storage=['static', 'inline'] (at pp.c:21800)
      FuncDecl: quals=None (at pp.c:21800)
        ParamList:  (at pp.c:21800)
          Decl: name='low_to_high', quals=[], storage=[] (at pp.c:21800)
            TypeDecl: declname='low_to_high', quals=[] (at pp.c:21800)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__edge', quals=[] (at pp.c:21800)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21800)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port10__edge' (at pp.c:21802)
        ExprList:  (at pp.c:21802)
          ID: name='low_to_high' (at pp.c:21802)
  FuncDef:  (at pp.c:21807)
    Decl: name='Msp430InterruptC__1__enable', quals=[], storage=['inline', 'static'] (at pp.c:21807)
      FuncDecl: quals=None (at pp.c:21807)
        ParamList:  (at pp.c:21807)
          Decl: name='rising', quals=[], storage=[] (at pp.c:21807)
            TypeDecl: declname='rising', quals=[] (at pp.c:21807)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='Msp430InterruptC__1__enable', quals=[] (at pp.c:21807)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21809)
      Compound:  (at pp.c:21812)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__1__Interrupt__disable' (at pp.c:21813)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__1__HplInterrupt__edge' (at pp.c:21814)
          ExprList:  (at pp.c:21814)
            ID: name='rising' (at pp.c:21814)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__1__HplInterrupt__enable' (at pp.c:21815)
      Return:  (at pp.c:21817)
        ID: name='SUCCESS' (at pp.c:21817)
  FuncDef:  (at pp.c:21824)
    Decl: name='Msp430InterruptC__1__Interrupt__enableFallingEdge', quals=[], storage=['inline', 'static'] (at pp.c:21824)
      FuncDecl: quals=None (at pp.c:21824)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__1__Interrupt__enableFallingEdge', quals=[] (at pp.c:21824)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21826)
      Return:  (at pp.c:21827)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__1__enable' (at pp.c:21827)
          ExprList:  (at pp.c:21827)
            ID: name='FALSE' (at pp.c:21827)
  FuncDef:  (at pp.c:21831)
    Decl: name='CC2420ReceiveP__InterruptFIFOP__enableFallingEdge', quals=[], storage=['static', 'inline'] (at pp.c:21831)
      FuncDecl: quals=None (at pp.c:21831)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__InterruptFIFOP__enableFallingEdge', quals=[] (at pp.c:21831)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21831)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21833)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21833)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21837)
        ID: name='__nesc_result' (at pp.c:21837)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__1__Interrupt__enableFallingEdge' (at pp.c:21837)
      Return:  (at pp.c:21841)
        ID: name='__nesc_result' (at pp.c:21841)
  FuncDef:  (at pp.c:21846)
    Decl: name='CC2420ReceiveP__StdControl__start', quals=[], storage=['inline', 'static'] (at pp.c:21846)
      FuncDecl: quals=None (at pp.c:21846)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__StdControl__start', quals=[] (at pp.c:21846)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21848)
      Compound:  (at pp.c:21849)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:21849)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:21849)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:21849)
        Compound:  (at pp.c:21851)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__reset_state' (at pp.c:21852)
          Assignment: op='=' (at pp.c:21853)
            ID: name='CC2420ReceiveP__m_state' (at pp.c:21853)
            ID: name='CC2420ReceiveP__S_STARTED' (at pp.c:21853)
          Assignment: op='=' (at pp.c:21854)
            ID: name='CC2420ReceiveP__receivingPacket' (at pp.c:21854)
            ID: name='FALSE' (at pp.c:21854)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__InterruptFIFOP__enableFallingEdge' (at pp.c:21859)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:21862)
          ExprList:  (at pp.c:21862)
            ID: name='__nesc_atomic' (at pp.c:21862)
      Return:  (at pp.c:21863)
        ID: name='SUCCESS' (at pp.c:21863)
  FuncDef:  (at pp.c:21867)
    Decl: name='CC2420TransmitP__StdControl__start', quals=[], storage=['inline', 'static'] (at pp.c:21867)
      FuncDecl: quals=None (at pp.c:21867)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__StdControl__start', quals=[] (at pp.c:21867)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21869)
      Compound:  (at pp.c:21870)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:21870)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:21870)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:21870)
        Compound:  (at pp.c:21872)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__CaptureSFD__captureRisingEdge' (at pp.c:21873)
          Assignment: op='=' (at pp.c:21874)
            ID: name='CC2420TransmitP__m_state' (at pp.c:21874)
            ID: name='CC2420TransmitP__S_STARTED' (at pp.c:21874)
          Assignment: op='=' (at pp.c:21875)
            ID: name='CC2420TransmitP__m_receiving' (at pp.c:21875)
            ID: name='FALSE' (at pp.c:21875)
          Assignment: op='=' (at pp.c:21876)
            ID: name='CC2420TransmitP__abortSpiRelease' (at pp.c:21876)
            ID: name='FALSE' (at pp.c:21876)
          Assignment: op='=' (at pp.c:21877)
            ID: name='CC2420TransmitP__m_tx_power' (at pp.c:21877)
            Constant: type='int', value='0' (at pp.c:21877)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:21880)
          ExprList:  (at pp.c:21880)
            ID: name='__nesc_atomic' (at pp.c:21880)
      Return:  (at pp.c:21881)
        ID: name='SUCCESS' (at pp.c:21881)
  FuncDef:  (at pp.c:21885)
    Decl: name='CC2420CsmaP__SubControl__start', quals=[], storage=['static', 'inline'] (at pp.c:21885)
      FuncDecl: quals=None (at pp.c:21885)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__SubControl__start', quals=[] (at pp.c:21885)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:21885)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21887)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21887)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21891)
        ID: name='__nesc_result' (at pp.c:21891)
        FuncCall:  (at None)
          ID: name='CC2420TransmitP__StdControl__start' (at pp.c:21891)
      Assignment: op='=' (at pp.c:21893)
        ID: name='__nesc_result' (at pp.c:21893)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:21893)
          ExprList:  (at pp.c:21893)
            ID: name='__nesc_result' (at pp.c:21893)
            FuncCall:  (at None)
              ID: name='CC2420ReceiveP__StdControl__start' (at pp.c:21893)
      Return:  (at pp.c:21897)
        ID: name='__nesc_result' (at pp.c:21897)
  FuncDef:  (at pp.c:21902)
    Decl: name='CC2420CsmaP__startDone_task__runTask', quals=[], storage=['inline', 'static'] (at pp.c:21902)
      FuncDecl: quals=None (at pp.c:21902)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__startDone_task__runTask', quals=[] (at pp.c:21902)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21904)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__SubControl__start' (at pp.c:21905)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__CC2420Power__rxOn' (at pp.c:21906)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__Resource__release' (at pp.c:21907)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__SplitControlState__forceState' (at pp.c:21908)
        ExprList:  (at pp.c:21908)
          ID: name='CC2420CsmaP__S_STARTED' (at pp.c:21908)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__SplitControl__startDone' (at pp.c:21909)
        ExprList:  (at pp.c:21909)
          ID: name='SUCCESS' (at pp.c:21909)
  FuncDef:  (at pp.c:21913)
    Decl: name='ActiveMessageAddressC__ActiveMessageAddress__amGroup', quals=[], storage=['inline', 'static'] (at pp.c:21913)
      FuncDecl: quals=None (at pp.c:21913)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ActiveMessageAddressC__ActiveMessageAddress__amGroup', quals=[] (at pp.c:21913)
          IdentifierType: names=['am_group_t'] (at None)
    Compound:  (at pp.c:21915)
      Decl: name='myGroup', quals=[], storage=[] (at pp.c:21916)
        TypeDecl: declname='myGroup', quals=[] (at pp.c:21916)
          IdentifierType: names=['am_group_t'] (at None)
      Assignment: op='=' (at pp.c:21920)
        ID: name='myGroup' (at pp.c:21920)
        ID: name='ActiveMessageAddressC__group' (at pp.c:21920)
      Return:  (at pp.c:21921)
        ID: name='myGroup' (at pp.c:21921)
  FuncDef:  (at pp.c:21925)
    Decl: name='CC2420ControlP__ActiveMessageAddress__amGroup', quals=[], storage=['static', 'inline'] (at pp.c:21925)
      FuncDecl: quals=None (at pp.c:21925)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__ActiveMessageAddress__amGroup', quals=[] (at pp.c:21925)
          IdentifierType: names=['am_group_t'] (at None)
    Compound:  (at pp.c:21925)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21927)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21927)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21931)
        ID: name='__nesc_result' (at pp.c:21931)
        FuncCall:  (at None)
          ID: name='ActiveMessageAddressC__ActiveMessageAddress__amGroup' (at pp.c:21931)
      Return:  (at pp.c:21935)
        ID: name='__nesc_result' (at pp.c:21935)
  FuncDef:  (at pp.c:21940)
    Decl: name='CC2420ControlP__ActiveMessageAddress__amAddress', quals=[], storage=['static', 'inline'] (at pp.c:21940)
      FuncDecl: quals=None (at pp.c:21940)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__ActiveMessageAddress__amAddress', quals=[] (at pp.c:21940)
          IdentifierType: names=['am_addr_t'] (at None)
    Compound:  (at pp.c:21940)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:21942)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:21942)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:21946)
        ID: name='__nesc_result' (at pp.c:21946)
        FuncCall:  (at None)
          ID: name='ActiveMessageAddressC__ActiveMessageAddress__amAddress' (at pp.c:21946)
      Return:  (at pp.c:21950)
        ID: name='__nesc_result' (at pp.c:21950)
  FuncDef:  (at pp.c:21955)
    Decl: name='HplMsp430GeneralIOP__29__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:21955)
      FuncDecl: quals=None (at pp.c:21955)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__29__IO__makeOutput', quals=[] (at pp.c:21955)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21957)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:21960)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='30U' (at pp.c:21960)
        BinaryOp: op='<<' (at pp.c:21960)
          Constant: type='int', value='0x01' (at pp.c:21960)
          Constant: type='int', value='5' (at pp.c:21960)
  FuncDef:  (at pp.c:21964)
    Decl: name='Msp430GpioC__6__HplGeneralIO__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:21964)
      FuncDecl: quals=None (at pp.c:21964)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__6__HplGeneralIO__makeOutput', quals=[] (at pp.c:21964)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21964)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__29__IO__makeOutput' (at pp.c:21966)
  FuncDef:  (at pp.c:21971)
    Decl: name='Msp430GpioC__6__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:21971)
      FuncDecl: quals=None (at pp.c:21971)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__6__GeneralIO__makeOutput', quals=[] (at pp.c:21971)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21973)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__6__HplGeneralIO__makeOutput' (at pp.c:21975)
  FuncDef:  (at pp.c:21979)
    Decl: name='CC2420ControlP__VREN__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:21979)
      FuncDecl: quals=None (at pp.c:21979)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__VREN__makeOutput', quals=[] (at pp.c:21979)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21979)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__6__GeneralIO__makeOutput' (at pp.c:21981)
  FuncDef:  (at pp.c:21986)
    Decl: name='HplMsp430GeneralIOP__30__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:21986)
      FuncDecl: quals=None (at pp.c:21986)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__30__IO__makeOutput', quals=[] (at pp.c:21986)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21988)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:21991)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='30U' (at pp.c:21991)
        BinaryOp: op='<<' (at pp.c:21991)
          Constant: type='int', value='0x01' (at pp.c:21991)
          Constant: type='int', value='6' (at pp.c:21991)
  FuncDef:  (at pp.c:21995)
    Decl: name='Msp430GpioC__4__HplGeneralIO__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:21995)
      FuncDecl: quals=None (at pp.c:21995)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__4__HplGeneralIO__makeOutput', quals=[] (at pp.c:21995)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:21995)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__30__IO__makeOutput' (at pp.c:21997)
  FuncDef:  (at pp.c:22002)
    Decl: name='Msp430GpioC__4__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:22002)
      FuncDecl: quals=None (at pp.c:22002)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__4__GeneralIO__makeOutput', quals=[] (at pp.c:22002)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22004)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__4__HplGeneralIO__makeOutput' (at pp.c:22006)
  FuncDef:  (at pp.c:22010)
    Decl: name='CC2420ControlP__RSTN__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:22010)
      FuncDecl: quals=None (at pp.c:22010)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__RSTN__makeOutput', quals=[] (at pp.c:22010)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22010)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__4__GeneralIO__makeOutput' (at pp.c:22012)
  FuncDef:  (at pp.c:22017)
    Decl: name='HplMsp430GeneralIOP__26__IO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:22017)
      FuncDecl: quals=None (at pp.c:22017)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__26__IO__makeOutput', quals=[] (at pp.c:22017)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22019)
      Assignment: op='|=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:22022)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='30U' (at pp.c:22022)
        BinaryOp: op='<<' (at pp.c:22022)
          Constant: type='int', value='0x01' (at pp.c:22022)
          Constant: type='int', value='2' (at pp.c:22022)
  FuncDef:  (at pp.c:22026)
    Decl: name='Msp430GpioC__1__HplGeneralIO__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:22026)
      FuncDecl: quals=None (at pp.c:22026)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__HplGeneralIO__makeOutput', quals=[] (at pp.c:22026)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22026)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__26__IO__makeOutput' (at pp.c:22028)
  FuncDef:  (at pp.c:22033)
    Decl: name='Msp430GpioC__1__GeneralIO__makeOutput', quals=[], storage=['inline', 'static'] (at pp.c:22033)
      FuncDecl: quals=None (at pp.c:22033)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__1__GeneralIO__makeOutput', quals=[] (at pp.c:22033)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22035)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__HplGeneralIO__makeOutput' (at pp.c:22037)
  FuncDef:  (at pp.c:22041)
    Decl: name='CC2420ControlP__CSN__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:22041)
      FuncDecl: quals=None (at pp.c:22041)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CSN__makeOutput', quals=[] (at pp.c:22041)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22041)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__GeneralIO__makeOutput' (at pp.c:22043)
  FuncDef:  (at pp.c:22048)
    Decl: name='CC2420ControlP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:22048)
      FuncDecl: quals=None (at pp.c:22048)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__Init__init', quals=[] (at pp.c:22048)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22050)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CSN__makeOutput' (at pp.c:22051)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__RSTN__makeOutput' (at pp.c:22052)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__VREN__makeOutput' (at pp.c:22053)
      Assignment: op='=' (at pp.c:22055)
        ID: name='CC2420ControlP__m_short_addr' (at pp.c:22055)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__ActiveMessageAddress__amAddress' (at pp.c:22055)
      Assignment: op='=' (at pp.c:22056)
        ID: name='CC2420ControlP__m_ext_addr' (at pp.c:22056)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__LocalIeeeEui64__getId' (at pp.c:22056)
      Assignment: op='=' (at pp.c:22057)
        ID: name='CC2420ControlP__m_pan' (at pp.c:22057)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__ActiveMessageAddress__amGroup' (at pp.c:22057)
      Assignment: op='=' (at pp.c:22058)
        ID: name='CC2420ControlP__m_tx_power' (at pp.c:22058)
        Constant: type='int', value='31' (at pp.c:22058)
      Assignment: op='=' (at pp.c:22059)
        ID: name='CC2420ControlP__m_channel' (at pp.c:22059)
        Constant: type='int', value='26' (at pp.c:22059)
      Assignment: op='=' (at pp.c:22065)
        ID: name='CC2420ControlP__addressRecognition' (at pp.c:22065)
        ID: name='TRUE' (at pp.c:22065)
      Assignment: op='=' (at pp.c:22071)
        ID: name='CC2420ControlP__hwAddressRecognition' (at pp.c:22071)
        ID: name='FALSE' (at pp.c:22071)
      Assignment: op='=' (at pp.c:22078)
        ID: name='CC2420ControlP__autoAckEnabled' (at pp.c:22078)
        ID: name='TRUE' (at pp.c:22078)
      Assignment: op='=' (at pp.c:22085)
        ID: name='CC2420ControlP__hwAutoAckDefault' (at pp.c:22085)
        ID: name='FALSE' (at pp.c:22085)
      Return:  (at pp.c:22089)
        ID: name='SUCCESS' (at pp.c:22089)
  FuncDef:  (at pp.c:22093)
    Decl: name='StateImplP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:22093)
      FuncDecl: quals=None (at pp.c:22093)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='StateImplP__Init__init', quals=[] (at pp.c:22093)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22095)
      Decl: name='i', quals=[], storage=[] (at pp.c:22096)
        TypeDecl: declname='i', quals=[] (at pp.c:22096)
          IdentifierType: names=['int'] (at None)
      For:  (at pp.c:22099)
        Assignment: op='=' (at pp.c:22099)
          ID: name='i' (at pp.c:22099)
          Constant: type='int', value='0' (at pp.c:22099)
        BinaryOp: op='<' (at pp.c:22099)
          ID: name='i' (at pp.c:22099)
          Constant: type='int', value='4U' (at pp.c:22099)
        UnaryOp: op='p++' (at pp.c:22099)
          ID: name='i' (at pp.c:22099)
        Compound:  (at pp.c:22099)
          Assignment: op='=' (at pp.c:22100)
            ArrayRef:  (at pp.c:22100)
              ID: name='StateImplP__state' (at pp.c:22100)
              ID: name='i' (at pp.c:22100)
            ID: name='StateImplP__S_IDLE' (at pp.c:22100)
      Return:  (at pp.c:22102)
        ID: name='SUCCESS' (at pp.c:22102)
  FuncDef:  (at pp.c:22106)
    Decl: name='FcfsResourceQueueC__1__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:22106)
      FuncDecl: quals=None (at pp.c:22106)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__1__Init__init', quals=[] (at pp.c:22106)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22108)
      FuncCall:  (at None)
        ID: name='memset' (at pp.c:22109)
        ExprList:  (at pp.c:22109)
          ID: name='FcfsResourceQueueC__1__resQ' (at pp.c:22109)
          ID: name='FcfsResourceQueueC__1__NO_ENTRY' (at pp.c:22109)
          UnaryOp: op='sizeof' (at pp.c:22109)
            ID: name='FcfsResourceQueueC__1__resQ' (at pp.c:22109)
      Return:  (at pp.c:22110)
        ID: name='SUCCESS' (at pp.c:22110)
  FuncDef:  (at pp.c:22114)
    Decl: name='Msp430TimerCapComP__3__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:22114)
      FuncDecl: quals=None (at pp.c:22114)
        ParamList:  (at pp.c:22114)
          Decl: name='x', quals=[], storage=[] (at pp.c:22114)
            TypeDecl: declname='x', quals=[] (at pp.c:22114)
              IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__CC2int', quals=[] (at pp.c:22114)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:22116)
      Decl: name='c', quals=[], storage=[] (at pp.c:22125)
        TypeDecl: declname='c', quals=[] (at pp.c:22125)
          Union: name='Msp430TimerCapComP__3____nesc_unnamed4398', packed=False (at pp.c:22118)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:22120)
                IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:22122)
                IdentifierType: names=['uint16_t'] (at None)
        ExprList:  (at pp.c:22125)
          Assignment: op='=' (at pp.c:22125)
            StructRef: type='.' (at pp.c:22125)
              ID: name='f' (at pp.c:22125)
            ID: name='x' (at pp.c:22125)
      Return:  (at pp.c:22128)
        StructRef: type='.' (at pp.c:22128)
          ID: name='c' (at pp.c:22128)
          ID: name='t' (at pp.c:22128)
  FuncDef:  (at pp.c:22131)
    Decl: name='Msp430TimerCapComP__3__compareControl', quals=[], storage=['inline', 'static'] (at pp.c:22131)
      FuncDecl: quals=None (at pp.c:22131)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__compareControl', quals=[] (at pp.c:22131)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:22132)
      Decl: name='x', quals=[], storage=[] (at pp.c:22133)
        TypeDecl: declname='x', quals=[] (at pp.c:22133)
          IdentifierType: names=['Msp430TimerCapComP__3__cc_t'] (at None)
        ExprList:  (at pp.c:22134)
          Assignment: op='=' (at pp.c:22134)
            StructRef: type='.' (at pp.c:22134)
              ID: name='cm' (at pp.c:22134)
            Constant: type='int', value='1' (at pp.c:22134)
          Assignment: op='=' (at pp.c:22135)
            StructRef: type='.' (at pp.c:22135)
              ID: name='ccis' (at pp.c:22135)
            Constant: type='int', value='0' (at pp.c:22135)
          Assignment: op='=' (at pp.c:22136)
            StructRef: type='.' (at pp.c:22136)
              ID: name='clld' (at pp.c:22136)
            Constant: type='int', value='0' (at pp.c:22136)
          Assignment: op='=' (at pp.c:22137)
            StructRef: type='.' (at pp.c:22137)
              ID: name='cap' (at pp.c:22137)
            Constant: type='int', value='0' (at pp.c:22137)
          Assignment: op='=' (at pp.c:22138)
            StructRef: type='.' (at pp.c:22138)
              ID: name='ccie' (at pp.c:22138)
            Constant: type='int', value='0' (at pp.c:22138)
      Return:  (at pp.c:22140)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__3__CC2int' (at pp.c:22140)
          ExprList:  (at pp.c:22140)
            ID: name='x' (at pp.c:22140)
  FuncDef:  (at pp.c:22144)
    Decl: name='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[], storage=['inline', 'static'] (at pp.c:22144)
      FuncDecl: quals=None (at pp.c:22144)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__3__Control__setControlAsCompare', quals=[] (at pp.c:22144)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22145)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:22146)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='386U' (at pp.c:22146)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__3__compareControl' (at pp.c:22146)
  FuncDef:  (at pp.c:22150)
    Decl: name='Msp430AlarmC__0__Msp430TimerControl__setControlAsCompare', quals=[], storage=['static', 'inline'] (at pp.c:22150)
      FuncDecl: quals=None (at pp.c:22150)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Msp430TimerControl__setControlAsCompare', quals=[] (at pp.c:22150)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22150)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__3__Control__setControlAsCompare' (at pp.c:22152)
  FuncDef:  (at pp.c:22157)
    Decl: name='Msp430AlarmC__0__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:22157)
      FuncDecl: quals=None (at pp.c:22157)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__0__Init__init', quals=[] (at pp.c:22157)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22158)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430TimerControl__disableEvents' (at pp.c:22159)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__0__Msp430TimerControl__setControlAsCompare' (at pp.c:22160)
      Return:  (at pp.c:22161)
        ID: name='SUCCESS' (at pp.c:22161)
  FuncDef:  (at pp.c:22165)
    Decl: name='HplMsp430GeneralIOP__25__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:22165)
      FuncDecl: quals=None (at pp.c:22165)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__25__IO__makeInput', quals=[] (at pp.c:22165)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22167)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:22170)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='30U' (at pp.c:22170)
        UnaryOp: op='~' (at pp.c:22170)
          BinaryOp: op='<<' (at pp.c:22170)
            Constant: type='int', value='0x01' (at pp.c:22170)
            Constant: type='int', value='1' (at pp.c:22170)
  FuncDef:  (at pp.c:22174)
    Decl: name='Msp430GpioC__5__HplGeneralIO__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:22174)
      FuncDecl: quals=None (at pp.c:22174)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__5__HplGeneralIO__makeInput', quals=[] (at pp.c:22174)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22174)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__25__IO__makeInput' (at pp.c:22176)
  FuncDef:  (at pp.c:22181)
    Decl: name='Msp430GpioC__5__GeneralIO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:22181)
      FuncDecl: quals=None (at pp.c:22181)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__5__GeneralIO__makeInput', quals=[] (at pp.c:22181)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22183)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__5__HplGeneralIO__makeInput' (at pp.c:22185)
  FuncDef:  (at pp.c:22189)
    Decl: name='CC2420TransmitP__SFD__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:22189)
      FuncDecl: quals=None (at pp.c:22189)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__SFD__makeInput', quals=[] (at pp.c:22189)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22189)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__5__GeneralIO__makeInput' (at pp.c:22191)
  FuncDef:  (at pp.c:22197)
    Decl: name='CC2420TransmitP__CSN__makeOutput', quals=[], storage=['static', 'inline'] (at pp.c:22197)
      FuncDecl: quals=None (at pp.c:22197)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__CSN__makeOutput', quals=[] (at pp.c:22197)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22197)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__1__GeneralIO__makeOutput' (at pp.c:22199)
  FuncDef:  (at pp.c:22204)
    Decl: name='HplMsp430GeneralIOP__4__IO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:22204)
      FuncDecl: quals=None (at pp.c:22204)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__4__IO__makeInput', quals=[] (at pp.c:22204)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22206)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:22209)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='34U' (at pp.c:22209)
        UnaryOp: op='~' (at pp.c:22209)
          BinaryOp: op='<<' (at pp.c:22209)
            Constant: type='int', value='0x01' (at pp.c:22209)
            Constant: type='int', value='4' (at pp.c:22209)
  FuncDef:  (at pp.c:22213)
    Decl: name='Msp430GpioC__0__HplGeneralIO__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:22213)
      FuncDecl: quals=None (at pp.c:22213)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__HplGeneralIO__makeInput', quals=[] (at pp.c:22213)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22213)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__4__IO__makeInput' (at pp.c:22215)
  FuncDef:  (at pp.c:22220)
    Decl: name='Msp430GpioC__0__GeneralIO__makeInput', quals=[], storage=['inline', 'static'] (at pp.c:22220)
      FuncDecl: quals=None (at pp.c:22220)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__0__GeneralIO__makeInput', quals=[] (at pp.c:22220)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22222)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__0__HplGeneralIO__makeInput' (at pp.c:22224)
  FuncDef:  (at pp.c:22228)
    Decl: name='CC2420TransmitP__CCA__makeInput', quals=[], storage=['static', 'inline'] (at pp.c:22228)
      FuncDecl: quals=None (at pp.c:22228)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__CCA__makeInput', quals=[] (at pp.c:22228)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22228)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__0__GeneralIO__makeInput' (at pp.c:22230)
  FuncDef:  (at pp.c:22235)
    Decl: name='CC2420TransmitP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:22235)
      FuncDecl: quals=None (at pp.c:22235)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__Init__init', quals=[] (at pp.c:22235)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22237)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__CCA__makeInput' (at pp.c:22238)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__CSN__makeOutput' (at pp.c:22239)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__SFD__makeInput' (at pp.c:22240)
      Return:  (at pp.c:22241)
        ID: name='SUCCESS' (at pp.c:22241)
  FuncDef:  (at pp.c:22245)
    Decl: name='CC2420ReceiveP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:22245)
      FuncDecl: quals=None (at pp.c:22245)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__Init__init', quals=[] (at pp.c:22245)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22247)
      Assignment: op='=' (at pp.c:22248)
        ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:22248)
        UnaryOp: op='&' (at pp.c:22248)
          ID: name='CC2420ReceiveP__m_rx_buf' (at pp.c:22248)
      Return:  (at pp.c:22249)
        ID: name='SUCCESS' (at pp.c:22249)
  FuncDef:  (at pp.c:22253)
    Decl: name='Msp430TimerCapComP__5__CC2int', quals=[], storage=['inline', 'static'] (at pp.c:22253)
      FuncDecl: quals=None (at pp.c:22253)
        ParamList:  (at pp.c:22253)
          Decl: name='x', quals=[], storage=[] (at pp.c:22253)
            TypeDecl: declname='x', quals=[] (at pp.c:22253)
              IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__CC2int', quals=[] (at pp.c:22253)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:22255)
      Decl: name='c', quals=[], storage=[] (at pp.c:22264)
        TypeDecl: declname='c', quals=[] (at pp.c:22264)
          Union: name='Msp430TimerCapComP__5____nesc_unnamed4399', packed=False (at pp.c:22257)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:22259)
                IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:22261)
                IdentifierType: names=['uint16_t'] (at None)
        ExprList:  (at pp.c:22264)
          Assignment: op='=' (at pp.c:22264)
            StructRef: type='.' (at pp.c:22264)
              ID: name='f' (at pp.c:22264)
            ID: name='x' (at pp.c:22264)
      Return:  (at pp.c:22267)
        StructRef: type='.' (at pp.c:22267)
          ID: name='c' (at pp.c:22267)
          ID: name='t' (at pp.c:22267)
  FuncDef:  (at pp.c:22270)
    Decl: name='Msp430TimerCapComP__5__compareControl', quals=[], storage=['inline', 'static'] (at pp.c:22270)
      FuncDecl: quals=None (at pp.c:22270)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__compareControl', quals=[] (at pp.c:22270)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:22271)
      Decl: name='x', quals=[], storage=[] (at pp.c:22272)
        TypeDecl: declname='x', quals=[] (at pp.c:22272)
          IdentifierType: names=['Msp430TimerCapComP__5__cc_t'] (at None)
        ExprList:  (at pp.c:22273)
          Assignment: op='=' (at pp.c:22273)
            StructRef: type='.' (at pp.c:22273)
              ID: name='cm' (at pp.c:22273)
            Constant: type='int', value='1' (at pp.c:22273)
          Assignment: op='=' (at pp.c:22274)
            StructRef: type='.' (at pp.c:22274)
              ID: name='ccis' (at pp.c:22274)
            Constant: type='int', value='0' (at pp.c:22274)
          Assignment: op='=' (at pp.c:22275)
            StructRef: type='.' (at pp.c:22275)
              ID: name='clld' (at pp.c:22275)
            Constant: type='int', value='0' (at pp.c:22275)
          Assignment: op='=' (at pp.c:22276)
            StructRef: type='.' (at pp.c:22276)
              ID: name='cap' (at pp.c:22276)
            Constant: type='int', value='0' (at pp.c:22276)
          Assignment: op='=' (at pp.c:22277)
            StructRef: type='.' (at pp.c:22277)
              ID: name='ccie' (at pp.c:22277)
            Constant: type='int', value='0' (at pp.c:22277)
      Return:  (at pp.c:22279)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__5__CC2int' (at pp.c:22279)
          ExprList:  (at pp.c:22279)
            ID: name='x' (at pp.c:22279)
  FuncDef:  (at pp.c:22283)
    Decl: name='Msp430TimerCapComP__5__Control__setControlAsCompare', quals=[], storage=['inline', 'static'] (at pp.c:22283)
      FuncDecl: quals=None (at pp.c:22283)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__5__Control__setControlAsCompare', quals=[] (at pp.c:22283)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22284)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:22285)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='390U' (at pp.c:22285)
        FuncCall:  (at None)
          ID: name='Msp430TimerCapComP__5__compareControl' (at pp.c:22285)
  FuncDef:  (at pp.c:22289)
    Decl: name='Msp430AlarmC__1__Msp430TimerControl__setControlAsCompare', quals=[], storage=['static', 'inline'] (at pp.c:22289)
      FuncDecl: quals=None (at pp.c:22289)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Msp430TimerControl__setControlAsCompare', quals=[] (at pp.c:22289)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22289)
      FuncCall:  (at None)
        ID: name='Msp430TimerCapComP__5__Control__setControlAsCompare' (at pp.c:22291)
  FuncDef:  (at pp.c:22296)
    Decl: name='Msp430AlarmC__1__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:22296)
      FuncDecl: quals=None (at pp.c:22296)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430AlarmC__1__Init__init', quals=[] (at pp.c:22296)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22297)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Msp430TimerControl__disableEvents' (at pp.c:22298)
      FuncCall:  (at None)
        ID: name='Msp430AlarmC__1__Msp430TimerControl__setControlAsCompare' (at pp.c:22299)
      Return:  (at pp.c:22300)
        ID: name='SUCCESS' (at pp.c:22300)
  FuncDef:  (at pp.c:22304)
    Decl: name='RandomMlcgC__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:22304)
      FuncDecl: quals=None (at pp.c:22304)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RandomMlcgC__Init__init', quals=[] (at pp.c:22304)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22306)
      Assignment: op='=' (at pp.c:22309)
        ID: name='RandomMlcgC__seed' (at pp.c:22309)
        Cast:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['uint32_t'] (at None)
          BinaryOp: op='+' (at pp.c:22309)
            ID: name='TOS_NODE_ID' (at pp.c:22309)
            Constant: type='int', value='1' (at pp.c:22309)
      Return:  (at pp.c:22311)
        ID: name='SUCCESS' (at pp.c:22311)
  FuncDef:  (at pp.c:22315)
    Decl: name='UniqueSendP__Random__rand16', quals=[], storage=['static', 'inline'] (at pp.c:22315)
      FuncDecl: quals=None (at pp.c:22315)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='UniqueSendP__Random__rand16', quals=[] (at pp.c:22315)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:22315)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:22317)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:22317)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:22321)
        ID: name='__nesc_result' (at pp.c:22321)
        FuncCall:  (at None)
          ID: name='RandomMlcgC__Random__rand16' (at pp.c:22321)
      Return:  (at pp.c:22325)
        ID: name='__nesc_result' (at pp.c:22325)
  FuncDef:  (at pp.c:22330)
    Decl: name='UniqueSendP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:22330)
      FuncDecl: quals=None (at pp.c:22330)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='UniqueSendP__Init__init', quals=[] (at pp.c:22330)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22332)
      Assignment: op='=' (at pp.c:22333)
        ID: name='UniqueSendP__localSendId' (at pp.c:22333)
        FuncCall:  (at None)
          ID: name='UniqueSendP__Random__rand16' (at pp.c:22333)
      Return:  (at pp.c:22334)
        ID: name='SUCCESS' (at pp.c:22334)
  FuncDef:  (at pp.c:22338)
    Decl: name='UniqueReceiveP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:22338)
      FuncDecl: quals=None (at pp.c:22338)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='UniqueReceiveP__Init__init', quals=[] (at pp.c:22338)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22340)
      Decl: name='i', quals=[], storage=[] (at pp.c:22341)
        TypeDecl: declname='i', quals=[] (at pp.c:22341)
          IdentifierType: names=['int'] (at None)
      For:  (at pp.c:22344)
        Assignment: op='=' (at pp.c:22344)
          ID: name='i' (at pp.c:22344)
          Constant: type='int', value='0' (at pp.c:22344)
        BinaryOp: op='<' (at pp.c:22344)
          ID: name='i' (at pp.c:22344)
          Constant: type='int', value='4' (at pp.c:22344)
        UnaryOp: op='p++' (at pp.c:22344)
          ID: name='i' (at pp.c:22344)
        Compound:  (at pp.c:22344)
          Assignment: op='=' (at pp.c:22345)
            StructRef: type='.' (at pp.c:22345)
              ArrayRef:  (at pp.c:22345)
                ID: name='UniqueReceiveP__receivedMessages' (at pp.c:22345)
                ID: name='i' (at pp.c:22345)
              ID: name='source' (at pp.c:22345)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['am_addr_t'] (at None)
              Constant: type='int', value='0xFFFF' (at pp.c:22345)
          Assignment: op='=' (at pp.c:22346)
            StructRef: type='.' (at pp.c:22346)
              ArrayRef:  (at pp.c:22346)
                ID: name='UniqueReceiveP__receivedMessages' (at pp.c:22346)
                ID: name='i' (at pp.c:22346)
              ID: name='dsn' (at pp.c:22346)
            Constant: type='int', value='0' (at pp.c:22346)
      Return:  (at pp.c:22348)
        ID: name='SUCCESS' (at pp.c:22348)
  FuncDef:  (at pp.c:22352)
    Decl: name='FcfsResourceQueueC__0__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:22352)
      FuncDecl: quals=None (at pp.c:22352)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__0__Init__init', quals=[] (at pp.c:22352)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22354)
      FuncCall:  (at None)
        ID: name='memset' (at pp.c:22355)
        ExprList:  (at pp.c:22355)
          ID: name='FcfsResourceQueueC__0__resQ' (at pp.c:22355)
          ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:22355)
          UnaryOp: op='sizeof' (at pp.c:22355)
            ID: name='FcfsResourceQueueC__0__resQ' (at pp.c:22355)
      Return:  (at pp.c:22356)
        ID: name='SUCCESS' (at pp.c:22356)
  FuncDef:  (at pp.c:22360)
    Decl: name='Msp430Adc12ImplP__HplAdc12__stopConversion', quals=[], storage=['static', 'inline'] (at pp.c:22360)
      FuncDecl: quals=None (at pp.c:22360)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__stopConversion', quals=[] (at pp.c:22360)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22360)
      FuncCall:  (at None)
        ID: name='HplAdc12P__HplAdc12__stopConversion' (at pp.c:22362)
  FuncDef:  (at pp.c:22367)
    Decl: name='Msp430Adc12ImplP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:22367)
      FuncDecl: quals=None (at pp.c:22367)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Init__init', quals=[] (at pp.c:22367)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22368)
      Decl: name='ctl0', quals=[], storage=[] (at pp.c:22369)
        TypeDecl: declname='ctl0', quals=[] (at pp.c:22369)
          IdentifierType: names=['adc12ctl0_t'] (at None)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__HplAdc12__stopConversion' (at pp.c:22372)
      Assignment: op='=' (at pp.c:22373)
        ID: name='ctl0' (at pp.c:22373)
        FuncCall:  (at None)
          ID: name='Msp430Adc12ImplP__HplAdc12__getCtl0' (at pp.c:22373)
      Assignment: op='=' (at pp.c:22374)
        StructRef: type='.' (at pp.c:22374)
          ID: name='ctl0' (at pp.c:22374)
          ID: name='adc12tovie' (at pp.c:22374)
        Constant: type='int', value='1' (at pp.c:22374)
      Assignment: op='=' (at pp.c:22375)
        StructRef: type='.' (at pp.c:22375)
          ID: name='ctl0' (at pp.c:22375)
          ID: name='adc12ovie' (at pp.c:22375)
        Constant: type='int', value='1' (at pp.c:22375)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__HplAdc12__setCtl0' (at pp.c:22376)
        ExprList:  (at pp.c:22376)
          ID: name='ctl0' (at pp.c:22376)
      Return:  (at pp.c:22377)
        ID: name='SUCCESS' (at pp.c:22377)
  FuncDef:  (at pp.c:22381)
    Decl: name='RoundRobinResourceQueueC__0__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:22381)
      FuncDecl: quals=None (at pp.c:22381)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RoundRobinResourceQueueC__0__Init__init', quals=[] (at pp.c:22381)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22383)
      FuncCall:  (at None)
        ID: name='memset' (at pp.c:22384)
        ExprList:  (at pp.c:22384)
          ID: name='RoundRobinResourceQueueC__0__resQ' (at pp.c:22384)
          Constant: type='int', value='0' (at pp.c:22384)
          UnaryOp: op='sizeof' (at pp.c:22384)
            ID: name='RoundRobinResourceQueueC__0__resQ' (at pp.c:22384)
      Return:  (at pp.c:22385)
        ID: name='SUCCESS' (at pp.c:22385)
  FuncDef:  (at pp.c:22389)
    Decl: name='AdcStreamP__Init__init', quals=[], storage=['inline', 'static'] (at pp.c:22389)
      FuncDecl: quals=None (at pp.c:22389)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__Init__init', quals=[] (at pp.c:22389)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22391)
      Decl: name='i', quals=[], storage=[] (at pp.c:22392)
        TypeDecl: declname='i', quals=[] (at pp.c:22392)
          IdentifierType: names=['uint8_t'] (at None)
      For:  (at pp.c:22394)
        Assignment: op='=' (at pp.c:22394)
          ID: name='i' (at pp.c:22394)
          Constant: type='int', value='0' (at pp.c:22394)
        BinaryOp: op='!=' (at pp.c:22394)
          ID: name='i' (at pp.c:22394)
          ID: name='AdcStreamP__NSTREAM' (at pp.c:22394)
        UnaryOp: op='p++' (at pp.c:22394)
          ID: name='i' (at pp.c:22394)
        Assignment: op='=' (at pp.c:22395)
          ArrayRef:  (at pp.c:22395)
            ID: name='AdcStreamP__bufferQueueEnd' (at pp.c:22395)
            ID: name='i' (at pp.c:22395)
          UnaryOp: op='&' (at pp.c:22395)
            ArrayRef:  (at pp.c:22395)
              ID: name='AdcStreamP__bufferQueue' (at pp.c:22395)
              ID: name='i' (at pp.c:22395)
      Return:  (at pp.c:22397)
        ID: name='SUCCESS' (at pp.c:22397)
  FuncDef:  (at pp.c:22401)
    Decl: name='RealMainP__SoftwareInit__init', quals=[], storage=['static', 'inline'] (at pp.c:22401)
      FuncDecl: quals=None (at pp.c:22401)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__SoftwareInit__init', quals=[] (at pp.c:22401)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22401)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:22403)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:22403)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:22407)
        ID: name='__nesc_result' (at pp.c:22407)
        FuncCall:  (at None)
          ID: name='AdcStreamP__Init__init' (at pp.c:22407)
      Assignment: op='=' (at pp.c:22409)
        ID: name='__nesc_result' (at pp.c:22409)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:22409)
          ExprList:  (at pp.c:22409)
            ID: name='__nesc_result' (at pp.c:22409)
            FuncCall:  (at None)
              ID: name='RoundRobinResourceQueueC__0__Init__init' (at pp.c:22409)
      Assignment: op='=' (at pp.c:22411)
        ID: name='__nesc_result' (at pp.c:22411)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:22411)
          ExprList:  (at pp.c:22411)
            ID: name='__nesc_result' (at pp.c:22411)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Init__init' (at pp.c:22411)
      Assignment: op='=' (at pp.c:22413)
        ID: name='__nesc_result' (at pp.c:22413)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:22413)
          ExprList:  (at pp.c:22413)
            ID: name='__nesc_result' (at pp.c:22413)
            FuncCall:  (at None)
              ID: name='FcfsResourceQueueC__0__Init__init' (at pp.c:22413)
      Assignment: op='=' (at pp.c:22415)
        ID: name='__nesc_result' (at pp.c:22415)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:22415)
          ExprList:  (at pp.c:22415)
            ID: name='__nesc_result' (at pp.c:22415)
            FuncCall:  (at None)
              ID: name='UniqueReceiveP__Init__init' (at pp.c:22415)
      Assignment: op='=' (at pp.c:22417)
        ID: name='__nesc_result' (at pp.c:22417)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:22417)
          ExprList:  (at pp.c:22417)
            ID: name='__nesc_result' (at pp.c:22417)
            FuncCall:  (at None)
              ID: name='UniqueSendP__Init__init' (at pp.c:22417)
      Assignment: op='=' (at pp.c:22419)
        ID: name='__nesc_result' (at pp.c:22419)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:22419)
          ExprList:  (at pp.c:22419)
            ID: name='__nesc_result' (at pp.c:22419)
            FuncCall:  (at None)
              ID: name='RandomMlcgC__Init__init' (at pp.c:22419)
      Assignment: op='=' (at pp.c:22421)
        ID: name='__nesc_result' (at pp.c:22421)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:22421)
          ExprList:  (at pp.c:22421)
            ID: name='__nesc_result' (at pp.c:22421)
            FuncCall:  (at None)
              ID: name='Msp430AlarmC__1__Init__init' (at pp.c:22421)
      Assignment: op='=' (at pp.c:22423)
        ID: name='__nesc_result' (at pp.c:22423)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:22423)
          ExprList:  (at pp.c:22423)
            ID: name='__nesc_result' (at pp.c:22423)
            FuncCall:  (at None)
              ID: name='CC2420ReceiveP__Init__init' (at pp.c:22423)
      Assignment: op='=' (at pp.c:22425)
        ID: name='__nesc_result' (at pp.c:22425)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:22425)
          ExprList:  (at pp.c:22425)
            ID: name='__nesc_result' (at pp.c:22425)
            FuncCall:  (at None)
              ID: name='CC2420TransmitP__Init__init' (at pp.c:22425)
      Assignment: op='=' (at pp.c:22427)
        ID: name='__nesc_result' (at pp.c:22427)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:22427)
          ExprList:  (at pp.c:22427)
            ID: name='__nesc_result' (at pp.c:22427)
            FuncCall:  (at None)
              ID: name='Msp430AlarmC__0__Init__init' (at pp.c:22427)
      Assignment: op='=' (at pp.c:22429)
        ID: name='__nesc_result' (at pp.c:22429)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:22429)
          ExprList:  (at pp.c:22429)
            ID: name='__nesc_result' (at pp.c:22429)
            FuncCall:  (at None)
              ID: name='FcfsResourceQueueC__1__Init__init' (at pp.c:22429)
      Assignment: op='=' (at pp.c:22431)
        ID: name='__nesc_result' (at pp.c:22431)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:22431)
          ExprList:  (at pp.c:22431)
            ID: name='__nesc_result' (at pp.c:22431)
            FuncCall:  (at None)
              ID: name='StateImplP__Init__init' (at pp.c:22431)
      Assignment: op='=' (at pp.c:22433)
        ID: name='__nesc_result' (at pp.c:22433)
        FuncCall:  (at None)
          ID: name='ecombine' (at pp.c:22433)
          ExprList:  (at pp.c:22433)
            ID: name='__nesc_result' (at pp.c:22433)
            FuncCall:  (at None)
              ID: name='CC2420ControlP__Init__init' (at pp.c:22433)
      Return:  (at pp.c:22437)
        ID: name='__nesc_result' (at pp.c:22437)
  FuncDef:  (at pp.c:22442)
    Decl: name='CC2420ControlP__StartupTimer__start', quals=[], storage=['static', 'inline'] (at pp.c:22442)
      FuncDecl: quals=None (at pp.c:22442)
        ParamList:  (at pp.c:22442)
          Decl: name='dt', quals=[], storage=[] (at pp.c:22442)
            TypeDecl: declname='dt', quals=[] (at pp.c:22442)
              IdentifierType: names=['CC2420ControlP__StartupTimer__size_type'] (at None)
        TypeDecl: declname='CC2420ControlP__StartupTimer__start', quals=[] (at pp.c:22442)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22442)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__Alarm__start' (at pp.c:22444)
        ExprList:  (at pp.c:22444)
          ID: name='dt' (at pp.c:22444)
  FuncDef:  (at pp.c:22449)
    Decl: name='HplMsp430GeneralIOP__29__IO__set', quals=[], storage=['inline', 'static'] (at pp.c:22449)
      FuncDecl: quals=None (at pp.c:22449)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__29__IO__set', quals=[] (at pp.c:22449)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22451)
      Compound:  (at pp.c:22453)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:22453)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:22453)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:22453)
        Assignment: op='|=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:22455)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:22455)
          BinaryOp: op='<<' (at pp.c:22455)
            Constant: type='int', value='0x01' (at pp.c:22455)
            Constant: type='int', value='5' (at pp.c:22455)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:22457)
          ExprList:  (at pp.c:22457)
            ID: name='__nesc_atomic' (at pp.c:22457)
  FuncDef:  (at pp.c:22461)
    Decl: name='Msp430GpioC__6__HplGeneralIO__set', quals=[], storage=['static', 'inline'] (at pp.c:22461)
      FuncDecl: quals=None (at pp.c:22461)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__6__HplGeneralIO__set', quals=[] (at pp.c:22461)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22461)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__29__IO__set' (at pp.c:22463)
  FuncDef:  (at pp.c:22468)
    Decl: name='Msp430GpioC__6__GeneralIO__set', quals=[], storage=['inline', 'static'] (at pp.c:22468)
      FuncDecl: quals=None (at pp.c:22468)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430GpioC__6__GeneralIO__set', quals=[] (at pp.c:22468)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22470)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__6__HplGeneralIO__set' (at pp.c:22472)
  FuncDef:  (at pp.c:22476)
    Decl: name='CC2420ControlP__VREN__set', quals=[], storage=['static', 'inline'] (at pp.c:22476)
      FuncDecl: quals=None (at pp.c:22476)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__VREN__set', quals=[] (at pp.c:22476)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22476)
      FuncCall:  (at None)
        ID: name='Msp430GpioC__6__GeneralIO__set' (at pp.c:22478)
  FuncDef:  (at pp.c:22483)
    Decl: name='CC2420ControlP__CC2420Power__startVReg', quals=[], storage=['inline', 'static'] (at pp.c:22483)
      FuncDecl: quals=None (at pp.c:22483)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Power__startVReg', quals=[] (at pp.c:22483)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22485)
      Compound:  (at pp.c:22486)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:22486)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:22486)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:22486)
        Compound:  (at pp.c:22488)
          If:  (at pp.c:22489)
            BinaryOp: op='!=' (at pp.c:22489)
              ID: name='CC2420ControlP__m_state' (at pp.c:22489)
              ID: name='CC2420ControlP__S_VREG_STOPPED' (at pp.c:22489)
            Compound:  (at pp.c:22489)
              Compound:  (at pp.c:22490)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:22491)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:22491)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='FAIL' (at pp.c:22493)
                Compound:  (at pp.c:22495)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:22497)
                    ExprList:  (at pp.c:22497)
                      ID: name='__nesc_atomic' (at pp.c:22497)
                  Return:  (at pp.c:22499)
                    ID: name='__nesc_temp' (at pp.c:22499)
          Assignment: op='=' (at pp.c:22504)
            ID: name='CC2420ControlP__m_state' (at pp.c:22504)
            ID: name='CC2420ControlP__S_VREG_STARTING' (at pp.c:22504)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:22507)
          ExprList:  (at pp.c:22507)
            ID: name='__nesc_atomic' (at pp.c:22507)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__VREN__set' (at pp.c:22508)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__StartupTimer__start' (at pp.c:22509)
        ExprList:  (at pp.c:22509)
          ID: name='CC2420_TIME_VREN' (at pp.c:22509)
      Return:  (at pp.c:22510)
        ID: name='SUCCESS' (at pp.c:22510)
  FuncDef:  (at pp.c:22514)
    Decl: name='CC2420CsmaP__CC2420Power__startVReg', quals=[], storage=['static', 'inline'] (at pp.c:22514)
      FuncDecl: quals=None (at pp.c:22514)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__CC2420Power__startVReg', quals=[] (at pp.c:22514)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22514)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:22516)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:22516)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:22520)
        ID: name='__nesc_result' (at pp.c:22520)
        FuncCall:  (at None)
          ID: name='CC2420ControlP__CC2420Power__startVReg' (at pp.c:22520)
      Return:  (at pp.c:22524)
        ID: name='__nesc_result' (at pp.c:22524)
  FuncDef:  (at pp.c:22529)
    Decl: name='CC2420CsmaP__SplitControlState__requestState', quals=[], storage=['static', 'inline'] (at pp.c:22529)
      FuncDecl: quals=None (at pp.c:22529)
        ParamList:  (at pp.c:22529)
          Decl: name='reqState', quals=[], storage=[] (at pp.c:22529)
            TypeDecl: declname='reqState', quals=[] (at pp.c:22529)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420CsmaP__SplitControlState__requestState', quals=[] (at pp.c:22529)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22529)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:22531)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:22531)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:22535)
        ID: name='__nesc_result' (at pp.c:22535)
        FuncCall:  (at None)
          ID: name='StateImplP__State__requestState' (at pp.c:22535)
          ExprList:  (at pp.c:22535)
            Constant: type='int', value='1U' (at pp.c:22535)
            ID: name='reqState' (at pp.c:22535)
      Return:  (at pp.c:22539)
        ID: name='__nesc_result' (at pp.c:22539)
  FuncDef:  (at pp.c:22544)
    Decl: name='CC2420CsmaP__SplitControl__start', quals=[], storage=['inline', 'static'] (at pp.c:22544)
      FuncDecl: quals=None (at pp.c:22544)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__SplitControl__start', quals=[] (at pp.c:22544)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22546)
      If:  (at pp.c:22547)
        BinaryOp: op='==' (at None)
          FuncCall:  (at None)
            ID: name='CC2420CsmaP__SplitControlState__requestState' (at pp.c:22547)
            ExprList:  (at pp.c:22547)
              ID: name='CC2420CsmaP__S_STARTING' (at pp.c:22547)
          ID: name='SUCCESS' (at pp.c:22547)
        Compound:  (at pp.c:22547)
          FuncCall:  (at None)
            ID: name='CC2420CsmaP__CC2420Power__startVReg' (at pp.c:22548)
          Return:  (at pp.c:22549)
            ID: name='SUCCESS' (at pp.c:22549)
        Compound:  (at pp.c:22551)
          If:  (at pp.c:22553)
            FuncCall:  (at None)
              ID: name='CC2420CsmaP__SplitControlState__isState' (at pp.c:22553)
              ExprList:  (at pp.c:22553)
                ID: name='CC2420CsmaP__S_STARTED' (at pp.c:22553)
            Compound:  (at pp.c:22553)
              Return:  (at pp.c:22554)
                ID: name='EALREADY' (at pp.c:22554)
            Compound:  (at pp.c:22556)
              If:  (at pp.c:22558)
                FuncCall:  (at None)
                  ID: name='CC2420CsmaP__SplitControlState__isState' (at pp.c:22558)
                  ExprList:  (at pp.c:22558)
                    ID: name='CC2420CsmaP__S_STARTING' (at pp.c:22558)
                Compound:  (at pp.c:22558)
                  Return:  (at pp.c:22559)
                    ID: name='SUCCESS' (at pp.c:22559)
      Return:  (at pp.c:22564)
        ID: name='EBUSY' (at pp.c:22564)
  FuncDef:  (at pp.c:22568)
    Decl: name='OscilloscopeC__RadioControl__start', quals=[], storage=['static', 'inline'] (at pp.c:22568)
      FuncDecl: quals=None (at pp.c:22568)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OscilloscopeC__RadioControl__start', quals=[] (at pp.c:22568)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22568)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:22570)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:22570)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:22574)
        ID: name='__nesc_result' (at pp.c:22574)
        FuncCall:  (at None)
          ID: name='CC2420CsmaP__SplitControl__start' (at pp.c:22574)
      Return:  (at pp.c:22578)
        ID: name='__nesc_result' (at pp.c:22578)
  FuncDef:  (at pp.c:22583)
    Decl: name='OscilloscopeC__Boot__booted', quals=[], storage=['inline', 'static'] (at pp.c:22583)
      FuncDecl: quals=None (at pp.c:22583)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='OscilloscopeC__Boot__booted', quals=[] (at pp.c:22583)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22585)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint16' (at pp.c:22586)
        ExprList:  (at pp.c:22586)
          StructRef: type='.' (at pp.c:22586)
            StructRef: type='.' (at pp.c:22586)
              ID: name='OscilloscopeC__local' (at pp.c:22586)
              ID: name='interval' (at pp.c:22586)
            ID: name='nxdata' (at pp.c:22586)
          ID: name='DEFAULT_INTERVAL' (at pp.c:22586)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint16' (at pp.c:22587)
        ExprList:  (at pp.c:22587)
          StructRef: type='.' (at pp.c:22587)
            StructRef: type='.' (at pp.c:22587)
              ID: name='OscilloscopeC__local' (at pp.c:22587)
              ID: name='id' (at pp.c:22587)
            ID: name='nxdata' (at pp.c:22587)
          ID: name='TOS_NODE_ID' (at pp.c:22587)
      If:  (at pp.c:22588)
        BinaryOp: op='!=' (at None)
          FuncCall:  (at None)
            ID: name='OscilloscopeC__RadioControl__start' (at pp.c:22588)
          ID: name='SUCCESS' (at pp.c:22588)
        Compound:  (at pp.c:22588)
          FuncCall:  (at None)
            ID: name='OscilloscopeC__report_problem' (at pp.c:22589)
  FuncDef:  (at pp.c:22594)
    Decl: name='RealMainP__Boot__booted', quals=[], storage=['static', 'inline'] (at pp.c:22594)
      FuncDecl: quals=None (at pp.c:22594)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__Boot__booted', quals=[] (at pp.c:22594)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22594)
      FuncCall:  (at None)
        ID: name='OscilloscopeC__Boot__booted' (at pp.c:22596)
  FuncDef:  (at pp.c:22601)
    Decl: name='__nesc_disable_interrupt', quals=[], storage=['inline', 'static'] (at pp.c:22601)
      FuncDecl: quals=None (at pp.c:22601)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_disable_interrupt', quals=[] (at pp.c:22601)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22602)
      Assignment: op='&=' (at pp.c:22603)
        ID: name='_R2' (at pp.c:22603)
        Constant: type='int', value='0xfff7' (at pp.c:22603)
  FuncDef:  (at pp.c:22607)
    Decl: name='Msp430ClockP__McuPowerOverride__lowestState', quals=[], storage=['inline', 'static'] (at pp.c:22607)
      FuncDecl: quals=None (at pp.c:22607)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430ClockP__McuPowerOverride__lowestState', quals=[] (at pp.c:22607)
          IdentifierType: names=['mcu_power_t'] (at None)
    Compound:  (at pp.c:22609)
      Return:  (at pp.c:22610)
        ID: name='MSP430_POWER_LPM3' (at pp.c:22610)
  FuncDef:  (at pp.c:22614)
    Decl: name='McuSleepC__McuPowerOverride__lowestState', quals=[], storage=['static', 'inline'] (at pp.c:22614)
      FuncDecl: quals=None (at pp.c:22614)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='McuSleepC__McuPowerOverride__lowestState', quals=[] (at pp.c:22614)
          IdentifierType: names=['mcu_power_t'] (at None)
    Compound:  (at pp.c:22614)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:22616)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:22616)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:22620)
        ID: name='__nesc_result' (at pp.c:22620)
        FuncCall:  (at None)
          ID: name='Msp430ClockP__McuPowerOverride__lowestState' (at pp.c:22620)
      Return:  (at pp.c:22624)
        ID: name='__nesc_result' (at pp.c:22624)
  FuncDef:  (at pp.c:22629)
    Decl: name='McuSleepC__getPowerState', quals=[], storage=['inline', 'static'] (at pp.c:22629)
      FuncDecl: quals=None (at pp.c:22629)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='McuSleepC__getPowerState', quals=[] (at pp.c:22629)
          IdentifierType: names=['mcu_power_t'] (at None)
    Compound:  (at pp.c:22631)
      Decl: name='pState', quals=[], storage=[] (at pp.c:22632)
        TypeDecl: declname='pState', quals=[] (at pp.c:22632)
          IdentifierType: names=['mcu_power_t'] (at None)
        ID: name='MSP430_POWER_LPM4' (at pp.c:22632)
      If:  (at pp.c:22642)
        BinaryOp: op='||' (at pp.c:22644)
          BinaryOp: op='||' (at pp.c:22644)
            BinaryOp: op='||' (at pp.c:22644)
              BinaryOp: op='&&' (at pp.c:22644)
                BinaryOp: op='||' (at pp.c:22644)
                  BinaryOp: op='||' (at pp.c:22644)
                    BinaryOp: op='&' (at pp.c:22644)
                      ID: name='TA0CCTL0' (at pp.c:22644)
                      Constant: type='int', value='0x0010' (at pp.c:22644)
                    BinaryOp: op='&' (at pp.c:22645)
                      ID: name='TA0CCTL1' (at pp.c:22645)
                      Constant: type='int', value='0x0010' (at pp.c:22645)
                  BinaryOp: op='&' (at pp.c:22646)
                    ID: name='TA0CCTL2' (at pp.c:22646)
                    Constant: type='int', value='0x0010' (at pp.c:22646)
                BinaryOp: op='==' (at pp.c:22647)
                  BinaryOp: op='&' (at pp.c:22647)
                    ID: name='TA0CTL' (at pp.c:22647)
                    BinaryOp: op='<<' (at pp.c:22647)
                      Constant: type='int', value='3' (at pp.c:22647)
                      Constant: type='int', value='8' (at pp.c:22647)
                  BinaryOp: op='<<' (at pp.c:22647)
                    Constant: type='int', value='2' (at pp.c:22647)
                    Constant: type='int', value='8' (at pp.c:22647)
              BinaryOp: op='&&' (at pp.c:22648)
                BinaryOp: op='&' (at pp.c:22648)
                  ID: name='ME1' (at pp.c:22648)
                  BinaryOp: op='|' (at pp.c:22648)
                    BinaryOp: op='<<' (at pp.c:22648)
                      Constant: type='int', value='1' (at pp.c:22648)
                      Constant: type='int', value='7' (at pp.c:22648)
                    BinaryOp: op='<<' (at pp.c:22648)
                      Constant: type='int', value='1' (at pp.c:22648)
                      Constant: type='int', value='6' (at pp.c:22648)
                BinaryOp: op='&' (at pp.c:22648)
                  ID: name='U0TCTL' (at pp.c:22648)
                  Constant: type='int', value='0x20' (at pp.c:22648)
            BinaryOp: op='&&' (at pp.c:22649)
              BinaryOp: op='&' (at pp.c:22649)
                ID: name='ME2' (at pp.c:22649)
                BinaryOp: op='|' (at pp.c:22649)
                  BinaryOp: op='<<' (at pp.c:22649)
                    Constant: type='int', value='1' (at pp.c:22649)
                    Constant: type='int', value='5' (at pp.c:22649)
                  BinaryOp: op='<<' (at pp.c:22649)
                    Constant: type='int', value='1' (at pp.c:22649)
                    Constant: type='int', value='4' (at pp.c:22649)
              BinaryOp: op='&' (at pp.c:22649)
                ID: name='U1TCTL' (at pp.c:22649)
                Constant: type='int', value='0x20' (at pp.c:22649)
          BinaryOp: op='&&' (at pp.c:22652)
            BinaryOp: op='&&' (at pp.c:22652)
              BinaryOp: op='&&' (at pp.c:22652)
                BinaryOp: op='&&' (at pp.c:22652)
                  BinaryOp: op='&' (at pp.c:22652)
                    ID: name='U0CTLnr' (at pp.c:22652)
                    Constant: type='int', value='0x01' (at pp.c:22652)
                  BinaryOp: op='&' (at pp.c:22652)
                    ID: name='I2CTCTLnr' (at pp.c:22652)
                    Constant: type='int', value='0x20' (at pp.c:22652)
                BinaryOp: op='&' (at pp.c:22653)
                  ID: name='I2CDCTLnr' (at pp.c:22653)
                  Constant: type='int', value='0x20' (at pp.c:22653)
              BinaryOp: op='&' (at pp.c:22653)
                ID: name='U0CTLnr' (at pp.c:22653)
                Constant: type='int', value='0x04' (at pp.c:22653)
            BinaryOp: op='&' (at pp.c:22653)
              ID: name='U0CTLnr' (at pp.c:22653)
              Constant: type='int', value='0x20' (at pp.c:22653)
        Compound:  (at pp.c:22653)
          Assignment: op='=' (at pp.c:22656)
            ID: name='pState' (at pp.c:22656)
            ID: name='MSP430_POWER_LPM1' (at pp.c:22656)
      If:  (at pp.c:22660)
        BinaryOp: op='&' (at pp.c:22660)
          ID: name='ADC12CTL0' (at pp.c:22660)
          Constant: type='int', value='0x0010' (at pp.c:22660)
        Compound:  (at pp.c:22660)
          If:  (at pp.c:22661)
            BinaryOp: op='&' (at pp.c:22661)
              ID: name='ADC12CTL1' (at pp.c:22661)
              BinaryOp: op='<<' (at pp.c:22661)
                Constant: type='int', value='2' (at pp.c:22661)
                Constant: type='int', value='3' (at pp.c:22661)
            Compound:  (at pp.c:22661)
              If:  (at pp.c:22663)
                BinaryOp: op='&' (at pp.c:22663)
                  ID: name='ADC12CTL1' (at pp.c:22663)
                  BinaryOp: op='<<' (at pp.c:22663)
                    Constant: type='int', value='1' (at pp.c:22663)
                    Constant: type='int', value='3' (at pp.c:22663)
                Compound:  (at pp.c:22663)
                  Assignment: op='=' (at pp.c:22664)
                    ID: name='pState' (at pp.c:22664)
                    ID: name='MSP430_POWER_LPM1' (at pp.c:22664)
                Compound:  (at pp.c:22666)
                  Assignment: op='=' (at pp.c:22668)
                    ID: name='pState' (at pp.c:22668)
                    ID: name='MSP430_POWER_ACTIVE' (at pp.c:22668)
            Compound:  (at pp.c:22671)
              If:  (at pp.c:22673)
                BinaryOp: op='&&' (at pp.c:22673)
                  BinaryOp: op='&' (at pp.c:22673)
                    ID: name='ADC12CTL1' (at pp.c:22673)
                    Constant: type='int', value='0x0400' (at pp.c:22673)
                  BinaryOp: op='==' (at pp.c:22673)
                    BinaryOp: op='&' (at pp.c:22673)
                      ID: name='TA0CTL' (at pp.c:22673)
                      BinaryOp: op='<<' (at pp.c:22673)
                        Constant: type='int', value='3' (at pp.c:22673)
                        Constant: type='int', value='8' (at pp.c:22673)
                    BinaryOp: op='<<' (at pp.c:22673)
                      Constant: type='int', value='2' (at pp.c:22673)
                      Constant: type='int', value='8' (at pp.c:22673)
                Compound:  (at pp.c:22673)
                  Assignment: op='=' (at pp.c:22677)
                    ID: name='pState' (at pp.c:22677)
                    ID: name='MSP430_POWER_LPM1' (at pp.c:22677)
      Return:  (at pp.c:22682)
        ID: name='pState' (at pp.c:22682)
  FuncDef:  (at pp.c:22686)
    Decl: name='mcombine', quals=[], storage=['inline', 'static'] (at pp.c:22686)
      FuncDecl: quals=None (at pp.c:22686)
        ParamList:  (at pp.c:22686)
          Decl: name='m1', quals=[], storage=[] (at pp.c:22686)
            TypeDecl: declname='m1', quals=[] (at pp.c:22686)
              IdentifierType: names=['mcu_power_t'] (at None)
          Decl: name='m2', quals=[], storage=[] (at pp.c:22686)
            TypeDecl: declname='m2', quals=[] (at pp.c:22686)
              IdentifierType: names=['mcu_power_t'] (at None)
        TypeDecl: declname='mcombine', quals=[] (at pp.c:22686)
          IdentifierType: names=['mcu_power_t'] (at None)
    Compound:  (at pp.c:22688)
      Return:  (at pp.c:22689)
        TernaryOp:  (at pp.c:22689)
          BinaryOp: op='<' (at pp.c:22689)
            ID: name='m1' (at pp.c:22689)
            ID: name='m2' (at pp.c:22689)
          ID: name='m1' (at pp.c:22689)
          ID: name='m2' (at pp.c:22689)
  FuncDef:  (at pp.c:22693)
    Decl: name='McuSleepC__computePowerState', quals=[], storage=['inline', 'static'] (at pp.c:22693)
      FuncDecl: quals=None (at pp.c:22693)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='McuSleepC__computePowerState', quals=[] (at pp.c:22693)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22695)
      Assignment: op='=' (at pp.c:22696)
        ID: name='McuSleepC__powerState' (at pp.c:22696)
        FuncCall:  (at None)
          ID: name='mcombine' (at pp.c:22696)
          ExprList:  (at None)
            FuncCall:  (at None)
              ID: name='McuSleepC__getPowerState' (at pp.c:22696)
            FuncCall:  (at None)
              ID: name='McuSleepC__McuPowerOverride__lowestState' (at pp.c:22697)
  FuncDef:  (at pp.c:22700)
    Decl: name='McuSleepC__McuSleep__sleep', quals=[], storage=['inline', 'static'] (at pp.c:22700)
      FuncDecl: quals=None (at pp.c:22700)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='McuSleepC__McuSleep__sleep', quals=[] (at pp.c:22700)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22702)
      Decl: name='temp', quals=[], storage=[] (at pp.c:22703)
        TypeDecl: declname='temp', quals=[] (at pp.c:22703)
          IdentifierType: names=['uint16_t'] (at None)
      If:  (at pp.c:22706)
        ID: name='McuSleepC__dirty' (at pp.c:22706)
        Compound:  (at pp.c:22706)
          FuncCall:  (at None)
            ID: name='McuSleepC__computePowerState' (at pp.c:22707)
      Assignment: op='=' (at pp.c:22710)
        ID: name='temp' (at pp.c:22710)
        BinaryOp: op='|' (at pp.c:22710)
          ArrayRef:  (at pp.c:22710)
            ID: name='McuSleepC__msp430PowerBits' (at pp.c:22710)
            ID: name='McuSleepC__powerState' (at pp.c:22710)
          Constant: type='int', value='0x0008' (at pp.c:22710)
      Assignment: op='|=' (at pp.c:22711)
        ID: name='_R2' (at pp.c:22711)
        ID: name='temp' (at pp.c:22711)
      FuncCall:  (at None)
        ID: name='__nesc_disable_interrupt' (at pp.c:22714)
  FuncDef:  (at pp.c:22718)
    Decl: name='SchedulerBasicP__McuSleep__sleep', quals=[], storage=['static', 'inline'] (at pp.c:22718)
      FuncDecl: quals=None (at pp.c:22718)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SchedulerBasicP__McuSleep__sleep', quals=[] (at pp.c:22718)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22718)
      FuncCall:  (at None)
        ID: name='McuSleepC__McuSleep__sleep' (at pp.c:22720)
  FuncDef:  (at pp.c:22725)
    Decl: name='SchedulerBasicP__popTask', quals=[], storage=['__inline', 'static'] (at pp.c:22725)
      FuncDecl: quals=None (at pp.c:22725)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SchedulerBasicP__popTask', quals=[] (at pp.c:22725)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:22726)
      If:  (at pp.c:22727)
        BinaryOp: op='!=' (at pp.c:22727)
          ID: name='SchedulerBasicP__m_head' (at pp.c:22727)
          ID: name='SchedulerBasicP__NO_TASK' (at pp.c:22727)
        Compound:  (at pp.c:22728)
          Decl: name='id', quals=[], storage=[] (at pp.c:22729)
            TypeDecl: declname='id', quals=[] (at pp.c:22729)
              IdentifierType: names=['uint8_t'] (at None)
            ID: name='SchedulerBasicP__m_head' (at pp.c:22729)
          Assignment: op='=' (at pp.c:22732)
            ID: name='SchedulerBasicP__m_head' (at pp.c:22732)
            ArrayRef:  (at pp.c:22732)
              ID: name='SchedulerBasicP__m_next' (at pp.c:22732)
              ID: name='SchedulerBasicP__m_head' (at pp.c:22732)
          If:  (at pp.c:22733)
            BinaryOp: op='==' (at pp.c:22733)
              ID: name='SchedulerBasicP__m_head' (at pp.c:22733)
              ID: name='SchedulerBasicP__NO_TASK' (at pp.c:22733)
            Compound:  (at pp.c:22734)
              Assignment: op='=' (at pp.c:22735)
                ID: name='SchedulerBasicP__m_tail' (at pp.c:22735)
                ID: name='SchedulerBasicP__NO_TASK' (at pp.c:22735)
          Assignment: op='=' (at pp.c:22737)
            ArrayRef:  (at pp.c:22737)
              ID: name='SchedulerBasicP__m_next' (at pp.c:22737)
              ID: name='id' (at pp.c:22737)
            ID: name='SchedulerBasicP__NO_TASK' (at pp.c:22737)
          Return:  (at pp.c:22738)
            ID: name='id' (at pp.c:22738)
        Compound:  (at pp.c:22741)
          Return:  (at pp.c:22742)
            ID: name='SchedulerBasicP__NO_TASK' (at pp.c:22742)
  FuncDef:  (at pp.c:22747)
    Decl: name='SchedulerBasicP__Scheduler__taskLoop', quals=[], storage=['inline', 'static'] (at pp.c:22747)
      FuncDecl: quals=None (at pp.c:22747)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SchedulerBasicP__Scheduler__taskLoop', quals=[] (at pp.c:22747)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22748)
      For:  (at pp.c:22749)
        Compound:  (at pp.c:22750)
          Decl: name='nextTask', quals=[], storage=[] (at pp.c:22751)
            TypeDecl: declname='nextTask', quals=[] (at pp.c:22751)
              IdentifierType: names=['uint8_t'] (at None)
          Compound:  (at pp.c:22753)
            Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:22753)
              TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:22753)
                IdentifierType: names=['__nesc_atomic_t'] (at None)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_start' (at pp.c:22753)
            Compound:  (at pp.c:22754)
              While:  (at pp.c:22755)
                BinaryOp: op='==' (at pp.c:22755)
                  Assignment: op='=' (at pp.c:22755)
                    ID: name='nextTask' (at pp.c:22755)
                    FuncCall:  (at None)
                      ID: name='SchedulerBasicP__popTask' (at pp.c:22755)
                  ID: name='SchedulerBasicP__NO_TASK' (at pp.c:22755)
                Compound:  (at pp.c:22756)
                  FuncCall:  (at None)
                    ID: name='SchedulerBasicP__McuSleep__sleep' (at pp.c:22757)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:22761)
              ExprList:  (at pp.c:22761)
                ID: name='__nesc_atomic' (at pp.c:22761)
          FuncCall:  (at None)
            ID: name='SchedulerBasicP__TaskBasic__runTask' (at pp.c:22762)
            ExprList:  (at pp.c:22762)
              ID: name='nextTask' (at pp.c:22762)
  FuncDef:  (at pp.c:22767)
    Decl: name='RealMainP__Scheduler__taskLoop', quals=[], storage=['static', 'inline'] (at pp.c:22767)
      FuncDecl: quals=None (at pp.c:22767)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RealMainP__Scheduler__taskLoop', quals=[] (at pp.c:22767)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22767)
      FuncCall:  (at None)
        ID: name='SchedulerBasicP__Scheduler__taskLoop' (at pp.c:22769)
  FuncDef:  (at pp.c:22774)
    Decl: name='CC2420ReceiveP__InterruptFIFOP__fired', quals=[], storage=['inline', 'static'] (at pp.c:22774)
      FuncDecl: quals=None (at pp.c:22774)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__InterruptFIFOP__fired', quals=[] (at pp.c:22774)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22776)
      If:  (at pp.c:22777)
        BinaryOp: op='==' (at pp.c:22777)
          ID: name='CC2420ReceiveP__m_state' (at pp.c:22777)
          ID: name='CC2420ReceiveP__S_STARTED' (at pp.c:22777)
        Compound:  (at pp.c:22777)
          Assignment: op='=' (at pp.c:22779)
            ID: name='CC2420ReceiveP__m_state' (at pp.c:22779)
            ID: name='CC2420ReceiveP__S_RX_LENGTH' (at pp.c:22779)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__beginReceive' (at pp.c:22780)
        Compound:  (at pp.c:22786)
          UnaryOp: op='p++' (at pp.c:22787)
            ID: name='CC2420ReceiveP__m_missed_packets' (at pp.c:22787)
  FuncDef:  (at pp.c:22792)
    Decl: name='Msp430InterruptC__1__Interrupt__fired', quals=[], storage=['static', 'inline'] (at pp.c:22792)
      FuncDecl: quals=None (at pp.c:22792)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__1__Interrupt__fired', quals=[] (at pp.c:22792)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22792)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__InterruptFIFOP__fired' (at pp.c:22794)
  FuncDef:  (at pp.c:22799)
    Decl: name='Msp430InterruptC__1__HplInterrupt__fired', quals=[], storage=['inline', 'static'] (at pp.c:22799)
      FuncDecl: quals=None (at pp.c:22799)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__1__HplInterrupt__fired', quals=[] (at pp.c:22799)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22801)
      FuncCall:  (at None)
        ID: name='Msp430InterruptC__1__HplInterrupt__clear' (at pp.c:22802)
      FuncCall:  (at None)
        ID: name='Msp430InterruptC__1__Interrupt__fired' (at pp.c:22803)
  FuncDef:  (at pp.c:22807)
    Decl: name='HplMsp430InterruptP__Port10__fired', quals=[], storage=['static', 'inline'] (at pp.c:22807)
      FuncDecl: quals=None (at pp.c:22807)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port10__fired', quals=[] (at pp.c:22807)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22807)
      FuncCall:  (at None)
        ID: name='Msp430InterruptC__1__HplInterrupt__fired' (at pp.c:22809)
  FuncDef:  (at pp.c:22814)
    Decl: name='HplMsp430InterruptP__Port11__clear', quals=[], storage=['inline', 'static'] (at pp.c:22814)
      FuncDecl: quals=None (at pp.c:22814)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port11__clear', quals=[] (at pp.c:22814)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22816)
      Assignment: op='&=' (at pp.c:22818)
        ID: name='P1IFG' (at pp.c:22818)
        UnaryOp: op='~' (at pp.c:22818)
          BinaryOp: op='<<' (at pp.c:22818)
            Constant: type='int', value='1' (at pp.c:22818)
            Constant: type='int', value='1' (at pp.c:22818)
  FuncDef:  (at pp.c:22822)
    Decl: name='HplMsp430InterruptP__Port11__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:22822)
      FuncDecl: quals=None (at pp.c:22822)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port11__default__fired', quals=[] (at pp.c:22822)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22824)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port11__clear' (at pp.c:22826)
  FuncDef:  (at pp.c:22830)
    Decl: name='HplMsp430InterruptP__Port11__fired', quals=[], storage=['static', 'inline'] (at pp.c:22830)
      FuncDecl: quals=None (at pp.c:22830)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port11__fired', quals=[] (at pp.c:22830)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22830)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port11__default__fired' (at pp.c:22832)
  FuncDef:  (at pp.c:22837)
    Decl: name='HplMsp430InterruptP__Port12__clear', quals=[], storage=['inline', 'static'] (at pp.c:22837)
      FuncDecl: quals=None (at pp.c:22837)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port12__clear', quals=[] (at pp.c:22837)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22839)
      Assignment: op='&=' (at pp.c:22841)
        ID: name='P1IFG' (at pp.c:22841)
        UnaryOp: op='~' (at pp.c:22841)
          BinaryOp: op='<<' (at pp.c:22841)
            Constant: type='int', value='1' (at pp.c:22841)
            Constant: type='int', value='2' (at pp.c:22841)
  FuncDef:  (at pp.c:22845)
    Decl: name='HplMsp430InterruptP__Port12__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:22845)
      FuncDecl: quals=None (at pp.c:22845)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port12__default__fired', quals=[] (at pp.c:22845)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22847)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port12__clear' (at pp.c:22849)
  FuncDef:  (at pp.c:22853)
    Decl: name='HplMsp430InterruptP__Port12__fired', quals=[], storage=['static', 'inline'] (at pp.c:22853)
      FuncDecl: quals=None (at pp.c:22853)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port12__fired', quals=[] (at pp.c:22853)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22853)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port12__default__fired' (at pp.c:22855)
  FuncDef:  (at pp.c:22860)
    Decl: name='HplMsp430InterruptP__Port13__clear', quals=[], storage=['inline', 'static'] (at pp.c:22860)
      FuncDecl: quals=None (at pp.c:22860)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port13__clear', quals=[] (at pp.c:22860)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22862)
      Assignment: op='&=' (at pp.c:22864)
        ID: name='P1IFG' (at pp.c:22864)
        UnaryOp: op='~' (at pp.c:22864)
          BinaryOp: op='<<' (at pp.c:22864)
            Constant: type='int', value='1' (at pp.c:22864)
            Constant: type='int', value='3' (at pp.c:22864)
  FuncDef:  (at pp.c:22868)
    Decl: name='HplMsp430InterruptP__Port13__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:22868)
      FuncDecl: quals=None (at pp.c:22868)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port13__default__fired', quals=[] (at pp.c:22868)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22870)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port13__clear' (at pp.c:22872)
  FuncDef:  (at pp.c:22876)
    Decl: name='HplMsp430InterruptP__Port13__fired', quals=[], storage=['static', 'inline'] (at pp.c:22876)
      FuncDecl: quals=None (at pp.c:22876)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port13__fired', quals=[] (at pp.c:22876)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22876)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port13__default__fired' (at pp.c:22878)
  FuncDef:  (at pp.c:22883)
    Decl: name='CC2420CsmaP__startDone_task__postTask', quals=[], storage=['static', 'inline'] (at pp.c:22883)
      FuncDecl: quals=None (at pp.c:22883)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__startDone_task__postTask', quals=[] (at pp.c:22883)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22883)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:22885)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:22885)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:22889)
        ID: name='__nesc_result' (at pp.c:22889)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:22889)
          ExprList:  (at pp.c:22889)
            ID: name='CC2420CsmaP__startDone_task' (at pp.c:22889)
      Return:  (at pp.c:22893)
        ID: name='__nesc_result' (at pp.c:22893)
  FuncDef:  (at pp.c:22898)
    Decl: name='CC2420CsmaP__CC2420Power__startOscillatorDone', quals=[], storage=['inline', 'static'] (at pp.c:22898)
      FuncDecl: quals=None (at pp.c:22898)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420CsmaP__CC2420Power__startOscillatorDone', quals=[] (at pp.c:22898)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22900)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__startDone_task__postTask' (at pp.c:22901)
  FuncDef:  (at pp.c:22905)
    Decl: name='CC2420ControlP__CC2420Power__startOscillatorDone', quals=[], storage=['static', 'inline'] (at pp.c:22905)
      FuncDecl: quals=None (at pp.c:22905)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Power__startOscillatorDone', quals=[] (at pp.c:22905)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22905)
      FuncCall:  (at None)
        ID: name='CC2420CsmaP__CC2420Power__startOscillatorDone' (at pp.c:22907)
  FuncDef:  (at pp.c:22912)
    Decl: name='CC2420ControlP__InterruptCCA__disable', quals=[], storage=['static', 'inline'] (at pp.c:22912)
      FuncDecl: quals=None (at pp.c:22912)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__InterruptCCA__disable', quals=[] (at pp.c:22912)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:22912)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:22914)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:22914)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:22918)
        ID: name='__nesc_result' (at pp.c:22918)
        FuncCall:  (at None)
          ID: name='Msp430InterruptC__0__Interrupt__disable' (at pp.c:22918)
      Return:  (at pp.c:22922)
        ID: name='__nesc_result' (at pp.c:22922)
  FuncDef:  (at pp.c:22927)
    Decl: name='CC2420ControlP__InterruptCCA__fired', quals=[], storage=['inline', 'static'] (at pp.c:22927)
      FuncDecl: quals=None (at pp.c:22927)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__InterruptCCA__fired', quals=[] (at pp.c:22927)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22929)
      Assignment: op='=' (at pp.c:22930)
        ID: name='CC2420ControlP__m_state' (at pp.c:22930)
        ID: name='CC2420ControlP__S_XOSC_STARTED' (at pp.c:22930)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__InterruptCCA__disable' (at pp.c:22931)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__IOCFG1__write' (at pp.c:22932)
        ExprList:  (at pp.c:22932)
          Constant: type='int', value='0' (at pp.c:22932)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__writeId' (at pp.c:22933)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CSN__set' (at pp.c:22934)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CSN__clr' (at pp.c:22935)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__CC2420Power__startOscillatorDone' (at pp.c:22936)
  FuncDef:  (at pp.c:22940)
    Decl: name='Msp430InterruptC__0__Interrupt__fired', quals=[], storage=['static', 'inline'] (at pp.c:22940)
      FuncDecl: quals=None (at pp.c:22940)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__0__Interrupt__fired', quals=[] (at pp.c:22940)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22940)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__InterruptCCA__fired' (at pp.c:22942)
  FuncDef:  (at pp.c:22947)
    Decl: name='Msp430InterruptC__0__HplInterrupt__fired', quals=[], storage=['inline', 'static'] (at pp.c:22947)
      FuncDecl: quals=None (at pp.c:22947)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430InterruptC__0__HplInterrupt__fired', quals=[] (at pp.c:22947)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22949)
      FuncCall:  (at None)
        ID: name='Msp430InterruptC__0__HplInterrupt__clear' (at pp.c:22950)
      FuncCall:  (at None)
        ID: name='Msp430InterruptC__0__Interrupt__fired' (at pp.c:22951)
  FuncDef:  (at pp.c:22955)
    Decl: name='HplMsp430InterruptP__Port14__fired', quals=[], storage=['static', 'inline'] (at pp.c:22955)
      FuncDecl: quals=None (at pp.c:22955)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port14__fired', quals=[] (at pp.c:22955)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22955)
      FuncCall:  (at None)
        ID: name='Msp430InterruptC__0__HplInterrupt__fired' (at pp.c:22957)
  FuncDef:  (at pp.c:22962)
    Decl: name='HplMsp430InterruptP__Port15__clear', quals=[], storage=['inline', 'static'] (at pp.c:22962)
      FuncDecl: quals=None (at pp.c:22962)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port15__clear', quals=[] (at pp.c:22962)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22964)
      Assignment: op='&=' (at pp.c:22966)
        ID: name='P1IFG' (at pp.c:22966)
        UnaryOp: op='~' (at pp.c:22966)
          BinaryOp: op='<<' (at pp.c:22966)
            Constant: type='int', value='1' (at pp.c:22966)
            Constant: type='int', value='5' (at pp.c:22966)
  FuncDef:  (at pp.c:22970)
    Decl: name='HplMsp430InterruptP__Port15__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:22970)
      FuncDecl: quals=None (at pp.c:22970)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port15__default__fired', quals=[] (at pp.c:22970)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22972)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port15__clear' (at pp.c:22974)
  FuncDef:  (at pp.c:22978)
    Decl: name='HplMsp430InterruptP__Port15__fired', quals=[], storage=['static', 'inline'] (at pp.c:22978)
      FuncDecl: quals=None (at pp.c:22978)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port15__fired', quals=[] (at pp.c:22978)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22978)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port15__default__fired' (at pp.c:22980)
  FuncDef:  (at pp.c:22985)
    Decl: name='HplMsp430InterruptP__Port16__clear', quals=[], storage=['inline', 'static'] (at pp.c:22985)
      FuncDecl: quals=None (at pp.c:22985)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port16__clear', quals=[] (at pp.c:22985)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22987)
      Assignment: op='&=' (at pp.c:22989)
        ID: name='P1IFG' (at pp.c:22989)
        UnaryOp: op='~' (at pp.c:22989)
          BinaryOp: op='<<' (at pp.c:22989)
            Constant: type='int', value='1' (at pp.c:22989)
            Constant: type='int', value='6' (at pp.c:22989)
  FuncDef:  (at pp.c:22993)
    Decl: name='HplMsp430InterruptP__Port16__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:22993)
      FuncDecl: quals=None (at pp.c:22993)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port16__default__fired', quals=[] (at pp.c:22993)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:22995)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port16__clear' (at pp.c:22997)
  FuncDef:  (at pp.c:23001)
    Decl: name='HplMsp430InterruptP__Port16__fired', quals=[], storage=['static', 'inline'] (at pp.c:23001)
      FuncDecl: quals=None (at pp.c:23001)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port16__fired', quals=[] (at pp.c:23001)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23001)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port16__default__fired' (at pp.c:23003)
  FuncDef:  (at pp.c:23008)
    Decl: name='HplMsp430InterruptP__Port17__clear', quals=[], storage=['inline', 'static'] (at pp.c:23008)
      FuncDecl: quals=None (at pp.c:23008)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port17__clear', quals=[] (at pp.c:23008)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23010)
      Assignment: op='&=' (at pp.c:23012)
        ID: name='P1IFG' (at pp.c:23012)
        UnaryOp: op='~' (at pp.c:23012)
          BinaryOp: op='<<' (at pp.c:23012)
            Constant: type='int', value='1' (at pp.c:23012)
            Constant: type='int', value='7' (at pp.c:23012)
  FuncDef:  (at pp.c:23016)
    Decl: name='HplMsp430InterruptP__Port17__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:23016)
      FuncDecl: quals=None (at pp.c:23016)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port17__default__fired', quals=[] (at pp.c:23016)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23018)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port17__clear' (at pp.c:23020)
  FuncDef:  (at pp.c:23024)
    Decl: name='HplMsp430InterruptP__Port17__fired', quals=[], storage=['static', 'inline'] (at pp.c:23024)
      FuncDecl: quals=None (at pp.c:23024)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port17__fired', quals=[] (at pp.c:23024)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23024)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port17__default__fired' (at pp.c:23026)
  FuncDef:  (at pp.c:23031)
    Decl: name='HplMsp430InterruptP__Port20__clear', quals=[], storage=['inline', 'static'] (at pp.c:23031)
      FuncDecl: quals=None (at pp.c:23031)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port20__clear', quals=[] (at pp.c:23031)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23033)
      Assignment: op='&=' (at pp.c:23035)
        ID: name='P2IFG' (at pp.c:23035)
        UnaryOp: op='~' (at pp.c:23035)
          BinaryOp: op='<<' (at pp.c:23035)
            Constant: type='int', value='1' (at pp.c:23035)
            Constant: type='int', value='0' (at pp.c:23035)
  FuncDef:  (at pp.c:23039)
    Decl: name='HplMsp430InterruptP__Port20__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:23039)
      FuncDecl: quals=None (at pp.c:23039)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port20__default__fired', quals=[] (at pp.c:23039)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23041)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port20__clear' (at pp.c:23043)
  FuncDef:  (at pp.c:23047)
    Decl: name='HplMsp430InterruptP__Port20__fired', quals=[], storage=['static', 'inline'] (at pp.c:23047)
      FuncDecl: quals=None (at pp.c:23047)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port20__fired', quals=[] (at pp.c:23047)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23047)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port20__default__fired' (at pp.c:23049)
  FuncDef:  (at pp.c:23054)
    Decl: name='HplMsp430InterruptP__Port21__clear', quals=[], storage=['inline', 'static'] (at pp.c:23054)
      FuncDecl: quals=None (at pp.c:23054)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port21__clear', quals=[] (at pp.c:23054)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23056)
      Assignment: op='&=' (at pp.c:23058)
        ID: name='P2IFG' (at pp.c:23058)
        UnaryOp: op='~' (at pp.c:23058)
          BinaryOp: op='<<' (at pp.c:23058)
            Constant: type='int', value='1' (at pp.c:23058)
            Constant: type='int', value='1' (at pp.c:23058)
  FuncDef:  (at pp.c:23062)
    Decl: name='HplMsp430InterruptP__Port21__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:23062)
      FuncDecl: quals=None (at pp.c:23062)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port21__default__fired', quals=[] (at pp.c:23062)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23064)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port21__clear' (at pp.c:23066)
  FuncDef:  (at pp.c:23070)
    Decl: name='HplMsp430InterruptP__Port21__fired', quals=[], storage=['static', 'inline'] (at pp.c:23070)
      FuncDecl: quals=None (at pp.c:23070)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port21__fired', quals=[] (at pp.c:23070)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23070)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port21__default__fired' (at pp.c:23072)
  FuncDef:  (at pp.c:23077)
    Decl: name='HplMsp430InterruptP__Port22__clear', quals=[], storage=['inline', 'static'] (at pp.c:23077)
      FuncDecl: quals=None (at pp.c:23077)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port22__clear', quals=[] (at pp.c:23077)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23079)
      Assignment: op='&=' (at pp.c:23081)
        ID: name='P2IFG' (at pp.c:23081)
        UnaryOp: op='~' (at pp.c:23081)
          BinaryOp: op='<<' (at pp.c:23081)
            Constant: type='int', value='1' (at pp.c:23081)
            Constant: type='int', value='2' (at pp.c:23081)
  FuncDef:  (at pp.c:23085)
    Decl: name='HplMsp430InterruptP__Port22__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:23085)
      FuncDecl: quals=None (at pp.c:23085)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port22__default__fired', quals=[] (at pp.c:23085)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23087)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port22__clear' (at pp.c:23089)
  FuncDef:  (at pp.c:23093)
    Decl: name='HplMsp430InterruptP__Port22__fired', quals=[], storage=['static', 'inline'] (at pp.c:23093)
      FuncDecl: quals=None (at pp.c:23093)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port22__fired', quals=[] (at pp.c:23093)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23093)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port22__default__fired' (at pp.c:23095)
  FuncDef:  (at pp.c:23100)
    Decl: name='HplMsp430InterruptP__Port23__clear', quals=[], storage=['inline', 'static'] (at pp.c:23100)
      FuncDecl: quals=None (at pp.c:23100)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port23__clear', quals=[] (at pp.c:23100)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23102)
      Assignment: op='&=' (at pp.c:23104)
        ID: name='P2IFG' (at pp.c:23104)
        UnaryOp: op='~' (at pp.c:23104)
          BinaryOp: op='<<' (at pp.c:23104)
            Constant: type='int', value='1' (at pp.c:23104)
            Constant: type='int', value='3' (at pp.c:23104)
  FuncDef:  (at pp.c:23108)
    Decl: name='HplMsp430InterruptP__Port23__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:23108)
      FuncDecl: quals=None (at pp.c:23108)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port23__default__fired', quals=[] (at pp.c:23108)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23110)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port23__clear' (at pp.c:23112)
  FuncDef:  (at pp.c:23116)
    Decl: name='HplMsp430InterruptP__Port23__fired', quals=[], storage=['static', 'inline'] (at pp.c:23116)
      FuncDecl: quals=None (at pp.c:23116)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port23__fired', quals=[] (at pp.c:23116)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23116)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port23__default__fired' (at pp.c:23118)
  FuncDef:  (at pp.c:23123)
    Decl: name='HplMsp430InterruptP__Port24__clear', quals=[], storage=['inline', 'static'] (at pp.c:23123)
      FuncDecl: quals=None (at pp.c:23123)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port24__clear', quals=[] (at pp.c:23123)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23125)
      Assignment: op='&=' (at pp.c:23127)
        ID: name='P2IFG' (at pp.c:23127)
        UnaryOp: op='~' (at pp.c:23127)
          BinaryOp: op='<<' (at pp.c:23127)
            Constant: type='int', value='1' (at pp.c:23127)
            Constant: type='int', value='4' (at pp.c:23127)
  FuncDef:  (at pp.c:23131)
    Decl: name='HplMsp430InterruptP__Port24__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:23131)
      FuncDecl: quals=None (at pp.c:23131)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port24__default__fired', quals=[] (at pp.c:23131)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23133)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port24__clear' (at pp.c:23135)
  FuncDef:  (at pp.c:23139)
    Decl: name='HplMsp430InterruptP__Port24__fired', quals=[], storage=['static', 'inline'] (at pp.c:23139)
      FuncDecl: quals=None (at pp.c:23139)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port24__fired', quals=[] (at pp.c:23139)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23139)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port24__default__fired' (at pp.c:23141)
  FuncDef:  (at pp.c:23146)
    Decl: name='HplMsp430InterruptP__Port25__clear', quals=[], storage=['inline', 'static'] (at pp.c:23146)
      FuncDecl: quals=None (at pp.c:23146)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port25__clear', quals=[] (at pp.c:23146)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23148)
      Assignment: op='&=' (at pp.c:23150)
        ID: name='P2IFG' (at pp.c:23150)
        UnaryOp: op='~' (at pp.c:23150)
          BinaryOp: op='<<' (at pp.c:23150)
            Constant: type='int', value='1' (at pp.c:23150)
            Constant: type='int', value='5' (at pp.c:23150)
  FuncDef:  (at pp.c:23154)
    Decl: name='HplMsp430InterruptP__Port25__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:23154)
      FuncDecl: quals=None (at pp.c:23154)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port25__default__fired', quals=[] (at pp.c:23154)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23156)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port25__clear' (at pp.c:23158)
  FuncDef:  (at pp.c:23162)
    Decl: name='HplMsp430InterruptP__Port25__fired', quals=[], storage=['static', 'inline'] (at pp.c:23162)
      FuncDecl: quals=None (at pp.c:23162)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port25__fired', quals=[] (at pp.c:23162)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23162)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port25__default__fired' (at pp.c:23164)
  FuncDef:  (at pp.c:23169)
    Decl: name='HplMsp430InterruptP__Port26__clear', quals=[], storage=['inline', 'static'] (at pp.c:23169)
      FuncDecl: quals=None (at pp.c:23169)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port26__clear', quals=[] (at pp.c:23169)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23171)
      Assignment: op='&=' (at pp.c:23173)
        ID: name='P2IFG' (at pp.c:23173)
        UnaryOp: op='~' (at pp.c:23173)
          BinaryOp: op='<<' (at pp.c:23173)
            Constant: type='int', value='1' (at pp.c:23173)
            Constant: type='int', value='6' (at pp.c:23173)
  FuncDef:  (at pp.c:23177)
    Decl: name='HplMsp430InterruptP__Port26__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:23177)
      FuncDecl: quals=None (at pp.c:23177)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port26__default__fired', quals=[] (at pp.c:23177)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23179)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port26__clear' (at pp.c:23181)
  FuncDef:  (at pp.c:23185)
    Decl: name='HplMsp430InterruptP__Port26__fired', quals=[], storage=['static', 'inline'] (at pp.c:23185)
      FuncDecl: quals=None (at pp.c:23185)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port26__fired', quals=[] (at pp.c:23185)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23185)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port26__default__fired' (at pp.c:23187)
  FuncDef:  (at pp.c:23192)
    Decl: name='HplMsp430InterruptP__Port27__clear', quals=[], storage=['inline', 'static'] (at pp.c:23192)
      FuncDecl: quals=None (at pp.c:23192)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port27__clear', quals=[] (at pp.c:23192)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23194)
      Assignment: op='&=' (at pp.c:23196)
        ID: name='P2IFG' (at pp.c:23196)
        UnaryOp: op='~' (at pp.c:23196)
          BinaryOp: op='<<' (at pp.c:23196)
            Constant: type='int', value='1' (at pp.c:23196)
            Constant: type='int', value='7' (at pp.c:23196)
  FuncDef:  (at pp.c:23200)
    Decl: name='HplMsp430InterruptP__Port27__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:23200)
      FuncDecl: quals=None (at pp.c:23200)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port27__default__fired', quals=[] (at pp.c:23200)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23202)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port27__clear' (at pp.c:23204)
  FuncDef:  (at pp.c:23208)
    Decl: name='HplMsp430InterruptP__Port27__fired', quals=[], storage=['static', 'inline'] (at pp.c:23208)
      FuncDecl: quals=None (at pp.c:23208)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430InterruptP__Port27__fired', quals=[] (at pp.c:23208)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23208)
      FuncCall:  (at None)
        ID: name='HplMsp430InterruptP__Port27__default__fired' (at pp.c:23210)
  FuncDef:  (at pp.c:23215)
    Decl: name='Msp430UsartShareP__0__ArbiterInfo__userId', quals=[], storage=['static', 'inline'] (at pp.c:23215)
      FuncDecl: quals=None (at pp.c:23215)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__ArbiterInfo__userId', quals=[] (at pp.c:23215)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:23215)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:23217)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:23217)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:23221)
        ID: name='__nesc_result' (at pp.c:23221)
        FuncCall:  (at None)
          ID: name='ArbiterP__0__ArbiterInfo__userId' (at pp.c:23221)
      Return:  (at pp.c:23225)
        ID: name='__nesc_result' (at pp.c:23225)
  FuncDef:  (at pp.c:23230)
    Decl: name='HplMsp430Usart0P__Usart__disableRxIntr', quals=[], storage=['inline', 'static'] (at pp.c:23230)
      FuncDecl: quals=None (at pp.c:23230)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__disableRxIntr', quals=[] (at pp.c:23230)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23232)
      Assignment: op='&=' (at pp.c:23233)
        ID: name='HplMsp430Usart0P__IE1' (at pp.c:23233)
        UnaryOp: op='~' (at pp.c:23233)
          BinaryOp: op='<<' (at pp.c:23233)
            Constant: type='int', value='1' (at pp.c:23233)
            Constant: type='int', value='6' (at pp.c:23233)
  FuncDef:  (at pp.c:23237)
    Decl: name='Msp430SpiNoDmaP__0__Usart__disableRxIntr', quals=[], storage=['static', 'inline'] (at pp.c:23237)
      FuncDecl: quals=None (at pp.c:23237)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__Usart__disableRxIntr', quals=[] (at pp.c:23237)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23237)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Usart__disableRxIntr' (at pp.c:23239)
  FuncDef:  (at pp.c:23244)
    Decl: name='Msp430SpiNoDmaP__0__UsartInterrupts__rxDone', quals=[], storage=['inline', 'static'] (at pp.c:23244)
      FuncDecl: quals=None (at pp.c:23244)
        ParamList:  (at pp.c:23244)
          Decl: name='data', quals=[], storage=[] (at pp.c:23244)
            TypeDecl: declname='data', quals=[] (at pp.c:23244)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartInterrupts__rxDone', quals=[] (at pp.c:23244)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23246)
      If:  (at pp.c:23248)
        ID: name='Msp430SpiNoDmaP__0__m_rx_buf' (at pp.c:23248)
        Compound:  (at pp.c:23248)
          Assignment: op='=' (at pp.c:23249)
            ArrayRef:  (at pp.c:23249)
              ID: name='Msp430SpiNoDmaP__0__m_rx_buf' (at pp.c:23249)
              BinaryOp: op='-' (at pp.c:23249)
                ID: name='Msp430SpiNoDmaP__0__m_pos' (at pp.c:23249)
                Constant: type='int', value='1' (at pp.c:23249)
            ID: name='data' (at pp.c:23249)
      If:  (at pp.c:23251)
        BinaryOp: op='<' (at pp.c:23251)
          ID: name='Msp430SpiNoDmaP__0__m_pos' (at pp.c:23251)
          ID: name='Msp430SpiNoDmaP__0__m_len' (at pp.c:23251)
        Compound:  (at pp.c:23251)
          FuncCall:  (at None)
            ID: name='Msp430SpiNoDmaP__0__continueOp' (at pp.c:23252)
        Compound:  (at pp.c:23256)
          FuncCall:  (at None)
            ID: name='Msp430SpiNoDmaP__0__Usart__disableRxIntr' (at pp.c:23257)
          FuncCall:  (at None)
            ID: name='Msp430SpiNoDmaP__0__signalDone' (at pp.c:23258)
  FuncDef:  (at pp.c:23263)
    Decl: name='Msp430UsartShareP__0__Interrupts__default__rxDone', quals=[], storage=['inline', 'static'] (at pp.c:23263)
      FuncDecl: quals=None (at pp.c:23263)
        ParamList:  (at pp.c:23263)
          Decl: name='id', quals=[], storage=[] (at pp.c:23263)
            TypeDecl: declname='id', quals=[] (at pp.c:23263)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:23263)
            TypeDecl: declname='data', quals=[] (at pp.c:23263)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__Interrupts__default__rxDone', quals=[] (at pp.c:23263)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23265)
  FuncDef:  (at pp.c:23269)
    Decl: name='Msp430UsartShareP__0__Interrupts__rxDone', quals=[], storage=['static', 'inline'] (at pp.c:23269)
      FuncDecl: quals=None (at pp.c:23269)
        ParamList:  (at pp.c:23269)
          Decl: name='arg_0x101ea60c8', quals=[], storage=[] (at pp.c:23269)
            TypeDecl: declname='arg_0x101ea60c8', quals=[] (at pp.c:23269)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:23269)
            TypeDecl: declname='data', quals=[] (at pp.c:23269)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__Interrupts__rxDone', quals=[] (at pp.c:23269)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23269)
      Switch:  (at pp.c:23271)
        ID: name='arg_0x101ea60c8' (at pp.c:23271)
        Compound:  (at pp.c:23271)
          Case:  (at pp.c:23273)
            ID: name='Msp430Usart0C__0__CLIENT_ID' (at pp.c:23273)
            FuncCall:  (at None)
              ID: name='Msp430SpiNoDmaP__0__UsartInterrupts__rxDone' (at pp.c:23275)
              ExprList:  (at pp.c:23275)
                ID: name='data' (at pp.c:23275)
          Break:  (at pp.c:23277)
          Default:  (at pp.c:23279)
            FuncCall:  (at None)
              ID: name='Msp430UsartShareP__0__Interrupts__default__rxDone' (at pp.c:23281)
              ExprList:  (at pp.c:23281)
                ID: name='arg_0x101ea60c8' (at pp.c:23281)
                ID: name='data' (at pp.c:23281)
          Break:  (at pp.c:23283)
  FuncDef:  (at pp.c:23290)
    Decl: name='Msp430UsartShareP__0__ArbiterInfo__inUse', quals=[], storage=['static', 'inline'] (at pp.c:23290)
      FuncDecl: quals=None (at pp.c:23290)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__ArbiterInfo__inUse', quals=[] (at pp.c:23290)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:23290)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:23292)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:23292)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:23296)
        ID: name='__nesc_result' (at pp.c:23296)
        FuncCall:  (at None)
          ID: name='ArbiterP__0__ArbiterInfo__inUse' (at pp.c:23296)
      Return:  (at pp.c:23300)
        ID: name='__nesc_result' (at pp.c:23300)
  FuncDef:  (at pp.c:23305)
    Decl: name='Msp430UsartShareP__0__RawInterrupts__rxDone', quals=[], storage=['inline', 'static'] (at pp.c:23305)
      FuncDecl: quals=None (at pp.c:23305)
        ParamList:  (at pp.c:23305)
          Decl: name='data', quals=[], storage=[] (at pp.c:23305)
            TypeDecl: declname='data', quals=[] (at pp.c:23305)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__RawInterrupts__rxDone', quals=[] (at pp.c:23305)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23307)
      If:  (at pp.c:23308)
        FuncCall:  (at None)
          ID: name='Msp430UsartShareP__0__ArbiterInfo__inUse' (at pp.c:23308)
        Compound:  (at pp.c:23308)
          FuncCall:  (at None)
            ID: name='Msp430UsartShareP__0__Interrupts__rxDone' (at pp.c:23309)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430UsartShareP__0__ArbiterInfo__userId' (at pp.c:23309)
              ID: name='data' (at pp.c:23309)
  FuncDef:  (at pp.c:23314)
    Decl: name='HplMsp430Usart0P__Interrupts__rxDone', quals=[], storage=['static', 'inline'] (at pp.c:23314)
      FuncDecl: quals=None (at pp.c:23314)
        ParamList:  (at pp.c:23314)
          Decl: name='data', quals=[], storage=[] (at pp.c:23314)
            TypeDecl: declname='data', quals=[] (at pp.c:23314)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Interrupts__rxDone', quals=[] (at pp.c:23314)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23314)
      FuncCall:  (at None)
        ID: name='Msp430UsartShareP__0__RawInterrupts__rxDone' (at pp.c:23316)
        ExprList:  (at pp.c:23316)
          ID: name='data' (at pp.c:23316)
  FuncDef:  (at pp.c:23321)
    Decl: name='HplMsp430I2C0P__HplI2C__isI2C', quals=[], storage=['inline', 'static'] (at pp.c:23321)
      FuncDecl: quals=None (at pp.c:23321)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430I2C0P__HplI2C__isI2C', quals=[] (at pp.c:23321)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:23323)
      Compound:  (at pp.c:23326)
        Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:23327)
          TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:23327)
            IdentifierType: names=['char', 'unsigned'] (at None)
          BinaryOp: op='&&' (at pp.c:23329)
            BinaryOp: op='&&' (at pp.c:23329)
              BinaryOp: op='&' (at pp.c:23329)
                ID: name='HplMsp430I2C0P__U0CTL' (at pp.c:23329)
                Constant: type='int', value='0x20' (at pp.c:23329)
              BinaryOp: op='&' (at pp.c:23329)
                ID: name='HplMsp430I2C0P__U0CTL' (at pp.c:23329)
                Constant: type='int', value='0x04' (at pp.c:23329)
            BinaryOp: op='&' (at pp.c:23329)
              ID: name='HplMsp430I2C0P__U0CTL' (at pp.c:23329)
              Constant: type='int', value='0x01' (at pp.c:23329)
        Return:  (at pp.c:23332)
          ID: name='__nesc_temp' (at pp.c:23332)
  FuncDef:  (at pp.c:23337)
    Decl: name='HplMsp430Usart0P__HplI2C__isI2C', quals=[], storage=['static', 'inline'] (at pp.c:23337)
      FuncDecl: quals=None (at pp.c:23337)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__HplI2C__isI2C', quals=[] (at pp.c:23337)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:23337)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:23339)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:23339)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:23343)
        ID: name='__nesc_result' (at pp.c:23343)
        FuncCall:  (at None)
          ID: name='HplMsp430I2C0P__HplI2C__isI2C' (at pp.c:23343)
      Return:  (at pp.c:23347)
        ID: name='__nesc_result' (at pp.c:23347)
  FuncDef:  (at pp.c:23352)
    Decl: name='Msp430UsartShareP__0__I2CInterrupts__default__fired', quals=[], storage=['inline', 'static'] (at pp.c:23352)
      FuncDecl: quals=None (at pp.c:23352)
        ParamList:  (at pp.c:23352)
          Decl: name='id', quals=[], storage=[] (at pp.c:23352)
            TypeDecl: declname='id', quals=[] (at pp.c:23352)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__I2CInterrupts__default__fired', quals=[] (at pp.c:23352)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23354)
  FuncDef:  (at pp.c:23358)
    Decl: name='Msp430UsartShareP__0__I2CInterrupts__fired', quals=[], storage=['static', 'inline'] (at pp.c:23358)
      FuncDecl: quals=None (at pp.c:23358)
        ParamList:  (at pp.c:23358)
          Decl: name='arg_0x101ea4020', quals=[], storage=[] (at pp.c:23358)
            TypeDecl: declname='arg_0x101ea4020', quals=[] (at pp.c:23358)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__I2CInterrupts__fired', quals=[] (at pp.c:23358)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23358)
      FuncCall:  (at None)
        ID: name='Msp430UsartShareP__0__I2CInterrupts__default__fired' (at pp.c:23360)
        ExprList:  (at pp.c:23360)
          ID: name='arg_0x101ea4020' (at pp.c:23360)
  FuncDef:  (at pp.c:23365)
    Decl: name='Msp430UsartShareP__0__RawI2CInterrupts__fired', quals=[], storage=['inline', 'static'] (at pp.c:23365)
      FuncDecl: quals=None (at pp.c:23365)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__RawI2CInterrupts__fired', quals=[] (at pp.c:23365)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23367)
      If:  (at pp.c:23368)
        FuncCall:  (at None)
          ID: name='Msp430UsartShareP__0__ArbiterInfo__inUse' (at pp.c:23368)
        Compound:  (at pp.c:23368)
          FuncCall:  (at None)
            ID: name='Msp430UsartShareP__0__I2CInterrupts__fired' (at pp.c:23369)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430UsartShareP__0__ArbiterInfo__userId' (at pp.c:23369)
  FuncDef:  (at pp.c:23374)
    Decl: name='HplMsp430Usart0P__I2CInterrupts__fired', quals=[], storage=['static', 'inline'] (at pp.c:23374)
      FuncDecl: quals=None (at pp.c:23374)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__I2CInterrupts__fired', quals=[] (at pp.c:23374)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23374)
      FuncCall:  (at None)
        ID: name='Msp430UsartShareP__0__RawI2CInterrupts__fired' (at pp.c:23376)
  FuncDef:  (at pp.c:23381)
    Decl: name='Msp430SpiNoDmaP__0__UsartInterrupts__txDone', quals=[], storage=['inline', 'static'] (at pp.c:23381)
      FuncDecl: quals=None (at pp.c:23381)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__UsartInterrupts__txDone', quals=[] (at pp.c:23381)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23383)
  FuncDef:  (at pp.c:23387)
    Decl: name='Msp430UsartShareP__0__Interrupts__default__txDone', quals=[], storage=['inline', 'static'] (at pp.c:23387)
      FuncDecl: quals=None (at pp.c:23387)
        ParamList:  (at pp.c:23387)
          Decl: name='id', quals=[], storage=[] (at pp.c:23387)
            TypeDecl: declname='id', quals=[] (at pp.c:23387)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__Interrupts__default__txDone', quals=[] (at pp.c:23387)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23389)
  FuncDef:  (at pp.c:23393)
    Decl: name='Msp430UsartShareP__0__Interrupts__txDone', quals=[], storage=['static', 'inline'] (at pp.c:23393)
      FuncDecl: quals=None (at pp.c:23393)
        ParamList:  (at pp.c:23393)
          Decl: name='arg_0x101ea60c8', quals=[], storage=[] (at pp.c:23393)
            TypeDecl: declname='arg_0x101ea60c8', quals=[] (at pp.c:23393)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__Interrupts__txDone', quals=[] (at pp.c:23393)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23393)
      Switch:  (at pp.c:23395)
        ID: name='arg_0x101ea60c8' (at pp.c:23395)
        Compound:  (at pp.c:23395)
          Case:  (at pp.c:23397)
            ID: name='Msp430Usart0C__0__CLIENT_ID' (at pp.c:23397)
            FuncCall:  (at None)
              ID: name='Msp430SpiNoDmaP__0__UsartInterrupts__txDone' (at pp.c:23399)
          Break:  (at pp.c:23401)
          Default:  (at pp.c:23403)
            FuncCall:  (at None)
              ID: name='Msp430UsartShareP__0__Interrupts__default__txDone' (at pp.c:23405)
              ExprList:  (at pp.c:23405)
                ID: name='arg_0x101ea60c8' (at pp.c:23405)
          Break:  (at pp.c:23407)
  FuncDef:  (at pp.c:23414)
    Decl: name='Msp430UsartShareP__0__RawInterrupts__txDone', quals=[], storage=['inline', 'static'] (at pp.c:23414)
      FuncDecl: quals=None (at pp.c:23414)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430UsartShareP__0__RawInterrupts__txDone', quals=[] (at pp.c:23414)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23416)
      If:  (at pp.c:23417)
        FuncCall:  (at None)
          ID: name='Msp430UsartShareP__0__ArbiterInfo__inUse' (at pp.c:23417)
        Compound:  (at pp.c:23417)
          FuncCall:  (at None)
            ID: name='Msp430UsartShareP__0__Interrupts__txDone' (at pp.c:23418)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430UsartShareP__0__ArbiterInfo__userId' (at pp.c:23418)
  FuncDef:  (at pp.c:23423)
    Decl: name='HplMsp430Usart0P__Interrupts__txDone', quals=[], storage=['static', 'inline'] (at pp.c:23423)
      FuncDecl: quals=None (at pp.c:23423)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Interrupts__txDone', quals=[] (at pp.c:23423)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23423)
      FuncCall:  (at None)
        ID: name='Msp430UsartShareP__0__RawInterrupts__txDone' (at pp.c:23425)
  FuncDef:  (at pp.c:23430)
    Decl: name='AdcP__SingleChannel__multipleDataReady', quals=[], storage=['inline', 'static'] (at pp.c:23430)
      FuncDecl: quals=None (at pp.c:23430)
        ParamList:  (at pp.c:23430)
          Decl: name='client', quals=[], storage=[] (at pp.c:23430)
            TypeDecl: declname='client', quals=[] (at pp.c:23430)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:23431)
            PtrDecl: quals=[] (at pp.c:23431)
              TypeDecl: declname='buf', quals=[] (at pp.c:23431)
                IdentifierType: names=['uint16_t'] (at None)
          Decl: name='numSamples', quals=[], storage=[] (at pp.c:23431)
            TypeDecl: declname='numSamples', quals=[] (at pp.c:23431)
              IdentifierType: names=['uint16_t'] (at None)
        PtrDecl: quals=[] (at pp.c:23430)
          TypeDecl: declname='AdcP__SingleChannel__multipleDataReady', quals=[] (at pp.c:23430)
            IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:23432)
      Return:  (at pp.c:23434)
        Constant: type='int', value='0' (at pp.c:23434)
  FuncDef:  (at pp.c:23438)
    Decl: name='Msp430Adc12ImplP__SingleChannel__default__multipleDataReady', quals=[], storage=['inline', 'static'] (at pp.c:23438)
      FuncDecl: quals=None (at pp.c:23438)
        ParamList:  (at pp.c:23438)
          Decl: name='id', quals=[], storage=[] (at pp.c:23438)
            TypeDecl: declname='id', quals=[] (at pp.c:23438)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:23439)
            PtrDecl: quals=[] (at pp.c:23439)
              TypeDecl: declname='buf', quals=[] (at pp.c:23439)
                IdentifierType: names=['uint16_t'] (at None)
          Decl: name='numSamples', quals=[], storage=[] (at pp.c:23439)
            TypeDecl: declname='numSamples', quals=[] (at pp.c:23439)
              IdentifierType: names=['uint16_t'] (at None)
        PtrDecl: quals=[] (at pp.c:23438)
          TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__default__multipleDataReady', quals=[] (at pp.c:23438)
            IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:23440)
      Return:  (at pp.c:23441)
        Constant: type='int', value='0' (at pp.c:23441)
  FuncDef:  (at pp.c:23445)
    Decl: name='Msp430Adc12ImplP__SingleChannel__multipleDataReady', quals=[], storage=['static', 'inline'] (at pp.c:23445)
      FuncDecl: quals=None (at pp.c:23445)
        ParamList:  (at pp.c:23445)
          Decl: name='arg_0x102648ac0', quals=[], storage=[] (at pp.c:23445)
            TypeDecl: declname='arg_0x102648ac0', quals=[] (at pp.c:23445)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buffer', quals=[], storage=[] (at pp.c:23445)
            PtrDecl: quals=[] (at pp.c:23445)
              TypeDecl: declname='buffer', quals=[] (at pp.c:23445)
                IdentifierType: names=['uint16_t'] (at None)
          Decl: name='numSamples', quals=[], storage=[] (at pp.c:23445)
            TypeDecl: declname='numSamples', quals=[] (at pp.c:23445)
              IdentifierType: names=['uint16_t'] (at None)
        PtrDecl: quals=[] (at pp.c:23445)
          TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__multipleDataReady', quals=[] (at pp.c:23445)
            IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:23445)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:23447)
        PtrDecl: quals=[] (at pp.c:23447)
          TypeDecl: declname='__nesc_result', quals=[] (at pp.c:23447)
            IdentifierType: names=['int', 'unsigned'] (at None)
      Switch:  (at pp.c:23451)
        ID: name='arg_0x102648ac0' (at pp.c:23451)
        Compound:  (at pp.c:23451)
          Case:  (at pp.c:23453)
            ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:23453)
            Assignment: op='=' (at pp.c:23455)
              ID: name='__nesc_result' (at pp.c:23455)
              FuncCall:  (at None)
                ID: name='AdcP__SingleChannel__multipleDataReady' (at pp.c:23455)
                ExprList:  (at pp.c:23455)
                  ID: name='AdcReadClientC__0__CLIENT' (at pp.c:23455)
                  ID: name='buffer' (at pp.c:23455)
                  ID: name='numSamples' (at pp.c:23455)
          Break:  (at pp.c:23457)
          Case:  (at pp.c:23459)
            ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:23459)
            Assignment: op='=' (at pp.c:23461)
              ID: name='__nesc_result' (at pp.c:23461)
              FuncCall:  (at None)
                ID: name='AdcStreamP__SingleChannel__multipleDataReady' (at pp.c:23461)
                ExprList:  (at pp.c:23461)
                  ID: name='AdcReadStreamClientC__0__RSCLIENT' (at pp.c:23461)
                  ID: name='buffer' (at pp.c:23461)
                  ID: name='numSamples' (at pp.c:23461)
          Break:  (at pp.c:23463)
          Case:  (at pp.c:23465)
            ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:23465)
            Assignment: op='=' (at pp.c:23467)
              ID: name='__nesc_result' (at pp.c:23467)
              FuncCall:  (at None)
                ID: name='AdcP__SingleChannel__multipleDataReady' (at pp.c:23467)
                ExprList:  (at pp.c:23467)
                  ID: name='AdcReadNowClientC__0__CLIENT' (at pp.c:23467)
                  ID: name='buffer' (at pp.c:23467)
                  ID: name='numSamples' (at pp.c:23467)
          Break:  (at pp.c:23469)
          Default:  (at pp.c:23471)
            Assignment: op='=' (at pp.c:23473)
              ID: name='__nesc_result' (at pp.c:23473)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__SingleChannel__default__multipleDataReady' (at pp.c:23473)
                ExprList:  (at pp.c:23473)
                  ID: name='arg_0x102648ac0' (at pp.c:23473)
                  ID: name='buffer' (at pp.c:23473)
                  ID: name='numSamples' (at pp.c:23473)
          Break:  (at pp.c:23475)
      Return:  (at pp.c:23481)
        ID: name='__nesc_result' (at pp.c:23481)
  FuncDef:  (at pp.c:23486)
    Decl: name='HplAdc12P__HplAdc12__getMem', quals=[], storage=['inline', 'static'] (at pp.c:23486)
      FuncDecl: quals=None (at pp.c:23486)
        ParamList:  (at pp.c:23486)
          Decl: name='i', quals=[], storage=[] (at pp.c:23486)
            TypeDecl: declname='i', quals=[] (at pp.c:23486)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__getMem', quals=[] (at pp.c:23486)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:23488)
      Return:  (at pp.c:23489)
        ArrayRef:  (at None)
          Cast:  (at None)
            Typename: quals=[] (at None)
              PtrDecl: quals=[] (at pp.c:23489)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['int'] (at None)
            Constant: type='int', value='0x0140' (at pp.c:23489)
          ID: name='i' (at pp.c:23489)
  FuncDef:  (at pp.c:23493)
    Decl: name='Msp430Adc12ImplP__HplAdc12__getMem', quals=[], storage=['static', 'inline'] (at pp.c:23493)
      FuncDecl: quals=None (at pp.c:23493)
        ParamList:  (at pp.c:23493)
          Decl: name='idx', quals=[], storage=[] (at pp.c:23493)
            TypeDecl: declname='idx', quals=[] (at pp.c:23493)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__getMem', quals=[] (at pp.c:23493)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:23493)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:23495)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:23495)
          IdentifierType: names=['int', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:23499)
        ID: name='__nesc_result' (at pp.c:23499)
        FuncCall:  (at None)
          ID: name='HplAdc12P__HplAdc12__getMem' (at pp.c:23499)
          ExprList:  (at pp.c:23499)
            ID: name='idx' (at pp.c:23499)
      Return:  (at pp.c:23503)
        ID: name='__nesc_result' (at pp.c:23503)
  FuncDef:  (at pp.c:23508)
    Decl: name='HplAdc12P__int2adc12memctl', quals=[], storage=['inline', 'static'] (at pp.c:23508)
      FuncDecl: quals=None (at pp.c:23508)
        ParamList:  (at pp.c:23508)
          Decl: name='x', quals=[], storage=[] (at pp.c:23508)
            TypeDecl: declname='x', quals=[] (at pp.c:23508)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='HplAdc12P__int2adc12memctl', quals=[] (at pp.c:23508)
          IdentifierType: names=['adc12memctl_t'] (at None)
    Compound:  (at pp.c:23510)
      Decl: name='c', quals=[], storage=[] (at pp.c:23519)
        TypeDecl: declname='c', quals=[] (at pp.c:23519)
          Union: name='__nesc_unnamed4400', packed=False (at pp.c:23512)
            Decl: name='f', quals=[], storage=[] (at 0)
              TypeDecl: declname='f', quals=[] (at pp.c:23514)
                IdentifierType: names=['uint8_t'] (at None)
            Decl: name='t', quals=[], storage=[] (at 0)
              TypeDecl: declname='t', quals=[] (at pp.c:23516)
                IdentifierType: names=['adc12memctl_t'] (at None)
        ExprList:  (at pp.c:23519)
          Assignment: op='=' (at pp.c:23519)
            StructRef: type='.' (at pp.c:23519)
              ID: name='f' (at pp.c:23519)
            ID: name='x' (at pp.c:23519)
      Return:  (at pp.c:23522)
        StructRef: type='.' (at pp.c:23522)
          ID: name='c' (at pp.c:23522)
          ID: name='t' (at pp.c:23522)
  FuncDef:  (at pp.c:23526)
    Decl: name='HplAdc12P__HplAdc12__getMCtl', quals=[], storage=['inline', 'static'] (at pp.c:23526)
      FuncDecl: quals=None (at pp.c:23526)
        ParamList:  (at pp.c:23526)
          Decl: name='i', quals=[], storage=[] (at pp.c:23526)
            TypeDecl: declname='i', quals=[] (at pp.c:23526)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__getMCtl', quals=[] (at pp.c:23526)
          IdentifierType: names=['adc12memctl_t'] (at None)
    Compound:  (at pp.c:23528)
      Return:  (at pp.c:23529)
        FuncCall:  (at None)
          ID: name='HplAdc12P__int2adc12memctl' (at pp.c:23529)
          ExprList:  (at None)
            ArrayRef:  (at None)
              Cast:  (at None)
                Typename: quals=[] (at None)
                  PtrDecl: quals=[] (at pp.c:23529)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['char'] (at None)
                Constant: type='int', value='0x0080' (at pp.c:23529)
              ID: name='i' (at pp.c:23529)
  FuncDef:  (at pp.c:23533)
    Decl: name='Msp430Adc12ImplP__HplAdc12__getMCtl', quals=[], storage=['static', 'inline'] (at pp.c:23533)
      FuncDecl: quals=None (at pp.c:23533)
        ParamList:  (at pp.c:23533)
          Decl: name='idx', quals=[], storage=[] (at pp.c:23533)
            TypeDecl: declname='idx', quals=[] (at pp.c:23533)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__getMCtl', quals=[] (at pp.c:23533)
          IdentifierType: names=['adc12memctl_t'] (at None)
    Compound:  (at pp.c:23533)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:23535)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:23535)
          Struct: name='__nesc_unnamed4301', packed=False (at pp.c:23535)
      Assignment: op='=' (at pp.c:23539)
        ID: name='__nesc_result' (at pp.c:23539)
        FuncCall:  (at None)
          ID: name='HplAdc12P__HplAdc12__getMCtl' (at pp.c:23539)
          ExprList:  (at pp.c:23539)
            ID: name='idx' (at pp.c:23539)
      Return:  (at pp.c:23543)
        ID: name='__nesc_result' (at pp.c:23543)
  FuncDef:  (at pp.c:23548)
    Decl: name='Msp430Adc12ImplP__MultiChannel__default__dataReady', quals=[], storage=['inline', 'static'] (at pp.c:23548)
      FuncDecl: quals=None (at pp.c:23548)
        ParamList:  (at pp.c:23548)
          Decl: name='id', quals=[], storage=[] (at pp.c:23548)
            TypeDecl: declname='id', quals=[] (at pp.c:23548)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buffer', quals=[], storage=[] (at pp.c:23548)
            PtrDecl: quals=[] (at pp.c:23548)
              TypeDecl: declname='buffer', quals=[] (at pp.c:23548)
                IdentifierType: names=['uint16_t'] (at None)
          Decl: name='numSamples', quals=[], storage=[] (at pp.c:23548)
            TypeDecl: declname='numSamples', quals=[] (at pp.c:23548)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__MultiChannel__default__dataReady', quals=[] (at pp.c:23548)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23550)
  FuncDef:  (at pp.c:23554)
    Decl: name='Msp430Adc12ImplP__MultiChannel__dataReady', quals=[], storage=['static', 'inline'] (at pp.c:23554)
      FuncDecl: quals=None (at pp.c:23554)
        ParamList:  (at pp.c:23554)
          Decl: name='arg_0x1026450c8', quals=[], storage=[] (at pp.c:23554)
            TypeDecl: declname='arg_0x1026450c8', quals=[] (at pp.c:23554)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buffer', quals=[], storage=[] (at pp.c:23554)
            PtrDecl: quals=[] (at pp.c:23554)
              TypeDecl: declname='buffer', quals=[] (at pp.c:23554)
                IdentifierType: names=['uint16_t'] (at None)
          Decl: name='numSamples', quals=[], storage=[] (at pp.c:23554)
            TypeDecl: declname='numSamples', quals=[] (at pp.c:23554)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__MultiChannel__dataReady', quals=[] (at pp.c:23554)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23554)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__MultiChannel__default__dataReady' (at pp.c:23556)
        ExprList:  (at pp.c:23556)
          ID: name='arg_0x1026450c8' (at pp.c:23556)
          ID: name='buffer' (at pp.c:23556)
          ID: name='numSamples' (at pp.c:23556)
  FuncDef:  (at pp.c:23561)
    Decl: name='Msp430Adc12ImplP__SingleChannel__default__singleDataReady', quals=[], storage=['inline', 'static'] (at pp.c:23561)
      FuncDecl: quals=None (at pp.c:23561)
        ParamList:  (at pp.c:23561)
          Decl: name='id', quals=[], storage=[] (at pp.c:23561)
            TypeDecl: declname='id', quals=[] (at pp.c:23561)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:23561)
            TypeDecl: declname='data', quals=[] (at pp.c:23561)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__default__singleDataReady', quals=[] (at pp.c:23561)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:23562)
      Return:  (at pp.c:23563)
        ID: name='FAIL' (at pp.c:23563)
  FuncDef:  (at pp.c:23567)
    Decl: name='Msp430Adc12ImplP__SingleChannel__singleDataReady', quals=[], storage=['static', 'inline'] (at pp.c:23567)
      FuncDecl: quals=None (at pp.c:23567)
        ParamList:  (at pp.c:23567)
          Decl: name='arg_0x102648ac0', quals=[], storage=[] (at pp.c:23567)
            TypeDecl: declname='arg_0x102648ac0', quals=[] (at pp.c:23567)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:23567)
            TypeDecl: declname='data', quals=[] (at pp.c:23567)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__singleDataReady', quals=[] (at pp.c:23567)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:23567)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:23569)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:23569)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Switch:  (at pp.c:23573)
        ID: name='arg_0x102648ac0' (at pp.c:23573)
        Compound:  (at pp.c:23573)
          Case:  (at pp.c:23575)
            ID: name='Msp430Adc12ClientAutoRVGC__0__ID' (at pp.c:23575)
            Assignment: op='=' (at pp.c:23577)
              ID: name='__nesc_result' (at pp.c:23577)
              FuncCall:  (at None)
                ID: name='AdcP__SingleChannel__singleDataReady' (at pp.c:23577)
                ExprList:  (at pp.c:23577)
                  ID: name='AdcReadClientC__0__CLIENT' (at pp.c:23577)
                  ID: name='data' (at pp.c:23577)
          Break:  (at pp.c:23579)
          Case:  (at pp.c:23581)
            ID: name='Msp430Adc12ClientAutoRVGC__1__ID' (at pp.c:23581)
            Assignment: op='=' (at pp.c:23583)
              ID: name='__nesc_result' (at pp.c:23583)
              FuncCall:  (at None)
                ID: name='AdcStreamP__SingleChannel__singleDataReady' (at pp.c:23583)
                ExprList:  (at pp.c:23583)
                  ID: name='AdcReadStreamClientC__0__RSCLIENT' (at pp.c:23583)
                  ID: name='data' (at pp.c:23583)
          Break:  (at pp.c:23585)
          Case:  (at pp.c:23587)
            ID: name='Msp430Adc12ClientAutoRVGC__2__ID' (at pp.c:23587)
            Assignment: op='=' (at pp.c:23589)
              ID: name='__nesc_result' (at pp.c:23589)
              FuncCall:  (at None)
                ID: name='AdcP__SingleChannel__singleDataReady' (at pp.c:23589)
                ExprList:  (at pp.c:23589)
                  ID: name='AdcReadNowClientC__0__CLIENT' (at pp.c:23589)
                  ID: name='data' (at pp.c:23589)
          Break:  (at pp.c:23591)
          Default:  (at pp.c:23593)
            Assignment: op='=' (at pp.c:23595)
              ID: name='__nesc_result' (at pp.c:23595)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__SingleChannel__default__singleDataReady' (at pp.c:23595)
                ExprList:  (at pp.c:23595)
                  ID: name='arg_0x102648ac0' (at pp.c:23595)
                  ID: name='data' (at pp.c:23595)
          Break:  (at pp.c:23597)
      Return:  (at pp.c:23603)
        ID: name='__nesc_result' (at pp.c:23603)
  FuncDef:  (at pp.c:23608)
    Decl: name='Msp430Adc12ImplP__Overflow__default__conversionTimeOverflow', quals=[], storage=['inline', 'static'] (at pp.c:23608)
      FuncDecl: quals=None (at pp.c:23608)
        ParamList:  (at pp.c:23608)
          Decl: name='id', quals=[], storage=[] (at pp.c:23608)
            TypeDecl: declname='id', quals=[] (at pp.c:23608)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Overflow__default__conversionTimeOverflow', quals=[] (at pp.c:23608)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23610)
  FuncDef:  (at pp.c:23614)
    Decl: name='Msp430Adc12ImplP__Overflow__conversionTimeOverflow', quals=[], storage=['static', 'inline'] (at pp.c:23614)
      FuncDecl: quals=None (at pp.c:23614)
        ParamList:  (at pp.c:23614)
          Decl: name='arg_0x102644020', quals=[], storage=[] (at pp.c:23614)
            TypeDecl: declname='arg_0x102644020', quals=[] (at pp.c:23614)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Overflow__conversionTimeOverflow', quals=[] (at pp.c:23614)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23614)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__Overflow__default__conversionTimeOverflow' (at pp.c:23616)
        ExprList:  (at pp.c:23616)
          ID: name='arg_0x102644020' (at pp.c:23616)
  FuncDef:  (at pp.c:23621)
    Decl: name='Msp430Adc12ImplP__Overflow__default__memOverflow', quals=[], storage=['inline', 'static'] (at pp.c:23621)
      FuncDecl: quals=None (at pp.c:23621)
        ParamList:  (at pp.c:23621)
          Decl: name='id', quals=[], storage=[] (at pp.c:23621)
            TypeDecl: declname='id', quals=[] (at pp.c:23621)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Overflow__default__memOverflow', quals=[] (at pp.c:23621)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23623)
  FuncDef:  (at pp.c:23627)
    Decl: name='Msp430Adc12ImplP__Overflow__memOverflow', quals=[], storage=['static', 'inline'] (at pp.c:23627)
      FuncDecl: quals=None (at pp.c:23627)
        ParamList:  (at pp.c:23627)
          Decl: name='arg_0x102644020', quals=[], storage=[] (at pp.c:23627)
            TypeDecl: declname='arg_0x102644020', quals=[] (at pp.c:23627)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Overflow__memOverflow', quals=[] (at pp.c:23627)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23627)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__Overflow__default__memOverflow' (at pp.c:23629)
        ExprList:  (at pp.c:23629)
          ID: name='arg_0x102644020' (at pp.c:23629)
  FuncDef:  (at pp.c:23634)
    Decl: name='Msp430Adc12ImplP__HplAdc12__conversionDone', quals=[], storage=['inline', 'static'] (at pp.c:23634)
      FuncDecl: quals=None (at pp.c:23634)
        ParamList:  (at pp.c:23634)
          Decl: name='iv', quals=[], storage=[] (at pp.c:23634)
            TypeDecl: declname='iv', quals=[] (at pp.c:23634)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__conversionDone', quals=[] (at pp.c:23634)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23635)
      Decl: name='overflow', quals=[], storage=[] (at pp.c:23636)
        TypeDecl: declname='overflow', quals=[] (at pp.c:23636)
          IdentifierType: names=['bool'] (at None)
        ID: name='FALSE' (at pp.c:23636)
      Decl: name='resultBuffer', quals=[], storage=[] (at pp.c:23637)
        PtrDecl: quals=[] (at pp.c:23637)
          TypeDecl: declname='resultBuffer', quals=[] (at pp.c:23637)
            IdentifierType: names=['uint16_t'] (at None)
      If:  (at pp.c:23639)
        BinaryOp: op='<=' (at pp.c:23639)
          ID: name='iv' (at pp.c:23639)
          Constant: type='int', value='4' (at pp.c:23639)
        Compound:  (at pp.c:23639)
          If:  (at pp.c:23640)
            BinaryOp: op='==' (at pp.c:23640)
              ID: name='iv' (at pp.c:23640)
              Constant: type='int', value='2' (at pp.c:23640)
            Compound:  (at pp.c:23640)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__Overflow__memOverflow' (at pp.c:23641)
                ExprList:  (at pp.c:23641)
                  ID: name='Msp430Adc12ImplP__clientID' (at pp.c:23641)
            Compound:  (at pp.c:23643)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__Overflow__conversionTimeOverflow' (at pp.c:23645)
                ExprList:  (at pp.c:23645)
                  ID: name='Msp430Adc12ImplP__clientID' (at pp.c:23645)
          If:  (at pp.c:23647)
            UnaryOp: op='!' (at None)
              StructRef: type='.' (at None)
                FuncCall:  (at None)
                  ID: name='Msp430Adc12ImplP__HplAdc12__getCtl0' (at pp.c:23647)
                ID: name='msc' (at pp.c:23647)
            Compound:  (at pp.c:23647)
              Assignment: op='=' (at pp.c:23648)
                ID: name='overflow' (at pp.c:23648)
                ID: name='TRUE' (at pp.c:23648)
      Switch:  (at pp.c:23652)
        BinaryOp: op='&' (at pp.c:23652)
          ID: name='Msp430Adc12ImplP__state' (at pp.c:23652)
          ID: name='Msp430Adc12ImplP__CONVERSION_MODE_MASK' (at pp.c:23652)
        Compound:  (at pp.c:23653)
          Case:  (at pp.c:23654)
            ID: name='Msp430Adc12ImplP__SINGLE_DATA' (at pp.c:23654)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__stopConversion' (at pp.c:23655)
          FuncCall:  (at None)
            ID: name='Msp430Adc12ImplP__SingleChannel__singleDataReady' (at pp.c:23656)
            ExprList:  (at pp.c:23656)
              ID: name='Msp430Adc12ImplP__clientID' (at pp.c:23656)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__HplAdc12__getMem' (at pp.c:23656)
                ExprList:  (at pp.c:23656)
                  Constant: type='int', value='0' (at pp.c:23656)
          Break:  (at pp.c:23657)
          Case:  (at pp.c:23658)
            ID: name='Msp430Adc12ImplP__SINGLE_DATA_REPEAT' (at pp.c:23658)
            Compound:  (at pp.c:23659)
              Decl: name='repeatContinue', quals=[], storage=[] (at pp.c:23660)
                TypeDecl: declname='repeatContinue', quals=[] (at pp.c:23660)
                  IdentifierType: names=['error_t'] (at None)
              Assignment: op='=' (at pp.c:23663)
                ID: name='repeatContinue' (at pp.c:23663)
                FuncCall:  (at None)
                  ID: name='Msp430Adc12ImplP__SingleChannel__singleDataReady' (at pp.c:23663)
                  ExprList:  (at pp.c:23663)
                    ID: name='Msp430Adc12ImplP__clientID' (at pp.c:23663)
                    FuncCall:  (at None)
                      ID: name='Msp430Adc12ImplP__HplAdc12__getMem' (at pp.c:23664)
                      ExprList:  (at pp.c:23664)
                        Constant: type='int', value='0' (at pp.c:23664)
              If:  (at pp.c:23665)
                BinaryOp: op='!=' (at pp.c:23665)
                  ID: name='repeatContinue' (at pp.c:23665)
                  ID: name='SUCCESS' (at pp.c:23665)
                Compound:  (at pp.c:23665)
                  FuncCall:  (at None)
                    ID: name='Msp430Adc12ImplP__stopConversion' (at pp.c:23666)
              Break:  (at pp.c:23669)
          Case:  (at pp.c:23672)
            ID: name='Msp430Adc12ImplP__MULTI_CHANNEL' (at pp.c:23672)
            Compound:  (at pp.c:23673)
              Decl: name='i', quals=[], storage=[] (at pp.c:23674)
                TypeDecl: declname='i', quals=[] (at pp.c:23674)
                  IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='0' (at pp.c:23674)
              Decl: name='k', quals=[], storage=[] (at pp.c:23676)
                TypeDecl: declname='k', quals=[] (at pp.c:23676)
                  IdentifierType: names=['uint16_t'] (at None)
              Assignment: op='=' (at pp.c:23679)
                ID: name='resultBuffer' (at pp.c:23679)
                BinaryOp: op='+' (at pp.c:23679)
                  ID: name='Msp430Adc12ImplP__resultBufferStart' (at pp.c:23679)
                  ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:23679)
              DoWhile:  (at pp.c:23680)
                BinaryOp: op='<' (at pp.c:23685)
                  UnaryOp: op='++' (at pp.c:23685)
                    ID: name='i' (at pp.c:23685)
                  ID: name='Msp430Adc12ImplP__numChannels' (at pp.c:23685)
                Compound:  (at pp.c:23680)
                  Assignment: op='=' (at pp.c:23681)
                    UnaryOp: op='*' (at pp.c:23681)
                      UnaryOp: op='p++' (at pp.c:23681)
                        ID: name='resultBuffer' (at pp.c:23681)
                    FuncCall:  (at None)
                      ID: name='Msp430Adc12ImplP__HplAdc12__getMem' (at pp.c:23681)
                      ExprList:  (at pp.c:23681)
                        ID: name='i' (at pp.c:23681)
              Assignment: op='+=' (at pp.c:23686)
                ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:23686)
                ID: name='Msp430Adc12ImplP__numChannels' (at pp.c:23686)
              If:  (at pp.c:23687)
                BinaryOp: op='||' (at pp.c:23687)
                  ID: name='overflow' (at pp.c:23687)
                  BinaryOp: op='==' (at pp.c:23687)
                    ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:23687)
                    ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:23687)
                Compound:  (at pp.c:23687)
                  FuncCall:  (at None)
                    ID: name='Msp430Adc12ImplP__stopConversion' (at pp.c:23688)
                  Assignment: op='-=' (at pp.c:23689)
                    ID: name='resultBuffer' (at pp.c:23689)
                    ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:23689)
                  Assignment: op='=' (at pp.c:23690)
                    ID: name='k' (at pp.c:23690)
                    BinaryOp: op='-' (at pp.c:23690)
                      ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:23690)
                      ID: name='Msp430Adc12ImplP__numChannels' (at pp.c:23690)
                  Assignment: op='=' (at pp.c:23691)
                    ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:23691)
                    Constant: type='int', value='0' (at pp.c:23691)
                  FuncCall:  (at None)
                    ID: name='Msp430Adc12ImplP__MultiChannel__dataReady' (at pp.c:23692)
                    ExprList:  (at pp.c:23692)
                      ID: name='Msp430Adc12ImplP__clientID' (at pp.c:23692)
                      ID: name='resultBuffer' (at pp.c:23692)
                      TernaryOp:  (at pp.c:23693)
                        ID: name='overflow' (at pp.c:23693)
                        ID: name='k' (at pp.c:23693)
                        ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:23693)
          Break:  (at pp.c:23696)
          Case:  (at pp.c:23697)
            ID: name='Msp430Adc12ImplP__MULTIPLE_DATA' (at pp.c:23697)
            Compound:  (at pp.c:23698)
              Decl: name='i', quals=[], storage=[] (at pp.c:23699)
                TypeDecl: declname='i', quals=[] (at pp.c:23699)
                  IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='0' (at pp.c:23699)
              Decl: name='length', quals=[], storage=[] (at pp.c:23701)
                TypeDecl: declname='length', quals=[] (at pp.c:23701)
                  IdentifierType: names=['uint16_t'] (at None)
              Decl: name='k', quals=[], storage=[] (at pp.c:23703)
                TypeDecl: declname='k', quals=[] (at pp.c:23703)
                  IdentifierType: names=['uint16_t'] (at None)
              Assignment: op='=' (at pp.c:23706)
                ID: name='resultBuffer' (at pp.c:23706)
                BinaryOp: op='+' (at pp.c:23706)
                  ID: name='Msp430Adc12ImplP__resultBufferStart' (at pp.c:23706)
                  ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:23706)
              If:  (at pp.c:23707)
                BinaryOp: op='>' (at pp.c:23707)
                  BinaryOp: op='-' (at pp.c:23707)
                    ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:23707)
                    ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:23707)
                  Constant: type='int', value='16' (at pp.c:23707)
                Compound:  (at pp.c:23707)
                  Assignment: op='=' (at pp.c:23708)
                    ID: name='length' (at pp.c:23708)
                    Constant: type='int', value='16' (at pp.c:23708)
                Compound:  (at pp.c:23710)
                  Assignment: op='=' (at pp.c:23712)
                    ID: name='length' (at pp.c:23712)
                    BinaryOp: op='-' (at pp.c:23712)
                      ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:23712)
                      ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:23712)
              DoWhile:  (at pp.c:23715)
                BinaryOp: op='<' (at pp.c:23720)
                  UnaryOp: op='++' (at pp.c:23720)
                    ID: name='i' (at pp.c:23720)
                  ID: name='length' (at pp.c:23720)
                Compound:  (at pp.c:23715)
                  Assignment: op='=' (at pp.c:23716)
                    UnaryOp: op='*' (at pp.c:23716)
                      UnaryOp: op='p++' (at pp.c:23716)
                        ID: name='resultBuffer' (at pp.c:23716)
                    FuncCall:  (at None)
                      ID: name='Msp430Adc12ImplP__HplAdc12__getMem' (at pp.c:23716)
                      ExprList:  (at pp.c:23716)
                        ID: name='i' (at pp.c:23716)
              Assignment: op='+=' (at pp.c:23721)
                ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:23721)
                ID: name='length' (at pp.c:23721)
              If:  (at pp.c:23722)
                BinaryOp: op='||' (at pp.c:23722)
                  ID: name='overflow' (at pp.c:23722)
                  BinaryOp: op='==' (at pp.c:23722)
                    ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:23722)
                    ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:23722)
                Compound:  (at pp.c:23722)
                  FuncCall:  (at None)
                    ID: name='Msp430Adc12ImplP__stopConversion' (at pp.c:23723)
                  Assignment: op='-=' (at pp.c:23724)
                    ID: name='resultBuffer' (at pp.c:23724)
                    ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:23724)
                  Assignment: op='=' (at pp.c:23725)
                    ID: name='k' (at pp.c:23725)
                    BinaryOp: op='-' (at pp.c:23725)
                      ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:23725)
                      ID: name='length' (at pp.c:23725)
                  Assignment: op='=' (at pp.c:23726)
                    ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:23726)
                    Constant: type='int', value='0' (at pp.c:23726)
                  FuncCall:  (at None)
                    ID: name='Msp430Adc12ImplP__SingleChannel__multipleDataReady' (at pp.c:23727)
                    ExprList:  (at pp.c:23727)
                      ID: name='Msp430Adc12ImplP__clientID' (at pp.c:23727)
                      ID: name='resultBuffer' (at pp.c:23727)
                      TernaryOp:  (at pp.c:23728)
                        ID: name='overflow' (at pp.c:23728)
                        ID: name='k' (at pp.c:23728)
                        ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:23728)
                Compound:  (at pp.c:23730)
                  If:  (at pp.c:23732)
                    BinaryOp: op='>' (at pp.c:23732)
                      BinaryOp: op='-' (at pp.c:23732)
                        ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:23732)
                        ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:23732)
                      Constant: type='int', value='15' (at pp.c:23732)
                    Compound:  (at pp.c:23732)
                      Return:  (at pp.c:23733)
                    Compound:  (at pp.c:23737)
                      Decl: name='memctl', quals=[], storage=[] (at pp.c:23739)
                        TypeDecl: declname='memctl', quals=[] (at pp.c:23739)
                          IdentifierType: names=['adc12memctl_t'] (at None)
                        FuncCall:  (at None)
                          ID: name='Msp430Adc12ImplP__HplAdc12__getMCtl' (at pp.c:23739)
                          ExprList:  (at pp.c:23739)
                            Constant: type='int', value='0' (at pp.c:23739)
                      Assignment: op='=' (at pp.c:23742)
                        StructRef: type='.' (at pp.c:23742)
                          ID: name='memctl' (at pp.c:23742)
                          ID: name='eos' (at pp.c:23742)
                        Constant: type='int', value='1' (at pp.c:23742)
                      FuncCall:  (at None)
                        ID: name='Msp430Adc12ImplP__HplAdc12__setMCtl' (at pp.c:23743)
                        ExprList:  (at pp.c:23743)
                          BinaryOp: op='-' (at pp.c:23743)
                            ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:23743)
                            ID: name='Msp430Adc12ImplP__resultBufferIndex' (at pp.c:23743)
                          ID: name='memctl' (at pp.c:23743)
          Break:  (at pp.c:23748)
          Case:  (at pp.c:23749)
            ID: name='Msp430Adc12ImplP__MULTIPLE_DATA_REPEAT' (at pp.c:23749)
            Compound:  (at pp.c:23750)
              Decl: name='i', quals=[], storage=[] (at pp.c:23751)
                TypeDecl: declname='i', quals=[] (at pp.c:23751)
                  IdentifierType: names=['uint8_t'] (at None)
                Constant: type='int', value='0' (at pp.c:23751)
              Assignment: op='=' (at pp.c:23754)
                ID: name='resultBuffer' (at pp.c:23754)
                ID: name='Msp430Adc12ImplP__resultBufferStart' (at pp.c:23754)
              DoWhile:  (at pp.c:23755)
                BinaryOp: op='<' (at pp.c:23760)
                  UnaryOp: op='++' (at pp.c:23760)
                    ID: name='i' (at pp.c:23760)
                  ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:23760)
                Compound:  (at pp.c:23755)
                  Assignment: op='=' (at pp.c:23756)
                    UnaryOp: op='*' (at pp.c:23756)
                      UnaryOp: op='p++' (at pp.c:23756)
                        ID: name='resultBuffer' (at pp.c:23756)
                    FuncCall:  (at None)
                      ID: name='Msp430Adc12ImplP__HplAdc12__getMem' (at pp.c:23756)
                      ExprList:  (at pp.c:23756)
                        ID: name='i' (at pp.c:23756)
              Assignment: op='=' (at pp.c:23762)
                ID: name='Msp430Adc12ImplP__resultBufferStart' (at pp.c:23762)
                FuncCall:  (at None)
                  ID: name='Msp430Adc12ImplP__SingleChannel__multipleDataReady' (at pp.c:23762)
                  ExprList:  (at pp.c:23762)
                    ID: name='Msp430Adc12ImplP__clientID' (at pp.c:23762)
                    BinaryOp: op='-' (at pp.c:23763)
                      ID: name='resultBuffer' (at pp.c:23763)
                      ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:23763)
                    TernaryOp:  (at pp.c:23764)
                      ID: name='overflow' (at pp.c:23764)
                      Constant: type='int', value='0' (at pp.c:23764)
                      ID: name='Msp430Adc12ImplP__resultBufferLength' (at pp.c:23764)
              If:  (at pp.c:23765)
                UnaryOp: op='!' (at pp.c:23765)
                  ID: name='Msp430Adc12ImplP__resultBufferStart' (at pp.c:23765)
                Compound:  (at pp.c:23765)
                  FuncCall:  (at None)
                    ID: name='Msp430Adc12ImplP__stopConversion' (at pp.c:23766)
              Break:  (at pp.c:23769)
  FuncDef:  (at pp.c:23775)
    Decl: name='Msp430RefVoltGeneratorP__HplAdc12__conversionDone', quals=[], storage=['inline', 'static'] (at pp.c:23775)
      FuncDecl: quals=None (at pp.c:23775)
        ParamList:  (at pp.c:23775)
          Decl: name='iv', quals=[], storage=[] (at pp.c:23775)
            TypeDecl: declname='iv', quals=[] (at pp.c:23775)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__HplAdc12__conversionDone', quals=[] (at pp.c:23775)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23777)
  FuncDef:  (at pp.c:23781)
    Decl: name='HplAdc12P__HplAdc12__conversionDone', quals=[], storage=['static', 'inline'] (at pp.c:23781)
      FuncDecl: quals=None (at pp.c:23781)
        ParamList:  (at pp.c:23781)
          Decl: name='iv', quals=[], storage=[] (at pp.c:23781)
            TypeDecl: declname='iv', quals=[] (at pp.c:23781)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__conversionDone', quals=[] (at pp.c:23781)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23781)
      FuncCall:  (at None)
        ID: name='Msp430RefVoltGeneratorP__HplAdc12__conversionDone' (at pp.c:23783)
        ExprList:  (at pp.c:23783)
          ID: name='iv' (at pp.c:23783)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__HplAdc12__conversionDone' (at pp.c:23785)
        ExprList:  (at pp.c:23785)
          ID: name='iv' (at pp.c:23785)
  FuncDef:  (at pp.c:23790)
    Decl: name='HplMsp430GeneralIOP__40__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:23790)
      FuncDecl: quals=None (at pp.c:23790)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__40__IO__selectIOFunc', quals=[] (at pp.c:23790)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23792)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:23795)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:23795)
        UnaryOp: op='~' (at pp.c:23795)
          BinaryOp: op='<<' (at pp.c:23795)
            Constant: type='int', value='0x01' (at pp.c:23795)
            Constant: type='int', value='0' (at pp.c:23795)
  FuncDef:  (at pp.c:23799)
    Decl: name='Msp430Adc12ImplP__Port60__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:23799)
      FuncDecl: quals=None (at pp.c:23799)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port60__selectIOFunc', quals=[] (at pp.c:23799)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23799)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__40__IO__selectIOFunc' (at pp.c:23801)
  FuncDef:  (at pp.c:23806)
    Decl: name='HplMsp430GeneralIOP__41__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:23806)
      FuncDecl: quals=None (at pp.c:23806)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__41__IO__selectIOFunc', quals=[] (at pp.c:23806)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23808)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:23811)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:23811)
        UnaryOp: op='~' (at pp.c:23811)
          BinaryOp: op='<<' (at pp.c:23811)
            Constant: type='int', value='0x01' (at pp.c:23811)
            Constant: type='int', value='1' (at pp.c:23811)
  FuncDef:  (at pp.c:23815)
    Decl: name='Msp430Adc12ImplP__Port61__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:23815)
      FuncDecl: quals=None (at pp.c:23815)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port61__selectIOFunc', quals=[] (at pp.c:23815)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23815)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__41__IO__selectIOFunc' (at pp.c:23817)
  FuncDef:  (at pp.c:23822)
    Decl: name='HplMsp430GeneralIOP__42__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:23822)
      FuncDecl: quals=None (at pp.c:23822)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__42__IO__selectIOFunc', quals=[] (at pp.c:23822)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23824)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:23827)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:23827)
        UnaryOp: op='~' (at pp.c:23827)
          BinaryOp: op='<<' (at pp.c:23827)
            Constant: type='int', value='0x01' (at pp.c:23827)
            Constant: type='int', value='2' (at pp.c:23827)
  FuncDef:  (at pp.c:23831)
    Decl: name='Msp430Adc12ImplP__Port62__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:23831)
      FuncDecl: quals=None (at pp.c:23831)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port62__selectIOFunc', quals=[] (at pp.c:23831)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23831)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__42__IO__selectIOFunc' (at pp.c:23833)
  FuncDef:  (at pp.c:23838)
    Decl: name='HplMsp430GeneralIOP__43__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:23838)
      FuncDecl: quals=None (at pp.c:23838)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__43__IO__selectIOFunc', quals=[] (at pp.c:23838)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23840)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:23843)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:23843)
        UnaryOp: op='~' (at pp.c:23843)
          BinaryOp: op='<<' (at pp.c:23843)
            Constant: type='int', value='0x01' (at pp.c:23843)
            Constant: type='int', value='3' (at pp.c:23843)
  FuncDef:  (at pp.c:23847)
    Decl: name='Msp430Adc12ImplP__Port63__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:23847)
      FuncDecl: quals=None (at pp.c:23847)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port63__selectIOFunc', quals=[] (at pp.c:23847)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23847)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__43__IO__selectIOFunc' (at pp.c:23849)
  FuncDef:  (at pp.c:23854)
    Decl: name='HplMsp430GeneralIOP__44__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:23854)
      FuncDecl: quals=None (at pp.c:23854)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__44__IO__selectIOFunc', quals=[] (at pp.c:23854)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23856)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:23859)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:23859)
        UnaryOp: op='~' (at pp.c:23859)
          BinaryOp: op='<<' (at pp.c:23859)
            Constant: type='int', value='0x01' (at pp.c:23859)
            Constant: type='int', value='4' (at pp.c:23859)
  FuncDef:  (at pp.c:23863)
    Decl: name='Msp430Adc12ImplP__Port64__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:23863)
      FuncDecl: quals=None (at pp.c:23863)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port64__selectIOFunc', quals=[] (at pp.c:23863)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23863)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__44__IO__selectIOFunc' (at pp.c:23865)
  FuncDef:  (at pp.c:23870)
    Decl: name='HplMsp430GeneralIOP__45__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:23870)
      FuncDecl: quals=None (at pp.c:23870)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__45__IO__selectIOFunc', quals=[] (at pp.c:23870)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23872)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:23875)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:23875)
        UnaryOp: op='~' (at pp.c:23875)
          BinaryOp: op='<<' (at pp.c:23875)
            Constant: type='int', value='0x01' (at pp.c:23875)
            Constant: type='int', value='5' (at pp.c:23875)
  FuncDef:  (at pp.c:23879)
    Decl: name='Msp430Adc12ImplP__Port65__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:23879)
      FuncDecl: quals=None (at pp.c:23879)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port65__selectIOFunc', quals=[] (at pp.c:23879)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23879)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__45__IO__selectIOFunc' (at pp.c:23881)
  FuncDef:  (at pp.c:23886)
    Decl: name='HplMsp430GeneralIOP__46__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:23886)
      FuncDecl: quals=None (at pp.c:23886)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__46__IO__selectIOFunc', quals=[] (at pp.c:23886)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23888)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:23891)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:23891)
        UnaryOp: op='~' (at pp.c:23891)
          BinaryOp: op='<<' (at pp.c:23891)
            Constant: type='int', value='0x01' (at pp.c:23891)
            Constant: type='int', value='6' (at pp.c:23891)
  FuncDef:  (at pp.c:23895)
    Decl: name='Msp430Adc12ImplP__Port66__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:23895)
      FuncDecl: quals=None (at pp.c:23895)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port66__selectIOFunc', quals=[] (at pp.c:23895)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23895)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__46__IO__selectIOFunc' (at pp.c:23897)
  FuncDef:  (at pp.c:23902)
    Decl: name='HplMsp430GeneralIOP__47__IO__selectIOFunc', quals=[], storage=['inline', 'static'] (at pp.c:23902)
      FuncDecl: quals=None (at pp.c:23902)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__47__IO__selectIOFunc', quals=[] (at pp.c:23902)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23904)
      Assignment: op='&=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:23907)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            Constant: type='int', value='55U' (at pp.c:23907)
        UnaryOp: op='~' (at pp.c:23907)
          BinaryOp: op='<<' (at pp.c:23907)
            Constant: type='int', value='0x01' (at pp.c:23907)
            Constant: type='int', value='7' (at pp.c:23907)
  FuncDef:  (at pp.c:23911)
    Decl: name='Msp430Adc12ImplP__Port67__selectIOFunc', quals=[], storage=['static', 'inline'] (at pp.c:23911)
      FuncDecl: quals=None (at pp.c:23911)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__Port67__selectIOFunc', quals=[] (at pp.c:23911)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23911)
      FuncCall:  (at None)
        ID: name='HplMsp430GeneralIOP__47__IO__selectIOFunc' (at pp.c:23913)
  FuncDef:  (at pp.c:23918)
    Decl: name='HplAdc12P__HplAdc12__resetIFGs', quals=[], storage=['inline', 'static'] (at pp.c:23918)
      FuncDecl: quals=None (at pp.c:23918)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__resetIFGs', quals=[] (at pp.c:23918)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23920)
      Assignment: op='=' (at pp.c:23921)
        ID: name='HplAdc12P__ADC12IV' (at pp.c:23921)
        Constant: type='int', value='0' (at pp.c:23921)
      Assignment: op='=' (at pp.c:23922)
        ID: name='HplAdc12P__ADC12IFG' (at pp.c:23922)
        Constant: type='int', value='0' (at pp.c:23922)
  FuncDef:  (at pp.c:23926)
    Decl: name='Msp430Adc12ImplP__HplAdc12__resetIFGs', quals=[], storage=['static', 'inline'] (at pp.c:23926)
      FuncDecl: quals=None (at pp.c:23926)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__HplAdc12__resetIFGs', quals=[] (at pp.c:23926)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23926)
      FuncCall:  (at None)
        ID: name='HplAdc12P__HplAdc12__resetIFGs' (at pp.c:23928)
  FuncDef:  (at pp.c:23933)
    Decl: name='AdcP__readDone__postTask', quals=[], storage=['static', 'inline'] (at pp.c:23933)
      FuncDecl: quals=None (at pp.c:23933)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcP__readDone__postTask', quals=[] (at pp.c:23933)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:23933)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:23935)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:23935)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:23939)
        ID: name='__nesc_result' (at pp.c:23939)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:23939)
          ExprList:  (at pp.c:23939)
            ID: name='AdcP__readDone' (at pp.c:23939)
      Return:  (at pp.c:23943)
        ID: name='__nesc_result' (at pp.c:23943)
  FuncDef:  (at pp.c:23948)
    Decl: name='AdcP__ReadNow__default__readDone', quals=[], storage=['inline', 'static'] (at pp.c:23948)
      FuncDecl: quals=None (at pp.c:23948)
        ParamList:  (at pp.c:23948)
          Decl: name='client', quals=[], storage=[] (at pp.c:23948)
            TypeDecl: declname='client', quals=[] (at pp.c:23948)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:23948)
            TypeDecl: declname='result', quals=[] (at pp.c:23948)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='val', quals=[], storage=[] (at pp.c:23948)
            TypeDecl: declname='val', quals=[] (at pp.c:23948)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='AdcP__ReadNow__default__readDone', quals=[] (at pp.c:23948)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23950)
  FuncDef:  (at pp.c:23954)
    Decl: name='AdcP__ReadNow__readDone', quals=[], storage=['static', 'inline'] (at pp.c:23954)
      FuncDecl: quals=None (at pp.c:23954)
        ParamList:  (at pp.c:23954)
          Decl: name='arg_0x1025fab18', quals=[], storage=[] (at pp.c:23954)
            TypeDecl: declname='arg_0x1025fab18', quals=[] (at pp.c:23954)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:23954)
            TypeDecl: declname='result', quals=[] (at pp.c:23954)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='val', quals=[], storage=[] (at pp.c:23954)
            TypeDecl: declname='val', quals=[] (at pp.c:23954)
              IdentifierType: names=['AdcP__ReadNow__val_t'] (at None)
        TypeDecl: declname='AdcP__ReadNow__readDone', quals=[] (at pp.c:23954)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23954)
      FuncCall:  (at None)
        ID: name='AdcP__ReadNow__default__readDone' (at pp.c:23956)
        ExprList:  (at pp.c:23956)
          ID: name='arg_0x1025fab18' (at pp.c:23956)
          ID: name='result' (at pp.c:23956)
          ID: name='val' (at pp.c:23956)
  FuncDef:  (at pp.c:23961)
    Decl: name='AdcStreamP__bufferDone__postTask', quals=[], storage=['static', 'inline'] (at pp.c:23961)
      FuncDecl: quals=None (at pp.c:23961)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='AdcStreamP__bufferDone__postTask', quals=[] (at pp.c:23961)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:23961)
      Decl: name='__nesc_result', quals=[], storage=[] (at pp.c:23963)
        TypeDecl: declname='__nesc_result', quals=[] (at pp.c:23963)
          IdentifierType: names=['char', 'unsigned'] (at None)
      Assignment: op='=' (at pp.c:23967)
        ID: name='__nesc_result' (at pp.c:23967)
        FuncCall:  (at None)
          ID: name='SchedulerBasicP__TaskBasic__postTask' (at pp.c:23967)
          ExprList:  (at pp.c:23967)
            ID: name='AdcStreamP__bufferDone' (at pp.c:23967)
      Return:  (at pp.c:23971)
        ID: name='__nesc_result' (at pp.c:23971)
  FuncDef:  (at pp.c:23976)
    Decl: name='__nesc_atomic_start', quals=[], storage=[] (at pp.c:23976)
      FuncDecl: quals=None (at pp.c:23976)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='__nesc_atomic_start', quals=[] (at pp.c:23976)
          IdentifierType: names=['__nesc_atomic_t'] (at None)
    Compound:  (at pp.c:23977)
      Decl: name='result', quals=[], storage=[] (at pp.c:23978)
        TypeDecl: declname='result', quals=[] (at pp.c:23978)
          IdentifierType: names=['__nesc_atomic_t'] (at None)
        BinaryOp: op='!=' (at pp.c:23978)
          BinaryOp: op='&' (at pp.c:23978)
            Compound:  (at pp.c:23978)
              Decl: name='__x', quals=[], storage=[] (at pp.c:23980)
                TypeDecl: declname='__x', quals=[] (at pp.c:23980)
                  IdentifierType: names=['uint16_t'] (at None)
              Assignment: op='=' (at None)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                  ID: name='__x' (at pp.c:23983)
                ID: name='_R2' (at pp.c:23983)
              ID: name='__x' (at pp.c:23983)
            Constant: type='int', value='0x0008' (at pp.c:23987)
          Constant: type='int', value='0' (at pp.c:23987)
      FuncCall:  (at None)
        ID: name='__nesc_disable_interrupt' (at pp.c:23990)
      Return:  (at pp.c:23992)
        ID: name='result' (at pp.c:23992)
  FuncDef:  (at pp.c:23995)
    Decl: name='__nesc_atomic_end', quals=[], storage=[] (at pp.c:23995)
      FuncDecl: quals=None (at pp.c:23995)
        ParamList:  (at pp.c:23995)
          Decl: name='reenable_interrupts', quals=[], storage=[] (at pp.c:23995)
            TypeDecl: declname='reenable_interrupts', quals=[] (at pp.c:23995)
              IdentifierType: names=['__nesc_atomic_t'] (at None)
        TypeDecl: declname='__nesc_atomic_end', quals=[] (at pp.c:23995)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:23996)
      If:  (at pp.c:23998)
        ID: name='reenable_interrupts' (at pp.c:23998)
        Compound:  (at pp.c:23998)
          FuncCall:  (at None)
            ID: name='__nesc_enable_interrupt' (at pp.c:23999)
  FuncDef:  (at pp.c:24004)
    Decl: name='sig_TIMERA0_VECTOR', quals=[], storage=[] (at pp.c:24004)
      FuncDecl: quals=None (at pp.c:24004)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_TIMERA0_VECTOR', quals=[] (at pp.c:24004)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24006)
      FuncCall:  (at None)
        ID: name='Msp430TimerCommonP__VectorTimerA0__fired' (at pp.c:24008)
  FuncDef:  (at pp.c:24012)
    Decl: name='Msp430TimerCapComP__0__Event__fired', quals=[], storage=['static'] (at pp.c:24012)
      FuncDecl: quals=None (at pp.c:24012)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__0__Event__fired', quals=[] (at pp.c:24012)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24013)
      If:  (at pp.c:24014)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__0__Control__getControl' (at pp.c:24014)
          ID: name='cap' (at pp.c:24014)
        Compound:  (at pp.c:24014)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__0__Capture__captured' (at pp.c:24015)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__0__Capture__getEvent' (at pp.c:24015)
        Compound:  (at pp.c:24017)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__0__Compare__fired' (at pp.c:24019)
  FuncDef:  (at pp.c:24024)
    Decl: name='Msp430TimerCapComP__1__Event__fired', quals=[], storage=['static'] (at pp.c:24024)
      FuncDecl: quals=None (at pp.c:24024)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__1__Event__fired', quals=[] (at pp.c:24024)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24025)
      If:  (at pp.c:24026)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__1__Control__getControl' (at pp.c:24026)
          ID: name='cap' (at pp.c:24026)
        Compound:  (at pp.c:24026)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__1__Capture__captured' (at pp.c:24027)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__1__Capture__getEvent' (at pp.c:24027)
        Compound:  (at pp.c:24029)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__1__Compare__fired' (at pp.c:24031)
  FuncDef:  (at pp.c:24036)
    Decl: name='Msp430TimerCapComP__2__Event__fired', quals=[], storage=['static'] (at pp.c:24036)
      FuncDecl: quals=None (at pp.c:24036)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerCapComP__2__Event__fired', quals=[] (at pp.c:24036)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24037)
      If:  (at pp.c:24038)
        StructRef: type='.' (at None)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__2__Control__getControl' (at pp.c:24038)
          ID: name='cap' (at pp.c:24038)
        Compound:  (at pp.c:24038)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__2__Capture__captured' (at pp.c:24039)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='Msp430TimerCapComP__2__Capture__getEvent' (at pp.c:24039)
        Compound:  (at pp.c:24041)
          FuncCall:  (at None)
            ID: name='Msp430TimerCapComP__2__Compare__fired' (at pp.c:24043)
  FuncDef:  (at pp.c:24048)
    Decl: name='sig_TIMERA1_VECTOR', quals=[], storage=[] (at pp.c:24048)
      FuncDecl: quals=None (at pp.c:24048)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_TIMERA1_VECTOR', quals=[] (at pp.c:24048)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24050)
      FuncCall:  (at None)
        ID: name='Msp430TimerCommonP__VectorTimerA1__fired' (at pp.c:24052)
  FuncDef:  (at pp.c:24056)
    Decl: name='sig_TIMERB0_VECTOR', quals=[], storage=[] (at pp.c:24056)
      FuncDecl: quals=None (at pp.c:24056)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_TIMERB0_VECTOR', quals=[] (at pp.c:24056)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24058)
      FuncCall:  (at None)
        ID: name='Msp430TimerCommonP__VectorTimerB0__fired' (at pp.c:24060)
  FuncDef:  (at pp.c:24064)
    Decl: name='Msp430TimerP__1__Event__default__fired', quals=[], storage=['static'] (at pp.c:24064)
      FuncDecl: quals=None (at pp.c:24064)
        ParamList:  (at pp.c:24064)
          Decl: name='n', quals=[], storage=[] (at pp.c:24064)
            TypeDecl: declname='n', quals=[] (at pp.c:24064)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Event__default__fired', quals=[] (at pp.c:24064)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24065)
  FuncDef:  (at pp.c:24069)
    Decl: name='Msp430TimerP__1__Event__fired', quals=[], storage=['static'] (at pp.c:24069)
      FuncDecl: quals=None (at pp.c:24069)
        ParamList:  (at pp.c:24069)
          Decl: name='arg_0x1014afc98', quals=[], storage=[] (at pp.c:24069)
            TypeDecl: declname='arg_0x1014afc98', quals=[] (at pp.c:24069)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Event__fired', quals=[] (at pp.c:24069)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24069)
      Switch:  (at pp.c:24071)
        ID: name='arg_0x1014afc98' (at pp.c:24071)
        Compound:  (at pp.c:24071)
          Case:  (at pp.c:24073)
            Constant: type='int', value='0' (at pp.c:24073)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__3__Event__fired' (at pp.c:24075)
          Break:  (at pp.c:24077)
          Case:  (at pp.c:24079)
            Constant: type='int', value='1' (at pp.c:24079)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__4__Event__fired' (at pp.c:24081)
          Break:  (at pp.c:24083)
          Case:  (at pp.c:24085)
            Constant: type='int', value='2' (at pp.c:24085)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__5__Event__fired' (at pp.c:24087)
          Break:  (at pp.c:24089)
          Case:  (at pp.c:24091)
            Constant: type='int', value='3' (at pp.c:24091)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__6__Event__fired' (at pp.c:24093)
          Break:  (at pp.c:24095)
          Case:  (at pp.c:24097)
            Constant: type='int', value='4' (at pp.c:24097)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__7__Event__fired' (at pp.c:24099)
          Break:  (at pp.c:24101)
          Case:  (at pp.c:24103)
            Constant: type='int', value='5' (at pp.c:24103)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__8__Event__fired' (at pp.c:24105)
          Break:  (at pp.c:24107)
          Case:  (at pp.c:24109)
            Constant: type='int', value='6' (at pp.c:24109)
            FuncCall:  (at None)
              ID: name='Msp430TimerCapComP__9__Event__fired' (at pp.c:24111)
          Break:  (at pp.c:24113)
          Case:  (at pp.c:24115)
            Constant: type='int', value='7' (at pp.c:24115)
            FuncCall:  (at None)
              ID: name='Msp430TimerP__1__Overflow__fired' (at pp.c:24117)
          Break:  (at pp.c:24119)
          Default:  (at pp.c:24121)
            FuncCall:  (at None)
              ID: name='Msp430TimerP__1__Event__default__fired' (at pp.c:24123)
              ExprList:  (at pp.c:24123)
                ID: name='arg_0x1014afc98' (at pp.c:24123)
          Break:  (at pp.c:24125)
  FuncDef:  (at pp.c:24132)
    Decl: name='TransformAlarmC__0__Alarm__startAt', quals=[], storage=['static'] (at pp.c:24132)
      FuncDecl: quals=None (at pp.c:24132)
        ParamList:  (at pp.c:24132)
          Decl: name='t0', quals=[], storage=[] (at pp.c:24132)
            TypeDecl: declname='t0', quals=[] (at pp.c:24132)
              IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:24132)
            TypeDecl: declname='dt', quals=[] (at pp.c:24132)
              IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
        TypeDecl: declname='TransformAlarmC__0__Alarm__startAt', quals=[] (at pp.c:24132)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24133)
      Compound:  (at pp.c:24134)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24134)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24134)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24134)
        Compound:  (at pp.c:24135)
          Assignment: op='=' (at pp.c:24136)
            ID: name='TransformAlarmC__0__m_t0' (at pp.c:24136)
            ID: name='t0' (at pp.c:24136)
          Assignment: op='=' (at pp.c:24137)
            ID: name='TransformAlarmC__0__m_dt' (at pp.c:24137)
            ID: name='dt' (at pp.c:24137)
          FuncCall:  (at None)
            ID: name='TransformAlarmC__0__set_alarm' (at pp.c:24138)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24141)
          ExprList:  (at pp.c:24141)
            ID: name='__nesc_atomic' (at pp.c:24141)
  FuncDef:  (at pp.c:24145)
    Decl: name='TransformAlarmC__0__set_alarm', quals=[], storage=['static'] (at pp.c:24145)
      FuncDecl: quals=None (at pp.c:24145)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__0__set_alarm', quals=[] (at pp.c:24145)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24146)
      Decl: name='now', quals=[], storage=[] (at pp.c:24147)
        TypeDecl: declname='now', quals=[] (at pp.c:24147)
          IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__0__Counter__get' (at pp.c:24147)
      Decl: name='expires', quals=[], storage=[] (at pp.c:24149)
        TypeDecl: declname='expires', quals=[] (at pp.c:24149)
          IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
      Decl: name='remaining', quals=[], storage=[] (at pp.c:24151)
        TypeDecl: declname='remaining', quals=[] (at pp.c:24151)
          IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
      Assignment: op='=' (at pp.c:24156)
        ID: name='expires' (at pp.c:24156)
        BinaryOp: op='+' (at pp.c:24156)
          ID: name='TransformAlarmC__0__m_t0' (at pp.c:24156)
          ID: name='TransformAlarmC__0__m_dt' (at pp.c:24156)
      Assignment: op='=' (at pp.c:24159)
        ID: name='remaining' (at pp.c:24159)
        Cast:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['TransformAlarmC__0__to_size_type'] (at None)
          BinaryOp: op='-' (at pp.c:24159)
            ID: name='expires' (at pp.c:24159)
            ID: name='now' (at pp.c:24159)
      If:  (at pp.c:24162)
        BinaryOp: op='<=' (at pp.c:24162)
          ID: name='TransformAlarmC__0__m_t0' (at pp.c:24162)
          ID: name='now' (at pp.c:24162)
        Compound:  (at pp.c:24163)
          If:  (at pp.c:24164)
            BinaryOp: op='&&' (at pp.c:24164)
              BinaryOp: op='>=' (at pp.c:24164)
                ID: name='expires' (at pp.c:24164)
                ID: name='TransformAlarmC__0__m_t0' (at pp.c:24164)
              BinaryOp: op='<=' (at pp.c:24165)
                ID: name='expires' (at pp.c:24165)
                ID: name='now' (at pp.c:24165)
            Compound:  (at pp.c:24165)
              Assignment: op='=' (at pp.c:24166)
                ID: name='remaining' (at pp.c:24166)
                Constant: type='int', value='0' (at pp.c:24166)
        Compound:  (at pp.c:24169)
          If:  (at pp.c:24170)
            BinaryOp: op='||' (at pp.c:24170)
              BinaryOp: op='>=' (at pp.c:24170)
                ID: name='expires' (at pp.c:24170)
                ID: name='TransformAlarmC__0__m_t0' (at pp.c:24170)
              BinaryOp: op='<=' (at pp.c:24171)
                ID: name='expires' (at pp.c:24171)
                ID: name='now' (at pp.c:24171)
            Compound:  (at pp.c:24171)
              Assignment: op='=' (at pp.c:24172)
                ID: name='remaining' (at pp.c:24172)
                Constant: type='int', value='0' (at pp.c:24172)
      If:  (at pp.c:24176)
        BinaryOp: op='>' (at pp.c:24176)
          ID: name='remaining' (at pp.c:24176)
          ID: name='TransformAlarmC__0__MAX_DELAY' (at pp.c:24176)
        Compound:  (at pp.c:24177)
          Assignment: op='=' (at pp.c:24178)
            ID: name='TransformAlarmC__0__m_t0' (at pp.c:24178)
            BinaryOp: op='+' (at pp.c:24178)
              ID: name='now' (at pp.c:24178)
              ID: name='TransformAlarmC__0__MAX_DELAY' (at pp.c:24178)
          Assignment: op='=' (at pp.c:24179)
            ID: name='TransformAlarmC__0__m_dt' (at pp.c:24179)
            BinaryOp: op='-' (at pp.c:24179)
              ID: name='remaining' (at pp.c:24179)
              ID: name='TransformAlarmC__0__MAX_DELAY' (at pp.c:24179)
          Assignment: op='=' (at pp.c:24180)
            ID: name='remaining' (at pp.c:24180)
            ID: name='TransformAlarmC__0__MAX_DELAY' (at pp.c:24180)
        Compound:  (at pp.c:24183)
          Assignment: op='+=' (at pp.c:24184)
            ID: name='TransformAlarmC__0__m_t0' (at pp.c:24184)
            ID: name='TransformAlarmC__0__m_dt' (at pp.c:24184)
          Assignment: op='=' (at pp.c:24185)
            ID: name='TransformAlarmC__0__m_dt' (at pp.c:24185)
            Constant: type='int', value='0' (at pp.c:24185)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__0__AlarmFrom__startAt' (at pp.c:24187)
        ExprList:  (at None)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__0__from_size_type'] (at None)
              ID: name='now' (at pp.c:24187)
            Constant: type='int', value='0' (at pp.c:24187)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__0__from_size_type'] (at None)
              ID: name='remaining' (at pp.c:24188)
            Constant: type='int', value='0' (at pp.c:24188)
  FuncDef:  (at pp.c:24192)
    Decl: name='TransformCounterC__0__Counter__get', quals=[], storage=['static'] (at pp.c:24192)
      FuncDecl: quals=None (at pp.c:24192)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__0__Counter__get', quals=[] (at pp.c:24192)
          IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
    Compound:  (at pp.c:24193)
      Decl: name='rv', quals=[], storage=[] (at pp.c:24194)
        TypeDecl: declname='rv', quals=[] (at pp.c:24194)
          IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
        Constant: type='int', value='0' (at pp.c:24194)
      Compound:  (at pp.c:24197)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24197)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24197)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24197)
        Compound:  (at pp.c:24198)
          Decl: name='high', quals=[], storage=[] (at pp.c:24199)
            TypeDecl: declname='high', quals=[] (at pp.c:24199)
              IdentifierType: names=['TransformCounterC__0__upper_count_type'] (at None)
            ID: name='TransformCounterC__0__m_upper' (at pp.c:24199)
          Decl: name='low', quals=[], storage=[] (at pp.c:24200)
            TypeDecl: declname='low', quals=[] (at pp.c:24200)
              IdentifierType: names=['TransformCounterC__0__from_size_type'] (at None)
            FuncCall:  (at None)
              ID: name='TransformCounterC__0__CounterFrom__get' (at pp.c:24200)
          If:  (at pp.c:24203)
            FuncCall:  (at None)
              ID: name='TransformCounterC__0__CounterFrom__isOverflowPending' (at pp.c:24203)
            Compound:  (at pp.c:24204)
              UnaryOp: op='p++' (at pp.c:24211)
                ID: name='high' (at pp.c:24211)
              Assignment: op='=' (at pp.c:24212)
                ID: name='low' (at pp.c:24212)
                FuncCall:  (at None)
                  ID: name='TransformCounterC__0__CounterFrom__get' (at pp.c:24212)
          Compound:  (at pp.c:24214)
            Decl: name='high_to', quals=[], storage=[] (at pp.c:24215)
              TypeDecl: declname='high_to', quals=[] (at pp.c:24215)
                IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
              ID: name='high' (at pp.c:24215)
            Decl: name='low_to', quals=[], storage=[] (at pp.c:24216)
              TypeDecl: declname='low_to', quals=[] (at pp.c:24216)
                IdentifierType: names=['TransformCounterC__0__to_size_type'] (at None)
              BinaryOp: op='>>' (at pp.c:24216)
                ID: name='low' (at pp.c:24216)
                ID: name='TransformCounterC__0__LOW_SHIFT_RIGHT' (at pp.c:24216)
            Assignment: op='=' (at pp.c:24219)
              ID: name='rv' (at pp.c:24219)
              BinaryOp: op='|' (at pp.c:24219)
                BinaryOp: op='<<' (at pp.c:24219)
                  ID: name='high_to' (at pp.c:24219)
                  ID: name='TransformCounterC__0__HIGH_SHIFT_LEFT' (at pp.c:24219)
                ID: name='low_to' (at pp.c:24219)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24223)
          ExprList:  (at pp.c:24223)
            ID: name='__nesc_atomic' (at pp.c:24223)
      Return:  (at pp.c:24224)
        ID: name='rv' (at pp.c:24224)
  FuncDef:  (at pp.c:24228)
    Decl: name='Msp430TimerP__1__Timer__get', quals=[], storage=['static'] (at pp.c:24228)
      FuncDecl: quals=None (at pp.c:24228)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430TimerP__1__Timer__get', quals=[] (at pp.c:24228)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:24229)
      If:  (at pp.c:24234)
        Constant: type='int', value='1' (at pp.c:24234)
        Compound:  (at pp.c:24234)
          Compound:  (at pp.c:24237)
            Decl: name='t0', quals=[], storage=[] (at pp.c:24238)
              TypeDecl: declname='t0', quals=[] (at pp.c:24238)
                IdentifierType: names=['uint16_t'] (at None)
            Decl: name='t1', quals=[], storage=[] (at pp.c:24239)
              TypeDecl: declname='t1', quals=[] (at pp.c:24239)
                IdentifierType: names=['uint16_t'] (at None)
              UnaryOp: op='*' (at None)
                Cast:  (at None)
                  Typename: quals=['volatile'] (at None)
                    PtrDecl: quals=[] (at pp.c:24239)
                      TypeDecl: declname=None, quals=['volatile'] (at None)
                        IdentifierType: names=['uint16_t'] (at None)
                  Constant: type='int', value='400U' (at pp.c:24239)
            DoWhile:  (at pp.c:24242)
              BinaryOp: op='!=' (at pp.c:24250)
                ID: name='t0' (at pp.c:24250)
                ID: name='t1' (at pp.c:24250)
              Compound:  (at pp.c:24242)
                Assignment: op='=' (at pp.c:24244)
                  ID: name='t0' (at pp.c:24244)
                  ID: name='t1' (at pp.c:24244)
                Assignment: op='=' (at pp.c:24246)
                  ID: name='t1' (at pp.c:24246)
                  UnaryOp: op='*' (at None)
                    Cast:  (at None)
                      Typename: quals=['volatile'] (at None)
                        PtrDecl: quals=[] (at pp.c:24246)
                          TypeDecl: declname=None, quals=['volatile'] (at None)
                            IdentifierType: names=['uint16_t'] (at None)
                      Constant: type='int', value='400U' (at pp.c:24246)
            Compound:  (at pp.c:24251)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:24252)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:24252)
                  IdentifierType: names=['int', 'unsigned'] (at None)
                ID: name='t1' (at pp.c:24254)
              Return:  (at pp.c:24257)
                ID: name='__nesc_temp' (at pp.c:24257)
        Compound:  (at pp.c:24263)
          Return:  (at pp.c:24264)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:24264)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='400U' (at pp.c:24264)
  FuncDef:  (at pp.c:24269)
    Decl: name='CC2420TransmitP__congestionBackoff', quals=[], storage=['static'] (at pp.c:24269)
      FuncDecl: quals=None (at pp.c:24269)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__congestionBackoff', quals=[] (at pp.c:24269)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24271)
      Compound:  (at pp.c:24272)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24272)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24272)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24272)
        Compound:  (at pp.c:24274)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__RadioBackoff__requestCongestionBackoff' (at pp.c:24275)
            ExprList:  (at pp.c:24275)
              ID: name='CC2420TransmitP__m_msg' (at pp.c:24275)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__BackoffTimer__start' (at pp.c:24276)
            ExprList:  (at pp.c:24276)
              ID: name='CC2420TransmitP__myCongestionBackoff' (at pp.c:24276)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24279)
          ExprList:  (at pp.c:24279)
            ID: name='__nesc_atomic' (at pp.c:24279)
  FuncDef:  (at pp.c:24283)
    Decl: name='RandomMlcgC__Random__rand32', quals=[], storage=['static'] (at pp.c:24283)
      FuncDecl: quals=None (at pp.c:24283)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='RandomMlcgC__Random__rand32', quals=[] (at pp.c:24283)
          IdentifierType: names=['uint32_t'] (at None)
    Compound:  (at pp.c:24285)
      Decl: name='mlcg', quals=[], storage=[] (at pp.c:24286)
        TypeDecl: declname='mlcg', quals=[] (at pp.c:24286)
          IdentifierType: names=['uint32_t'] (at None)
      Decl: name='p', quals=[], storage=[] (at pp.c:24288)
        TypeDecl: declname='p', quals=[] (at pp.c:24288)
          IdentifierType: names=['uint32_t'] (at None)
      Decl: name='q', quals=[], storage=[] (at pp.c:24290)
        TypeDecl: declname='q', quals=[] (at pp.c:24290)
          IdentifierType: names=['uint32_t'] (at None)
      Decl: name='tmpseed', quals=[], storage=[] (at pp.c:24291)
        TypeDecl: declname='tmpseed', quals=[] (at pp.c:24291)
          IdentifierType: names=['uint64_t'] (at None)
      Compound:  (at pp.c:24295)
        Assignment: op='=' (at pp.c:24296)
          ID: name='tmpseed' (at pp.c:24296)
          BinaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['uint64_t'] (at None)
              Constant: type='int', value='33614U' (at pp.c:24296)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['uint64_t'] (at None)
              ID: name='RandomMlcgC__seed' (at pp.c:24296)
        Assignment: op='=' (at pp.c:24297)
          ID: name='q' (at pp.c:24297)
          ID: name='tmpseed' (at pp.c:24297)
        Assignment: op='=' (at pp.c:24298)
          ID: name='q' (at pp.c:24298)
          BinaryOp: op='>>' (at pp.c:24298)
            ID: name='q' (at pp.c:24298)
            Constant: type='int', value='1' (at pp.c:24298)
        Assignment: op='=' (at pp.c:24299)
          ID: name='p' (at pp.c:24299)
          BinaryOp: op='>>' (at pp.c:24299)
            ID: name='tmpseed' (at pp.c:24299)
            Constant: type='int', value='32' (at pp.c:24299)
        Assignment: op='=' (at pp.c:24300)
          ID: name='mlcg' (at pp.c:24300)
          BinaryOp: op='+' (at pp.c:24300)
            ID: name='p' (at pp.c:24300)
            ID: name='q' (at pp.c:24300)
        If:  (at pp.c:24301)
          BinaryOp: op='&' (at pp.c:24301)
            ID: name='mlcg' (at pp.c:24301)
            Constant: type='int', value='0x80000000' (at pp.c:24301)
          Compound:  (at pp.c:24301)
            Assignment: op='=' (at pp.c:24302)
              ID: name='mlcg' (at pp.c:24302)
              BinaryOp: op='&' (at pp.c:24302)
                ID: name='mlcg' (at pp.c:24302)
                Constant: type='int', value='0x7FFFFFFF' (at pp.c:24302)
            UnaryOp: op='p++' (at pp.c:24303)
              ID: name='mlcg' (at pp.c:24303)
        Assignment: op='=' (at pp.c:24305)
          ID: name='RandomMlcgC__seed' (at pp.c:24305)
          ID: name='mlcg' (at pp.c:24305)
      Return:  (at pp.c:24307)
        ID: name='mlcg' (at pp.c:24307)
  FuncDef:  (at pp.c:24311)
    Decl: name='CC2420TransmitP__acquireSpiResource', quals=[], storage=['static'] (at pp.c:24311)
      FuncDecl: quals=None (at pp.c:24311)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__acquireSpiResource', quals=[] (at pp.c:24311)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:24313)
      Decl: name='error', quals=[], storage=[] (at pp.c:24314)
        TypeDecl: declname='error', quals=[] (at pp.c:24314)
          IdentifierType: names=['error_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420TransmitP__SpiResource__immediateRequest' (at pp.c:24314)
      If:  (at pp.c:24317)
        BinaryOp: op='!=' (at pp.c:24317)
          ID: name='error' (at pp.c:24317)
          ID: name='SUCCESS' (at pp.c:24317)
        Compound:  (at pp.c:24317)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__SpiResource__request' (at pp.c:24318)
      Return:  (at pp.c:24320)
        ID: name='error' (at pp.c:24320)
  FuncDef:  (at pp.c:24324)
    Decl: name='CC2420SpiP__Resource__immediateRequest', quals=[], storage=['static'] (at pp.c:24324)
      FuncDecl: quals=None (at pp.c:24324)
        ParamList:  (at pp.c:24324)
          Decl: name='id', quals=[], storage=[] (at pp.c:24324)
            TypeDecl: declname='id', quals=[] (at pp.c:24324)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Resource__immediateRequest', quals=[] (at pp.c:24324)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:24326)
      Decl: name='error', quals=[], storage=[] (at pp.c:24327)
        TypeDecl: declname='error', quals=[] (at pp.c:24327)
          IdentifierType: names=['error_t'] (at None)
      Compound:  (at pp.c:24329)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24329)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24329)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24329)
        Compound:  (at pp.c:24331)
          If:  (at pp.c:24332)
            BinaryOp: op='!=' (at None)
              FuncCall:  (at None)
                ID: name='CC2420SpiP__WorkingState__requestState' (at pp.c:24332)
                ExprList:  (at pp.c:24332)
                  ID: name='CC2420SpiP__S_BUSY' (at pp.c:24332)
              ID: name='SUCCESS' (at pp.c:24332)
            Compound:  (at pp.c:24332)
              Compound:  (at pp.c:24333)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:24334)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:24334)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='EBUSY' (at pp.c:24336)
                Compound:  (at pp.c:24338)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:24340)
                    ExprList:  (at pp.c:24340)
                      ID: name='__nesc_atomic' (at pp.c:24340)
                  Return:  (at pp.c:24342)
                    ID: name='__nesc_temp' (at pp.c:24342)
          If:  (at pp.c:24346)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__SpiResource__isOwner' (at pp.c:24346)
            Compound:  (at pp.c:24346)
              Assignment: op='=' (at pp.c:24347)
                ID: name='CC2420SpiP__m_holder' (at pp.c:24347)
                ID: name='id' (at pp.c:24347)
              Assignment: op='=' (at pp.c:24348)
                ID: name='error' (at pp.c:24348)
                ID: name='SUCCESS' (at pp.c:24348)
            Compound:  (at pp.c:24350)
              If:  (at pp.c:24352)
                BinaryOp: op='==' (at pp.c:24352)
                  Assignment: op='=' (at pp.c:24352)
                    ID: name='error' (at pp.c:24352)
                    FuncCall:  (at None)
                      ID: name='CC2420SpiP__SpiResource__immediateRequest' (at pp.c:24352)
                  ID: name='SUCCESS' (at pp.c:24352)
                Compound:  (at pp.c:24352)
                  Assignment: op='=' (at pp.c:24353)
                    ID: name='CC2420SpiP__m_holder' (at pp.c:24353)
                    ID: name='id' (at pp.c:24353)
                Compound:  (at pp.c:24355)
                  FuncCall:  (at None)
                    ID: name='CC2420SpiP__WorkingState__toIdle' (at pp.c:24356)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24361)
          ExprList:  (at pp.c:24361)
            ID: name='__nesc_atomic' (at pp.c:24361)
      Return:  (at pp.c:24363)
        ID: name='error' (at pp.c:24363)
  FuncDef:  (at pp.c:24367)
    Decl: name='StateImplP__State__requestState', quals=[], storage=['static'] (at pp.c:24367)
      FuncDecl: quals=None (at pp.c:24367)
        ParamList:  (at pp.c:24367)
          Decl: name='id', quals=[], storage=[] (at pp.c:24367)
            TypeDecl: declname='id', quals=[] (at pp.c:24367)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='reqState', quals=[], storage=[] (at pp.c:24367)
            TypeDecl: declname='reqState', quals=[] (at pp.c:24367)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='StateImplP__State__requestState', quals=[] (at pp.c:24367)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:24369)
      Decl: name='returnVal', quals=[], storage=[] (at pp.c:24370)
        TypeDecl: declname='returnVal', quals=[] (at pp.c:24370)
          IdentifierType: names=['error_t'] (at None)
        ID: name='FAIL' (at pp.c:24370)
      Compound:  (at pp.c:24373)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24373)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24373)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24373)
        Compound:  (at pp.c:24375)
          If:  (at pp.c:24376)
            BinaryOp: op='||' (at pp.c:24376)
              BinaryOp: op='==' (at pp.c:24376)
                ID: name='reqState' (at pp.c:24376)
                ID: name='StateImplP__S_IDLE' (at pp.c:24376)
              BinaryOp: op='==' (at pp.c:24376)
                ArrayRef:  (at pp.c:24376)
                  ID: name='StateImplP__state' (at pp.c:24376)
                  ID: name='id' (at pp.c:24376)
                ID: name='StateImplP__S_IDLE' (at pp.c:24376)
            Compound:  (at pp.c:24376)
              Assignment: op='=' (at pp.c:24377)
                ArrayRef:  (at pp.c:24377)
                  ID: name='StateImplP__state' (at pp.c:24377)
                  ID: name='id' (at pp.c:24377)
                ID: name='reqState' (at pp.c:24377)
              Assignment: op='=' (at pp.c:24378)
                ID: name='returnVal' (at pp.c:24378)
                ID: name='SUCCESS' (at pp.c:24378)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24382)
          ExprList:  (at pp.c:24382)
            ID: name='__nesc_atomic' (at pp.c:24382)
      Return:  (at pp.c:24383)
        ID: name='returnVal' (at pp.c:24383)
  FuncDef:  (at pp.c:24387)
    Decl: name='ArbiterP__0__Resource__isOwner', quals=[], storage=['static'] (at pp.c:24387)
      FuncDecl: quals=None (at pp.c:24387)
        ParamList:  (at pp.c:24387)
          Decl: name='id', quals=[], storage=[] (at pp.c:24387)
            TypeDecl: declname='id', quals=[] (at pp.c:24387)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='ArbiterP__0__Resource__isOwner', quals=[] (at pp.c:24387)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:24389)
      Compound:  (at pp.c:24392)
        If:  (at pp.c:24393)
          BinaryOp: op='&&' (at pp.c:24393)
            BinaryOp: op='==' (at pp.c:24393)
              ID: name='ArbiterP__0__resId' (at pp.c:24393)
              ID: name='id' (at pp.c:24393)
            BinaryOp: op='==' (at pp.c:24393)
              ID: name='ArbiterP__0__state' (at pp.c:24393)
              ID: name='ArbiterP__0__RES_BUSY' (at pp.c:24393)
          Compound:  (at pp.c:24393)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:24394)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:24394)
                IdentifierType: names=['char', 'unsigned'] (at None)
              ID: name='TRUE' (at pp.c:24396)
            Return:  (at pp.c:24399)
              ID: name='__nesc_temp' (at pp.c:24399)
          Compound:  (at pp.c:24403)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:24404)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:24404)
                IdentifierType: names=['char', 'unsigned'] (at None)
              ID: name='FALSE' (at pp.c:24406)
            Return:  (at pp.c:24409)
              ID: name='__nesc_temp' (at pp.c:24409)
  FuncDef:  (at pp.c:24415)
    Decl: name='ArbiterP__0__ResourceDefaultOwner__release', quals=[], storage=['static'] (at pp.c:24415)
      FuncDecl: quals=None (at pp.c:24415)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__ResourceDefaultOwner__release', quals=[] (at pp.c:24415)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:24417)
      Compound:  (at pp.c:24420)
        If:  (at pp.c:24421)
          BinaryOp: op='==' (at pp.c:24421)
            ID: name='ArbiterP__0__resId' (at pp.c:24421)
            ID: name='ArbiterP__0__default_owner_id' (at pp.c:24421)
          Compound:  (at pp.c:24421)
            If:  (at pp.c:24422)
              BinaryOp: op='==' (at pp.c:24422)
                ID: name='ArbiterP__0__state' (at pp.c:24422)
                ID: name='ArbiterP__0__RES_GRANTING' (at pp.c:24422)
              Compound:  (at pp.c:24422)
                FuncCall:  (at None)
                  ID: name='ArbiterP__0__grantedTask__postTask' (at pp.c:24423)
                Compound:  (at pp.c:24424)
                  Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:24425)
                    TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:24425)
                      IdentifierType: names=['char', 'unsigned'] (at None)
                    ID: name='SUCCESS' (at pp.c:24427)
                  Return:  (at pp.c:24430)
                    ID: name='__nesc_temp' (at pp.c:24430)
              Compound:  (at pp.c:24433)
                If:  (at pp.c:24435)
                  BinaryOp: op='==' (at pp.c:24435)
                    ID: name='ArbiterP__0__state' (at pp.c:24435)
                    ID: name='ArbiterP__0__RES_IMM_GRANTING' (at pp.c:24435)
                  Compound:  (at pp.c:24435)
                    Assignment: op='=' (at pp.c:24436)
                      ID: name='ArbiterP__0__resId' (at pp.c:24436)
                      ID: name='ArbiterP__0__reqResId' (at pp.c:24436)
                    Assignment: op='=' (at pp.c:24437)
                      ID: name='ArbiterP__0__state' (at pp.c:24437)
                      ID: name='ArbiterP__0__RES_BUSY' (at pp.c:24437)
                    Compound:  (at pp.c:24438)
                      Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:24439)
                        TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:24439)
                          IdentifierType: names=['char', 'unsigned'] (at None)
                        ID: name='SUCCESS' (at pp.c:24441)
                      Return:  (at pp.c:24444)
                        ID: name='__nesc_temp' (at pp.c:24444)
      Return:  (at pp.c:24451)
        ID: name='FAIL' (at pp.c:24451)
  FuncDef:  (at pp.c:24455)
    Decl: name='SchedulerBasicP__TaskBasic__postTask', quals=[], storage=['static'] (at pp.c:24455)
      FuncDecl: quals=None (at pp.c:24455)
        ParamList:  (at pp.c:24455)
          Decl: name='id', quals=[], storage=[] (at pp.c:24455)
            TypeDecl: declname='id', quals=[] (at pp.c:24455)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SchedulerBasicP__TaskBasic__postTask', quals=[] (at pp.c:24455)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:24456)
      Compound:  (at pp.c:24457)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24457)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24457)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24457)
        Compound:  (at pp.c:24459)
          Compound:  (at pp.c:24461)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:24462)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:24462)
                IdentifierType: names=['char', 'unsigned'] (at None)
              TernaryOp:  (at None)
                FuncCall:  (at None)
                  ID: name='SchedulerBasicP__pushTask' (at pp.c:24464)
                  ExprList:  (at pp.c:24464)
                    ID: name='id' (at pp.c:24464)
                ID: name='SUCCESS' (at pp.c:24464)
                ID: name='EBUSY' (at pp.c:24464)
            Compound:  (at pp.c:24466)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_end' (at pp.c:24468)
                ExprList:  (at pp.c:24468)
                  ID: name='__nesc_atomic' (at pp.c:24468)
              Return:  (at pp.c:24470)
                ID: name='__nesc_temp' (at pp.c:24470)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24475)
          ExprList:  (at pp.c:24475)
            ID: name='__nesc_atomic' (at pp.c:24475)
  FuncDef:  (at pp.c:24479)
    Decl: name='HplMsp430Usart0P__Usart__setModeSpi', quals=[], storage=['static'] (at pp.c:24479)
      FuncDecl: quals=None (at pp.c:24479)
        ParamList:  (at pp.c:24479)
          Decl: name='config', quals=[], storage=[] (at pp.c:24479)
            PtrDecl: quals=[] (at pp.c:24479)
              TypeDecl: declname='config', quals=[] (at pp.c:24479)
                IdentifierType: names=['msp430_spi_union_config_t'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__setModeSpi', quals=[] (at pp.c:24479)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24481)
      Compound:  (at pp.c:24483)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24483)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24483)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24483)
        Compound:  (at pp.c:24485)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart0P__Usart__resetUsart' (at pp.c:24486)
            ExprList:  (at pp.c:24486)
              ID: name='TRUE' (at pp.c:24486)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart0P__HplI2C__clearModeI2C' (at pp.c:24487)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart0P__Usart__disableUart' (at pp.c:24488)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart0P__configSpi' (at pp.c:24489)
            ExprList:  (at pp.c:24489)
              ID: name='config' (at pp.c:24489)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart0P__Usart__enableSpi' (at pp.c:24490)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart0P__Usart__resetUsart' (at pp.c:24491)
            ExprList:  (at pp.c:24491)
              ID: name='FALSE' (at pp.c:24491)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart0P__Usart__clrIntr' (at pp.c:24492)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart0P__Usart__disableIntr' (at pp.c:24493)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24496)
          ExprList:  (at pp.c:24496)
            ID: name='__nesc_atomic' (at pp.c:24496)
      Return:  (at pp.c:24497)
  FuncDef:  (at pp.c:24501)
    Decl: name='CC2420SpiP__Resource__request', quals=[], storage=['static'] (at pp.c:24501)
      FuncDecl: quals=None (at pp.c:24501)
        ParamList:  (at pp.c:24501)
          Decl: name='id', quals=[], storage=[] (at pp.c:24501)
            TypeDecl: declname='id', quals=[] (at pp.c:24501)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Resource__request', quals=[] (at pp.c:24501)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:24503)
      Compound:  (at pp.c:24505)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24505)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24505)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24505)
        Compound:  (at pp.c:24507)
          If:  (at pp.c:24508)
            BinaryOp: op='==' (at None)
              FuncCall:  (at None)
                ID: name='CC2420SpiP__WorkingState__requestState' (at pp.c:24508)
                ExprList:  (at pp.c:24508)
                  ID: name='CC2420SpiP__S_BUSY' (at pp.c:24508)
              ID: name='SUCCESS' (at pp.c:24508)
            Compound:  (at pp.c:24508)
              Assignment: op='=' (at pp.c:24509)
                ID: name='CC2420SpiP__m_holder' (at pp.c:24509)
                ID: name='id' (at pp.c:24509)
              If:  (at pp.c:24510)
                FuncCall:  (at None)
                  ID: name='CC2420SpiP__SpiResource__isOwner' (at pp.c:24510)
                Compound:  (at pp.c:24510)
                  FuncCall:  (at None)
                    ID: name='CC2420SpiP__grant__postTask' (at pp.c:24511)
                Compound:  (at pp.c:24513)
                  FuncCall:  (at None)
                    ID: name='CC2420SpiP__SpiResource__request' (at pp.c:24514)
            Compound:  (at pp.c:24517)
              Assignment: op='|=' (at pp.c:24518)
                ID: name='CC2420SpiP__m_requests' (at pp.c:24518)
                BinaryOp: op='<<' (at pp.c:24518)
                  Constant: type='int', value='1' (at pp.c:24518)
                  ID: name='id' (at pp.c:24518)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24522)
          ExprList:  (at pp.c:24522)
            ID: name='__nesc_atomic' (at pp.c:24522)
      Return:  (at pp.c:24523)
        ID: name='SUCCESS' (at pp.c:24523)
  FuncDef:  (at pp.c:24527)
    Decl: name='CC2420TransmitP__attemptSend', quals=[], storage=['static'] (at pp.c:24527)
      FuncDecl: quals=None (at pp.c:24527)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__attemptSend', quals=[] (at pp.c:24527)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24529)
      Decl: name='status', quals=[], storage=[] (at pp.c:24530)
        TypeDecl: declname='status', quals=[] (at pp.c:24530)
          IdentifierType: names=['uint8_t'] (at None)
      Decl: name='congestion', quals=[], storage=[] (at pp.c:24531)
        TypeDecl: declname='congestion', quals=[] (at pp.c:24531)
          IdentifierType: names=['bool'] (at None)
        ID: name='TRUE' (at pp.c:24531)
      Compound:  (at pp.c:24533)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24533)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24533)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24533)
        Compound:  (at pp.c:24535)
          If:  (at pp.c:24536)
            BinaryOp: op='==' (at pp.c:24536)
              ID: name='CC2420TransmitP__m_state' (at pp.c:24536)
              ID: name='CC2420TransmitP__S_CANCEL' (at pp.c:24536)
            Compound:  (at pp.c:24536)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__SFLUSHTX__strobe' (at pp.c:24537)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__releaseSpiResource' (at pp.c:24538)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__CSN__set' (at pp.c:24539)
              Assignment: op='=' (at pp.c:24540)
                ID: name='CC2420TransmitP__m_state' (at pp.c:24540)
                ID: name='CC2420TransmitP__S_STARTED' (at pp.c:24540)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__Send__sendDone' (at pp.c:24541)
                ExprList:  (at pp.c:24541)
                  ID: name='CC2420TransmitP__m_msg' (at pp.c:24541)
                  ID: name='ECANCEL' (at pp.c:24541)
              Compound:  (at pp.c:24542)
                FuncCall:  (at None)
                  ID: name='__nesc_atomic_end' (at pp.c:24544)
                  ExprList:  (at pp.c:24544)
                    ID: name='__nesc_atomic' (at pp.c:24544)
                Return:  (at pp.c:24546)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__CSN__clr' (at pp.c:24554)
          Assignment: op='=' (at pp.c:24555)
            ID: name='status' (at pp.c:24555)
            TernaryOp:  (at pp.c:24555)
              ID: name='CC2420TransmitP__m_cca' (at pp.c:24555)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__STXONCCA__strobe' (at pp.c:24555)
              FuncCall:  (at None)
                ID: name='CC2420TransmitP__STXON__strobe' (at pp.c:24555)
          If:  (at pp.c:24556)
            UnaryOp: op='!' (at pp.c:24556)
              BinaryOp: op='&' (at pp.c:24556)
                ID: name='status' (at pp.c:24556)
                ID: name='CC2420_STATUS_TX_ACTIVE' (at pp.c:24556)
            Compound:  (at pp.c:24556)
              Assignment: op='=' (at pp.c:24557)
                ID: name='status' (at pp.c:24557)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__SNOP__strobe' (at pp.c:24557)
              If:  (at pp.c:24558)
                BinaryOp: op='&' (at pp.c:24558)
                  ID: name='status' (at pp.c:24558)
                  ID: name='CC2420_STATUS_TX_ACTIVE' (at pp.c:24558)
                Compound:  (at pp.c:24558)
                  Assignment: op='=' (at pp.c:24559)
                    ID: name='congestion' (at pp.c:24559)
                    ID: name='FALSE' (at pp.c:24559)
          Assignment: op='=' (at pp.c:24563)
            ID: name='CC2420TransmitP__m_state' (at pp.c:24563)
            TernaryOp:  (at pp.c:24563)
              ID: name='congestion' (at pp.c:24563)
              ID: name='CC2420TransmitP__S_SAMPLE_CCA' (at pp.c:24563)
              ID: name='CC2420TransmitP__S_SFD' (at pp.c:24563)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__CSN__set' (at pp.c:24564)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24567)
          ExprList:  (at pp.c:24567)
            ID: name='__nesc_atomic' (at pp.c:24567)
      If:  (at pp.c:24569)
        ID: name='congestion' (at pp.c:24569)
        Compound:  (at pp.c:24569)
          Assignment: op='=' (at pp.c:24570)
            ID: name='CC2420TransmitP__totalCcaChecks' (at pp.c:24570)
            Constant: type='int', value='0' (at pp.c:24570)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__releaseSpiResource' (at pp.c:24571)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__congestionBackoff' (at pp.c:24572)
        Compound:  (at pp.c:24576)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__BackoffTimer__start' (at pp.c:24577)
            ExprList:  (at pp.c:24577)
              ID: name='CC2420TransmitP__CC2420_ABORT_PERIOD' (at pp.c:24577)
  FuncDef:  (at pp.c:24582)
    Decl: name='CC2420SpiP__Strobe__strobe', quals=[], storage=['static'] (at pp.c:24582)
      FuncDecl: quals=None (at pp.c:24582)
        ParamList:  (at pp.c:24582)
          Decl: name='addr', quals=[], storage=[] (at pp.c:24582)
            TypeDecl: declname='addr', quals=[] (at pp.c:24582)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Strobe__strobe', quals=[] (at pp.c:24582)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:24584)
      Compound:  (at pp.c:24585)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24585)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24585)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24585)
        Compound:  (at pp.c:24587)
          If:  (at pp.c:24588)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__WorkingState__isIdle' (at pp.c:24588)
            Compound:  (at pp.c:24588)
              Compound:  (at pp.c:24589)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:24590)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:24590)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  Constant: type='int', value='0' (at pp.c:24592)
                Compound:  (at pp.c:24594)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:24596)
                    ExprList:  (at pp.c:24596)
                      ID: name='__nesc_atomic' (at pp.c:24596)
                  Return:  (at pp.c:24598)
                    ID: name='__nesc_temp' (at pp.c:24598)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24604)
          ExprList:  (at pp.c:24604)
            ID: name='__nesc_atomic' (at pp.c:24604)
      Return:  (at pp.c:24606)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__SpiByte__write' (at pp.c:24606)
          ExprList:  (at pp.c:24606)
            ID: name='addr' (at pp.c:24606)
  FuncDef:  (at pp.c:24610)
    Decl: name='StateImplP__State__isState', quals=[], storage=['static'] (at pp.c:24610)
      FuncDecl: quals=None (at pp.c:24610)
        ParamList:  (at pp.c:24610)
          Decl: name='id', quals=[], storage=[] (at pp.c:24610)
            TypeDecl: declname='id', quals=[] (at pp.c:24610)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='myState', quals=[], storage=[] (at pp.c:24610)
            TypeDecl: declname='myState', quals=[] (at pp.c:24610)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='StateImplP__State__isState', quals=[] (at pp.c:24610)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:24612)
      Decl: name='isState', quals=[], storage=[] (at pp.c:24613)
        TypeDecl: declname='isState', quals=[] (at pp.c:24613)
          IdentifierType: names=['bool'] (at None)
      Compound:  (at pp.c:24616)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24616)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24616)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24616)
        Assignment: op='=' (at pp.c:24618)
          ID: name='isState' (at pp.c:24618)
          BinaryOp: op='==' (at pp.c:24618)
            ArrayRef:  (at pp.c:24618)
              ID: name='StateImplP__state' (at pp.c:24618)
              ID: name='id' (at pp.c:24618)
            ID: name='myState' (at pp.c:24618)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24620)
          ExprList:  (at pp.c:24620)
            ID: name='__nesc_atomic' (at pp.c:24620)
      Return:  (at pp.c:24621)
        ID: name='isState' (at pp.c:24621)
  FuncDef:  (at pp.c:24625)
    Decl: name='Msp430SpiNoDmaP__0__SpiByte__write', quals=[], storage=['static'] (at pp.c:24625)
      FuncDecl: quals=None (at pp.c:24625)
        ParamList:  (at pp.c:24625)
          Decl: name='tx', quals=[], storage=[] (at pp.c:24625)
            TypeDecl: declname='tx', quals=[] (at pp.c:24625)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__SpiByte__write', quals=[] (at pp.c:24625)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:24627)
      Decl: name='byte', quals=[], storage=[] (at pp.c:24628)
        TypeDecl: declname='byte', quals=[] (at pp.c:24628)
          IdentifierType: names=['uint8_t'] (at None)
      FuncCall:  (at None)
        ID: name='Msp430SpiNoDmaP__0__Usart__tx' (at pp.c:24631)
        ExprList:  (at pp.c:24631)
          ID: name='tx' (at pp.c:24631)
      While:  (at pp.c:24632)
        UnaryOp: op='!' (at None)
          FuncCall:  (at None)
            ID: name='Msp430SpiNoDmaP__0__Usart__isRxIntrPending' (at pp.c:24632)
      FuncCall:  (at None)
        ID: name='Msp430SpiNoDmaP__0__Usart__clrRxIntr' (at pp.c:24633)
      Assignment: op='=' (at pp.c:24634)
        ID: name='byte' (at pp.c:24634)
        FuncCall:  (at None)
          ID: name='Msp430SpiNoDmaP__0__Usart__rx' (at pp.c:24634)
      Return:  (at pp.c:24636)
        ID: name='byte' (at pp.c:24636)
  FuncDef:  (at pp.c:24640)
    Decl: name='CC2420SpiP__Resource__release', quals=[], storage=['static'] (at pp.c:24640)
      FuncDecl: quals=None (at pp.c:24640)
        ParamList:  (at pp.c:24640)
          Decl: name='id', quals=[], storage=[] (at pp.c:24640)
            TypeDecl: declname='id', quals=[] (at pp.c:24640)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Resource__release', quals=[] (at pp.c:24640)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:24642)
      Decl: name='i', quals=[], storage=[] (at pp.c:24643)
        TypeDecl: declname='i', quals=[] (at pp.c:24643)
          IdentifierType: names=['uint8_t'] (at None)
      Compound:  (at pp.c:24646)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24646)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24646)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24646)
        Compound:  (at pp.c:24648)
          If:  (at pp.c:24649)
            BinaryOp: op='!=' (at pp.c:24649)
              ID: name='CC2420SpiP__m_holder' (at pp.c:24649)
              ID: name='id' (at pp.c:24649)
            Compound:  (at pp.c:24649)
              Compound:  (at pp.c:24650)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:24651)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:24651)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='FAIL' (at pp.c:24653)
                Compound:  (at pp.c:24655)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:24657)
                    ExprList:  (at pp.c:24657)
                      ID: name='__nesc_atomic' (at pp.c:24657)
                  Return:  (at pp.c:24659)
                    ID: name='__nesc_temp' (at pp.c:24659)
          Assignment: op='=' (at pp.c:24664)
            ID: name='CC2420SpiP__m_holder' (at pp.c:24664)
            ID: name='CC2420SpiP__NO_HOLDER' (at pp.c:24664)
          If:  (at pp.c:24665)
            UnaryOp: op='!' (at pp.c:24665)
              ID: name='CC2420SpiP__m_requests' (at pp.c:24665)
            Compound:  (at pp.c:24665)
              FuncCall:  (at None)
                ID: name='CC2420SpiP__WorkingState__toIdle' (at pp.c:24666)
              FuncCall:  (at None)
                ID: name='CC2420SpiP__attemptRelease' (at pp.c:24667)
            Compound:  (at pp.c:24669)
              For:  (at pp.c:24670)
                Assignment: op='=' (at pp.c:24670)
                  ID: name='i' (at pp.c:24670)
                  BinaryOp: op='+' (at pp.c:24670)
                    ID: name='CC2420SpiP__m_holder' (at pp.c:24670)
                    Constant: type='int', value='1' (at pp.c:24670)
                UnaryOp: op='p++' (at pp.c:24670)
                  ID: name='i' (at pp.c:24670)
                Compound:  (at pp.c:24670)
                  Assignment: op='%=' (at pp.c:24671)
                    ID: name='i' (at pp.c:24671)
                    ID: name='CC2420SpiP__RESOURCE_COUNT' (at pp.c:24671)
                  If:  (at pp.c:24673)
                    BinaryOp: op='&' (at pp.c:24673)
                      ID: name='CC2420SpiP__m_requests' (at pp.c:24673)
                      BinaryOp: op='<<' (at pp.c:24673)
                        Constant: type='int', value='1' (at pp.c:24673)
                        ID: name='i' (at pp.c:24673)
                    Compound:  (at pp.c:24673)
                      Assignment: op='=' (at pp.c:24674)
                        ID: name='CC2420SpiP__m_holder' (at pp.c:24674)
                        ID: name='i' (at pp.c:24674)
                      Assignment: op='&=' (at pp.c:24675)
                        ID: name='CC2420SpiP__m_requests' (at pp.c:24675)
                        UnaryOp: op='~' (at pp.c:24675)
                          BinaryOp: op='<<' (at pp.c:24675)
                            Constant: type='int', value='1' (at pp.c:24675)
                            ID: name='i' (at pp.c:24675)
                      FuncCall:  (at None)
                        ID: name='CC2420SpiP__grant__postTask' (at pp.c:24676)
                      Compound:  (at pp.c:24677)
                        Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:24678)
                          TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:24678)
                            IdentifierType: names=['char', 'unsigned'] (at None)
                          ID: name='SUCCESS' (at pp.c:24680)
                        Compound:  (at pp.c:24682)
                          FuncCall:  (at None)
                            ID: name='__nesc_atomic_end' (at pp.c:24684)
                            ExprList:  (at pp.c:24684)
                              ID: name='__nesc_atomic' (at pp.c:24684)
                          Return:  (at pp.c:24686)
                            ID: name='__nesc_temp' (at pp.c:24686)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24694)
          ExprList:  (at pp.c:24694)
            ID: name='__nesc_atomic' (at pp.c:24694)
      Return:  (at pp.c:24696)
        ID: name='SUCCESS' (at pp.c:24696)
  FuncDef:  (at pp.c:24700)
    Decl: name='CC2420SpiP__attemptRelease', quals=[], storage=['static'] (at pp.c:24700)
      FuncDecl: quals=None (at pp.c:24700)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420SpiP__attemptRelease', quals=[] (at pp.c:24700)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:24702)
      If:  (at pp.c:24705)
        BinaryOp: op='||' (at pp.c:24707)
          BinaryOp: op='||' (at pp.c:24707)
            BinaryOp: op='>' (at pp.c:24707)
              ID: name='CC2420SpiP__m_requests' (at pp.c:24707)
              Constant: type='int', value='0' (at pp.c:24707)
            BinaryOp: op='!=' (at pp.c:24708)
              ID: name='CC2420SpiP__m_holder' (at pp.c:24708)
              ID: name='CC2420SpiP__NO_HOLDER' (at pp.c:24708)
          UnaryOp: op='!' (at None)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__WorkingState__isIdle' (at pp.c:24709)
        Compound:  (at pp.c:24709)
          Return:  (at pp.c:24710)
            ID: name='FAIL' (at pp.c:24710)
      Assignment: op='=' (at pp.c:24713)
        ID: name='CC2420SpiP__release' (at pp.c:24713)
        ID: name='TRUE' (at pp.c:24713)
      FuncCall:  (at None)
        ID: name='CC2420SpiP__ChipSpiResource__releasing' (at pp.c:24714)
      Compound:  (at pp.c:24717)
        If:  (at pp.c:24718)
          ID: name='CC2420SpiP__release' (at pp.c:24718)
          Compound:  (at pp.c:24718)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__SpiResource__release' (at pp.c:24719)
            Compound:  (at pp.c:24720)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:24721)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:24721)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='SUCCESS' (at pp.c:24723)
              Return:  (at pp.c:24726)
                ID: name='__nesc_temp' (at pp.c:24726)
      Return:  (at pp.c:24730)
        ID: name='EBUSY' (at pp.c:24730)
  FuncDef:  (at pp.c:24734)
    Decl: name='HplMsp430Usart0P__Usart__disableSpi', quals=[], storage=['static'] (at pp.c:24734)
      FuncDecl: quals=None (at pp.c:24734)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430Usart0P__Usart__disableSpi', quals=[] (at pp.c:24734)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24736)
      Compound:  (at pp.c:24739)
        Assignment: op='&=' (at pp.c:24740)
          ID: name='HplMsp430Usart0P__ME1' (at pp.c:24740)
          UnaryOp: op='~' (at pp.c:24740)
            BinaryOp: op='<<' (at pp.c:24740)
              Constant: type='int', value='1' (at pp.c:24740)
              Constant: type='int', value='6' (at pp.c:24740)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__SIMO__selectIOFunc' (at pp.c:24741)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__SOMI__selectIOFunc' (at pp.c:24742)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__UCLK__selectIOFunc' (at pp.c:24743)
  FuncDef:  (at pp.c:24748)
    Decl: name='HplMsp430GeneralIOP__26__IO__set', quals=[], storage=['static'] (at pp.c:24748)
      FuncDecl: quals=None (at pp.c:24748)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__26__IO__set', quals=[] (at pp.c:24748)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24750)
      Compound:  (at pp.c:24752)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24752)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24752)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24752)
        Assignment: op='|=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:24754)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:24754)
          BinaryOp: op='<<' (at pp.c:24754)
            Constant: type='int', value='0x01' (at pp.c:24754)
            Constant: type='int', value='2' (at pp.c:24754)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24756)
          ExprList:  (at pp.c:24756)
            ID: name='__nesc_atomic' (at pp.c:24756)
  FuncDef:  (at pp.c:24760)
    Decl: name='HplMsp430GeneralIOP__26__IO__clr', quals=[], storage=['static'] (at pp.c:24760)
      FuncDecl: quals=None (at pp.c:24760)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__26__IO__clr', quals=[] (at pp.c:24760)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24762)
      Compound:  (at pp.c:24764)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24764)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24764)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24764)
        Assignment: op='&=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:24766)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:24766)
          UnaryOp: op='~' (at pp.c:24766)
            BinaryOp: op='<<' (at pp.c:24766)
              Constant: type='int', value='0x01' (at pp.c:24766)
              Constant: type='int', value='2' (at pp.c:24766)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24768)
          ExprList:  (at pp.c:24768)
            ID: name='__nesc_atomic' (at pp.c:24768)
  FuncDef:  (at pp.c:24772)
    Decl: name='CC2420TransmitP__signalDone', quals=[], storage=['static'] (at pp.c:24772)
      FuncDecl: quals=None (at pp.c:24772)
        ParamList:  (at pp.c:24772)
          Decl: name='err', quals=[], storage=[] (at pp.c:24772)
            TypeDecl: declname='err', quals=[] (at pp.c:24772)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420TransmitP__signalDone', quals=[] (at pp.c:24772)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24774)
      Assignment: op='=' (at pp.c:24777)
        ID: name='CC2420TransmitP__m_state' (at pp.c:24777)
        ID: name='CC2420TransmitP__S_STARTED' (at pp.c:24777)
      Assignment: op='=' (at pp.c:24778)
        ID: name='CC2420TransmitP__abortSpiRelease' (at pp.c:24778)
        ID: name='FALSE' (at pp.c:24778)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__ChipSpiResource__attemptRelease' (at pp.c:24779)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__Send__sendDone' (at pp.c:24780)
        ExprList:  (at pp.c:24780)
          ID: name='CC2420TransmitP__m_msg' (at pp.c:24780)
          ID: name='err' (at pp.c:24780)
  FuncDef:  (at pp.c:24784)
    Decl: name='GpioCaptureC__0__enableCapture', quals=[], storage=['static'] (at pp.c:24784)
      FuncDecl: quals=None (at pp.c:24784)
        ParamList:  (at pp.c:24784)
          Decl: name='mode', quals=[], storage=[] (at pp.c:24784)
            TypeDecl: declname='mode', quals=[] (at pp.c:24784)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='GpioCaptureC__0__enableCapture', quals=[] (at pp.c:24784)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:24786)
      Compound:  (at pp.c:24789)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__Msp430TimerControl__disableEvents' (at pp.c:24790)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__GeneralIO__selectModuleFunc' (at pp.c:24791)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__Msp430TimerControl__clearPendingInterrupt' (at pp.c:24792)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__Msp430Capture__clearOverflow' (at pp.c:24793)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__Msp430TimerControl__setControlAsCapture' (at pp.c:24794)
          ExprList:  (at pp.c:24794)
            ID: name='mode' (at pp.c:24794)
        FuncCall:  (at None)
          ID: name='GpioCaptureC__0__Msp430TimerControl__enableEvents' (at pp.c:24795)
      Return:  (at pp.c:24797)
        ID: name='SUCCESS' (at pp.c:24797)
  FuncDef:  (at pp.c:24801)
    Decl: name='HplMsp430GeneralIOP__30__IO__clr', quals=[], storage=['static'] (at pp.c:24801)
      FuncDecl: quals=None (at pp.c:24801)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__30__IO__clr', quals=[] (at pp.c:24801)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24803)
      Compound:  (at pp.c:24805)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24805)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24805)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24805)
        Assignment: op='&=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:24807)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:24807)
          UnaryOp: op='~' (at pp.c:24807)
            BinaryOp: op='<<' (at pp.c:24807)
              Constant: type='int', value='0x01' (at pp.c:24807)
              Constant: type='int', value='6' (at pp.c:24807)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24809)
          ExprList:  (at pp.c:24809)
            ID: name='__nesc_atomic' (at pp.c:24809)
  FuncDef:  (at pp.c:24813)
    Decl: name='HplMsp430GeneralIOP__30__IO__set', quals=[], storage=['static'] (at pp.c:24813)
      FuncDecl: quals=None (at pp.c:24813)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__30__IO__set', quals=[] (at pp.c:24813)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24815)
      Compound:  (at pp.c:24817)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24817)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24817)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24817)
        Assignment: op='|=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:24819)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:24819)
          BinaryOp: op='<<' (at pp.c:24819)
            Constant: type='int', value='0x01' (at pp.c:24819)
            Constant: type='int', value='6' (at pp.c:24819)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24821)
          ExprList:  (at pp.c:24821)
            ID: name='__nesc_atomic' (at pp.c:24821)
  FuncDef:  (at pp.c:24825)
    Decl: name='CC2420SpiP__Ram__write', quals=[], storage=['static'] (at pp.c:24825)
      FuncDecl: quals=None (at pp.c:24825)
        ParamList:  (at pp.c:24825)
          Decl: name='addr', quals=[], storage=[] (at pp.c:24825)
            TypeDecl: declname='addr', quals=[] (at pp.c:24825)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='offset', quals=[], storage=[] (at pp.c:24825)
            TypeDecl: declname='offset', quals=[] (at pp.c:24825)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:24826)
            PtrDecl: quals=[] (at pp.c:24826)
              TypeDecl: declname='data', quals=[] (at pp.c:24826)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:24827)
            TypeDecl: declname='len', quals=[] (at pp.c:24827)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Ram__write', quals=[] (at pp.c:24825)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:24829)
      Decl: name='status', quals=[], storage=[] (at pp.c:24831)
        TypeDecl: declname='status', quals=[] (at pp.c:24831)
          IdentifierType: names=['cc2420_status_t'] (at None)
        Constant: type='int', value='0' (at pp.c:24831)
      Decl: name='tmpLen', quals=[], storage=[] (at pp.c:24832)
        TypeDecl: declname='tmpLen', quals=[] (at pp.c:24832)
          IdentifierType: names=['uint8_t'] (at None)
        ID: name='len' (at pp.c:24832)
      Decl: name='tmpData', quals=[], storage=[] (at pp.c:24833)
        PtrDecl: quals=[] (at pp.c:24833)
          TypeDecl: declname='tmpData', quals=[] (at pp.c:24833)
            IdentifierType: names=['uint8_t'] (at None)
        Cast:  (at None)
          Typename: quals=[] (at None)
            PtrDecl: quals=[] (at pp.c:24833)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['uint8_t'] (at None)
          ID: name='data' (at pp.c:24833)
      Compound:  (at pp.c:24835)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24835)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24835)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24835)
        Compound:  (at pp.c:24837)
          If:  (at pp.c:24838)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__WorkingState__isIdle' (at pp.c:24838)
            Compound:  (at pp.c:24838)
              Compound:  (at pp.c:24839)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:24840)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:24840)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='status' (at pp.c:24842)
                Compound:  (at pp.c:24844)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:24846)
                    ExprList:  (at pp.c:24846)
                      ID: name='__nesc_atomic' (at pp.c:24846)
                  Return:  (at pp.c:24848)
                    ID: name='__nesc_temp' (at pp.c:24848)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24854)
          ExprList:  (at pp.c:24854)
            ID: name='__nesc_atomic' (at pp.c:24854)
      Assignment: op='+=' (at pp.c:24856)
        ID: name='addr' (at pp.c:24856)
        ID: name='offset' (at pp.c:24856)
      Assignment: op='=' (at pp.c:24858)
        ID: name='status' (at pp.c:24858)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__SpiByte__write' (at pp.c:24858)
          ExprList:  (at pp.c:24858)
            BinaryOp: op='|' (at pp.c:24858)
              ID: name='addr' (at pp.c:24858)
              Constant: type='int', value='0x80' (at pp.c:24858)
      FuncCall:  (at None)
        ID: name='CC2420SpiP__SpiByte__write' (at pp.c:24859)
        ExprList:  (at pp.c:24859)
          BinaryOp: op='&' (at pp.c:24859)
            BinaryOp: op='>>' (at pp.c:24859)
              ID: name='addr' (at pp.c:24859)
              Constant: type='int', value='1' (at pp.c:24859)
            Constant: type='int', value='0xc0' (at pp.c:24859)
      For:  (at pp.c:24860)
        ID: name='len' (at pp.c:24860)
        UnaryOp: op='p--' (at pp.c:24860)
          ID: name='len' (at pp.c:24860)
        Compound:  (at pp.c:24860)
          FuncCall:  (at None)
            ID: name='CC2420SpiP__SpiByte__write' (at pp.c:24861)
            ExprList:  (at pp.c:24861)
              ArrayRef:  (at pp.c:24861)
                ID: name='tmpData' (at pp.c:24861)
                BinaryOp: op='-' (at pp.c:24861)
                  ID: name='tmpLen' (at pp.c:24861)
                  ID: name='len' (at pp.c:24861)
      Return:  (at pp.c:24864)
        ID: name='status' (at pp.c:24864)
  FuncDef:  (at pp.c:24868)
    Decl: name='CC2420PacketP__PacketTimeStamp32khz__clear', quals=[], storage=['static'] (at pp.c:24868)
      FuncDecl: quals=None (at pp.c:24868)
        ParamList:  (at pp.c:24868)
          Decl: name='msg', quals=[], storage=[] (at pp.c:24868)
            PtrDecl: quals=[] (at pp.c:24868)
              TypeDecl: declname='msg', quals=[] (at pp.c:24868)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420PacketP__PacketTimeStamp32khz__clear', quals=[] (at pp.c:24868)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24869)
      FuncCall:  (at None)
        ID: name='__nesc_hton_int8' (at pp.c:24870)
        ExprList:  (at None)
          StructRef: type='.' (at None)
            StructRef: type='->' (at None)
              FuncCall:  (at None)
                ID: name='CC2420PacketP__CC2420PacketBody__getMetadata' (at pp.c:24870)
                ExprList:  (at pp.c:24870)
                  ID: name='msg' (at pp.c:24870)
              ID: name='timesync' (at pp.c:24870)
            ID: name='nxdata' (at pp.c:24870)
          ID: name='FALSE' (at pp.c:24870)
      FuncCall:  (at None)
        ID: name='__nesc_hton_uint32' (at pp.c:24871)
        ExprList:  (at None)
          StructRef: type='.' (at None)
            StructRef: type='->' (at None)
              FuncCall:  (at None)
                ID: name='CC2420PacketP__CC2420PacketBody__getMetadata' (at pp.c:24871)
                ExprList:  (at pp.c:24871)
                  ID: name='msg' (at pp.c:24871)
              ID: name='timestamp' (at pp.c:24871)
            ID: name='nxdata' (at pp.c:24871)
          ID: name='CC2420_INVALID_TIMESTAMP' (at pp.c:24871)
  FuncDef:  (at pp.c:24875)
    Decl: name='TransformAlarmC__1__set_alarm', quals=[], storage=['static'] (at pp.c:24875)
      FuncDecl: quals=None (at pp.c:24875)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__1__set_alarm', quals=[] (at pp.c:24875)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:24876)
      Decl: name='now', quals=[], storage=[] (at pp.c:24877)
        TypeDecl: declname='now', quals=[] (at pp.c:24877)
          IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__1__Counter__get' (at pp.c:24877)
      Decl: name='expires', quals=[], storage=[] (at pp.c:24879)
        TypeDecl: declname='expires', quals=[] (at pp.c:24879)
          IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
      Decl: name='remaining', quals=[], storage=[] (at pp.c:24881)
        TypeDecl: declname='remaining', quals=[] (at pp.c:24881)
          IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
      Assignment: op='=' (at pp.c:24886)
        ID: name='expires' (at pp.c:24886)
        BinaryOp: op='+' (at pp.c:24886)
          ID: name='TransformAlarmC__1__m_t0' (at pp.c:24886)
          ID: name='TransformAlarmC__1__m_dt' (at pp.c:24886)
      Assignment: op='=' (at pp.c:24889)
        ID: name='remaining' (at pp.c:24889)
        Cast:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
          BinaryOp: op='-' (at pp.c:24889)
            ID: name='expires' (at pp.c:24889)
            ID: name='now' (at pp.c:24889)
      If:  (at pp.c:24892)
        BinaryOp: op='<=' (at pp.c:24892)
          ID: name='TransformAlarmC__1__m_t0' (at pp.c:24892)
          ID: name='now' (at pp.c:24892)
        Compound:  (at pp.c:24893)
          If:  (at pp.c:24894)
            BinaryOp: op='&&' (at pp.c:24894)
              BinaryOp: op='>=' (at pp.c:24894)
                ID: name='expires' (at pp.c:24894)
                ID: name='TransformAlarmC__1__m_t0' (at pp.c:24894)
              BinaryOp: op='<=' (at pp.c:24895)
                ID: name='expires' (at pp.c:24895)
                ID: name='now' (at pp.c:24895)
            Compound:  (at pp.c:24895)
              Assignment: op='=' (at pp.c:24896)
                ID: name='remaining' (at pp.c:24896)
                Constant: type='int', value='0' (at pp.c:24896)
        Compound:  (at pp.c:24899)
          If:  (at pp.c:24900)
            BinaryOp: op='||' (at pp.c:24900)
              BinaryOp: op='>=' (at pp.c:24900)
                ID: name='expires' (at pp.c:24900)
                ID: name='TransformAlarmC__1__m_t0' (at pp.c:24900)
              BinaryOp: op='<=' (at pp.c:24901)
                ID: name='expires' (at pp.c:24901)
                ID: name='now' (at pp.c:24901)
            Compound:  (at pp.c:24901)
              Assignment: op='=' (at pp.c:24902)
                ID: name='remaining' (at pp.c:24902)
                Constant: type='int', value='0' (at pp.c:24902)
      If:  (at pp.c:24906)
        BinaryOp: op='>' (at pp.c:24906)
          ID: name='remaining' (at pp.c:24906)
          ID: name='TransformAlarmC__1__MAX_DELAY' (at pp.c:24906)
        Compound:  (at pp.c:24907)
          Assignment: op='=' (at pp.c:24908)
            ID: name='TransformAlarmC__1__m_t0' (at pp.c:24908)
            BinaryOp: op='+' (at pp.c:24908)
              ID: name='now' (at pp.c:24908)
              ID: name='TransformAlarmC__1__MAX_DELAY' (at pp.c:24908)
          Assignment: op='=' (at pp.c:24909)
            ID: name='TransformAlarmC__1__m_dt' (at pp.c:24909)
            BinaryOp: op='-' (at pp.c:24909)
              ID: name='remaining' (at pp.c:24909)
              ID: name='TransformAlarmC__1__MAX_DELAY' (at pp.c:24909)
          Assignment: op='=' (at pp.c:24910)
            ID: name='remaining' (at pp.c:24910)
            ID: name='TransformAlarmC__1__MAX_DELAY' (at pp.c:24910)
        Compound:  (at pp.c:24913)
          Assignment: op='+=' (at pp.c:24914)
            ID: name='TransformAlarmC__1__m_t0' (at pp.c:24914)
            ID: name='TransformAlarmC__1__m_dt' (at pp.c:24914)
          Assignment: op='=' (at pp.c:24915)
            ID: name='TransformAlarmC__1__m_dt' (at pp.c:24915)
            Constant: type='int', value='0' (at pp.c:24915)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__1__AlarmFrom__startAt' (at pp.c:24917)
        ExprList:  (at None)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__1__from_size_type'] (at None)
              ID: name='now' (at pp.c:24917)
            Constant: type='int', value='5' (at pp.c:24917)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__1__from_size_type'] (at None)
              ID: name='remaining' (at pp.c:24918)
            Constant: type='int', value='5' (at pp.c:24918)
  FuncDef:  (at pp.c:24922)
    Decl: name='TransformCounterC__1__Counter__get', quals=[], storage=['static'] (at pp.c:24922)
      FuncDecl: quals=None (at pp.c:24922)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformCounterC__1__Counter__get', quals=[] (at pp.c:24922)
          IdentifierType: names=['TransformCounterC__1__to_size_type'] (at None)
    Compound:  (at pp.c:24923)
      Decl: name='rv', quals=[], storage=[] (at pp.c:24924)
        TypeDecl: declname='rv', quals=[] (at pp.c:24924)
          IdentifierType: names=['TransformCounterC__1__to_size_type'] (at None)
        Constant: type='int', value='0' (at pp.c:24924)
      Compound:  (at pp.c:24927)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24927)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24927)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24927)
        Compound:  (at pp.c:24928)
          Decl: name='high', quals=[], storage=[] (at pp.c:24929)
            TypeDecl: declname='high', quals=[] (at pp.c:24929)
              IdentifierType: names=['TransformCounterC__1__upper_count_type'] (at None)
            ID: name='TransformCounterC__1__m_upper' (at pp.c:24929)
          Decl: name='low', quals=[], storage=[] (at pp.c:24930)
            TypeDecl: declname='low', quals=[] (at pp.c:24930)
              IdentifierType: names=['TransformCounterC__1__from_size_type'] (at None)
            FuncCall:  (at None)
              ID: name='TransformCounterC__1__CounterFrom__get' (at pp.c:24930)
          If:  (at pp.c:24933)
            FuncCall:  (at None)
              ID: name='TransformCounterC__1__CounterFrom__isOverflowPending' (at pp.c:24933)
            Compound:  (at pp.c:24934)
              UnaryOp: op='p++' (at pp.c:24941)
                ID: name='high' (at pp.c:24941)
              Assignment: op='=' (at pp.c:24942)
                ID: name='low' (at pp.c:24942)
                FuncCall:  (at None)
                  ID: name='TransformCounterC__1__CounterFrom__get' (at pp.c:24942)
          Compound:  (at pp.c:24944)
            Decl: name='high_to', quals=[], storage=[] (at pp.c:24945)
              TypeDecl: declname='high_to', quals=[] (at pp.c:24945)
                IdentifierType: names=['TransformCounterC__1__to_size_type'] (at None)
              ID: name='high' (at pp.c:24945)
            Decl: name='low_to', quals=[], storage=[] (at pp.c:24946)
              TypeDecl: declname='low_to', quals=[] (at pp.c:24946)
                IdentifierType: names=['TransformCounterC__1__to_size_type'] (at None)
              BinaryOp: op='>>' (at pp.c:24946)
                ID: name='low' (at pp.c:24946)
                ID: name='TransformCounterC__1__LOW_SHIFT_RIGHT' (at pp.c:24946)
            Assignment: op='=' (at pp.c:24949)
              ID: name='rv' (at pp.c:24949)
              BinaryOp: op='|' (at pp.c:24949)
                BinaryOp: op='<<' (at pp.c:24949)
                  ID: name='high_to' (at pp.c:24949)
                  ID: name='TransformCounterC__1__HIGH_SHIFT_LEFT' (at pp.c:24949)
                ID: name='low_to' (at pp.c:24949)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:24953)
          ExprList:  (at pp.c:24953)
            ID: name='__nesc_atomic' (at pp.c:24953)
      Return:  (at pp.c:24954)
        ID: name='rv' (at pp.c:24954)
  FuncDef:  (at pp.c:24958)
    Decl: name='Msp430Adc12ImplP__SingleChannel__getData', quals=[], storage=['static'] (at pp.c:24958)
      FuncDecl: quals=None (at pp.c:24958)
        ParamList:  (at pp.c:24958)
          Decl: name='id', quals=[], storage=[] (at pp.c:24958)
            TypeDecl: declname='id', quals=[] (at pp.c:24958)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__getData', quals=[] (at pp.c:24958)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:24959)
      Compound:  (at pp.c:24960)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:24960)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:24960)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:24960)
        Compound:  (at pp.c:24962)
          If:  (at pp.c:24963)
            BinaryOp: op='==' (at None)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__ADCArbiterInfo__userId' (at pp.c:24963)
              ID: name='id' (at pp.c:24963)
            Compound:  (at pp.c:24963)
              If:  (at pp.c:24964)
                BinaryOp: op='&&' (at pp.c:24964)
                  BinaryOp: op='&' (at pp.c:24964)
                    ID: name='Msp430Adc12ImplP__state' (at pp.c:24964)
                    ID: name='Msp430Adc12ImplP__MULTIPLE_DATA_REPEAT' (at pp.c:24964)
                  UnaryOp: op='!' (at pp.c:24964)
                    ID: name='Msp430Adc12ImplP__resultBufferStart' (at pp.c:24964)
                Compound:  (at pp.c:24965)
                  Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:24966)
                    TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:24966)
                      IdentifierType: names=['char', 'unsigned'] (at None)
                    ID: name='EINVAL' (at pp.c:24968)
                  Compound:  (at pp.c:24970)
                    FuncCall:  (at None)
                      ID: name='__nesc_atomic_end' (at pp.c:24972)
                      ExprList:  (at pp.c:24972)
                        ID: name='__nesc_atomic' (at pp.c:24972)
                    Return:  (at pp.c:24974)
                      ID: name='__nesc_temp' (at pp.c:24974)
              If:  (at pp.c:24978)
                BinaryOp: op='&' (at pp.c:24978)
                  ID: name='Msp430Adc12ImplP__state' (at pp.c:24978)
                  ID: name='Msp430Adc12ImplP__ADC_BUSY' (at pp.c:24978)
                Compound:  (at pp.c:24979)
                  Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:24980)
                    TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:24980)
                      IdentifierType: names=['char', 'unsigned'] (at None)
                    ID: name='EBUSY' (at pp.c:24982)
                  Compound:  (at pp.c:24984)
                    FuncCall:  (at None)
                      ID: name='__nesc_atomic_end' (at pp.c:24986)
                      ExprList:  (at pp.c:24986)
                        ID: name='__nesc_atomic' (at pp.c:24986)
                    Return:  (at pp.c:24988)
                      ID: name='__nesc_temp' (at pp.c:24988)
              Assignment: op='|=' (at pp.c:24992)
                ID: name='Msp430Adc12ImplP__state' (at pp.c:24992)
                ID: name='Msp430Adc12ImplP__ADC_BUSY' (at pp.c:24992)
              Assignment: op='=' (at pp.c:24993)
                ID: name='Msp430Adc12ImplP__clientID' (at pp.c:24993)
                ID: name='id' (at pp.c:24993)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__configureAdcPin' (at pp.c:24994)
                ExprList:  (at None)
                  StructRef: type='.' (at None)
                    FuncCall:  (at None)
                      ID: name='Msp430Adc12ImplP__HplAdc12__getMCtl' (at pp.c:24994)
                      ExprList:  (at pp.c:24994)
                        Constant: type='int', value='0' (at pp.c:24994)
                    ID: name='inch' (at pp.c:24994)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__HplAdc12__startConversion' (at pp.c:24995)
              If:  (at pp.c:24996)
                BinaryOp: op='&' (at pp.c:24996)
                  ID: name='Msp430Adc12ImplP__state' (at pp.c:24996)
                  ID: name='Msp430Adc12ImplP__USE_TIMERA' (at pp.c:24996)
                Compound:  (at pp.c:24996)
                  FuncCall:  (at None)
                    ID: name='Msp430Adc12ImplP__startTimerA' (at pp.c:24997)
              Compound:  (at pp.c:25000)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:25001)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:25001)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='SUCCESS' (at pp.c:25003)
                Compound:  (at pp.c:25005)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:25007)
                    ExprList:  (at pp.c:25007)
                      ID: name='__nesc_atomic' (at pp.c:25007)
                  Return:  (at pp.c:25009)
                    ID: name='__nesc_temp' (at pp.c:25009)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:25015)
          ExprList:  (at pp.c:25015)
            ID: name='__nesc_atomic' (at pp.c:25015)
      Return:  (at pp.c:25017)
        ID: name='FAIL' (at pp.c:25017)
  FuncDef:  (at pp.c:25021)
    Decl: name='SimpleArbiterP__0__ArbiterInfo__userId', quals=[], storage=['static'] (at pp.c:25021)
      FuncDecl: quals=None (at pp.c:25021)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__ArbiterInfo__userId', quals=[] (at pp.c:25021)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:25023)
      Compound:  (at pp.c:25026)
        If:  (at pp.c:25027)
          BinaryOp: op='!=' (at pp.c:25027)
            ID: name='SimpleArbiterP__0__state' (at pp.c:25027)
            ID: name='SimpleArbiterP__0__RES_BUSY' (at pp.c:25027)
          Compound:  (at pp.c:25028)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:25029)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:25029)
                IdentifierType: names=['char', 'unsigned'] (at None)
              ID: name='SimpleArbiterP__0__NO_RES' (at pp.c:25031)
            Return:  (at pp.c:25034)
              ID: name='__nesc_temp' (at pp.c:25034)
        Compound:  (at pp.c:25037)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:25038)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:25038)
              IdentifierType: names=['char', 'unsigned'] (at None)
            ID: name='SimpleArbiterP__0__resId' (at pp.c:25040)
          Return:  (at pp.c:25043)
            ID: name='__nesc_temp' (at pp.c:25043)
  FuncDef:  (at pp.c:25049)
    Decl: name='Msp430TimerP__0__Timer__setMode', quals=[], storage=['static'] (at pp.c:25049)
      FuncDecl: quals=None (at pp.c:25049)
        ParamList:  (at pp.c:25049)
          Decl: name='mode', quals=[], storage=[] (at pp.c:25049)
            TypeDecl: declname='mode', quals=[] (at pp.c:25049)
              IdentifierType: names=['int'] (at None)
        TypeDecl: declname='Msp430TimerP__0__Timer__setMode', quals=[] (at pp.c:25049)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25050)
      Assignment: op='=' (at None)
        UnaryOp: op='*' (at None)
          Cast:  (at None)
            Typename: quals=['volatile'] (at None)
              PtrDecl: quals=[] (at pp.c:25051)
                TypeDecl: declname=None, quals=['volatile'] (at None)
                  IdentifierType: names=['uint16_t'] (at None)
            Constant: type='int', value='352U' (at pp.c:25051)
        BinaryOp: op='|' (at None)
          BinaryOp: op='&' (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=['volatile'] (at None)
                  PtrDecl: quals=[] (at pp.c:25051)
                    TypeDecl: declname=None, quals=['volatile'] (at None)
                      IdentifierType: names=['uint16_t'] (at None)
                Constant: type='int', value='352U' (at pp.c:25051)
            UnaryOp: op='~' (at pp.c:25051)
              BinaryOp: op='|' (at pp.c:25051)
                Constant: type='int', value='0x0020' (at pp.c:25051)
                Constant: type='int', value='0x0010' (at pp.c:25051)
          BinaryOp: op='&' (at pp.c:25051)
            BinaryOp: op='<<' (at pp.c:25051)
              ID: name='mode' (at pp.c:25051)
              Constant: type='int', value='4' (at pp.c:25051)
            BinaryOp: op='|' (at pp.c:25051)
              Constant: type='int', value='0x0020' (at pp.c:25051)
              Constant: type='int', value='0x0010' (at pp.c:25051)
  FuncDef:  (at pp.c:25055)
    Decl: name='TransformAlarmC__2__set_alarm', quals=[], storage=['static'] (at pp.c:25055)
      FuncDecl: quals=None (at pp.c:25055)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='TransformAlarmC__2__set_alarm', quals=[] (at pp.c:25055)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25056)
      Decl: name='now', quals=[], storage=[] (at pp.c:25057)
        TypeDecl: declname='now', quals=[] (at pp.c:25057)
          IdentifierType: names=['TransformAlarmC__2__to_size_type'] (at None)
        FuncCall:  (at None)
          ID: name='TransformAlarmC__2__Counter__get' (at pp.c:25057)
      Decl: name='expires', quals=[], storage=[] (at pp.c:25059)
        TypeDecl: declname='expires', quals=[] (at pp.c:25059)
          IdentifierType: names=['TransformAlarmC__2__to_size_type'] (at None)
      Decl: name='remaining', quals=[], storage=[] (at pp.c:25061)
        TypeDecl: declname='remaining', quals=[] (at pp.c:25061)
          IdentifierType: names=['TransformAlarmC__2__to_size_type'] (at None)
      Assignment: op='=' (at pp.c:25066)
        ID: name='expires' (at pp.c:25066)
        BinaryOp: op='+' (at pp.c:25066)
          ID: name='TransformAlarmC__2__m_t0' (at pp.c:25066)
          ID: name='TransformAlarmC__2__m_dt' (at pp.c:25066)
      Assignment: op='=' (at pp.c:25069)
        ID: name='remaining' (at pp.c:25069)
        Cast:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['TransformAlarmC__2__to_size_type'] (at None)
          BinaryOp: op='-' (at pp.c:25069)
            ID: name='expires' (at pp.c:25069)
            ID: name='now' (at pp.c:25069)
      If:  (at pp.c:25072)
        BinaryOp: op='<=' (at pp.c:25072)
          ID: name='TransformAlarmC__2__m_t0' (at pp.c:25072)
          ID: name='now' (at pp.c:25072)
        Compound:  (at pp.c:25073)
          If:  (at pp.c:25074)
            BinaryOp: op='&&' (at pp.c:25074)
              BinaryOp: op='>=' (at pp.c:25074)
                ID: name='expires' (at pp.c:25074)
                ID: name='TransformAlarmC__2__m_t0' (at pp.c:25074)
              BinaryOp: op='<=' (at pp.c:25075)
                ID: name='expires' (at pp.c:25075)
                ID: name='now' (at pp.c:25075)
            Compound:  (at pp.c:25075)
              Assignment: op='=' (at pp.c:25076)
                ID: name='remaining' (at pp.c:25076)
                Constant: type='int', value='0' (at pp.c:25076)
        Compound:  (at pp.c:25079)
          If:  (at pp.c:25080)
            BinaryOp: op='||' (at pp.c:25080)
              BinaryOp: op='>=' (at pp.c:25080)
                ID: name='expires' (at pp.c:25080)
                ID: name='TransformAlarmC__2__m_t0' (at pp.c:25080)
              BinaryOp: op='<=' (at pp.c:25081)
                ID: name='expires' (at pp.c:25081)
                ID: name='now' (at pp.c:25081)
            Compound:  (at pp.c:25081)
              Assignment: op='=' (at pp.c:25082)
                ID: name='remaining' (at pp.c:25082)
                Constant: type='int', value='0' (at pp.c:25082)
      If:  (at pp.c:25086)
        BinaryOp: op='>' (at pp.c:25086)
          ID: name='remaining' (at pp.c:25086)
          ID: name='TransformAlarmC__2__MAX_DELAY' (at pp.c:25086)
        Compound:  (at pp.c:25087)
          Assignment: op='=' (at pp.c:25088)
            ID: name='TransformAlarmC__2__m_t0' (at pp.c:25088)
            BinaryOp: op='+' (at pp.c:25088)
              ID: name='now' (at pp.c:25088)
              ID: name='TransformAlarmC__2__MAX_DELAY' (at pp.c:25088)
          Assignment: op='=' (at pp.c:25089)
            ID: name='TransformAlarmC__2__m_dt' (at pp.c:25089)
            BinaryOp: op='-' (at pp.c:25089)
              ID: name='remaining' (at pp.c:25089)
              ID: name='TransformAlarmC__2__MAX_DELAY' (at pp.c:25089)
          Assignment: op='=' (at pp.c:25090)
            ID: name='remaining' (at pp.c:25090)
            ID: name='TransformAlarmC__2__MAX_DELAY' (at pp.c:25090)
        Compound:  (at pp.c:25093)
          Assignment: op='+=' (at pp.c:25094)
            ID: name='TransformAlarmC__2__m_t0' (at pp.c:25094)
            ID: name='TransformAlarmC__2__m_dt' (at pp.c:25094)
          Assignment: op='=' (at pp.c:25095)
            ID: name='TransformAlarmC__2__m_dt' (at pp.c:25095)
            Constant: type='int', value='0' (at pp.c:25095)
      FuncCall:  (at None)
        ID: name='TransformAlarmC__2__AlarmFrom__startAt' (at pp.c:25097)
        ExprList:  (at None)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__2__from_size_type'] (at None)
              ID: name='now' (at pp.c:25097)
            Constant: type='int', value='5' (at pp.c:25097)
          BinaryOp: op='<<' (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['TransformAlarmC__2__from_size_type'] (at None)
              ID: name='remaining' (at pp.c:25098)
            Constant: type='int', value='5' (at pp.c:25098)
  FuncDef:  (at pp.c:25102)
    Decl: name='sig_TIMERB1_VECTOR', quals=[], storage=[] (at pp.c:25102)
      FuncDecl: quals=None (at pp.c:25102)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_TIMERB1_VECTOR', quals=[] (at pp.c:25102)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25104)
      FuncCall:  (at None)
        ID: name='Msp430TimerCommonP__VectorTimerB1__fired' (at pp.c:25106)
  FuncDef:  (at pp.c:25110)
    Decl: name='main', quals=[], storage=[] (at pp.c:25110)
      FuncDecl: quals=None (at pp.c:25110)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='main', quals=[] (at pp.c:25110)
          IdentifierType: names=['int'] (at None)
    Compound:  (at pp.c:25112)
      Compound:  (at pp.c:25113)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:25113)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:25113)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:25113)
        Compound:  (at pp.c:25114)
          Compound:  (at pp.c:25120)
          FuncCall:  (at None)
            ID: name='RealMainP__Scheduler__init' (at pp.c:25125)
          FuncCall:  (at None)
            ID: name='RealMainP__PlatformInit__init' (at pp.c:25131)
          While:  (at pp.c:25132)
            FuncCall:  (at None)
              ID: name='RealMainP__Scheduler__runNextTask' (at pp.c:25132)
          FuncCall:  (at None)
            ID: name='RealMainP__SoftwareInit__init' (at pp.c:25138)
          While:  (at pp.c:25139)
            FuncCall:  (at None)
              ID: name='RealMainP__Scheduler__runNextTask' (at pp.c:25139)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:25142)
          ExprList:  (at pp.c:25142)
            ID: name='__nesc_atomic' (at pp.c:25142)
      FuncCall:  (at None)
        ID: name='__nesc_enable_interrupt' (at pp.c:25145)
      FuncCall:  (at None)
        ID: name='RealMainP__Boot__booted' (at pp.c:25147)
      FuncCall:  (at None)
        ID: name='RealMainP__Scheduler__taskLoop' (at pp.c:25150)
      Return:  (at pp.c:25155)
        UnaryOp: op='-' (at pp.c:25155)
          Constant: type='int', value='1' (at pp.c:25155)
  FuncDef:  (at pp.c:25159)
    Decl: name='Msp430ClockP__set_dco_calib', quals=[], storage=['static'] (at pp.c:25159)
      FuncDecl: quals=None (at pp.c:25159)
        ParamList:  (at pp.c:25159)
          Decl: name='calib', quals=[], storage=[] (at pp.c:25159)
            TypeDecl: declname='calib', quals=[] (at pp.c:25159)
              IdentifierType: names=['int'] (at None)
        TypeDecl: declname='Msp430ClockP__set_dco_calib', quals=[] (at pp.c:25159)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25160)
      Assignment: op='=' (at pp.c:25161)
        ID: name='BCSCTL1' (at pp.c:25161)
        BinaryOp: op='|' (at pp.c:25161)
          BinaryOp: op='&' (at pp.c:25161)
            ID: name='BCSCTL1' (at pp.c:25161)
            UnaryOp: op='~' (at pp.c:25161)
              Constant: type='int', value='0x07' (at pp.c:25161)
          BinaryOp: op='&' (at pp.c:25161)
            BinaryOp: op='>>' (at pp.c:25161)
              ID: name='calib' (at pp.c:25161)
              Constant: type='int', value='8' (at pp.c:25161)
            Constant: type='int', value='0x07' (at pp.c:25161)
      Assignment: op='=' (at pp.c:25162)
        ID: name='DCOCTL' (at pp.c:25162)
        BinaryOp: op='&' (at pp.c:25162)
          ID: name='calib' (at pp.c:25162)
          Constant: type='int', value='0xff' (at pp.c:25162)
  FuncDef:  (at pp.c:25166)
    Decl: name='SchedulerBasicP__Scheduler__runNextTask', quals=[], storage=['static'] (at pp.c:25166)
      FuncDecl: quals=None (at pp.c:25166)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='SchedulerBasicP__Scheduler__runNextTask', quals=[] (at pp.c:25166)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:25167)
      Decl: name='nextTask', quals=[], storage=[] (at pp.c:25168)
        TypeDecl: declname='nextTask', quals=[] (at pp.c:25168)
          IdentifierType: names=['uint8_t'] (at None)
      Compound:  (at pp.c:25172)
        Assignment: op='=' (at pp.c:25173)
          ID: name='nextTask' (at pp.c:25173)
          FuncCall:  (at None)
            ID: name='SchedulerBasicP__popTask' (at pp.c:25173)
        If:  (at pp.c:25174)
          BinaryOp: op='==' (at pp.c:25174)
            ID: name='nextTask' (at pp.c:25174)
            ID: name='SchedulerBasicP__NO_TASK' (at pp.c:25174)
          Compound:  (at pp.c:25175)
            Compound:  (at pp.c:25176)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:25177)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:25177)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='FALSE' (at pp.c:25179)
              Return:  (at pp.c:25182)
                ID: name='__nesc_temp' (at pp.c:25182)
      FuncCall:  (at None)
        ID: name='SchedulerBasicP__TaskBasic__runTask' (at pp.c:25187)
        ExprList:  (at pp.c:25187)
          ID: name='nextTask' (at pp.c:25187)
      Return:  (at pp.c:25188)
        ID: name='TRUE' (at pp.c:25188)
  FuncDef:  (at pp.c:25192)
    Decl: name='SchedulerBasicP__TaskBasic__default__runTask', quals=[], storage=['static'] (at pp.c:25192)
      FuncDecl: quals=None (at pp.c:25192)
        ParamList:  (at pp.c:25192)
          Decl: name='id', quals=[], storage=[] (at pp.c:25192)
            TypeDecl: declname='id', quals=[] (at pp.c:25192)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SchedulerBasicP__TaskBasic__default__runTask', quals=[] (at pp.c:25192)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25193)
  FuncDef:  (at pp.c:25197)
    Decl: name='SchedulerBasicP__TaskBasic__runTask', quals=[], storage=['static'] (at pp.c:25197)
      FuncDecl: quals=None (at pp.c:25197)
        ParamList:  (at pp.c:25197)
          Decl: name='arg_0x101333340', quals=[], storage=[] (at pp.c:25197)
            TypeDecl: declname='arg_0x101333340', quals=[] (at pp.c:25197)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SchedulerBasicP__TaskBasic__runTask', quals=[] (at pp.c:25197)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25197)
      Switch:  (at pp.c:25199)
        ID: name='arg_0x101333340' (at pp.c:25199)
        Compound:  (at pp.c:25199)
          Case:  (at pp.c:25201)
            ID: name='CC2420CsmaP__startDone_task' (at pp.c:25201)
            FuncCall:  (at None)
              ID: name='CC2420CsmaP__startDone_task__runTask' (at pp.c:25203)
          Break:  (at pp.c:25205)
          Case:  (at pp.c:25207)
            ID: name='CC2420CsmaP__stopDone_task' (at pp.c:25207)
            FuncCall:  (at None)
              ID: name='CC2420CsmaP__stopDone_task__runTask' (at pp.c:25209)
          Break:  (at pp.c:25211)
          Case:  (at pp.c:25213)
            ID: name='CC2420CsmaP__sendDone_task' (at pp.c:25213)
            FuncCall:  (at None)
              ID: name='CC2420CsmaP__sendDone_task__runTask' (at pp.c:25215)
          Break:  (at pp.c:25217)
          Case:  (at pp.c:25219)
            ID: name='CC2420ControlP__sync' (at pp.c:25219)
            FuncCall:  (at None)
              ID: name='CC2420ControlP__sync__runTask' (at pp.c:25221)
          Break:  (at pp.c:25223)
          Case:  (at pp.c:25225)
            ID: name='CC2420ControlP__syncDone' (at pp.c:25225)
            FuncCall:  (at None)
              ID: name='CC2420ControlP__syncDone__runTask' (at pp.c:25227)
          Break:  (at pp.c:25229)
          Case:  (at pp.c:25231)
            ID: name='CC2420SpiP__grant' (at pp.c:25231)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__grant__runTask' (at pp.c:25233)
          Break:  (at pp.c:25235)
          Case:  (at pp.c:25237)
            ID: name='Msp430SpiNoDmaP__0__signalDone_task' (at pp.c:25237)
            FuncCall:  (at None)
              ID: name='Msp430SpiNoDmaP__0__signalDone_task__runTask' (at pp.c:25239)
          Break:  (at pp.c:25241)
          Case:  (at pp.c:25243)
            ID: name='ArbiterP__0__grantedTask' (at pp.c:25243)
            FuncCall:  (at None)
              ID: name='ArbiterP__0__grantedTask__runTask' (at pp.c:25245)
          Break:  (at pp.c:25247)
          Case:  (at pp.c:25249)
            ID: name='CC2420ReceiveP__receiveDone_task' (at pp.c:25249)
            FuncCall:  (at None)
              ID: name='CC2420ReceiveP__receiveDone_task__runTask' (at pp.c:25251)
          Break:  (at pp.c:25253)
          Case:  (at pp.c:25255)
            ID: name='AlarmToTimerC__0__fired' (at pp.c:25255)
            FuncCall:  (at None)
              ID: name='AlarmToTimerC__0__fired__runTask' (at pp.c:25257)
          Break:  (at pp.c:25259)
          Case:  (at pp.c:25261)
            ID: name='VirtualizeTimerC__0__updateFromTimer' (at pp.c:25261)
            FuncCall:  (at None)
              ID: name='VirtualizeTimerC__0__updateFromTimer__runTask' (at pp.c:25263)
          Break:  (at pp.c:25265)
          Case:  (at pp.c:25267)
            ID: name='CC2420TinyosNetworkP__grantTask' (at pp.c:25267)
            FuncCall:  (at None)
              ID: name='CC2420TinyosNetworkP__grantTask__runTask' (at pp.c:25269)
          Break:  (at pp.c:25271)
          Case:  (at pp.c:25273)
            ID: name='AdcP__readDone' (at pp.c:25273)
            FuncCall:  (at None)
              ID: name='AdcP__readDone__runTask' (at pp.c:25275)
          Break:  (at pp.c:25277)
          Case:  (at pp.c:25279)
            ID: name='SimpleArbiterP__0__grantedTask' (at pp.c:25279)
            FuncCall:  (at None)
              ID: name='SimpleArbiterP__0__grantedTask__runTask' (at pp.c:25281)
          Break:  (at pp.c:25283)
          Case:  (at pp.c:25285)
            ID: name='Msp430RefVoltArbiterImplP__switchOff' (at pp.c:25285)
            FuncCall:  (at None)
              ID: name='Msp430RefVoltArbiterImplP__switchOff__runTask' (at pp.c:25287)
          Break:  (at pp.c:25289)
          Case:  (at pp.c:25291)
            ID: name='AdcStreamP__readStreamDone' (at pp.c:25291)
            FuncCall:  (at None)
              ID: name='AdcStreamP__readStreamDone__runTask' (at pp.c:25293)
          Break:  (at pp.c:25295)
          Case:  (at pp.c:25297)
            ID: name='AdcStreamP__readStreamFail' (at pp.c:25297)
            FuncCall:  (at None)
              ID: name='AdcStreamP__readStreamFail__runTask' (at pp.c:25299)
          Break:  (at pp.c:25301)
          Case:  (at pp.c:25303)
            ID: name='AdcStreamP__bufferDone' (at pp.c:25303)
            FuncCall:  (at None)
              ID: name='AdcStreamP__bufferDone__runTask' (at pp.c:25305)
          Break:  (at pp.c:25307)
          Case:  (at pp.c:25309)
            ID: name='AMQueueImplP__0__CancelTask' (at pp.c:25309)
            FuncCall:  (at None)
              ID: name='AMQueueImplP__0__CancelTask__runTask' (at pp.c:25311)
          Break:  (at pp.c:25313)
          Case:  (at pp.c:25315)
            ID: name='AMQueueImplP__0__errorTask' (at pp.c:25315)
            FuncCall:  (at None)
              ID: name='AMQueueImplP__0__errorTask__runTask' (at pp.c:25317)
          Break:  (at pp.c:25319)
          Default:  (at pp.c:25321)
            FuncCall:  (at None)
              ID: name='SchedulerBasicP__TaskBasic__default__runTask' (at pp.c:25323)
              ExprList:  (at pp.c:25323)
                ID: name='arg_0x101333340' (at pp.c:25323)
          Break:  (at pp.c:25325)
  FuncDef:  (at pp.c:25332)
    Decl: name='HplMsp430GeneralIOP__27__IO__toggle', quals=[], storage=['static'] (at pp.c:25332)
      FuncDecl: quals=None (at pp.c:25332)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__27__IO__toggle', quals=[] (at pp.c:25332)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25334)
      Compound:  (at pp.c:25336)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:25336)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:25336)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:25336)
        Assignment: op='^=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:25338)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:25338)
          BinaryOp: op='<<' (at pp.c:25338)
            Constant: type='int', value='0x01' (at pp.c:25338)
            Constant: type='int', value='3' (at pp.c:25338)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:25340)
          ExprList:  (at pp.c:25340)
            ID: name='__nesc_atomic' (at pp.c:25340)
  FuncDef:  (at pp.c:25344)
    Decl: name='HplMsp430GeneralIOP__24__IO__toggle', quals=[], storage=['static'] (at pp.c:25344)
      FuncDecl: quals=None (at pp.c:25344)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplMsp430GeneralIOP__24__IO__toggle', quals=[] (at pp.c:25344)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25346)
      Compound:  (at pp.c:25348)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:25348)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:25348)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:25348)
        Assignment: op='^=' (at None)
          UnaryOp: op='*' (at None)
            Cast:  (at None)
              Typename: quals=['volatile'] (at None)
                PtrDecl: quals=[] (at pp.c:25350)
                  TypeDecl: declname=None, quals=['volatile'] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              Constant: type='int', value='29U' (at pp.c:25350)
          BinaryOp: op='<<' (at pp.c:25350)
            Constant: type='int', value='0x01' (at pp.c:25350)
            Constant: type='int', value='0' (at pp.c:25350)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:25352)
          ExprList:  (at pp.c:25352)
            ID: name='__nesc_atomic' (at pp.c:25352)
  FuncDef:  (at pp.c:25356)
    Decl: name='AMQueueImplP__0__sendDone', quals=[], storage=['static'] (at pp.c:25356)
      FuncDecl: quals=None (at pp.c:25356)
        ParamList:  (at pp.c:25356)
          Decl: name='last', quals=[], storage=[] (at pp.c:25356)
            TypeDecl: declname='last', quals=[] (at pp.c:25356)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:25356)
            PtrDecl: quals=[] (at pp.c:25356)
              TypeDecl: declname='msg', quals=[] (at pp.c:25356)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='err', quals=[], storage=[] (at pp.c:25356)
            TypeDecl: declname='err', quals=[] (at pp.c:25356)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='AMQueueImplP__0__sendDone', quals=[] (at pp.c:25356)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25358)
      Assignment: op='=' (at pp.c:25359)
        StructRef: type='.' (at pp.c:25359)
          ArrayRef:  (at pp.c:25359)
            ID: name='AMQueueImplP__0__queue' (at pp.c:25359)
            ID: name='last' (at pp.c:25359)
          ID: name='msg' (at pp.c:25359)
        Cast:  (at None)
          Typename: quals=[] (at None)
            PtrDecl: quals=[] (at pp.c:25359)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['void'] (at None)
          Constant: type='int', value='0' (at pp.c:25359)
      FuncCall:  (at None)
        ID: name='AMQueueImplP__0__tryToSend' (at pp.c:25360)
      FuncCall:  (at None)
        ID: name='AMQueueImplP__0__Send__sendDone' (at pp.c:25361)
        ExprList:  (at pp.c:25361)
          ID: name='last' (at pp.c:25361)
          ID: name='msg' (at pp.c:25361)
          ID: name='err' (at pp.c:25361)
  FuncDef:  (at pp.c:25365)
    Decl: name='CC2420ActiveMessageP__AMPacket__destination', quals=[], storage=['static'] (at pp.c:25365)
      FuncDecl: quals=None (at pp.c:25365)
        ParamList:  (at pp.c:25365)
          Decl: name='amsg', quals=[], storage=[] (at pp.c:25365)
            PtrDecl: quals=[] (at pp.c:25365)
              TypeDecl: declname='amsg', quals=[] (at pp.c:25365)
                IdentifierType: names=['message_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__AMPacket__destination', quals=[] (at pp.c:25365)
          IdentifierType: names=['am_addr_t'] (at None)
    Compound:  (at pp.c:25367)
      Decl: name='header', quals=[], storage=[] (at pp.c:25368)
        PtrDecl: quals=[] (at pp.c:25368)
          TypeDecl: declname='header', quals=[] (at pp.c:25368)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__CC2420PacketBody__getHeader' (at pp.c:25368)
          ExprList:  (at pp.c:25368)
            ID: name='amsg' (at pp.c:25368)
      Return:  (at pp.c:25371)
        FuncCall:  (at None)
          ID: name='__nesc_ntoh_leuint16' (at pp.c:25371)
          ExprList:  (at pp.c:25371)
            StructRef: type='.' (at pp.c:25371)
              StructRef: type='->' (at pp.c:25371)
                ID: name='header' (at pp.c:25371)
                ID: name='dest' (at pp.c:25371)
              ID: name='nxdata' (at pp.c:25371)
  FuncDef:  (at pp.c:25375)
    Decl: name='CC2420ActiveMessageP__AMSend__send', quals=[], storage=['static'] (at pp.c:25375)
      FuncDecl: quals=None (at pp.c:25375)
        ParamList:  (at pp.c:25375)
          Decl: name='id', quals=[], storage=[] (at pp.c:25375)
            TypeDecl: declname='id', quals=[] (at pp.c:25375)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='addr', quals=[], storage=[] (at pp.c:25375)
            TypeDecl: declname='addr', quals=[] (at pp.c:25375)
              IdentifierType: names=['am_addr_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:25376)
            PtrDecl: quals=[] (at pp.c:25376)
              TypeDecl: declname='msg', quals=[] (at pp.c:25376)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:25377)
            TypeDecl: declname='len', quals=[] (at pp.c:25377)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__AMSend__send', quals=[] (at pp.c:25375)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:25379)
      Decl: name='__nesc_temp50', quals=[], storage=[] (at pp.c:25380)
        PtrDecl: quals=[] (at pp.c:25380)
          TypeDecl: declname='__nesc_temp50', quals=[] (at pp.c:25380)
            IdentifierType: names=['char', 'unsigned'] (at None)
      Decl: name='header', quals=[], storage=[] (at pp.c:25382)
        PtrDecl: quals=[] (at pp.c:25382)
          TypeDecl: declname='header', quals=[] (at pp.c:25382)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__CC2420PacketBody__getHeader' (at pp.c:25382)
          ExprList:  (at pp.c:25382)
            ID: name='msg' (at pp.c:25382)
      If:  (at pp.c:25384)
        BinaryOp: op='>' (at pp.c:25384)
          ID: name='len' (at pp.c:25384)
          FuncCall:  (at None)
            ID: name='CC2420ActiveMessageP__Packet__maxPayloadLength' (at pp.c:25384)
        Compound:  (at pp.c:25384)
          Return:  (at pp.c:25385)
            ID: name='ESIZE' (at pp.c:25385)
      FuncCall:  (at None)
        ID: name='__nesc_hton_leuint8' (at pp.c:25388)
        ExprList:  (at pp.c:25388)
          StructRef: type='.' (at pp.c:25388)
            StructRef: type='->' (at pp.c:25388)
              ID: name='header' (at pp.c:25388)
              ID: name='type' (at pp.c:25388)
            ID: name='nxdata' (at pp.c:25388)
          ID: name='id' (at pp.c:25388)
      FuncCall:  (at None)
        ID: name='__nesc_hton_leuint16' (at pp.c:25389)
        ExprList:  (at pp.c:25389)
          StructRef: type='.' (at pp.c:25389)
            StructRef: type='->' (at pp.c:25389)
              ID: name='header' (at pp.c:25389)
              ID: name='dest' (at pp.c:25389)
            ID: name='nxdata' (at pp.c:25389)
          ID: name='addr' (at pp.c:25389)
      FuncCall:  (at None)
        ID: name='__nesc_hton_leuint16' (at pp.c:25390)
        ExprList:  (at pp.c:25390)
          StructRef: type='.' (at pp.c:25390)
            StructRef: type='->' (at pp.c:25390)
              ID: name='header' (at pp.c:25390)
              ID: name='destpan' (at pp.c:25390)
            ID: name='nxdata' (at pp.c:25390)
          FuncCall:  (at None)
            ID: name='CC2420ActiveMessageP__CC2420Config__getPanAddr' (at pp.c:25390)
      FuncCall:  (at None)
        ID: name='__nesc_hton_leuint16' (at pp.c:25391)
        ExprList:  (at pp.c:25391)
          StructRef: type='.' (at pp.c:25391)
            StructRef: type='->' (at pp.c:25391)
              ID: name='header' (at pp.c:25391)
              ID: name='src' (at pp.c:25391)
            ID: name='nxdata' (at pp.c:25391)
          FuncCall:  (at None)
            ID: name='CC2420ActiveMessageP__AMPacket__address' (at pp.c:25391)
      ExprList:  (at pp.c:25392)
        Assignment: op='=' (at pp.c:25392)
          ID: name='__nesc_temp50' (at pp.c:25392)
          StructRef: type='.' (at pp.c:25392)
            StructRef: type='->' (at pp.c:25392)
              ID: name='header' (at pp.c:25392)
              ID: name='fcf' (at pp.c:25392)
            ID: name='nxdata' (at pp.c:25392)
        FuncCall:  (at None)
          ID: name='__nesc_hton_leuint16' (at pp.c:25392)
          ExprList:  (at pp.c:25392)
            ID: name='__nesc_temp50' (at pp.c:25392)
            BinaryOp: op='|' (at None)
              FuncCall:  (at None)
                ID: name='__nesc_ntoh_leuint16' (at pp.c:25392)
                ExprList:  (at pp.c:25392)
                  ID: name='__nesc_temp50' (at pp.c:25392)
              BinaryOp: op='|' (at pp.c:25392)
                BinaryOp: op='|' (at pp.c:25392)
                  BinaryOp: op='<<' (at pp.c:25392)
                    Constant: type='int', value='1' (at pp.c:25392)
                    ID: name='IEEE154_FCF_INTRAPAN' (at pp.c:25392)
                  BinaryOp: op='<<' (at pp.c:25393)
                    ID: name='IEEE154_ADDR_SHORT' (at pp.c:25393)
                    ID: name='IEEE154_FCF_DEST_ADDR_MODE' (at pp.c:25393)
                BinaryOp: op='<<' (at pp.c:25394)
                  ID: name='IEEE154_ADDR_SHORT' (at pp.c:25394)
                  ID: name='IEEE154_FCF_SRC_ADDR_MODE' (at pp.c:25394)
      FuncCall:  (at None)
        ID: name='__nesc_hton_leuint8' (at pp.c:25395)
        ExprList:  (at pp.c:25395)
          StructRef: type='.' (at pp.c:25395)
            StructRef: type='->' (at pp.c:25395)
              ID: name='header' (at pp.c:25395)
              ID: name='length' (at pp.c:25395)
            ID: name='nxdata' (at pp.c:25395)
          BinaryOp: op='+' (at pp.c:25395)
            ID: name='len' (at pp.c:25395)
            ID: name='CC2420_SIZE' (at pp.c:25395)
      If:  (at pp.c:25397)
        BinaryOp: op='==' (at None)
          FuncCall:  (at None)
            ID: name='CC2420ActiveMessageP__RadioResource__immediateRequest' (at pp.c:25397)
          ID: name='SUCCESS' (at pp.c:25397)
        Compound:  (at pp.c:25397)
          Decl: name='rc', quals=[], storage=[] (at pp.c:25398)
            TypeDecl: declname='rc', quals=[] (at pp.c:25398)
              IdentifierType: names=['error_t'] (at None)
          FuncCall:  (at None)
            ID: name='CC2420ActiveMessageP__SendNotifier__aboutToSend' (at pp.c:25401)
            ExprList:  (at pp.c:25401)
              ID: name='id' (at pp.c:25401)
              ID: name='addr' (at pp.c:25401)
              ID: name='msg' (at pp.c:25401)
          Assignment: op='=' (at pp.c:25403)
            ID: name='rc' (at pp.c:25403)
            FuncCall:  (at None)
              ID: name='CC2420ActiveMessageP__SubSend__send' (at pp.c:25403)
              ExprList:  (at pp.c:25403)
                ID: name='msg' (at pp.c:25403)
                ID: name='len' (at pp.c:25403)
          If:  (at pp.c:25404)
            BinaryOp: op='!=' (at pp.c:25404)
              ID: name='rc' (at pp.c:25404)
              ID: name='SUCCESS' (at pp.c:25404)
            Compound:  (at pp.c:25404)
              FuncCall:  (at None)
                ID: name='CC2420ActiveMessageP__RadioResource__release' (at pp.c:25405)
          Return:  (at pp.c:25408)
            ID: name='rc' (at pp.c:25408)
        Compound:  (at pp.c:25412)
          Assignment: op='=' (at pp.c:25413)
            ID: name='CC2420ActiveMessageP__pending_length' (at pp.c:25413)
            ID: name='len' (at pp.c:25413)
          Assignment: op='=' (at pp.c:25414)
            ID: name='CC2420ActiveMessageP__pending_message' (at pp.c:25414)
            ID: name='msg' (at pp.c:25414)
          Return:  (at pp.c:25415)
            FuncCall:  (at None)
              ID: name='CC2420ActiveMessageP__RadioResource__request' (at pp.c:25415)
  FuncDef:  (at pp.c:25420)
    Decl: name='ActiveMessageAddressC__amAddress', quals=[], storage=['static'] (at pp.c:25420)
      FuncDecl: quals=None (at pp.c:25420)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ActiveMessageAddressC__amAddress', quals=[] (at pp.c:25420)
          IdentifierType: names=['am_addr_t'] (at None)
    Compound:  (at pp.c:25422)
      Decl: name='myAddr', quals=[], storage=[] (at pp.c:25423)
        TypeDecl: declname='myAddr', quals=[] (at pp.c:25423)
          IdentifierType: names=['am_addr_t'] (at None)
      Compound:  (at pp.c:25426)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:25426)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:25426)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:25426)
        Assignment: op='=' (at pp.c:25428)
          ID: name='myAddr' (at pp.c:25428)
          ID: name='ActiveMessageAddressC__addr' (at pp.c:25428)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:25430)
          ExprList:  (at pp.c:25430)
            ID: name='__nesc_atomic' (at pp.c:25430)
      Return:  (at pp.c:25431)
        ID: name='myAddr' (at pp.c:25431)
  FuncDef:  (at pp.c:25435)
    Decl: name='FcfsResourceQueueC__0__FcfsQueue__isEmpty', quals=[], storage=['static'] (at pp.c:25435)
      FuncDecl: quals=None (at pp.c:25435)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='FcfsResourceQueueC__0__FcfsQueue__isEmpty', quals=[] (at pp.c:25435)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:25437)
      Compound:  (at pp.c:25438)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:25438)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:25438)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:25438)
        Compound:  (at pp.c:25440)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:25441)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:25441)
              IdentifierType: names=['char', 'unsigned'] (at None)
            BinaryOp: op='==' (at pp.c:25443)
              ID: name='FcfsResourceQueueC__0__qHead' (at pp.c:25443)
              ID: name='FcfsResourceQueueC__0__NO_ENTRY' (at pp.c:25443)
          Compound:  (at pp.c:25445)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:25447)
              ExprList:  (at pp.c:25447)
                ID: name='__nesc_atomic' (at pp.c:25447)
            Return:  (at pp.c:25449)
              ID: name='__nesc_temp' (at pp.c:25449)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:25453)
          ExprList:  (at pp.c:25453)
            ID: name='__nesc_atomic' (at pp.c:25453)
  FuncDef:  (at pp.c:25457)
    Decl: name='CC2420TinyosNetworkP__ActiveSend__send', quals=[], storage=['static'] (at pp.c:25457)
      FuncDecl: quals=None (at pp.c:25457)
        ParamList:  (at pp.c:25457)
          Decl: name='msg', quals=[], storage=[] (at pp.c:25457)
            PtrDecl: quals=[] (at pp.c:25457)
              TypeDecl: declname='msg', quals=[] (at pp.c:25457)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:25457)
            TypeDecl: declname='len', quals=[] (at pp.c:25457)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420TinyosNetworkP__ActiveSend__send', quals=[] (at pp.c:25457)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:25459)
      FuncCall:  (at None)
        ID: name='CC2420TinyosNetworkP__CC2420Packet__setNetwork' (at pp.c:25460)
        ExprList:  (at pp.c:25460)
          ID: name='msg' (at pp.c:25460)
          Constant: type='int', value='0x3f' (at pp.c:25460)
      Assignment: op='=' (at pp.c:25461)
        ID: name='CC2420TinyosNetworkP__m_busy_client' (at pp.c:25461)
        ID: name='CC2420TinyosNetworkP__CLIENT_AM' (at pp.c:25461)
      Return:  (at pp.c:25462)
        FuncCall:  (at None)
          ID: name='CC2420TinyosNetworkP__SubSend__send' (at pp.c:25462)
          ExprList:  (at pp.c:25462)
            ID: name='msg' (at pp.c:25462)
            ID: name='len' (at pp.c:25462)
  FuncDef:  (at pp.c:25466)
    Decl: name='CC2420PacketP__getNetwork', quals=[], storage=['static'] (at pp.c:25466)
      FuncDecl: quals=None (at pp.c:25466)
        ParamList:  (at pp.c:25466)
          Decl: name='msg', quals=[], storage=[] (at pp.c:25466)
            PtrDecl: quals=[] (at pp.c:25466)
              TypeDecl: declname='msg', quals=[] (at pp.c:25466)
                IdentifierType: names=['message_t'] (at None)
        PtrDecl: quals=[] (at pp.c:25466)
          TypeDecl: declname='CC2420PacketP__getNetwork', quals=[] (at pp.c:25466)
            IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:25468)
      Decl: name='hdr', quals=[], storage=[] (at pp.c:25469)
        PtrDecl: quals=[] (at pp.c:25469)
          TypeDecl: declname='hdr', quals=[] (at pp.c:25469)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420PacketP__CC2420PacketBody__getHeader' (at pp.c:25469)
          ExprList:  (at pp.c:25469)
            ID: name='msg' (at pp.c:25469)
      Decl: name='offset', quals=[], storage=[] (at pp.c:25470)
        TypeDecl: declname='offset', quals=[] (at pp.c:25470)
          IdentifierType: names=['int'] (at None)
      Assignment: op='=' (at pp.c:25472)
        ID: name='offset' (at pp.c:25472)
        BinaryOp: op='+' (at None)
          BinaryOp: op='+' (at None)
            FuncCall:  (at None)
              ID: name='CC2420PacketP__getAddressLength' (at pp.c:25472)
              ExprList:  (at None)
                BinaryOp: op='&' (at None)
                  BinaryOp: op='>>' (at None)
                    FuncCall:  (at None)
                      ID: name='__nesc_ntoh_leuint16' (at pp.c:25472)
                      ExprList:  (at pp.c:25472)
                        StructRef: type='.' (at pp.c:25472)
                          StructRef: type='->' (at pp.c:25472)
                            ID: name='hdr' (at pp.c:25472)
                            ID: name='fcf' (at pp.c:25472)
                          ID: name='nxdata' (at pp.c:25472)
                    ID: name='IEEE154_FCF_DEST_ADDR_MODE' (at pp.c:25472)
                  Constant: type='int', value='0x3' (at pp.c:25472)
            FuncCall:  (at None)
              ID: name='CC2420PacketP__getAddressLength' (at pp.c:25473)
              ExprList:  (at None)
                BinaryOp: op='&' (at None)
                  BinaryOp: op='>>' (at None)
                    FuncCall:  (at None)
                      ID: name='__nesc_ntoh_leuint16' (at pp.c:25473)
                      ExprList:  (at pp.c:25473)
                        StructRef: type='.' (at pp.c:25473)
                          StructRef: type='->' (at pp.c:25473)
                            ID: name='hdr' (at pp.c:25473)
                            ID: name='fcf' (at pp.c:25473)
                          ID: name='nxdata' (at pp.c:25473)
                    ID: name='IEEE154_FCF_SRC_ADDR_MODE' (at pp.c:25473)
                  Constant: type='int', value='0x3' (at pp.c:25473)
          Cast:  (at None)
            Typename: quals=[] (at None)
              TypeDecl: declname=None, quals=[] (at None)
                IdentifierType: names=['size_t'] (at None)
            UnaryOp: op='&' (at None)
              StructRef: type='->' (at None)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    PtrDecl: quals=[] (at pp.c:25474)
                      TypeDecl: declname=None, quals=[] (at None)
                        IdentifierType: names=['cc2420_header_t'] (at None)
                  Constant: type='int', value='0' (at pp.c:25474)
                ID: name='dest' (at pp.c:25474)
      Return:  (at pp.c:25476)
        BinaryOp: op='+' (at None)
          Cast:  (at None)
            Typename: quals=[] (at None)
              PtrDecl: quals=[] (at pp.c:25476)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            ID: name='hdr' (at pp.c:25476)
          ID: name='offset' (at pp.c:25476)
  FuncDef:  (at pp.c:25480)
    Decl: name='CC2420TransmitP__loadTXFIFO', quals=[], storage=['static'] (at pp.c:25480)
      FuncDecl: quals=None (at pp.c:25480)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420TransmitP__loadTXFIFO', quals=[] (at pp.c:25480)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25482)
      Decl: name='header', quals=[], storage=[] (at pp.c:25483)
        PtrDecl: quals=[] (at pp.c:25483)
          TypeDecl: declname='header', quals=[] (at pp.c:25483)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420TransmitP__CC2420PacketBody__getHeader' (at pp.c:25483)
          ExprList:  (at pp.c:25483)
            ID: name='CC2420TransmitP__m_msg' (at pp.c:25483)
      Decl: name='tx_power', quals=[], storage=[] (at pp.c:25484)
        TypeDecl: declname='tx_power', quals=[] (at pp.c:25484)
          IdentifierType: names=['uint8_t'] (at None)
        FuncCall:  (at None)
          ID: name='__nesc_ntoh_uint8' (at pp.c:25484)
          ExprList:  (at None)
            StructRef: type='.' (at None)
              StructRef: type='->' (at None)
                FuncCall:  (at None)
                  ID: name='CC2420TransmitP__CC2420PacketBody__getMetadata' (at pp.c:25484)
                  ExprList:  (at pp.c:25484)
                    ID: name='CC2420TransmitP__m_msg' (at pp.c:25484)
                ID: name='tx_power' (at pp.c:25484)
              ID: name='nxdata' (at pp.c:25484)
      If:  (at pp.c:25486)
        UnaryOp: op='!' (at pp.c:25486)
          ID: name='tx_power' (at pp.c:25486)
        Compound:  (at pp.c:25486)
          Assignment: op='=' (at pp.c:25487)
            ID: name='tx_power' (at pp.c:25487)
            Constant: type='int', value='31' (at pp.c:25487)
      FuncCall:  (at None)
        ID: name='CC2420TransmitP__CSN__clr' (at pp.c:25490)
      If:  (at pp.c:25492)
        BinaryOp: op='!=' (at pp.c:25492)
          ID: name='CC2420TransmitP__m_tx_power' (at pp.c:25492)
          ID: name='tx_power' (at pp.c:25492)
        Compound:  (at pp.c:25492)
          FuncCall:  (at None)
            ID: name='CC2420TransmitP__TXCTRL__write' (at pp.c:25493)
            ExprList:  (at pp.c:25493)
              BinaryOp: op='|' (at pp.c:25493)
                BinaryOp: op='|' (at pp.c:25493)
                  BinaryOp: op='|' (at pp.c:25493)
                    BinaryOp: op='<<' (at pp.c:25493)
                      Constant: type='int', value='2' (at pp.c:25493)
                      ID: name='CC2420_TXCTRL_TXMIXBUF_CUR' (at pp.c:25493)
                    BinaryOp: op='<<' (at pp.c:25494)
                      Constant: type='int', value='3' (at pp.c:25494)
                      ID: name='CC2420_TXCTRL_PA_CURRENT' (at pp.c:25494)
                  BinaryOp: op='<<' (at pp.c:25495)
                    Constant: type='int', value='1' (at pp.c:25495)
                    ID: name='CC2420_TXCTRL_RESERVED' (at pp.c:25495)
                BinaryOp: op='<<' (at pp.c:25496)
                  BinaryOp: op='&' (at pp.c:25496)
                    ID: name='tx_power' (at pp.c:25496)
                    Constant: type='int', value='0x1F' (at pp.c:25496)
                  ID: name='CC2420_TXCTRL_PA_LEVEL' (at pp.c:25496)
      Assignment: op='=' (at pp.c:25499)
        ID: name='CC2420TransmitP__m_tx_power' (at pp.c:25499)
        ID: name='tx_power' (at pp.c:25499)
      Compound:  (at pp.c:25501)
        Decl: name='tmpLen', quals=[], storage=[] (at pp.c:25502)
          TypeDecl: declname='tmpLen', quals=[] (at pp.c:25502)
            IdentifierType: names=['uint8_t'] (at None)
          BinaryOp: op='-' (at None)
            FuncCall:  (at None)
              ID: name='__nesc_ntoh_leuint8' (at pp.c:25502)
              ExprList:  (at pp.c:25502)
                StructRef: type='.' (at pp.c:25502)
                  StructRef: type='->' (at pp.c:25502)
                    ID: name='header' (at pp.c:25502)
                    ID: name='length' (at pp.c:25502)
                  ID: name='nxdata' (at pp.c:25502)
            Constant: type='int', value='1' (at pp.c:25502)
        FuncCall:  (at None)
          ID: name='CC2420TransmitP__TXFIFO__write' (at pp.c:25505)
          ExprList:  (at None)
            Cast:  (at None)
              Typename: quals=[] (at None)
                PtrDecl: quals=[] (at pp.c:25505)
                  TypeDecl: declname=None, quals=[] (at None)
                    IdentifierType: names=['uint8_t'] (at None)
              ID: name='header' (at pp.c:25505)
            BinaryOp: op='-' (at None)
              FuncCall:  (at None)
                ID: name='__nesc_ntoh_leuint8' (at pp.c:25505)
                ExprList:  (at pp.c:25505)
                  StructRef: type='.' (at pp.c:25505)
                    StructRef: type='->' (at pp.c:25505)
                      ID: name='header' (at pp.c:25505)
                      ID: name='length' (at pp.c:25505)
                    ID: name='nxdata' (at pp.c:25505)
              Constant: type='int', value='1' (at pp.c:25505)
  FuncDef:  (at pp.c:25510)
    Decl: name='CC2420SpiP__Reg__write', quals=[], storage=['static'] (at pp.c:25510)
      FuncDecl: quals=None (at pp.c:25510)
        ParamList:  (at pp.c:25510)
          Decl: name='addr', quals=[], storage=[] (at pp.c:25510)
            TypeDecl: declname='addr', quals=[] (at pp.c:25510)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:25510)
            TypeDecl: declname='data', quals=[] (at pp.c:25510)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Reg__write', quals=[] (at pp.c:25510)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:25512)
      Compound:  (at pp.c:25513)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:25513)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:25513)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:25513)
        Compound:  (at pp.c:25515)
          If:  (at pp.c:25516)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__WorkingState__isIdle' (at pp.c:25516)
            Compound:  (at pp.c:25516)
              Compound:  (at pp.c:25517)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:25518)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:25518)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  Constant: type='int', value='0' (at pp.c:25520)
                Compound:  (at pp.c:25522)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:25524)
                    ExprList:  (at pp.c:25524)
                      ID: name='__nesc_atomic' (at pp.c:25524)
                  Return:  (at pp.c:25526)
                    ID: name='__nesc_temp' (at pp.c:25526)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:25532)
          ExprList:  (at pp.c:25532)
            ID: name='__nesc_atomic' (at pp.c:25532)
      FuncCall:  (at None)
        ID: name='CC2420SpiP__SpiByte__write' (at pp.c:25534)
        ExprList:  (at pp.c:25534)
          ID: name='addr' (at pp.c:25534)
      FuncCall:  (at None)
        ID: name='CC2420SpiP__SpiByte__write' (at pp.c:25535)
        ExprList:  (at pp.c:25535)
          BinaryOp: op='>>' (at pp.c:25535)
            ID: name='data' (at pp.c:25535)
            Constant: type='int', value='8' (at pp.c:25535)
      Return:  (at pp.c:25536)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__SpiByte__write' (at pp.c:25536)
          ExprList:  (at pp.c:25536)
            BinaryOp: op='&' (at pp.c:25536)
              ID: name='data' (at pp.c:25536)
              Constant: type='int', value='0xff' (at pp.c:25536)
  FuncDef:  (at pp.c:25540)
    Decl: name='Msp430SpiNoDmaP__0__SpiPacket__send', quals=[], storage=['static'] (at pp.c:25540)
      FuncDecl: quals=None (at pp.c:25540)
        ParamList:  (at pp.c:25540)
          Decl: name='id', quals=[], storage=[] (at pp.c:25540)
            TypeDecl: declname='id', quals=[] (at pp.c:25540)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='tx_buf', quals=[], storage=[] (at pp.c:25540)
            PtrDecl: quals=[] (at pp.c:25540)
              TypeDecl: declname='tx_buf', quals=[] (at pp.c:25540)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='rx_buf', quals=[], storage=[] (at pp.c:25541)
            PtrDecl: quals=[] (at pp.c:25541)
              TypeDecl: declname='rx_buf', quals=[] (at pp.c:25541)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:25542)
            TypeDecl: declname='len', quals=[] (at pp.c:25542)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__SpiPacket__send', quals=[] (at pp.c:25540)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:25544)
      Assignment: op='=' (at pp.c:25546)
        ID: name='Msp430SpiNoDmaP__0__m_client' (at pp.c:25546)
        ID: name='id' (at pp.c:25546)
      Assignment: op='=' (at pp.c:25547)
        ID: name='Msp430SpiNoDmaP__0__m_tx_buf' (at pp.c:25547)
        ID: name='tx_buf' (at pp.c:25547)
      Assignment: op='=' (at pp.c:25548)
        ID: name='Msp430SpiNoDmaP__0__m_rx_buf' (at pp.c:25548)
        ID: name='rx_buf' (at pp.c:25548)
      Assignment: op='=' (at pp.c:25549)
        ID: name='Msp430SpiNoDmaP__0__m_len' (at pp.c:25549)
        ID: name='len' (at pp.c:25549)
      Assignment: op='=' (at pp.c:25550)
        ID: name='Msp430SpiNoDmaP__0__m_pos' (at pp.c:25550)
        Constant: type='int', value='0' (at pp.c:25550)
      If:  (at pp.c:25552)
        ID: name='len' (at pp.c:25552)
        Compound:  (at pp.c:25552)
          FuncCall:  (at None)
            ID: name='Msp430SpiNoDmaP__0__Usart__enableRxIntr' (at pp.c:25553)
          FuncCall:  (at None)
            ID: name='Msp430SpiNoDmaP__0__continueOp' (at pp.c:25554)
        Compound:  (at pp.c:25556)
          FuncCall:  (at None)
            ID: name='Msp430SpiNoDmaP__0__signalDone_task__postTask' (at pp.c:25557)
      Return:  (at pp.c:25560)
        ID: name='SUCCESS' (at pp.c:25560)
  FuncDef:  (at pp.c:25564)
    Decl: name='Msp430SpiNoDmaP__0__continueOp', quals=[], storage=['static'] (at pp.c:25564)
      FuncDecl: quals=None (at pp.c:25564)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430SpiNoDmaP__0__continueOp', quals=[] (at pp.c:25564)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25566)
      Decl: name='end', quals=[], storage=[] (at pp.c:25568)
        TypeDecl: declname='end', quals=[] (at pp.c:25568)
          IdentifierType: names=['uint8_t'] (at None)
      Decl: name='tmp', quals=[], storage=[] (at pp.c:25569)
        TypeDecl: declname='tmp', quals=[] (at pp.c:25569)
          IdentifierType: names=['uint8_t'] (at None)
      Compound:  (at pp.c:25571)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:25571)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:25571)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:25571)
        Compound:  (at pp.c:25573)
          FuncCall:  (at None)
            ID: name='Msp430SpiNoDmaP__0__Usart__tx' (at pp.c:25574)
            ExprList:  (at pp.c:25574)
              TernaryOp:  (at pp.c:25574)
                ID: name='Msp430SpiNoDmaP__0__m_tx_buf' (at pp.c:25574)
                ArrayRef:  (at pp.c:25574)
                  ID: name='Msp430SpiNoDmaP__0__m_tx_buf' (at pp.c:25574)
                  ID: name='Msp430SpiNoDmaP__0__m_pos' (at pp.c:25574)
                Constant: type='int', value='0' (at pp.c:25574)
          Assignment: op='=' (at pp.c:25576)
            ID: name='end' (at pp.c:25576)
            BinaryOp: op='+' (at pp.c:25576)
              ID: name='Msp430SpiNoDmaP__0__m_pos' (at pp.c:25576)
              ID: name='Msp430SpiNoDmaP__0__SPI_ATOMIC_SIZE' (at pp.c:25576)
          If:  (at pp.c:25577)
            BinaryOp: op='>' (at pp.c:25577)
              ID: name='end' (at pp.c:25577)
              ID: name='Msp430SpiNoDmaP__0__m_len' (at pp.c:25577)
            Compound:  (at pp.c:25577)
              Assignment: op='=' (at pp.c:25578)
                ID: name='end' (at pp.c:25578)
                ID: name='Msp430SpiNoDmaP__0__m_len' (at pp.c:25578)
          While:  (at pp.c:25580)
            BinaryOp: op='<' (at pp.c:25580)
              UnaryOp: op='++' (at pp.c:25580)
                ID: name='Msp430SpiNoDmaP__0__m_pos' (at pp.c:25580)
              ID: name='end' (at pp.c:25580)
            Compound:  (at pp.c:25580)
              While:  (at pp.c:25581)
                UnaryOp: op='!' (at None)
                  FuncCall:  (at None)
                    ID: name='Msp430SpiNoDmaP__0__Usart__isRxIntrPending' (at pp.c:25581)
              Assignment: op='=' (at pp.c:25582)
                ID: name='tmp' (at pp.c:25582)
                FuncCall:  (at None)
                  ID: name='Msp430SpiNoDmaP__0__Usart__rx' (at pp.c:25582)
              If:  (at pp.c:25583)
                ID: name='Msp430SpiNoDmaP__0__m_rx_buf' (at pp.c:25583)
                Compound:  (at pp.c:25583)
                  Assignment: op='=' (at pp.c:25584)
                    ArrayRef:  (at pp.c:25584)
                      ID: name='Msp430SpiNoDmaP__0__m_rx_buf' (at pp.c:25584)
                      BinaryOp: op='-' (at pp.c:25584)
                        ID: name='Msp430SpiNoDmaP__0__m_pos' (at pp.c:25584)
                        Constant: type='int', value='1' (at pp.c:25584)
                    ID: name='tmp' (at pp.c:25584)
              FuncCall:  (at None)
                ID: name='Msp430SpiNoDmaP__0__Usart__tx' (at pp.c:25587)
                ExprList:  (at pp.c:25587)
                  TernaryOp:  (at pp.c:25587)
                    ID: name='Msp430SpiNoDmaP__0__m_tx_buf' (at pp.c:25587)
                    ArrayRef:  (at pp.c:25587)
                      ID: name='Msp430SpiNoDmaP__0__m_tx_buf' (at pp.c:25587)
                      ID: name='Msp430SpiNoDmaP__0__m_pos' (at pp.c:25587)
                    Constant: type='int', value='0' (at pp.c:25587)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:25591)
          ExprList:  (at pp.c:25591)
            ID: name='__nesc_atomic' (at pp.c:25591)
  FuncDef:  (at pp.c:25595)
    Decl: name='UniqueSendP__State__toIdle', quals=[], storage=['static'] (at pp.c:25595)
      FuncDecl: quals=None (at pp.c:25595)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='UniqueSendP__State__toIdle', quals=[] (at pp.c:25595)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25595)
      FuncCall:  (at None)
        ID: name='StateImplP__State__toIdle' (at pp.c:25597)
        ExprList:  (at pp.c:25597)
          Constant: type='int', value='2U' (at pp.c:25597)
  FuncDef:  (at pp.c:25602)
    Decl: name='Msp430RefVoltArbiterImplP__ClientResource__release', quals=[], storage=['static'] (at pp.c:25602)
      FuncDecl: quals=None (at pp.c:25602)
        ParamList:  (at pp.c:25602)
          Decl: name='client', quals=[], storage=[] (at pp.c:25602)
            TypeDecl: declname='client', quals=[] (at pp.c:25602)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__ClientResource__release', quals=[] (at pp.c:25602)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:25603)
      Decl: name='error', quals=[], storage=[] (at pp.c:25604)
        TypeDecl: declname='error', quals=[] (at pp.c:25604)
          IdentifierType: names=['error_t'] (at None)
      If:  (at pp.c:25607)
        BinaryOp: op='==' (at pp.c:25607)
          ID: name='Msp430RefVoltArbiterImplP__syncOwner' (at pp.c:25607)
          ID: name='client' (at pp.c:25607)
        Compound:  (at pp.c:25607)
          FuncCall:  (at None)
            ID: name='Msp430RefVoltArbiterImplP__switchOff__postTask' (at pp.c:25608)
      Assignment: op='=' (at pp.c:25611)
        ID: name='error' (at pp.c:25611)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltArbiterImplP__AdcResource__release' (at pp.c:25611)
          ExprList:  (at pp.c:25611)
            ID: name='client' (at pp.c:25611)
      Return:  (at pp.c:25613)
        ID: name='error' (at pp.c:25613)
  FuncDef:  (at pp.c:25617)
    Decl: name='SimpleArbiterP__0__Resource__release', quals=[], storage=['static'] (at pp.c:25617)
      FuncDecl: quals=None (at pp.c:25617)
        ParamList:  (at pp.c:25617)
          Decl: name='id', quals=[], storage=[] (at pp.c:25617)
            TypeDecl: declname='id', quals=[] (at pp.c:25617)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__Resource__release', quals=[] (at pp.c:25617)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:25619)
      Decl: name='released', quals=[], storage=[] (at pp.c:25620)
        TypeDecl: declname='released', quals=[] (at pp.c:25620)
          IdentifierType: names=['bool'] (at None)
        ID: name='FALSE' (at pp.c:25620)
      Compound:  (at pp.c:25623)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:25623)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:25623)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:25623)
        Compound:  (at pp.c:25625)
          If:  (at pp.c:25626)
            BinaryOp: op='&&' (at pp.c:25626)
              BinaryOp: op='==' (at pp.c:25626)
                ID: name='SimpleArbiterP__0__state' (at pp.c:25626)
                ID: name='SimpleArbiterP__0__RES_BUSY' (at pp.c:25626)
              BinaryOp: op='==' (at pp.c:25626)
                ID: name='SimpleArbiterP__0__resId' (at pp.c:25626)
                ID: name='id' (at pp.c:25626)
            Compound:  (at pp.c:25626)
              If:  (at pp.c:25627)
                BinaryOp: op='==' (at None)
                  FuncCall:  (at None)
                    ID: name='SimpleArbiterP__0__Queue__isEmpty' (at pp.c:25627)
                  ID: name='FALSE' (at pp.c:25627)
                Compound:  (at pp.c:25627)
                  Assignment: op='=' (at pp.c:25628)
                    ID: name='SimpleArbiterP__0__resId' (at pp.c:25628)
                    ID: name='SimpleArbiterP__0__NO_RES' (at pp.c:25628)
                  Assignment: op='=' (at pp.c:25629)
                    ID: name='SimpleArbiterP__0__reqResId' (at pp.c:25629)
                    FuncCall:  (at None)
                      ID: name='SimpleArbiterP__0__Queue__dequeue' (at pp.c:25629)
                  Assignment: op='=' (at pp.c:25630)
                    ID: name='SimpleArbiterP__0__state' (at pp.c:25630)
                    ID: name='SimpleArbiterP__0__RES_GRANTING' (at pp.c:25630)
                  FuncCall:  (at None)
                    ID: name='SimpleArbiterP__0__grantedTask__postTask' (at pp.c:25631)
                Compound:  (at pp.c:25633)
                  Assignment: op='=' (at pp.c:25634)
                    ID: name='SimpleArbiterP__0__resId' (at pp.c:25634)
                    ID: name='SimpleArbiterP__0__NO_RES' (at pp.c:25634)
                  Assignment: op='=' (at pp.c:25635)
                    ID: name='SimpleArbiterP__0__state' (at pp.c:25635)
                    ID: name='SimpleArbiterP__0__RES_IDLE' (at pp.c:25635)
              Assignment: op='=' (at pp.c:25637)
                ID: name='released' (at pp.c:25637)
                ID: name='TRUE' (at pp.c:25637)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:25641)
          ExprList:  (at pp.c:25641)
            ID: name='__nesc_atomic' (at pp.c:25641)
      If:  (at pp.c:25642)
        BinaryOp: op='==' (at pp.c:25642)
          ID: name='released' (at pp.c:25642)
          ID: name='TRUE' (at pp.c:25642)
        Compound:  (at pp.c:25642)
          FuncCall:  (at None)
            ID: name='SimpleArbiterP__0__ResourceConfigure__unconfigure' (at pp.c:25643)
            ExprList:  (at pp.c:25643)
              ID: name='id' (at pp.c:25643)
          Return:  (at pp.c:25644)
            ID: name='SUCCESS' (at pp.c:25644)
      Return:  (at pp.c:25646)
        ID: name='FAIL' (at pp.c:25646)
  FuncDef:  (at pp.c:25650)
    Decl: name='RoundRobinResourceQueueC__0__RoundRobinQueue__isEnqueued', quals=[], storage=['static'] (at pp.c:25650)
      FuncDecl: quals=None (at pp.c:25650)
        ParamList:  (at pp.c:25650)
          Decl: name='id', quals=[], storage=[] (at pp.c:25650)
            TypeDecl: declname='id', quals=[] (at pp.c:25650)
              IdentifierType: names=['resource_client_id_t'] (at None)
        TypeDecl: declname='RoundRobinResourceQueueC__0__RoundRobinQueue__isEnqueued', quals=[] (at pp.c:25650)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:25652)
      Return:  (at pp.c:25653)
        BinaryOp: op='&' (at pp.c:25653)
          ArrayRef:  (at pp.c:25653)
            ID: name='RoundRobinResourceQueueC__0__resQ' (at pp.c:25653)
            BinaryOp: op='/' (at pp.c:25653)
              ID: name='id' (at pp.c:25653)
              Constant: type='int', value='8' (at pp.c:25653)
          BinaryOp: op='<<' (at pp.c:25653)
            Constant: type='int', value='1' (at pp.c:25653)
            BinaryOp: op='%' (at pp.c:25653)
              ID: name='id' (at pp.c:25653)
              Constant: type='int', value='8' (at pp.c:25653)
  FuncDef:  (at pp.c:25657)
    Decl: name='Msp430RefVoltGeneratorP__stop', quals=[], storage=['static'] (at pp.c:25657)
      FuncDecl: quals=None (at pp.c:25657)
        ParamList:  (at pp.c:25657)
          Decl: name='nextState', quals=[], storage=[] (at pp.c:25657)
            TypeDecl: declname='nextState', quals=[] (at pp.c:25657)
              IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__stop', quals=[] (at pp.c:25657)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:25659)
      Decl: name='result', quals=[], storage=[] (at pp.c:25660)
        TypeDecl: declname='result', quals=[] (at pp.c:25660)
          IdentifierType: names=['error_t'] (at None)
      If:  (at pp.c:25662)
        BinaryOp: op='==' (at pp.c:25662)
          ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:25662)
          ID: name='Msp430RefVoltGeneratorP__GENERATOR_OFF' (at pp.c:25662)
        Compound:  (at pp.c:25662)
          Assignment: op='=' (at pp.c:25663)
            ID: name='result' (at pp.c:25663)
            ID: name='EALREADY' (at pp.c:25663)
        Compound:  (at pp.c:25665)
          If:  (at pp.c:25667)
            BinaryOp: op='||' (at pp.c:25667)
              BinaryOp: op='==' (at pp.c:25667)
                ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:25667)
                ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_STABLE' (at pp.c:25667)
              BinaryOp: op='==' (at pp.c:25667)
                ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:25667)
                ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_STABLE' (at pp.c:25667)
            Compound:  (at pp.c:25667)
              Assignment: op='=' (at pp.c:25668)
                ID: name='result' (at pp.c:25668)
                ID: name='SUCCESS' (at pp.c:25668)
              Assignment: op='=' (at pp.c:25669)
                ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:25669)
                ID: name='nextState' (at pp.c:25669)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltGeneratorP__SwitchOffTimer__startOneShot' (at pp.c:25670)
                ExprList:  (at pp.c:25670)
                  Constant: type='int', value='20' (at pp.c:25670)
            Compound:  (at pp.c:25672)
              If:  (at pp.c:25674)
                BinaryOp: op='||' (at pp.c:25674)
                  BinaryOp: op='==' (at pp.c:25674)
                    ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:25674)
                    ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_ON_PENDING' (at pp.c:25674)
                  BinaryOp: op='==' (at pp.c:25674)
                    ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:25674)
                    ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_ON_PENDING' (at pp.c:25674)
                Compound:  (at pp.c:25674)
                  If:  (at pp.c:25675)
                    BinaryOp: op='==' (at pp.c:25675)
                      Assignment: op='=' (at pp.c:25675)
                        ID: name='result' (at pp.c:25675)
                        FuncCall:  (at None)
                          ID: name='Msp430RefVoltGeneratorP__switchOff' (at pp.c:25675)
                      ID: name='SUCCESS' (at pp.c:25675)
                    Compound:  (at pp.c:25675)
                      Decl: name='oldState', quals=[], storage=[] (at pp.c:25677)
                        TypeDecl: declname='oldState', quals=[] (at pp.c:25677)
                          IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
                        ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:25677)
                      FuncCall:  (at None)
                        ID: name='Msp430RefVoltGeneratorP__SwitchOnTimer__stop' (at pp.c:25680)
                      Assignment: op='=' (at pp.c:25681)
                        ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:25681)
                        ID: name='Msp430RefVoltGeneratorP__GENERATOR_OFF' (at pp.c:25681)
                      FuncCall:  (at None)
                        ID: name='Msp430RefVoltGeneratorP__signalStartDone' (at pp.c:25682)
                        ExprList:  (at pp.c:25682)
                          ID: name='oldState' (at pp.c:25682)
                          ID: name='FAIL' (at pp.c:25682)
                      FuncCall:  (at None)
                        ID: name='Msp430RefVoltGeneratorP__signalStopDone' (at pp.c:25683)
                        ExprList:  (at pp.c:25683)
                          ID: name='nextState' (at pp.c:25683)
                          ID: name='SUCCESS' (at pp.c:25683)
                Compound:  (at pp.c:25686)
                  If:  (at pp.c:25688)
                    BinaryOp: op='==' (at pp.c:25688)
                      ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:25688)
                      ID: name='nextState' (at pp.c:25688)
                    Compound:  (at pp.c:25688)
                      Assignment: op='=' (at pp.c:25689)
                        ID: name='result' (at pp.c:25689)
                        ID: name='SUCCESS' (at pp.c:25689)
                    Compound:  (at pp.c:25691)
                      Assignment: op='=' (at pp.c:25693)
                        ID: name='result' (at pp.c:25693)
                        ID: name='EBUSY' (at pp.c:25693)
      Return:  (at pp.c:25699)
        ID: name='result' (at pp.c:25699)
  FuncDef:  (at pp.c:25703)
    Decl: name='VirtualizeTimerC__0__startTimer', quals=[], storage=['static'] (at pp.c:25703)
      FuncDecl: quals=None (at pp.c:25703)
        ParamList:  (at pp.c:25703)
          Decl: name='num', quals=[], storage=[] (at pp.c:25703)
            TypeDecl: declname='num', quals=[] (at pp.c:25703)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='t0', quals=[], storage=[] (at pp.c:25703)
            TypeDecl: declname='t0', quals=[] (at pp.c:25703)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:25703)
            TypeDecl: declname='dt', quals=[] (at pp.c:25703)
              IdentifierType: names=['uint32_t'] (at None)
          Decl: name='isoneshot', quals=[], storage=[] (at pp.c:25703)
            TypeDecl: declname='isoneshot', quals=[] (at pp.c:25703)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__startTimer', quals=[] (at pp.c:25703)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25704)
      Decl: name='timer', quals=[], storage=[] (at pp.c:25705)
        PtrDecl: quals=[] (at pp.c:25705)
          TypeDecl: declname='timer', quals=[] (at pp.c:25705)
            IdentifierType: names=['VirtualizeTimerC__0__Timer_t'] (at None)
        UnaryOp: op='&' (at pp.c:25705)
          ArrayRef:  (at pp.c:25705)
            ID: name='VirtualizeTimerC__0__m_timers' (at pp.c:25705)
            ID: name='num' (at pp.c:25705)
      Assignment: op='=' (at pp.c:25708)
        StructRef: type='->' (at pp.c:25708)
          ID: name='timer' (at pp.c:25708)
          ID: name='t0' (at pp.c:25708)
        ID: name='t0' (at pp.c:25708)
      Assignment: op='=' (at pp.c:25709)
        StructRef: type='->' (at pp.c:25709)
          ID: name='timer' (at pp.c:25709)
          ID: name='dt' (at pp.c:25709)
        ID: name='dt' (at pp.c:25709)
      Assignment: op='=' (at pp.c:25710)
        StructRef: type='->' (at pp.c:25710)
          ID: name='timer' (at pp.c:25710)
          ID: name='isoneshot' (at pp.c:25710)
        ID: name='isoneshot' (at pp.c:25710)
      Assignment: op='=' (at pp.c:25711)
        StructRef: type='->' (at pp.c:25711)
          ID: name='timer' (at pp.c:25711)
          ID: name='isrunning' (at pp.c:25711)
        ID: name='TRUE' (at pp.c:25711)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__updateFromTimer__postTask' (at pp.c:25712)
  FuncDef:  (at pp.c:25716)
    Decl: name='Msp430RefVoltGeneratorP__switchOff', quals=[], storage=['static'] (at pp.c:25716)
      FuncDecl: quals=None (at pp.c:25716)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__switchOff', quals=[] (at pp.c:25716)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:25718)
      Compound:  (at pp.c:25719)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:25719)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:25719)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:25719)
        Compound:  (at pp.c:25721)
          If:  (at pp.c:25722)
            FuncCall:  (at None)
              ID: name='Msp430RefVoltGeneratorP__HplAdc12__isBusy' (at pp.c:25722)
            Compound:  (at pp.c:25722)
              Compound:  (at pp.c:25723)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:25724)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:25724)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='EBUSY' (at pp.c:25726)
                Compound:  (at pp.c:25728)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:25730)
                    ExprList:  (at pp.c:25730)
                      ID: name='__nesc_atomic' (at pp.c:25730)
                  Return:  (at pp.c:25732)
                    ID: name='__nesc_temp' (at pp.c:25732)
            Compound:  (at pp.c:25738)
              Decl: name='ctl0', quals=[], storage=[] (at pp.c:25739)
                TypeDecl: declname='ctl0', quals=[] (at pp.c:25739)
                  IdentifierType: names=['adc12ctl0_t'] (at None)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltGeneratorP__HplAdc12__getCtl0' (at pp.c:25739)
              Assignment: op='=' (at pp.c:25742)
                StructRef: type='.' (at pp.c:25742)
                  ID: name='ctl0' (at pp.c:25742)
                  ID: name='enc' (at pp.c:25742)
                Constant: type='int', value='0' (at pp.c:25742)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltGeneratorP__HplAdc12__setCtl0' (at pp.c:25743)
                ExprList:  (at pp.c:25743)
                  ID: name='ctl0' (at pp.c:25743)
              Assignment: op='=' (at pp.c:25744)
                StructRef: type='.' (at pp.c:25744)
                  ID: name='ctl0' (at pp.c:25744)
                  ID: name='refon' (at pp.c:25744)
                Constant: type='int', value='0' (at pp.c:25744)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltGeneratorP__HplAdc12__setCtl0' (at pp.c:25745)
                ExprList:  (at pp.c:25745)
                  ID: name='ctl0' (at pp.c:25745)
              Compound:  (at pp.c:25746)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:25747)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:25747)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='SUCCESS' (at pp.c:25749)
                Compound:  (at pp.c:25751)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:25753)
                    ExprList:  (at pp.c:25753)
                      ID: name='__nesc_atomic' (at pp.c:25753)
                  Return:  (at pp.c:25755)
                    ID: name='__nesc_temp' (at pp.c:25755)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:25761)
          ExprList:  (at pp.c:25761)
            ID: name='__nesc_atomic' (at pp.c:25761)
  FuncDef:  (at pp.c:25765)
    Decl: name='Msp430RefVoltGeneratorP__signalStartDone', quals=[], storage=['static'] (at pp.c:25765)
      FuncDecl: quals=None (at pp.c:25765)
        ParamList:  (at pp.c:25765)
          Decl: name='state', quals=[], storage=[] (at pp.c:25765)
            TypeDecl: declname='state', quals=[] (at pp.c:25765)
              IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:25765)
            TypeDecl: declname='result', quals=[] (at pp.c:25765)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__signalStartDone', quals=[] (at pp.c:25765)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25767)
      If:  (at pp.c:25768)
        BinaryOp: op='||' (at pp.c:25768)
          BinaryOp: op='==' (at pp.c:25768)
            ID: name='state' (at pp.c:25768)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_STABLE' (at pp.c:25768)
          BinaryOp: op='==' (at pp.c:25768)
            ID: name='state' (at pp.c:25768)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_ON_PENDING' (at pp.c:25768)
        Compound:  (at pp.c:25768)
          FuncCall:  (at None)
            ID: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__startDone' (at pp.c:25769)
            ExprList:  (at pp.c:25769)
              ID: name='result' (at pp.c:25769)
        Compound:  (at pp.c:25771)
          FuncCall:  (at None)
            ID: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__startDone' (at pp.c:25773)
            ExprList:  (at pp.c:25773)
              ID: name='result' (at pp.c:25773)
  FuncDef:  (at pp.c:25778)
    Decl: name='AdcP__SubResourceReadNow__granted', quals=[], storage=['static'] (at pp.c:25778)
      FuncDecl: quals=None (at pp.c:25778)
        ParamList:  (at pp.c:25778)
          Decl: name='nowClient', quals=[], storage=[] (at pp.c:25778)
            TypeDecl: declname='nowClient', quals=[] (at pp.c:25778)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__SubResourceReadNow__granted', quals=[] (at pp.c:25778)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25779)
      If:  (at pp.c:25780)
        BinaryOp: op='==' (at None)
          FuncCall:  (at None)
            ID: name='AdcP__configure' (at pp.c:25780)
            ExprList:  (at pp.c:25780)
              ID: name='nowClient' (at pp.c:25780)
          ID: name='SUCCESS' (at pp.c:25780)
        Compound:  (at pp.c:25780)
          Assignment: op='=' (at pp.c:25781)
            ID: name='AdcP__state' (at pp.c:25781)
            ID: name='AdcP__STATE_READNOW' (at pp.c:25781)
        Compound:  (at pp.c:25783)
          Assignment: op='=' (at pp.c:25785)
            ID: name='AdcP__state' (at pp.c:25785)
            ID: name='AdcP__STATE_READNOW_INVALID_CONFIG' (at pp.c:25785)
      FuncCall:  (at None)
        ID: name='AdcP__ResourceReadNow__granted' (at pp.c:25788)
        ExprList:  (at pp.c:25788)
          ID: name='nowClient' (at pp.c:25788)
  FuncDef:  (at pp.c:25792)
    Decl: name='AdcP__configure', quals=[], storage=['static'] (at pp.c:25792)
      FuncDecl: quals=None (at pp.c:25792)
        ParamList:  (at pp.c:25792)
          Decl: name='client', quals=[], storage=[] (at pp.c:25792)
            TypeDecl: declname='client', quals=[] (at pp.c:25792)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__configure', quals=[] (at pp.c:25792)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:25793)
      Decl: name='result', quals=[], storage=[] (at pp.c:25794)
        TypeDecl: declname='result', quals=[] (at pp.c:25794)
          IdentifierType: names=['error_t'] (at None)
        ID: name='EINVAL' (at pp.c:25794)
      Decl: name='config', quals=['const'], storage=[] (at pp.c:25795)
        PtrDecl: quals=[] (at pp.c:25795)
          TypeDecl: declname='config', quals=['const'] (at pp.c:25795)
            IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
      Assignment: op='=' (at pp.c:25798)
        ID: name='config' (at pp.c:25798)
        FuncCall:  (at None)
          ID: name='AdcP__Config__getConfiguration' (at pp.c:25798)
          ExprList:  (at pp.c:25798)
            ID: name='client' (at pp.c:25798)
      If:  (at pp.c:25799)
        BinaryOp: op='!=' (at pp.c:25799)
          StructRef: type='->' (at pp.c:25799)
            ID: name='config' (at pp.c:25799)
            ID: name='inch' (at pp.c:25799)
          ID: name='INPUT_CHANNEL_NONE' (at pp.c:25799)
        Compound:  (at pp.c:25799)
          Assignment: op='=' (at pp.c:25800)
            ID: name='result' (at pp.c:25800)
            FuncCall:  (at None)
              ID: name='AdcP__SingleChannel__configureSingle' (at pp.c:25800)
              ExprList:  (at pp.c:25800)
                ID: name='client' (at pp.c:25800)
                ID: name='config' (at pp.c:25800)
      Return:  (at pp.c:25803)
        ID: name='result' (at pp.c:25803)
  FuncDef:  (at pp.c:25807)
    Decl: name='Msp430Adc12ImplP__SingleChannel__configureSingle', quals=[], storage=['static'] (at pp.c:25807)
      FuncDecl: quals=None (at pp.c:25807)
        ParamList:  (at pp.c:25807)
          Decl: name='id', quals=[], storage=[] (at pp.c:25807)
            TypeDecl: declname='id', quals=[] (at pp.c:25807)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='config', quals=['const'], storage=[] (at pp.c:25808)
            PtrDecl: quals=[] (at pp.c:25808)
              TypeDecl: declname='config', quals=['const'] (at pp.c:25808)
                IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__SingleChannel__configureSingle', quals=[] (at pp.c:25807)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:25809)
      Decl: name='result', quals=[], storage=[] (at pp.c:25810)
        TypeDecl: declname='result', quals=[] (at pp.c:25810)
          IdentifierType: names=['error_t'] (at None)
        ID: name='ERESERVE' (at pp.c:25810)
      If:  (at pp.c:25812)
        UnaryOp: op='!' (at pp.c:25812)
          ID: name='config' (at pp.c:25812)
        Compound:  (at pp.c:25812)
          Return:  (at pp.c:25813)
            ID: name='EINVAL' (at pp.c:25813)
      Compound:  (at pp.c:25815)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:25815)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:25815)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:25815)
        Compound:  (at pp.c:25817)
          If:  (at pp.c:25818)
            BinaryOp: op='&' (at pp.c:25818)
              ID: name='Msp430Adc12ImplP__state' (at pp.c:25818)
              ID: name='Msp430Adc12ImplP__ADC_BUSY' (at pp.c:25818)
            Compound:  (at pp.c:25819)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:25820)
                TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:25820)
                  IdentifierType: names=['char', 'unsigned'] (at None)
                ID: name='EBUSY' (at pp.c:25822)
              Compound:  (at pp.c:25824)
                FuncCall:  (at None)
                  ID: name='__nesc_atomic_end' (at pp.c:25826)
                  ExprList:  (at pp.c:25826)
                    ID: name='__nesc_atomic' (at pp.c:25826)
                Return:  (at pp.c:25828)
                  ID: name='__nesc_temp' (at pp.c:25828)
          If:  (at pp.c:25832)
            BinaryOp: op='==' (at None)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__ADCArbiterInfo__userId' (at pp.c:25832)
              ID: name='id' (at pp.c:25832)
            Compound:  (at pp.c:25832)
              Decl: name='ctl1', quals=[], storage=[] (at pp.c:25833)
                TypeDecl: declname='ctl1', quals=[] (at pp.c:25833)
                  IdentifierType: names=['adc12ctl1_t'] (at None)
                ExprList:  (at pp.c:25834)
                  Assignment: op='=' (at pp.c:25834)
                    StructRef: type='.' (at pp.c:25834)
                      ID: name='adc12busy' (at pp.c:25834)
                    Constant: type='int', value='0' (at pp.c:25834)
                  Assignment: op='=' (at pp.c:25835)
                    StructRef: type='.' (at pp.c:25835)
                      ID: name='conseq' (at pp.c:25835)
                    Constant: type='int', value='0' (at pp.c:25835)
                  Assignment: op='=' (at pp.c:25836)
                    StructRef: type='.' (at pp.c:25836)
                      ID: name='adc12ssel' (at pp.c:25836)
                    StructRef: type='->' (at pp.c:25836)
                      ID: name='config' (at pp.c:25836)
                      ID: name='adc12ssel' (at pp.c:25836)
                  Assignment: op='=' (at pp.c:25837)
                    StructRef: type='.' (at pp.c:25837)
                      ID: name='adc12div' (at pp.c:25837)
                    StructRef: type='->' (at pp.c:25837)
                      ID: name='config' (at pp.c:25837)
                      ID: name='adc12div' (at pp.c:25837)
                  Assignment: op='=' (at pp.c:25838)
                    StructRef: type='.' (at pp.c:25838)
                      ID: name='issh' (at pp.c:25838)
                    Constant: type='int', value='0' (at pp.c:25838)
                  Assignment: op='=' (at pp.c:25839)
                    StructRef: type='.' (at pp.c:25839)
                      ID: name='shp' (at pp.c:25839)
                    Constant: type='int', value='1' (at pp.c:25839)
                  Assignment: op='=' (at pp.c:25840)
                    StructRef: type='.' (at pp.c:25840)
                      ID: name='shs' (at pp.c:25840)
                    Constant: type='int', value='0' (at pp.c:25840)
                  Assignment: op='=' (at pp.c:25841)
                    StructRef: type='.' (at pp.c:25841)
                      ID: name='cstartadd' (at pp.c:25841)
                    Constant: type='int', value='0' (at pp.c:25841)
              Decl: name='memctl', quals=[], storage=[] (at pp.c:25843)
                TypeDecl: declname='memctl', quals=[] (at pp.c:25843)
                  IdentifierType: names=['adc12memctl_t'] (at None)
                ExprList:  (at pp.c:25844)
                  Assignment: op='=' (at pp.c:25844)
                    StructRef: type='.' (at pp.c:25844)
                      ID: name='inch' (at pp.c:25844)
                    StructRef: type='->' (at pp.c:25844)
                      ID: name='config' (at pp.c:25844)
                      ID: name='inch' (at pp.c:25844)
                  Assignment: op='=' (at pp.c:25845)
                    StructRef: type='.' (at pp.c:25845)
                      ID: name='sref' (at pp.c:25845)
                    StructRef: type='->' (at pp.c:25845)
                      ID: name='config' (at pp.c:25845)
                      ID: name='sref' (at pp.c:25845)
                  Assignment: op='=' (at pp.c:25846)
                    StructRef: type='.' (at pp.c:25846)
                      ID: name='eos' (at pp.c:25846)
                    Constant: type='int', value='1' (at pp.c:25846)
              Decl: name='ctl0', quals=[], storage=[] (at pp.c:25848)
                TypeDecl: declname='ctl0', quals=[] (at pp.c:25848)
                  IdentifierType: names=['adc12ctl0_t'] (at None)
                FuncCall:  (at None)
                  ID: name='Msp430Adc12ImplP__HplAdc12__getCtl0' (at pp.c:25848)
              Assignment: op='=' (at pp.c:25851)
                StructRef: type='.' (at pp.c:25851)
                  ID: name='ctl0' (at pp.c:25851)
                  ID: name='msc' (at pp.c:25851)
                Constant: type='int', value='1' (at pp.c:25851)
              Assignment: op='=' (at pp.c:25852)
                StructRef: type='.' (at pp.c:25852)
                  ID: name='ctl0' (at pp.c:25852)
                  ID: name='sht0' (at pp.c:25852)
                StructRef: type='->' (at pp.c:25852)
                  ID: name='config' (at pp.c:25852)
                  ID: name='sht' (at pp.c:25852)
              Assignment: op='=' (at pp.c:25853)
                StructRef: type='.' (at pp.c:25853)
                  ID: name='ctl0' (at pp.c:25853)
                  ID: name='sht1' (at pp.c:25853)
                StructRef: type='->' (at pp.c:25853)
                  ID: name='config' (at pp.c:25853)
                  ID: name='sht' (at pp.c:25853)
              Assignment: op='=' (at pp.c:25855)
                ID: name='Msp430Adc12ImplP__state' (at pp.c:25855)
                ID: name='Msp430Adc12ImplP__SINGLE_DATA' (at pp.c:25855)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__HplAdc12__setCtl0' (at pp.c:25856)
                ExprList:  (at pp.c:25856)
                  ID: name='ctl0' (at pp.c:25856)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__HplAdc12__setCtl1' (at pp.c:25857)
                ExprList:  (at pp.c:25857)
                  ID: name='ctl1' (at pp.c:25857)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__HplAdc12__setMCtl' (at pp.c:25858)
                ExprList:  (at pp.c:25858)
                  Constant: type='int', value='0' (at pp.c:25858)
                  ID: name='memctl' (at pp.c:25858)
              FuncCall:  (at None)
                ID: name='Msp430Adc12ImplP__HplAdc12__setIEFlags' (at pp.c:25859)
                ExprList:  (at pp.c:25859)
                  Constant: type='int', value='0x01' (at pp.c:25859)
              Assignment: op='=' (at pp.c:25860)
                ID: name='result' (at pp.c:25860)
                ID: name='SUCCESS' (at pp.c:25860)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:25864)
          ExprList:  (at pp.c:25864)
            ID: name='__nesc_atomic' (at pp.c:25864)
      Return:  (at pp.c:25865)
        ID: name='result' (at pp.c:25865)
  FuncDef:  (at pp.c:25869)
    Decl: name='AdcStreamP__ReadStream__read', quals=[], storage=['static'] (at pp.c:25869)
      FuncDecl: quals=None (at pp.c:25869)
        ParamList:  (at pp.c:25869)
          Decl: name='c', quals=[], storage=[] (at pp.c:25869)
            TypeDecl: declname='c', quals=[] (at pp.c:25869)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='usPeriod', quals=[], storage=[] (at pp.c:25869)
            TypeDecl: declname='usPeriod', quals=[] (at pp.c:25869)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='AdcStreamP__ReadStream__read', quals=[] (at pp.c:25869)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:25870)
      If:  (at pp.c:25871)
        BinaryOp: op='&' (at pp.c:25871)
          ID: name='usPeriod' (at pp.c:25871)
          Constant: type='int', value='0xFFFF0000' (at pp.c:25871)
        Compound:  (at pp.c:25871)
          Assignment: op='=' (at pp.c:25873)
            ID: name='AdcStreamP__period' (at pp.c:25873)
            BinaryOp: op='/' (at pp.c:25873)
              ID: name='usPeriod' (at pp.c:25873)
              Constant: type='int', value='1000' (at pp.c:25873)
          Assignment: op='=' (at pp.c:25874)
            ID: name='AdcStreamP__periodModified' (at pp.c:25874)
            ID: name='TRUE' (at pp.c:25874)
          Assignment: op='=' (at pp.c:25875)
            ID: name='AdcStreamP__client' (at pp.c:25875)
            ID: name='c' (at pp.c:25875)
          Assignment: op='=' (at pp.c:25876)
            ID: name='AdcStreamP__now' (at pp.c:25876)
            FuncCall:  (at None)
              ID: name='AdcStreamP__Alarm__getNow' (at pp.c:25876)
          FuncCall:  (at None)
            ID: name='AdcStreamP__SingleChannel__configureSingle' (at pp.c:25877)
            ExprList:  (at pp.c:25877)
              ID: name='c' (at pp.c:25877)
              FuncCall:  (at None)
                ID: name='AdcStreamP__AdcConfigure__getConfiguration' (at pp.c:25877)
                ExprList:  (at pp.c:25877)
                  ID: name='c' (at pp.c:25877)
          If:  (at pp.c:25878)
            BinaryOp: op='==' (at None)
              FuncCall:  (at None)
                ID: name='AdcStreamP__nextBuffer' (at pp.c:25878)
                ExprList:  (at pp.c:25878)
                  ID: name='FALSE' (at pp.c:25878)
              ID: name='SUCCESS' (at pp.c:25878)
            Compound:  (at pp.c:25878)
              FuncCall:  (at None)
                ID: name='AdcStreamP__sampleSingle' (at pp.c:25879)
        Compound:  (at pp.c:25884)
          Assignment: op='=' (at pp.c:25885)
            ID: name='AdcStreamP__period' (at pp.c:25885)
            ID: name='usPeriod' (at pp.c:25885)
          Assignment: op='=' (at pp.c:25886)
            ID: name='AdcStreamP__periodModified' (at pp.c:25886)
            ID: name='FALSE' (at pp.c:25886)
          Assignment: op='=' (at pp.c:25887)
            ID: name='AdcStreamP__client' (at pp.c:25887)
            ID: name='c' (at pp.c:25887)
          FuncCall:  (at None)
            ID: name='AdcStreamP__nextMultiple' (at pp.c:25888)
            ExprList:  (at pp.c:25888)
              ID: name='c' (at pp.c:25888)
      Return:  (at pp.c:25890)
        ID: name='SUCCESS' (at pp.c:25890)
  FuncDef:  (at pp.c:25894)
    Decl: name='AdcStreamP__nextBuffer', quals=[], storage=['static'] (at pp.c:25894)
      FuncDecl: quals=None (at pp.c:25894)
        ParamList:  (at pp.c:25894)
          Decl: name='startNextAlarm', quals=[], storage=[] (at pp.c:25894)
            TypeDecl: declname='startNextAlarm', quals=[] (at pp.c:25894)
              IdentifierType: names=['bool'] (at None)
        TypeDecl: declname='AdcStreamP__nextBuffer', quals=[] (at pp.c:25894)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:25896)
      Compound:  (at pp.c:25897)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:25897)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:25897)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:25897)
        Compound:  (at pp.c:25898)
          Decl: name='entry', quals=[], storage=[] (at pp.c:25899)
            PtrDecl: quals=[] (at pp.c:25899)
              TypeDecl: declname='entry', quals=[] (at pp.c:25899)
                Struct: name='AdcStreamP__list_entry_t', packed=False (at pp.c:25899)
            ArrayRef:  (at pp.c:25899)
              ID: name='AdcStreamP__bufferQueue' (at pp.c:25899)
              ID: name='AdcStreamP__client' (at pp.c:25899)
          If:  (at pp.c:25901)
            UnaryOp: op='!' (at pp.c:25901)
              ID: name='entry' (at pp.c:25901)
            Compound:  (at pp.c:25902)
              Assignment: op='=' (at pp.c:25904)
                ArrayRef:  (at pp.c:25904)
                  ID: name='AdcStreamP__bufferQueueEnd' (at pp.c:25904)
                  ID: name='AdcStreamP__client' (at pp.c:25904)
                Cast:  (at None)
                  Typename: quals=[] (at None)
                    PtrDecl: quals=[] (at pp.c:25904)
                      TypeDecl: declname=None, quals=[] (at None)
                        IdentifierType: names=['void'] (at None)
                  Constant: type='int', value='0' (at pp.c:25904)
              FuncCall:  (at None)
                ID: name='AdcStreamP__readStreamDone__postTask' (at pp.c:25905)
              Compound:  (at pp.c:25906)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:25907)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:25907)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='FAIL' (at pp.c:25909)
                Compound:  (at pp.c:25911)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:25913)
                    ExprList:  (at pp.c:25913)
                      ID: name='__nesc_atomic' (at pp.c:25913)
                  Return:  (at pp.c:25915)
                    ID: name='__nesc_temp' (at pp.c:25915)
            Compound:  (at pp.c:25921)
              Decl: name='tmp_count', quals=[], storage=[] (at pp.c:25922)
                TypeDecl: declname='tmp_count', quals=[] (at pp.c:25922)
                  IdentifierType: names=['uint16_t'] (at None)
              Assignment: op='=' (at pp.c:25925)
                ArrayRef:  (at pp.c:25925)
                  ID: name='AdcStreamP__bufferQueue' (at pp.c:25925)
                  ID: name='AdcStreamP__client' (at pp.c:25925)
                StructRef: type='->' (at pp.c:25925)
                  ID: name='entry' (at pp.c:25925)
                  ID: name='next' (at pp.c:25925)
              If:  (at pp.c:25926)
                UnaryOp: op='!' (at pp.c:25926)
                  ArrayRef:  (at pp.c:25926)
                    ID: name='AdcStreamP__bufferQueue' (at pp.c:25926)
                    ID: name='AdcStreamP__client' (at pp.c:25926)
                Compound:  (at pp.c:25926)
                  Assignment: op='=' (at pp.c:25927)
                    ArrayRef:  (at pp.c:25927)
                      ID: name='AdcStreamP__bufferQueueEnd' (at pp.c:25927)
                      ID: name='AdcStreamP__client' (at pp.c:25927)
                    UnaryOp: op='&' (at pp.c:25927)
                      ArrayRef:  (at pp.c:25927)
                        ID: name='AdcStreamP__bufferQueue' (at pp.c:25927)
                        ID: name='AdcStreamP__client' (at pp.c:25927)
              Assignment: op='=' (at pp.c:25930)
                ID: name='AdcStreamP__pos' (at pp.c:25930)
                Assignment: op='=' (at pp.c:25930)
                  ID: name='AdcStreamP__buffer' (at pp.c:25930)
                  Cast:  (at None)
                    Typename: quals=[] (at None)
                      PtrDecl: quals=[] (at pp.c:25930)
                        TypeDecl: declname=None, quals=[] (at None)
                          IdentifierType: names=['void'] (at None)
                    Constant: type='int', value='0' (at pp.c:25930)
              Assignment: op='=' (at pp.c:25931)
                ID: name='AdcStreamP__count' (at pp.c:25931)
                StructRef: type='->' (at pp.c:25931)
                  ID: name='entry' (at pp.c:25931)
                  ID: name='count' (at pp.c:25931)
              Assignment: op='=' (at pp.c:25932)
                ID: name='tmp_count' (at pp.c:25932)
                ID: name='AdcStreamP__count' (at pp.c:25932)
              Assignment: op='=' (at pp.c:25933)
                ID: name='AdcStreamP__pos' (at pp.c:25933)
                Assignment: op='=' (at pp.c:25933)
                  ID: name='AdcStreamP__buffer' (at pp.c:25933)
                  Cast:  (at None)
                    Typename: quals=[] (at None)
                      PtrDecl: quals=[] (at pp.c:25933)
                        TypeDecl: declname=None, quals=[] (at None)
                          IdentifierType: names=['uint16_t'] (at None)
                    ID: name='entry' (at pp.c:25933)
              If:  (at pp.c:25934)
                ID: name='startNextAlarm' (at pp.c:25934)
                Compound:  (at pp.c:25934)
                  FuncCall:  (at None)
                    ID: name='AdcStreamP__nextAlarm' (at pp.c:25935)
              Compound:  (at pp.c:25938)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:25939)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:25939)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='SUCCESS' (at pp.c:25941)
                Compound:  (at pp.c:25943)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:25945)
                    ExprList:  (at pp.c:25945)
                      ID: name='__nesc_atomic' (at pp.c:25945)
                  Return:  (at pp.c:25947)
                    ID: name='__nesc_temp' (at pp.c:25947)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:25953)
          ExprList:  (at pp.c:25953)
            ID: name='__nesc_atomic' (at pp.c:25953)
  FuncDef:  (at pp.c:25957)
    Decl: name='AdcStreamP__nextMultiple', quals=[], storage=['static'] (at pp.c:25957)
      FuncDecl: quals=None (at pp.c:25957)
        ParamList:  (at pp.c:25957)
          Decl: name='c', quals=[], storage=[] (at pp.c:25957)
            TypeDecl: declname='c', quals=[] (at pp.c:25957)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcStreamP__nextMultiple', quals=[] (at pp.c:25957)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25958)
      If:  (at pp.c:25959)
        BinaryOp: op='==' (at None)
          FuncCall:  (at None)
            ID: name='AdcStreamP__nextBuffer' (at pp.c:25959)
            ExprList:  (at pp.c:25959)
              ID: name='FALSE' (at pp.c:25959)
          ID: name='SUCCESS' (at pp.c:25959)
        Compound:  (at pp.c:25959)
          Decl: name='config', quals=[], storage=[] (at pp.c:25960)
            TypeDecl: declname='config', quals=[] (at pp.c:25960)
              IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
            UnaryOp: op='*' (at None)
              FuncCall:  (at None)
                ID: name='AdcStreamP__AdcConfigure__getConfiguration' (at pp.c:25960)
                ExprList:  (at pp.c:25960)
                  ID: name='c' (at pp.c:25960)
          Assignment: op='=' (at pp.c:25963)
            StructRef: type='.' (at pp.c:25963)
              ID: name='config' (at pp.c:25963)
              ID: name='sampcon_ssel' (at pp.c:25963)
            ID: name='SAMPCON_SOURCE_SMCLK' (at pp.c:25963)
          Assignment: op='=' (at pp.c:25964)
            StructRef: type='.' (at pp.c:25964)
              ID: name='config' (at pp.c:25964)
              ID: name='sampcon_id' (at pp.c:25964)
            ID: name='SAMPCON_CLOCK_DIV_1' (at pp.c:25964)
          If:  (at pp.c:25965)
            BinaryOp: op='==' (at None)
              FuncCall:  (at None)
                ID: name='AdcStreamP__SingleChannel__configureMultiple' (at pp.c:25965)
                ExprList:  (at pp.c:25965)
                  ID: name='c' (at pp.c:25965)
                  UnaryOp: op='&' (at pp.c:25965)
                    ID: name='config' (at pp.c:25965)
                  ID: name='AdcStreamP__pos' (at pp.c:25965)
                  ID: name='AdcStreamP__count' (at pp.c:25965)
                  ID: name='AdcStreamP__period' (at pp.c:25965)
              ID: name='SUCCESS' (at pp.c:25965)
            Compound:  (at pp.c:25965)
              FuncCall:  (at None)
                ID: name='AdcStreamP__SingleChannel__getData' (at pp.c:25966)
                ExprList:  (at pp.c:25966)
                  ID: name='c' (at pp.c:25966)
            Compound:  (at pp.c:25970)
              FuncCall:  (at None)
                ID: name='AdcStreamP__postBuffer' (at pp.c:25971)
                ExprList:  (at pp.c:25971)
                  ID: name='c' (at pp.c:25971)
                  ID: name='AdcStreamP__pos' (at pp.c:25971)
                  ID: name='AdcStreamP__count' (at pp.c:25971)
              FuncCall:  (at None)
                ID: name='AdcStreamP__readStreamFail__postTask' (at pp.c:25972)
  FuncDef:  (at pp.c:25978)
    Decl: name='AdcP__ResourceRead__granted', quals=[], storage=['static'] (at pp.c:25978)
      FuncDecl: quals=None (at pp.c:25978)
        ParamList:  (at pp.c:25978)
          Decl: name='client', quals=[], storage=[] (at pp.c:25978)
            TypeDecl: declname='client', quals=[] (at pp.c:25978)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='AdcP__ResourceRead__granted', quals=[] (at pp.c:25978)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25979)
      Decl: name='result', quals=[], storage=[] (at pp.c:25981)
        TypeDecl: declname='result', quals=[] (at pp.c:25981)
          IdentifierType: names=['error_t'] (at None)
        FuncCall:  (at None)
          ID: name='AdcP__configure' (at pp.c:25981)
          ExprList:  (at pp.c:25981)
            ID: name='client' (at pp.c:25981)
      If:  (at pp.c:25984)
        BinaryOp: op='==' (at pp.c:25984)
          ID: name='result' (at pp.c:25984)
          ID: name='SUCCESS' (at pp.c:25984)
        Compound:  (at pp.c:25984)
          Assignment: op='=' (at pp.c:25985)
            ID: name='AdcP__state' (at pp.c:25985)
            ID: name='AdcP__STATE_READ' (at pp.c:25985)
          Assignment: op='=' (at pp.c:25986)
            ID: name='result' (at pp.c:25986)
            FuncCall:  (at None)
              ID: name='AdcP__SingleChannel__getData' (at pp.c:25986)
              ExprList:  (at pp.c:25986)
                ID: name='client' (at pp.c:25986)
        Compound:  (at pp.c:25990)
          FuncCall:  (at None)
            ID: name='AdcP__ResourceRead__release' (at pp.c:25991)
            ExprList:  (at pp.c:25991)
              ID: name='client' (at pp.c:25991)
          FuncCall:  (at None)
            ID: name='AdcP__Read__readDone' (at pp.c:25992)
            ExprList:  (at pp.c:25992)
              ID: name='client' (at pp.c:25992)
              ID: name='result' (at pp.c:25992)
              Constant: type='int', value='0' (at pp.c:25992)
  FuncDef:  (at pp.c:25997)
    Decl: name='OscilloscopeC__Read__readDone', quals=[], storage=['static'] (at pp.c:25997)
      FuncDecl: quals=None (at pp.c:25997)
        ParamList:  (at pp.c:25997)
          Decl: name='result', quals=[], storage=[] (at pp.c:25997)
            TypeDecl: declname='result', quals=[] (at pp.c:25997)
              IdentifierType: names=['error_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:25997)
            TypeDecl: declname='data', quals=[] (at pp.c:25997)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='OscilloscopeC__Read__readDone', quals=[] (at pp.c:25997)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:25999)
      If:  (at pp.c:26000)
        BinaryOp: op='!=' (at pp.c:26000)
          ID: name='result' (at pp.c:26000)
          ID: name='SUCCESS' (at pp.c:26000)
        Compound:  (at pp.c:26001)
          Assignment: op='=' (at pp.c:26002)
            ID: name='data' (at pp.c:26002)
            Constant: type='int', value='0xffff' (at pp.c:26002)
          FuncCall:  (at None)
            ID: name='OscilloscopeC__report_problem' (at pp.c:26003)
      If:  (at pp.c:26005)
        BinaryOp: op='<' (at pp.c:26005)
          ID: name='OscilloscopeC__reading' (at pp.c:26005)
          ID: name='NREADINGS' (at pp.c:26005)
        Compound:  (at pp.c:26005)
          FuncCall:  (at None)
            ID: name='__nesc_hton_uint16' (at pp.c:26006)
            ExprList:  (at pp.c:26006)
              StructRef: type='.' (at pp.c:26006)
                ArrayRef:  (at pp.c:26006)
                  StructRef: type='.' (at pp.c:26006)
                    ID: name='OscilloscopeC__local' (at pp.c:26006)
                    ID: name='readings' (at pp.c:26006)
                  UnaryOp: op='p++' (at pp.c:26006)
                    ID: name='OscilloscopeC__reading' (at pp.c:26006)
                ID: name='nxdata' (at pp.c:26006)
              ID: name='data' (at pp.c:26006)
  FuncDef:  (at pp.c:26011)
    Decl: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__startDone', quals=[], storage=['static'] (at pp.c:26011)
      FuncDecl: quals=None (at pp.c:26011)
        ParamList:  (at pp.c:26011)
          Decl: name='error', quals=[], storage=[] (at pp.c:26011)
            TypeDecl: declname='error', quals=[] (at pp.c:26011)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__RefVolt_2_5V__startDone', quals=[] (at pp.c:26011)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26012)
      If:  (at pp.c:26013)
        BinaryOp: op='!=' (at pp.c:26013)
          ID: name='Msp430RefVoltArbiterImplP__syncOwner' (at pp.c:26013)
          ID: name='Msp430RefVoltArbiterImplP__NO_OWNER' (at pp.c:26013)
        Compound:  (at pp.c:26013)
          FuncCall:  (at None)
            ID: name='Msp430RefVoltArbiterImplP__ClientResource__granted' (at pp.c:26016)
            ExprList:  (at pp.c:26016)
              ID: name='Msp430RefVoltArbiterImplP__syncOwner' (at pp.c:26016)
  FuncDef:  (at pp.c:26021)
    Decl: name='Msp430RefVoltGeneratorP__signalStopDone', quals=[], storage=['static'] (at pp.c:26021)
      FuncDecl: quals=None (at pp.c:26021)
        ParamList:  (at pp.c:26021)
          Decl: name='state', quals=[], storage=[] (at pp.c:26021)
            TypeDecl: declname='state', quals=[] (at pp.c:26021)
              IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
          Decl: name='result', quals=[], storage=[] (at pp.c:26021)
            TypeDecl: declname='result', quals=[] (at pp.c:26021)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__signalStopDone', quals=[] (at pp.c:26021)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26023)
      If:  (at pp.c:26024)
        BinaryOp: op='||' (at pp.c:26024)
          BinaryOp: op='==' (at pp.c:26024)
            ID: name='state' (at pp.c:26024)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_STABLE' (at pp.c:26024)
          BinaryOp: op='==' (at pp.c:26024)
            ID: name='state' (at pp.c:26024)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_OFF_PENDING' (at pp.c:26024)
        Compound:  (at pp.c:26024)
          FuncCall:  (at None)
            ID: name='Msp430RefVoltGeneratorP__RefVolt_1_5V__stopDone' (at pp.c:26025)
            ExprList:  (at pp.c:26025)
              ID: name='result' (at pp.c:26025)
        Compound:  (at pp.c:26027)
          FuncCall:  (at None)
            ID: name='Msp430RefVoltGeneratorP__RefVolt_2_5V__stopDone' (at pp.c:26029)
            ExprList:  (at pp.c:26029)
              ID: name='result' (at pp.c:26029)
  FuncDef:  (at pp.c:26034)
    Decl: name='Msp430RefVoltArbiterImplP__AdcResource__granted', quals=[], storage=['static'] (at pp.c:26034)
      FuncDecl: quals=None (at pp.c:26034)
        ParamList:  (at pp.c:26034)
          Decl: name='client', quals=[], storage=[] (at pp.c:26034)
            TypeDecl: declname='client', quals=[] (at pp.c:26034)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltArbiterImplP__AdcResource__granted', quals=[] (at pp.c:26034)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26035)
      Decl: name='settings', quals=['const'], storage=[] (at pp.c:26036)
        PtrDecl: quals=[] (at pp.c:26036)
          TypeDecl: declname='settings', quals=['const'] (at pp.c:26036)
            IdentifierType: names=['msp430adc12_channel_config_t'] (at None)
        FuncCall:  (at None)
          ID: name='Msp430RefVoltArbiterImplP__Config__getConfiguration' (at pp.c:26036)
          ExprList:  (at pp.c:26036)
            ID: name='client' (at pp.c:26036)
      If:  (at pp.c:26039)
        BinaryOp: op='||' (at pp.c:26039)
          BinaryOp: op='==' (at pp.c:26039)
            StructRef: type='->' (at pp.c:26039)
              ID: name='settings' (at pp.c:26039)
              ID: name='sref' (at pp.c:26039)
            ID: name='REFERENCE_VREFplus_AVss' (at pp.c:26039)
          BinaryOp: op='==' (at pp.c:26040)
            StructRef: type='->' (at pp.c:26040)
              ID: name='settings' (at pp.c:26040)
              ID: name='sref' (at pp.c:26040)
            ID: name='REFERENCE_VREFplus_VREFnegterm' (at pp.c:26040)
        Compound:  (at pp.c:26040)
          Decl: name='started', quals=[], storage=[] (at pp.c:26041)
            TypeDecl: declname='started', quals=[] (at pp.c:26041)
              IdentifierType: names=['error_t'] (at None)
          If:  (at pp.c:26044)
            BinaryOp: op='!=' (at pp.c:26044)
              ID: name='Msp430RefVoltArbiterImplP__syncOwner' (at pp.c:26044)
              ID: name='Msp430RefVoltArbiterImplP__NO_OWNER' (at pp.c:26044)
            Compound:  (at pp.c:26044)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__AdcResource__release' (at pp.c:26048)
                ExprList:  (at pp.c:26048)
                  ID: name='client' (at pp.c:26048)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__AdcResource__request' (at pp.c:26049)
                ExprList:  (at pp.c:26049)
                  ID: name='client' (at pp.c:26049)
              Return:  (at pp.c:26050)
          Assignment: op='=' (at pp.c:26052)
            ID: name='Msp430RefVoltArbiterImplP__syncOwner' (at pp.c:26052)
            ID: name='client' (at pp.c:26052)
          If:  (at pp.c:26053)
            BinaryOp: op='==' (at pp.c:26053)
              StructRef: type='->' (at pp.c:26053)
                ID: name='settings' (at pp.c:26053)
                ID: name='ref2_5v' (at pp.c:26053)
              ID: name='REFVOLT_LEVEL_1_5' (at pp.c:26053)
            Compound:  (at pp.c:26053)
              Assignment: op='=' (at pp.c:26054)
                ID: name='Msp430RefVoltArbiterImplP__ref2_5v' (at pp.c:26054)
                ID: name='FALSE' (at pp.c:26054)
              Assignment: op='=' (at pp.c:26055)
                ID: name='started' (at pp.c:26055)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltArbiterImplP__RefVolt_1_5V__start' (at pp.c:26055)
            Compound:  (at pp.c:26057)
              Assignment: op='=' (at pp.c:26058)
                ID: name='Msp430RefVoltArbiterImplP__ref2_5v' (at pp.c:26058)
                ID: name='TRUE' (at pp.c:26058)
              Assignment: op='=' (at pp.c:26059)
                ID: name='started' (at pp.c:26059)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltArbiterImplP__RefVolt_2_5V__start' (at pp.c:26059)
          If:  (at pp.c:26061)
            BinaryOp: op='!=' (at pp.c:26061)
              ID: name='started' (at pp.c:26061)
              ID: name='SUCCESS' (at pp.c:26061)
            Compound:  (at pp.c:26061)
              Assignment: op='=' (at pp.c:26062)
                ID: name='Msp430RefVoltArbiterImplP__syncOwner' (at pp.c:26062)
                ID: name='Msp430RefVoltArbiterImplP__NO_OWNER' (at pp.c:26062)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__AdcResource__release' (at pp.c:26063)
                ExprList:  (at pp.c:26063)
                  ID: name='client' (at pp.c:26063)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltArbiterImplP__AdcResource__request' (at pp.c:26064)
                ExprList:  (at pp.c:26064)
                  ID: name='client' (at pp.c:26064)
        Compound:  (at pp.c:26067)
          FuncCall:  (at None)
            ID: name='Msp430RefVoltArbiterImplP__ClientResource__granted' (at pp.c:26069)
            ExprList:  (at pp.c:26069)
              ID: name='client' (at pp.c:26069)
  FuncDef:  (at pp.c:26074)
    Decl: name='SimpleArbiterP__0__Resource__request', quals=[], storage=['static'] (at pp.c:26074)
      FuncDecl: quals=None (at pp.c:26074)
        ParamList:  (at pp.c:26074)
          Decl: name='id', quals=[], storage=[] (at pp.c:26074)
            TypeDecl: declname='id', quals=[] (at pp.c:26074)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='SimpleArbiterP__0__Resource__request', quals=[] (at pp.c:26074)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:26076)
      FuncCall:  (at None)
        ID: name='SimpleArbiterP__0__ResourceRequested__requested' (at pp.c:26077)
        ExprList:  (at pp.c:26077)
          ID: name='SimpleArbiterP__0__resId' (at pp.c:26077)
      Compound:  (at pp.c:26078)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:26078)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:26078)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:26078)
        Compound:  (at pp.c:26080)
          If:  (at pp.c:26081)
            BinaryOp: op='==' (at pp.c:26081)
              ID: name='SimpleArbiterP__0__state' (at pp.c:26081)
              ID: name='SimpleArbiterP__0__RES_IDLE' (at pp.c:26081)
            Compound:  (at pp.c:26081)
              Assignment: op='=' (at pp.c:26082)
                ID: name='SimpleArbiterP__0__state' (at pp.c:26082)
                ID: name='SimpleArbiterP__0__RES_GRANTING' (at pp.c:26082)
              Assignment: op='=' (at pp.c:26083)
                ID: name='SimpleArbiterP__0__reqResId' (at pp.c:26083)
                ID: name='id' (at pp.c:26083)
              FuncCall:  (at None)
                ID: name='SimpleArbiterP__0__grantedTask__postTask' (at pp.c:26084)
              Compound:  (at pp.c:26085)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:26086)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:26086)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='SUCCESS' (at pp.c:26088)
                Compound:  (at pp.c:26090)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:26092)
                    ExprList:  (at pp.c:26092)
                      ID: name='__nesc_atomic' (at pp.c:26092)
                  Return:  (at pp.c:26094)
                    ID: name='__nesc_temp' (at pp.c:26094)
          Compound:  (at pp.c:26099)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:26100)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:26100)
                IdentifierType: names=['char', 'unsigned'] (at None)
              FuncCall:  (at None)
                ID: name='SimpleArbiterP__0__Queue__enqueue' (at pp.c:26102)
                ExprList:  (at pp.c:26102)
                  ID: name='id' (at pp.c:26102)
            Compound:  (at pp.c:26104)
              FuncCall:  (at None)
                ID: name='__nesc_atomic_end' (at pp.c:26106)
                ExprList:  (at pp.c:26106)
                  ID: name='__nesc_atomic' (at pp.c:26106)
              Return:  (at pp.c:26108)
                ID: name='__nesc_temp' (at pp.c:26108)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:26113)
          ExprList:  (at pp.c:26113)
            ID: name='__nesc_atomic' (at pp.c:26113)
  FuncDef:  (at pp.c:26117)
    Decl: name='Msp430RefVoltGeneratorP__start', quals=[], storage=['static'] (at pp.c:26117)
      FuncDecl: quals=None (at pp.c:26117)
        ParamList:  (at pp.c:26117)
          Decl: name='targetState', quals=[], storage=[] (at pp.c:26117)
            TypeDecl: declname='targetState', quals=[] (at pp.c:26117)
              IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__start', quals=[] (at pp.c:26117)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:26119)
      Decl: name='result', quals=[], storage=[] (at pp.c:26120)
        TypeDecl: declname='result', quals=[] (at pp.c:26120)
          IdentifierType: names=['error_t'] (at None)
      If:  (at pp.c:26122)
        BinaryOp: op='||' (at pp.c:26122)
          BinaryOp: op='==' (at pp.c:26122)
            ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:26122)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_STABLE' (at pp.c:26122)
          BinaryOp: op='==' (at pp.c:26122)
            ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:26122)
            ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_STABLE' (at pp.c:26122)
        Compound:  (at pp.c:26122)
          If:  (at pp.c:26123)
            BinaryOp: op='==' (at pp.c:26123)
              ID: name='targetState' (at pp.c:26123)
              ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:26123)
            Compound:  (at pp.c:26123)
              Assignment: op='=' (at pp.c:26124)
                ID: name='result' (at pp.c:26124)
                ID: name='EALREADY' (at pp.c:26124)
            Compound:  (at pp.c:26126)
              If:  (at pp.c:26128)
                BinaryOp: op='==' (at pp.c:26128)
                  Assignment: op='=' (at pp.c:26128)
                    ID: name='result' (at pp.c:26128)
                    FuncCall:  (at None)
                      ID: name='Msp430RefVoltGeneratorP__switchOn' (at pp.c:26128)
                      ExprList:  (at pp.c:26128)
                        ID: name='targetState' (at pp.c:26128)
                  ID: name='SUCCESS' (at pp.c:26128)
                Compound:  (at pp.c:26128)
                  If:  (at pp.c:26129)
                    BinaryOp: op='==' (at pp.c:26129)
                      ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:26129)
                      ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_STABLE' (at pp.c:26129)
                    Compound:  (at pp.c:26129)
                      Assignment: op='=' (at pp.c:26130)
                        ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:26130)
                        ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_ON_PENDING' (at pp.c:26130)
                      FuncCall:  (at None)
                        ID: name='Msp430RefVoltGeneratorP__SwitchOnTimer__startOneShot' (at pp.c:26131)
                        ExprList:  (at pp.c:26131)
                          Constant: type='int', value='17' (at pp.c:26131)
                    Compound:  (at pp.c:26135)
                      Assignment: op='=' (at pp.c:26136)
                        ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:26136)
                        ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_ON_PENDING' (at pp.c:26136)
                      FuncCall:  (at None)
                        ID: name='Msp430RefVoltGeneratorP__SwitchOnTimer__startOneShot' (at pp.c:26137)
                        ExprList:  (at pp.c:26137)
                          Constant: type='int', value='70' (at pp.c:26137)
        Compound:  (at pp.c:26142)
          If:  (at pp.c:26144)
            BinaryOp: op='==' (at pp.c:26144)
              ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:26144)
              ID: name='Msp430RefVoltGeneratorP__GENERATOR_OFF' (at pp.c:26144)
            Compound:  (at pp.c:26144)
              If:  (at pp.c:26145)
                BinaryOp: op='==' (at pp.c:26145)
                  Assignment: op='=' (at pp.c:26145)
                    ID: name='result' (at pp.c:26145)
                    FuncCall:  (at None)
                      ID: name='Msp430RefVoltGeneratorP__switchOn' (at pp.c:26145)
                      ExprList:  (at pp.c:26145)
                        ID: name='targetState' (at pp.c:26145)
                  ID: name='SUCCESS' (at pp.c:26145)
                Compound:  (at pp.c:26145)
                  If:  (at pp.c:26146)
                    BinaryOp: op='&&' (at pp.c:26146)
                      BinaryOp: op='==' (at pp.c:26146)
                        ID: name='targetState' (at pp.c:26146)
                        ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_STABLE' (at pp.c:26146)
                      FuncCall:  (at None)
                        ID: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__isRunning' (at pp.c:26146)
                    Compound:  (at pp.c:26146)
                      FuncCall:  (at None)
                        ID: name='Msp430RefVoltGeneratorP__SwitchOnTimer__startOneShot' (at pp.c:26147)
                        ExprList:  (at pp.c:26147)
                          Constant: type='int', value='70' (at pp.c:26147)
                    Compound:  (at pp.c:26149)
                      FuncCall:  (at None)
                        ID: name='Msp430RefVoltGeneratorP__SwitchOnTimer__startOneShot' (at pp.c:26150)
                        ExprList:  (at pp.c:26150)
                          Constant: type='int', value='17' (at pp.c:26150)
                  FuncCall:  (at None)
                    ID: name='Msp430RefVoltGeneratorP__SwitchOffSettleTimer__stop' (at pp.c:26153)
                  Assignment: op='=' (at pp.c:26154)
                    ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:26154)
                    BinaryOp: op='+' (at pp.c:26154)
                      ID: name='targetState' (at pp.c:26154)
                      Constant: type='int', value='2' (at pp.c:26154)
            Compound:  (at pp.c:26157)
              If:  (at pp.c:26159)
                BinaryOp: op='||' (at pp.c:26159)
                  BinaryOp: op='==' (at pp.c:26159)
                    ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:26159)
                    ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_OFF_PENDING' (at pp.c:26159)
                  BinaryOp: op='==' (at pp.c:26159)
                    ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:26159)
                    ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_OFF_PENDING' (at pp.c:26159)
                Compound:  (at pp.c:26159)
                  If:  (at pp.c:26160)
                    BinaryOp: op='==' (at pp.c:26160)
                      Assignment: op='=' (at pp.c:26160)
                        ID: name='result' (at pp.c:26160)
                        FuncCall:  (at None)
                          ID: name='Msp430RefVoltGeneratorP__switchOn' (at pp.c:26160)
                          ExprList:  (at pp.c:26160)
                            ID: name='targetState' (at pp.c:26160)
                      ID: name='SUCCESS' (at pp.c:26160)
                    Compound:  (at pp.c:26160)
                      Decl: name='oldState', quals=[], storage=[] (at pp.c:26162)
                        TypeDecl: declname='oldState', quals=[] (at pp.c:26162)
                          IdentifierType: names=['Msp430RefVoltGeneratorP__state_t'] (at None)
                        ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:26162)
                      FuncCall:  (at None)
                        ID: name='Msp430RefVoltGeneratorP__SwitchOffTimer__stop' (at pp.c:26165)
                      FuncCall:  (at None)
                        ID: name='Msp430RefVoltGeneratorP__signalStopDone' (at pp.c:26166)
                        ExprList:  (at pp.c:26166)
                          ID: name='oldState' (at pp.c:26166)
                          ID: name='FAIL' (at pp.c:26166)
                      If:  (at pp.c:26167)
                        BinaryOp: op='==' (at pp.c:26167)
                          ID: name='targetState' (at pp.c:26167)
                          BinaryOp: op='-' (at pp.c:26167)
                            ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:26167)
                            Constant: type='int', value='4' (at pp.c:26167)
                        Compound:  (at pp.c:26167)
                          Assignment: op='=' (at pp.c:26168)
                            ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:26168)
                            ID: name='targetState' (at pp.c:26168)
                          FuncCall:  (at None)
                            ID: name='Msp430RefVoltGeneratorP__signalStartDone' (at pp.c:26169)
                            ExprList:  (at pp.c:26169)
                              ID: name='targetState' (at pp.c:26169)
                              ID: name='SUCCESS' (at pp.c:26169)
                        Compound:  (at pp.c:26171)
                          If:  (at pp.c:26173)
                            BinaryOp: op='==' (at pp.c:26173)
                              ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:26173)
                              ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_OFF_PENDING' (at pp.c:26173)
                            Compound:  (at pp.c:26173)
                              Assignment: op='=' (at pp.c:26174)
                                ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:26174)
                                ID: name='Msp430RefVoltGeneratorP__REFERENCE_2_5V_ON_PENDING' (at pp.c:26174)
                              FuncCall:  (at None)
                                ID: name='Msp430RefVoltGeneratorP__SwitchOnTimer__startOneShot' (at pp.c:26175)
                                ExprList:  (at pp.c:26175)
                                  Constant: type='int', value='17' (at pp.c:26175)
                            Compound:  (at pp.c:26177)
                              Assignment: op='=' (at pp.c:26178)
                                ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:26178)
                                ID: name='Msp430RefVoltGeneratorP__REFERENCE_1_5V_ON_PENDING' (at pp.c:26178)
                              FuncCall:  (at None)
                                ID: name='Msp430RefVoltGeneratorP__SwitchOnTimer__startOneShot' (at pp.c:26179)
                                ExprList:  (at pp.c:26179)
                                  Constant: type='int', value='70' (at pp.c:26179)
                Compound:  (at pp.c:26184)
                  If:  (at pp.c:26186)
                    BinaryOp: op='==' (at pp.c:26186)
                      ID: name='Msp430RefVoltGeneratorP__m_state' (at pp.c:26186)
                      BinaryOp: op='+' (at pp.c:26186)
                        ID: name='targetState' (at pp.c:26186)
                        Constant: type='int', value='2' (at pp.c:26186)
                    Compound:  (at pp.c:26186)
                      Assignment: op='=' (at pp.c:26187)
                        ID: name='result' (at pp.c:26187)
                        ID: name='SUCCESS' (at pp.c:26187)
                    Compound:  (at pp.c:26189)
                      Assignment: op='=' (at pp.c:26191)
                        ID: name='result' (at pp.c:26191)
                        ID: name='EBUSY' (at pp.c:26191)
      Return:  (at pp.c:26197)
        ID: name='result' (at pp.c:26197)
  FuncDef:  (at pp.c:26201)
    Decl: name='Msp430RefVoltGeneratorP__switchOn', quals=[], storage=['static'] (at pp.c:26201)
      FuncDecl: quals=None (at pp.c:26201)
        ParamList:  (at pp.c:26201)
          Decl: name='level', quals=[], storage=[] (at pp.c:26201)
            TypeDecl: declname='level', quals=[] (at pp.c:26201)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__switchOn', quals=[] (at pp.c:26201)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:26203)
      Compound:  (at pp.c:26204)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:26204)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:26204)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:26204)
        Compound:  (at pp.c:26206)
          If:  (at pp.c:26207)
            FuncCall:  (at None)
              ID: name='Msp430RefVoltGeneratorP__HplAdc12__isBusy' (at pp.c:26207)
            Compound:  (at pp.c:26207)
              Compound:  (at pp.c:26208)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:26209)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:26209)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='EBUSY' (at pp.c:26211)
                Compound:  (at pp.c:26213)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:26215)
                    ExprList:  (at pp.c:26215)
                      ID: name='__nesc_atomic' (at pp.c:26215)
                  Return:  (at pp.c:26217)
                    ID: name='__nesc_temp' (at pp.c:26217)
            Compound:  (at pp.c:26223)
              Decl: name='ctl0', quals=[], storage=[] (at pp.c:26224)
                TypeDecl: declname='ctl0', quals=[] (at pp.c:26224)
                  IdentifierType: names=['adc12ctl0_t'] (at None)
                FuncCall:  (at None)
                  ID: name='Msp430RefVoltGeneratorP__HplAdc12__getCtl0' (at pp.c:26224)
              Assignment: op='=' (at pp.c:26227)
                StructRef: type='.' (at pp.c:26227)
                  ID: name='ctl0' (at pp.c:26227)
                  ID: name='enc' (at pp.c:26227)
                Constant: type='int', value='0' (at pp.c:26227)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltGeneratorP__HplAdc12__setCtl0' (at pp.c:26228)
                ExprList:  (at pp.c:26228)
                  ID: name='ctl0' (at pp.c:26228)
              Assignment: op='=' (at pp.c:26229)
                StructRef: type='.' (at pp.c:26229)
                  ID: name='ctl0' (at pp.c:26229)
                  ID: name='refon' (at pp.c:26229)
                Constant: type='int', value='1' (at pp.c:26229)
              Assignment: op='=' (at pp.c:26232)
                StructRef: type='.' (at pp.c:26232)
                  ID: name='ctl0' (at pp.c:26232)
                  ID: name='r2_5v' (at pp.c:26232)
                BinaryOp: op='-' (at pp.c:26232)
                  ID: name='level' (at pp.c:26232)
                  Constant: type='int', value='1' (at pp.c:26232)
              FuncCall:  (at None)
                ID: name='Msp430RefVoltGeneratorP__HplAdc12__setCtl0' (at pp.c:26233)
                ExprList:  (at pp.c:26233)
                  ID: name='ctl0' (at pp.c:26233)
              Compound:  (at pp.c:26234)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:26235)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:26235)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='SUCCESS' (at pp.c:26237)
                Compound:  (at pp.c:26239)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:26241)
                    ExprList:  (at pp.c:26241)
                      ID: name='__nesc_atomic' (at pp.c:26241)
                  Return:  (at pp.c:26243)
                    ID: name='__nesc_temp' (at pp.c:26243)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:26249)
          ExprList:  (at pp.c:26249)
            ID: name='__nesc_atomic' (at pp.c:26249)
  FuncDef:  (at pp.c:26253)
    Decl: name='Msp430RefVoltGeneratorP__SwitchOnTimer__startOneShot', quals=[], storage=['static'] (at pp.c:26253)
      FuncDecl: quals=None (at pp.c:26253)
        ParamList:  (at pp.c:26253)
          Decl: name='dt', quals=[], storage=[] (at pp.c:26253)
            TypeDecl: declname='dt', quals=[] (at pp.c:26253)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='Msp430RefVoltGeneratorP__SwitchOnTimer__startOneShot', quals=[] (at pp.c:26253)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26253)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__Timer__startOneShot' (at pp.c:26255)
        ExprList:  (at pp.c:26255)
          Constant: type='int', value='2U' (at pp.c:26255)
          ID: name='dt' (at pp.c:26255)
  FuncDef:  (at pp.c:26260)
    Decl: name='CC2420ActiveMessageP__RadioResource__granted', quals=[], storage=['static'] (at pp.c:26260)
      FuncDecl: quals=None (at pp.c:26260)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ActiveMessageP__RadioResource__granted', quals=[] (at pp.c:26260)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26262)
      Decl: name='rc', quals=[], storage=[] (at pp.c:26263)
        TypeDecl: declname='rc', quals=[] (at pp.c:26263)
          IdentifierType: names=['uint8_t'] (at None)
      Decl: name='header', quals=[], storage=[] (at pp.c:26264)
        PtrDecl: quals=[] (at pp.c:26264)
          TypeDecl: declname='header', quals=[] (at pp.c:26264)
            IdentifierType: names=['cc2420_header_t'] (at None)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__CC2420PacketBody__getHeader' (at pp.c:26264)
          ExprList:  (at pp.c:26264)
            ID: name='CC2420ActiveMessageP__pending_message' (at pp.c:26264)
      FuncCall:  (at None)
        ID: name='CC2420ActiveMessageP__SendNotifier__aboutToSend' (at pp.c:26266)
        ExprList:  (at None)
          FuncCall:  (at None)
            ID: name='__nesc_ntoh_leuint8' (at pp.c:26266)
            ExprList:  (at pp.c:26266)
              StructRef: type='.' (at pp.c:26266)
                StructRef: type='->' (at pp.c:26266)
                  ID: name='header' (at pp.c:26266)
                  ID: name='type' (at pp.c:26266)
                ID: name='nxdata' (at pp.c:26266)
          FuncCall:  (at None)
            ID: name='__nesc_ntoh_leuint16' (at pp.c:26266)
            ExprList:  (at pp.c:26266)
              StructRef: type='.' (at pp.c:26266)
                StructRef: type='->' (at pp.c:26266)
                  ID: name='header' (at pp.c:26266)
                  ID: name='dest' (at pp.c:26266)
                ID: name='nxdata' (at pp.c:26266)
          ID: name='CC2420ActiveMessageP__pending_message' (at pp.c:26266)
      Assignment: op='=' (at pp.c:26267)
        ID: name='rc' (at pp.c:26267)
        FuncCall:  (at None)
          ID: name='CC2420ActiveMessageP__SubSend__send' (at pp.c:26267)
          ExprList:  (at pp.c:26267)
            ID: name='CC2420ActiveMessageP__pending_message' (at pp.c:26267)
            ID: name='CC2420ActiveMessageP__pending_length' (at pp.c:26267)
      If:  (at pp.c:26268)
        BinaryOp: op='!=' (at pp.c:26268)
          ID: name='rc' (at pp.c:26268)
          ID: name='SUCCESS' (at pp.c:26268)
        Compound:  (at pp.c:26268)
          FuncCall:  (at None)
            ID: name='CC2420ActiveMessageP__RadioResource__release' (at pp.c:26269)
          FuncCall:  (at None)
            ID: name='CC2420ActiveMessageP__AMSend__sendDone' (at pp.c:26270)
            ExprList:  (at None)
              FuncCall:  (at None)
                ID: name='__nesc_ntoh_leuint8' (at pp.c:26270)
                ExprList:  (at pp.c:26270)
                  StructRef: type='.' (at pp.c:26270)
                    StructRef: type='->' (at pp.c:26270)
                      ID: name='header' (at pp.c:26270)
                      ID: name='type' (at pp.c:26270)
                    ID: name='nxdata' (at pp.c:26270)
              ID: name='CC2420ActiveMessageP__pending_message' (at pp.c:26270)
              ID: name='rc' (at pp.c:26270)
  FuncDef:  (at pp.c:26275)
    Decl: name='AMQueueImplP__0__AMSend__sendDone', quals=[], storage=['static'] (at pp.c:26275)
      FuncDecl: quals=None (at pp.c:26275)
        ParamList:  (at pp.c:26275)
          Decl: name='id', quals=[], storage=[] (at pp.c:26275)
            TypeDecl: declname='id', quals=[] (at pp.c:26275)
              IdentifierType: names=['am_id_t'] (at None)
          Decl: name='msg', quals=[], storage=[] (at pp.c:26275)
            PtrDecl: quals=[] (at pp.c:26275)
              TypeDecl: declname='msg', quals=[] (at pp.c:26275)
                IdentifierType: names=['message_t'] (at None)
          Decl: name='err', quals=[], storage=[] (at pp.c:26275)
            TypeDecl: declname='err', quals=[] (at pp.c:26275)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='AMQueueImplP__0__AMSend__sendDone', quals=[] (at pp.c:26275)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26277)
      If:  (at pp.c:26283)
        BinaryOp: op='>=' (at pp.c:26283)
          ID: name='AMQueueImplP__0__current' (at pp.c:26283)
          Constant: type='int', value='1' (at pp.c:26283)
        Compound:  (at pp.c:26283)
          Return:  (at pp.c:26284)
      If:  (at pp.c:26286)
        BinaryOp: op='==' (at pp.c:26286)
          StructRef: type='.' (at pp.c:26286)
            ArrayRef:  (at pp.c:26286)
              ID: name='AMQueueImplP__0__queue' (at pp.c:26286)
              ID: name='AMQueueImplP__0__current' (at pp.c:26286)
            ID: name='msg' (at pp.c:26286)
          ID: name='msg' (at pp.c:26286)
        Compound:  (at pp.c:26286)
          FuncCall:  (at None)
            ID: name='AMQueueImplP__0__sendDone' (at pp.c:26287)
            ExprList:  (at pp.c:26287)
              ID: name='AMQueueImplP__0__current' (at pp.c:26287)
              ID: name='msg' (at pp.c:26287)
              ID: name='err' (at pp.c:26287)
        Compound:  (at pp.c:26289)
  FuncDef:  (at pp.c:26295)
    Decl: name='VirtualizeTimerC__0__fireTimers', quals=[], storage=['static'] (at pp.c:26295)
      FuncDecl: quals=None (at pp.c:26295)
        ParamList:  (at pp.c:26295)
          Decl: name='now', quals=[], storage=[] (at pp.c:26295)
            TypeDecl: declname='now', quals=[] (at pp.c:26295)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__fireTimers', quals=[] (at pp.c:26295)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26296)
      Decl: name='num', quals=[], storage=[] (at pp.c:26297)
        TypeDecl: declname='num', quals=[] (at pp.c:26297)
          IdentifierType: names=['uint8_t'] (at None)
      For:  (at pp.c:26299)
        Assignment: op='=' (at pp.c:26299)
          ID: name='num' (at pp.c:26299)
          Constant: type='int', value='0' (at pp.c:26299)
        BinaryOp: op='<' (at pp.c:26299)
          ID: name='num' (at pp.c:26299)
          ID: name='VirtualizeTimerC__0__NUM_TIMERS' (at pp.c:26299)
        UnaryOp: op='p++' (at pp.c:26299)
          ID: name='num' (at pp.c:26299)
        Compound:  (at pp.c:26300)
          Decl: name='timer', quals=[], storage=[] (at pp.c:26301)
            PtrDecl: quals=[] (at pp.c:26301)
              TypeDecl: declname='timer', quals=[] (at pp.c:26301)
                IdentifierType: names=['VirtualizeTimerC__0__Timer_t'] (at None)
            UnaryOp: op='&' (at pp.c:26301)
              ArrayRef:  (at pp.c:26301)
                ID: name='VirtualizeTimerC__0__m_timers' (at pp.c:26301)
                ID: name='num' (at pp.c:26301)
          If:  (at pp.c:26303)
            StructRef: type='->' (at pp.c:26303)
              ID: name='timer' (at pp.c:26303)
              ID: name='isrunning' (at pp.c:26303)
            Compound:  (at pp.c:26304)
              Decl: name='elapsed', quals=[], storage=[] (at pp.c:26305)
                TypeDecl: declname='elapsed', quals=[] (at pp.c:26305)
                  IdentifierType: names=['uint32_t'] (at None)
                BinaryOp: op='-' (at pp.c:26305)
                  ID: name='now' (at pp.c:26305)
                  StructRef: type='->' (at pp.c:26305)
                    ID: name='timer' (at pp.c:26305)
                    ID: name='t0' (at pp.c:26305)
              If:  (at pp.c:26307)
                BinaryOp: op='>=' (at pp.c:26307)
                  ID: name='elapsed' (at pp.c:26307)
                  StructRef: type='->' (at pp.c:26307)
                    ID: name='timer' (at pp.c:26307)
                    ID: name='dt' (at pp.c:26307)
                Compound:  (at pp.c:26308)
                  If:  (at pp.c:26309)
                    StructRef: type='->' (at pp.c:26309)
                      ID: name='timer' (at pp.c:26309)
                      ID: name='isoneshot' (at pp.c:26309)
                    Compound:  (at pp.c:26309)
                      Assignment: op='=' (at pp.c:26310)
                        StructRef: type='->' (at pp.c:26310)
                          ID: name='timer' (at pp.c:26310)
                          ID: name='isrunning' (at pp.c:26310)
                        ID: name='FALSE' (at pp.c:26310)
                    Compound:  (at pp.c:26312)
                      Assignment: op='+=' (at pp.c:26314)
                        StructRef: type='->' (at pp.c:26314)
                          ID: name='timer' (at pp.c:26314)
                          ID: name='t0' (at pp.c:26314)
                        StructRef: type='->' (at pp.c:26314)
                          ID: name='timer' (at pp.c:26314)
                          ID: name='dt' (at pp.c:26314)
                  FuncCall:  (at None)
                    ID: name='VirtualizeTimerC__0__Timer__fired' (at pp.c:26316)
                    ExprList:  (at pp.c:26316)
                      ID: name='num' (at pp.c:26316)
                  Break:  (at pp.c:26317)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__updateFromTimer__postTask' (at pp.c:26321)
  FuncDef:  (at pp.c:26325)
    Decl: name='TransformAlarmC__1__Alarm__startAt', quals=[], storage=['static'] (at pp.c:26325)
      FuncDecl: quals=None (at pp.c:26325)
        ParamList:  (at pp.c:26325)
          Decl: name='t0', quals=[], storage=[] (at pp.c:26325)
            TypeDecl: declname='t0', quals=[] (at pp.c:26325)
              IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:26325)
            TypeDecl: declname='dt', quals=[] (at pp.c:26325)
              IdentifierType: names=['TransformAlarmC__1__to_size_type'] (at None)
        TypeDecl: declname='TransformAlarmC__1__Alarm__startAt', quals=[] (at pp.c:26325)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26326)
      Compound:  (at pp.c:26327)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:26327)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:26327)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:26327)
        Compound:  (at pp.c:26328)
          Assignment: op='=' (at pp.c:26329)
            ID: name='TransformAlarmC__1__m_t0' (at pp.c:26329)
            ID: name='t0' (at pp.c:26329)
          Assignment: op='=' (at pp.c:26330)
            ID: name='TransformAlarmC__1__m_dt' (at pp.c:26330)
            ID: name='dt' (at pp.c:26330)
          FuncCall:  (at None)
            ID: name='TransformAlarmC__1__set_alarm' (at pp.c:26331)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:26334)
          ExprList:  (at pp.c:26334)
            ID: name='__nesc_atomic' (at pp.c:26334)
  FuncDef:  (at pp.c:26338)
    Decl: name='CC2420ControlP__CC2420Config__getShortAddr', quals=[], storage=['static'] (at pp.c:26338)
      FuncDecl: quals=None (at pp.c:26338)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__CC2420Config__getShortAddr', quals=[] (at pp.c:26338)
          IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:26340)
      Compound:  (at pp.c:26341)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:26341)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:26341)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:26341)
        Compound:  (at pp.c:26343)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:26344)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:26344)
              IdentifierType: names=['int', 'unsigned'] (at None)
            ID: name='CC2420ControlP__m_short_addr' (at pp.c:26346)
          Compound:  (at pp.c:26348)
            FuncCall:  (at None)
              ID: name='__nesc_atomic_end' (at pp.c:26350)
              ExprList:  (at pp.c:26350)
                ID: name='__nesc_atomic' (at pp.c:26350)
            Return:  (at pp.c:26352)
              ID: name='__nesc_temp' (at pp.c:26352)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:26356)
          ExprList:  (at pp.c:26356)
            ID: name='__nesc_atomic' (at pp.c:26356)
  FuncDef:  (at pp.c:26360)
    Decl: name='DallasId48ToIeeeEui64C__LocalIeeeEui64__getId', quals=[], storage=['static'] (at pp.c:26360)
      FuncDecl: quals=None (at pp.c:26360)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='DallasId48ToIeeeEui64C__LocalIeeeEui64__getId', quals=[] (at pp.c:26360)
          IdentifierType: names=['ieee_eui64_t'] (at None)
    Compound:  (at pp.c:26362)
      Decl: name='id', quals=[], storage=[] (at pp.c:26363)
        ArrayDecl:  (at pp.c:26363)
          TypeDecl: declname='id', quals=[] (at pp.c:26363)
            IdentifierType: names=['uint8_t'] (at None)
          Constant: type='int', value='6' (at pp.c:26363)
      Decl: name='eui', quals=[], storage=[] (at pp.c:26364)
        TypeDecl: declname='eui', quals=[] (at pp.c:26364)
          IdentifierType: names=['ieee_eui64_t'] (at None)
      If:  (at pp.c:26367)
        BinaryOp: op='!=' (at None)
          FuncCall:  (at None)
            ID: name='DallasId48ToIeeeEui64C__ReadId48__read' (at pp.c:26367)
            ExprList:  (at pp.c:26367)
              ID: name='id' (at pp.c:26367)
          ID: name='SUCCESS' (at pp.c:26367)
        Compound:  (at pp.c:26367)
          FuncCall:  (at None)
            ID: name='memset' (at pp.c:26368)
            ExprList:  (at pp.c:26368)
              StructRef: type='.' (at pp.c:26368)
                ID: name='eui' (at pp.c:26368)
                ID: name='data' (at pp.c:26368)
              Constant: type='int', value='0' (at pp.c:26368)
              Constant: type='int', value='8' (at pp.c:26368)
          Goto: name='done' (at pp.c:26369)
      Assignment: op='=' (at pp.c:26372)
        ArrayRef:  (at pp.c:26372)
          StructRef: type='.' (at pp.c:26372)
            ID: name='eui' (at pp.c:26372)
            ID: name='data' (at pp.c:26372)
          Constant: type='int', value='0' (at pp.c:26372)
        ID: name='IEEE_EUI64_COMPANY_ID_0' (at pp.c:26372)
      Assignment: op='=' (at pp.c:26373)
        ArrayRef:  (at pp.c:26373)
          StructRef: type='.' (at pp.c:26373)
            ID: name='eui' (at pp.c:26373)
            ID: name='data' (at pp.c:26373)
          Constant: type='int', value='1' (at pp.c:26373)
        ID: name='IEEE_EUI64_COMPANY_ID_1' (at pp.c:26373)
      Assignment: op='=' (at pp.c:26374)
        ArrayRef:  (at pp.c:26374)
          StructRef: type='.' (at pp.c:26374)
            ID: name='eui' (at pp.c:26374)
            ID: name='data' (at pp.c:26374)
          Constant: type='int', value='2' (at pp.c:26374)
        ID: name='IEEE_EUI64_COMPANY_ID_2' (at pp.c:26374)
      Assignment: op='=' (at pp.c:26378)
        ArrayRef:  (at pp.c:26378)
          StructRef: type='.' (at pp.c:26378)
            ID: name='eui' (at pp.c:26378)
            ID: name='data' (at pp.c:26378)
          Constant: type='int', value='3' (at pp.c:26378)
        ID: name='IEEE_EUI64_SERIAL_ID_0' (at pp.c:26378)
      Assignment: op='=' (at pp.c:26379)
        ArrayRef:  (at pp.c:26379)
          StructRef: type='.' (at pp.c:26379)
            ID: name='eui' (at pp.c:26379)
            ID: name='data' (at pp.c:26379)
          Constant: type='int', value='4' (at pp.c:26379)
        ID: name='IEEE_EUI64_SERIAL_ID_1' (at pp.c:26379)
      Assignment: op='=' (at pp.c:26382)
        ArrayRef:  (at pp.c:26382)
          StructRef: type='.' (at pp.c:26382)
            ID: name='eui' (at pp.c:26382)
            ID: name='data' (at pp.c:26382)
          Constant: type='int', value='5' (at pp.c:26382)
        ArrayRef:  (at pp.c:26382)
          ID: name='id' (at pp.c:26382)
          Constant: type='int', value='2' (at pp.c:26382)
      Assignment: op='=' (at pp.c:26383)
        ArrayRef:  (at pp.c:26383)
          StructRef: type='.' (at pp.c:26383)
            ID: name='eui' (at pp.c:26383)
            ID: name='data' (at pp.c:26383)
          Constant: type='int', value='6' (at pp.c:26383)
        ArrayRef:  (at pp.c:26383)
          ID: name='id' (at pp.c:26383)
          Constant: type='int', value='1' (at pp.c:26383)
      Assignment: op='=' (at pp.c:26384)
        ArrayRef:  (at pp.c:26384)
          StructRef: type='.' (at pp.c:26384)
            ID: name='eui' (at pp.c:26384)
            ID: name='data' (at pp.c:26384)
          Constant: type='int', value='7' (at pp.c:26384)
        ArrayRef:  (at pp.c:26384)
          ID: name='id' (at pp.c:26384)
          Constant: type='int', value='0' (at pp.c:26384)
      Label: name='done' (at pp.c:26386)
        Return:  (at pp.c:26387)
          ID: name='eui' (at pp.c:26387)
  FuncDef:  (at pp.c:26391)
    Decl: name='BusyWaitCounterC__0__BusyWait__wait', quals=[], storage=['static'] (at pp.c:26391)
      FuncDecl: quals=None (at pp.c:26391)
        ParamList:  (at pp.c:26391)
          Decl: name='dt', quals=[], storage=[] (at pp.c:26391)
            TypeDecl: declname='dt', quals=[] (at pp.c:26391)
              IdentifierType: names=['BusyWaitCounterC__0__size_type'] (at None)
        TypeDecl: declname='BusyWaitCounterC__0__BusyWait__wait', quals=[] (at pp.c:26391)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26392)
      Compound:  (at pp.c:26394)
        Decl: name='t0', quals=[], storage=[] (at pp.c:26397)
          TypeDecl: declname='t0', quals=[] (at pp.c:26397)
            IdentifierType: names=['BusyWaitCounterC__0__size_type'] (at None)
          FuncCall:  (at None)
            ID: name='BusyWaitCounterC__0__Counter__get' (at pp.c:26397)
        If:  (at pp.c:26399)
          BinaryOp: op='>' (at pp.c:26399)
            ID: name='dt' (at pp.c:26399)
            ID: name='BusyWaitCounterC__0__HALF_MAX_SIZE_TYPE' (at pp.c:26399)
          Compound:  (at pp.c:26400)
            Assignment: op='-=' (at pp.c:26401)
              ID: name='dt' (at pp.c:26401)
              ID: name='BusyWaitCounterC__0__HALF_MAX_SIZE_TYPE' (at pp.c:26401)
            While:  (at pp.c:26402)
              BinaryOp: op='<=' (at None)
                BinaryOp: op='-' (at None)
                  FuncCall:  (at None)
                    ID: name='BusyWaitCounterC__0__Counter__get' (at pp.c:26402)
                  ID: name='t0' (at pp.c:26402)
                ID: name='dt' (at pp.c:26402)
            Assignment: op='+=' (at pp.c:26403)
              ID: name='t0' (at pp.c:26403)
              ID: name='dt' (at pp.c:26403)
            Assignment: op='=' (at pp.c:26404)
              ID: name='dt' (at pp.c:26404)
              ID: name='BusyWaitCounterC__0__HALF_MAX_SIZE_TYPE' (at pp.c:26404)
        While:  (at pp.c:26407)
          BinaryOp: op='<=' (at None)
            BinaryOp: op='-' (at None)
              FuncCall:  (at None)
                ID: name='BusyWaitCounterC__0__Counter__get' (at pp.c:26407)
              ID: name='t0' (at pp.c:26407)
            ID: name='dt' (at pp.c:26407)
  FuncDef:  (at pp.c:26412)
    Decl: name='VirtualizeTimerC__0__Timer__startPeriodic', quals=[], storage=['static'] (at pp.c:26412)
      FuncDecl: quals=None (at pp.c:26412)
        ParamList:  (at pp.c:26412)
          Decl: name='num', quals=[], storage=[] (at pp.c:26412)
            TypeDecl: declname='num', quals=[] (at pp.c:26412)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='dt', quals=[], storage=[] (at pp.c:26412)
            TypeDecl: declname='dt', quals=[] (at pp.c:26412)
              IdentifierType: names=['uint32_t'] (at None)
        TypeDecl: declname='VirtualizeTimerC__0__Timer__startPeriodic', quals=[] (at pp.c:26412)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26413)
      FuncCall:  (at None)
        ID: name='VirtualizeTimerC__0__startTimer' (at pp.c:26414)
        ExprList:  (at pp.c:26414)
          ID: name='num' (at pp.c:26414)
          FuncCall:  (at None)
            ID: name='VirtualizeTimerC__0__TimerFrom__getNow' (at pp.c:26414)
          ID: name='dt' (at pp.c:26414)
          ID: name='FALSE' (at pp.c:26414)
  FuncDef:  (at pp.c:26418)
    Decl: name='CC2420ReceiveP__waitForNextPacket', quals=[], storage=['static'] (at pp.c:26418)
      FuncDecl: quals=None (at pp.c:26418)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__waitForNextPacket', quals=[] (at pp.c:26418)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26420)
      Compound:  (at pp.c:26421)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:26421)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:26421)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:26421)
        Compound:  (at pp.c:26423)
          If:  (at pp.c:26424)
            BinaryOp: op='==' (at pp.c:26424)
              ID: name='CC2420ReceiveP__m_state' (at pp.c:26424)
              ID: name='CC2420ReceiveP__S_STOPPED' (at pp.c:26424)
            Compound:  (at pp.c:26424)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__SpiResource__release' (at pp.c:26425)
              Compound:  (at pp.c:26426)
                FuncCall:  (at None)
                  ID: name='__nesc_atomic_end' (at pp.c:26428)
                  ExprList:  (at pp.c:26428)
                    ID: name='__nesc_atomic' (at pp.c:26428)
                Return:  (at pp.c:26430)
          Assignment: op='=' (at pp.c:26433)
            ID: name='CC2420ReceiveP__receivingPacket' (at pp.c:26433)
            ID: name='FALSE' (at pp.c:26433)
          If:  (at pp.c:26435)
            BinaryOp: op='||' (at pp.c:26435)
              BinaryOp: op='&&' (at pp.c:26435)
                ID: name='CC2420ReceiveP__m_missed_packets' (at pp.c:26435)
                FuncCall:  (at None)
                  ID: name='CC2420ReceiveP__FIFO__get' (at pp.c:26435)
              UnaryOp: op='!' (at None)
                FuncCall:  (at None)
                  ID: name='CC2420ReceiveP__FIFOP__get' (at pp.c:26435)
            Compound:  (at pp.c:26435)
              If:  (at pp.c:26437)
                ID: name='CC2420ReceiveP__m_missed_packets' (at pp.c:26437)
                Compound:  (at pp.c:26437)
                  UnaryOp: op='p--' (at pp.c:26438)
                    ID: name='CC2420ReceiveP__m_missed_packets' (at pp.c:26438)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__beginReceive' (at pp.c:26445)
            Compound:  (at pp.c:26448)
              Assignment: op='=' (at pp.c:26450)
                ID: name='CC2420ReceiveP__m_state' (at pp.c:26450)
                ID: name='CC2420ReceiveP__S_STARTED' (at pp.c:26450)
              Assignment: op='=' (at pp.c:26451)
                ID: name='CC2420ReceiveP__m_missed_packets' (at pp.c:26451)
                Constant: type='int', value='0' (at pp.c:26451)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__SpiResource__release' (at pp.c:26452)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:26456)
          ExprList:  (at pp.c:26456)
            ID: name='__nesc_atomic' (at pp.c:26456)
  FuncDef:  (at pp.c:26460)
    Decl: name='CC2420ReceiveP__beginReceive', quals=[], storage=['static'] (at pp.c:26460)
      FuncDecl: quals=None (at pp.c:26460)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__beginReceive', quals=[] (at pp.c:26460)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26462)
      Assignment: op='=' (at pp.c:26463)
        ID: name='CC2420ReceiveP__m_state' (at pp.c:26463)
        ID: name='CC2420ReceiveP__S_RX_LENGTH' (at pp.c:26463)
      Assignment: op='=' (at pp.c:26466)
        ID: name='CC2420ReceiveP__receivingPacket' (at pp.c:26466)
        ID: name='TRUE' (at pp.c:26466)
      If:  (at pp.c:26467)
        FuncCall:  (at None)
          ID: name='CC2420ReceiveP__SpiResource__isOwner' (at pp.c:26467)
        Compound:  (at pp.c:26467)
          FuncCall:  (at None)
            ID: name='CC2420ReceiveP__receive' (at pp.c:26468)
        Compound:  (at pp.c:26470)
          If:  (at pp.c:26472)
            BinaryOp: op='==' (at None)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__SpiResource__immediateRequest' (at pp.c:26472)
              ID: name='SUCCESS' (at pp.c:26472)
            Compound:  (at pp.c:26472)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__receive' (at pp.c:26473)
            Compound:  (at pp.c:26475)
              FuncCall:  (at None)
                ID: name='CC2420ReceiveP__SpiResource__request' (at pp.c:26476)
  FuncDef:  (at pp.c:26482)
    Decl: name='CC2420ReceiveP__receive', quals=[], storage=['static'] (at pp.c:26482)
      FuncDecl: quals=None (at pp.c:26482)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__receive', quals=[] (at pp.c:26482)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26484)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__CSN__clr' (at pp.c:26485)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__RXFIFO__beginRead' (at pp.c:26486)
        ExprList:  (at None)
          Cast:  (at None)
            Typename: quals=[] (at None)
              PtrDecl: quals=[] (at pp.c:26486)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            FuncCall:  (at None)
              ID: name='CC2420ReceiveP__CC2420PacketBody__getHeader' (at pp.c:26486)
              ExprList:  (at pp.c:26486)
                ID: name='CC2420ReceiveP__m_p_rx_buf' (at pp.c:26486)
          Constant: type='int', value='1' (at pp.c:26486)
  FuncDef:  (at pp.c:26490)
    Decl: name='CC2420SpiP__Fifo__beginRead', quals=[], storage=['static'] (at pp.c:26490)
      FuncDecl: quals=None (at pp.c:26490)
        ParamList:  (at pp.c:26490)
          Decl: name='addr', quals=[], storage=[] (at pp.c:26490)
            TypeDecl: declname='addr', quals=[] (at pp.c:26490)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:26490)
            PtrDecl: quals=[] (at pp.c:26490)
              TypeDecl: declname='data', quals=[] (at pp.c:26490)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:26491)
            TypeDecl: declname='len', quals=[] (at pp.c:26491)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='CC2420SpiP__Fifo__beginRead', quals=[] (at pp.c:26490)
          IdentifierType: names=['cc2420_status_t'] (at None)
    Compound:  (at pp.c:26493)
      Decl: name='status', quals=[], storage=[] (at pp.c:26495)
        TypeDecl: declname='status', quals=[] (at pp.c:26495)
          IdentifierType: names=['cc2420_status_t'] (at None)
        Constant: type='int', value='0' (at pp.c:26495)
      Compound:  (at pp.c:26497)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:26497)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:26497)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:26497)
        Compound:  (at pp.c:26499)
          If:  (at pp.c:26500)
            FuncCall:  (at None)
              ID: name='CC2420SpiP__WorkingState__isIdle' (at pp.c:26500)
            Compound:  (at pp.c:26500)
              Compound:  (at pp.c:26501)
                Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:26502)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:26502)
                    IdentifierType: names=['char', 'unsigned'] (at None)
                  ID: name='status' (at pp.c:26504)
                Compound:  (at pp.c:26506)
                  FuncCall:  (at None)
                    ID: name='__nesc_atomic_end' (at pp.c:26508)
                    ExprList:  (at pp.c:26508)
                      ID: name='__nesc_atomic' (at pp.c:26508)
                  Return:  (at pp.c:26510)
                    ID: name='__nesc_temp' (at pp.c:26510)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:26516)
          ExprList:  (at pp.c:26516)
            ID: name='__nesc_atomic' (at pp.c:26516)
      Assignment: op='=' (at pp.c:26518)
        ID: name='CC2420SpiP__m_addr' (at pp.c:26518)
        BinaryOp: op='|' (at pp.c:26518)
          ID: name='addr' (at pp.c:26518)
          Constant: type='int', value='0x40' (at pp.c:26518)
      Assignment: op='=' (at pp.c:26520)
        ID: name='status' (at pp.c:26520)
        FuncCall:  (at None)
          ID: name='CC2420SpiP__SpiByte__write' (at pp.c:26520)
          ExprList:  (at pp.c:26520)
            ID: name='CC2420SpiP__m_addr' (at pp.c:26520)
      FuncCall:  (at None)
        ID: name='CC2420SpiP__Fifo__continueRead' (at pp.c:26521)
        ExprList:  (at pp.c:26521)
          ID: name='addr' (at pp.c:26521)
          ID: name='data' (at pp.c:26521)
          ID: name='len' (at pp.c:26521)
      Return:  (at pp.c:26523)
        ID: name='status' (at pp.c:26523)
  FuncDef:  (at pp.c:26527)
    Decl: name='CC2420SpiP__SpiPacket__sendDone', quals=[], storage=['static'] (at pp.c:26527)
      FuncDecl: quals=None (at pp.c:26527)
        ParamList:  (at pp.c:26527)
          Decl: name='tx_buf', quals=[], storage=[] (at pp.c:26527)
            PtrDecl: quals=[] (at pp.c:26527)
              TypeDecl: declname='tx_buf', quals=[] (at pp.c:26527)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='rx_buf', quals=[], storage=[] (at pp.c:26527)
            PtrDecl: quals=[] (at pp.c:26527)
              TypeDecl: declname='rx_buf', quals=[] (at pp.c:26527)
                IdentifierType: names=['uint8_t'] (at None)
          Decl: name='len', quals=[], storage=[] (at pp.c:26528)
            TypeDecl: declname='len', quals=[] (at pp.c:26528)
              IdentifierType: names=['uint16_t'] (at None)
          Decl: name='error', quals=[], storage=[] (at pp.c:26528)
            TypeDecl: declname='error', quals=[] (at pp.c:26528)
              IdentifierType: names=['error_t'] (at None)
        TypeDecl: declname='CC2420SpiP__SpiPacket__sendDone', quals=[] (at pp.c:26527)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26530)
      If:  (at pp.c:26531)
        BinaryOp: op='&' (at pp.c:26531)
          ID: name='CC2420SpiP__m_addr' (at pp.c:26531)
          Constant: type='int', value='0x40' (at pp.c:26531)
        Compound:  (at pp.c:26531)
          FuncCall:  (at None)
            ID: name='CC2420SpiP__Fifo__readDone' (at pp.c:26532)
            ExprList:  (at pp.c:26532)
              BinaryOp: op='&' (at pp.c:26532)
                ID: name='CC2420SpiP__m_addr' (at pp.c:26532)
                UnaryOp: op='~' (at pp.c:26532)
                  Constant: type='int', value='0x40' (at pp.c:26532)
              ID: name='rx_buf' (at pp.c:26532)
              ID: name='len' (at pp.c:26532)
              ID: name='error' (at pp.c:26532)
        Compound:  (at pp.c:26536)
          FuncCall:  (at None)
            ID: name='CC2420SpiP__Fifo__writeDone' (at pp.c:26537)
            ExprList:  (at pp.c:26537)
              ID: name='CC2420SpiP__m_addr' (at pp.c:26537)
              ID: name='tx_buf' (at pp.c:26537)
              ID: name='len' (at pp.c:26537)
              ID: name='error' (at pp.c:26537)
  FuncDef:  (at pp.c:26542)
    Decl: name='CC2420ReceiveP__flush', quals=[], storage=['static'] (at pp.c:26542)
      FuncDecl: quals=None (at pp.c:26542)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__flush', quals=[] (at pp.c:26542)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26544)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__reset_state' (at pp.c:26553)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__CSN__set' (at pp.c:26555)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__CSN__clr' (at pp.c:26556)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__SFLUSHRX__strobe' (at pp.c:26557)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__SFLUSHRX__strobe' (at pp.c:26558)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__CSN__set' (at pp.c:26559)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__SpiResource__release' (at pp.c:26560)
      FuncCall:  (at None)
        ID: name='CC2420ReceiveP__waitForNextPacket' (at pp.c:26561)
  FuncDef:  (at pp.c:26565)
    Decl: name='CC2420ReceiveP__reset_state', quals=[], storage=['static'] (at pp.c:26565)
      FuncDecl: quals=None (at pp.c:26565)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ReceiveP__reset_state', quals=[] (at pp.c:26565)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26567)
      Assignment: op='=' (at pp.c:26568)
        ID: name='CC2420ReceiveP__m_bytes_left' (at pp.c:26568)
        ID: name='CC2420ReceiveP__RXFIFO_SIZE' (at pp.c:26568)
      Assignment: op='=' (at pp.c:26571)
        ID: name='CC2420ReceiveP__receivingPacket' (at pp.c:26571)
        ID: name='FALSE' (at pp.c:26571)
      Assignment: op='=' (at pp.c:26572)
        ID: name='CC2420ReceiveP__m_timestamp_head' (at pp.c:26572)
        Constant: type='int', value='0' (at pp.c:26572)
      Assignment: op='=' (at pp.c:26573)
        ID: name='CC2420ReceiveP__m_timestamp_size' (at pp.c:26573)
        Constant: type='int', value='0' (at pp.c:26573)
      Assignment: op='=' (at pp.c:26574)
        ID: name='CC2420ReceiveP__m_missed_packets' (at pp.c:26574)
        Constant: type='int', value='0' (at pp.c:26574)
  FuncDef:  (at pp.c:26578)
    Decl: name='CC2420ControlP__writeFsctrl', quals=[], storage=['static'] (at pp.c:26578)
      FuncDecl: quals=None (at pp.c:26578)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__writeFsctrl', quals=[] (at pp.c:26578)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26580)
      Decl: name='channel', quals=[], storage=[] (at pp.c:26581)
        TypeDecl: declname='channel', quals=[] (at pp.c:26581)
          IdentifierType: names=['uint8_t'] (at None)
      Compound:  (at pp.c:26583)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:26583)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:26583)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:26583)
        Compound:  (at pp.c:26585)
          Assignment: op='=' (at pp.c:26586)
            ID: name='channel' (at pp.c:26586)
            ID: name='CC2420ControlP__m_channel' (at pp.c:26586)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:26589)
          ExprList:  (at pp.c:26589)
            ID: name='__nesc_atomic' (at pp.c:26589)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__FSCTRL__write' (at pp.c:26591)
        ExprList:  (at pp.c:26591)
          BinaryOp: op='|' (at pp.c:26591)
            BinaryOp: op='<<' (at pp.c:26591)
              Constant: type='int', value='1' (at pp.c:26591)
              ID: name='CC2420_FSCTRL_LOCK_THR' (at pp.c:26591)
            BinaryOp: op='<<' (at pp.c:26592)
              BinaryOp: op='+' (at pp.c:26592)
                BinaryOp: op='*' (at pp.c:26592)
                  BinaryOp: op='-' (at pp.c:26592)
                    ID: name='channel' (at pp.c:26592)
                    Constant: type='int', value='11' (at pp.c:26592)
                  Constant: type='int', value='5' (at pp.c:26592)
                Constant: type='int', value='357' (at pp.c:26592)
              ID: name='CC2420_FSCTRL_FREQ' (at pp.c:26592)
  FuncDef:  (at pp.c:26601)
    Decl: name='CC2420ControlP__writeMdmctrl0', quals=[], storage=['static'] (at pp.c:26601)
      FuncDecl: quals=None (at pp.c:26601)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__writeMdmctrl0', quals=[] (at pp.c:26601)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26603)
      Compound:  (at pp.c:26604)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:26604)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:26604)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:26604)
        Compound:  (at pp.c:26606)
          FuncCall:  (at None)
            ID: name='CC2420ControlP__MDMCTRL0__write' (at pp.c:26607)
            ExprList:  (at pp.c:26607)
              BinaryOp: op='|' (at pp.c:26607)
                BinaryOp: op='|' (at pp.c:26607)
                  BinaryOp: op='|' (at pp.c:26607)
                    BinaryOp: op='|' (at pp.c:26607)
                      BinaryOp: op='|' (at pp.c:26607)
                        BinaryOp: op='|' (at pp.c:26607)
                          BinaryOp: op='|' (at pp.c:26607)
                            BinaryOp: op='<<' (at pp.c:26607)
                              Constant: type='int', value='1' (at pp.c:26607)
                              ID: name='CC2420_MDMCTRL0_RESERVED_FRAME_MODE' (at pp.c:26607)
                            BinaryOp: op='<<' (at pp.c:26608)
                              TernaryOp:  (at pp.c:26608)
                                BinaryOp: op='&&' (at pp.c:26608)
                                  ID: name='CC2420ControlP__addressRecognition' (at pp.c:26608)
                                  ID: name='CC2420ControlP__hwAddressRecognition' (at pp.c:26608)
                                Constant: type='int', value='1' (at pp.c:26608)
                                Constant: type='int', value='0' (at pp.c:26608)
                              ID: name='CC2420_MDMCTRL0_ADR_DECODE' (at pp.c:26608)
                          BinaryOp: op='<<' (at pp.c:26609)
                            Constant: type='int', value='2' (at pp.c:26609)
                            ID: name='CC2420_MDMCTRL0_CCA_HYST' (at pp.c:26609)
                        BinaryOp: op='<<' (at pp.c:26610)
                          Constant: type='int', value='3' (at pp.c:26610)
                          ID: name='CC2420_MDMCTRL0_CCA_MOD' (at pp.c:26610)
                      BinaryOp: op='<<' (at pp.c:26611)
                        Constant: type='int', value='1' (at pp.c:26611)
                        ID: name='CC2420_MDMCTRL0_AUTOCRC' (at pp.c:26611)
                    BinaryOp: op='<<' (at pp.c:26612)
                      BinaryOp: op='&&' (at pp.c:26612)
                        ID: name='CC2420ControlP__autoAckEnabled' (at pp.c:26612)
                        ID: name='CC2420ControlP__hwAutoAckDefault' (at pp.c:26612)
                      ID: name='CC2420_MDMCTRL0_AUTOACK' (at pp.c:26612)
                  BinaryOp: op='<<' (at pp.c:26613)
                    Constant: type='int', value='0' (at pp.c:26613)
                    ID: name='CC2420_MDMCTRL0_AUTOACK' (at pp.c:26613)
                BinaryOp: op='<<' (at pp.c:26614)
                  Constant: type='int', value='2' (at pp.c:26614)
                  ID: name='CC2420_MDMCTRL0_PREAMBLE_LENGTH' (at pp.c:26614)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:26617)
          ExprList:  (at pp.c:26617)
            ID: name='__nesc_atomic' (at pp.c:26617)
  FuncDef:  (at pp.c:26626)
    Decl: name='CC2420ControlP__writeId', quals=[], storage=['static'] (at pp.c:26626)
      FuncDecl: quals=None (at pp.c:26626)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='CC2420ControlP__writeId', quals=[] (at pp.c:26626)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26628)
      Decl: name='id', quals=[], storage=[] (at pp.c:26629)
        ArrayDecl:  (at pp.c:26629)
          TypeDecl: declname='id', quals=[] (at pp.c:26629)
            IdentifierType: names=['nxle_uint16_t'] (at None)
          Constant: type='int', value='6' (at pp.c:26629)
      Compound:  (at pp.c:26631)
        Decl: name='__nesc_atomic', quals=[], storage=[] (at pp.c:26631)
          TypeDecl: declname='__nesc_atomic', quals=[] (at pp.c:26631)
            IdentifierType: names=['__nesc_atomic_t'] (at None)
          FuncCall:  (at None)
            ID: name='__nesc_atomic_start' (at pp.c:26631)
        Compound:  (at pp.c:26633)
          Assignment: op='=' (at None)
            UnaryOp: op='*' (at None)
              Cast:  (at None)
                Typename: quals=[] (at None)
                  PtrDecl: quals=[] (at pp.c:26634)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['ieee_eui64_t'] (at None)
                UnaryOp: op='&' (at pp.c:26634)
                  ArrayRef:  (at pp.c:26634)
                    ID: name='id' (at pp.c:26634)
                    Constant: type='int', value='0' (at pp.c:26634)
            ID: name='CC2420ControlP__m_ext_addr' (at pp.c:26634)
          FuncCall:  (at None)
            ID: name='__nesc_hton_leuint16' (at pp.c:26635)
            ExprList:  (at pp.c:26635)
              StructRef: type='.' (at pp.c:26635)
                ArrayRef:  (at pp.c:26635)
                  ID: name='id' (at pp.c:26635)
                  Constant: type='int', value='4' (at pp.c:26635)
                ID: name='nxdata' (at pp.c:26635)
              ID: name='CC2420ControlP__m_pan' (at pp.c:26635)
          FuncCall:  (at None)
            ID: name='__nesc_hton_leuint16' (at pp.c:26636)
            ExprList:  (at pp.c:26636)
              StructRef: type='.' (at pp.c:26636)
                ArrayRef:  (at pp.c:26636)
                  ID: name='id' (at pp.c:26636)
                  Constant: type='int', value='5' (at pp.c:26636)
                ID: name='nxdata' (at pp.c:26636)
              ID: name='CC2420ControlP__m_short_addr' (at pp.c:26636)
        FuncCall:  (at None)
          ID: name='__nesc_atomic_end' (at pp.c:26639)
          ExprList:  (at pp.c:26639)
            ID: name='__nesc_atomic' (at pp.c:26639)
      FuncCall:  (at None)
        ID: name='CC2420ControlP__IEEEADR__write' (at pp.c:26641)
        ExprList:  (at pp.c:26641)
          Constant: type='int', value='0' (at pp.c:26641)
          Cast:  (at None)
            Typename: quals=[] (at None)
              PtrDecl: quals=[] (at pp.c:26641)
                TypeDecl: declname=None, quals=[] (at None)
                  IdentifierType: names=['uint8_t'] (at None)
            UnaryOp: op='&' (at pp.c:26641)
              ID: name='id' (at pp.c:26641)
          Constant: type='int', value='12' (at pp.c:26641)
  FuncDef:  (at pp.c:26645)
    Decl: name='HplAdc12P__HplAdc12__stopConversion', quals=[], storage=['static'] (at pp.c:26645)
      FuncDecl: quals=None (at pp.c:26645)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='HplAdc12P__HplAdc12__stopConversion', quals=[] (at pp.c:26645)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26647)
      Decl: name='ctl1', quals=[], storage=[] (at pp.c:26649)
        TypeDecl: declname='ctl1', quals=[] (at pp.c:26649)
          IdentifierType: names=['uint16_t'] (at None)
        ID: name='HplAdc12P__ADC12CTL1' (at pp.c:26649)
      Assignment: op='&=' (at pp.c:26652)
        ID: name='HplAdc12P__ADC12CTL1' (at pp.c:26652)
        UnaryOp: op='~' (at pp.c:26652)
          BinaryOp: op='|' (at pp.c:26652)
            Constant: type='int', value='0x0002' (at pp.c:26652)
            Constant: type='int', value='0x0004' (at pp.c:26652)
      Assignment: op='&=' (at pp.c:26653)
        ID: name='HplAdc12P__ADC12CTL0' (at pp.c:26653)
        UnaryOp: op='~' (at pp.c:26653)
          BinaryOp: op='+' (at pp.c:26653)
            Constant: type='int', value='0x0001' (at pp.c:26653)
            Constant: type='int', value='0x0002' (at pp.c:26653)
      Assignment: op='&=' (at pp.c:26654)
        ID: name='HplAdc12P__ADC12CTL0' (at pp.c:26654)
        UnaryOp: op='~' (at pp.c:26654)
          Constant: type='int', value='0x0010' (at pp.c:26654)
      Assignment: op='|=' (at pp.c:26655)
        ID: name='HplAdc12P__ADC12CTL1' (at pp.c:26655)
        BinaryOp: op='&' (at pp.c:26655)
          ID: name='ctl1' (at pp.c:26655)
          BinaryOp: op='|' (at pp.c:26655)
            Constant: type='int', value='0x0002' (at pp.c:26655)
            Constant: type='int', value='0x0004' (at pp.c:26655)
  FuncDef:  (at pp.c:26659)
    Decl: name='sig_PORT1_VECTOR', quals=[], storage=[] (at pp.c:26659)
      FuncDecl: quals=None (at pp.c:26659)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_PORT1_VECTOR', quals=[] (at pp.c:26659)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26660)
      Decl: name='n', quals=['volatile'], storage=[] (at pp.c:26661)
        TypeDecl: declname='n', quals=['volatile'] (at pp.c:26661)
          IdentifierType: names=['int'] (at None)
        BinaryOp: op='&' (at pp.c:26661)
          ID: name='P1IFG' (at pp.c:26661)
          ID: name='P1IE' (at pp.c:26661)
      If:  (at pp.c:26663)
        BinaryOp: op='&' (at pp.c:26663)
          ID: name='n' (at pp.c:26663)
          BinaryOp: op='<<' (at pp.c:26663)
            Constant: type='int', value='1' (at pp.c:26663)
            Constant: type='int', value='0' (at pp.c:26663)
        Compound:  (at pp.c:26663)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port10__fired' (at pp.c:26665)
          Return:  (at pp.c:26667)
      If:  (at pp.c:26670)
        BinaryOp: op='&' (at pp.c:26670)
          ID: name='n' (at pp.c:26670)
          BinaryOp: op='<<' (at pp.c:26670)
            Constant: type='int', value='1' (at pp.c:26670)
            Constant: type='int', value='1' (at pp.c:26670)
        Compound:  (at pp.c:26670)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port11__fired' (at pp.c:26672)
          Return:  (at pp.c:26674)
      If:  (at pp.c:26677)
        BinaryOp: op='&' (at pp.c:26677)
          ID: name='n' (at pp.c:26677)
          BinaryOp: op='<<' (at pp.c:26677)
            Constant: type='int', value='1' (at pp.c:26677)
            Constant: type='int', value='2' (at pp.c:26677)
        Compound:  (at pp.c:26677)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port12__fired' (at pp.c:26679)
          Return:  (at pp.c:26681)
      If:  (at pp.c:26684)
        BinaryOp: op='&' (at pp.c:26684)
          ID: name='n' (at pp.c:26684)
          BinaryOp: op='<<' (at pp.c:26684)
            Constant: type='int', value='1' (at pp.c:26684)
            Constant: type='int', value='3' (at pp.c:26684)
        Compound:  (at pp.c:26684)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port13__fired' (at pp.c:26686)
          Return:  (at pp.c:26688)
      If:  (at pp.c:26691)
        BinaryOp: op='&' (at pp.c:26691)
          ID: name='n' (at pp.c:26691)
          BinaryOp: op='<<' (at pp.c:26691)
            Constant: type='int', value='1' (at pp.c:26691)
            Constant: type='int', value='4' (at pp.c:26691)
        Compound:  (at pp.c:26691)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port14__fired' (at pp.c:26693)
          Return:  (at pp.c:26695)
      If:  (at pp.c:26698)
        BinaryOp: op='&' (at pp.c:26698)
          ID: name='n' (at pp.c:26698)
          BinaryOp: op='<<' (at pp.c:26698)
            Constant: type='int', value='1' (at pp.c:26698)
            Constant: type='int', value='5' (at pp.c:26698)
        Compound:  (at pp.c:26698)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port15__fired' (at pp.c:26700)
          Return:  (at pp.c:26702)
      If:  (at pp.c:26705)
        BinaryOp: op='&' (at pp.c:26705)
          ID: name='n' (at pp.c:26705)
          BinaryOp: op='<<' (at pp.c:26705)
            Constant: type='int', value='1' (at pp.c:26705)
            Constant: type='int', value='6' (at pp.c:26705)
        Compound:  (at pp.c:26705)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port16__fired' (at pp.c:26707)
          Return:  (at pp.c:26709)
      If:  (at pp.c:26712)
        BinaryOp: op='&' (at pp.c:26712)
          ID: name='n' (at pp.c:26712)
          BinaryOp: op='<<' (at pp.c:26712)
            Constant: type='int', value='1' (at pp.c:26712)
            Constant: type='int', value='7' (at pp.c:26712)
        Compound:  (at pp.c:26712)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port17__fired' (at pp.c:26714)
          Return:  (at pp.c:26716)
  FuncDef:  (at pp.c:26721)
    Decl: name='sig_PORT2_VECTOR', quals=[], storage=[] (at pp.c:26721)
      FuncDecl: quals=None (at pp.c:26721)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_PORT2_VECTOR', quals=[] (at pp.c:26721)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26722)
      Decl: name='n', quals=['volatile'], storage=[] (at pp.c:26723)
        TypeDecl: declname='n', quals=['volatile'] (at pp.c:26723)
          IdentifierType: names=['int'] (at None)
        BinaryOp: op='&' (at pp.c:26723)
          ID: name='P2IFG' (at pp.c:26723)
          ID: name='P2IE' (at pp.c:26723)
      If:  (at pp.c:26725)
        BinaryOp: op='&' (at pp.c:26725)
          ID: name='n' (at pp.c:26725)
          BinaryOp: op='<<' (at pp.c:26725)
            Constant: type='int', value='1' (at pp.c:26725)
            Constant: type='int', value='0' (at pp.c:26725)
        Compound:  (at pp.c:26725)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port20__fired' (at pp.c:26727)
          Return:  (at pp.c:26729)
      If:  (at pp.c:26732)
        BinaryOp: op='&' (at pp.c:26732)
          ID: name='n' (at pp.c:26732)
          BinaryOp: op='<<' (at pp.c:26732)
            Constant: type='int', value='1' (at pp.c:26732)
            Constant: type='int', value='1' (at pp.c:26732)
        Compound:  (at pp.c:26732)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port21__fired' (at pp.c:26734)
          Return:  (at pp.c:26736)
      If:  (at pp.c:26739)
        BinaryOp: op='&' (at pp.c:26739)
          ID: name='n' (at pp.c:26739)
          BinaryOp: op='<<' (at pp.c:26739)
            Constant: type='int', value='1' (at pp.c:26739)
            Constant: type='int', value='2' (at pp.c:26739)
        Compound:  (at pp.c:26739)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port22__fired' (at pp.c:26741)
          Return:  (at pp.c:26743)
      If:  (at pp.c:26746)
        BinaryOp: op='&' (at pp.c:26746)
          ID: name='n' (at pp.c:26746)
          BinaryOp: op='<<' (at pp.c:26746)
            Constant: type='int', value='1' (at pp.c:26746)
            Constant: type='int', value='3' (at pp.c:26746)
        Compound:  (at pp.c:26746)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port23__fired' (at pp.c:26748)
          Return:  (at pp.c:26750)
      If:  (at pp.c:26753)
        BinaryOp: op='&' (at pp.c:26753)
          ID: name='n' (at pp.c:26753)
          BinaryOp: op='<<' (at pp.c:26753)
            Constant: type='int', value='1' (at pp.c:26753)
            Constant: type='int', value='4' (at pp.c:26753)
        Compound:  (at pp.c:26753)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port24__fired' (at pp.c:26755)
          Return:  (at pp.c:26757)
      If:  (at pp.c:26760)
        BinaryOp: op='&' (at pp.c:26760)
          ID: name='n' (at pp.c:26760)
          BinaryOp: op='<<' (at pp.c:26760)
            Constant: type='int', value='1' (at pp.c:26760)
            Constant: type='int', value='5' (at pp.c:26760)
        Compound:  (at pp.c:26760)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port25__fired' (at pp.c:26762)
          Return:  (at pp.c:26764)
      If:  (at pp.c:26767)
        BinaryOp: op='&' (at pp.c:26767)
          ID: name='n' (at pp.c:26767)
          BinaryOp: op='<<' (at pp.c:26767)
            Constant: type='int', value='1' (at pp.c:26767)
            Constant: type='int', value='6' (at pp.c:26767)
        Compound:  (at pp.c:26767)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port26__fired' (at pp.c:26769)
          Return:  (at pp.c:26771)
      If:  (at pp.c:26774)
        BinaryOp: op='&' (at pp.c:26774)
          ID: name='n' (at pp.c:26774)
          BinaryOp: op='<<' (at pp.c:26774)
            Constant: type='int', value='1' (at pp.c:26774)
            Constant: type='int', value='7' (at pp.c:26774)
        Compound:  (at pp.c:26774)
          FuncCall:  (at None)
            ID: name='HplMsp430InterruptP__Port27__fired' (at pp.c:26776)
          Return:  (at pp.c:26778)
  FuncDef:  (at pp.c:26783)
    Decl: name='sig_UART0RX_VECTOR', quals=[], storage=[] (at pp.c:26783)
      FuncDecl: quals=None (at pp.c:26783)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_UART0RX_VECTOR', quals=[] (at pp.c:26783)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26785)
      Decl: name='temp', quals=[], storage=[] (at pp.c:26786)
        TypeDecl: declname='temp', quals=[] (at pp.c:26786)
          IdentifierType: names=['uint8_t'] (at None)
        ID: name='U0RXBUF' (at pp.c:26786)
      FuncCall:  (at None)
        ID: name='HplMsp430Usart0P__Interrupts__rxDone' (at pp.c:26789)
        ExprList:  (at pp.c:26789)
          ID: name='temp' (at pp.c:26789)
  FuncDef:  (at pp.c:26793)
    Decl: name='ArbiterP__0__ArbiterInfo__inUse', quals=[], storage=['static'] (at pp.c:26793)
      FuncDecl: quals=None (at pp.c:26793)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__ArbiterInfo__inUse', quals=[] (at pp.c:26793)
          IdentifierType: names=['bool'] (at None)
    Compound:  (at pp.c:26795)
      Compound:  (at pp.c:26798)
        If:  (at pp.c:26799)
          BinaryOp: op='==' (at pp.c:26799)
            ID: name='ArbiterP__0__state' (at pp.c:26799)
            ID: name='ArbiterP__0__RES_CONTROLLED' (at pp.c:26799)
          Compound:  (at pp.c:26800)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:26801)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:26801)
                IdentifierType: names=['char', 'unsigned'] (at None)
              ID: name='FALSE' (at pp.c:26803)
            Return:  (at pp.c:26806)
              ID: name='__nesc_temp' (at pp.c:26806)
      Return:  (at pp.c:26810)
        ID: name='TRUE' (at pp.c:26810)
  FuncDef:  (at pp.c:26818)
    Decl: name='ArbiterP__0__ArbiterInfo__userId', quals=[], storage=['static'] (at pp.c:26818)
      FuncDecl: quals=None (at pp.c:26818)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='ArbiterP__0__ArbiterInfo__userId', quals=[] (at pp.c:26818)
          IdentifierType: names=['uint8_t'] (at None)
    Compound:  (at pp.c:26820)
      Compound:  (at pp.c:26823)
        If:  (at pp.c:26824)
          BinaryOp: op='!=' (at pp.c:26824)
            ID: name='ArbiterP__0__state' (at pp.c:26824)
            ID: name='ArbiterP__0__RES_BUSY' (at pp.c:26824)
          Compound:  (at pp.c:26825)
            Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:26826)
              TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:26826)
                IdentifierType: names=['char', 'unsigned'] (at None)
              ID: name='ArbiterP__0__NO_RES' (at pp.c:26828)
            Return:  (at pp.c:26831)
              ID: name='__nesc_temp' (at pp.c:26831)
        Compound:  (at pp.c:26834)
          Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:26835)
            TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:26835)
              IdentifierType: names=['char', 'unsigned'] (at None)
            ID: name='ArbiterP__0__resId' (at pp.c:26837)
          Return:  (at pp.c:26840)
            ID: name='__nesc_temp' (at pp.c:26840)
  FuncDef:  (at pp.c:26846)
    Decl: name='sig_UART0TX_VECTOR', quals=[], storage=[] (at pp.c:26846)
      FuncDecl: quals=None (at pp.c:26846)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_UART0TX_VECTOR', quals=[] (at pp.c:26846)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26848)
      If:  (at pp.c:26849)
        FuncCall:  (at None)
          ID: name='HplMsp430Usart0P__HplI2C__isI2C' (at pp.c:26849)
        Compound:  (at pp.c:26849)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart0P__I2CInterrupts__fired' (at pp.c:26850)
        Compound:  (at pp.c:26852)
          FuncCall:  (at None)
            ID: name='HplMsp430Usart0P__Interrupts__txDone' (at pp.c:26854)
  FuncDef:  (at pp.c:26859)
    Decl: name='sig_ADC_VECTOR', quals=[], storage=[] (at pp.c:26859)
      FuncDecl: quals=None (at pp.c:26859)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='sig_ADC_VECTOR', quals=[] (at pp.c:26859)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26861)
      FuncCall:  (at None)
        ID: name='HplAdc12P__HplAdc12__conversionDone' (at pp.c:26862)
        ExprList:  (at pp.c:26862)
          ID: name='HplAdc12P__ADC12IV' (at pp.c:26862)
  FuncDef:  (at pp.c:26866)
    Decl: name='Msp430Adc12ImplP__stopConversion', quals=[], storage=['static'] (at pp.c:26866)
      FuncDecl: quals=None (at pp.c:26866)
        ParamList:  (at None)
          Typename: quals=[] (at None)
            TypeDecl: declname=None, quals=[] (at None)
              IdentifierType: names=['void'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__stopConversion', quals=[] (at pp.c:26866)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26867)
      Decl: name='i', quals=[], storage=[] (at pp.c:26868)
        TypeDecl: declname='i', quals=[] (at pp.c:26868)
          IdentifierType: names=['uint8_t'] (at None)
      If:  (at pp.c:26870)
        BinaryOp: op='&' (at pp.c:26870)
          ID: name='Msp430Adc12ImplP__state' (at pp.c:26870)
          ID: name='Msp430Adc12ImplP__USE_TIMERA' (at pp.c:26870)
        Compound:  (at pp.c:26870)
          FuncCall:  (at None)
            ID: name='Msp430Adc12ImplP__TimerA__setMode' (at pp.c:26871)
            ExprList:  (at pp.c:26871)
              ID: name='MSP430TIMER_STOP_MODE' (at pp.c:26871)
      FuncCall:  (at None)
        ID: name='Msp430Adc12ImplP__resetAdcPin' (at pp.c:26873)
        ExprList:  (at None)
          StructRef: type='.' (at None)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__HplAdc12__getMCtl' (at pp.c:26873)
              ExprList:  (at pp.c:26873)
                Constant: type='int', value='0' (at pp.c:26873)
            ID: name='inch' (at pp.c:26873)
      If:  (at pp.c:26874)
        BinaryOp: op='&' (at pp.c:26874)
          ID: name='Msp430Adc12ImplP__state' (at pp.c:26874)
          ID: name='Msp430Adc12ImplP__MULTI_CHANNEL' (at pp.c:26874)
        Compound:  (at pp.c:26874)
          For:  (at pp.c:26875)
            Assignment: op='=' (at pp.c:26875)
              ID: name='i' (at pp.c:26875)
              Constant: type='int', value='1' (at pp.c:26875)
            BinaryOp: op='<' (at pp.c:26875)
              ID: name='i' (at pp.c:26875)
              ID: name='Msp430Adc12ImplP__numChannels' (at pp.c:26875)
            UnaryOp: op='p++' (at pp.c:26875)
              ID: name='i' (at pp.c:26875)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__resetAdcPin' (at pp.c:26876)
              ExprList:  (at None)
                StructRef: type='.' (at None)
                  FuncCall:  (at None)
                    ID: name='Msp430Adc12ImplP__HplAdc12__getMCtl' (at pp.c:26876)
                    ExprList:  (at pp.c:26876)
                      ID: name='i' (at pp.c:26876)
                  ID: name='inch' (at pp.c:26876)
      Compound:  (at pp.c:26880)
        FuncCall:  (at None)
          ID: name='Msp430Adc12ImplP__HplAdc12__stopConversion' (at pp.c:26881)
        FuncCall:  (at None)
          ID: name='Msp430Adc12ImplP__HplAdc12__resetIFGs' (at pp.c:26882)
        Assignment: op='&=' (at pp.c:26883)
          ID: name='Msp430Adc12ImplP__state' (at pp.c:26883)
          UnaryOp: op='~' (at pp.c:26883)
            ID: name='Msp430Adc12ImplP__ADC_BUSY' (at pp.c:26883)
  FuncDef:  (at pp.c:26888)
    Decl: name='Msp430Adc12ImplP__resetAdcPin', quals=[], storage=['static'] (at pp.c:26888)
      FuncDecl: quals=None (at pp.c:26888)
        ParamList:  (at pp.c:26888)
          Decl: name='inch', quals=[], storage=[] (at pp.c:26888)
            TypeDecl: declname='inch', quals=[] (at pp.c:26888)
              IdentifierType: names=['uint8_t'] (at None)
        TypeDecl: declname='Msp430Adc12ImplP__resetAdcPin', quals=[] (at pp.c:26888)
          IdentifierType: names=['void'] (at None)
    Compound:  (at pp.c:26889)
      Switch:  (at pp.c:26891)
        ID: name='inch' (at pp.c:26891)
        Compound:  (at pp.c:26892)
          Case:  (at pp.c:26893)
            Constant: type='int', value='0' (at pp.c:26893)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port60__selectIOFunc' (at pp.c:26893)
          Break:  (at pp.c:26895)
          Case:  (at pp.c:26896)
            Constant: type='int', value='1' (at pp.c:26896)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port61__selectIOFunc' (at pp.c:26896)
          Break:  (at pp.c:26898)
          Case:  (at pp.c:26899)
            Constant: type='int', value='2' (at pp.c:26899)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port62__selectIOFunc' (at pp.c:26899)
          Break:  (at pp.c:26901)
          Case:  (at pp.c:26902)
            Constant: type='int', value='3' (at pp.c:26902)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port63__selectIOFunc' (at pp.c:26902)
          Break:  (at pp.c:26904)
          Case:  (at pp.c:26905)
            Constant: type='int', value='4' (at pp.c:26905)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port64__selectIOFunc' (at pp.c:26905)
          Break:  (at pp.c:26907)
          Case:  (at pp.c:26908)
            Constant: type='int', value='5' (at pp.c:26908)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port65__selectIOFunc' (at pp.c:26908)
          Break:  (at pp.c:26910)
          Case:  (at pp.c:26911)
            Constant: type='int', value='6' (at pp.c:26911)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port66__selectIOFunc' (at pp.c:26911)
          Break:  (at pp.c:26913)
          Case:  (at pp.c:26914)
            Constant: type='int', value='7' (at pp.c:26914)
            FuncCall:  (at None)
              ID: name='Msp430Adc12ImplP__Port67__selectIOFunc' (at pp.c:26914)
          Break:  (at pp.c:26916)
  FuncDef:  (at pp.c:26921)
    Decl: name='AdcP__SingleChannel__singleDataReady', quals=[], storage=['static'] (at pp.c:26921)
      FuncDecl: quals=None (at pp.c:26921)
        ParamList:  (at pp.c:26921)
          Decl: name='client', quals=[], storage=[] (at pp.c:26921)
            TypeDecl: declname='client', quals=[] (at pp.c:26921)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:26921)
            TypeDecl: declname='data', quals=[] (at pp.c:26921)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='AdcP__SingleChannel__singleDataReady', quals=[] (at pp.c:26921)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:26922)
      Switch:  (at pp.c:26923)
        ID: name='AdcP__state' (at pp.c:26923)
        Compound:  (at pp.c:26924)
          Case:  (at pp.c:26925)
            ID: name='AdcP__STATE_READ' (at pp.c:26925)
            Assignment: op='=' (at pp.c:26926)
              ID: name='AdcP__owner' (at pp.c:26926)
              ID: name='client' (at pp.c:26926)
          Assignment: op='=' (at pp.c:26927)
            ID: name='AdcP__value' (at pp.c:26927)
            ID: name='data' (at pp.c:26927)
          FuncCall:  (at None)
            ID: name='AdcP__readDone__postTask' (at pp.c:26928)
          Break:  (at pp.c:26929)
          Case:  (at pp.c:26930)
            ID: name='AdcP__STATE_READNOW' (at pp.c:26930)
            FuncCall:  (at None)
              ID: name='AdcP__ReadNow__readDone' (at pp.c:26931)
              ExprList:  (at pp.c:26931)
                ID: name='client' (at pp.c:26931)
                ID: name='SUCCESS' (at pp.c:26931)
                ID: name='data' (at pp.c:26931)
          Break:  (at pp.c:26932)
          Default:  (at pp.c:26933)
            Break:  (at pp.c:26935)
      Return:  (at pp.c:26937)
        ID: name='SUCCESS' (at pp.c:26937)
  FuncDef:  (at pp.c:26941)
    Decl: name='AdcStreamP__SingleChannel__singleDataReady', quals=[], storage=['static'] (at pp.c:26941)
      FuncDecl: quals=None (at pp.c:26941)
        ParamList:  (at pp.c:26941)
          Decl: name='streamClient', quals=[], storage=[] (at pp.c:26941)
            TypeDecl: declname='streamClient', quals=[] (at pp.c:26941)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='data', quals=[], storage=[] (at pp.c:26941)
            TypeDecl: declname='data', quals=[] (at pp.c:26941)
              IdentifierType: names=['uint16_t'] (at None)
        TypeDecl: declname='AdcStreamP__SingleChannel__singleDataReady', quals=[] (at pp.c:26941)
          IdentifierType: names=['error_t'] (at None)
    Compound:  (at pp.c:26942)
      If:  (at pp.c:26943)
        BinaryOp: op='==' (at pp.c:26943)
          ID: name='AdcStreamP__client' (at pp.c:26943)
          ID: name='AdcStreamP__NSTREAM' (at pp.c:26943)
        Compound:  (at pp.c:26943)
          Return:  (at pp.c:26944)
            ID: name='FAIL' (at pp.c:26944)
      If:  (at pp.c:26946)
        BinaryOp: op='==' (at pp.c:26946)
          ID: name='AdcStreamP__count' (at pp.c:26946)
          Constant: type='int', value='0' (at pp.c:26946)
        Compound:  (at pp.c:26947)
          Assignment: op='=' (at pp.c:26948)
            ID: name='AdcStreamP__now' (at pp.c:26948)
            FuncCall:  (at None)
              ID: name='AdcStreamP__Alarm__getNow' (at pp.c:26948)
          FuncCall:  (at None)
            ID: name='AdcStreamP__nextBuffer' (at pp.c:26949)
            ExprList:  (at pp.c:26949)
              ID: name='TRUE' (at pp.c:26949)
        Compound:  (at pp.c:26952)
          Assignment: op='=' (at pp.c:26953)
            UnaryOp: op='*' (at pp.c:26953)
              UnaryOp: op='p++' (at pp.c:26953)
                ID: name='AdcStreamP__pos' (at pp.c:26953)
            ID: name='data' (at pp.c:26953)
          If:  (at pp.c:26954)
            BinaryOp: op='==' (at pp.c:26954)
              ID: name='AdcStreamP__pos' (at pp.c:26954)
              BinaryOp: op='+' (at pp.c:26954)
                ID: name='AdcStreamP__buffer' (at pp.c:26954)
                ID: name='AdcStreamP__count' (at pp.c:26954)
            Compound:  (at pp.c:26955)
              Compound:  (at pp.c:26957)
                If:  (at pp.c:26958)
                  ID: name='AdcStreamP__lastBuffer' (at pp.c:26958)
                  Compound:  (at pp.c:26959)
                    Assignment: op='=' (at pp.c:26961)
                      ArrayRef:  (at pp.c:26961)
                        ID: name='AdcStreamP__bufferQueueEnd' (at pp.c:26961)
                        ID: name='AdcStreamP__client' (at pp.c:26961)
                      Cast:  (at None)
                        Typename: quals=[] (at None)
                          PtrDecl: quals=[] (at pp.c:26961)
                            TypeDecl: declname=None, quals=[] (at None)
                              IdentifierType: names=['void'] (at None)
                        Constant: type='int', value='0' (at pp.c:26961)
                    FuncCall:  (at None)
                      ID: name='AdcStreamP__readStreamFail__postTask' (at pp.c:26962)
                    Compound:  (at pp.c:26963)
                      Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:26964)
                        TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:26964)
                          IdentifierType: names=['char', 'unsigned'] (at None)
                        ID: name='FAIL' (at pp.c:26966)
                      Return:  (at pp.c:26969)
                        ID: name='__nesc_temp' (at pp.c:26969)
                  Compound:  (at pp.c:26972)
                    Assignment: op='=' (at pp.c:26973)
                      ID: name='AdcStreamP__lastCount' (at pp.c:26973)
                      ID: name='AdcStreamP__count' (at pp.c:26973)
                    Assignment: op='=' (at pp.c:26974)
                      ID: name='AdcStreamP__lastBuffer' (at pp.c:26974)
                      ID: name='AdcStreamP__buffer' (at pp.c:26974)
              FuncCall:  (at None)
                ID: name='AdcStreamP__bufferDone__postTask' (at pp.c:26977)
              FuncCall:  (at None)
                ID: name='AdcStreamP__nextBuffer' (at pp.c:26978)
                ExprList:  (at pp.c:26978)
                  ID: name='TRUE' (at pp.c:26978)
            Compound:  (at pp.c:26980)
              FuncCall:  (at None)
                ID: name='AdcStreamP__nextAlarm' (at pp.c:26981)
      Return:  (at pp.c:26985)
        ID: name='FAIL' (at pp.c:26985)
  FuncDef:  (at pp.c:26988)
    Decl: name='AdcStreamP__SingleChannel__multipleDataReady', quals=[], storage=['static'] (at pp.c:26988)
      FuncDecl: quals=None (at pp.c:26988)
        ParamList:  (at pp.c:26988)
          Decl: name='streamClient', quals=[], storage=[] (at pp.c:26988)
            TypeDecl: declname='streamClient', quals=[] (at pp.c:26988)
              IdentifierType: names=['uint8_t'] (at None)
          Decl: name='buf', quals=[], storage=[] (at pp.c:26989)
            PtrDecl: quals=[] (at pp.c:26989)
              TypeDecl: declname='buf', quals=[] (at pp.c:26989)
                IdentifierType: names=['uint16_t'] (at None)
          Decl: name='length', quals=[], storage=[] (at pp.c:26989)
            TypeDecl: declname='length', quals=[] (at pp.c:26989)
              IdentifierType: names=['uint16_t'] (at None)
        PtrDecl: quals=[] (at pp.c:26988)
          TypeDecl: declname='AdcStreamP__SingleChannel__multipleDataReady', quals=[] (at pp.c:26988)
            IdentifierType: names=['uint16_t'] (at None)
    Compound:  (at pp.c:26990)
      Compound:  (at pp.c:26992)
        If:  (at pp.c:26993)
          ID: name='AdcStreamP__lastBuffer' (at pp.c:26993)
          Compound:  (at pp.c:26994)
            Assignment: op='=' (at pp.c:26996)
              ArrayRef:  (at pp.c:26996)
                ID: name='AdcStreamP__bufferQueueEnd' (at pp.c:26996)
                ID: name='AdcStreamP__client' (at pp.c:26996)
              Cast:  (at None)
                Typename: quals=[] (at None)
                  PtrDecl: quals=[] (at pp.c:26996)
                    TypeDecl: declname=None, quals=[] (at None)
                      IdentifierType: names=['void'] (at None)
                Constant: type='int', value='0' (at pp.c:26996)
            FuncCall:  (at None)
              ID: name='AdcStreamP__readStreamFail__postTask' (at pp.c:26997)
            Compound:  (at pp.c:26998)
              Decl: name='__nesc_temp', quals=[], storage=[] (at pp.c:26999)
                PtrDecl: quals=[] (at pp.c:26999)
                  TypeDecl: declname='__nesc_temp', quals=[] (at pp.c:26999)
                    IdentifierType: names=['int', 'unsigned'] (at None)
                Constant: type='int', value='0' (at pp.c:27001)
              Return:  (at pp.c:27004)
                ID: name='__nesc_temp' (at pp.c:27004)
          Compound:  (at pp.c:27007)
            Assignment: op='=' (at pp.c:27008)
              ID: name='AdcStreamP__lastBuffer' (at pp.c:27008)
              ID: name='AdcStreamP__buffer' (at pp.c:27008)
            Assignment: op='=' (at pp.c:27009)
              ID: name='AdcStreamP__lastCount' (at pp.c:27009)
              BinaryOp: op='-' (at pp.c:27009)
                ID: name='AdcStreamP__pos' (at pp.c:27009)
                ID: name='AdcStreamP__buffer' (at pp.c:27009)
      FuncCall:  (at None)
        ID: name='AdcStreamP__bufferDone__postTask' (at pp.c:27012)
      FuncCall:  (at None)
        ID: name='AdcStreamP__nextMultiple' (at pp.c:27013)
        ExprList:  (at pp.c:27013)
          ID: name='streamClient' (at pp.c:27013)
      Return:  (at pp.c:27014)
        Constant: type='int', value='0' (at pp.c:27014)
[Log] Parsed preprocessed file into AST.
